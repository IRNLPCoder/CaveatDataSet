PostId,TypeId,IsBest,Score,API,Sentences
12918,2,0,8,java.util.HashMap,Please use any Map implementation instead like HashMap or TreeMap.
23445,1,0,31,java.util.HashMap,"Some more background info:  As far as I know, the oldSet and newSet are actually backed by ArrayList Each set contains less than 100 items, most likely max out at 20 This code is called frequently (measured in millions/day), although the sets seldom differ  My questions:  If I convert oldSet and newSet into HashMap<Foo> (order is not of concern here), with the IDs as keys, would it made the code easier to read and easier to compare?"
23944,2,0,8,java.util.HashMap,"As far as your questions: If I convert oldSet and newSet into HashMap (order is not of concern here), with the IDs as keys, would it made the code easier to read and easier to compare?"
27609,2,1,911,java.util.HashMap,"Also remember: When using a hash-based Collection or Map such as HashSet, LinkedHashSet, HashMap, Hashtable, or WeakHashMap, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection."
40119,1,0,66,java.util.HashMap,"Basically, I can tell that there are several hundred megabytes of hash table entries ([java.util.HashMap$Entry or something like that), but maps are used all over the place... Is there some way to search for large maps, or perhaps find general roots of large object trees?"
40471,1,0,1718,java.util.HashMap,Differences between HashMap and Hashtable?
40471,1,0,1718,java.util.HashMap,What are the differences between a HashMap and a Hashtable in Java?
24583680,2,0,2,java.util.HashMap,HashMap and HashTable some important points about hashmap and hashtable.
24583680,2,0,2,java.util.HashMap,Here HM it means HashMap and  HT it means HashTable.
24583680,2,0,2,java.util.HashMap,1) first difference is HashMap is not thread safe   While HashTable is ThreadSafe 2) HashMap  performance wise is better because it is not thread safe.
30108941,2,0,9,java.util.HashMap,Difference between HashMap and HashTable / HashMap vs HashTable   Synchronization or Thread Safe :  This is the most important difference between two .
30108941,2,0,9,java.util.HashMap,"HashMap is non synchronized and not thread safe.On the other hand, HashTable is thread safe and synchronized."
30108941,2,0,9,java.util.HashMap,When to use HashMap ?
30108941,2,0,9,java.util.HashMap,It is better off externally synchronizing a HashMap or using a ConcurrentMap implementation (e.g ConcurrentHashMap).HashMap is the subclass of the AbstractMap class.
30108941,2,0,9,java.util.HashMap,"Although Hashtable and HashMap has different superclasses but they both are implementations of the ""Map""  abstract data type."
40483,2,0,10,java.util.HashMap,"Based on the info here, I'd recommend going with HashMap."
13467173,2,0,26,java.util.HashMap,It provides comparisons between different data structures along with HashMap and Hashtable.
27293997,2,0,1,java.util.HashMap,3.One more notable difference between Hashtable and HashMap is that because of thread-safety and synchronization Hashtable is much slower than HashMap if used in Single threaded environment.
10372667,2,0,14,java.util.HashMap,"HashTable is synchronized, if you are using it in a single thread you can use HashMap, which is an unsynchronized version."
10372667,2,0,14,java.util.HashMap,"By the way if multiple threads access a HashMap concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally."
10372667,2,0,14,java.util.HashMap,HashMap can contain one null key and null values.
10372667,2,0,14,java.util.HashMap,"HashTable and HashMap are member of the Java Collections Framework (since Java 2 platform v1.2, HashTable was retrofitted to implement the Map interface)."
10372667,2,0,14,java.util.HashMap,HashMap doesn't guarantee the order in which elements are returned.
25348157,2,0,2,java.util.HashMap,"Old and classic topic, just want to add this helpful blog that explains this: http://blog.manishchhabra.com/2012/08/the-5-main-differences-betwen-hashmap-and-hashtable/ Blog by Manish Chhabra  The 5 main differences betwen HashMap and Hashtable HashMap and Hashtable both implement java.util.Map interface but there   are some differences that Java developers must understand to write   more efficient code."
25348157,2,0,2,java.util.HashMap,"One of the major differences between HashMap and Hashtable is that HashMap is non-synchronized whereas Hashtable is synchronized, which   means Hashtable is thread-safe and can be shared between multiple   threads but HashMap cannot be shared between multiple threads without   proper synchronization."
25348157,2,0,2,java.util.HashMap,"The HashMap class is roughly equivalent to Hashtable, except that it permits nulls."
25348157,2,0,2,java.util.HashMap,(HashMap allows null values as key and value whereas   Hashtable doesn’t allow nulls).
25348157,2,0,2,java.util.HashMap,The third significant difference between HashMap vs Hashtable is that Iterator in the HashMap is a fail-fast iterator while the   enumerator for the Hashtable is not and throw   ConcurrentModificationException if any other Thread modifies the map   structurally by adding or removing any element except Iterator’s own   remove() method.
25348157,2,0,2,java.util.HashMap,One more notable difference between Hashtable and HashMap is that because of thread-safety and synchronization Hashtable is much slower   than HashMap if used in Single threaded environment.
25348157,2,0,2,java.util.HashMap,"So if you don’t   need synchronization and HashMap is only used by one thread, it out   perform Hashtable in Java."
25348157,2,0,2,java.util.HashMap,HashMap does not guarantee that the order of the map will remain constant over time.
25348157,2,0,2,java.util.HashMap,Note that HashMap can be synchronized by code.
25348157,2,0,2,java.util.HashMap,In Summary there are significant differences between Hashtable and   HashMap in Java e.g.
40512,2,0,13,java.util.HashMap,"Hashtable is synchronized, whereas HashMap isn't."
40512,2,0,13,java.util.HashMap,"For non-threaded apps, use HashMap since they are otherwise the same in terms of functionality."
26291777,2,0,0,java.util.HashMap,"Check Here  Synchronization or Thread Safe : One of the major differences between   HashMap and Hashtable is that HashMap is non-synchronized whereas   Hashtable is synchronized, which means Hashtable is thread-safe and   can be shared between multiple threads but HashMap cannot be shared   between multiple threads without proper synchronization."
26291777,2,0,0,java.util.HashMap,"Null keys and null values : The HashMap class is roughly equivalent to   Hashtable, except that it permits nulls."
26291777,2,0,0,java.util.HashMap,(HashMap permits one null key   and multiple null values.
26291777,2,0,0,java.util.HashMap,Iterating the values: The third significant difference between HashMap   vs Hashtable is that Iterator in the HashMap is a fail-fast iterator   while the enumerator for the Hashtable is not and throw   ConcurrentModificationException if any other Thread modifies the map   structurally by adding or removing any element except Iterator’s own   remove() method.
26291777,2,0,0,java.util.HashMap,Default Capacity:  Hashmap: static final int DEFAULT_INITIAL_CAPACITY   =16  static final float DEFAULT_LOAD_FACTOR = 0.75f;  Hashtable:  static final int DEFAULT_INITIAL_CAPACITY = 11;   static final float   DEFAULT_LOAD_FACTOR = 0.75f; HashMap does not guarantee that the order of the map will remain   constant over time.
13797704,2,0,14,java.util.HashMap,HashMap and Hashtable have significant algorithmic differences as well.
13797704,2,0,14,java.util.HashMap,"HashMap will construct a hash table with power of two size, increase it dynamically such that you have at most about eight elements (collisions) in any bucket and will stir the elements very well for general element types."
13797704,2,0,14,java.util.HashMap,the closest prime number to your values domain size and this will result in better performance than HashMap i.e. less collisions for some cases.
13797704,2,0,14,java.util.HashMap,"Separate from the obvious differences discussed extensively in this question, I see the Hashtable as a ""manual drive"" car where you have better control over the hashing and the HashMap as the ""automatic drive"" counterpart that will generally perform well."
40522,2,0,22,java.util.HashMap,Hashtable is similar to the HashMap and has a similar interface.
40522,2,0,22,java.util.HashMap,"It is recommended that you use HashMap, unless you require support for legacy applications or you need synchronisation, as the Hashtables methods are synchronised."
14627155,2,0,4,java.util.HashMap,HashMap:- It is a class available inside java.util package and it is used to store the element in key and value format.
16018266,2,0,5,java.util.HashMap,"If you don't require thread safety, use HashMap which isn't threadsafe but faster and uses less memory."
20519518,2,0,8,java.util.HashMap,But you can still convert HashMap to synchronized by using Collections util class's synchronizedMap(Map m) function.
20519518,2,0,8,java.util.HashMap,"Where as HashMap allows one null key, and multiple null values."
22491742,2,0,4,java.util.HashMap,"My small contribution :   First and most significant different between Hashtable and HashMap is that, HashMap is not thread-safe  while Hashtable is a thread-safe collection."
22491742,2,0,4,java.util.HashMap,"Second important difference between Hashtable and HashMap is performance, since HashMap is not synchronized it perform better than Hashtable."
22491742,2,0,4,java.util.HashMap,Third difference on Hashtable vs HashMap is that Hashtable is obsolete class and you should be using ConcurrentHashMap in place of Hashtable in Java.
40548,2,0,38,java.util.HashMap,"In addition to what izb said, HashMap allows null values, whereas the Hashtable does not."
1041798,2,0,185,java.util.HashMap,"There's nothing about Hashtable that can't be done using HashMap or derivations of HashMap, so for new code, I don't see any justification for going back to Hashtable."
40878,2,1,1795,java.util.HashMap,"There are several differences between HashMap and Hashtable in Java:  Hashtable is synchronized, whereas HashMap is not."
40878,2,1,1795,java.util.HashMap,"This makes HashMap better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones."
40878,2,1,1795,java.util.HashMap,HashMap allows one null key and any number of null values.
40878,2,1,1795,java.util.HashMap,"One of HashMap's subclasses is LinkedHashMap, so in the event that you'd want predictable iteration order (which is insertion order by default), you could easily swap out the HashMap for a LinkedHashMap."
40878,2,1,1795,java.util.HashMap,"Since synchronization is not an issue for you, I'd recommend HashMap."
14452144,2,0,5,java.util.HashMap,2)Another difference is that iterator in the HashMap is fail-safe while the enumerator for the Hashtable isn't.
14452144,2,0,5,java.util.HashMap,"3)HashMap permits null values in it, while Hashtable doesn't."
40894,2,0,50,java.util.HashMap,HashMap: An implementation of the Map interface that uses hash codes to index an array.
17651399,2,0,3,java.util.HashMap,HashMap is emulated and therefore usable in GWT client code whereas Hashtable is not.
7644118,2,0,91,java.util.HashMap,"The HashMap class is roughly equivalent to Hashtable, except that it is non synchronized and permits nulls."
7644118,2,0,91,java.util.HashMap,(HashMap allows null values as key and value whereas Hashtable doesn't allow nulls).
7644118,2,0,91,java.util.HashMap,HashMap does not guarantee that the order of the map will remain constant over time.
7644118,2,0,91,java.util.HashMap,HashMap is non synchronized whereas Hashtable is synchronized.
7644118,2,0,91,java.util.HashMap,Iterator in the HashMap is  fail-safe while the enumerator for the Hashtable is not and throw ConcurrentModificationException if any other Thread modifies the map structurally  by adding or removing any element except Iterator's own remove()  method.
7644118,2,0,91,java.util.HashMap,HashMap can be synchronized by Map m = Collections.synchronizeMap(hashMap); Map provides Collection views instead of direct support for iteration  via Enumeration objects.
7344090,2,0,18,java.util.HashMap,Another key difference between hashtable and hashmap is that Iterator in the HashMap is  fail-fast  while the enumerator for the Hashtable is not and throw ConcurrentModificationException if any other Thread modifies the map structurally  by adding or removing any element except Iterator's own remove()  method.
41454,2,0,366,java.util.HashMap,This is not in any way an atomic operation whether you use Hashtable or HashMap.
41454,2,0,366,java.util.HashMap,An equivalently synchronised HashMap can be obtained by: code.
41454,2,0,366,java.util.HashMap,Even iterating over a Hashtable's entries (or a HashMap obtained by Collections.synchronizedMap) is not thread safe unless you also guard the Map from being modified through additional synchronization.
28426488,2,0,1,java.util.HashMap,HashMap: HashMap is like Hashtable but it also accepts key value pair.
17815037,2,0,2,java.util.HashMap,HashMap is a class  used to store the element in key and value format.it is not thread safe.
21431305,2,0,10,java.util.HashMap,"Moreover, there are 3 difference ways to Iterate Through a HashMap."
46926,2,0,59,java.util.HashMap,HashMap is the canonical map implementation and doesn't make guarantees (or though it should not change order if no mutating operation are performed on it).
48442,1,0,32,java.util.HashMap,"For example, generally why or in what cases would I prefer to use a Vector or an ArrayList, a Hashtable or a HashMap?"
48451,2,0,6,java.util.HashMap,"The difference between Hashtable (note that the T is not a capital letter) and HashMap is similiar, the former is synchronized, the latter is not synchronized."
48457,2,0,2,java.util.HashMap,HashMap is pretty common for Maps.
48462,2,0,21,java.util.HashMap,Map: The performance and behavior of HashMap and TreeMap are parallel to the Set implementations.
48520,2,0,5,java.util.HashMap,"For non-sorted the best choice, more than nine times out of ten, will be: ArrayList, HashMap, HashSet."
48525,2,0,9,java.util.HashMap,My rule is:  Always start with ArrayList and HashSet and HashMap  (i.e. not LinkedList or TreeMap).
28900509,2,0,3,java.util.HashMap,"the size of a HashMap without any of the keys or values, which isn't likely what you want."
52393,2,0,10,java.util.HashMap,"There will be loops in object references, so you'll need to keep a HashMap or somesuch using object-equals as the comparator to eliminate infinite loops."
81346,1,0,147,java.util.HashMap,"Say I'm creating a word frequency list, using a Map (probably a HashMap), where each key is a String with the word that's being counted and the value is an Integer that's incremented each time a token of the word is found."
81417,2,0,1,java.util.HashMap,"The first HashMap solution is actually quite fast, but a proper like that found in Google Collections is probably better."
85342,2,0,20,java.util.HashMap,"Internally the implementation currently uses a HashMap<E, AtomicInteger>, so you will not incur boxing costs."
84988,2,0,3,java.util.HashMap,We store the specific loggers in a HashMap and initialize appenders for each of them as needed.
8485873,2,0,9,java.util.HashMap,"It uses a HashMap for storing all global actions, because I don't like large if  (key == ..) then .. else if (key == ..) then .. else if (key ==..) .. constructs."
104184,1,0,63,java.util.HashMap,Is it safe to get values from a java.util.HashMap from multiple threads (no modification)?
104184,1,0,63,java.util.HashMap,Is it safe to use a java.util.HashMap in this way?
104184,1,0,63,java.util.HashMap,"(Currently, I'm happily using a java.util.concurrent.ConcurrentHashMap, and have no measured need to improve performance, but am simply curious if a simple HashMap would suffice."
104251,2,0,0,java.util.HashMap,http://www.docjar.com/html/api/java/util/HashMap.java.html here is the source for HashMap.
104251,2,0,0,java.util.HashMap,"This means that while its okay to read from a HashMap in a multithreaded situation, I'd definitely use a ConcurrentHashMap if there were multiple writes."
104534,2,0,53,java.util.HashMap,"Jeremy Manson, the god when it comes to the Java Memory Model, has a three part blog on this topic - because in essence you are asking the question ""Is it safe to access an immutable HashMap"" - the answer to that is yes."
104534,2,0,53,java.util.HashMap,"But you must answer the predicate to that question which is - ""Is my HashMap immutable""."
12201121,2,0,2,java.util.HashMap,According to http://www.ibm.com/developerworks/java/library/j-jtp03304/ # Initialization safety you can make your HashMap a final field and after the constructor finishes it would be safely published.
104636,2,0,28,java.util.HashMap,"If you have other threads running, they may not see an updated copy of the HashMap if there is no memory write out of the current thread."
105670,2,0,4,java.util.HashMap,"One note is that under some circumstances, a get() from an unsynchronized HashMap can cause an infinite loop."
104398,2,0,1,java.util.HashMap,"Be warned that even in single-threaded code, replacing a ConcurrentHashMap with a HashMap may not be safe."
104398,2,0,1,java.util.HashMap,HashMap does not forbid them (don't ask).
104398,2,0,1,java.util.HashMap,"That said, provided you do nothing else concurrent reads from a HashMap are safe."
104398,2,0,1,java.util.HashMap,"This answer is intended to point out that even aside from concurrency issues, there is at least one API difference between ConcurrentHashMap and HashMap, which could scupper even a single-threaded program which replaced one with the other.]"
104699,2,0,7,java.util.HashMap,"It's safe to access the map, but in general it's not guaranteed that all threads will see exactly the same state (and thus values) of the HashMap."
104699,2,0,7,java.util.HashMap,"This might happen on multiprocessor systems where the modifications to the HashMap done by one thread (e.g., the one that populated it) can sit in that CPU's cache and won't be seen by threads running on other CPUs, until a memory fence operation is performed ensuring cache coherence."
104699,2,0,7,java.util.HashMap,"So, if you are sure that after populating the HashMap each of the threads acquires ANY lock, then it's OK from that point on to access the HashMap from any thread until the HashMap is modified again."
106661,2,0,1,java.util.HashMap,The following is an example of dumping data from a HashMap onto a DefaultTableModel which is used as the TableModel of a JTable.
106493,2,0,0,java.util.HashMap,"To add to my previous answer, for what it's worth, I've actually written a table model that uses (essentially) an ArrayList<Row> as backing data, where Row is a HashMap<String, Object>, mapping column names to values."
3420912,2,0,170,java.util.HashMap,of the above issues with something crazy like the following: Note: This has changed significantly in June 2012 - the previous code could never work: an internal HashMap is required to lookup the values without creating an infinite loop between the TreeMap.get() -> compare() and compare() -> get() code.
113581,2,0,1,java.util.HashMap,"As you specifically asked for collections, I'd like to add an aspect that the other answers haven't mentioned yet: A HashMap doesn't expect their keys to change their hashcode once they are added to the collection."
115329,2,0,2,java.util.HashMap,"I like your idea, but if you want to avoid reflection you could add instead instances to the HashMap: code."
115635,2,0,1,java.util.HashMap,"2) In your HashMap scheme, you could avoid reflection by, for each command class, mapping to an object implementing a SpecialisedCommandFactory interface, instead of mapping to the class itself."
20730236,2,0,0,java.util.HashMap,"It's a bit hacky, since HashMap doesn't let us access it's table directly, but it should work just fine."
5669034,2,0,16,java.util.HashMap,Fast solution for Java using an ArrayList and a HashMap: [element -> index].
128008,1,0,8,java.util.HashMap,When using a HashMap are values and keys guaranteed to be in the same order when iterating?
129007,2,0,0,java.util.HashMap,"HashMap's keySet method returns a Set, which does not guarantee order."
129007,2,0,0,java.util.HashMap,"HashMap's values() method returns a Collection, which does not guarantee order."
128888,1,0,5,java.util.HashMap,"Now, to be able to put vertices into a HashMap, the hashCode() method must return results consistent with equals()."
9710429,2,0,0,java.util.HashMap,"I have actually begun to think that any use of data structures with non-deterministic behavior, such as ArrayList or HashMap, should be avoided, so I would say only use ArrayList if you can bound its size; any unbounded list use LinkedList."
138099,1,0,31,java.util.HashMap,"The generated list contains a number of types that are part of the standard library, such as java.lang.String and java.util.HashMap."
19428277,2,0,3,java.util.HashMap,"If you are already going to rely on Java locale, then I suggest using a simple HashMap instead of creating new classes for countries etc."
144486,2,0,15,java.util.HashMap,You'll probably want to use a HashMap for the outer map and ArrayList's for the inner lists.
148827,2,0,0,java.util.HashMap,"Design a nice Map (HashMap, TreeMap, whatever) that does what you want to do."
152425,2,0,9,java.util.HashMap,"In that case I would have put a type constraint on the collection: Don't declare the collection as a Map (which would allow LinkedHashMap) but as HashMap (for the purists, a final subclass of HashMap, but that might be taking it too far...)."
154454,2,0,5,java.util.HashMap,As long as the HashMap or some other collection has a reference to that object it won't be garbage collected.
677248,2,0,84,java.util.HashMap,HashMap compatible Pair class: code.
165689,2,0,1,java.util.HashMap,Example:  ConcurrentHashMap over HashMap.
164207,2,0,1,java.util.HashMap,"Hardly anyone uses Vector or Hashtable, and if they do, they get laughed at, because their replacements (ArrayList and HashMap) are worlds faster."
5228006,2,0,0,java.util.HashMap,"When many threads   are expected to access a given   collection, a ConcurrentHashMap is   normally preferable to a synchronized   HashMap, and a ConcurrentSkipListMap   is normally preferable to a   synchronized TreeMap."
170127,2,0,3,java.util.HashMap,"The default hash is non-deterministic, so if used for objects in a HashMap, the ordering of entries in that map can change from run to run."
178849,2,1,21,java.util.HashMap,You can have a Application LEVEL Data structure(HashMap) that will be updated by each Filter/Listener as it encounters the data from the requests.
180376,2,0,2,java.util.HashMap,Use HashMap instead of Hashtable.
1784248,2,1,1,java.util.HashMap,"solution described here worked well for me: http://jira.codehaus.org/browse/XSTR-226 the idea is to have custom XStream converter/mapper for hibernate collections, which will extract actual collection from hibernate one and will call corresponding standard converter (for ArrayList, HashMap etc.)"
184390,2,0,0,java.util.HashMap,Two alternate approaches:  Create a new class that implements the Action interface and has a Color field and an actionPerformed method that sets the color Mantain a HashMap from command names to Color instances and look up the command name in the map
215096,2,0,8,java.util.HashMap,"For example, if you just want a hashtable, should you use a Python dictionary or a Java HashMap?"
1876814,2,0,0,java.util.HashMap,Trove4j can use custom hashing for a HashMap.
6640059,2,0,120,java.util.HashMap,"case ""foo"":   case ""bar"":     processFooOrBar(s);     break; case ""baz"":      processBaz(s);     // fall-through default:     processDefault(s);     break; } Binary literals int binary = 0b1001_1001;  Improved Type Inference for Generic Instance Creation Map<String, List<String>> anagrams = new HashMap<String, List<String>>(); become: Map<String, List<String>> anagrams = new HashMap<>(); Multiple exception catching this: code."
214136,1,0,11,java.util.HashMap,Why not allow an external interface to provide hashCode/equals for a HashMap?
214136,1,0,11,java.util.HashMap,I suspect it would be both easy and useful to design an interface and to retrofit this into HashMap (or a new class)?
214136,1,0,11,java.util.HashMap,EDIT: Rephrased the first sentence to indicate more clearly that it's the side-loading I'm after (and not ordering; ordering does not belong in HashMap).
1876747,2,1,3,java.util.HashMap,"Their map has an implementation with different limitations and thus different prerequisites, so this does not implicitly mean that an implementation for Java's ""native"" HashMap would be feasible."
27727253,2,0,1,java.util.HashMap,You can't use a HashingStrategy with the built in HashSet or HashMap.
27727253,2,0,1,java.util.HashMap,"UnifiedSetWithHashingStrategy uses half the memory of a UnifiedMap, and one quarter the memory of a HashMap."
217145,2,0,4,java.util.HashMap,"If you need to be able to traverse the matrix row by row, you can make the row map type a TreeMap, and same for traversing the columns in index order, but if you don't need those cases, HashMap is quicker than TreeMap."
221001,1,0,8,java.util.HashMap,"Is there a faster way than to use a pre-initialized HashMap<Character,Byte> to get the value from?"
221020,2,0,2,java.util.HashMap,"Someone else would have to comment on the efficiency of a static metod call vs a HashMap lookup, or you could check it out for yourself."
221024,2,1,13,java.util.HashMap,A preinitialised array would be faster than a HashMap.
224256,2,0,1,java.util.HashMap,"Internally I would maintain two data structures,  a Priority-Queue and a HashMap."
20644976,2,0,5,java.util.HashMap,"The main differences are the use of the ConcurrentHashMap instead of HashMap, and the use of the Lock (I could have gotten away with synchronized, but...)."
613495,2,0,7,java.util.HashMap,It would be slower for normal access (just as ConcurrentHashMap is slower than HashMap where there is no concurrency)
1953516,2,0,78,java.util.HashMap,"If I do revisit this in the future, I'll probably work on extending ConcurrentHashMap in the same way LinkedHashMap extends HashMap."
230671,2,0,5,java.util.HashMap,"Even though it is light as far as caching mechanisms go, you might dig into the actual code and mimic what they do with HashMap under the covers to exactly what you need and no more."
235047,1,0,8,java.util.HashMap,"Why do I get an OutOfMemoryError when inserting 50,000 objects into HashMap?"
235047,1,0,8,java.util.HashMap,"I am trying to insert about 50,000 objects (and therefore 50,000 keys) into a java.util.HashMap<java.awt.Point, Segment>."
235047,1,0,8,java.util.HashMap,Is there some weird limitation with HashMap?
235114,2,0,2,java.util.HashMap,"Another thing to try if you know the number of objects beforehand is to use the HashMap(int capacity,double loadfactor) constructor instead of the default no-arg one which uses defaults of (16,0.75)."
235114,2,0,2,java.util.HashMap,If the number of elements in your HashMap exceeds (capacity * loadfactor) then the underlying array in the HashMap will be resized to the next power of 2 and the table will be rehashed.
235116,2,0,3,java.util.HashMap,"Use this constructor: (http://java.sun.com/javase/6/docs/api/java/util/HashMap.html#HashMap(int, float))"
235134,2,0,1,java.util.HashMap,I'm wondering though why you're using a HashMap rather than a TreeMap?
235161,2,0,7,java.util.HashMap,Some people are suggesting changing the parameters of the HashMap to tighten up the memory requirements.
237498,2,0,1,java.util.HashMap,Random thought:  The hash buckets associated with HashMap are not particularly memory efficient.
237194,2,0,0,java.util.HashMap,A plain old getter implementation as you've written will work just fine for HashMap.
238173,1,0,20,java.util.HashMap,"Mine are:  using instance variables in servlets (it's not just bad practice but bug, actually) using Collection implementations like HashMap, and not using the appropriate interfaces using seemingly cryptic class names like SmsMaker (SmsFactory) or CommEnvironment (CommunicationContext)"
241209,2,1,185,java.util.HashMap,"Improved debugger When I look at HashMap in debugger's watch window, I see logical view - keys and values, last time I did it in Eclipse it was showing entries with hash and next fields - I'm not really debugging HashMap, I just want to look at it contents."
244329,1,0,3,java.util.HashMap,Threading issues in a Java HashMap.
19983126,2,0,0,java.util.HashMap,Here is the java doc on HashMap: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Note that this implementation is not synchronized.
19983126,2,0,0,java.util.HashMap,"This is best done at creation time, to prevent accidental unsynchronized access to the map: Map m = Collections.synchronizedMap(new HashMap(...)); Or better,  use java.util.concurrent.ConcurrentHashMap"
244379,2,0,4,java.util.HashMap,"You also want to make sure that the key object defines both hashCode and equals in such a way that you don't violate the HashMap contract (ie if equals returns true, the hashCodes need to be the same, but not necessarily vice versa)."
255548,2,0,4,java.util.HashMap,"Under the covers, HashSet uses HashMap, which calls HashMap.removeEntryForKey(Object) when either HashSet.remove(Object) or Iterator.remove() is called."
28787298,2,0,0,java.util.HashMap,"End Code -reason being is HashSet remove method uses HashMap and it identifies keys by hashCode, while AbstarctSet's hashCode is dynamic and depends upon the mutable properties of itself."
262367,1,0,120,java.util.HashMap,"In Eclipse, I see a warning that says: Type safety: Unchecked cast from Object to HashMap What did I do wrong?"
262416,2,1,153,java.util.HashMap,"Well, first of all, you're wasting memory with the new HashMap creation call."
262416,2,1,153,java.util.HashMap,"Secondly, the compiler is complaining that you cast the object to a HashMap without checking if it is a HashMap."
262416,2,1,153,java.util.HashMap,"Converting it to HashMap directly would not cause the problem with the second case (and perhaps there would not be a warning in the first case, I'm not sure how pedantic the Java compiler is with warnings for Java 5)."
262416,2,1,153,java.util.HashMap,"However, you are converting it to a HashMap<String, String>."
262416,2,1,153,java.util.HashMap,"HashMaps are really maps that take an object as a key and have an object as a value, HashMap<Object, Object> if you will."
262416,2,1,153,java.util.HashMap,"Thus, there is no guarentee that when you get your bean that it can be represented as a HashMap<String, String> because you could have HashMap<Date, Calendar> because the non-generic representation that is returned can have any objects."
262539,2,0,161,java.util.HashMap,"The problem is that a cast is a runtime check - but due to type erasure, at runtime there's actually no difference between a HashMap<String,String> and HashMap<Foo,Bar> for any other Foo and Bar."
263838,1,0,6,java.util.HashMap,HashMap default types for K and V. I usually type my map declarations but was doing some maint and found one without typing.
263864,2,0,1,java.util.HashMap,"HashMap is a collection of objects, Think C++ containers."
271361,2,0,1,java.util.HashMap,"It may be as easy as HashMap<K, Collection<V>>, I'm not familiar with how MultiMaps work."
1804677,2,0,2,java.util.HashMap,Have you considered using an LRUMap instead of a soft HashMap?
467127,2,1,4,java.util.HashMap,"I simply created a new HashMap, rebuit the project and gave it another try."
267312,1,0,27,java.util.HashMap,Difference between a HashMap and a dictionary ADT.
267333,2,0,6,java.util.HashMap,In Java the HashMap implements the Map interface while the Dictionary does not.
267333,2,0,6,java.util.HashMap,"That is, they both do a similar function so you are right that they seem very similar...a HashMap is a type of dictionary."
267333,2,0,6,java.util.HashMap,You are advised to use the HashMap though.
267336,2,0,9,java.util.HashMap,Use HashMap.
297123,2,1,24,java.util.HashMap,"In terms of Java, both the class HashMap and the class Dictionary are implementations of the ""Map"" abstract data type."
267414,1,0,5,java.util.HashMap,Default HashMap probing in Java.
267414,1,0,5,java.util.HashMap,What does Java use as a default probing method for HashMap?
277442,2,0,1,java.util.HashMap,"Depending on the usage, you can use reflection as advised above, or perhaps a HashMap would be better suited..."
280622,2,0,4,java.util.HashMap,"There are three main reasons to use immutable objects whenever you can, all of which will help to reduce the number of bugs you introduce in your code:  It is much easier to reason about how your program works when you know that an object's state cannot be changed by another method Immutable objects are automatically thread safe (assuming they are published safely) so will never be the cause of those hard-to-pin-down multithreading bugs Immutable objects will always have the same Hash code, so they can be used as the keys in a HashMap (or similar)."
280622,2,0,4,java.util.HashMap,This is the main reason that String objects are immutable - they are frequently used as HashMap keys.
7403628,2,0,1,java.util.HashMap,Map replaceRules = new HashMap(); Map replaceRules = new LinkedHashMap();
300341,2,0,28,java.util.HashMap,"Immutability In addition to wrapping it with unmodifiableMap, I'm copying the map (new HashMap(h))."
300341,2,0,28,java.util.HashMap,"Depend on Interfaces On a stylistic note, it's often better to declare APIs with abstract types like List and Map, rather than a concrete types like ArrayList and HashMap."
308815,2,0,1,java.util.HashMap,"While this is not the best solution for this particular problem (erickson's idea of a new unmodifiableMap is), I'd like to take a moment to mention the java.util.concurrent.ConcurrentHashMap class introduced in Java 5, a version of HashMap specifically built with concurrency in mind."
302165,2,0,3,java.util.HashMap,There is no happens-before relation between writing and reading the HashMap implementation objects.
304551,2,0,4,java.util.HashMap,"No, the code example is not safe, because there is no safe publication of any new HashMap instances."
304551,2,0,4,java.util.HashMap,"Without any synchronization, there is a possibility that a reader thread will see a partially initialized HashMap."
304551,2,0,4,java.util.HashMap,"Whether or not it is okay with you that reader threads might see old (stale) HashMap references, or might even never see a new reference, is beside the point."
304551,2,0,4,java.util.HashMap,The worst thing that can happen is that a reader thread might obtain reference to and attempt to access a HashMap instance that is not yet initialized and not ready to be accessed.
302371,1,0,46,java.util.HashMap,Which data structure would you use: TreeMap or HashMap?
302371,1,0,46,java.util.HashMap,"TreeMap<String, Number> or HashMap<String, Number> ?"
302378,2,1,54,java.util.HashMap,HashMap has no ordering when you iterate through it; TreeMap iterates in the natural key order.
302378,2,1,54,java.util.HashMap,"EDIT: I think Konrad's comment may have been suggesting ""use HashMap, then sort."""
302378,2,1,54,java.util.HashMap,"I suspect that if performance is really an issue, there may be a better way of attacking it than either TreeMap or HashMap :)"
3481921,2,0,2,java.util.HashMap,"""When a key already exists it has the same performance as a HashMap."""
3481921,2,0,2,java.util.HashMap,HashMap has O(1) insertion and TreeMap O(n log n).
302402,2,0,18,java.util.HashMap,TreeMap beats HashMap because TreeMap is already sorted for you.
302402,2,0,18,java.util.HashMap,EDIT: The question of HashMap vs TreeMap performance was answered by Jon - HashMap and sort may be quicker (try it!
302922,2,0,1,java.util.HashMap,When a key already exists it has the same performance as a HashMap.
5664680,2,0,10,java.util.HashMap,"Hence, going back to the original question, the figures for comparison turn out to be: HashMap approach: O(n + k log k) average case, worst case could be much larger TreeMap approach: O(k + n log k) worst case where n = number of words in the text , k = number of distinct words in the text."
306863,1,0,8,java.util.HashMap,I know this isn't really what XPath is for but if I have a HashMap of XPath expressions to values how would I go about building an XML document.
310410,1,0,4,java.util.HashMap,Iterate over HashMap.values() in JSF+Facelets.
310410,1,0,4,java.util.HashMap,"I'm using JSF/Facelets, and I'm trying to iterate over some Document objects (custom object) that I'm keeping in a HashMap."
310410,1,0,4,java.util.HashMap,"When the page is loaded, I'm getting the error ""Property 'name' not found on type java.util.HashMap$Values""."
311580,2,0,2,java.util.HashMap,"From the Javadocs:  A two-dimensional hashmap, is a   HashMap that enables you to refer to   values via two keys rather than one  The relevant class is TwoDHashMap."
338096,2,0,0,java.util.HashMap,"java.util.Hashtable If it's HashSet, and HashMap, then it should be HashTable."
339709,1,0,3,java.util.HashMap,"It would be nice to have the equivalent of Java's AbstractDictionary, which leaves you very little to impelment a complete dictionary (HashMap, in Java):  If you don't need to iterate the collection, you have a single method to implement (TryGetValue) If you want it to be writeable, you implement another entry (Add)."
341377,1,0,7,java.util.HashMap,This is caused by the fact that AbstractCollection (which HashMap$Values inherits from) does not overrides #equals().
341435,2,0,4,java.util.HashMap,"That said, I don't really know why HashMap$Values would not implement equals() itself."
341436,2,1,6,java.util.HashMap,"Note that HashMap$Values is neither a Set nor a List, thus the quandary and in a sense the reason it does not support equals()."
364981,2,0,0,java.util.HashMap,"It has methods for composing Equal instances for your classes from existing instances, as well as wrappers for Collections, Iterables, HashMap, and HashSet, that use Equal<A> and Hash<A> instead of equals and hashCode."
364823,2,1,16,java.util.HashMap,"See the contains or get method here: http://java.sun.com/javase/6/docs/api/java/util/Map.html#containsKey(java.lang.Object) However, it's up to the Map implementation how to go about performing that check, and a HashMap will use a hash code to narrow the potential keys it will check with the equals method."
365002,2,0,1,java.util.HashMap,"A java.util.HashMap uses equals and hashCode, for example."
376379,2,0,7,java.util.HashMap,And a few places where the behavior is defined to be undefined (for example the order of elements in a HashMap is defined to be implementation dependent and needs not be constant).
382626,1,0,1,java.util.HashMap,"I have a HashMap relating Keys to Strings, and I need to compare some of the Strings against each other."
382626,1,0,1,java.util.HashMap,"However, some of the Strings may or may not be in the HashMap."
382626,1,0,1,java.util.HashMap,"Example: Let's say I have 4 Strings that I plan to compare to each other if possible, but only 3 of them end up in the HashMap."
382773,2,1,2,java.util.HashMap,Loop through the .values collection of the HashMap Store the first entry.
3391413,2,1,38,java.util.HashMap,"I really hoped that the JRE included an IntegerTrieMap<Object> as the default implementation for the slow HashMap<Integer, Object> or LongTrieMap<Object> as the default implementation for the even slower HashMap<Long, Object>..."
395825,2,0,1,java.util.HashMap,"Then, if you want to map integers onto these objects, you could use something like a java.util.HashMap<Integer,ActionHandler> to manage that."
395825,2,0,1,java.util.HashMap,"(edit) If you want to be even more abusive, you can initialize the HashMap like so: code."
397152,2,0,3,java.util.HashMap,"Figure out what they key combinations are, and then map them to some sort of Object (maybe a HashMap?)"
410367,2,0,7,java.util.HashMap,"The Java HashMap, for example, increases the size of the array when the number of entries in the map is > 75% of the size of the array."
410367,2,0,7,java.util.HashMap,"Edit based on comments: 1) A linked list is not the only way to represent the objects that have the same hashcode, although that is the method used by the JDK 1.5 HashMap."
410367,2,0,7,java.util.HashMap,"2) As of JDK 1.4, the HashMap class uses an array sized as a power of 2; prior to that it used 2^N+1, which I believe is prime for N <= 32."
410367,2,0,7,java.util.HashMap,"Personally, I'd question this as premature optimization, but given the list of authors on HashMap, I'll assume there is some real benefit."
411650,2,1,37,java.util.HashMap,"There's another collection called HashMap that will give you a dictionary (or associative array, if you went to school in the 90s) like object."
411710,2,0,6,java.util.HashMap,Java conditional statements require an explicit boolean;  PHP variables and arrays are all prepended by $ and otherwise indistinguishable; The equivalent of PHP associative arrays is PHP Maps (eg HashMap).
416987,2,0,1,java.util.HashMap,Use a java.util.HashMap to initialize a property.
430412,2,0,7,java.util.HashMap,"Naturally, the larger the files got, the more memory pressure we experienced, so I ultimately wrote a FileHashMap class that pushed the HashMap's value space to random access files."
434989,1,0,22,java.util.HashMap,HashMap intialization parameters (load / initialcapacity).
434989,1,0,22,java.util.HashMap,What values should I pass to create an efficient HashMap / HashMap based structures for N items?
434989,1,0,22,java.util.HashMap,What should be the parameters for a HashMap?
584465,2,0,1,java.util.HashMap,Referring to HashMap source code will help.
435000,2,1,25,java.util.HashMap,"Regarding the load factor, I'll simply quote from the HashMap javadoc:  As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs."
435000,2,1,25,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
435013,2,0,4,java.util.HashMap,"It's also notable that having a HashMap on the small side makes hash collisions more likely, which can slow down lookup."
16081519,2,0,8,java.util.HashMap,"In the guava libraries from Google there is a function that creates a HashMap optimized for a expected number of items: newHashMapWithExpectedSize from the docs:  Creates a HashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth ..."
1797517,2,0,1,java.util.HashMap,"HashMap uses power-of-two buckets, so for HashMap, Zarkonnen is actually correct."
1797517,2,0,1,java.util.HashMap,"So, although the load factor of 0.75f is still the same between Hashtable and HashMap, you should use an initial capacity n*2 where n is the number of elements you plan on storing in the HashMap."
11970766,2,0,12,java.util.HashMap,as the initial capacity gives what you want for either a HashMap or a Hashtable.
11970766,2,0,12,java.util.HashMap,"Since the default load capacity is 0.75, initializing a HashMap like so works: code."
11970766,2,0,12,java.util.HashMap,"Since a HashSet is effectively just a wrapper for a HashMap, the same logic also applies there, i.e. you can construct a HashSet efficiently like this: code."
11970766,2,0,12,java.util.HashMap,"@NotEdible's answer uses too much memory in many cases, as the HashMap's constructor itself deals with the issues that it want the maps array to have a size which is a power of 2."
436852,1,0,7,java.util.HashMap,I'm using Java HashMap in MATLAB code.
2365526,2,0,5,java.util.HashMap,"Matlab R2008b and newer have a containers.Map class that provides HashMap-like functionality on native Matlab datatypes, so they'll work with structs, cells, user-defined Matlab objects, and so on."
437372,2,1,6,java.util.HashMap,"But you could use another HashMap to act like a structure, and convert MATLAB structures to HashMaps (with an obvious warning for multiple-level structures, function handles, + other beasts that don't play well with the MATLAB/Java data conversion process)."
443320,2,0,2,java.util.HashMap,For example if you set a modification breakpoint (watchpoint) on a HashMap then the debugger wont stop if you add items into this hashmap since adding items doesn't change the address/reference of the variable.
439738,1,0,0,java.util.HashMap,I have a HashMap (although I guess this question applies to other collections) of objects.
439773,2,0,1,java.util.HashMap,"Use WeakHashMap to make sure they are garbage collected, as that in a HashMap there is still references to the object."
445610,2,0,1,java.util.HashMap,"Terracotta allows you to cluster a portion of your heap (for example, a HashMap) and see the contents of that map on all nodes."
444638,1,0,1,java.util.HashMap,strange HashMap.put() behaviour.
444638,1,0,1,java.util.HashMap,I am attempting to troubleshoot an intermittent failure that appears to be related to removing an object from a HashMap and then putting that same object back using a new key.
444638,1,0,1,java.util.HashMap,My HashMap is created as follows: code.
444638,1,0,1,java.util.HashMap,"I have already read in he documentation that class HashMap is not ""synchronised""."
444700,2,1,4,java.util.HashMap,"There are no ""asynchronous"" effects in the HashMap class."
444700,2,1,4,java.util.HashMap,The only other thing I can think of is that you're making a copy of the HashMap somewhere.
444994,2,0,2,java.util.HashMap,Just one suggestion...you're focusing on accesses to the HashMap but I wonder if you should also see if your generate_transaction_id() is thread safe or if it is behaving in an unexpected way.
444653,2,0,1,java.util.HashMap,So you know HashMap's not thread safe.
1080569,2,0,0,java.util.HashMap,"As others have observed you HAVE to know whether the HashMap is accessed by just one Thread, or not."
448122,1,0,34,java.util.HashMap,How do I use a foreach loop in Java to loop through the values in a HashMap?
448122,1,0,34,java.util.HashMap,The getData() method returns an Object (but in this case the Object returned has the HashMap structure).
448320,1,0,23,java.util.HashMap,I'm iterating through a HashMap (see my earlier question for more detail) and building a string consisting of the data contained in the Map.
453684,1,0,11,java.util.HashMap,"Use Hashtable, Vector or HashMap or ArrayList in Java."
453702,2,0,12,java.util.HashMap,"If you need synchronized ArrayList or HashMap, you can wrap them."
457629,1,0,81,java.util.HashMap,The possible ways I can think of are: return a HashMap (since the two Objects are related) or return an ArrayList of Object objects.
457629,1,0,81,java.util.HashMap,"Somehow, returning a HashMap does not look a very elegant way of doing so."
457857,2,0,0,java.util.HashMap,"If you simply pass the stuff around in a HashMap or similar, then your clients have to pull this map apart and grok the contents each time they want to use the results."
457645,2,0,2,java.util.HashMap,"All possible solutions will be a kludge (like container objects, your HashMap idea, “multiple return values” as realized via arrays)."
460094,2,0,43,java.util.HashMap,"The description from the site is:  This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
460094,2,0,43,java.util.HashMap,"Iterating over this set   requires time proportional to the sum of the HashSet instance's size   (the number of elements) plus the ""capacity"" of the backing HashMap   instance (the number of buckets)."
2020036,2,0,0,java.util.HashMap,"Java Set is designed to remove duplicates and hopefully the HashMap must be using Java Set internally for managing key as keys can never have duplicates, So you should be considering set for your requirement."
460602,1,0,4,java.util.HashMap,"Currently, I create a HashMap with Object Id as key and 1 as value."
460605,2,0,3,java.util.HashMap,If you want to maintain your current implementation with HashMap it's also fine.
460605,2,0,3,java.util.HashMap,HashSet is internally implemented with an HashMap.
460614,2,0,1,java.util.HashMap,"(Last time I dug into the JRE, your approach of using a HashMap was exactly what a HashSet did anyway!)"
460627,2,0,10,java.util.HashMap,If you mean object equality (i.e. object1.equals(object2)) then you can just use a HashSet instead of a monkeying around with a HashMap.
461106,1,0,5,java.util.HashMap,"The idea is to define a base class that can invoke methods defined in derrived classes, but at creation time I want to ensure, that such methods are defined exactly according to the requirements, which is that the methods take only one argument, a HashMap<String String>."
461106,1,0,5,java.util.HashMap,"So far I was able with the following code to check that the method contains only one parameter and that it is of Class HashMap, but how can I check that the generic definition is <String, String> ?"
947212,2,0,1,java.util.HashMap,(also is there a reason to require HashMap over just Map?)
461118,2,0,7,java.util.HashMap,"Java generic types are ""erased"" by the compiler, i.e. HashMap<String, String> becomes just HashMap at run-time."
1983025,2,0,0,java.util.HashMap,A nasty gotcha I've found in java is having multiple threads access a HashMap without synchronization.
461947,2,0,7,java.util.HashMap,"Many people believe that synchronizing on puts to a Map (not a ConcurrentMap, but say a HashMap) and not synchronizing on gets is sufficient."
19545123,2,0,37,java.util.HashMap,"Later that T will be substituted with valid Class name during initialization (HashMap<String> map = new HashMap<String>();) e.g) class name<T1, T2, ..., Tn> So Class<T> represents a class object of specific class type 'T'."
19545123,2,0,37,java.util.HashMap,"Collections e.g) List, Set, Hashmap are best examples which will work with different objects as per the declaration of T, but once we declared T as String  e.g) HashMap<String> map = new HashMap<String>(); Then it will only accept String Class instance objects."
474470,2,0,3,java.util.HashMap,to access the coordinates based on the value you would need some sort of double hashmap (look a at java.util.HashMap) but i am aware of nothing that does so directly
695999,2,0,0,java.util.HashMap,What if we use TreeMap to replace HashMap.
479130,2,0,4,java.util.HashMap,What are the differences between HashMap and TreeMap and when would you use each of them?
479130,2,0,4,java.util.HashMap,HashMap is unordered but is usually slightly quicker.
479130,2,0,4,java.util.HashMap,HashMap is probably your default choice.
490820,2,0,2,java.util.HashMap,"Unfortunately, I think that all the implementations in the jdk use the fail-fast implementation (here is the definition of fail-fast, as it stated in the HashMap Javadoc):  The iterators returned by all of this   class's ""collection view methods"" are   fail-fast: if the map is structurally   modified at any time after the   iterator is created, in any way except   through the iterator's own remove   method, the iterator will throw a   ConcurrentModificationException."
490620,2,0,2,java.util.HashMap,"If you take a look at the HashMap class, you'll see a field called 'modCount'."
490620,2,0,2,java.util.HashMap,"When you ask if you can perform these operations 'safely,' you don't have to worry too much because HashMap is designed to throw that ConcurrentModificationException as soon as it runs into a problem like this."
492126,2,1,7,java.util.HashMap,"If you expect a lot of enum values, you could create a static mapping HashMap<String,MyEnum> to translate quickly."
497170,2,0,0,java.util.HashMap,"Usually, unless you are using this object as the key for a *HashMap or an element in a *HashSet, hashCode() doesn't need to be overridden."
497701,2,0,1,java.util.HashMap,"You could also manage the synchronization yourself, but you shouldn't do that at the EJB method level, rather you would likely be better having a synchronized Cache object (vs, say, a generic HashMap)."
4420400,2,0,5,java.util.HashMap,"In addition, it you aware the GC of the anonymous class, you can always convert it to a normal HashMap by using new HashMap(Map map)."
509053,2,0,6,java.util.HashMap,"So when java.util.HashMap is deserialized, first a java.util.HashMap instance is allocated and then the constructor of its first non-serializable superclass java.util.AbstractMap is called (which in turn calls java.lang.Object's constructor)."
509230,2,1,80,java.util.HashMap,"Thanks to mmyers and Esko Luontola, I've parameterized the code I originally wrote here, so it can be wrapped up in a utility class somewhere and used for any parameterized HashMap."
3931798,2,0,1,java.util.HashMap,"Take this one, it's much faster than creating a new HashMap, if it's already one, but still secure, as each element is checked against it's type... code."
509107,2,0,1,java.util.HashMap,"I see no reason why you would ever want to cast to a HashMap instead of a Map<KeyType,ValueType>."
509107,2,0,1,java.util.HashMap,"In fact, I can't imagine any reason to set the type of a variable to HashMap instead of Map."
3028712,2,0,0,java.util.HashMap,"If you are sure that the type returned by session.getAttribute() is HashMap then you can not typecast to that exact type, but rely on only checking the generic HashMap code."
509161,2,0,0,java.util.HashMap,"The result of session.getAttribute(...) is an object which could be anything, but since you ""know"" it's a HashMap<String, String> you're just casting without checking it first."
512251,2,0,6,java.util.HashMap,Replace the HashMap with a dedicated class: code.
510675,2,0,8,java.util.HashMap,"However, don't think that ConcurrentHashMap is a simple alternative for a HashMap with a typical synchronized block as shown above."
6540791,2,0,1,java.util.HashMap,"In general, if you want to use the ConcurrentHashMap make sure you are ready to miss 'updates' (i.e. printing contents of the HashMap does not ensure it will print the up-to-date Map) and use APIs like CyclicBarrier to ensure consistency across your program's lifecycle."
26958843,2,0,11,java.util.HashMap,It is similar to HashMap when storing data.
512850,1,0,1,java.util.HashMap,2-D (concurrent) HashMap: 2-property key type?
512850,1,0,1,java.util.HashMap,"It's in a multithreaded application, hence the choice to use ConcurrentHashMap instead of just HashMap."
513613,2,0,0,java.util.HashMap,I've made a Int2DMap implementation based on the standard Java HashMap.
516364,1,0,2,java.util.HashMap,"So the super class get those fields, along with a private HashMap (the key is the enum) and keep the values, so the client just calls:  code."
519126,2,0,0,java.util.HashMap,"ArrayList/Vector if order matters (it appears to, since you are calling the words ""word_xxx""), or HashTable/HashMap if it doesn't."
519126,2,0,0,java.util.HashMap,I'll leave the exercise of figuring out why you would want to use an ArrayList vs. a Vector or a HashTable vs. a HashMap up to you since I have a sneaking suspicion this is your homework.
526834,2,0,4,java.util.HashMap,"if you have an object backed by a HashMap, and how it's getting populated is a mystery, it can really simplify your life to determine that it's actually a Map of Strings to Integers - that's often a lot easier to figure out than what it's actually supposed to be doing."
801353,2,0,0,java.util.HashMap,"Still, sometimes an ArrayList based implementation can replace a HashMap based implementation (I would not consider Hashtable at all, it's obsolete)."
532558,2,0,0,java.util.HashMap,"You're not comparing like with like: HashMap and Hashtable implement the Map interface, and ArrayList implements the List interface."
532558,2,0,0,java.util.HashMap,"In a direct comparison between Hashtable and HashMap, HashMap will probably offer better performance because Hashtable is synchronized."
532575,2,0,3,java.util.HashMap,"In the most common cases, if you need a List, use ArrayList, and if you need a Map, use HashMap."
532583,2,0,1,java.util.HashMap,The HashMap/HashTable are comparable since they both function as maps (key -> value lookups).
532583,2,0,1,java.util.HashMap,"The HashMap/HashTable part is easy to answer as they are largely identical (the major difference is null keys) but the former is not synchronized and the latter is, thus HashMap will generally be faster (assuming the synchronization is not required) Modern JVM's are reasonably fast at uncontended locks though so the difference will be small in a micro benchmark."
532632,2,0,0,java.util.HashMap,Hashtables (be it HashMap or HashTable) would take a little more memory than what they use to actually store the information.
537921,1,0,4,java.util.HashMap,I have a HashMap with millions of entries.
537957,2,0,7,java.util.HashMap,A HashMap is not an efficient data structure for finding keys that lie within a certain range.
541325,2,0,5,java.util.HashMap,From the HashMap javadoc: code.
548064,2,0,0,java.util.HashMap,"Other than that, you could do something similar with something like HashMap<whatever, Method>, where you use map.get(something).invoke()."
554120,1,0,2,java.util.HashMap,"I think that what I need to do is :  Create from the bundle a HashMap< String, String> Replace values."
554120,1,0,2,java.util.HashMap,Transform the HashMap into a InputStream.
559019,2,0,1,java.util.HashMap,"Building a HashMap of these objects based on the field value as a key could be worthwhile from the performance perspective, e.g."
559037,2,0,1,java.util.HashMap,"Iterate once through, and build a HashMap with the equals value you are looking for as the key and the appropriate node as the value."
559314,2,0,2,java.util.HashMap,"If you're really concerned with efficiency, you can create a custom List implementation that uses the field in your object as the hash and use a HashMap as storage."
813851,2,0,3,java.util.HashMap,The guy above gave comparison for HashMap / HashSet vs. TreeMap / TreeSet.
559856,2,0,4,java.util.HashMap,"HashMap, for example:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
559856,2,0,4,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
567246,2,0,11,java.util.HashMap,"In your sample program, you are relying on the synchronization details of (a synchronized) HashMap for things other than put()s. Last thing."
19087933,2,0,4,java.util.HashMap,[Edit] For Collection like Vector and Hashtable they are synchronized when ArrayList or HashMap are not and you need set synchronized keyword or invoke Collections synchronized method: code.
575340,1,0,4,java.util.HashMap,"(and the same question for the other collections: HashMap, hastable...) Thanks"
576912,1,0,1,java.util.HashMap,HashMap gets over written every time I use .put().
576912,1,0,1,java.util.HashMap,Price has a HashMap that stores the security code (String) and price (Double).
576912,1,0,1,java.util.HashMap,The snapshot is a HashMap as described above.
576912,1,0,1,java.util.HashMap,I then want to store this HashMap of prices along with a pollNumber in another HashMap I can later pass the pollNumber and get out the prices at the time corresponding to that pollNumber.
576912,1,0,1,java.util.HashMap,"0 : {MSFT=17.67, AAPL=93.85, GOOG=333.86} {0={MSFT=17.67, AAPL=93.85, GOOG=333.86}} 1 : {MSFT=17.64, AAPL=93.85, GOOG=334.02} {0={MSFT=17.64, AAPL=93.85, GOOG=334.02}, 1={MSFT=17.64, AAPL=93.85, GOOG=334.02}} 2 : {MSFT=17.64, AAPL=93.85, GOOG=334.08} {0={MSFT=17.64, AAPL=93.85, GOOG=334.08}, 1={MSFT=17.64, AAPL=93.85, GOOG=334.08},  2={MSFT=17.64, AAPL=93.85, GOOG=334.08}} 3 : {MSFT=17.65, AAPL=93.83, GOOG=334.08} {0={MSFT=17.65, AAPL=93.83, GOOG=334.08}, 1={MSFT=17.65, AAPL=93.83, GOOG=334.08}, 2={MSFT=17.65, AAPL=93.83, GOOG=334.08}, 3={MSFT=17.65, AAPL=93.83, GOOG=334.08}} 4 : {MSFT=17.64, AAPL=93.83, GOOG=334.07} {0={MSFT=17.64, AAPL=93.83, GOOG=334.07}, 1={MSFT=17.64, AAPL=93.83, GOOG=334.07}, 2={MSFT=17.64, AAPL=93.83, GOOG=334.07}, 3={MSFT=17.64, AAPL=93.83, GOOG=334.07}, 4={MSFT=17.64, AAPL=93.83, GOOG=334.07}} As you can see when I print the entire HashMap that should have different price series they are all the same."
576912,1,0,1,java.util.HashMap,If you know how to fix the behaviour so that the HashMap (the big one) has a new price series entry each time.
576916,2,1,6,java.util.HashMap,"You need to take copy of the HashMap, otherwise it looks like you are just storing the same Map over and over again, which of course gets overwritten."
25662872,2,0,1,java.util.HashMap,"Easiest way of file upload in java is GOJFileUpload.jar library Here is the gojfileupload library tutorial: GOJFileUpload They give two method  UploadFile(String filepath,ArrayList imagenames,HttpRequest request) UploadFile(String filepath,ArrayList dataname,ArrayList imagenames,HttpRequest request)  They'll return you HashMap the all file name which you uploaded after uploading at your given destination folder."
583874,2,0,2,java.util.HashMap,"However, if third-party libraries are totally out of the question, I guess you are looking to implement a data structure which looks something like this:  Basically is a HashMap (extends HashMap<Object, Object> if you will) Each value in the Map points to an object in a sorted list, based on which is most used."
598810,2,1,9,java.util.HashMap,"For that kind of access you should really be using an array, or better, a HashMap."
598810,2,1,9,java.util.HashMap,"Use a HashMap instead - you can use Integers for the keys, and removal won't result in a resequencing."
602636,1,0,46,java.util.HashMap,ConcurrentModificationException and a HashMap.
602636,1,0,46,java.util.HashMap,The other object is stored in a HashMap.
603022,2,0,28,java.util.HashMap,Try using a ConcurrentHashMap instead of a plain HashMap
603766,1,0,0,java.util.HashMap,How can I form an ordered list of values extracted from HashMap?
603766,1,0,0,java.util.HashMap,"I have a HashMap<String, File> of File objects as values."
603766,1,0,0,java.util.HashMap,I need to iterate over the values in the HashMap and return them as a single String.
603783,2,0,4,java.util.HashMap,Unfortunately there is no way of getting data out of a HashMap in any recognizable order.
606582,1,0,4,java.util.HashMap,I am trying to avoid storing the Country Name and Locale Code in a HashMap or something.
610186,2,0,37,java.util.HashMap,Modern JVMs implement ThreadLocal using an unsynchronised HashMap in the Thread.currentThread() object.
623892,1,0,60,java.util.HashMap,"Right now, my options are either to rely on hashing (via HashMap) or on binary searches (via TreeMap)."
27378976,2,0,0,java.util.HashMap,Below is a basic HashMap implementation of a Trie.
628196,2,0,4,java.util.HashMap,"This especially applies to StringBuffer, ArrayList, HashMap and the like."
628747,2,0,1,java.util.HashMap,"2) That is the downside of LinkedList, you might as well use HashMap or other data structures"
629867,2,0,0,java.util.HashMap,"ConcurrentHashMap  as well as the java.util.concurrent package should be mentioned, if you plan to use the HashMap in multiple threads."
633299,1,0,8,java.util.HashMap,"Some numbers, sizes using some calculated jvm values (8bytes/java.lang.Object, 4bytes/ref) the HashMap is about 100+32n bytes, the theoretical best is 12+20*n. <-- I want that, for small n."
633364,2,0,1,java.util.HashMap,"Simply, I recommend to use one of HashMap, Hashtable and ConcurrentHashMap of JDK depending on synchronization or concurrency requirements."
635927,2,1,3,java.util.HashMap,"I did a speed comparison, and found when compared to a HashMap that it was still slightly faster with 4 entries, but slower with 5 or more."
635014,1,0,5,java.util.HashMap,"The obvious choice to keep track of this relationship is a Map<type1, type2>, like a HashMap."
635030,2,1,21,java.util.HashMap,The key needs to implement .equals() and .hashCode() correctly The key must not be changed in any way that changes it's .hashCode() value while it's used as the key Ideally any object used as a key in a HashMap should be immutable.
635067,2,0,3,java.util.HashMap,It depends on the implementation of the map you choose:  HashMap uses equals() and hashCode().
636126,1,0,40,java.util.HashMap,The problem is that the above code produces this warning:  Type safety: Unchecked cast from Map to HashMap What is the best way to create this empty map?
636134,2,0,5,java.util.HashMap,"If you need an instance of HashMap, the best way is: code."
636134,2,0,5,java.util.HashMap,HashMap seems as good as any other - so just use that.
690817,2,0,0,java.util.HashMap,"If you strictly write in the beginning, before readers start, so synchronization and sharing across threads are not issues... HashMap is your friend."
654480,1,0,6,java.util.HashMap,"Now, I would write a generic container class that accepts objects which implement an interface to get the value of the key field and use a HashMap keyed with those values as the actual storage class."
658406,2,0,0,java.util.HashMap,If you need a really fast search use a HashMap with the birthday as a key.
658528,2,1,1,java.util.HashMap,According to the API HashMap has a function called entrySet() which returns a set view of the mapping in the Hash.
658843,2,0,0,java.util.HashMap,"As an alternative you could try storing all the entries for a graph in a single HashMap, in which the key is an object containing both the node number and the neighbour node number."
658843,2,0,0,java.util.HashMap,"I presume the node number would normally be the index into the array of HashMaps, and the neighbour node the key to the current HashMap."
658644,1,0,2,java.util.HashMap,"I currently am using a HashMap<String, Integer> but I am worried that the boxing/unboxing of the Integer to int is making this slower."
658732,2,0,3,java.util.HashMap,Use the HashMap.
658732,2,0,3,java.util.HashMap,"The array thing would be ok with a small number of items in the array, but then so is the HashMap..."
658666,2,0,1,java.util.HashMap,"I would guess that the HashMap would give a much faster lookup, but I think this needs some benchmarking to answer correctly."
658669,2,1,13,java.util.HashMap,"There are collection libraries available for primitive types, but I would stick to the normal HashMap from the JRE until you've profiled and checked that this is causing a problem."
658669,2,1,13,java.util.HashMap,"EDIT: To answer the question in the comment, HashMap.get(key) will be faster than ArrayList.indexOf(key) when the collection is large enough."
658670,2,0,0,java.util.HashMap,"Edit: Of course, the most popular Set type (HashSet) is itself backed by a HashMap, so switching to a set may not be such a wise change after all."
659939,2,1,31,java.util.HashMap,"Better would be to create a new object, perhaps stored in a HashMap that is keyed by the Integer, to synchronize on."
27789076,2,0,2,java.util.HashMap,java.util.LinkedHashMap appears to work just like a normal HashMap otherwise.
1241100,2,1,38,java.util.HashMap,It adds a lot of code It requires you to list all fields to be copied and do this This will not work for Lists when using clone() (This is what clone() for HashMap says: Returns a shallow copy of this HashMap instance: the keys and valuesthemselves are not cloned.)
674081,2,0,2,java.util.HashMap,"I think the easiest way to convert ISO-639-2 to ISO-639-1 would be to create HashMap<String,String> constant."
676603,2,0,7,java.util.HashMap,"This can get tricky, since the ""usual"" implementation ArrayList (and HashMap) uses arrays internally."
1763030,2,0,7,java.util.HashMap,"{HashMap => MMap}”), but:  I prefer not to mangle the names, so that it’s clearer what classes I’m using, and I use ‘mutable’ rarely enough that having “mutable.ClassName” in my source is not an undue burden."
678768,1,0,2,java.util.HashMap,"Including things like ""what is the .NET equivalent of HashMap, ArrayList and Queue"", and ""How do I interact with a database"" or ""What are the differences between ASPs and JSPs""."
678842,2,1,64,java.util.HashMap,"An instance of HashMap<String, String> matches Map<String, ?> but not Map<String, Object>."
678842,2,1,64,java.util.HashMap,"you can't supply a HashMap<String, String>."
684131,1,0,3,java.util.HashMap,"The empty lines are ignored and there need to be errors on invalid lines:  foo,bar foo2, bar3  I want to read this file into a HashMap where the key (foo) is mapped with a value (bar)."
684609,2,0,4,java.util.HashMap,"http://www.docjar.com/html/api/java/util/HashMap.java.html Furthermore, you can always set the resize threshold and initial memory usage to be as large as you'll need it to be, which will decrease put time when the map is almost full."
684632,2,0,1,java.util.HashMap,"If you do implement your own, make sure you follow the contract of the hashCode() method (in particular it needs to be consistent with equals()), otherwise the class will not work for keys in a HashMap."
684632,2,0,1,java.util.HashMap,You can also look at the source code to java.util.HashMap and friends directly and see how they are implemented.
684632,2,0,1,java.util.HashMap,"HashMap for example uses an Array of buckets, and the buckets can overflow using a linked list."
686261,2,0,1,java.util.HashMap,"It can be a little hard to wrap your head around the symmetries involved at first, but it is definitely worth to understand it unless you are eager to have strange behavior in your app when you put objects into HashMap and friends that do not adhere to that contract."
684735,2,0,4,java.util.HashMap,"for putting in a HashMap or database table, e.g."
689528,2,1,6,java.util.HashMap,Are you using the Java Concurrent HashMap ?
698638,1,0,49,java.util.HashMap,"The JavaDoc of ConcurrentHashMap says this:  Like Hashtable but unlike HashMap, this class does not allow null to be used as a key or value."
698803,2,0,2,java.util.HashMap,Josh Bloch designed HashMap; Doug Lea designed ConcurrentHashMap.
717233,2,0,9,java.util.HashMap,Plenty of projects do just use ArrayList or HashMap or whatever to handle all their collection needs.
717233,2,0,9,java.util.HashMap,I saw this happen just a month ago when I needed to swap out a regular HashMap for an implementation that would return the items to me in the same order I put them in when it came time to iterate over all of them.
717620,2,0,1,java.util.HashMap,"Then your you would use HashMap<String,Command>."
730248,2,0,2,java.util.HashMap,"A map, like HashMap."
733720,2,0,0,java.util.HashMap,"In the extreme case (matrix with a billion rows and columns with only 10 cells used), a HashMap can be more efficient than any array implementation."
733720,2,0,0,java.util.HashMap,"For other problems, it can be more efficient to mix the approaches depending on the problem (for example, a HashMap of arrays of mini-matrices when cells ""clump"" in a gigantic empty space)."
734861,1,0,9,java.util.HashMap,NullPointerException while using put method of HashMap.
734861,1,0,9,java.util.HashMap,I declare and initialise the HashMap with the code  code.
734872,2,0,4,java.util.HashMap,"But you need to instantiate a new Map, whether it's a HashMap or similar."
734873,2,0,3,java.util.HashMap,It can be initialized with datamap = new HashMap();
734874,2,0,1,java.util.HashMap,Did you do dataMap = new HashMap(); somwehere?
736186,1,0,8,java.util.HashMap,I made my command a Map by extending HashMap and referenced the properties using the ['property'] notation but it didn't work.
736573,1,0,3,java.util.HashMap,I want to filter objects in an ArrayList and a HashMap by fields of the objects contained within.
25066891,2,0,1,java.util.HashMap,"instead of using private variables defined in the class, make the class contain only a HashMap  which stores the values for the instance."
25066891,2,0,1,java.util.HashMap,"Then your getters and setters return and set values into and out of the HashMap, and when it is time to convert it to a map, voila!"
745416,2,0,1,java.util.HashMap,"In this case, you can either update the hashed object in place, or use HashMap.put(key, value) to replace the queued item with a new object."
763251,1,0,0,java.util.HashMap,How to use @BasicMap for a HashMap whose key values are entities.
766721,2,0,1,java.util.HashMap,"Otherwise, like others have said: a HashMap or even a Tree of some sort would work - but that will depend on the frequency of accesses."
766721,2,0,1,java.util.HashMap,"But if accesses will be of ""random"" elements, I'd go with a HashMap or Tree.)"
769722,2,0,0,java.util.HashMap,"I'd advise using Map<Lecturer, List<Course>>, as someone replied in the previous question, which means, ""an association (Map) between different lecturers (Lecturer) to a list of the courses they teach (List<Course>), instead, which you would instantiate as new HashMap<Lecturer, List<Course>>."
29389809,2,0,1,java.util.HashMap,"While Set data structure usually can be implemented via HashTable/HashMap or BalancedTree data structure, for fast detecting whether an element exists and add non-existing element, usually a well implemented Set can achieve O(1) time complexity contains operation."
29389809,2,0,1,java.util.HashMap,"In Java, HashSet is the most common used implementation of Set, it is implemented by calling HashMap API, and HashMap is implemented using separate chaining with linked lists (a combination of Array and LinkedList)."
772892,2,0,2,java.util.HashMap,Edit: why are you creating an anonymous subclass of HashMap?
778862,1,0,1,java.util.HashMap,Casting a Object to HashMap.
778862,1,0,1,java.util.HashMap,I'm having trouble working out how to count instances of Values in a HashMap.
778862,1,0,1,java.util.HashMap,NB: Library is my HashMap.
778903,2,0,3,java.util.HashMap,"I think you want a HashMap<String, List<String>> so you store a list of books per student (if I'm reading your code correctly)."
778903,2,0,3,java.util.HashMap,"You'll have to create a list per student and put that into the HashMap, but then you can simply count the entries in the List using List.size()."
778921,2,0,3,java.util.HashMap,Third: There is no countValues method in either HashMap or Object.
779549,2,0,1,java.util.HashMap,"For instance, there was a case in an app server where an unsychronised HashMap caused an occasional infinite loop."
779414,1,0,3,java.util.HashMap,Java generics Pair stored in HashMap not retrieving key->value properly.
779489,2,0,5,java.util.HashMap,Also you could debug into HashMap to see that .equals() method is called and returns false.
780541,1,0,48,java.util.HashMap,How to sort a HashMap in Java.
780541,1,0,48,java.util.HashMap,"How are we able to sort a HashMap<key, ArrayList>?"
780576,2,0,67,java.util.HashMap,Do you have to use a HashMap ?
31546227,2,0,0,java.util.HashMap,Sorting HashMap by Value: As others have pointed out.
780943,2,0,11,java.util.HashMap,"In any case, you can't have sorted values in HashMap (according to API This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time ]."
780966,2,0,5,java.util.HashMap,If it worked and someone who only knows about one of the two super classes would call Three.foo() he would expect it to return a One (because that is how it works in One and Two) but in Three you could actually return a HashMap and still behave correctly.
789147,1,0,9,java.util.HashMap,"The main Instrumented Class is a ""JavaBean"" with 30 or so fields that I want to exist in the HashMap."
795470,1,0,9,java.util.HashMap,"java.io.InvalidClassException: Overriding serialized class version mismatch: local serialVersionUID = -5239021592691549158 stream serialVersionUID = 8452040881660460728 java.lang.ClassCastException: cannot assign instance of java.util.HashMap to field com.posadas.ic.rules.common.commisionRules.CommissionResult.statusCode of type java.lang.String in instance of com.posadas.ic.rules.common.commisionRules.CommissionResult When this error was thrown the class had the value of -5239021592691549158, if change the value to 8452040881660460728 the class is successfully de-serialized, so, what happens?"
797367,1,0,4,java.util.HashMap,Java HashMap indexed on 2 keys.
797367,1,0,4,java.util.HashMap,I want to create a HashMap in java for users with preferences.
797367,1,0,4,java.util.HashMap,"What I need is a way to find a user by name in the HashMap, and to find all the users with a certain interest (e.g."
797457,2,0,3,java.util.HashMap,I would implement the following HashMap which include the user as key and the value could be any object which includs the userpreferences.
797457,2,0,3,java.util.HashMap,And an additional HashMap with an interest as key and a list of users who are interested in this.
797457,2,0,3,java.util.HashMap,"When you delet a user, you can get all the interest he has and delete the user name from the interest HashMap list."
797457,2,0,3,java.util.HashMap,When the interest HashMap list is empty you can delet the interest from the HashMap.
801367,2,0,3,java.util.HashMap,You could do this using a HashMap (as you do now) and store it using XStream.
801621,2,0,0,java.util.HashMap,"Does it have to be a Hashtable, or could a HashMap do?"
1243141,2,1,8,java.util.HashMap,It adds a lot of code It requires you to list all fields to be copied and do this This will not work for Lists when using clone() (This is what clone() for HashMap says: Returns a shallow copy of this HashMap instance: the keys and valuesthemselves are not cloned.)
814061,2,0,8,java.util.HashMap,"One good thing beyond simple test cases is to compare functioning of your implementation with the standard JDK HashMap; generate random keys and/or values, insert, remove, and check that state is identical (to the degree they should be) between the two implementations."
814099,2,0,0,java.util.HashMap,Another option is to create a HashMap and then you can retrieve your employees by their Id.
816662,1,0,5,java.util.HashMap,Instead I thought maybe I should create an object which has a static HashMap and store my data in there.
816682,2,0,1,java.util.HashMap,"One option could be that you keep the data in a database, but then cache it to a HashMap."
816763,2,0,0,java.util.HashMap,Store the data in a HashMap if that's easier.
816763,2,0,0,java.util.HashMap,This will create an XML version of the HashMap object.
816763,2,0,0,java.util.HashMap,"This means you have your HashMap, and a configurable representation on the disk that you can change as required."
816806,2,0,3,java.util.HashMap,"There is one caveat though: If the amount of data (inlcuding the overhead of Java objects and the HashMap) becomes too big to be held entirely in RAM, performance will decrease quickly and drastically (by a factor of 10,000 or more)."
816806,2,0,3,java.util.HashMap,Database systems are designed for efficient access to on-disk data; a HashMap isn't.
817145,2,0,0,java.util.HashMap,As long as you had some method of persisting what's in the HashMap or the like in case of server maintainence/shutdown.
821483,2,0,2,java.util.HashMap,"(Time and memory because sets are usually backed by a HashMap or a Tree, which adds overhead over a list or an array."
824520,2,0,2,java.util.HashMap,You might be tempted to think of your storage object as a HashMap: code.
824520,2,0,2,java.util.HashMap,"This way we can change the implementing type later (HashMap,Hashtable,...), and only one line of code will be affected."
824520,2,0,2,java.util.HashMap,"And I chose Hashtable as an example, over HashMap, because Hashtable is thread-safe."
824520,2,0,2,java.util.HashMap,"In a multi-threaded app, this avoids the problem that two threads reading and changing the same HashMap concurrently can start throwing Exceptions."
835359,1,0,0,java.util.HashMap,"They don't actually need to be hash mapped at all, and to use a HashMap is ridiculous as there will always be only one key for each entry;  it'd be fine if they were just in some sort of ordered set."
835359,1,0,0,java.util.HashMap,"For lack of a known alternative, however, I used a HashMap in my implementation and produced this obfuscated generics composition: code."
835359,1,0,0,java.util.HashMap,"By the same token, perhaps the values can be put onto an ArrayList or a Vector or derivative thereof, but in Java this does not yield a more terse way of addressing them than I'm getting out of this HashMap here, though it does solve the algorithmic complexity issue perhaps."
26421124,2,0,4,java.util.HashMap,Obviously it will be faster and will use less memory than using implementations like HashMap or TreeMap.
1602203,2,0,13,java.util.HashMap,"HashMap creates Entry objects every time you add an object, which can put a lot of stress on the GC when you've got lots of objects."
1602203,2,0,13,java.util.HashMap,"In a HashMap with 1,000 objects or more, you'll end up using a good portion of your CPU just having the GC clean up entries (in situations like pathfinding or other one-shot collections that are created and then cleaned up)."
1573288,2,0,10,java.util.HashMap,This is a practical experience from me: IdentityHashMap leaves a much smaller memory footprint compared to HashMap for large cardinalities.
1598691,2,0,12,java.util.HashMap,This is about 33% faster than HashMap for gets!
842402,2,0,1,java.util.HashMap,"You're not ""changing parameters in a Linked List"", you're trying to find an object in a list and change a property of that object You should be using a Map (such as a HashMap) instead of a List, then you won't have to iterate."
992020,2,0,1,java.util.HashMap,/*  * File Name : Router.java   * Public Class Name : Router  *  */ //~--- JDK imports ------------------------------------------------------------ import java.io.IOException; import java.net.DatagramPacket; import java.net.DatagramSocket; import java.net.InetAddress; import java.util.HashMap; import java.util.Iterator; import java.util.Set; import java.util.concurrent.LinkedBlockingQueue; import javax.swing.SwingUtilities; /**  *  * NA1 project 2 spring 2009 semester   * @author sunny jain   *  *  */ public class Router extends Thread { code.
4795817,2,0,0,java.util.HashMap,"I put about a week of effort into doing this with POI (using the latest code on coderanch) - be warned that the code is flawed (there's an issue with using TreeSet where you need to replace that with a HashMap), but even after fixing that it crashes on formulas."
851491,1,0,0,java.util.HashMap,"Recieved the following exception when deserializing a HashMap<String, Integer>: code."
852534,1,0,3,java.util.HashMap,"Troubles Iterating Over A HashMap with JSF, MyFaces & Facelets."
852534,1,0,3,java.util.HashMap,I'm having some trouble looping over a HashMap to print out it's values to the screen.
852822,1,0,22,java.util.HashMap,Java ArrayList and HashMap on-the-fly.
852822,1,0,22,java.util.HashMap,Can someone please provide an example of creating a Java ArrayList and HashMap on the fly?
855576,1,0,7,java.util.HashMap,Would I use a HashMap (containsKey()) for this?
855603,2,0,6,java.util.HashMap,"Implementations include java.util.HashSet, which is the Set equivalent of HashMap."
857380,1,0,1,java.util.HashMap,"So, I need to use some kinda HashMap to store these values."
857452,2,0,0,java.util.HashMap,Map (or HashMap) still needs to support get(Object).
857992,2,0,5,java.util.HashMap,"A wrapper for HashMap<K, V> is provided that takes Hash<K> and Equal<K> in its constructor."
862377,2,0,1,java.util.HashMap,"Just use the Map solution... a TreeSet and a HashSet also do it since they are backed up by a TreeMap and a HashMap, so there is no penalty in doing so (actualy it should be a minimal gain)."
864833,1,0,0,java.util.HashMap,"And I would be thrilled to do this abstraction in a way that enables IDE o use autocompletion, and would wery much dislike idea of storing Parameter objects in say HashMap."
865446,2,0,0,java.util.HashMap,HashMap isn't deliberately big and slow...
867642,2,0,0,java.util.HashMap,"If the fields need to be iterated when comparing, why not dispense with the separate fields, and put the data into an array, a HashMap or something similar that is appropriate."
870699,1,0,4,java.util.HashMap,"My original plan was to use a View Preparer to take the data being sent in by the controller (HashMap) and output a couple attributes for the pagination tile, but a co-worker told me this should be done in the controller instead."
878583,1,0,1,java.util.HashMap,Currently I am selecting records on day basis (7 selects for 7 days) from DB and putting them in a HashMap.
878583,1,0,1,java.util.HashMap,Reading from HashMap and formating some columns and finally writing in a file(separate file for 7 days).
879807,1,0,9,java.util.HashMap,Java: Search in HashMap keys based on regex?
879807,1,0,9,java.util.HashMap,I'm building a thesaurus using a HashMap to store the synonyms.
879807,1,0,9,java.util.HashMap,Is there a better data structure than HashMap to keep a graph like needed by a thesaurus?
880070,2,0,9,java.util.HashMap,"But, hmm: (a) Why would you use a HashMap if you intend to always search it sequentially?"
880135,1,0,0,java.util.HashMap,"I'm building a thesaurus using a HashMap <String,ArrayList<String>> to hold words and their synonyms (this data structure is required)."
893927,2,0,1,java.util.HashMap,"Replace Conditional With Polymorphism For a half-measure, for findsite(), you could simply set up a HashMap to get you from site identifier to site."
894856,2,0,3,java.util.HashMap,"In Java, the hash code is ultimately a combination of the code returned by a given object's hashCode() function, and a secondary hash function inside the HashMap/ConcurrentHashMap class (interestingly, the two use different functions)."
894856,2,0,3,java.util.HashMap,Note that Hashtable and Dictionary (the precursors to HashMap and AbstractMap) are obsolete classes.
894856,2,0,3,java.util.HashMap,"Note that if two different hash codes resolve to the same bucket number, Java's HashMap implementations use the ""chaining"" technique-- i.e. they create a linked list of entries in each bucket."
896139,1,0,5,java.util.HashMap,"Java: ArrayList for List, HashMap for Map, and HashSet for Set?"
896139,1,0,5,java.util.HashMap,"I do sometimes construct ArrayList with an initial capcacity more than the default of 10 and a HashMap with more than the default buckets of 16, but I usually (especially for business CRUD) never see myself thinking ""hmmm...should I use a LinkedList instead ArrayList if I am just going to insert and iterate through the whole List?"""
896636,2,0,0,java.util.HashMap,"Using the interface type (List, Map) instead of the implementation type (ArrayList, HashMap) is irrelevant within methods - it's mainly important in public APIs, i.e. method signatures (and ""public"" doesn't necessarily mean ""intended to be published outside your team)."
903107,1,0,6,java.util.HashMap,Keeping a pair of primitives in a Java HashMap.
903474,2,0,1,java.util.HashMap,"As long as the two key objects return the same hashCode() value, and the equals() method say they are equal, your HashMap will not create another entry for it."
12744867,2,0,2,java.util.HashMap,Example:  Let us assume we have an HashMap that holds a number of ArrayList objects.
911023,1,0,1,java.util.HashMap,"I have two Collection objects, I want to associate each object of these two in a readable way (HashMap, Object created on purpose, you choose)."
911083,2,0,0,java.util.HashMap,"Well, since I don't know if you will need to search for both of them having only one, the HashMap won't work."
916544,2,1,3,java.util.HashMap,"The best option I've seen is to use a static HashMap, and a factory class."
918365,2,0,2,java.util.HashMap,"You're also creating a HashSet with a large initial capacity, which means the backing HashMap will be created with that many available slots, unlike the Python where you create a basic Set."
919429,2,0,3,java.util.HashMap,"Either HashMap<Integer, String> or HashMap<Double, String> is returned by the doSomething method."
922533,2,0,274,java.util.HashMap,"Longer answer Technically, you can use anything that implements SortedMap, but except for rare cases this amounts to TreeMap, just as using a Map implementation typically amounts to HashMap."
922533,2,0,274,java.util.HashMap,Remember when using a TreeMap or TreeSet that it will have different performance characteristics than HashMap or HashSet.
922533,2,0,274,java.util.HashMap,"In a HashMap, moving from 1000 items to 10,000 doesn't really affect your time to lookup an element, but for a TreeMap the lookup time will be about 3 times slower (assuming Log2)."
4792195,2,0,19,java.util.HashMap,"To avoid that, a copy to HashMap is necessary, new LinkedHashSet(new ArrayList(){{add(""xxx);add(""yyy"");}})."
924451,1,0,76,java.util.HashMap,I figured this out when I changed HashMap to TreeMap and received the error: code.
925874,2,1,3,java.util.HashMap,"You have to maintain the BufferedImage references yourself, hence the HashMap<>."
929554,1,0,15,java.util.HashMap,Is there a way to get the value of a HashMap randomly in Java?
929554,1,0,15,java.util.HashMap,Is there a way to get the value of a HashMap randomly in Java?
929560,2,0,3,java.util.HashMap,Generate a random number between 0 and the number of keys in your HashMap.
929610,2,0,21,java.util.HashMap,"Since the requirements only asks for a random value from the HashMap, here's the approach:  The HashMap has a values method which returns a Collection of the values in the map."
929706,2,0,1,java.util.HashMap,The keys in a HashMap are effectively in pseudo-random order already.
930372,2,0,0,java.util.HashMap,"In JavaScript every object is a really super-efficient HashMap, so if your design can make use of that fact, use it."
932098,2,0,2,java.util.HashMap,It is because your HashMap returns a     code.
934775,1,0,12,java.util.HashMap,Changing value after it's placed in HashMap changes what's inside HashMap?
934775,1,0,12,java.util.HashMap,"If I create a new HashMap and a new List, and then place the List inside the Hashmap with some arbitrary key and then later call List.clear() will it affect what I've placed inside the HashMap?"
934775,1,0,12,java.util.HashMap,"The deeper question here being: When I add something to a HashMap, is a new object copied and placed or is a reference to the original object placed?"
17659412,2,0,0,java.util.HashMap,The Correct answer for this is Explained below : Suppose you have a HashMap called hashmap and initially you put a key value pair in this HashMap e.g.
17659412,2,0,0,java.util.HashMap,"The Reason is : When you use HashMap, it does the Hashing for the Key(test1) and store the value."
30859349,2,0,0,java.util.HashMap,Copy By reference: If you assign one HashMap to other then both point to same reference in memory.
30859349,2,0,0,java.util.HashMap,"Map hasmapB; hashmapB = hashmapA;  If you make changes in any of these, changes will reflect in both HashMap as both are referencing to same location."
30859349,2,0,0,java.util.HashMap,In second point we have to call **HashMap constructor.
935059,2,0,2,java.util.HashMap,"When I add something to a HashMap, is   a new object copied and placed or is a   reference to the original object   placed?"
935059,2,0,2,java.util.HashMap,"If you clear the HashMap the object will be still ""live""."
944695,2,0,1,java.util.HashMap,You could use a HashMap of HashMaps.
944703,2,1,12,java.util.HashMap,The best you can do is have a HashMap of HashMaps.
963910,2,0,2,java.util.HashMap,Can you use a HashMap?
960332,1,0,1,java.util.HashMap,It's a HashMap that has nicer display names for which the ugly display names are the keys.
960332,1,0,1,java.util.HashMap,I went ahead and set a var to the name I put the HashMap in the ModelAndView under (top line) but I'm not sure if that's the right way to get at that object.
960807,1,0,4,java.util.HashMap,"HashMap(key: String, value: ArrayList) returns an Object instead of ArrayList?"
960807,1,0,4,java.util.HashMap,"I'm storing data in a HashMap with (key: String, value: ArrayList)."
960807,1,0,4,java.util.HashMap,"The part I'm having trouble with declares a new ArrayList ""current,"" searches the HashMap for the String ""dictCode,"" and if found sets current as the returned value ArrayList."
960807,1,0,4,java.util.HashMap,I don't understand this... does that HashMap return an Object instead of the ArrayList I stored in it as the value?
960817,2,1,28,java.util.HashMap,How is the HashMap declaration expressed in that scope?
960817,2,1,28,java.util.HashMap,The implementation of HashMap (or any other generics implementation) is dealing with Object.
960820,2,0,2,java.util.HashMap,"I suppose your dictMap is of type HashMap, which makes it default to HashMap<Object, Object>."
960820,2,0,2,java.util.HashMap,"If you want it to be more specific, declare it as HashMap<String, ArrayList>, or even better, as HashMap<String, ArrayList<T>>"
960831,2,0,1,java.util.HashMap,"The get method of the HashMap is returning an Object, but the variable current is expected to take a ArrayList: code."
967777,2,0,2,java.util.HashMap,"), I would think HashMap<Key<X, Y>, Z> would be faster than HashMap<X, Map<Y, Z>> - I want to think that 1 lookup in a larger HashMap is faster than 2 lookups in smaller maps."
967777,2,0,2,java.util.HashMap,"Since you have a boolean key, also consider 2 HashMap tables (one for true and one for false) and some ternary operator (?"
969155,1,0,1,java.util.HashMap,"We have various cases of a HashMap, ArrayList, a HashMap of arraylists etc."
973518,1,0,8,java.util.HashMap,This stemmed from looking at the answers to Java HashMap vs. Hashtable and seeing several people say Hashtable is in fact slower.
973518,1,0,8,java.util.HashMap,"Not that it's by any means conclusive, but I ran some simple tests on HashMap vs Hashtable, and saw little difference in speed."
974590,2,0,0,java.util.HashMap,How would you write an ArrayList or HashMap without primitive arrays?
978210,2,1,41,java.util.HashMap,"By the way, did you know that HashMap has a private class called KeyIterator (as do ConcurrentHashMap, ConcurrentSkipListMap, EnumMap, IdentityHashMap, TreeMap, and WeakHashMap)?"
978210,2,1,41,java.util.HashMap,Does that make a difference in how you iterate through the keys of a HashMap?
1617218,2,0,2,java.util.HashMap,"LinkedHashMap and LinkedHashSet has only one difference and that comes by HashMap and HashSet difference, their parents."
1617218,2,0,2,java.util.HashMap,"Again, HashSet is just a variation of HashMap."
1617218,2,0,2,java.util.HashMap,You can say HashSet as a HashMap with all values pointing to a single final object.
1835873,2,0,4,java.util.HashMap,I found a simple fix - when you start Java add the following to your command line:    -Dcom.jacob.autogc=true This will cause the ROT class to use a WeakHashMap instead of a HashMap and that solves the problem.
986924,1,0,7,java.util.HashMap,Or to use a HashMap of my type as key with an integer as value instead of the ArrayList.
986924,1,0,7,java.util.HashMap,Here I can use method containsKey to check if an element already exists in the HashMap.
986930,2,0,23,java.util.HashMap,"(And if you didn't override equals and hashCode, using your types as keys in a HashMap would be equally futile.)"
987001,2,0,2,java.util.HashMap,"If you don't do this, then a HashMap or HashSet won't identify your two objects as being equal, even if the ArrayList does (HashMap checks for identical hashes and then calls equals() on them to check for actual equality)."
987001,2,0,2,java.util.HashMap,"Thus, if ArrayList says that two items aren't equal, then there is no way that HashMap would either."
987344,2,0,2,java.util.HashMap,For instance if you use a HashMap to manage your objects then in addition to each object you also allocate a Map.Entry object which can easily consume 16 or 20 bytes (impl.
989748,2,0,1,java.util.HashMap,HashMap lookups are O(1).
998376,1,0,6,java.util.HashMap,clone utility for HashMap in java.
998376,1,0,6,java.util.HashMap,Is there java utility that does clone() method for HashMap such that it does copy of the map elements not just the map object (as the clone() in HashMap class)?
998465,2,0,0,java.util.HashMap,"It is not generic, but it includes several built-in types (including HashMap itself, recursively), and can obviously be extended."
1003041,2,1,44,java.util.HashMap,HashMap is explicitly unsafe for concurrent use.
1003071,2,0,7,java.util.HashMap,The conditions you describe will not be satisfied by HashMap.
1003110,2,0,0,java.util.HashMap,"No, there will be no issues if you do the following:  Place your data into the HashMap on the first load of a single thread before any multithreading occurs."
26807161,2,0,0,java.util.HashMap,"So, I seen today (that's why I'm on this - old - question) on a application running in production since March : 2 put on the same HashSet (then HashMap) cause a CPU overload (near 100%), and memory increasing of 3GB, then down by GC."
1003202,2,0,11,java.util.HashMap,"This is best done at creation time, to prevent accidental unsynchronized access to the map:       Map m = Collections.synchronizedMap(new HashMap(...));  (emphasis not mine) So based on the fact that you said that your threads will be deleting mappings from the Map, the answer is that yes it will definitely cause issue and yes it is definitely unsafe."
1003237,2,0,13,java.util.HashMap,I was under the misguided impression up until a couple of years ago that I could get away with only synchronising the put and remove operations on a HashMap.
1003237,2,0,13,java.util.HashMap,This is of course very dangerous and actually results in an infinite loop in HashMap.get() on some (early 1.5 I think) jdk's.
1005013,2,1,42,java.util.HashMap,"Take for example the java.util package: It contains the interfaces such as Set, Map, List, while also having the implementations such as HashSet, HashMap and ArrayList."
1006776,1,0,1,java.util.HashMap,"So far, we've seen ""java.lang.IllegalStateException: unread block data"" and ""java.lang.ClassCast Exception: java.util.HashMap cannot be cast to java.io.ObjectStreamClass"", both from deep in the internals of ObjectInputStream."
1010879,1,0,9,java.util.HashMap,"That is: HashMap(key: String, value: ArrayList)."
1010879,1,0,9,java.util.HashMap,"But to add data to the arrayList, I have to constantly use HashMap get(key) to get the arrayList, add value to it, then put it back to HashMap."
1010885,2,0,0,java.util.HashMap,you will also want to appropriately estimate the capacity of the wrapping collection (HashMap or Multimap) you are creating to avoid repetitive rehashing.
1010888,2,0,4,java.util.HashMap,The ArrayList values in your HashMap are references.
1010888,2,0,4,java.util.HashMap,"You don't need to ""put it back to HashMap""."
1010888,2,0,4,java.util.HashMap,You're operating on the object that already exists as a value in the HashMap.
30329054,2,0,0,java.util.HashMap,"When you're replacing single characters, consider iterating over your character array but replace characters by using a (pre-created) HashMap<Character, Character>()."
1024246,2,0,3,java.util.HashMap,HashMap maybe usable.
1027343,1,0,9,java.util.HashMap,Like WeakHashMap is for the HashMap interface?
3223013,2,0,13,java.util.HashMap,"Includes:  Create a date object from a particular date Create a new generic ArrayList Logger setup Log with specified level Create a new generic HashMap Iterate through a map, print the keys and values Parse a time using SimpleDateFormat Read a file line by line Log and rethrow a caught exeption Print execution time of a block of code Create periodic Timer Write a String to a file"
1029236,2,0,2,java.util.HashMap,It looks like you are looking for something like HashMap
1029244,2,0,1,java.util.HashMap,"You definitely want a HashMap, which is the Java version of C# Dictionary."
1029254,2,0,7,java.util.HashMap,"There are several implementations:  HashMap: O(1) lookup, does not maintain order of keys TreeMap: O(log n) lookup, maintains order of keys, so you can iterate over them in a guaranteed order LinkedHashMap: O(1) lookup, iterates over keys in the order they were added to the map."
1031673,1,0,0,java.util.HashMap,"Update: A simple HashMap will not do, because I want to find the files that define property A as value B."
1031673,1,0,0,java.util.HashMap,"It would need to be at least a nested HashMap to hold the triples ( Key , Value, Filename )."
1032108,2,0,0,java.util.HashMap,"I would start with a simple HashMap, and if you run into memory problems then move to something more complicated like Lucene."
1032108,2,0,0,java.util.HashMap,You'd be surprised how efficient a HashMap can be.
1032108,2,0,0,java.util.HashMap,"If you want to start really simple, just use the Properties object itself - it's an instance of HashTable (see HashMap vs HashTable)."
1032108,2,0,0,java.util.HashMap,"You can easily use load(Inputstream) to load multiple properties files into a simple object, and then if you decide to try HashMap switch it using new HashMap(propertiesObject)."
1033482,1,0,6,java.util.HashMap,"In my code I default to using ArrayList for all Lists, HashMap for all maps, HashSet for all sets."
1033482,1,0,6,java.util.HashMap,When does someone feel that it is critical they use a HashMap rather than a TreeMap or a HashTable?
1033482,1,0,6,java.util.HashMap,I've read through:  http://java.sun.com/j2se/1.4.2/docs/api/java/util/TreeMap.html  http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html  http://stackoverflow.com/questions/896139/java-arraylist-for-list-hashmap-for-map-and-hashset-for-set etc...
1033547,2,1,7,java.util.HashMap,"Then, there´s WeakHashMap, that doesn´t work like a HashMap, in the sense that keys can be removed by the garbage collector."
1033547,2,1,7,java.util.HashMap,"As you can imagine, the choice between a HashMap and a WeakHashMap is not trivial."
1034228,2,0,1,java.util.HashMap,"I think you're fine to use HashMap, HashSet, and ArrayList as your primary implementations."
1039694,1,0,1,java.util.HashMap,Object responsible for all functionality... but objects should be simple for memory reasons How do I support user-selectable columns without a HashMap for EVERY entity object?
1049969,2,0,4,java.util.HashMap,"In fact, I often find that I don't even want a HashMap type structure--a simple HashSet does fine."
1049840,2,0,16,java.util.HashMap,"If your map is used only on one thread, it will make no difference (and you should have been using HashMap instead of Hashtable anyway)."
1051184,2,0,0,java.util.HashMap,"If you already have a list of synonyms, populate a HashMap and key the list of synonyms with the search word."
1051043,2,0,25,java.util.HashMap,It could be implemented by using a synchronized HashMap or ConcurrentHashMap map a parameter (an Integer for an example) to your 'singleton' parameterizable class.
1243115,2,0,5,java.util.HashMap,It adds a lot of code It requires you to list all fields to be copied and do this This will not work for Lists when using clone() (This is what clone() for HashMap says: Returns a shallow copy of this HashMap instance: the keys and valuesthemselves are not cloned.)
1055253,2,0,18,java.util.HashMap,"In Java, HashMap works by using hashCode to locate a bucket."
1055253,2,0,18,java.util.HashMap,"When adding items, the HashMap is resized once a certain load percentage is reached."
1055337,2,1,52,java.util.HashMap,"A particular feature of a HashMap is that unlike, say, balanced trees, its behavior is probabilistic."
1058149,1,0,41,java.util.HashMap,Using a byte array as HashMap key (Java).
1058165,2,0,2,java.util.HashMap,"Without these two traits, your HashMap will behave unexpectedly."
1058165,2,0,2,java.util.HashMap,"Therefore, I recommend against using byte[] as keys in a HashMap."
1058169,2,0,61,java.util.HashMap,"Note that if you change the values within the byte array after using the ByteArrayWrapper, as a key in a HashMap (etc) you'll have problems looking up the key again... you could take a copy of the data in the ByteArrayWrapper constructor if you want, but obviously that will be a waste of performance if you know you won't be changing the contents of the byte array."
1058190,2,1,30,java.util.HashMap,will not match in a HashMap.
1058224,2,1,5,java.util.HashMap,The HashMap is created with default   load factor (0.75) and an initial   capacity sufficient to contain the   elements in the specified collection.
1058224,2,1,5,java.util.HashMap,"However, using the HashSet() constructor, the initial size is 16, so if the Set that was added via the Collection.addAll is larger than 16, there would have to be a resizing of the data structure:  Constructs a new, empty set; the   backing HashMap instance has default   initial capacity (16) and load factor   (0.75)."
1059159,2,0,0,java.util.HashMap,Google collections has a Multiset however you could easily build your own using a HashMap.
1062979,2,0,12,java.util.HashMap,"You could simply pass an array of values for the value in a regular HashMap, thus simulating duplicate keys, and it would be up to you to decide what data to use."
25095141,2,0,0,java.util.HashMap,"Just posting it here in case it helps others, I have introduced a HashMap as the value: code."
25095141,2,0,0,java.util.HashMap,"I replaced the String object with another HashMap object as the value field, this helped in maintaining single key to different value mapping."
1066589,1,0,1432,java.util.HashMap,Iterate through a HashMap.
1066589,1,0,1432,java.util.HashMap,What's the best way to iterate over the items in a HashMap?
8432400,2,0,346,java.util.HashMap,"Since all maps in Java implement Map interface, following techniques will work for any map implementation (HashMap, TreeMap, LinkedHashMap, Hashtable, etc.)"
1068190,1,0,5,java.util.HashMap,Why does ExecutorService deadlock when performing HashMap operations?
1068190,1,0,5,java.util.HashMap,"I know that the problem comes from sun.misc.Unsafe.park():  I can reproduce the problem on my Core2 Duo 2.4Ghz laptop but not while running in debug I can debug on my Core2 Quad at work, but I've hung it over RDP, so won't be able to get  a stack trace until tomorrow  Most answers below are about the non-thread safety of HashMap, but I could find no locked threads in HashMap - it was all in the ExecutionService code (and Unsafe.park())."
1141633,2,0,0,java.util.HashMap,This has nothing to do with the Executor and everything to do with unsafe concurrent use of HashMap which was never designed to be used that way.
1141633,2,0,0,java.util.HashMap,"If you switch to a synchronized HashMap or Hashtable, you will not get into an infinite loop, but you may still get ConcurrentModificationExceptions during iteration."
1068213,2,1,15,java.util.HashMap,a HashMap you will at most get some stale data.
1068213,2,1,15,java.util.HashMap,It looks like the exact case I linked to - the HashMap gets resized and due to the internal mechanics of resizing the iterator gets stuck in an infinite loop.
1068220,2,0,2,java.util.HashMap,The HashMap is used from multiple threads simultaneously and so can get into an infinite loop.
1070706,2,0,1,java.util.HashMap,"Also, why is extending HashMap considered evil here, considering that you only want to add a trivial helper method?"
1070706,2,0,1,java.util.HashMap,"In your code for AllConnections, AllConnections will always behave in the same way as a HashMap - it is polymorphically substitutable."
1070706,2,0,1,java.util.HashMap,"Of course, you are potentially locking yourself into using HashMap (rather than TreeMap, etc), but that probably doesn't matter since it has the same public methods as Map."
1069357,2,0,0,java.util.HashMap,"You won't get a new HashMap every time you invoke a method on projects, if that's what you are referring to."
1069357,2,0,0,java.util.HashMap,"A new HashMap will be created once, however all instances of the class will share a single HashMap."
1069375,2,0,3,java.util.HashMap,"And, in a general stylistic note, it's a good idea to define variables using the least restrictive class: in this case, the interface Map, rather than the concrete class HashMap."
1071793,1,0,5,java.util.HashMap,I have tried using HashMap but life is hell.
1071793,1,0,5,java.util.HashMap,"For starters I used HashMap object so, code."
1074501,1,0,5,java.util.HashMap,HashMap profiling.
1074501,1,0,5,java.util.HashMap,"Are there any HashMap implementations that expose hook methods for profiling the performance of the Map (average chain length, best / worst / average access time, #rehashes, etc.)."
1074501,1,0,5,java.util.HashMap,"It seems quite common to use HashMap and ""hope for the best"" with regards to ~O(1) access time, without analysing whether this is really the case but I'd like to measure the performance at runtime (at least during development), so anything that hooks into JMX or profiling software would also be good."
1074501,1,0,5,java.util.HashMap,"Also, Is anyone aware of HashMap implementations where the chains are based on binary trees instead of linked lists?"
1074781,1,0,9,java.util.HashMap,Double in HashMap.
1074781,1,0,9,java.util.HashMap,"I was thinking of using a Double as the key to a HashMap but I know floating point comparisons are unsafe, that got me thinking."
1074781,1,0,9,java.util.HashMap,This would mean that using Double as the key to a HashMap would lead to unpredictable behavior.
1077581,2,0,0,java.util.HashMap,"In a HashSet/HashMap, you could mutate a contained object to change the results of compareTo() operation -- relative comparison isn't used to locate objects."
1082771,2,0,2,java.util.HashMap,Have you considered having a bean that aggregates all of the controller URLs you need into a HashMap and then adding this controller/URL Map to any model that requires it?
2857813,2,0,0,java.util.HashMap,"If you have some sort of unique id displayed in the table, you can keep a HashMap<YourId,YourObject>."
4769769,2,0,53,java.util.HashMap,"For a HashMap, if you want to prevent thread-safety issues you must manually account for this in your coding."
1088770,2,0,7,java.util.HashMap,Also there is nothing wrong in using them as keys in a HashMap.
1089275,2,1,1,java.util.HashMap,"a HashMap, or perhaps an object of your own design), then you can write it out as an XML file trivially using XStream, and then read it back to a new object using XStream again."
1089590,2,0,0,java.util.HashMap,are you getting a ConcurrentModificationException in the ArrayList or the HashMap?
1089590,2,0,0,java.util.HashMap,have you overridden the keySet() method in your HashMap?
1092495,2,0,0,java.util.HashMap,"Keep access to internalMap syncronized, otherwise java.util.ConcurrentModificationException occurs because HashMap#modCount (which records structural changes) can be changed concurrently during keyset iteration (due keysCopy.addAll(internalMap.keySet() invocation)."
1090556,1,0,53,java.util.HashMap,Java: how to convert HashMap to array.
1090556,1,0,53,java.util.HashMap,"I need to convert a HashMap<String, Object> to an array; could anyone show me how it's done?"
8153613,2,0,7,java.util.HashMap,"An alternative to CrackerJacks suggestion, if you want the HashMap to maintain order you could consider using a LinkedHashMap instead."
8153613,2,0,7,java.util.HashMap,As far as im aware it's functionality is identical to a HashMap but it is FIFO so it maintains the order in which items were added.
5682375,2,0,23,java.util.HashMap,"If you have HashMap<String, SomeObject> hashMap then hashMap.keySet().toArray(); will return an Object[]."
3814590,2,0,3,java.util.HashMap,"Well, I thought that a ThreadPoolExecutor provided better performance for it manages a pool of threads, minimizing the overhead of instantiating a new thread, allocating memory...  And if you are going to launch thousands of threads, it gives you some queuing functionality you would have to program by yourself... Threads & Executors are different tools, used on different scenarios... As I see it, is like asking why should I use ArrayList when I can use HashMap?"
1095828,2,0,2,java.util.HashMap,"Python has its dictionary, Perl has its hash, Java has a HashMap (and many other types of maps), C++ has std::map, though that is not backed by a hash table and doesn't have constant time access."
1098487,1,0,1,java.util.HashMap,Form binding a HashMap using annotation based controller in Spring 2.5.
1098487,1,0,1,java.util.HashMap,I have a bean containing a HashMap which I have bound to form using the Spring:form taglib and Spring:bind.
1098487,1,0,1,java.util.HashMap,"I get no exceptions, but the HashMap is not populated."
1098487,1,0,1,java.util.HashMap,Debugging the controller method shows that HashMap is empty.
1104030,1,0,10,java.util.HashMap,Java HashMap get works but containsKey does not.
1104030,1,0,10,java.util.HashMap,I am trying to locate a key in a HashMap.
1104128,2,0,5,java.util.HashMap,"The reason why get(Object) is working is, that HashMap will calculate the Hash for your Location class and returns the Object the hascode points to."
1104128,2,0,5,java.util.HashMap,The object from the HashMap will compare to the Object you put in.
1104128,2,0,5,java.util.HashMap,From HashMap code.
1104068,2,0,1,java.util.HashMap,"(thus, HashMap's get() won't use equals() in every situation.)"
1104852,2,0,1,java.util.HashMap,Take a peak at the source code for the HashMap implementation.
1104852,2,0,1,java.util.HashMap,where e is of type Entry for a HashMap.
1104114,2,0,1,java.util.HashMap,"Additionally, hashCode() should not rely on mutable members, otherwise your calculated hash code can change, and this affects the internal workings of the HashMap."
1104271,2,0,0,java.util.HashMap,"In the actual application, I'm storing the PrintWriter for every connection in a HashMap and retrieving it at the start of the SendMsg(...) function."
1106972,2,0,0,java.util.HashMap,Then you extend HashMap (or whatever Map impl you use) and override put so that when you put and object for a key you also add the key to your object's list of keys.
1114423,2,0,5,java.util.HashMap,"Arrays are already basic objects types, that is to say they're not a class that describes a collection of other objects like ArrayList or HashMap."
1123917,2,0,7,java.util.HashMap,HashMap: code.
1121829,1,0,11,java.util.HashMap,This will not work as existing implementations (such as HashMap) do not implement my new interface.
2945791,2,0,1,java.util.HashMap,"A ""hybrid"" option would be to store the underlying data in a structure of arrays as in the second version, but cache the accessed objects in a HashMap so that you only generate the object the first time a particular index is accessed."
1127747,2,0,0,java.util.HashMap,You could use an enum and have a HashMap named for each of them.
1133832,2,0,4,java.util.HashMap,HashMap should serve your purposes: http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html
1133849,2,0,1,java.util.HashMap,"I use java.util.HashMap for key-value pairs unless performance is an issue, which it nearly always isn't."
1133980,2,0,0,java.util.HashMap,HashMap wouldn't do that by itself (as far as I know).
1133980,2,0,0,java.util.HashMap,i suppose I could have created a RowData class and stored each rowdata in a HashMap.
1135647,1,0,2,java.util.HashMap,And the complier is giving me this warning: Unchecked cast from Object to HashMap Thanks in Advance!!
5935992,2,0,2,java.util.HashMap,"not many people still use Hashtable anyway, you should almost always use HashMap instead (except a few use cases)."
1143995,1,0,2,java.util.HashMap,"Or would it be better to have a non-synchronized HashMap, and instead synchronize on the load method or boolean variable?"
1144422,2,1,5,java.util.HashMap,"It can be done several other ways (e.g HashMap of algorithms to duplicatable classes of CRCs, etc.)"
1145175,1,0,4,java.util.HashMap,"Also, I did find the HashMap technique somebody suggested, but is that seriously the best and most elegant way?"
1146112,1,0,7,java.util.HashMap,"One option is to basically reimplement the Session framework with a HashMap and cookies called WEBAPP1SESSIONID and WEBAPP2SESSIONID, but that sucks, and means I'll have to hack the new Session stuff into ActionServlet and a few other places."
1158247,2,0,2,java.util.HashMap,"Look at java.util.HashMap and java.util.Map (I understand you are looking for a dictionary equivalent in Java, and not referring to the abstract Dictionary class which is implemented by HashTable)"
1158251,2,1,6,java.util.HashMap,Use a Map implementation such as HashMap.
1162583,1,0,5,java.util.HashMap,in a high-traffic HashMap).
1163280,2,0,0,java.util.HashMap,I suggest making the HashMap larger is equals() is expensive (e.g.
1163642,1,0,0,java.util.HashMap,Currently I store these in a HashMap.
1163642,1,0,0,java.util.HashMap,"Is there any way I could be doing this faster, using a better implementation of Map than HashMap or even using arrays to prevent boxing/unboxing?"
1190049,1,0,10,java.util.HashMap,Using two (or more) objects as a HashMap key.
1190049,1,0,10,java.util.HashMap,I want to store certain objects in a HashMap.
1190118,2,1,31,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
1191289,1,0,3,java.util.HashMap,Generally I use the client's IP address (including port) as the key in a HashMap that maps to the SocketChannel object.
1191289,1,0,3,java.util.HashMap,"Otherwise, I would need to do a computationally expensive check on the HashMap every time OP_READ occurs, and it is obvious that MANY more of those will occur for a client than OP_ACCEPT."
1195861,2,1,2,java.util.HashMap,"Then you can use a HashMap<Record, Integer> to check if a record already exists in the set - if it does, increment count (the map's value) by 1, else add it."
1198836,2,1,3,java.util.HashMap,HashMap) then you're not going to lose it later (which is very confusing)!
1199687,2,0,0,java.util.HashMap,"Just use a HashMap, as described here:  http://www.equivalence.co.uk/archives/99"
1199690,2,0,6,java.util.HashMap,"If you have more than a few commands, look into using the Command pattern, as answered elsewhere (although you can retain the enum and embed the call to the implementing class within the enum, instead of using a HashMap)."
1204183,2,0,7,java.util.HashMap,You could then extend generic HashMap or HashTable by providing a key-value pair sucking function: code.
1202468,2,0,7,java.util.HashMap,ThreadLocal variables in Java works by accessing a HashMap held by the Thread.currentThread() instance.
1210197,1,0,4,java.util.HashMap,"Differences between .Net Hashtable, Java Hashtable & HashMap."
1210197,1,0,4,java.util.HashMap,And at the same time a Java HashMap is not synchronized and has better performance?
1217884,2,1,4,java.util.HashMap,"If you want to capture headers, your best approach is to override all addHeader() / setHeader() (Date, int and String) in your HttpServletResponseWrapper and store them in a HashMap or Properties instance (or MultiMap if you're using Google Collections)."
1219548,1,0,10,java.util.HashMap,"The Java implementation, using a HashMap, does not guarantee the order of elements."
1219684,2,0,2,java.util.HashMap,"Also, to maintain insertion order, you can use a LinkedHashMap instead of a HashMap."
1219820,2,0,1,java.util.HashMap,This is the modified code from o948 where you use a TreeMap instead of a HashMap.
1220738,1,0,0,java.util.HashMap,"HashMapList keeps its elements inside a HashMap) and when I call add method this error message will be shown in the concole ""Exception in thread ""main"" java.lang.NullPointerException code."
1232871,2,0,0,java.util.HashMap,So perhaps you should be using a HashMap instead of an ArrayList.
1232871,2,0,0,java.util.HashMap,"In the HashMap, store your TransactionEvents using the TransactionID as the Key."
1232871,2,0,0,java.util.HashMap,Lookups in a HashMap are O(1).
1232871,2,0,0,java.util.HashMap,Note that adding to the HashMap can become quite slow if you exceed its initial capacity - since it has to do a re-hash.
1241479,2,0,1,java.util.HashMap,"Keys of hashmaps are unique and you can get a set of them using HashMap.keyset(); to retrieve the original case, it's as simple as HashMap.get(""UPPERCASENAME"")."
1241479,2,0,1,java.util.HashMap,So HashMap.keyset().removeAll will effect the hashmap :) EDIT: use McDowell's solution.
1243513,2,0,2,java.util.HashMap,"To me seeing a method with an argument of HashMap<Long,Map<Integer,String>> is much like those C methods like foo(int, int, int, void*, int) and so on."
1243513,2,0,2,java.util.HashMap,"For a public interface it would be better to create FooBarMap that wraps HashMap<Long,Map<Integer,String>> rather than 'typedef,' but for class-internal use I see no down-side at all."
1243532,2,0,0,java.util.HashMap,and if I someday decide do change the implementing class from HashMap to TreeMap or Java7GreatEnhancedWonderfulMap :-) nothing will break.
1243532,2,0,0,java.util.HashMap,"But with this, you are stuck with the HashMap."
1251349,2,0,6,java.util.HashMap,"But you can implement the your idea useing HttpSessionListener, when a new session is created store it in a HashMap with session id as a key and object is actual HttpSessionObject."
1263128,1,0,5,java.util.HashMap,"Since that is no option, I'd like to reverse the research and ask you which are the most common Exceptions and RuntimeExceptions you've come across when dealing with:  Casting Arrays Vector, ArrayList, HashMap, etc."
24193946,2,0,0,java.util.HashMap,"Casting - ClassCastException Arrays - ArrayIndexOutOfBoundsException Vector, ArrayList, HashMap, etc."
1276435,2,0,1,java.util.HashMap,public class Trie {     private HashMap map = new HashMap(); code. }
1264686,2,0,5,java.util.HashMap,"If your hashCode() method returns a constant value all your keys will hash to the same bucket in the HashMap, effectively reducing your HashMap to be a linked list, with access time O(n) (instead of approximating O(1))."
1264699,2,0,2,java.util.HashMap,Why do you use HashMap in such inefficient way.
1266224,2,0,3,java.util.HashMap,"For example, if you are looking at employee records and they all have a job title, use a HashMap when loading the data and reuse the job titles already found."
1273139,1,0,120,java.util.HashMap,C# Java HashMap equivalent.
1273139,1,0,120,java.util.HashMap,Coming from a Java world into a C# one is there a HashMap equivalent?
1273149,2,1,143,java.util.HashMap,"Some notable differences that you should be aware of:  Adding/Getting items  Java's HashMap has the put and get methods for setting/getting items  myMap.put(key, value) MyObject value = myMap.get(key)  C#'s Dictionary uses the Item property for setting/getting items  myDictionary.Item[key] = value MyObject value = myDictionary.Item[key]   null keys  Java's HashMap allows null keys .NET's Dictionary throws an ArgumentNullException if you try to add a null key  Adding a duplicate key  Java's HashMap will replace the existing value with the new one."
1273149,2,1,143,java.util.HashMap,Attempting to get a non-existent key  Java's HashMap will return null.
4855802,2,0,24,java.util.HashMap,"From C# equivalent to Java HashMap I needed a Dictionary which accepted a ""null"" key, but there seems to be no native one, so I have written my own."
23739335,2,0,1,java.util.HashMap,I'm using HashMap to keep two related values namely the an array element and its frequency (how frequently it appears).
1284456,2,0,18,java.util.HashMap,"For example, suppose that a HashMap was used to implement the cache and that the thread was interrupted while the HashMap was being reorganized."
1285015,2,0,1,java.util.HashMap,"One thing to consider: If you intend to use instances of a class as keys in a HashMap, or if you're going to put them in a HashSet, it's safer to make them immutable."
1285015,2,0,1,java.util.HashMap,HashMap and HashSet count on the fact that the hash code for an object remains constant as long as the object is in the map or set.
1285015,2,0,1,java.util.HashMap,"If you use an object as a key in a HashMap, or if you put it in a HashSet, and then change the state of the object so that hashCode() would return a different value, then you're confusing the HashMap or HashSet and you'll get strange things; for example, when you iterate the map or set the object is there, but when you try to get it, it's as if it is not there."
1285015,2,0,1,java.util.HashMap,This is due to how HashMap and HashSet work internally - they organize objects by hash code.
1288708,1,0,5,java.util.HashMap,"some of the ones I know are Array, Arraylist, Hashtable, HashMap, HatSet, Node, NodeList, TreeNode, TreeMap"
1291836,1,0,51,java.util.HashMap,ConcurrentHashMap vs Synchronized HashMap.
1291836,1,0,51,java.util.HashMap,"What is the difference between using the wrapper class, SynchronizedMap, on a HashMap and ConcurrentHashMap?"
1291836,1,0,51,java.util.HashMap,Is it just being able to modify the HashMap while iterating it (ConcurrentHashMap)?
25570488,2,0,3,java.util.HashMap,"Both are synchronized version of HashMap, with difference in their core functionality and their internal structure."
25570488,2,0,3,java.util.HashMap,"whereas Collections.synchronizedMap(), we get a synchronized version of HashMap and it is accessed in blocking manner."
14856151,2,0,3,java.util.HashMap,Also iterators returned for ConcurrentHashMap are weakly consistent instead of fail fast technique used by Synchronized HashMap.
20417527,2,0,11,java.util.HashMap,Synchronized HashMap：  Each method is synchronized using an object level lock.
20417527,2,0,11,java.util.HashMap,This article Java 7: HashMap vs ConcurrentHashMap  is a very good read.
1298163,2,1,22,java.util.HashMap,It has considerably more overhead than ArrayList or HashMap.
1298681,2,0,11,java.util.HashMap,Using a HashMap perhaps?
11799512,2,0,0,java.util.HashMap,"ArrayList < HashMap < String , String > > discard = findResultsToDiscard(results); results.removeall(discard); However the remove all method was taking upwards of 6 seconds (NOT including the method to get the discard results) to remove approximately 800 results from an array of 2000 (ish)."
26687506,2,0,1,java.util.HashMap,Synchronised              Vector        HashMap              HashSet                               Concurrent     CopyOnwriteArrayList   ConcurrentHashMap   ConcurrentHashSet    ArrayBlockingQueue  etc.
1318603,1,0,0,java.util.HashMap,I will load the contents of this file into a Collection like List or HashMap.
1324064,1,0,22,java.util.HashMap,Performance of HashMap with different initial capacity and load factor.
1324064,1,0,22,java.util.HashMap,I am using two java.util.HashMap to store some frequently used data in a Java web app running on Tomcat.
1325356,2,0,5,java.util.HashMap,It is a good idea to do this because when a HashMap resizes it has to recalculate the hash values for every key in the table.
1324701,2,0,2,java.util.HashMap,From HashMap.java: code.
1324241,2,1,12,java.util.HashMap,"In the absence of a perfect hashing function for your data, and assuming that this is really not a micro-optimization of something that really doesn't matter, I would try the following: Assume the default load capacity (.75) used by HashMap is a good value in most situations."
1324241,2,1,12,java.util.HashMap,"That being the case, you can use it, and set the initial capacity of your HashMap based on your own knowledge of how many items it will hold - set it so that initial-capacity x .75 = number of items (round up)."
1341216,2,0,0,java.util.HashMap,"you might also want to declare them as Map instead of HashMap, this way if you ever decide to change the Map implementation you use, you'll only have to make a change in one place (where you instanciate your object) rather than in many places (where you use your object) code."
1341252,2,1,3,java.util.HashMap,"Clearly HashMap<Integer, HashMap<Integer, Rescue>> is wrong because then a value could be replaced in time_id_police with a HashMap<Integer, Ambulance>."
1347949,1,0,34,java.util.HashMap,Correct way to initialize HashMap and can HashMap hold different value types?
1347949,1,0,34,java.util.HashMap,So I have two questions about HashMaps in Java:  What is the correct way to initialize a HashMap?
1347949,1,0,34,java.util.HashMap,Can a HashMap hold different types of objects/data types as values?
1347949,1,0,34,java.util.HashMap,"Also, is it okay to store a HashMap as a value within a HashMap?"
1348101,2,0,1,java.util.HashMap,"Also, since HashMap is an object, it can also be a value in a HashMap."
1347966,2,0,4,java.util.HashMap,Eclipse is recommending that you declare the type of the HashMap because that enforces some type safety.
1347966,2,0,4,java.util.HashMap,"If you want to do the latter, try declaring map as HashMap<String,Object>."
1347996,2,0,1,java.util.HashMap,"A HashMap can hold any object as a value, even if it is another HashMap."
1348002,2,0,12,java.util.HashMap,By using HashMap you can do things like: code.
1348018,2,1,62,java.util.HashMap,"In this case the content of the HashMap can be any Object, so that can be Integer, int[], etc."
1348018,2,1,62,java.util.HashMap,"You can certainly put a HashMap as a value in another HashMap, but I think there are issues if you do it recursively (that is put the HashMap as a value in itself)."
1348030,2,0,0,java.util.HashMap,In answer to your second question: Yes a HashMap can hold different types of objects.
1348030,2,0,0,java.util.HashMap,You have to use the Integer wrapper class to store an int value in a HashMap
1348075,2,0,2,java.util.HashMap,What goes inside the brackets is you communicating to the compiler what you're going to put in the HashMap so that it can do error checking for you.
1348199,1,0,153,java.util.HashMap,Java - HashMap vs Map objects.
28538905,2,0,3,java.util.HashMap,"Map having following implementations,  HashMap    Map m = new HashMap(); LinkedHashMap     Map m = new LinkedHashMap(); Tree Map     Map m = new TreeMap(); WeakHashMap    Map m = new WeakHashMap();  Suppose you have created one method (It's just spudo code)."
28538905,2,0,3,java.util.HashMap,"Suppose you project requirement are changing each time as follows,      Method should return map contents - Need to return HashMap."
28538905,2,0,3,java.util.HashMap,Method should return map key's in insertion order - Need to change return type HashMap to LinkedHashMap.
25995560,2,0,0,java.util.HashMap,"HashMap is an implementation of Map so it's quite the same but has ""clone()"" method as i see in reference guide))"
1348221,2,0,3,java.util.HashMap,"With first case you'll be able to use special HashMap methods (but I don't remember anyone realy useful), and you'll be able to pass it as a HashMap parameter: code."
1348228,2,1,163,java.util.HashMap,"In the first case, the interface is HashMap<String, Object>, whereas in the second it's Map<String, Object>."
1348228,2,1,163,java.util.HashMap,"If you declare it as HashMap<String, Object>, you have to change your contract if you want to change the underlying implementation."
1348230,2,0,8,java.util.HashMap,"In your second example the ""map"" reference is of type Map, which is an interface implemented by HashMap (and other types of Map)."
1348230,2,0,8,java.util.HashMap,It says nothing about the implementation of the Map (in this case a HashMap).
28417418,2,0,0,java.util.HashMap,"First of all Map is an interface it has different implementation like - HashMap, TreeHashMap, LinkedHashMap etc."
28417418,2,0,0,java.util.HashMap,That means we can assign/put any HashMap type variable to a Map type variable without any type of casting.
1348245,2,0,11,java.util.HashMap,"According to Joshua Block, you should always attempt to code to interfaces, to allow you to better handle changes to underlying implementation - i.e. if HashMap suddenly was not ideal for your solution and you needed to change the map implementation, you could still use the Map interface, and change the instantiation type."
1348246,2,0,34,java.util.HashMap,Map is an interface that HashMap implements.
1348246,2,0,34,java.util.HashMap,"The difference is that in the second implementation your reference to the HashMap will only allow the use of functions defined in the Map interface, while the first will allow the use of any public functions in HashMap (which includes the Map interface)."
1348287,2,0,6,java.util.HashMap,"Map is the static type of map, while HashMap is the dynamic type of map."
1348287,2,0,6,java.util.HashMap,"A good rule of thumb is to remain as abstract as possible on the API level: If for instance a method you are programming must work on maps, then it's sufficient to declare a parameter as Map instead of the stricter (because less abstract) HashMap type."
1348326,2,0,14,java.util.HashMap,"but there are   different ways or creating a map, such   as a HashMap, and these different ways   provide unique methods that not all   maps have."
1348326,2,0,14,java.util.HashMap,"Edit responding to comment: As for your map comment below, Yes using the ""Map"" interface restricts you to only those methods unless you cast the collection back from Map to HashMap (which COMPLETELY defeats the purpose)."
1348326,2,0,14,java.util.HashMap,"Often what you will do is create an object and fill it in using it's specific type (HashMap), in some kind of ""create"" or ""initialize"" method, but that method will return a ""Map"" that doesn't need to be manipulated as a HashMap any more."
1348326,2,0,14,java.util.HashMap,"Note that it is acceptable to have one section of your code treat it as a ""HashMap"" while the other treats it as a ""Map"", but this should flow ""down""."
1352553,1,0,10,java.util.HashMap,How can I use MATLAB arrays as keys to the HashMap java objects?
1357838,2,1,6,java.util.HashMap,"When using nonscalar arrays as keys in a HashMap, Matlab will convert them to double[], but they'll be distinct Java objecs, so they'll get this behavior."
1357838,2,1,6,java.util.HashMap,We just need to slap them in a wrapper class that provides the interface that HashMap is expecting.
1357838,2,1,6,java.util.HashMap,"For easier use, you could create a HashMap subclass that checked the type of its input keys, and automatically wrapped primitive arrays in this by-value wrapper."
1359272,2,0,2,java.util.HashMap,"EnumMap is comparable in speed to using a HashMap with integers as the Key, but are Keys are Immutable."
1361810,2,0,2,java.util.HashMap,"HashMap is not synchronized, so it's faster, but you can have problem in a multi-thread environment."
1361813,2,0,10,java.util.HashMap,They offer all the features of HashTable with a performance very close to a HashMap.
1363101,1,0,2,java.util.HashMap,"I have HashMap 1, which contains 5 keys, all of which have Hashmaps as values."
1363130,2,0,0,java.util.HashMap,"If you aren't using Generics, then a HashMap stores and retrieves the keys and values as Object, so you might need to cast, which would look something like this: code."
1363141,2,0,0,java.util.HashMap,"You can use ((HashMap)map1.get(subCategoryMap)).put(newKey, newValue); Also, if you are using Java 5 or Java 6, you can use generic to avoid the cast in HashMap"
1371282,1,0,0,java.util.HashMap,I'm wondering if anyone knows of alternatives to HashMap & ArrayList that have some of the sugar of ruby.
1371647,2,0,13,java.util.HashMap,"For Java, I generally use this convention:  Interface: Builder Abstract Class: AbstractBuilder Concrete Class: BuilderImpl, DefaultBuilder, MyBuilder, etc  I think that agrees fairly well with Java standards (Map, AbstractMap, HashMap respectively)."
1373015,2,1,21,java.util.HashMap,"The advantage is that you can have type safety in your code and that you can easily add id-based lookup (either by building a HashMap<String,Error> in the constructor or by simply looping over values())."
1378310,1,0,24,java.util.HashMap,Performance ConcurrentHashmap vs HashMap.
1378310,1,0,24,java.util.HashMap,"How is the performance of ConcurrentHashMap compared to HashMap, especially .get() operation (I'm especially interested for the case of only few items, in the range between maybe 0-5000)?"
1378310,1,0,24,java.util.HashMap,Is there any reason not to use ConcurrentHashMap instead of HashMap?
1378870,2,0,60,java.util.HashMap,"If this is a local variable, then chances are a HashMap is sufficient - unless you know that  references to the object can leak out to another thread."
1378870,2,0,60,java.util.HashMap,"If this is an instance field, and the class hasn't been designed to be thread safe, then document it as not thread safe, and use a HashMap."
1381878,2,0,1,java.util.HashMap,The fact is that hash codes must not be relied on for equality testing and are only used in some specific hash mapping operations (such as those implemented by the very useful HashMap implementation).
1381878,2,0,1,java.util.HashMap,As such they have no need of being really unique - they only have to be unique enough to not generate a lot of clashes (which will render the HashMap implementation inefficient).
1381898,1,0,2,java.util.HashMap,Is there a parallel processing implementation of HashMap available to Java?
1381898,1,0,2,java.util.HashMap,"Searching for the magic ParallelHashMap class More succinctly, can you use multiple threads to speed up HashMap lookups?"
1381898,1,0,2,java.util.HashMap,"Yet, our look-ups only utilize a single thread to retrieve values from the HashMap."
1381938,2,0,3,java.util.HashMap,You could also try using a lower loadFactor in the HashMap - to reduce collision probability.
1382020,2,0,1,java.util.HashMap,From the HashMap documentation (I've changed the emphasis):  Note that this implementation is not   synchronized.
1382020,2,0,1,java.util.HashMap,Since your HashMap is never modified you can safely let multiple threads read from it.
2041788,2,0,0,java.util.HashMap,I think you need evidence that the get() method on the HashMap is where you delay is.
1382105,2,0,1,java.util.HashMap,"For good HashMap performance, the results of this computation should be randomly dispersed over all possible int values."
1382105,2,0,1,java.util.HashMap,"From the HashMap documentation:  This implementation provides   constant-time performance for the   basic operations (get and put),   assuming the hash function disperses   the elements properly among the   buckets."
1383797,1,0,208,java.util.HashMap,"If I have the value ""foo"", and a HashMap<String> ftw for which ftw.containsValue(""foo"") returns true, how can I get the corresponding key?"
1395010,1,0,3,java.util.HashMap,"For an old-school HashMap solution, TickHolder would have a put method: code."
1395010,1,0,3,java.util.HashMap,Which seems to mean that I have to fall back to implementing TickHolder as containing an old-school HashMap in order to write my conditional replace method.
1402904,2,0,7,java.util.HashMap,The worst case for this is probably using a stock HashMap with a wide range--so I just did that.
1402904,2,0,7,java.util.HashMap,"(Pretty much the same idea as a HashMap, but optimizing out a few of the unknowns that a Hash has to make allowances for should make it a few times faster)."
1404201,2,0,1,java.util.HashMap,Use a HashMap to create your dataset (value-count pairs) in memory as you traverse the file.
1404201,2,0,1,java.util.HashMap,"The HashMap should give you close to O(1) access to the elements while you create the dataset (technically, in the worst case HashMap is O(n))."
1404201,2,0,1,java.util.HashMap,"Once you are done searching the file, use Collections.sort() on the value Collection returned by HashMap.values() to create a sorted list of value-count pairs."
1403033,2,0,0,java.util.HashMap,"This is the source for java.lang.Integer.hashCode(), which is the hashing function that will be used if you store your entries as a HashMap<Integer, Integer>: code."
1403108,2,0,1,java.util.HashMap,"Otherwise, use a HashMap<Integer, int[]>, where the values are all length 1 arrays."
1403123,2,0,4,java.util.HashMap,"HashMap A million integers is not really a lot, even for interpreted languages, but especially for a speedy language like Java."
1403123,2,0,4,java.util.HashMap,It will probably take longer to do string splitting and parsing to convert to integers than even the simplest algorithm to find frequencies using a HashMap.
1410520,1,0,0,java.util.HashMap,I have a HashMap which has nearly 50 entries.
1419715,2,1,25,java.util.HashMap,This   implementation differs from HashMap in   that it maintains a doubly-linked list   running through all of its entries.
1423379,1,0,2,java.util.HashMap,I don't necessarily need a map-like syntax as in the above; but have that for now as I've initially implemented this code with a HashMap as the actual data structure being set by Spring.
1425455,2,1,10,java.util.HashMap,"Edit; Oh geez, I'm an idiot, I gave info for HashMap, not HashTable."
1425455,2,1,10,java.util.HashMap,"So, putting it together (for 32/64 bit Sun HotSpot JVM): HashMap needs 24 bytes (itself, primtive fields) + 12 bytes (slot array constant) + 4 or 8 bytes per slot + 24/40 bytes per entry + key object size + value object size + padding each object to multiple of 8 bytes OR, roughly (at most default settings, not guaranteed to be precise):   On 32-bit JVM: 36 bytes + 32 bytes/mapping + keys & values On 64-bit JVM: 36 bytes + 56 bytes/mapping + keys & values  Note: this needs more checking, it might need 12 bytes for object overhead on 64-bit VM."
1425288,2,0,4,java.util.HashMap,"I would read this first: http://www.codeinstructions.com/2008/12/java-objects-memory-structure.html Just use the sunjdk tools to figure out the size of K, V and  jmap -histo [pid] num     #instances         #bytes  class name 1:        126170       19671768  MyKClass 2:        126170       14392544  MyVClass 3:             1         200000  MyHashtable Also you may want to use HashMap instead of Hashtable if you do not need synchronization."
1429741,2,0,1,java.util.HashMap,Even something as simple as reading a HashMap can be caught in an infinite loop.
1429901,1,0,1,java.util.HashMap,I was thinking of just adding entries to a HashMap where the key is the Action's class and the value is the ServiceImpl's Class.
1438733,1,0,0,java.util.HashMap,"I would like to change my qestion to the following: I have one HashMap object, and one int."
1440607,2,0,1,java.util.HashMap,"By the way, no comment or answer thinks that you serialized a HashMap and want to deserialize MyClass (it isn't really possible - you can't decide what class you get when you deserialize)."
1444341,1,0,8,java.util.HashMap,"Granted, the stack trace will be slightly cleaner (since its target is the above method, rather than an internal check in the HashMap implementation of the JRE)."
1444341,1,0,8,java.util.HashMap,"[As has been pointed out in the comments, HashMap.put actually allows null values for the key."
1448379,2,1,13,java.util.HashMap,"Anyway, you can use multiple Collections, use the TreeMap (or rather HashMap) for looking up elements by keys, and have a SortedSet to iterate on the values."
1452166,2,0,2,java.util.HashMap,"(Note, LinkedList has a Stack API) So you would store the name in ""tagName"" and the variables in the HashMap and continue."
19480409,2,0,0,java.util.HashMap,"This approach stores key presses in a HashMap, resetting them when the key is released."
19480409,2,0,0,java.util.HashMap,"You can use the HashMap to check if a certain key is pressed, or call KeyboardInput2.allPressed() to print every pressed key."
1473444,1,0,2,java.util.HashMap,"I could not make the "" new HashMap<Class<T>, Class<?"
1474099,2,1,2,java.util.HashMap,"If you look at the source code, then you can notice that SessionFactory stores created serializers in a HashMap, and HashMap is not a thread-safe object."
1488571,1,0,4,java.util.HashMap,All the fields arrive filled in correctly except for the one that is a HashMap.
1488571,1,0,4,java.util.HashMap,Does anyone know if there's an inherent incomaptability between Java HashMap and Flex?
1488659,2,0,8,java.util.HashMap,It does look like object is what you want: http://www.mail-archive.com/flexcoders@yahoogroups.com/msg17137.html Relevant text:  When a HashMap is sent back to Flex it   will simply be an Object.
1488659,2,0,8,java.util.HashMap,"You can   access a value by doing myObj[key] Matt From: flexcoders@yahoogroups.com   [mailto:flexcoders@yahoogroups.com] On   Behalf Of prasanthasi Sent: Saturday,   November 26, 2005 7:24 PM To:   flexcoders@yahoogroups.com Subject:   [flexcoders] Mapping Java HashMap to   Flex Actionscript Hi,    I am trying map Java HashMap to   Flex Actionscript."
1488659,2,0,8,java.util.HashMap,Another possibly relevant link: http://www.nabble.com/How-to-deal-with-a-java.util.HashMap-in-flex-td17642614.html
3659242,2,0,20,java.util.HashMap,"Another way of doing this is using a Map (HashMap) with Key, Value pairs representing your object."
1490441,2,1,2,java.util.HashMap,"Create a HashMap<String,Node> ."
1493769,2,0,1,java.util.HashMap,"Ie, the pointer to the HashMap could change at any time (for instance, if you did requests = new HashMap() the pointer would have changed)."
1493484,2,0,1,java.util.HashMap,You could replace HashMap with ConcurrentHashMap.
1493500,2,0,1,java.util.HashMap,"You should probably be using ConcurrentHashMap instead of HashMap, which will allow you to get rid of a lot of your manual synchronization."
1494812,1,0,23,java.util.HashMap,"Sure, I guess I could achieve the same effect through a HashMap but why waste all that space and effort when it should be perfectly possible to do this with a set?"
12415592,2,0,2,java.util.HashMap,"Why not just use a HashMap<X,X>?"
1494928,2,0,3,java.util.HashMap,"Note that in Java, a HashSet uses a HashMap internally and so there isn't additional storage overhead in using a HashMap instead."
1495308,1,0,18,java.util.HashMap,"As you can imagine, a ClassCastException is thrown at runtime, but can someone explain why the casting of a List to a HashMap is considered legal at compile time?"
1495320,2,1,29,java.util.HashMap,Because conceivably getList() could be returning a subclass of HashMap which also implements List.
1495321,2,0,17,java.util.HashMap,There is no reason why there couldn't exist a subclass of HashMap which also implements the List interface.
1496141,1,0,1,java.util.HashMap,"Having basically zero experience with reflection, I'm curious if this is something that can be accomplished using it, or if I should take the same approach as I would in Perl, and create a HashMap or HashTable of Objects, and tie them to a entry in a Hash of JFrames."
1501901,2,1,0,java.util.HashMap,"For example, if we serialize a HashMap that works based on Object.hashCode(), its deserialized version would behave differently than the original map."
1509391,1,0,62,java.util.HashMap,"Is there a elegant way of obtaining only one Entry<K,V> from HashMap, without iterating, if key is not known."
1509401,2,0,90,java.util.HashMap,"Maps are not ordered, so there is no such thing as 'the first entry', and that's also why there is no get-by-index method on Map (or HashMap)."
1509487,2,1,44,java.util.HashMap,"TreeMap has an overhead so HashMap is faster, but just as an example of an alternative solution."
11340915,2,0,1,java.util.HashMap,This approach doesn't work because you used HashMap.
1510023,2,0,5,java.util.HashMap,"If you really want the API you suggested, you could subclass HashMap and keep track of the keys in a List for example."
1509746,2,0,0,java.util.HashMap,"If you're regularly having to deal with values that aren't defined in your Enum, perhaps you should be using something like a  HashMap<String,Fruit> You can then use containsKey(), to find out if a particular key exist."
1513703,1,0,0,java.util.HashMap,Parse into HashMap using Commons Digester.
1513703,1,0,0,java.util.HashMap,I need to parse xml into a HashMap where the 'key' is the concatenation of two elements attributes.
1514866,1,0,0,java.util.HashMap,How to use an instance initializer with a generic HashMap?
1514866,1,0,0,java.util.HashMap,Can you use an instance initializer with a generic HashMap?
1514866,1,0,0,java.util.HashMap,"I found this code online, but am having trouble converting it to a generic HashMap instead of a basic HashMap: code."
2137876,2,0,0,java.util.HashMap,Your intent was to initialize an anonymous instance of HashMap.
2137876,2,0,0,java.util.HashMap,What we're looking for is a way to initialize an anonymous HashMap instance.
2137876,2,0,0,java.util.HashMap,What we have above creates an anonymous subclass of HashMap then creates an anonymous instance of that anonymous class.
2137876,2,0,0,java.util.HashMap,"Or roll your own HashMap subclass with the ""of"" style factory methods."
2137365,2,1,21,java.util.HashMap,"The ""problem"" in your case is that HashMap implements Serializable."
1516381,1,0,3,java.util.HashMap,We've implemented this using a static HashMap instance where we create a key by concatinating the three data fields.
1516381,1,0,3,java.util.HashMap,Create class level static HashMap instance: code.
1516396,2,1,7,java.util.HashMap,"That being said, if you want to squeeze every bit of speed possible out of this routine (without rewriting it in assembly language ;-) you might consider using an array instead of a HashMap, since there are only a small, limited number of keys."
1516429,2,0,0,java.util.HashMap,"Once your HashMap finds the bucket, it will still need to iterate over the items in the bucket to test the result of  equals() until it finds a match."
1516429,2,0,0,java.util.HashMap,"With that in mind, your lookups on the HashMap should be quicker."
1516549,1,0,36,java.util.HashMap,Bad idea to use String key in HashMap?
1516549,1,0,36,java.util.HashMap,I see a lot of usage of putting String keys into HashMap-s (using the default String hashCode() method).
1516549,1,0,36,java.util.HashMap,A lot of this usage could result in significant application issues if a map put displaced a HashMap entry that was previously put onto the map with a truely distinct String key.
1516577,2,0,3,java.util.HashMap,I strongly suspect that the HashMap.put method does not determine whether the key is the same by just looking at String.hashCode.
1516577,2,0,3,java.util.HashMap,"Therefore, the new key String would only be judged to be the same key String as one that is already in the HashMap if and only if the value returned by hashCode is equal, and the equals method returns true."
1516577,2,0,3,java.util.HashMap,"Edit So, to answer the question, no, it would not be a bad idea to use a String for a key to a HashMap."
1516597,2,0,2,java.util.HashMap,HashMap) handle hash collisions just fine.
1516597,2,0,2,java.util.HashMap,"For example, HashMap can store multiple objects per bucket."
1516601,2,1,71,java.util.HashMap,Developers do not have to work around the issue of hash collisions in HashMap in order to achieve program correctness.
1516601,2,1,71,java.util.HashMap,"Every usage of hashing has a way to handle collisions, and the Java Collections (including HashMap) is no exception."
1516601,2,1,71,java.util.HashMap,"Some more detail, if you want it: The way hashing works (in particular, in the case of hashed collections like Java's HashMap, which is what you asked about) is this:    The HashMap stores the values you give it in a collection of sub-collections, called buckets."
1516601,2,1,71,java.util.HashMap,"To provide one example, using the defaults, if you add 100 entries to a HashMap, there will be 256 buckets."
1516601,2,1,71,java.util.HashMap,The HashMap uses this hashcode to select a bucket.
1516601,2,1,71,java.util.HashMap,"Ultimately, this means taking the integer value modulo the number of buckets, but before that, Java's HashMap has an internal method (called hash()), which tweaks the hashcode to reduce some known sources of clumping."
1516601,2,1,71,java.util.HashMap,"When looking up a value, the HashMap selects the bucket, and then searches for the individual element by a linear search of the linked list, using .equals()."
1516652,2,0,4,java.util.HashMap,"That's why Java's HashMap has a load factor, a ratio between buckets and inserted elements which, when exceeded, will cause rehashing of the table with twice the number of buckets."
16898191,2,0,2,java.util.HashMap,"Of course, the number of integers is limited to 2^32, where as there is no limit to the number of strings (and there is no theoretical limit to the amount of keys that can be stored in a HashMap)."
16898191,2,0,2,java.util.HashMap,"Java's implementation of HashMap is smart enough to handle strings (any type of key, actually) with the same hashcode automatically, so it is wise to let Java handle these things for you."
1516858,1,0,1,java.util.HashMap,Compound String key in HashMap.
1516858,1,0,1,java.util.HashMap,We are storing a String key in a HashMap that is a concatenation of three String fields and a boolean field.
1516858,1,0,1,java.util.HashMap,"So to get around this, based on advice in another post, I'm planning on creating a key class which will be used as the HashMap key: code."
1516858,1,0,1,java.util.HashMap,"To store this key class as the HashMap key, does one only need to override the equals() and hashCode() methods?"
1517171,2,0,1,java.util.HashMap,"Just having one bit of information from k4 means that if all your composite keys have identical k1, k2, k3 and only differing k4s, your hash codes will all be identical and you'll get a degenerate HashMap."
1518133,2,1,1,java.util.HashMap,"If the latter, you could use a HashMap which contains ArrayLists - I'm assuming these values are String, and if the key was also a String, it would look something like this: code."
1518133,2,1,1,java.util.HashMap,"If the former, you could use a HashMap which contains HashMaps."
1518103,1,0,23,java.util.HashMap,HashMap vs ArrayList performance am I correct.
1518103,1,0,23,java.util.HashMap,I currently believe that:  When you need a structure from which you will be retrieving items randomly - use a HashMap When you will be retrieving items in order (e.g.
1518110,2,1,22,java.util.HashMap,"However, it's worth noting that ArrayList and HashMap are only two implementations of the List and Map interfaces, respectively."
1518130,2,0,4,java.util.HashMap,If you don't care about the order (you just want to store a bunch of items) then you can use a HashMap.
1518166,2,0,2,java.util.HashMap,"If I need to look up items, I'd use a map structure like the HashMap."
1518176,2,0,8,java.util.HashMap,"You use a HashMap for data retrieval, but not always randomly."
1519255,2,0,39,java.util.HashMap,A HashSet is currently implemented simply by a HashMap where the value part of the key->value relationship is not used.
1519674,1,0,3,java.util.HashMap,"This fails compilation, with this message:  ""The method put(K, V) in the type HashMap<K,V> is not applicable for the arguments (HashPlus.KeyWrapper, HashPlus.ValueWrapper)  And I'm at a loss."
1519674,1,0,3,java.util.HashMap,"I wouldn't think so - it's all in the same compilation unit, and it's not dropping to HashMap<Object,Object> - it's dropping to HashMap<K,V>, which seems odd."
1522499,2,0,0,java.util.HashMap,"If you need to do a lot of comparisons, or you are putting your objects in collection classes that do comparisons (for example HashMap, HashSet etc.)"
1526596,1,0,26,java.util.HashMap,Memory overhead of Java HashMap compared to ArrayList.
1526596,1,0,26,java.util.HashMap,I am wondering what is the memory overhead of java HashMap compared to ArrayList?
1526596,1,0,26,java.util.HashMap,"Thus, I am thinking about using one or several HashMap instead of using ArrayList."
1526596,1,0,26,java.util.HashMap,But I am wondering what is the overhead of HashMap.
9364797,2,0,0,java.util.HashMap,From there one can see that the HashMap takes roughly 5 times the space of an ArrayList.
9364797,2,0,0,java.util.HashMap,"There are two important facts to note however:  A lot of data structures (including ArrayList and HashMap) do allocate space more space than they need currently, because otherwise they would have to frequently execute a costly resize operation."
1526886,2,0,2,java.util.HashMap,"Since there are different instances where you'll need a key/value pair (where you may use a HashMap) and different instances where you'll just need a list of values (where you may use a ArrayList) then the question of ""which one uses more memory"", in my opinion, is moot, since it is not a consideration of choosing one over the other."
1526886,2,0,2,java.util.HashMap,"But to answer the question, since HashMap stores key/value pairs while ArrayList stores just values, I would assume that the addition of keys alone to the HashMap would mean that it takes up more memory, assuming, of course, we are comparing them by the same value type (e.g."
1527149,2,0,1,java.util.HashMap,"As usual, the Javadocs for these classes state pretty plainly what type of performance they offer: HashMap:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
1527149,2,0,1,java.util.HashMap,This means that HashMap.get(key) is O(1).
1527149,2,0,1,java.util.HashMap,If HashMap.get() is O(1) this means that retrieval operations take roughly the same amount of time regardless of how many entries are in the Map.
4622967,2,1,31,java.util.HashMap,"If you're comparing HashMap with ArrayList, I presume you're doing some sort of searching/indexing of the ArrayList, such as binary search or custom hash table...?"
4622967,2,1,31,java.util.HashMap,"Using that assumption, I've done some empirical tests and come up with the conclusion that ""You can store 2.5 times as many small objects in the same amount of RAM if you use ArrayList with binary search or custom hash map implementation, versus HashMap""."
4622967,2,1,31,java.util.HashMap,This means it is IMO somewhat wasteful that a HashMap separately stores references to keys and values.
4622967,2,1,31,java.util.HashMap,Caveats:  The most common type used for HashMap keys is String.
4622967,2,1,31,java.util.HashMap,"I got a figure of 2.8, being 8880502 entries inserted into the ArrayList compared with 3148004 into the HashMap on -Xmx256M JVM, but my ArrayList load factor was 80% and my objects were quite small - 12 bytes plus 8 byte object overhead."
4622967,2,1,31,java.util.HashMap,"My figure, and my implementation, requires that the key is contained within the value, otherwise I'd have the same problem with object creation overhead and it would be just another implementation of HashMap."
1526650,2,0,0,java.util.HashMap,"A map (such as HashMap) is a mapping from one value to another - i.e. you have a key that maps to a value, in a Key->Value kind of relationship."
1526710,2,0,5,java.util.HashMap,Runtime.getRuntime().freeMemory(); So I propose that you populate a HashMap and an ArrayList with the same data.
1526728,2,0,2,java.util.HashMap,HashMap  hold a reference to the value and a reference to the key.
1526728,2,0,2,java.util.HashMap,"So, assuming that the key uses the same memory of the value, HashMap uses 50% more memory ( although strictly speaking , is not the HashMap who uses that memory because it just keep a reference to it )  In the other hand HashMap provides constant-time performance for the basic operations (get and put) So, although it may use more memory, getting an element may be much faster using a HashMap than a ArrayList."
1527008,2,0,8,java.util.HashMap,"so if you want an offhand answer, the ratio should be about 1:3.25 or so, but you are only talking pointer storage--very small unless you are storing a massive number of objects--and if so, the utility of being able to reference instantly (HashMap) vs iterate (array) should be MUCH more significant than the memory size."
1533654,1,0,1,java.util.HashMap,I am trying to define  HashMap< ?
1535622,2,0,0,java.util.HashMap,HashMap is the way to go for sure.
1535622,2,0,0,java.util.HashMap,"I was wondering, how do I implement a HashMap?"
1535436,2,0,4,java.util.HashMap,"You're looking for a HashMap, such as a HashMap<K,V>."
1535440,2,1,7,java.util.HashMap,A good implementation is the HashMap.
1535441,2,0,0,java.util.HashMap,What's wrong with regular HashMap?
1537099,2,0,1,java.util.HashMap,"Compared to a simple HashMap, it is clunky."
1540699,2,1,52,java.util.HashMap,Java's HashMap class is an implementation of the Map interface.
1540699,2,1,52,java.util.HashMap,"Internally, HashMap is implemented using a hashtable."
1544961,2,0,7,java.util.HashMap,"I'd use HashMap rather than the old Hashtable (synchronised for all access and , more importantly, not a proper Collection - if you have a Collection you can pass it to any other method expecting any Collection), and StringBuilder over StringBuffer for similar reasons."
1545705,2,1,3,java.util.HashMap,HashMap or ConcurrentHashMap give better performance.
1551485,2,0,0,java.util.HashMap,"If you do not care how they are contained in the Data Structure, you can use a ( might have to look it up but it would be called a ) HashMap == in which case there would be a key that you supply, which can easily be: code."
1551485,2,0,0,java.util.HashMap,"if placement is null, the map did not contain the object previously, used in conjuction with containsKey() exact management of data set is obtainable Which will work find for get and put by ordered key, it's only that if you do toArray() you get a bizarre ordering that is only comprehensible to whomever wrote the HashMap implementation."
1556838,1,0,0,java.util.HashMap,"What's the best way to create a bean for a HashMap<Class,String>?"
1556854,2,1,5,java.util.HashMap,"If you mean a Map, where you don't mind which implementation, rather than specifically a HashMap, then use <util:map> (see section A.2.2.5 of the docs)."
1556854,2,1,5,java.util.HashMap,"If you really want an actual HashMap, then you can specify the map-class attribute of <util:map> as ""java.util.HashMap""."
1559134,2,0,2,java.util.HashMap,The the general purpose HashMap implementation is not the most efficient in this case.
1565907,2,0,4,java.util.HashMap,"If myIntHashTable is a normal java.util.Hashtable or java.util.HashMap, no copy of your Car object is made."
1565907,2,0,4,java.util.HashMap,Some additional notes:  Use HashMap instead of Hashtable.
1565907,2,0,4,java.util.HashMap,"Hashtable is a legacy collection class, which has (for almost all purposes) been replaced by HashMap."
1571905,1,0,3,java.util.HashMap,"I want to ensure that MyClass is instantiated with a single HashMap argument, which seems like it would be done something like this: code."
1571921,2,1,4,java.util.HashMap,"The best approximation you could get is by defining an interface for a factory, with a create() method that takes a single HashMap... Also you can replace the interface with an abstract class for which the constructor requires an HashMap, that will force sub classes to give one, but not more (the sub classes will not necessarily have an HashMap parameter)."
1573991,2,0,3,java.util.HashMap,"In other words, the HashMap isn't distributing the entries in seperate buckets for each seperate hashcode, it is grouping them by a proximity, so the more buckets it has, the more spread out the distribution, the less likely that there are collisions."
1573991,2,0,3,java.util.HashMap,"In other words, it allows the HashMap (or Set as the case may be) to distribute the objects into separate buckets making lookups faster."
1574831,2,0,2,java.util.HashMap,Javascript doesn't know what do do with a Java HashMap object (actually in your example you'll get the output of HashMap.toString()).
1578420,2,0,2,java.util.HashMap,"A better option may be to implement a HashMap with the string as the key and value and check if the string already exists and get it if it does, insert it if it doesn't."
1579113,1,0,4,java.util.HashMap,The util (fileToString) actually reads in the text from the file and the rest of the code stores it in a HashMap (propertyFilesCache).
1579113,1,0,4,java.util.HashMap,"Later, I read the file text from the HashMap as a String and reload it into a Java Properties object like so: code."
1579315,2,0,1,java.util.HashMap,This will work for any arguments because HashMap itself is generic.
1582990,2,0,1,java.util.HashMap,I would do it like Jon Skeet suggests (he wrote it while I was writing this) but for cases where the internal number representation is in a well defined range of say 0 to 20 (or something) I would probably not use a HashMap and introduce autoboxing of the int but rather use an ordinary array (like Month[12]) but both are fine (Jon later changed his post to include this suggestion).
1582972,2,0,4,java.util.HashMap,"But, in my experience, for this kind of work a HashMap is much too slow."
1582969,1,0,4,java.util.HashMap,"For example, hitting ctrl+space here: Map map = new ctrl+space On 3.4, i get offered HashMap(), on 3.5 Map() (which then gets defaulted to a new impl with methods templated)."
1583230,2,0,2,java.util.HashMap,"I am not sure it is configurable, but I know that if you have one Map instanciated as an HashMap, the second one will come with an HashMap present in the ""Content assist"" list."
1583230,2,0,2,java.util.HashMap,"Map<Integer, String> m = new HashMap<Integer, String>(); Map<Integer, String> m2  =  ctrl+space => HashMap See all the  eclipse Galileo 3.5 JDT Tips and Tricks"
1586079,2,1,1,java.util.HashMap,"In your case, this would be a drop in replacement for HashMap."
1592812,2,0,0,java.util.HashMap,Use HashMap and ArrayList wrapped by Collections.synchronizedMap() or Collections.synchronizedList() instead.
1593372,1,0,1,java.util.HashMap,"i need to insert into a very large LinkedList, whose elements i hold in a fast-access HashMap."
1597999,1,0,11,java.util.HashMap,"However, double (Java) cannot be used in containers like HashMap which is why it is auto-boxed to Double (Java)."
1599863,2,0,1,java.util.HashMap,"You can't, for example, write a Phantom[Identity]HashMap."
1599264,2,0,1,java.util.HashMap,"Somehow, this definition applies to objects in Java: you can store them in variables, in arrays, use them as function parameters and return them, use them as key of HashMap and other collections, etc."
1608816,1,0,0,java.util.HashMap,Static Access to HashMap/Array?
1609556,1,0,1,java.util.HashMap,"B.  Serializing a HashMap using ByteOutputStream to do a hash digest doesn't work, because when you read the HashMap back in from a ObjectOutputStream file, you may very well get a different byte[] from ByteOutputStream because of variations in pair order: the content is the same, but the byte[] (and so the hash disgest) is not."
1610984,2,0,0,java.util.HashMap,"For example, it appears that the ordering in a HashMap will differ between the two versions, but, since a HashMap is unordered, that isn't a real problem, unless you expect the order to be consistent."
1610993,2,0,6,java.util.HashMap,"No, but it's easy enough to wrap around a HashMap."
1610997,2,0,6,java.util.HashMap,"Java has no builtin Multisets, but you could build what you want with a HashMap<Integer, HashSet<Integer>>."
1612374,1,0,2,java.util.HashMap,Overriding HashMap equals method in Java.
1612374,1,0,2,java.util.HashMap,I noticed in the source code for HashMap it lists the equals method as final.
1612374,1,0,2,java.util.HashMap,Java HashMap equals method: code.
1612391,2,0,13,java.util.HashMap,"That's the equals method for HashMap.Entry, not HashMap itself - look at how it's trying to use the reference passed into it as a Map.Entry."
1625814,1,0,3,java.util.HashMap,Get a HashSet out of the keys of a HashMap?
1625814,1,0,3,java.util.HashMap,I have a pretty big (100'000s of entries) HashMap.
1625814,1,0,3,java.util.HashMap,"Now, I need a HashSet containing all the keys from this HashMap."
1625814,1,0,3,java.util.HashMap,"Unfortunately, HashMap only has a keySet() method which returns a Set but not a HashSet."
1627784,1,0,0,java.util.HashMap,ClassCastException When Casting HashMap Iterator to a Concrete Type.
1627784,1,0,0,java.util.HashMap,"I am trying to store objects in a HashMap, and then iterate over the values of the HashMap, calling methods on the stored objects."
1627784,1,0,0,java.util.HashMap,"In order to do that, I assume I need to downcast the iterator to the type of my class, but this throws a ClassCastException (""java.util.HashMap$ValueIterator cannot be cast to sketch_oct27a$MyClass"")."
1630224,2,0,0,java.util.HashMap,"However, I could have opted for a HashMap implementation, reducing the complexity to O(n) (as insert performance for HashMap is O(1))."
1630487,1,0,0,java.util.HashMap,Requests are redirected to controllers by controller urls that are in static HashMap that contains all controllers.
1636454,2,0,9,java.util.HashMap,"Consider the case of a HashMap that uses hashCode to discover which ""bucket"" an object will be in, and then uses equals to sequentially search all objects in the  bucket."
1636454,2,0,9,java.util.HashMap,If objects are allowed to mutate in a way that changes the outcomes of hashCode or equals you could end up with a scenario where HashMap calls hashCode.
1636454,2,0,9,java.util.HashMap,"HashMap then proceeds to compute which ""bucket"" to use."
1636454,2,0,9,java.util.HashMap,But before HashMap can acquire the lock on equals someone else grabs the lock and mutates the object so that equals become inconsistent with the previous value of hashCode.
1642263,2,0,11,java.util.HashMap,"HashSet calls put(K,V) on the internal HashMap which just inserts the new object overwriting the old entry if duplicate."
1642520,2,0,9,java.util.HashMap,"Like @jitter says, the java.util.HashSet uses a java.util.HashMap internally."
1642520,2,0,9,java.util.HashMap,When the hash changes between the first and second add a different bucket is used in the java.util.HashMap and the object is in the set twice.
1647221,1,0,12,java.util.HashMap,Does anyone know how Java implements its hash tables (HashSet or HashMap)?
1647432,2,1,14,java.util.HashMap,HashMap and HashSet are very similar.
1647432,2,1,14,java.util.HashMap,A HashMap contains an array of buckets in order to contain its entries.
1647432,2,1,14,java.util.HashMap,0.75 as load factor means that a HashMap of 16 buckets can only contain 12 entries (16*0.75).
1647432,2,1,14,java.util.HashMap,"Therefore, a best practice, if you know how many entries will be inserted, is to construct a HashMap specifying its final size: code."
1647489,2,0,1,java.util.HashMap,The HashMap has an array of Entry's.
1647259,2,0,8,java.util.HashMap,"You can check the source of HashMap, for example."
1647311,2,0,2,java.util.HashMap,There are two general ways to implement a HashMap.
1647311,2,0,2,java.util.HashMap,"The first method, which is the one Java users, makes every bucket in a the HashMap contain a singly linked list."
1647830,2,0,2,java.util.HashMap,This preprocessing is roughly O(N) for a HashMap.
1650571,2,0,3,java.util.HashMap,Retrieval from a HashMap is going to be constant time if you have good hash codes.
1657354,2,0,0,java.util.HashMap,"Why not simply create a HashMap<Date, Activity>() instead of the roundabout way with Strings?"
1657695,2,0,1,java.util.HashMap,The problem seems to be one of providing the correct generic parameters for the HashMap.
1660795,2,0,4,java.util.HashMap,"For example, Java's HashMap is based on power-of-two length hash tables, so it adds this function to ensure the lower bits are sufficiently distributed."
1662602,2,0,2,java.util.HashMap,"In your case, none of the members (File, long, HashMap -- ok, I'm assuming HashMap) are thread safe, and thus they must all be protected by a lock."
1669885,1,0,129,java.util.HashMap,What happens when a duplicate key is put into a HashMap?
1669908,2,0,148,java.util.HashMap,More information here: HashMap Doc
1670038,1,0,70,java.util.HashMap,Does Java have a HashMap with reverse lookup?
1670038,1,0,70,java.util.HashMap,"It's like a HashMap, but I will need O(1) lookup in both directions."
1670158,2,0,8,java.util.HashMap,"If no collisions occur, you can always add both directions to the same HashMap :-)"
28257204,2,0,0,java.util.HashMap,"I too was looking for a bi-directional HashMap, sometimes it is the simplest of answers that are the most useful."
5524943,2,0,1,java.util.HashMap,"HashMap uses ""open hashing""."
5524943,2,0,1,java.util.HashMap,"In other words: The HashMap implementation manages ""linked lists"" at every position in the table."
1674770,2,0,0,java.util.HashMap,The get method will take any Object as the key simply because any object is able to be stored in a HashMap (as all objects are a subclass of type Object).
1674770,2,0,0,java.util.HashMap,It just checks the .equals method for that Object to return the match in the HashMap.
1677946,2,1,2,java.util.HashMap,The first (mostly) threadsafe Map in Java Collections was the synchronized HashMap using Collections.synchronizedMap().
1678244,2,1,14,java.util.HashMap,"In general a HashMap works like this: it has a variable number of what are commonly called ""buckets""."
1678244,2,1,14,java.util.HashMap,Let's say a given HashMap has 16 buckets.
1678244,2,1,14,java.util.HashMap,There are multiple ways of dealing with this but the one used by HashMap (and is probably the most common overall) is bucketing.
1678244,2,1,14,java.util.HashMap,"If buckets are sufficiently small then access to a HashMap is usually described as ""near O(1)""."
1678244,2,1,14,java.util.HashMap,"Firstly, if you have a bunch of objects that all return 42 as their hash code a HashMap will still work but it will operate as an expensive list."
1678244,2,1,14,java.util.HashMap,"Secondly, returning to your original point, if two objects are equal (meaning a.equals(b) == b.equals(a) == true) but have different hash codes then the HashMap will go looking in (probably) the wrong bucket resulting in unpredictable and undefined behaviour."
1678269,2,0,7,java.util.HashMap,"Failure to do so will   result in a violation of the general contract for Object.hashCode, which will pre-   vent your class from functioning properly in conjunction with all hash-based collec-   tions, including HashMap, HashSet, and Hashtable."
1678269,2,0,7,java.util.HashMap,Suppose you attempt to use this class   with a HashMap: code.
1678269,2,0,7,java.util.HashMap,"Notice that two PhoneNumber instances are   involved: One is used for insertion   into the HashMap, and a second, equal,   instance is used for (attempted)   retrieval."
1691664,1,0,9,java.util.HashMap,"I've made some tests with ArrayList and HashMap, but I can't make them work well."
1692042,2,0,1,java.util.HashMap,"Here's one way: make an object called Row to hold each row, and then make a java.util.HashMap whose keys are Integer sij's and whose values are the corresponding Rows."
1692443,2,0,0,java.util.HashMap,"I can think of four ways to do this:  If you have enough memory to hold representations of 60 million rows in memory (less duplicates), use a HashMap<Row, Integer> to represent the counts."
1691991,2,0,1,java.util.HashMap,"If you don't want to use an external library, you can do something similar using a HashMap mapping rows to integers."
1702565,1,0,3,java.util.HashMap,converting static 2D String array to HashMap.
1702565,1,0,3,java.util.HashMap,What is the easiest way to convert a 2D array of Strings into a HashMap?
1704062,2,0,2,java.util.HashMap,Just create a HashMap and add each entry as you read it.
1710512,1,0,8,java.util.HashMap,First result set is being put in a HashMap...second resultSet is being put in a MyBean class.
1710512,1,0,8,java.util.HashMap,"However, first cursor returns nothing as well but since results are being put into a HashMap the list for first cursor atleast has HashMap object inside it..  Why this difference?"
1711656,1,0,4,java.util.HashMap,"I tried to map this into a HashMap[Integer, Float]."
1711656,1,0,4,java.util.HashMap,The problem is that I need to access the data very quickly and possibly very often which is why I chose the HashMap because it runs in O(1) for the look up.
1711772,2,0,1,java.util.HashMap,this class should use less memory than an HashMap since it uses a primitive array (no boxing needed): it needs only 906304 * 8 ~ 8 Mb  (for doubles) or 906304 * 4 ~ 4 Mb (for floats).
1711781,2,0,2,java.util.HashMap,"This would not be a problem if you were concatenating the two strings (being careful to use a delimiter which cannot appear in the place designators), and letting HashMap do its magic, but the method you suggested, using the hashcodes for the two strings as a key, that's going to get you into trouble."
1711788,2,0,1,java.util.HashMap,This suggests six entries in your HashMap (4 choose 2).
1711788,2,0,1,java.util.HashMap,"That would lead me to believe the actual optimal size of your HashMap is (952 choose 2)=452,676; NOT 952x952=906,304."
1738963,1,0,2,java.util.HashMap,Is HashMap in Java collision safe.
1738963,1,0,2,java.util.HashMap,"But a key can have multiple values which i can do in this way HashMap<String,ArrayList<String>> ."
1739048,2,0,3,java.util.HashMap,HashMap is collision-safe: look at the sourcecode for put: code.
14737231,2,0,1,java.util.HashMap,"Thus, the answer to your question is that yes, HashMap in Java does safely handle collisions."
1738968,2,0,5,java.util.HashMap,"Hash codes are not guaranteed or required to be unique; HashMap maintains a ""bucket"" of key/value pairs for each hash code internally."
1740797,1,0,0,java.util.HashMap,Java + List to HashMap.
1749588,1,0,2,java.util.HashMap,"So the difference is where do I create a new map with new HashMap<String, Command>();?"
1753852,2,0,1,java.util.HashMap,Use HashMap instead of Hashtable - it's not synchronized.
1757363,1,0,66,java.util.HashMap,Java HashMap performance optimization / alternative.
1757363,1,0,66,java.util.HashMap,I want to create a large HashMap but the put() performance is not good enough.
1757363,1,0,66,java.util.HashMap,Using the standard Java HashMap the put rate becomes unbearably slow after 2-3 million insertions.
1757363,1,0,66,java.util.HashMap,Setting the initial capacity of the default Java HashMap to 26 million decreases the performance.
1757522,2,0,0,java.util.HashMap,"If you know it will have 26 million entries and you have the memory for it, do a new HashMap(30000000)."
1757524,2,0,0,java.util.HashMap,"That leave us with your hashCode method as an ""area of opportunity"" ;)   EDIT Is not the HashMap As per your last edition."
1757524,2,0,0,java.util.HashMap,"I have created a class implementing your same   hashCode  That hash code give millions of collisions, then the entries in the HashMap is reduced dramatically."
1757554,2,0,11,java.util.HashMap,To elaborate on Pascal: Do you understand how a HashMap works?
1757554,2,0,11,java.util.HashMap,"If two hash values map to the same entry -- a ""hash collision"" -- HashMap builds a linked list."
1757554,2,0,11,java.util.HashMap,"Edit: I should add: Every time you add a new entry, HashMap checks if this is a duplicate."
1757554,2,0,11,java.util.HashMap,"That's what I meant when I talked about looking for duplicates in the last paragraph: Whenever a key hashes to the same slot, HashMap must check if it's a duplicate of an existing key, or if they are just in the same slot by coincidence of the hash function."
1757554,2,0,11,java.util.HashMap,"I don't know that that's the ""whole point"" of a HashMap: I would say that the ""whole point"" is that you can retrieve elements by key quickly."
1757554,2,0,11,java.util.HashMap,"But anyway, that doesn't affect the ""whole point"" that I was trying to make: When you have two keys -- yes, different keys, not the same key showing up again -- that map to the same slot in the table, HashMap builds a linked list."
1759103,2,0,4,java.util.HashMap,"In this case, both filling and retrieving values from your data store would of course be much faster if you use an array instead of a HashMap and index it from 0 to 25989599."
1758881,2,0,1,java.util.HashMap,"I'm willing to be that, if you look at the HashMap object in a debugger, you'll find that you have maybe 200 distinct hash values, with extremely long bucket chains."
1764017,2,0,4,java.util.HashMap,"Each entry in a Java HashMap requires three objects: the key, the value, and the Entry that ties them together."
1761716,2,0,7,java.util.HashMap,"Getting into the gray area of ""on/off topic"", but necessary to eliminate confusion regarding Oscar Reyes suggestion that more hash collisions is a good thing because it reduces the number of elements in the HashMap."
1761716,2,0,7,java.util.HashMap,"If I understand what Oscar is saying about the same class with the same hashcode, he's proposing that only one instance of a class with a given hashcode will be inserted into the HashMap."
1761716,2,0,7,java.util.HashMap,"Regardless of any understanding or misunderstanding, what happens is different instances of the same class do not get inserted only once into the HashMap if they have the same hashcode - not until it's determined whether the keys are equal or not."
1761716,2,0,7,java.util.HashMap,Actually this is the WHOLE point of HashMap in first place!
1757398,2,0,4,java.util.HashMap,HashMap has initial capacity and HashMap's performance very very depends on hashCode that produce underlying objects.
1773803,2,0,1,java.util.HashMap,"(Generally, it is impossible to design an efficient, collision-free hash function that clusters well, which is why a HashMap will tolerate collisions, which incurs some overhead) Assuming a and b are sorted, you might use the following hash function: code."
1757424,2,0,6,java.util.HashMap,My first idea is to make sure you're initializing your HashMap appropriately.
1757424,2,0,6,java.util.HashMap,From the JavaDocs for HashMap:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
1757424,2,0,6,java.util.HashMap,"So if you're starting off with a too-small HashMap, then every time it needs to resize, all the hashes are recomputed... which might be what you're feeling when you get to the 2-3 million insertion point."
1759677,1,0,3,java.util.HashMap,"Stores them in a HashMap, where the Set contains nextStates for a given ""3-state""  State   Contains 3 Sets -- a Set of X-Moves, O-Moves, and the Board Each Integer in the set is a Row."
1763241,2,0,10,java.util.HashMap,"can be called with objects implementing the Map interface, like HashMap but not with Strings for instance as they do not implement Map."
1767428,1,0,0,java.util.HashMap,"Are there rules somewhere about when groovy chooses to use this as opposed to, say, java.util.HashMap?"
1770677,2,0,1,java.util.HashMap,"If you need more complciated invariants where the map contents cannot change, you probably need to use a regular HashMap and synchronize it as usual."
1770721,2,0,10,java.util.HashMap,"BTW, in your original example there is no advantage to using a ConcurrentHashMap, as you are locking each access, why not just use a normal HashMap inside your locked section?"
1773384,2,0,0,java.util.HashMap,"Also, it seems that location always maps to 0 for all list object that are mapped in the location HashMap?"
1774409,2,1,2,java.util.HashMap,"Edited (based on question clarification) Casting to HashMap<String, Integer> (btw, using Map instead of HashMap is arguably a better choice) is a different story."
1774808,2,0,2,java.util.HashMap,"The problem with your example is that you're using a HashMap<K,V> as an entry type."
1780385,1,0,63,java.util.HashMap,java: HashMap not working.
1780385,1,0,63,java.util.HashMap,"HashMap<String, int> doesn't seem to work but HashMap<String, Integer> does work."
1781868,1,0,14,java.util.HashMap,Internal implementation of java.util.HashMap and HashSet.
1781868,1,0,14,java.util.HashMap,I have been trying to understand the internal implementation of java.util.HashMap and java.util.HashSet.
1781868,1,0,14,java.util.HashMap,Following are the doubts popping in my mind for a while:  Whats is the importance of the @Override public int hashcode() in a HashMap/HashSet?
1781868,1,0,14,java.util.HashMap,"I have generally seen the key of the HashMap be a String like myMap<String,Object>."
1782060,2,0,1,java.util.HashMap,"It is, in fact, rehashed by the HashMap i.e. it calls hash(someKey.hashCode)), where hash() is an internal hashing method."
1782060,2,0,1,java.util.HashMap,"To see this, have a look at the source: http://kickjava.com/src/java/util/HashMap.java.htm The reason for this is that some people implement hashCode() poorly and the hash() function gives a better hash distribution."
1782067,2,0,1,java.util.HashMap,"In answer to question 2, though you can have any class that can be used to as the key in Hashmap, the best practice is to use immutable classes as keys for the HashMap."
9990216,2,0,0,java.util.HashMap,"HashCode method for collection classes like HashSet, HashTable, HashMap etc  – Hash code returns integer number for the object that is being supported for the purpose of hashing."
1782122,2,0,3,java.util.HashMap,"Hashing containers like HashMap and HashSet provide fast access to elements stored in them by splitting their contents into ""buckets""."
1781887,2,0,4,java.util.HashMap,Whats is the importance of the @Override public int hashcode() in a HashMap/HashSet?
1781890,2,0,1,java.util.HashMap,This ia usually a sign that it's safe to use the type as key in a HashMap.
1781890,2,0,1,java.util.HashMap,"And yes, you can aesily use any object which obeys the contract for equals() and hashCode() in a HashMap as key."
1781891,2,0,2,java.util.HashMap,Any Object in Java must have a hashCode() method; HashMap and HashSet are no execeptions.
1781891,2,0,2,java.util.HashMap,Any class type can be used as the key in a HashMap/HashSet.
1781902,2,0,4,java.util.HashMap,You can use any object as the key in a HashMap.
1781902,2,0,4,java.util.HashMap,http://java.sun.com/javase/6/docs/api/java/lang/Object.html And yes hashCode() method is used internally by HashMap and hence returning proper value is important for performance.
1781902,2,0,4,java.util.HashMap,Here is the hashCode() method from HashMap  code.
1781902,2,0,4,java.util.HashMap,That is why hashCode() is related to performance of the HashMap
1781950,2,1,13,java.util.HashMap,Look at the source code for HashMap.get(Object key); it calls key.hashcode to calculate the position (bin) in the internal hashtable and returns the value at that position (if there is one).
1782787,2,0,6,java.util.HashMap,"If the map is comparably small and you don't need to fetch the sorted entries very many times, a solution is to use a HashMap (or a TreeMap without explicitly setting the comparator), and sort the entries case-insensitively when you need them ordered."
1786358,2,0,1,java.util.HashMap,Using just the Java runtime library you could use a HashMap and add an ArrayList to hold your values when the key does not exist yet or add the value to the list when the key does exist.
1789679,1,0,18,java.util.HashMap,get string value from HashMap depending on key name.
1789679,1,0,18,java.util.HashMap,"I have a HashMap with various keys and values, how can I get one value out?"
1789719,2,0,0,java.util.HashMap,You can use the get(Object key) method from the HashMap.
1790058,2,0,16,java.util.HashMap,The question is what gets populated in the HashMap (key & value)
28061148,2,0,0,java.util.HashMap,Because the HashMap.get(Object key) method uses the equals method for matching the key value.
1789792,2,0,1,java.util.HashMap,"If that's to slow, you might consider using a HashMap structure where you map your foo to its index."
1791687,1,0,1,java.util.HashMap,"The hash structures I am aware of - HashTable, HashSet & HashMap."
1791752,2,0,6,java.util.HashMap,Note that the java HashSet is actually implemented by a HashMap underneath (all keys being mapped to the same singleton value across all HashSets) and hence uses the same bucket structure.
1791792,2,0,4,java.util.HashMap,"The classes you mentioned -- HashTable, HashSet, and HashMap don't use open addressing, but you could easily create new classes that implemented open addressing and provided the same APIs as those classes."
1791947,2,0,0,java.util.HashMap,Maps and Sets are the interfaces that determine the behavior of a HashSet or HashMap.
1791947,2,0,0,java.util.HashMap,"A HashMap acts like a Map - it will not overwrite a key with a similar hashcode, but it will overwrite a key, if the same exact key is used again."
1792037,2,0,1,java.util.HashMap,You need to wrap the synchronizedMap around a real Map like a HashMap or a TreeMap.
1792024,1,0,2,java.util.HashMap,Missing java.util.HashMap.
1792024,1,0,2,java.util.HashMap,Is there any reason that I would be missing the java.util.HashMap package?
1792024,1,0,2,java.util.HashMap,"I have java.util.Hashtable, but no HashMap..."
2569507,2,0,4,java.util.HashMap,"Blackberry has a different implementation for HashMap , it has a class called multimap under net.rim.device.api.util.MultiMap which is similar to HashMap."
2569507,2,0,4,java.util.HashMap,It can be used to do similar task as HashMap.
1792112,2,1,10,java.util.HashMap,The Blackberry Java does have a java.util.Hashtable but no java.util.HashMap...
1795468,2,0,5,java.util.HashMap,"), the Collections Framework was added which included new collection classes such as ArrayList and HashMap, which were intended to replace the legacy classes Vector and Hashtable."
1795808,1,0,47,java.util.HashMap,where partialHits is a HashMap.
1795808,1,0,47,java.util.HashMap,"Because in order the first statement to be true, the HashMap should not contain the given key, so if the second statement is checked, I will get NullPointerException."
1801475,2,0,16,java.util.HashMap,That's because such data structures (as a Java HashMap or HashSet) rely on a method where a portion of the hash code is used to find an element (often called a bucket) in the backing storage.
1802537,2,0,0,java.util.HashMap,"If you have a getter for UUID in AClass, then you experiment with a Map like HashMap<UUID, Values> myMap and check if it still works (Maybe, by chance, the code change unhides the real bug ;) )"
1803844,2,0,1,java.util.HashMap,"The generic types are erased at compilation, and at run-time HashMap only deals with Object instances."
1803844,2,0,1,java.util.HashMap,"If the hashcode of an object changes between it being added to a map, and trying to retrieve it, then the HashMap will (probably) look in the wrong hash bucket, and not find any value."
1809580,2,1,2,java.util.HashMap,copy the Windows.Location.getParameterMap() in a HashMap and it will work: So you send new HashMap>( Windows.Location.getParameterMap()) over RPC that works.
1806391,2,1,12,java.util.HashMap,"In other words, we can put a HashMap on the value stack containing the objects we need."
1806391,2,1,12,java.util.HashMap,It will look through the value stack and find those values in the HashMap we pushed.
1806242,2,0,4,java.util.HashMap,"This means that the URI is used to uniquely identify each taglib in an internal registry of taglibs, much like a key is used to set/get values from a HashMap or Hashtable in Java."
1807873,2,0,2,java.util.HashMap,"You can use a HashMap<Character, Integer> for example."
1807938,2,0,4,java.util.HashMap,"The map strategy is a good one, but I'd go for HashMap<String, Integer>, since it's tuples of characters being counted."
1811806,2,0,8,java.util.HashMap,"So it'll have slower get/put/contains operations than a HashMap, but to offset this it supports the SortedMap and NavigableMap interfaces."
1811810,2,1,37,java.util.HashMap,"If you need quick single key/value pair addition and quick single key lookup, use the HashMap."
1812565,1,0,4,java.util.HashMap,I push the eligible content(visit > 0)  in a HashMap and finally clears that Map at the end of the task  Update I do this reading of 30 or 31 files(one month's data) and store the eligible in a Map.
1812565,1,0,4,java.util.HashMap,Although I have switched the HashMap part to BerkeleyDB now but the issue at the time of reading file is same or even worse.
1825633,2,0,1,java.util.HashMap,All you need to do is tokenise the input and then count word frequencies using a java HashMap.
1828461,1,0,4,java.util.HashMap,Something like HashMap but sorted?
1828461,1,0,4,java.util.HashMap,I'm writing a Java program that parses all the words from a text file and then adds them to a HashMap.
1828461,1,0,4,java.util.HashMap,The HashMap is comprised of each word mapped to an integer which represents how many times the word occurs.
1828461,1,0,4,java.util.HashMap,Is there something like HashMap that will help me sort this?
1828581,2,0,5,java.util.HashMap,"When you're done filling your HashMap, create a new List of WordCount objects created from values in the HashMap."
1830167,1,0,1,java.util.HashMap,"It works fine when I use the same exact code to put the data into a HashMap, but I need the data to be sorted by the value."
1835061,1,0,4,java.util.HashMap,is it possible to add values to an ArrayList instead of using a HashMap something like: code.
1835683,1,0,86,java.util.HashMap,How to loop through a HashMap in JSP?
1835683,1,0,86,java.util.HashMap,How can I loop through a HashMap in JSP?
1838319,2,0,4,java.util.HashMap,"That being said, the most commonly used Map implementations, specifically HashMap are not thread safe."
1842100,2,0,1,java.util.HashMap,"However, doing this turns HashMap  into a Linked List, which significantly degrades performance."
1841900,2,0,3,java.util.HashMap,"by the HashMap, then the answer is: it depends on your implementation and the number of objects in your JVM."
1845363,2,0,0,java.util.HashMap,"Probably you should go with a HashMap because it's the simplest... As gustavc said using a HashMap won't work, so you could instead use a TreeMap with a given comparator:  code."
1850802,1,0,3,java.util.HashMap,What is the time complexity of java.util.HashMap class' keySet() method?
1850802,1,0,3,java.util.HashMap,I am trying to implement a plane sweep algorithm and for this I need to know the time complexity of java.util.HashMap class' keySet() method.
1850820,2,0,5,java.util.HashMap,All that it is doing is returning a wrapper object on the HashMap.
1850835,2,1,6,java.util.HashMap,This is because HashMap.keyset() returns the actual KeySet object associated with the HashMap.
1850835,2,1,6,java.util.HashMap,"The returned Set is not a copy of the keys, but a wrapper for the actual HashMap's state."
1850835,2,1,6,java.util.HashMap,"Indeed, if you update the set you can actually change the HashMap's state; e.g."
1850835,2,1,6,java.util.HashMap,calling clear() on the set will clear the HashMap!
1861658,1,0,0,java.util.HashMap,HashMap with StringKey problem?
1861658,1,0,0,java.util.HashMap,Does the HashMap check only for reference equality and not equality on key objects?
1861730,2,0,0,java.util.HashMap,"To answer your question at the end, HashMap relies on the hashCode and equals methods of the key objects."
1861761,2,0,0,java.util.HashMap,HashMap uses the .equals() method on the key object.
1865460,2,0,0,java.util.HashMap,I would suggest using a HashMap for the second list.
1871303,2,1,10,java.util.HashMap,"A TreeMap has the same limitation (as does a HashMap, which also breaks when the hashcode of its elements changes after insertion)."
1873330,1,0,3,java.util.HashMap,Why is getEntry(Object key) not exposed on HashMap?
1873330,1,0,3,java.util.HashMap,"Here is my use case, I have an object that is logically equal to my HashMap key but not the same object (not ==)."
1873330,1,0,3,java.util.HashMap,I need to get the actuall key object out of the HashMap so that i can synchronise on it.
1873330,1,0,3,java.util.HashMap,Looking through the java.util.HashMap implementation i see a getEntry(Object key) method that is exactly what i need.
1874991,1,0,0,java.util.HashMap,Moving from state to state in this automaton via HashMap.
1875810,1,0,1,java.util.HashMap,How should I implement this HashMap's equals and hashCode methods to represent an automaton state?
1878095,1,0,0,java.util.HashMap,I am using HashMap and Vector classes.
1878095,1,0,0,java.util.HashMap,"I have to iterate the loop 2 147 483 648 times, but after I store 8,438,409 values in HashMap I'm getting an OutOfMemoryError."
1878680,1,0,1,java.util.HashMap,"currently, my image cache is essentially a HashMap<Integer, CachedImage>."
1879255,1,0,41,java.util.HashMap,"Is there any performance testing results available in comparing traditional for loop vs Iterator while traversing a ArrayList,HashMap and other collections?"
1879292,2,1,58,java.util.HashMap,"TreeSet, HashMap, LinkedList)."
1879897,1,0,6,java.util.HashMap,Order of items in a HashMap differ when the same program is run in JVM5 vs JVM6.
1879897,1,0,6,java.util.HashMap,The objects are stored in a HashMap.
1879897,1,0,6,java.util.HashMap,The order of the rows does not affect the functionality of the application (that is why a HashMap was used instead of a sortable collection).
1879927,2,0,10,java.util.HashMap,EDIT: I just found an interesting snippet in one of the early Java 6 releases (unfortunately I'm not sure of the exact version but it's apparently HashMap 1.68 from June 2006): code.
1879935,2,1,16,java.util.HashMap,The implementation details of HashMap can and do change.
1881558,2,0,0,java.util.HashMap,"HashMap is not married to any particular ordering, but LinkedHashMap implementation of Map should preserve the order."
1880804,1,0,0,java.util.HashMap,I implemented it in a HashMap but the access is too slow.
1880831,2,0,3,java.util.HashMap,HashMap is the way to go.
1880831,2,0,3,java.util.HashMap,"Lastly, you could use your own implementation of an int-based HashMap with optimized value lookup for your case."
1881712,1,0,16,java.util.HashMap,"I'm not sure if that applies in this case, but if so I'd be fine with it mapping to a HashMap."
1889584,2,1,9,java.util.HashMap,"Unfortunately, this has yet to be implemented: https://java.net/jira/browse/JAXB-209 (unresolved)  For instance, being able to map a   schema type to a HashMap might  be a   likely requirement for those using   model driven design/implementation."
1884013,2,0,6,java.util.HashMap,Have you looked at example here (Customized mapping of HashMap): http://java.sun.com/javase/6/docs/api/javax/xml/bind/annotation/adapters/XmlAdapter.html Need to create custom XmlAdapter I'm afraid.
1882762,1,0,30,java.util.HashMap,is the Java HashMap keySet() iteration order consistent?
7016111,2,0,11,java.util.HashMap,You can use a LinkedHashMap if you want a HashMap whose iteration order does not change.
7016111,2,0,11,java.util.HashMap,Iterating over HashMap's entrySet or keySet is much slower than over LinkedHashMap's.
1882852,2,0,9,java.util.HashMap,"If you are looking at a specific class that implements Map (HashMap, LinkedHashMap, TreeMap, etc) then you could see how it implements the keySet() function to determine what the behaviour would be by checking out the source, you'd have to really take a close look at the algorithm to see if the property you are looking for is preserved (that is, consistent iteration order when the map has not had any insertions/removals between iterations)."
1882852,2,0,9,java.util.HashMap,"The source for HashMap, for example, is here (open JDK 6): http://www.docjar.com/html/api/java/util/HashMap.java.html It could vary widely from one JDK to the next, so i definitely wouldn't rely on it."
1884624,1,0,0,java.util.HashMap,"I have no experience working with HashMap, how would I look into the intermediate states stored there?"
1885313,1,0,3,java.util.HashMap,Using the keySet() method in HashMap.
1885313,1,0,3,java.util.HashMap,I have a method that goes through the possible states in a board and stores them in a HashMap code. }
1887341,1,0,0,java.util.HashMap,Validation HashMap->Radiobutton.
1894507,2,0,11,java.util.HashMap,A HashMap (and its legacy predecesor Hashtable) is by nature unordered.
1894507,2,0,11,java.util.HashMap,"List<Entry<K, V>>, then sort it using Collections#sort() with help of a Compatator<Entry<K, V>> and finally repopulate a LinkedHashMap with it (not a HashMap or you will lose the ordering again)."
1894377,1,0,14,java.util.HashMap,Understanding the workings of equals and hashCode in a HashMap.
1894461,2,0,0,java.util.HashMap,"When hashCode is uncommented, HashMap sees t1 and t2 as being the same thing; thus, t2's value clobbers that of t1."
1894461,2,0,0,java.util.HashMap,"To understand how this works, note that when hashCode returns the same thing for two instances, they end up going to the same HashMap bucket."
1894461,2,0,0,java.util.HashMap,"When you try to insert a second thing into the same bucket (in this case t2 is being inserted when t1 is already present), HashMap scans the bucket for another key that is equals."
1894461,2,0,0,java.util.HashMap,This is a fundamental assumption that HashMap makes.
1896072,1,0,1,java.util.HashMap,String as a key in HashMap.
1896072,1,0,1,java.util.HashMap,"I had seen, only the String is used as a key in HashMap.Although the put() method takes Object as a parameter.What is the significant of it.If any other object can also used as a Key or not?"
1896195,2,0,6,java.util.HashMap,A raw HashMap will indeed accept any object as key.
1896214,2,0,0,java.util.HashMap,"In practice, you also want the semantics of equals(Object) to be consistent with the intended behavior of the HashMap, across all possible key types / values."
1896082,2,0,0,java.util.HashMap,"You can use any type for the key in a HashMap, but assuming you use the full generic version you need to specify that type and then use it consistent."
1896122,2,0,7,java.util.HashMap,Any object that provides a meaningful implementation of hashCode() is a perfect key candidate in a map: see Understanding the workings of equals and hashCode in a HashMap.
1896122,2,0,7,java.util.HashMap,But a dumb implementation of hashcode() will just bring you a degenerate HashMap which performance is poor.
10130363,2,0,1,java.util.HashMap,"One of the reason why we generally use String as a key in HashMap is that since String is immutable in Java that allows String to cache its hashcode , being immutable String in Java caches its hash code and do not calculate every time we call hashcode method of String, which makes it very fast as HashMap key."
1909275,2,0,14,java.util.HashMap,"In Java, you probably want to use the Map interface, such as a HashMap."
1909404,2,0,4,java.util.HashMap,You don't want to use a HashMap or a Properties object to store wildly named parameters.
1921925,2,0,2,java.util.HashMap,"This means that the Map object can be a HashMap<String, String> or a HashMap<String, Integer> as well."
1923962,2,0,0,java.util.HashMap,You can use a HashMap to label each socket so other threads can reference the one it needs.
1926285,1,0,2,java.util.HashMap,Why does HashMap#containsKey take an parameter of type Object?
1926285,1,0,2,java.util.HashMap,A coworker encountered a bug where HashMap#containsKey was used to verify if a key-value pair exists.
1926285,1,0,2,java.util.HashMap,"For example (Let's assume the map is populated with objects that he wants to retrieve): Map<String, String> map = new HashMap<String, String>(); Long value = new Long(12); boolean hasString = map.containsKey(value); My question is: Why does the Map implementation force you to put keys of type K and values of type V, but the containsKey() method allow you specify any object?"
1931269,2,0,3,java.util.HashMap,HashMap can grow infinite loops when modified concurrently by multiple threads.
1931239,2,1,5,java.util.HashMap,Use java.util.concurrent.ConcurrentHashMap instead of plain old java.util.HashMap.
1931660,1,0,1,java.util.HashMap,Java: Iterating HashMap - Algorithm needed.
1941999,2,0,0,java.util.HashMap,Reasons this is faster:  Results are collected in a thread-local HashMap -- no synchronization required for collecting them.
1941999,2,0,0,java.util.HashMap,HashMap used in place of less efficient Map collections Errors are bundled up into a collection for later handling.
1936995,2,0,0,java.util.HashMap,"If you want to count word occurence, you should use a HashMap<String, Integer>."
1943177,2,0,5,java.util.HashMap,I have a cache of objects  Consider using a WeakHashMap instead of HashMap to get hold of them all.
1945151,2,0,1,java.util.HashMap,"If you have to use java.util data structures, then a HashMap from vertexes to the list of connected vertexes offers O(1) deletion."
1946189,1,0,1,java.util.HashMap,I data in the below format (List of HashMap's) code.
1952525,2,0,1,java.util.HashMap,Here are some examples that are currently implemented:  Preferences persists a HashMap to disk on the desktop and uses android.content.SharedPreferences on Android.
1956869,1,0,2,java.util.HashMap,SQLite) than to keep everything in HashMap or other data structures?
1956869,1,0,2,java.util.HashMap,Is it worth using an SQLite in-memory database to keep that map as opposed to just having that HashMap in memory?
1957279,2,0,2,java.util.HashMap,"If you use a HashMap, setting the initial capacity and load factor at construction time may have some impact on performance."
1960335,2,1,8,java.util.HashMap,This could be done using a HashMap.
1964673,1,0,0,java.util.HashMap,I data in the below format (List of HashMap's) code.
1969501,1,0,1,java.util.HashMap,"I am trying Map<String, List> rawData = new HashMap<String, List>(); but with no success."
1969514,2,1,11,java.util.HashMap,Each HashMap key points to a LinkedList which contains your options.
1969973,2,0,2,java.util.HashMap,"There is another option: You can copy the source for HashMap and replace the method hash(Object key) with something else (for example, a call to a Hasher that works like the Comparator of the TreeMap)."
1971590,2,0,1,java.util.HashMap,"Make a HashMap with the class as key, and the counter as value."
1971483,1,0,2,java.util.HashMap,I know with HashMap you can set a load factor is there something similar happening in the back ground?
1975018,1,0,2,java.util.HashMap,"Currently I'm using a HashMap<String, Integer> to map the strings to int and the int values need to be frequently accessed."
1975079,2,0,0,java.util.HashMap,If you're using a HashMap there will be no way around using some object.
1975152,2,0,2,java.util.HashMap,I really think you should just stick with the HashMap.
1976736,2,1,3,java.util.HashMap,"For starters, I would use a HashMap, rather than the (now obsolete) HashTable."
1976736,2,1,3,java.util.HashMap,with a suitable equals()/hashCode() implementation (as pointed out below in the comments) and use that as the key in your HashMap.
1984499,2,0,8,java.util.HashMap,java.util.HashMap.
1984324,2,0,1,java.util.HashMap,HashMap mapping Strings to Integers.
1983591,2,0,5,java.util.HashMap,Hint: HashMap mapping Strings to Lists of files.
1983607,2,1,7,java.util.HashMap,"Like GregS said, use HashMap."
1983607,2,1,7,java.util.HashMap,"If it isn't, create a new key in HashMap with this word, and in that position add the new document (the filename)."
1986030,2,0,5,java.util.HashMap,"If creating your own class, and, for example, you want to add it to a HashMap, you would have to define both a hashCode() and an equals() method for it to work properly."
1990215,1,0,3,java.util.HashMap,"Am I using a wrong data structure to represent the graph here (Map<String, LinkedHashSet<HashMap<String, Integer>>>)?"
1990215,1,0,3,java.util.HashMap,"I think the problem is reduced to iterating properly over the adjacent Set<HashMap<String, Integer>> structure, or is my reasoning wrong?"
1993328,1,0,0,java.util.HashMap,"http://java.sun.com/javase/6/docs/api/java/util/EnumMap.html Edit If I was mapping, say, a few million Objects to 10 enum types, I imagined it would at least be possible to create a more memory-efficient implementation than just using HashMap<Object, V extends Enum<V>>."
1993384,2,0,1,java.util.HashMap,You can any Map implementation you like (such as HashMap).
1993385,2,1,2,java.util.HashMap,"Well it sounds that what you need is a HashMap<Object, V extends Enum<V>>."
1996291,2,1,5,java.util.HashMap,"a HashMap, or a LinkedHashMap if you want to preserve ordering?"
2000249,2,0,6,java.util.HashMap,"No concurrency: use java.util.HashMap Concurrency: use java.util.concurrent.ConcurrentHashMap If you want some control on the order used by iterators, use a TreeMap or a LinkedHashMap."
2000286,2,1,9,java.util.HashMap,HashMap uses hash codes to store things so you have constant time for put and get operations but items are always unordered.
2000286,2,1,9,java.util.HashMap,I would use HashMap because it's the simpler one (remember to give it a suitable initial capacity).
2000286,2,1,9,java.util.HashMap,A middle approach is the LinkedHashMap that uses same structure as HashMap (hashcode and equals method) but it also keeps a doubly linked list of element inserted in the map (mantaining the order of insertion).
2001853,2,1,7,java.util.HashMap,"Thus, a String can be cast as either a String or an Object; a HashMap can be cast as a HashMap, an AbstractMap Map, or an Object."
2012616,2,0,1,java.util.HashMap,Maybe a HashMap can be used like this: code.
2017308,2,0,5,java.util.HashMap,"Using [Weak/Identity/Concurrent]HashMap<ThreadGroup,T> will just about work, if not very fast."
2026104,1,0,14,java.util.HashMap,But is it safe to remove() if I'm looping over a HashMap's keySet()?
2026113,2,1,17,java.util.HashMap,"From the docs for HashMap.keySet():  The set supports element removal,   which removes the corresponding   mapping from the map, via the   Iterator.remove, Set.remove,   removeAll, retainAll, and clear   operations."
2028623,1,0,2,java.util.HashMap,HashMap: get arraylist to be a set of key or value.
2028863,2,0,2,java.util.HashMap,"If you happen to be able to control the order in which you insert the items into the arrays, and you can do so in sorted order, you may not need the HashMap after all."
2028714,2,1,2,java.util.HashMap,If you had your key value pairs stored in some other type of Map object then you could use the Hashmap constructor HashMap(Map<?
2029312,2,0,0,java.util.HashMap,"That said (and unrelated to the actual problem), I strongly recommend to use the improved HashMap instead of the legacy Hashtable."
2029288,2,1,8,java.util.HashMap,(Also Map and HashMap is that way to go.
2041463,2,0,1,java.util.HashMap,A HashMap works well for this too.
2043941,2,0,1,java.util.HashMap,"At the same time, I also store the projects in a HashMap using the SelectItem value as the key."
2043941,2,0,1,java.util.HashMap,"If you do not want to create the HashMap, you can use the position of the Project in the List as the SelectItem value and look up the projects that way."
2044688,2,0,1,java.util.HashMap,"When traversing the file's lines, keep a map (java.util.HashMap or java.util.TreeMap, depending on how you need to use it later) with words (Strings) as keys, and the class above as values."
2046473,2,0,1,java.util.HashMap,"You should consider to use HashMap instead of Hashtable, as the latter is considered obsolete (it enforces implicit synchronization, which is not required most of the time."
2046473,2,0,1,java.util.HashMap,"If you need a synchronized HashMap, it is easily doable) Now, regarding your question."
2046473,2,0,1,java.util.HashMap,"Hashcode is not guaranteed to be unique mathematically-wise, however, when you're using HashMap (or Hashtable), it does not matter."
2046473,2,0,1,java.util.HashMap,"The equals method is mandatory for the proper operation of HashMap, whereas the hashCode method should be coded such that the hash-table will be relatively sparse (otherwise your hashmap, will be just a long array) If you're using Eclipse there's an easy way to generate hashCode and equals, it basically does all the work for you."
2048131,1,0,17,java.util.HashMap,Get an Enumeration (for the Keys) of a Map (HashMap) in Java?
2048131,1,0,17,java.util.HashMap,"As far as I understand this, it seems that there is not a direct way of getting an Enumeration directly for the Keys of a HashMap."
2048131,1,0,17,java.util.HashMap,What is the best and most performant way to directly get an Enumeration from the Keys of a HashMap?
2048131,1,0,17,java.util.HashMap,"But my implementation is based on a HashMap so I need to somehow figure out how to best convert betweens these two ""Iterator/Enumerator"" techniques."
2048452,2,0,29,java.util.HashMap,"For example, the below code snippet gets an instance of Enumeration from the keyset of HashMap code."
22689832,2,0,2,java.util.HashMap,"I'm looking for a way to loop through a HashMap in velocity, and this will work too."
22689832,2,0,2,java.util.HashMap,Just like the way you would loop through a HashMap in java.
2051677,1,0,4,java.util.HashMap,How to create an iterable wrapper for TreeMap and HashMap (Java)?
2051677,1,0,4,java.util.HashMap,And the same question except MyMap wraps HashMap (instead of TreeMap).
2053707,1,0,2,java.util.HashMap,Java HashMap to Matrix.
2053707,1,0,2,java.util.HashMap,"The object is another HashMap (yeah, you can say HashMap of HashMap)."
2057085,2,0,1,java.util.HashMap,"and then go over the file line by line parsing each line and saving the stuff to some internal data storage (Array, HashMap)."
2058825,2,0,3,java.util.HashMap,"LinkedHashMap derives from HashMap, which specifies this for the clone() method:  Returns a shallow copy of this HashMap   instance: the keys and values   themselves are not cloned."
2060497,2,0,0,java.util.HashMap,"Given pairs of words  in variables called first and second, I guess what I would use is a HashMap keyed on words in first, and containing as values a second HashMap keyed on words in second."
2060497,2,0,0,java.util.HashMap,"If you want your words to be automatically sorted in ascending order, you'll probably do well to use TreeMap rather than HashMap."
2060512,2,0,4,java.util.HashMap,from http://weblogs.java.net/blog/2006/05/04/understanding-weak-references I think your use of HashMap is likely to be the issue.
2060512,2,0,4,java.util.HashMap,"WeakHashMap works exactly like   HashMap, except that the keys (not the   values!)"
2060512,2,0,4,java.util.HashMap,This avoids the   pitfalls I described and requires no   changes other than the switch from   HashMap to a WeakHashMap.
2069087,2,0,3,java.util.HashMap,First of all try to use Generics while defining your Map/HashMap.
2069087,2,0,3,java.util.HashMap,"Second thing, HashMap doesn't use primitive type for keys."
2069100,2,1,2,java.util.HashMap,"If you want your keys in ascending order, consider using TreeMap instead of HashMap."
4748123,2,0,1,java.util.HashMap,Simply make all HashMap into TreeMap.
4748123,2,0,1,java.util.HashMap,For example: new HashMap>();' into new TreeMap>(); and dont forget to add import java.util.TreeMap;
2073687,2,0,3,java.util.HashMap,"If the ordering is not important, then use HashMap."
2074149,1,0,1,java.util.HashMap,The DuplicateCache maintains a HashMap to keep track of all its entries.
2074149,1,0,1,java.util.HashMap,"I am performing all my operations using the Duplicate object keys, and when I run the put method into the HashMap, there becomes infinite recursion in the hashCode() method of the Duplicate object."
2074149,1,0,1,java.util.HashMap,expire() is a method that does time based removal of old entries in the table hashtable is the HashMap object Thanks!
2074515,1,0,6,java.util.HashMap,For: static final Map FOO =   Collections.unmodifiableMap(new HashMap()); Can multiple threads use method get and not run into problems?
2074679,2,0,0,java.util.HashMap,The API docs for HashMap state:   Note that this implementation is not   synchronized.
2074679,2,0,0,java.util.HashMap,That means that get does not need to be synchronised if the HashMap is 'effectively immutable'.
2074868,2,0,4,java.util.HashMap,"The javadocs for HashMap imply that so long as you make no structural changes to the map, then it is safe to use it concurrently, so this should be safe for any of the accessors that you can use, that is getting the various sets and iterating over them and get() should then be safe."
2080484,2,1,1,java.util.HashMap,"You can schedule a timer which re-compiles new jasper reports every X hours (check here) You can load the jrxml as File and check its lastModified(), store it in a database (or a HashMap), and on each subsequent need for the jrxml to compare the lastModified() to the value in the database / HashMap and recompile it only if they differ combine the two methods above create a simple interface (a password-protected page) that lists all jrxml files with a button ""compile"", so that whenever you change something, you go to that page and indicated which jrxmls should be recompiled."
2086203,1,0,0,java.util.HashMap,"The structure is a Java class file with instance variables to represent the records in the file (ie: a HashMap) and the state of the file (errors, warnings, etc)."
2088502,1,0,3,java.util.HashMap,Java equivalent of Pythons urllib.urlencode(HashMap based UrlEncode).
2088502,1,0,3,java.util.HashMap,Where I can pass a HashMap of key values and it encodes and gives me the url string .. Edit: I wanted to avoid this scenario code.
2095206,2,0,1,java.util.HashMap,The Map (implementation HashMap) is a Key-Value class.
2095211,2,0,1,java.util.HashMap,"with HashMap, for example, you can have: code."
2095246,2,0,0,java.util.HashMap,"I think that a plain HashMap<Object,String> can address most of your needs: code."
2098247,1,0,2,java.util.HashMap,So I use the HashMap collection to store the orderNumber variable.
2099182,2,0,0,java.util.HashMap,"In Sun's JVM, the actual data would be stored in the perm gen area (since the String in question is a String literal), and would also be added to a weak HashMap which resides on the heap."
2099423,1,0,0,java.util.HashMap,"The output in the log is:  {""ThirdKey"":""Value3"",""__type"":""Value1"",""SecondKey"":""Value2""} Now, I understand the implementation uses a HashMap and so the order is not maintained."
2105964,1,0,1,java.util.HashMap,"Suppose I want to write a function, which will create a HashMap from some specified type T to String, for example, a HashMap from Integer to String as follows: HashMap<Integer, String> myHashMay = new HashMap<Integer, String>(); I want to have flexibilty to specify the type T. So I write a function as: code."
2105964,1,0,1,java.util.HashMap,"so that if I invoke foo(Integer.class), a HashMap from Integer to String will be created inside this function."
2116712,2,0,0,java.util.HashMap,"If you are not interested about the ordering of the elements inside your list (and most people are usually not), you could also use a TreeMap (or HashMap) and use the homeTown as key and a List of all entries as value."
2115195,2,0,11,java.util.HashMap,What happens when you call 'put' on HashMap ?
2117557,1,0,26,java.util.HashMap,How to iterate an ArrayList inside a HashMap using JSTL?
2119888,2,1,2,java.util.HashMap,By the way you will still have to use LinkedHashMap instead of plain HashMap if you must store the already sorted data in a map before using it.
2119888,2,1,2,java.util.HashMap,Because LinkedHashMap will keep the data in insertion order while HashMap won't.
2119895,2,0,0,java.util.HashMap,Using HashMap would destroy any attempt to 'order by' in your SQL since you are not guaranteed to get back the order you put the items.
2121272,2,1,2,java.util.HashMap,I found this implementation of a File based HashMap.
2122774,2,1,1,java.util.HashMap,"To answer your question, I suspect the fault lays in HashMap<KeyTypeB, ValueType> mappi = outerMap.get(key1);."
2127384,2,0,47,java.util.HashMap,Update according your last update the real problem is that you have an Integer in your HashMap that should be assigned to an Double.
2127532,1,0,3,java.util.HashMap,How to create a HashMap?
2127532,1,0,3,java.util.HashMap,"Map  map1 = new HashMap();   should work, right?"
2145451,2,0,2,java.util.HashMap,"Now create two HashMap<Character, Integer>."
31709645,2,0,1,java.util.HashMap,Linear Time solution in HashMap.
31709645,2,0,1,java.util.HashMap,"Traverse and put first String in HashMap, keep the count of each character."
2444259,2,0,0,java.util.HashMap,1) Don't use HashMap to store Facebook parameters.
2141773,2,0,1,java.util.HashMap,"If you are not overriding hashCode(), HashMap may fail to retrieve the item even if it is there."
2144776,1,0,26,java.util.HashMap,Order of values retrieved from a HashMap.
2144776,1,0,26,java.util.HashMap,I am trying figure out the order in which the values in a HashMap are/can be retrieved.
2144786,2,0,49,java.util.HashMap,"From the Javadoc: HashMap ""class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."""
2144793,2,0,2,java.util.HashMap,"Try LinkedHashMap if order is important... see from JavaDoc  public class LinkedHashMap extends   HashMap Hash table and linked list   implementation of the Map interface,   with predictable iteration order."
2144793,2,0,2,java.util.HashMap,This   implementation differs from HashMap in   that it maintains a doubly-linked list   running through all of its entries.
2144800,2,0,3,java.util.HashMap,"From the doco, it differs from HashMap in that it maintains a doubly-linked list running through all of its entries"
2144822,2,1,36,java.util.HashMap,The HashMap API does not define the order of iteration.
2144822,2,1,36,java.util.HashMap,"However, if you look at the implementation of HashMap, you can deduce that there is a complex transient relationship between the iteration order, the keys' hash values, the order in which the keys were inserted and the size of the hashtable."
2144826,2,0,1,java.util.HashMap,A skiplist allows you to traverse the entries in key order and also look them in random order (but not as fast as a HashMap).
2145471,2,1,2,java.util.HashMap,"HashMap, LinkedHashMap, depending on your data."
2151343,2,0,0,java.util.HashMap,Some people follow IMap and Map; Map and MapImpl; Map and HashMap and etc.
2152564,2,0,1,java.util.HashMap,a HashMap to store name/value pairs.
2158868,1,0,23,java.util.HashMap,"My requirements are:  Simple and lightweight Not dramatically slower than a plain HashMap Use LRU, or some deletion policy that approximates LRU  I tried LinkedHashMap, however it requires you to specify a maximum number of elements, and I don't know how many elements it will take to fill up available RAM (their sizes will vary significantly)."
2158868,1,0,23,java.util.HashMap,"I've heard of stuff like EHCache, but it seems quite heavy-weight for what I need, and I'm not sure if it is fast enough for my application (remembering that the solution can't be dramatically slower than a HashMap)."
2160669,2,0,3,java.util.HashMap,"I've heard of stuff like EHCache, but it seems quite heavy-weight for what I need, and I'm not sure if it is fast enough for my application (remembering that the solution can't be dramatically slower than a HashMap)."
2580826,2,0,0,java.util.HashMap,"In our case, each thread was stuck inside java.util.HashMap in the get() method, spinning tightly in the for loop: code."
2580826,2,0,0,java.util.HashMap,Check to see if there is a shared HashMap (or HashSet) which several threads can simultaneously access.
2176594,2,1,4,java.util.HashMap,Iterate over sList and put each char in a HashMap.
2180030,1,0,1,java.util.HashMap,"I have a java.util.HashMap object that I want to convert generally into a MatLab datatype, perhaps the new containers.Map type."
2180030,1,0,1,java.util.HashMap,"), there is the issue that if the Java HashMap is keyed with integers, it.next will nevertheless return MatLab double objects, which will then not work as keys into the HashMap with javaHashMapObj.get."
2190738,1,0,3,java.util.HashMap,"I was thinking about doing a search-replace in the entire code-base and just temporarily replace any reference to stuff like ""new HashMap"" with a different version."
2190829,2,0,2,java.util.HashMap,You could try to wrap the HashMap get() and put() methods (or whatelse you use) with ReentrantLock: code.
2194215,1,0,1,java.util.HashMap,"First I tried to do a  HashMap try, please help me with this code: code."
2194255,2,0,3,java.util.HashMap,"Iterate over OriginalList and put the word in a HashMap<String, Integer>."
2195172,2,0,2,java.util.HashMap,Best practice is to create instance of HashMap (which is a standard implementation of a hash-table) and use it through its interface Map.
2195455,1,0,2,java.util.HashMap,Remove Duplicates from List of HashMap Entries.
2195455,1,0,2,java.util.HashMap,"I have a List<HashMap<String,Object>> which represents a database where each list record is a database row."
2202188,2,0,4,java.util.HashMap,See also: interned Strings : Java Glossary Quote from that article:  The collection of Strings registered in this HashMap is sometimes called the String pool.
2210907,1,0,19,java.util.HashMap,Use  with HashMap.
2210907,1,0,19,java.util.HashMap,I have a java class that sets an servlet attribute to a HashMap object: code.
2210907,1,0,19,java.util.HashMap,"where request is an HttpServletRequest Object, and da.getSecurityTypes() returns a HashMap Object."
2210907,1,0,19,java.util.HashMap,Is there a way to go through the HashMap collection using c:foreach or some other JSTL tags?
2216322,2,0,1,java.util.HashMap,"or using generics, in which case your hash is a HashMap<String,String> code."
2216329,2,0,15,java.util.HashMap,"Slightly OT: If you don't need the synchronization, use HashMap instead of Hashtable."
2218957,2,0,5,java.util.HashMap,A HashMap lookup every time I'm drawing a sprite will kill performance.
2218957,2,0,5,java.util.HashMap,"Specifically, you are assuming that HashMap lookup is going to be too expensive."
2218957,2,0,5,java.util.HashMap,A HashMap lookup using a String key does not generate garbage.
2219364,2,0,2,java.util.HashMap,"A better way would be to use a HashMap, where you could check set membership in roughly constant time."
2219557,1,0,1,java.util.HashMap,"Without caching these values, since they are calculated on same pairs multiple times, performance are horrible.. (algorithms can be O(n^2) but maybe O(n^3) so I was thinking about using an HashMap to store values to be used multiple times."
2242426,2,1,0,java.util.HashMap,"I still have to figure out which is the most efficient way to store all the elements already cached with a specified one to remove them when the algorithm don't need the item anymore, just to avoid filling of the HashMap with a waste of item."
2219666,2,0,4,java.util.HashMap,"With this in hand, you can have a HashMap<Pair, SomethingElse> as your cache."
18358942,2,0,0,java.util.HashMap,"So if you want to use an Hashtable/HashMap with Strings as keys, and have keys like ""SomeKey"", ""SOMEKEY"" and ""somekey"" be seen as equal, then you will have to wrap your string in another class (you cannot extend String since it is a final class)."
2226725,2,0,4,java.util.HashMap,I think the best thing to do would be to put each line from file 1 into a HashMap; then you could check each line of file 2 for membership in your HashMap rather than reading through the entire file once for each line of file 1.
2227377,2,1,8,java.util.HashMap,I don't know if there is a way to pass in raw XML to create a list but you can use name/value pairs in a HashMap to create a list using the SimplelistAdapter.
2229907,2,1,2,java.util.HashMap,"Like, you could create a HashMap where the key is the name."
2229856,2,0,4,java.util.HashMap,"Alternatively, if you have a machine with enough RAM, just put all the data into a HashMap for easy lookup."
2235546,1,0,29,java.util.HashMap,Why does HashSet implementation in Sun Java use HashMap as its backing?
2235546,1,0,29,java.util.HashMap,"Looking at the source of Java 6, HashSet<E> is actually implemented using HashMap<E,Object>, using dummy object instance on every entry of the Set."
5922568,2,0,4,java.util.HashMap,My guess is that HashSet was originally implemented in terms of HashMap in order to get it done quickly and easily.
5922568,2,0,4,java.util.HashMap,"In terms of lines of code, HashSet is a fraction of HashMap."
5922568,2,0,4,java.util.HashMap,"On both 32-bit and 64-bit, HashSet is 4x larger than necessary, and HashMap is 2x larger than necessary."
5922568,2,0,4,java.util.HashMap,HashMap could be implemented with an array with keys and values in it (plus chains for collisions).
5922568,2,0,4,java.util.HashMap,"In fact, HashMap contains an Entry object per entry, which adds 8 bytes for the pointer to the Entry and 8 bytes for the Entry object header."
2235795,2,1,4,java.util.HashMap,Also the code for HashMap is likely to be compiled and in cache.
2235802,2,0,3,java.util.HashMap,Hence the only wastage is for every entry's value in the HashMap.
2235802,2,0,3,java.util.HashMap,"(The JCF developers would have thought, we have tested HashMap anyway, why not reuse it.)"
2235891,2,0,3,java.util.HashMap,"If you question referred to why they used a HashMap that would waste 8 bytes (because of the Map.Entry) instead of some other data structure using a similar Entry of only 4, then yes, I would say they did it for the reasons you mentioned."
27216215,2,0,0,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode, which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
12938872,2,0,1,java.util.HashMap,The following post will give a supportive idea - Java - HashMap confusion about collision handling and the get() method
2238156,2,0,1,java.util.HashMap,"Perhaps you could also keep a Map (HashMap or TreeMap for instance) in addition to the list, where you keep track of what stuff is in the list."
2239345,1,0,2,java.util.HashMap,HashMap collision.
2239345,1,0,2,java.util.HashMap,When there is a collision during a put in a HashMap is the map resized or is the entry added to a list in that particular bucket?
2243346,2,0,0,java.util.HashMap,The documentation of java.util.HashMap explains exactly when the map is resized:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
2239353,2,1,12,java.util.HashMap,"The hashcode is used to determine what bucket in a HashMap is to be used, and the bucket is made up of a linked list of all the entries with the same hashcode."
2239353,2,1,12,java.util.HashMap,"Note that this is the HashMap specifically (since that's the one you asked about), and with other implementations, YMMV."
2239866,2,0,0,java.util.HashMap,"When there is a collision during a put in a HashMap the entry is added to a list in that particular ""bucket""."
2239396,2,0,2,java.util.HashMap,Either could happen - it depends on the fill ratio of the HashMap.
2239396,2,0,2,java.util.HashMap,"Usually however, it will be added to the list for that bucket - the HashMap class is designed so that resizes are comparatively rare (because they are more expensive)."
2242611,1,0,4,java.util.HashMap,Collection.synchronizedMap vs synchronizing individual methods in HashMap.
2242611,1,0,4,java.util.HashMap,What is the difference between a Collections.synchronizedMap() and a wrapper around a HashMap with all the methods synchronized.
2251207,2,0,1,java.util.HashMap,"Currently we're using a HashMap for the databag, but this is on a PC, not an IPhone."
2249311,2,0,1,java.util.HashMap,"I have never done this myself, but there is an example in the rJava documentation of creating and working with a HashMap using the with function: code."
2249890,1,0,1,java.util.HashMap,is HashSet is implemented via a HashMap instance.
2249890,1,0,1,java.util.HashMap,"I am wondering since the HashSet is implemented via a HashMap instance , what would be the key that would be used to put data into HashSet."
2249890,1,0,1,java.util.HashMap,i gone through the link http://www.coderanch.com/t/251832/Programmer-Certification-SCJP/certification/Difference-HashMap-HashSet... which i dint understood properly.. Can anybody help me to understand it better
3669688,2,0,0,java.util.HashMap,HashSet is essentially an interface to a HashMap's keySet.
2249941,2,0,1,java.util.HashMap,The idea is to use the object you add to the HashSet as a key of the HashMap.
2250191,1,0,9,java.util.HashMap,"For other problems that I want to solve with a ConcurrentHashMap with garbage collection, I would use a strong reference in the HashMap as the key to get equals() equality and a SoftReference as the value so the JVM can garbage collect something, but in this case, the value doesn't matter and I don't have a value to wrap in a SoftReference to put there."
2317290,2,0,1,java.util.HashMap,If the queue grows beyond a certain limit start removing elements from the HashMap.
2252438,2,0,0,java.util.HashMap,"thanks to the answers i have come up with a new DataStorage class with HashMap object, note that i have not full grasp how HashMap works and this is what i have partially done, and would like to ask am i going in the right direction?"
2251656,2,0,5,java.util.HashMap,"However, I don't see where you are initializing your HashMap for the first add."
2251690,2,0,2,java.util.HashMap,You have declared a variable called 'eachperson' that is of type HashMap but you never initialized.
2251690,2,0,2,java.util.HashMap,Replace the eachperson declaration that the HashMap issue should be solved.
2251690,2,0,2,java.util.HashMap,You did have some code to 'reset' the HashMap after it gets the 'characters' element.
2253225,1,0,0,java.util.HashMap,"i am currently stucked on how to create a login algorithm which will login a user based on 2 HashMap objects namely Students and StaffMembers from a class DataStorage, i do not know after getting the texts input from LoginHandler() what do i do with them to compare it with my DataStorage ."
8067640,2,0,3,java.util.HashMap,One thing I did and it works wonders is to read both objects into HashMap and then compare with a regular assertEquals().
2257309,1,0,4,java.util.HashMap,"--Edit i have edited my question so it could be more clear , i am fairly new to Java i do not really get what some of you have posted, especially since the work i am doing is quite related to OO and grasping OO concepts is my biggest challenge, /I have a dataStorage class, the registered user is added to the HashMap with a Key input of his Username, which is getUser ./ code."
2257359,2,0,5,java.util.HashMap,"I would probably build my own TableModel and convert the HashMap into a List, but that would require that accountID was part of Student and I cannot tell if it is from your post."
2257359,2,0,5,java.util.HashMap,To do this you need to examine every object in your HashMap and to do this we would use a 'loop'.
2257359,2,0,5,java.util.HashMap,So what we do here is create a loop that will examine every key in the students HashMap and with that key we retrieve the Student object and populate the array with the correct data.
2257359,2,0,5,java.util.HashMap,"This is to answer your question, but I would recommend that you take a look at the TableModel interface and build one around your HashMap of Students."
2258456,2,0,5,java.util.HashMap,java.util.HashMap is likely to give better performance for large maps.
2258626,1,0,6,java.util.HashMap,"So, my question is why does it complain that java.util.HashMap is not a supported property type, and also what could I do to work around it."
4392239,2,0,5,java.util.HashMap,"You can ask GAE to store the HashMap as a Blob value by adding the JDO annotation to flag this field as being stored serialised: @Persistent(serialized=""true"") https://code.google.com/intl/pl/appengine/docs/java/datastore/dataclasses.html#Serializable_Objects"
2259809,2,0,1,java.util.HashMap,"But what if we're talking about a collection where a sequential search is not practical or efficient, like a HashMap or tree structure?"
2259091,2,0,0,java.util.HashMap,"If you want to search, you should use HashMap/HashTable and hash on a person's name."
2259113,2,0,0,java.util.HashMap,"You could just use an iterator and then compare the name field to the name you are searching for (all of which just involves using the Java API) Also, a HashMap would probably be a much better data structure to use seeing as how you are using name as a ""key"" in this example."
2263003,2,0,1,java.util.HashMap,Right now you are trying to call a static method on Komm rather than HashMap.get().
2265266,1,0,9,java.util.HashMap,What is the easiest way to convert a HashMap  into a 2D array?
22321717,2,0,3,java.util.HashMap,"In order to use our own class objects as keys in collections like HashMap, Hashtable etc.. , we should override both methods ( hashCode() and equals() ) by having an awareness on internal working of collection."
26306885,2,0,0,java.util.HashMap,"This integer is used for determining the bucket location, when this object needs to be stored in some HashTable, HashMap like data structure."
26306885,2,0,0,java.util.HashMap,"The hashCode() method of objects is used when we insert them into a HashTable, HashMap or HashSet."
31455838,2,0,0,java.util.HashMap,"For instance, a HashMap will call hashCode() upon its keys, to know whether the keys may already be contained in the HashMap."
31455838,2,0,0,java.util.HashMap,"If the HashMap does not find the hash code, it's obvious the key is not contained in the HashMap yet."
27372458,2,0,1,java.util.HashMap,"But some time in the future you might want to use HashMap or HashSet and if you don't override and ""correctly implement"" hashCode(), these Hash based collection won't work as intended."
27372458,2,0,1,java.util.HashMap,"First of all,HashMap checks if the hashCode of second is the same as first."
27372458,2,0,1,java.util.HashMap,Why can't we make the HashMap check for equality in all the buckets?
2265537,2,0,25,java.util.HashMap,"Failure   to do so will result in a violation of   the general contract for   Object.hashCode(), which will prevent   your class from functioning properly   in conjunction with all hash-based   collections, including HashMap,   HashSet, and Hashtable."
2265558,2,0,7,java.util.HashMap,"This is for instance important when putting your objects into a container that utilizes equals and hashcode, like HashMap and Set."
27163876,2,0,4,java.util.HashMap,"Collections such as HashMap and HashSet use the hashcode value of an object to determine how the object should be stored in the collection, and the hashcode is used again to help locate the object in the collection."
2268784,2,0,1,java.util.HashMap,HashMap because it runs faster.
2268795,2,1,7,java.util.HashMap,"If either would work for you, I would use a HashMap as there would be overhead in the synchronization that Hashtable provides I would imagine that HashMap is more standard, and is used more often."
2268812,2,0,1,java.util.HashMap,"For general use choose HashMap because Hashtable is synchronized, and therefore consumes more computing resources."
2268824,2,0,0,java.util.HashMap,"Hashtable is one of the original collection classes in Java, while HashMap is part of the Collections Framework added with Java 2."
2268824,2,0,0,java.util.HashMap,The main differences are:  access to the Hashtable is synchronized on the table while access to the HashMap isn't.
2268824,2,0,0,java.util.HashMap,a HashMap iterator is fail-safe while the enumerator for the Hashtable isn't.
2268824,2,0,0,java.util.HashMap,"a HashMap permits null values in it, while Hashtable doesn't."
2268824,2,0,0,java.util.HashMap,So you'd go with HashMap for any new code.
2268824,2,0,0,java.util.HashMap,If you need synchronization you're better off with  Collections.synchronizedMap(HashMap).
2268877,2,0,5,java.util.HashMap,"Hence, HashMap was born."
2268877,2,0,5,java.util.HashMap,"So, in short: Use HashMap: it's the newest and most thought through implementation."
2272471,1,0,6,java.util.HashMap,keySet field in HashMap is null.
2272471,1,0,6,java.util.HashMap,I am trying to loop over a HashMap with the keySet() method as below: code.
2272510,2,1,15,java.util.HashMap,"If you mean the internal fields of HashMap, then you should not look at them and need not care about them."
2275734,2,0,1,java.util.HashMap,"My advice: if you want a HashMap, just use a HashMap."
2276641,1,0,18,java.util.HashMap,"My first naive attempts used Java's HashMap class, which caused an out of memory exception."
2279283,1,0,1,java.util.HashMap,My implementation of the TableModel interface has a HashMap of objects X keyed on X.getId().
2279907,1,0,5,java.util.HashMap,Overriding or overloading of java.util.HashMap.
2279907,1,0,5,java.util.HashMap,I have class MyHashMap which extends java HashMap class.
2279907,1,0,5,java.util.HashMap,Should I subclass HashMap or should I declare  HashMap as member variable of this class?
2279966,2,0,4,java.util.HashMap,I would go for declaring HashMap as member variable of your class.
2279969,2,1,13,java.util.HashMap,"As recommended by some of the other answers, it would be far better to use an object composed of firstName, lastName and address to act as your map key, but you must remember to implement equals and hashCode, otherwise your values will not be retrievable from the HashMap."
2279970,2,0,5,java.util.HashMap,"What's wrong with that design is primarily that is claims to be a HashMap<Oject, Object>, but isn't really."
2279970,2,0,5,java.util.HashMap,"Then you don't need a non-standard Map subclass - you can simply use a HashMap<EmployeeData, Object>."
2279971,2,0,3,java.util.HashMap,"I personally feel that a Set interface would match better, with possibly a HashMap as a member."
2279991,2,0,0,java.util.HashMap,I think a better design would have been to implement the Map interface and keep the HashMap/HashTable as an internal parameter of the object.
2280698,1,0,1,java.util.HashMap,The superclass will have a HashMap that maps the service a subclass provides and the java.lang.Class file that handles that service.
2282212,2,0,0,java.util.HashMap,Wouldn't it be enough to use a SynchronizedHashMap or Collections.synchronizedMap(Map m) from the java.util.concurrent package instead of a plain HashMap where calls for retrieving and inserting are not synchronized?
2291776,2,0,8,java.util.HashMap,"I would make a HashMap<String,Integer>."
2293142,1,0,6,java.util.HashMap,HashMap FOO is a superset of HashMap BAR.
2293142,1,0,6,java.util.HashMap,How do I find out what 'keys' are missing in HashMap BAR (i.e. exists in FOO but not BAR)?
2294519,1,0,9,java.util.HashMap,Java.util.HashMap -- why HashMap extends AbstractMap and implement Map?
2294519,1,0,9,java.util.HashMap,why HashMap extends AbstractMap and implement Map ?
2294556,2,0,5,java.util.HashMap,"HashMap implements Map, and you can rely on that."
2294556,2,0,5,java.util.HashMap,"(Though it's extremely unlikely that future versions of HashMap would not extend AbstractMap, since there probably some code out there that expects HashMap to be assignable to AbstractMap.)"
25338712,2,0,0,java.util.HashMap,"But whether it is present or not, the HashMap should always conform to the List contract.."
25338712,2,0,0,java.util.HashMap,"So, it is explicitly captured in class declaration by specifying 'HashMap implements Map'"
2295206,2,0,4,java.util.HashMap,"HashMap<String, Object> is the way forward."
2295760,2,1,1,java.util.HashMap,"If thread safety is not a concern, HashMap is what you want."
2296952,2,1,6,java.util.HashMap,"For instance, you can find all instances of java.util.HashMap that have a key test with the following query: code."
2300597,2,1,10,java.util.HashMap,"(For example, java.util.HashMap<java.lang.Thread, java.lang.Runnable>)"
2302146,2,0,1,java.util.HashMap,Any reason not to use the built-in HashMap ?
2302146,2,0,1,java.util.HashMap,"After that, you could study the HashMap source code."
2302164,2,1,2,java.util.HashMap,"Otherwise, you should just use a java.util.HashMap or java.util.HashTree or similar."
2302164,2,1,2,java.util.HashMap,"However, if you know that the keys are going to be numbered consecutively, it might be better to use a List than a HashMap - this will guarantee no collisions."
2306231,1,0,2,java.util.HashMap,"I want to return ArrayList<HashMap<String,String>> in EL function with three String argument."
2316411,2,1,12,java.util.HashMap,You could use a Hashtable but its use is discouraged in favour of Map and HashMap: code.
2318145,2,0,6,java.util.HashMap,"Only the ordering of the parameter names is not guaranteed, logically because it's backed by a HashMap."
2318145,2,0,6,java.util.HashMap,"Summarized: the parameters are collected in a HashMap<String, String[]>."
2318145,2,0,6,java.util.HashMap,The names are quaranteed not ordered due to the nature of the HashMap.
2331888,2,0,1,java.util.HashMap,At the end write out all your SQL statements using the HashMap.
2337574,2,0,0,java.util.HashMap,"TreeSet, TreeMap, HashSet, HashMap, etc."
2336979,1,0,8,java.util.HashMap,Dump a Java HashMap to XML and back.
2336979,1,0,8,java.util.HashMap,does anyone know of a good library or method of converting the contents of a HashMap to XML and then parsing this to reconstruct the HashMap?
2337016,2,1,13,java.util.HashMap,"http://xstream.codehaus.org/ It has a HashMap converter, and a tutorial on how to use convertors."
2339430,2,1,25,java.util.HashMap,"There's a reason why Trove's TIntIntHashMap runs circles around Java's HashMap<Integer,Integer> when working with a similar amount of data."
2353760,1,0,0,java.util.HashMap,I have an hashmap declared as private HashMap testMessages = null; I will be storing string values in both key and value part of the hashmap retrieved from oracle table.
14651781,2,0,28,java.util.HashMap,"Neither of the two: the constructor that you are referring to is defined for the HashMap implementation of a Map, (as well as for others) but not for the Map interface itself (for example, consider the Provider implementation of the Map interface: you will not find that constructor)."
14651781,2,0,28,java.util.HashMap,"In respect of the Map interface (and of your question, in which you ask how to copy a Map, not a HashMap), you should use Map#putAll():  Copies all of the mappings from the specified map to this map   (optional operation)."
2358407,2,0,2,java.util.HashMap,"If you use generics to specify your HashMap (LinkedHashMap<Integer, Team> instead of <Object, Team>) this kind of error can't happen - the compiler will say something like The method put(Integer, Object) in the type HashMap<Integer,Object> is not applicable for the arguments (String, String)"
2358431,2,0,0,java.util.HashMap,"However, once the Integer key is created (you can verify this with your debugger) it should be equivalent for HashMap or LinkedHashMap purposes."
2362239,1,0,1,java.util.HashMap,How to sort the values of a HashMap in Java and keep the duplicate entries?
2365842,2,0,2,java.util.HashMap,"Also, if you're sorting these items then placing them into a HashMap or a HashSet - these structures will not preserve your order - use TreeSet or TreeMap instead."
2366457,2,0,9,java.util.HashMap,"Build a HashMap<String, Integer> mapping words to the number of occurrences."
2367522,1,0,1,java.util.HashMap,Transferring HashMap between client and server using Sockets (JAVA).
2367522,1,0,1,java.util.HashMap,"The channelpool is implemented using HashMAp: HashMap channelpool = new HashMap(); channelpool = 1=true, 2=true, 3=false, 4=true, 5=true, 6=true, 7=true, 8=true, 9=true, 10=true So initially all the channels are true, any terminal can take any channel."
2367522,1,0,1,java.util.HashMap,I can not used a shared resource among the terminals to store the HashMap.Can someone tell me an easy way to transfer the HashMap between the terminals.
2367563,2,1,3,java.util.HashMap,Your problems start a lot earlier than with sending a HashMap over a Socket.
2367563,2,1,3,java.util.HashMap,"But to answer your question: Serializing the HashMap using java.io.ObjectOutputStream, and then reconstructing it on the other side using ObjectInputStream, should do the trick."
2369234,2,0,1,java.util.HashMap,"Transferring the HashMap around is subject to the same concurrency problems that you are trying to solve with it, so it is not the solution."
2369234,2,0,1,java.util.HashMap,"You need a central server to manage the allocations for you, which you could implement via RMI, or more probably a database rather than a HashMap."
2368462,1,0,0,java.util.HashMap,"The actual place where I am observing the behavior described above is in the outer map defined as Map<String, Map<String, GlossaryTerm>> loadedTerms = new HashMap<String, Map<String, GlossaryTerm>>(); defined in a Singleton class."
2368661,2,0,2,java.util.HashMap,And the contents of a HashMap DO NOT change randomly or spontaneously.
2369828,2,0,3,java.util.HashMap,"Use a HashMap<Color,Color>."
2371503,2,1,3,java.util.HashMap,One problem in Java is that a lot of types (such as HashMap) always use the hash code and equality methods on the keys directly - it would be much better if Java had an interface like .NET's IEqualityComparer<T> that anything wanting to perform hashing/equality comparisons could delegate to.
2373009,1,0,1,java.util.HashMap,I have a List of HashMap such as below code.
2373034,2,1,6,java.util.HashMap,"(Also, as a matter of style, I'd prefer declaring the variables as List and Map rather than ArrayList and HashMap."
2373101,2,0,8,java.util.HashMap,"In that case, why not define your own class rather than using a HashMap?"
2374635,1,0,2,java.util.HashMap,"When I perform the copy and then attempt the paste from another instance of the same program running the clipboardContent contains a ""flavorsToData"" HashMap and ""flavors"" values, the check for isDataFlavorSupported fails (never hits my custom class that represents the new flavor)."
2376327,1,0,1,java.util.HashMap,I'm thinking it might be easy to use a HashMap from String->Object as a general purpose storage object e.g.
2380505,1,0,2,java.util.HashMap,"However, when I started down this path it seemed that the only way to use Enums is to put the state and action tables in a HashMap - or is there a way to make a multi-dimensional array where the dimensions are Enum values?"
2380505,1,0,2,java.util.HashMap,I'd prefer to not take the object creation and performance hit entailed with a HashMap if I can help it.
2381000,1,0,2,java.util.HashMap,Accesing hidden getEntry(Object key) in HashMap.
2381000,1,0,2,java.util.HashMap,It would be nice to have another method (which is already in HashMap) and allows to make this more effective: code.
2381000,1,0,2,java.util.HashMap,"Try to extend java.util.HashMap with custom class implementation (which should be in java.util package) and put it to endorsed folder (as java.lang.ClassLoader will refuse to load it in Class<?> defineClass(String name, byte[] b, int off, int len), see sources), but I don't want to patch JDK and it seems like the list of packages that can be endorsed, does not include java.util."
2384963,1,0,8,java.util.HashMap,There may be millions of entries in this hashtable and I managed to drastically reduce memory use for the value by having the Integer be a pointer in a file to the data I wish to hash but thbe problem is that the key may be tens of bytes (on average 25 bytes) and that the keys need to be held in memory in the default implementation of HashMap.
2392865,1,0,2,java.util.HashMap,As you see the parameters are just in a HashMap.
2392865,1,0,2,java.util.HashMap,I could make a class+method of my own which takes in the HashMap and procedure name as parameters and just prints out all the key/value pairs of the hashmap and the procedure name to the log.
2393313,2,0,2,java.util.HashMap,"I believe the contract for HashMap states you're not allowed to modify the hashcode for objects used as a key,"
2395415,1,0,1,java.util.HashMap,"In java while using the HashMap, they are using the Iterator class."
2395415,1,0,1,java.util.HashMap,But I can't understand for what purpose they are using Iterator in HashMap?
2395458,2,0,0,java.util.HashMap,These two iterators offered by HashMap allow you to get values (for example)  from the map even if you dont know the keys.
2395530,2,0,0,java.util.HashMap,"Not very useful for HashMap, but for TreeMap iterator provides a way go over the elements in increasing order."
2395814,1,0,28,java.util.HashMap,"In java, ArrayList and HashMap are using in collections."
2395814,1,0,28,java.util.HashMap,But i couldn't understand at which situations we should use ArrayList and which time use HashMap.
2395965,2,1,56,java.util.HashMap,"You are asking specifically about ArrayList and HashMap, but I think to fully understand what is going on you have to understand the Collections framework."
2395965,2,1,56,java.util.HashMap,So an ArrayList implements the List interface and a HashMap implements the Map interface.
2395965,2,1,56,java.util.HashMap,"The HashMap implementation uses the hash value of the key object to locate where it is stored, so there is no guarentee of the order of the values anymore."
2395831,2,0,4,java.util.HashMap,"(You could implement the Map interface by just storing a list of keys and a list of values, but generally there'll be a more efficient implementation - HashMap uses a hash table internally to get amortised O(1) key lookup, for example.)"
2395862,2,0,13,java.util.HashMap,"And with a HashMap, you can access them by an index from another type (For example, a String) code."
2395862,2,0,13,java.util.HashMap,"So, this means you can use every type of key you want (with a HashMap)."
2395862,2,0,13,java.util.HashMap,You can access a BufferedImage with a BufferedImage as key-type for the HashMap.
2397054,2,1,0,java.util.HashMap,"Here is an example (using HashMap, since it's more integrated with the rest of the Java Collections."
2397054,2,1,0,java.util.HashMap,A HashMap is essentially the same as Hashtable.
2397188,1,0,2,java.util.HashMap,How to Create Own HashMap in Java?
2397843,2,0,2,java.util.HashMap,Open HashMap class and you are good to go.
2397843,2,0,2,java.util.HashMap,"Note not all method implementations are in one file like HashMap.java and so simple text editors like notepad++, or textpad may not be enough."
2400032,2,0,1,java.util.HashMap,"In fact, for trivially simple cases, you can just use a single class that wires a ""setProperty"" method through to a ""firePropertyChange"" call (as well as storing the value in a HashMap for any ""getProperty"" calls)."
2399915,1,0,1,java.util.HashMap,Is there some way to put them into a HashMap with the id or name as the key and the value of the textbox as the value for the key?
2400036,1,0,1,java.util.HashMap,"classes = new HashMap();    classes = (HashMap) request.getAttribute(""classes"");   %>                classIds = new HashSet();     classIds = classes.keySet();    Iterator itr = classIds.iterator();    while(itr.hasNext()){     int nextId = (Integer)itr.next();    %>     ""                   size=""42"" value="""" />"
2404424,1,0,2,java.util.HashMap,"#1 Possible solution: one HashMap to X -datastructure Having a HashMap pointing from fileID to some datastructure linking word, wordCount and wordID may be a good solution."
2404799,1,0,14,java.util.HashMap,LinkedHashMap vs HashMap != LinkedList vs ArrayList.
2404799,1,0,14,java.util.HashMap,I have read that LinkedHashMap has faster iteration speed than HashMap because its elements are doubly linked to each other.
2404936,2,1,24,java.util.HashMap,"LinkedHashMap, however, is the same data structure as a HashMap but with a LinkedList woven into it to make iteration faster and consistent."
2404936,2,1,24,java.util.HashMap,"The reason that LinkedHashMap iteration is faster than HashMap iteration is that HashMap iteration has to iterate over all of the buckets, even the empty ones."
30000522,2,0,0,java.util.HashMap,Instead of using a HashMap or other map implementation as a cache you could try to use a framework specialized in caching.
2406355,2,1,9,java.util.HashMap,You can call HashMap.clear().
2406355,2,1,9,java.util.HashMap,"If you also need to eliminate that, the easiest way would be to discard the whole HashMap and replace it with a new instance."
2406355,2,1,9,java.util.HashMap,"In this case, you may want to look at a more (memory-) efficient implementation than the generic HashMap, such as the TLongLongHashMap found in the GNU Trove library."
2408928,2,0,2,java.util.HashMap,"For flushing, you can use the clear() method, or simply create a new HashMap."
2411831,1,0,0,java.util.HashMap,How can I tell Castor to use a LinkedHashMap instead of a HashMap?
2412144,2,0,2,java.util.HashMap,"In general, the contents of a HashMap have no guarantee of visibility across threads."
2412144,2,0,2,java.util.HashMap,"This synchronization will flush the state of the map (and the HashMap instances that it contains) so that they will be correctly visible to all threads—assuming that no changes are made to the map, or the maps it contains, outside the class initializer."
2412160,2,0,8,java.util.HashMap,Each individual HashMap contained in your outer HashMap is not guaranteed to be thread safe unless you use ConcurrentHashMap as suggested in your question.
2412160,2,0,8,java.util.HashMap,"If you do not use a thread-safe inner HashMap implementation, you may get unintended results when two threads access the same inner HashMap."
2412190,2,0,6,java.util.HashMap,"Sure, the initialization of the HashMap is thread-safe in the respect that all Foo's share the same Map instance, and that the Map is guaranteed to be there unless an exception occurs in the static init."
2412654,1,0,1,java.util.HashMap,How do I add an attribute to a HashMap using JAXB?
2414105,1,0,168,java.util.HashMap,"After answering a question about how to force-free objects in Java (the guy was clearing a 1.5GB HashMap) with System.gc(), I was told it's bad practice to call System.gc() manually, but the comments were not entirely convincing."
2414117,1,0,12,java.util.HashMap,Explanation of HashMap#hash(int) method.
2414117,1,0,12,java.util.HashMap,Can someone please explain to me the static HashMap#hash(int) method?
2414140,2,1,11,java.util.HashMap,"As to why this is done, the documentation offers a hint: HashMap uses power-of-two length tables, and hashes keys by masking away the higher bits and taking only the lower bits of their hash code."
2414294,2,0,2,java.util.HashMap,"I don't know how all the shifting works, but the motivation is laid out in the comments: The way the HashMap is implemented relies on the hashCode function being sufficiently well implemented."
2414294,2,0,2,java.util.HashMap,"If you have many collisions on the lower bits, the HashMap will not perform well."
2414294,2,0,2,java.util.HashMap,"Because the implementation of hashCode is outside of the control of HashMap (every object can implement their own), they supply an additional hash function that shifts the object's hashCode around a little to ensure that the lower bits are distributed more randomly."
2415685,2,1,5,java.util.HashMap,"The default constructor could just set the delegate to a new HashMap instance, so the default usage would stay the same."
2417744,2,1,1,java.util.HashMap,"The better approach is to have those pairings in memory in a HashMap, initialized at startup."
2417744,2,1,1,java.util.HashMap,"That way, if you have a particular word and need the corresponding ID, or vice versa, you look them up in your HashMap, which is a constant-time operation."
2417744,2,1,1,java.util.HashMap,"Similarly, for each word, you are looping through every file; again, do that loop ONCE, and store the result in a HashMap."
2418366,2,0,1,java.util.HashMap,Map countMap =  new HashMap(); code.
2425058,2,0,0,java.util.HashMap,Then you could put items of a in HashMap and go over b and check if the items are there.
2420337,2,0,3,java.util.HashMap,If you absolutely need to use a HashMap then I would create a class that extends HashMap AND implements Comparable.
2426160,1,0,1,java.util.HashMap,"Currently I use a HashMap<Class, Set<Entry>>, which may contain several millions of short-lived and long-lived objects."
2426160,1,0,1,java.util.HashMap,"Then my question popped in my mind; instead of allocating huge amounts of memory for the HashMap, can it be done better (less memory consumption)?"
2426203,2,0,0,java.util.HashMap,HashMap overhead shouldn't be that much.
2426203,2,0,0,java.util.HashMap,"What you could do, if HashMap overhead is to much, is allocate an array, like Object[] or Entry[]."
2427787,2,0,1,java.util.HashMap,"Note that if you are implementing any nontrivial object, and want to correctly store them in a HashMap or HashSet, you MUST override hashCode() and equals()."
2430962,1,0,2,java.util.HashMap,"The best I can come up with is extending HashMap so that it also contains a (sorted) list of contents, and doing a binary search for the range that matches the prefix, and returning that set."
2745678,2,0,0,java.util.HashMap,"Edit:  I noticed that Spring MappingJacksonJsonMarshaller adds the wrapping class when marshalling, so I stepped through the code in debug and noticed that Spring passes in a HashMap with a single key-value pair such that the key is the wrapping name and the value is the object."
2435886,2,0,1,java.util.HashMap,"A HashMap has a performance of O (log(n)), which means that if you 1000 objects, the time required to run it is just 10 times slower (approximately)."
2435819,2,1,6,java.util.HashMap,Your choice of Map implementation can be either a HashMap (expected O(1) for basic operations) or a TreeMap (O(log N)).
2437891,1,0,4,java.util.HashMap,"If I have a HashMap that looks like this: HashMap<String, MyObject> where the String key is a field in MyObject, does this string value get stored twice?"
2439315,1,0,3,java.util.HashMap,Efficient way to get the most used keys in a HashMap - Java.
2439315,1,0,3,java.util.HashMap,I have a HashMap where the key is a word and the value is a number of occurrences of that string in a text.
2439315,1,0,3,java.util.HashMap,Now I'd like to reduce this HashMap to only 15 most used words (with greatest numbers of occurrences).
2443814,1,0,5,java.util.HashMap,"I'll be satisfied with a solution that does either a assert(/*entry.getValue() is of type HashMap<String, Object>*/) or throws an exception when it isn't."
2443872,2,0,5,java.util.HashMap,You can use this class instead of HashMap: code.
2443953,2,0,1,java.util.HashMap,I'd not recommend to do this with HashMap as the node type.
2443953,2,0,1,java.util.HashMap,The HashMap you were using boils down to the Set appearing in DirectoryNode.
2444359,1,0,67,java.util.HashMap,What is the difference between a HashMap and a TreeMap?
2444359,1,0,67,java.util.HashMap,When would I use a HashMap over a TreeMap?
22621445,2,0,5,java.util.HashMap,"I'll talk about the HashMap and TreeMap implementation in Java:  HashMap -- implement basic map interface  implemented by an array of buckets, each bucket is a LinkedList of entries  running time of basic operations: put(), average O(1), worst case O(n), happens when the table is resized; get(), remove(), average O(1)  not synchronized, to synchronize it: Map m = Collections.synchronizedMap(new HashMap(...)); Iteration order of the map is unpredictable."
22621445,2,0,5,java.util.HashMap,"To sum, the biggest difference between HashMap and TreeMap is that TreeMap implements NavigableMap<K,V>, which provide the feature of ordered iteration."
22621445,2,0,5,java.util.HashMap,"Besides, both HashMap and TreeMap are members of Java Collection framework."
2444369,2,0,17,java.util.HashMap,Use HashMap most of the times but use TreeMap when you need the key to be sorted (when you need to iterate the keys).
2444370,2,1,100,java.util.HashMap,"HashMap on the other hand, makes no such guarantee."
2444370,2,1,100,java.util.HashMap,"Therefore, when iterating over the keys of a HashMap, you can't be sure what order they will be in."
2444370,2,1,100,java.util.HashMap,"HashMap will be more efficient in general, so use it whenever you don't care about the order of the keys."
2444372,2,0,6,java.util.HashMap,"You almost always use HashMap, you should only use TreeMap if you need your keys to be in a specific order."
2446481,2,0,6,java.util.HashMap,"HashMap is used for fast lookup, whereas TreeMap is used for sorted iterations over the map."
22629268,2,0,12,java.util.HashMap,HashMap is implemented by Hash Table while TreeMap is implemented by Red-Black tree.
22629268,2,0,12,java.util.HashMap,"The main difference between HashMap and TreeMap actually reflect the main difference between a Hash and a Binary Tree , that is, when iterating,  TreeMap guarantee can the key order which is determined by either element's compareTo() method or a comparator set in the TreeMap's constructor."
17044901,2,0,10,java.util.HashMap,"To sum up:  HashMap: Lookup-array structure, based on hashCode(), equals() implementations, O(1) runtime complexity for inserting and searching, unsorted TreeMap: Tree structure, based on compareTo() implementation, O(log(N)) runtime complexity for inserting and searching, sorted  Taken from: HashMap vs. TreeMap"
18177784,2,0,3,java.util.HashMap,This is not possible to give such option with HashMap - it is always case sensitive comparisons in HashMap.
2452194,2,0,3,java.util.HashMap,"As you probably know, Java's HashSet is backed by a HashMap."
3385846,2,1,1,java.util.HashMap,"In short, in our application code a complex value object (used as a return value for remote method invocations) had a HashMap datastructure as an internal field."
2455448,1,0,0,java.util.HashMap,In my case this is the only hard and fast way of doing it becoz I have a rules engine that actually updates the values in the HashMap after several computations.
2455448,1,0,0,java.util.HashMap,Here is a sample data representation of the HashMap (List of HashMap) - code.
2457112,1,0,1,java.util.HashMap,HashMap as return value from Java method in R?
2457112,1,0,1,java.util.HashMap,Is it possible to return a HashMap to R with the rJava extension of R?
2457112,1,0,1,java.util.HashMap,"I have a method in Java, which returns a HashMap and I want this HashMap use in R. I tried: code."
2457401,2,1,2,java.util.HashMap,You're missing a semi-colon when specifying the HashMap return type.
2457412,1,0,1,java.util.HashMap,"I have a nested map: Map<Integer, Map<Integer, Double>> areaPrices = new HashMap<Integer, Map<Integer, Double>>(); and this map is populated using the code: code."
2458217,1,0,3,java.util.HashMap,The agents is a HashMap.
2468807,2,1,3,java.util.HashMap,"For example, you may start out with a simple HashMap and find out later that for some reason, a TreeMap would be better."
2469294,2,0,2,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode, which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
2470663,2,0,0,java.util.HashMap,In that case you might opt for using a HashMap (with the ID as key) or implement your own MyHashSet class (backed by such a HashMap).
2470817,2,0,3,java.util.HashMap,You could use a HashMap (or LinkedHashMap/TreeMap if order is important) with a key of ID and a value of Objects.
2470817,2,0,3,java.util.HashMap,"With generics that would be HashMap<Object, Objects>(); Then you can use code."
2473410,1,0,1,java.util.HashMap,"Basically, I am looking for a HashMap which will reduce memory usage when there is low memory (GC collects the value and key objects if necessary)."
2475617,1,0,0,java.util.HashMap,"Map myHash = null myHash = (HashMap)Collections.synchronizedMap(new HashMap()); If i try to use this hashmap, i get java.lang.ClassCastException"
2475624,2,1,1,java.util.HashMap,Because Collections.synchronizedMap() does not return a HashMap.
2475624,2,1,1,java.util.HashMap,Correct way should be: Map mySyncedMap = Collections.synchronizedMap(new HashMap()); (or any other map instead of HashMap)
2475636,2,0,0,java.util.HashMap,Because Collections.synchronizedMap does not return a HashMap.
2475636,2,0,0,java.util.HashMap,"It returns some other kind of Map (the type of which you should not need to know), that wraps your HashMap."
2475636,2,0,0,java.util.HashMap,You have to use the Map interface  instead of HashMap.
2475663,1,0,0,java.util.HashMap,reversing keys/values - create new instance of HashMap.
2475663,1,0,0,java.util.HashMap,"I’ve got an existing instance of HashMap simply called sale (it is Map<String, Set<String>>) I use it to log customers and items history."
2475663,1,0,0,java.util.HashMap,"Is there a way to create a new instance of HashMap, that effectively reverses this usage?"
2476144,1,0,3,java.util.HashMap,The first class checks if such an object was already generated (if it is present in the static HashMap of the first class).
2476144,1,0,3,java.util.HashMap,"If it is not yet there, it is created, added to the HashMap and returned."
2476144,1,0,3,java.util.HashMap,"At some stage of my program, I take an object with a specific name from the HashMap of the first class."
2476144,1,0,3,java.util.HashMap,But the object in the HashMap does not see these changes!
2476144,1,0,3,java.util.HashMap,"So, in fact, I do not ""take"" an object from the HashMap, I ""create a copy"" of this object and this is what I would like to avoid."
2476144,1,0,3,java.util.HashMap,"But anyway, I learned that if I take an object from a HashMap and do some changes to this object, they will be also applied to the object ""sitting"" in the HashMap."
2476213,2,0,1,java.util.HashMap,"At some stage of my program, I take an object with a specific name from the HashMap of the first class."
2476213,2,0,1,java.util.HashMap,But the object in the HashMap does not see these changes!
2476213,2,0,1,java.util.HashMap,"So, in fact, I do not ""take"" an object from the HashMap, I ""create a copy"" of this object and this is what I would like to avoid."
2476213,2,0,1,java.util.HashMap,Taking objects from a HashMap with get() is not a copying operation.
2476738,1,0,2,java.util.HashMap,Complex HashMap has different hashCode after serialization.
2476738,1,0,2,java.util.HashMap,I am parsing a xml file into a complex HashMap looking like this: code.
2476738,1,0,2,java.util.HashMap,Now when I copy a A HashMap this way: code.
2476753,2,0,1,java.util.HashMap,"Since the hashCode of a HashMap is defined in terms of the hashCode of each key and value, I'd try to find out which key or element produces a different hashCode after serialization."
8114525,2,0,7,java.util.HashMap,"Apart from that, I use SparseArray where possible, because all the Java data structures such as HashMap, ArrayList etc."
2487640,2,0,2,java.util.HashMap,"If you are planning on using a hash table implementation from the Java libraries, be sure to note that there are two of them - HashTable, and HashMap."
2497169,2,0,0,java.util.HashMap,"There are so many types of collections, including:  HashSet ArrayList HashMap TreeSet TreeMap LinkedList  So for example, if you need to store key/value pairs, you will have to write a lot of custom code if it will be based off an array - whereas the Hash* collections should just work out of the box."
2497172,2,0,6,java.util.HashMap,The standard HashMap gives you that for free.
2497172,2,0,6,java.util.HashMap,"There are different implementation you can choose from for the same set of services: ArrayList vs. LinkedList, HashMap vs. TreeMap, synchronized, etc."
2499129,2,0,0,java.util.HashMap,This link should help you to understand things better: http://java.sun.com/j2se/1.5.0/docs/api/java/util/HashMap.html
2500469,1,0,1,java.util.HashMap,Should I use HashMap which include another HashMap as its elements?
2500946,1,0,4,java.util.HashMap,Does HashMap provide a one to one correspondence?
2500946,1,0,4,java.util.HashMap,"But if I put (2,4) instead of (3,4) I will add a new pair of key/value to the HashMap."
2500978,2,0,2,java.util.HashMap,"Think of the HashMap like it is a box of drawers,  each drawer can hold only one object and each drawer is marked with the key."
2501327,1,0,1,java.util.HashMap,How to make a loop over all keys of a HashMap?
2501721,2,0,6,java.util.HashMap,"My first thought would be to create a class for the thing being indexed, then create multiple HashMap's to hold the indexes, with the same object added to each of the HashMaps."
2501721,2,0,6,java.util.HashMap,"For an add, you'd then simply add the same object to each HashMap."
2501721,2,0,6,java.util.HashMap,A delete would require searching each HashMap for the reference to the destination object.
2567407,2,0,2,java.util.HashMap,"You can't use a HashMap, because you won't be able to compute a hashcode based on just one element of the tuple."
2504092,2,0,6,java.util.HashMap,Implementers of Map like HashMap have key/value pairs and provide a get(Object key) method to get the value associated with a key.
2504539,1,0,2,java.util.HashMap,I don't think using a HashMap could work since I need to get them all on every iteration and map.values() should be backed by an ArrayList anyway..
2504539,1,0,2,java.util.HashMap,"The maps are two HashMap<Tag, Float>.. in addition I already cache similarities in a TLongFloatHashMap (from Trove collections) to avoid recalculating it in later iterations in which the Long key is calculated as a hashcode of both contents (that is unique for the pair so that hash(c1, c2) == hash(c2, c1)) so everything else is already tuned up enough."
2508918,1,0,13,java.util.HashMap,Why does the Java compiler not like primitive int as type for values in HashMap?
2522155,1,0,3,java.util.HashMap,"I don't have an idea about a more elegant solution beside doing another function which explicitly wants a HashMap<String, Integer> or HashMap<Buffer, Integer> parameter."
2522188,2,1,4,java.util.HashMap,"This bounds the two parameters of the function together, so for a HashMap<String, Integer> you can only pass String instances as first parameter."
2523914,2,1,4,java.util.HashMap,Just remember to override the hashCode() method of your Drug class if you plan to use a HashMap.
2523916,2,0,2,java.util.HashMap,"From the Java Collections Trail:  The three general-purpose Map    implementations are HashMap, TreeMap    and LinkedHashMap."
2523916,2,0,2,java.util.HashMap,"If you need   SortedMap operations or key-ordered   Collection-view iteration, use   TreeMap; if you want maximum speed and   don't care about iteration order, use   HashMap; if you want near-HashMap   performance and insertion-order   iteration, use LinkedHashMap."
2525621,1,0,8,java.util.HashMap,What about HashMap's getting and putting?
2525621,1,0,8,java.util.HashMap,How does HashMap handle putting an element into it?
2525663,2,1,6,java.util.HashMap,"In the case of HashMap, an unsynchronized map is not safe to read if there is another thread writing to it, even a single writer thread."
2525679,2,0,6,java.util.HashMap,"Rather than wrapping your HashMap in something to make it synchronized, consider using a java.util.concurrency.ConcurrentHashMap instead."
2525679,2,0,6,java.util.HashMap,"This is an updated version of HashMap that guarantees ""Retrievals reflect the results of the most recently completed update operations holding upon their onset."
2530530,2,0,6,java.util.HashMap,"For example, using a java.util.HashMap to implement a map between bytes and bytes is going to be painfully slow in Java (compared to a primitive array lookup table), and it will be equally slow in Scala."
2531162,2,0,1,java.util.HashMap,"the Hashtable, HashMap and TreeMap are all instances of a Map."
2622123,2,0,0,java.util.HashMap,How is possible to print the HashMap content?
2533037,2,1,4,java.util.HashMap,"You must use MultiSet or HashMap, where you save count of elements."
2534017,2,1,3,java.util.HashMap,"Directly from the HashSet class javadoc  This class implements the Set   interface, backed by a hash table   (actually a HashMap instance)."
2536009,2,1,2,java.util.HashMap,LinkedHashMap inherets keySet() from HashMap: http://java.sun.com/j2se/1.4.2/docs/api/java/util/LinkedHashMap.html#methods_inherited_from_class_java.util.HashMap keySet() returns an object of class Set: http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html#keySet%28%29
2538011,1,0,3,java.util.HashMap,HashMap.containsValue - What's the point?
2538011,1,0,3,java.util.HashMap,I've got a HashMap and I need to fetch an item by its integer value.
2538094,2,0,3,java.util.HashMap,A HashMap (or Map in general) uses key/value pairs.
2538094,2,0,3,java.util.HashMap,"Based on the implementation of the HashMap, given a key, retrieval of a value is done in O(1) time."
2538094,2,0,3,java.util.HashMap,"containsValue is a useful method for checking that a HashMap contains the value you are looking for, but I don't really see why you are using that to retrieve the value you are looking for??"
2538092,1,0,12,java.util.HashMap,Why does a HashMap rehash the hashcode supplied by the key object?
2538092,1,0,12,java.util.HashMap,I am reading the code of the HashMap class provided by the Java 1.6 API and unable to fully understand the need of the following operation (found in the body of put and get methods): code.
2538092,1,0,12,java.util.HashMap,"I'm unable to understand the need to do so even though the API states it as follows:  This is critical         because HashMap uses power-of-two length hash tables, that         otherwise encounter collisions for hashCodes that do not differ         in lower bits."
2538937,2,1,21,java.util.HashMap,"Under these circumstances, the bit operations in HashMap's hash(int h) can provide a net improvement over most expected use-cases (due to lower collision rates), even though extra computation is required."
2540073,2,0,3,java.util.HashMap,"This design is pretty nice because the threads will no longer have to compete for a lock to update data, and since the map is confined to a single thread you can simply use a plain HashMap to do get/put, etc."
2540073,2,0,3,java.util.HashMap,"Another benefit is that since only one thread reads and writes to the map, plain HashMap and primitive long type can be used (no ConcurrentHashMap or atomic types involved)."
2553535,1,0,2,java.util.HashMap,Convert JSON String to Java Object or HashMap.
2557590,2,0,3,java.util.HashMap,It can be put in an Intent easily and is basically a glorified typesafe HashMap.
2560274,2,0,1,java.util.HashMap,There is no inherent reason why keeping track of requests in a HashMap (or any other way you might choose) would lead to memory leaks.
2559450,1,0,5,java.util.HashMap,I want to get all properties from object and build HashMap from it.
10814866,2,1,1,java.util.HashMap,"So, if you really wanted a HashMap: code."
2564156,2,1,3,java.util.HashMap,I'm not sure about HashMap implementation but I think it uses open addressing too.
2565230,1,0,2,java.util.HashMap,What is the best way to parse this file using Java if I want to create a HashMap with the first column as the key and the second column as the value.
2565244,2,0,0,java.util.HashMap,"It can overcome simple deviations in structure (variable number of white-space characters, uneven formatted lines, etc) But if your text is known to be 100% well-formatted and predictable, then just read a bunch of lines into a buffer, take them one at a time, and take-out parts of the strings into your HashMap key and value."
2565817,1,0,1,java.util.HashMap,Extend HashMap to add putChildren method.
2574694,2,0,2,java.util.HashMap,HashMap?
2580370,1,0,3,java.util.HashMap,"I'm not seeing how the container      ""locations"" 's state could be modified after construction; so since it is published through an 'unmodifiableMap' wrapper, it appears to me that an ordinary HashMap would suffice."
2591369,2,0,1,java.util.HashMap,"Depending on the size of the table, you may simply want to load the whole thing in advance into memory (perhaps as a HashMap), and then you wouldn't need to go to the database on every iteration."
2620053,2,1,11,java.util.HashMap,"Most data structures that dynamically grows (ArrayList, HashMap, etc) do them in a way that preserves algorithmically optimal operations, taking advantage of cost amortization."
2594096,2,0,2,java.util.HashMap,Note you'll get an exception if you try to remove an object while iterating over a HashMap.
2594752,2,0,6,java.util.HashMap,Note - This solution takes advantage of the fact that the Map returned by the filterValues call is a view of the elements in the original HashMap.
2596505,2,0,0,java.util.HashMap,Have a class that extends HashMap and override the toString() method.
2597725,2,0,4,java.util.HashMap,"Keep a HashMap of {account_number, occurrences} in memory (initially empty), and traverse the file only once, setting or incrementing (in the HashMap) the number of occurrences of each account number you encounter during the traversal."
2597725,2,0,4,java.util.HashMap,"If you also have to print full information about the duplicate account numbers, then perform a second traversal of the input file, this time printing full details about each account number where the corresponding number of occurrences in the HashMap exceeded 1 during the previous traversal."
2597725,2,0,4,java.util.HashMap,"In terms of memory usage, even if all account numbers in a 500k-line-file are distinct you will only require roughly 1M integer storage (assuming account numbers are integers) plus HashMap overhead, which should all fit comfortably in a few megabytes of memory."
14006711,2,0,1,java.util.HashMap,instead of HashMap I think we can use Set too.
2600390,1,0,2,java.util.HashMap,How expensive is a call to java.util.HashMap.keySet()?
2600756,2,0,4,java.util.HashMap,"Regarding traversing the keySet() If you are using an array-backed Map implementation (like HashMap), keySet() relies on entrySet() which returns an internal iterator backed by an array."
2600756,2,0,4,java.util.HashMap,Traversing the keyset will depend on whether you use an array-backed Map (HashMap) or a SortedMap (TreeMap).
2601625,2,1,11,java.util.HashMap,Practically it means two things:  Don't use them unless you will be sharing them between threads (if not just use HashMap or ArrayList).
2601657,2,0,1,java.util.HashMap,ArrayList and HashMap.
2628352,2,0,1,java.util.HashMap,That depends where the reference classToInstance=new HashMap(); is defined.
2627889,1,0,10,java.util.HashMap,Java HashMap with Int Array.
2627889,1,0,10,java.util.HashMap,Hello  I am using this code to check that array is present in the HashMap.
2627889,1,0,10,java.util.HashMap,How can I check that array is present in the HashMap.
2627970,2,1,23,java.util.HashMap,Understanding the workings of equals and hashCode in a HashMap  API  Object.equals and Object.hashCode  It's essential for a Java programmer to be aware of these contracts and how to make them work with/for the rest of the system
2628425,2,0,4,java.util.HashMap,We can build something like a HashMap where in we would map a string to a set of strings which are anagrams.
2633524,1,0,2,java.util.HashMap,"Does a HashMap retain the order of its elements on the next read if it is constructed and ""filled"" as a LinkedHashMap?"
2633524,1,0,2,java.util.HashMap,Suppose I have a Java method that returns a HashMap  object.
2633524,1,0,2,java.util.HashMap,"Because a LinkedHashMap is a subclass of HashMap, I can return a LinkedHashMap from this method just fine."
2633524,1,0,2,java.util.HashMap,"On the next ""read"" action (no adding/removing/modifying of K/V pairs), would iterating over the keys of the resulting method (which returns a HashMap) go in the same order as the originating LinkedHashMap, even though the HashMap lacks the key links?"
2638622,1,0,49,java.util.HashMap,"Incorrect number of arguments for type HashMap; it cannot be parameterized with arguments     Try.java    /TryJava7/src   line 7  Java Problem Syntax error on token ""<"", ?"
2643225,2,0,0,java.util.HashMap,"I have a program in which I need to   store a Class object into memory by  After creating an object it's already located in memory, if you want to cache it you may put into a HashMap for later access."
2646613,1,0,6,java.util.HashMap,"But every time I call jsonobj.put(""this"", ""that""), I see a warning in Eclipse:  Type safety: The method put(Object, Object) belongs to the raw type HashMap."
2646613,1,0,6,java.util.HashMap,"References to generic type HashMap should be parameterized  The clean fix would be if JSONObject were genericized, but since it isn't, I can't add any generic type parameters to fix this."
2647402,2,0,0,java.util.HashMap,You could use a HashMap containing your items as keys and their count as values.
2647759,2,0,0,java.util.HashMap,"And since it isn't a list and has implementations backed by a HashMap, getting the count is considerably more efficient."
2647265,2,0,20,java.util.HashMap,If you need to count occurencies of a long list many times I suggest you to use an HashMap to store the counters and update them while you insert new items to the list.
2650169,1,0,3,java.util.HashMap,Thanks HashMap> coordWalkingConnections = new HashMap>(); code.
2652078,2,0,0,java.util.HashMap,"Let's say we have HashMap implements Map<K,V>, Set<Map.Entry<K,V>, LinkedHashMap implements Map<K,V>, Set<Map.Entry<K,V> etc... that is all good, but if you had entrySet(), nobody will forget to implement that method, and you can be sure that you can get entrySet for any Map, whereas you aren't if you are hoping that the implementor has implemented both interfaces..."
2651833,2,1,68,java.util.HashMap,"It's worth noting that the HashSet is actually implemented as a HashMap, not the other way around."
2654709,1,0,10,java.util.HashMap,Disk based HashMap.
2654709,1,0,10,java.util.HashMap,Does Java have (or is there a library available) that allows me to have a disk based HashMap?
15269432,2,0,12,java.util.HashMap,MapDB MapDB provides concurrent TreeMap and HashMap backed by disk storage or off-heap-memory.
9414860,2,0,5,java.util.HashMap,It provides a HashMap backed up by disk storage (among other maps).
2656995,1,0,3,java.util.HashMap,How can i get the Integer key of the 3rd smaller value of Float in all HashMap?
2656995,1,0,3,java.util.HashMap,Edit im using the HashMap for this code.
2657015,2,1,4,java.util.HashMap,Michael Mrozek nails it with his question if you're using HashMap right: this is highly atypical scenario for HashMap.
2657015,2,1,4,java.util.HashMap,"That said, you can do something like this:  get the Set<Map.Entry<K,V>> from the HashMap<K,V>.entrySet()."
2657123,1,0,2,java.util.HashMap,My initial thought was to create a HashMap and a Qualities class as follows: code.
2657123,1,0,2,java.util.HashMap,Is there a better way of coding for these optional special qualities and representing them in the Merchants class than a HashMap and subclassing a Qualities class?
2663098,2,1,33,java.util.HashMap,An ArrayList gives you the latter and a HashMap or TreeMap give you the former.
2661100,2,0,1,java.util.HashMap,What about using a HashMap?
2665133,2,0,1,java.util.HashMap,"What you're doing right now is that you're actually storing the strings from the input file unnecessarily into your HashMap<String,ArrayList<String>>."
2665780,1,0,1,java.util.HashMap,"For my trading program, a Merchant object has a qualities HashMap of enumerated Qualities with Boolean values."
2665780,1,0,1,java.util.HashMap,I would like to give each Merchant object a further ratedQualities HashMap of True Qualities with Byte or Integer values representing the Rating of those Qualities.
2665780,1,0,1,java.util.HashMap,According to this link text one solution is to create a Wrapper for the qualities HashMap.
2674675,2,0,1,java.util.HashMap,Then use a HashSet or HashMap.
2695417,2,0,0,java.util.HashMap,"So for all those who're curious about how my final code looks like: function message = client(host, port, number_of_retries) import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.net.Socket; import java.net.ServerSocket; import java.net.UnknownHostException; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; import java.io."
2686092,1,0,11,java.util.HashMap,Java - get index of key in HashMap?
2686092,1,0,11,java.util.HashMap,"In java if I am looping over the keySet() of a HashMap, how do I (inside the loop), get the numerical index of that key?"
2686103,2,0,13,java.util.HashMap,The HashMap has no defined ordering of keys.
5618920,2,0,25,java.util.HashMap,"Use LinkedHashMap instead of HashMap It will always return keys in same order (as insertion) when calling keySet() For more detail, see Class LinkedHashMap"
2687941,2,0,1,java.util.HashMap,"In this case, you may want to consider using other data structures such as HashMap."
2688629,1,0,26,java.util.HashMap,Is a HashMap thread-safe for different keys?
2688629,1,0,26,java.util.HashMap,"If I have two multiple threads accessing a HashMap, but guarantee that they'll never be accessing the same key at the same time, could that still lead to a race condition?"
2688817,2,1,31,java.util.HashMap,In @dotsid's answer he says this:  If you change a HashMap in any way then your code is simply broken.
2688817,2,1,31,java.util.HashMap,A HashMap that is updated without synchronization will break even if the threads are using disjoint sets of keys.
2688817,2,1,31,java.util.HashMap,Use a regular HashMap but synchronize on the outside.
2688817,2,1,31,java.util.HashMap,Use a different HashMap for each thread.
2688654,2,0,3,java.util.HashMap,This means that HashMap shouldn't change and all changes (initial constructions) should be completed before any reader start to accessing HashMap.
2688654,2,0,3,java.util.HashMap,If you change a HashMap in any way then your code is simply broken.
2688654,2,0,3,java.util.HashMap,"EDIT: If the first case is your actual situation, I recommend you to use Collections.unmodifiableMap() to be shure that your HashMap is never changed."
2688654,2,0,3,java.util.HashMap,"Objects which are pointed by HashMap should not change also, so aggressive using final keyword can help you."
2688751,2,0,2,java.util.HashMap,Modifying a HashMap without proper synchronization from two threads may easily lead to a race condition.
2699029,1,0,4,java.util.HashMap,"I'm thinking of HashMap, but can I do something like this?"
2699029,1,0,4,java.util.HashMap,"<""msg,flow,flow"",""flowbits""> Also, in a sentence the arguments might not be in order, so assuming that it's flow,flow,msg then I can't match anything in the HashMap as the key is ""msg,flow,flow""."
2701900,2,1,7,java.util.HashMap,"Obviously, you may not insert an ordinary HashMap<X,Y> into such a list."
2703362,2,1,2,java.util.HashMap,"Create a HashMap<FileHash, List<File>> map instance."
2703362,2,1,2,java.util.HashMap,"If you do that you can make the map type HashMap<FileHash, List<FileTuple>> where FileTuple is a class that holds both a File and its length."
2704080,1,0,4,java.util.HashMap,JGoodies HashMap.
2704640,2,1,9,java.util.HashMap,"The insertion order directly influences the iteration order whenever you have a bucket collision: When two elements end up in the same bucket, the first one that was inserted will also be the first one returned during iteration, at least if the implementation of collision handling and iteration is straightforward (and the one in Sun's java.util.HashMap is)"
2704646,2,0,0,java.util.HashMap,"The javadoc says that:  This class implements the Set   interface, backed by a hash table   (actually a HashMap instance)."
2704612,2,0,4,java.util.HashMap,"As per the javadoc:  This class implements the Set   interface, backed by a hash table   (actually a HashMap instance)."
2704882,1,0,0,java.util.HashMap,More than one unique key for HashMap problem (Java).
2706282,2,0,0,java.util.HashMap,"So HashSet and HashMap used a hash as the underlying data structure, while TreeSet and TreeMap use a binary tree."
2706384,2,0,1,java.util.HashMap,"As with Vector and ArrayList following are the complexities since it uses a simple array  get(index) - O(1)  add(Object) - O(n) insertAt(int pos, Object value) - O(n)  remove(Object) - O(n)  One more thing is that HashSet internally uses a HashMap only worrying about the keys of a map and the objects being ignored or unused so that there are no two different implementations."
2706384,2,0,1,java.util.HashMap,And HashMap uses the collision free or the ideal hashing by generating unique hashcodes for every object.
2707545,2,0,6,java.util.HashMap,Because HashMap/Hashtable will lookup object by hashCode() first.
2707554,2,1,23,java.util.HashMap,"It works for you because your code does not use any functionality (HashMap, HashTable) which needs the hashCode() API."
8391336,2,0,2,java.util.HashMap,"Most of the other comments already gave you the answer: you need to do it because there are collections (ie: HashSet, HashMap) that uses hashCode as an optimization to ""index"" object instances, an those optimizations expects that if: a.equals(b) ==> a.hashCode() == b.hashCode() (NOTE that the inverse doesn't hold)."
2734057,2,1,3,java.util.HashMap,"in pseudocode Map> map = new HashMap>(); for each line {    List tokens = ...; // result of splitting the line    String key = tokens.get(0);    map.add(key, tokens.sublist(1, tokens.size()); } Even if the parser doesn't filter uninteresting text, it will be filtered later."
2714650,1,0,0,java.util.HashMap,"The Service returns a HashMap with one of the values an Array, when I request the key of the Array from the HashMap,  Java just returns java.lang.Object."
2748571,2,0,0,java.util.HashMap,You have to cast the default java Object to HashMap and then access it.
2723855,2,1,3,java.util.HashMap,"Generally, Lists are implemented as either arrays (ArrayList) or linked lists (LinkedList); sets are either hashtables (HashSet) or trees (TreeSet); and maps are hashtables (HashMap)."
2729852,2,0,0,java.util.HashMap,Or you can convert the Set to an HashMap and pass that.
2734208,1,0,1,java.util.HashMap,"i.e HashMap maps key-value pairs: Key, Value What is the best way to map: Key, Value, Value1?"
2738259,2,1,16,java.util.HashMap,(In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ?
2742199,2,0,0,java.util.HashMap,"Start at the 0,0 position - read the value at that position, and start a list (in Java, an ArrayList or HashMap), add the number to the list and give it a hash mark (value of 1), to indicate you've seen it once."
2741729,2,0,2,java.util.HashMap,"I would simply create a HashMap<Integer,Integer> where the first integer is the value in the scores array and the second is the frequency."
2753315,2,1,5,java.util.HashMap,"The solution of this problem is that when you are using other objects, let say class A, into a collection like HashMap and want to serialize the HashMap object, then implement the interface Serializable for class A like this: code."
2746791,2,0,0,java.util.HashMap,"I had a simiarl issue with Maps, where HashMap definitely needs the hashCode implementation."
2747907,2,0,1,java.util.HashMap,"When using a correctly implemented hash table (like java.util.HashMap), you don't have to worry about the hashCode() method of your keys."
2747911,2,0,16,java.util.HashMap,"The serialization form of java.util.HashMap doesn't serialize the buckets themselves, and the hash code is not part of the persisted state."
2747911,2,0,16,java.util.HashMap,"From the javadocs:  Serial Data:       The capacity of the HashMap (the length of the bucket array) is emitted   (int), followed by the size of the   HashMap (the number of key-value   mappings), followed by the key   (Object) and value (Object) for each   key-value mapping represented by the   HashMap The key-value mappings are   emitted in the order that they are   returned by entrySet().iterator()."
2747911,2,0,16,java.util.HashMap,from http://java.sun.com/j2se/1.5.0/docs/api/serialized-form.html#java.util.HashMap The persisted state basically comprises the keys and values and some housekeeping.
2747901,2,0,6,java.util.HashMap,I'm 99% sure that the JVM implementation of HashMap and HashSet handle this issue.
2747901,2,0,6,java.util.HashMap,"I don't have Bloch's book in front of me now, but I believe he is explaining the challange, not saying that you can't reliably serialize a java.util.HashMap in practice."
2748418,2,0,5,java.util.HashMap,"In examining the performance results from this, I found that the HashMap is a performance bottleneck, since I do that synchronously on one thread  Instead of using a Hashmap, try using a simple list to gather the points together - adding a point to a list is near-constant, near-zero time, as long as you set the list capacity high enough in advance."
2751720,2,0,1,java.util.HashMap,But internally a hashset is going to use a HashMap anyway.
2752324,2,0,2,java.util.HashMap,"If you need to know which field is which, use a HashMap and name each JTextField with a unique name to serve as key for the HashMap."
2754407,2,0,0,java.util.HashMap,"In your example above, it seems like HashMap<String,Integer> can do the job."
2757037,2,0,4,java.util.HashMap,"One other thing I'd like to point out is that the Hashtable class has been mostly replaced by the HashMap class (which also uses separate chaining, see here)."
2757037,2,0,4,java.util.HashMap,"The main difference between the two is that all of the methods in Hashtable are synchronized, whereas in HashMap they are not."
2757037,2,0,4,java.util.HashMap,"If you do need a thread-safe map implementation, then you should consider either wrapping a normal HashMap in a call to Collections.synchronizedMap(), or using a ConcurrentHashMap."
2757043,1,0,2,java.util.HashMap,"The class KeyMapper is basically a synchronized wrapper to HashMap with only two functions, one to add a mapping and one to remove a mapping."
2757043,1,0,2,java.util.HashMap,However when running on a 64 bit Linux machine (CentOS 5.4 with OpenJDK 1.6.0-b09) I add one mapping and print out the size of the HashMap used by KeyMapper to verify the mapping got added (i.e. verify size = 1).
2757043,1,0,2,java.util.HashMap,Then I try to retrieve the mapping with another request and I keep getting null and when I checked the size of the HashMap it was 0.
2757043,1,0,2,java.util.HashMap,I'm at my wits end and I can't figure out why one minute the entry in HashMap is there and the next it isn't :(
2760447,2,0,1,java.util.HashMap,Same goes for Hashtable being replaced by HashMap
2763523,2,0,7,java.util.HashMap,"In that case, you can make use of the DataInputStream (but don't forget to go through some BufferedInputStream or BufferedReader) Depending on how you wish to access the data, you might be better off storing the records in a hash-map (HashMap<Integer, DataRecord>) (having i or j as the key)."
2867617,2,1,3,java.util.HashMap,"There are 3 rules:  On data, ObjectCreate a HashMap On data/?"
2765478,1,0,2,java.util.HashMap,"I have several ArrayLists of Integer objects, stored in a HashMap."
2772836,1,0,4,java.util.HashMap,"I have an Iterator that I use on a HashMap, and I save and load the iterator."
2772836,1,0,4,java.util.HashMap,is there a way to get the previous key in the HashMap with Iterator?
2772836,1,0,4,java.util.HashMap,Another update I'm iterating through the keyset of the HashMap
2773824,1,0,41,java.util.HashMap,Difference between HashSet and HashMap?
2773824,1,0,41,java.util.HashMap,"Apart from the fact that HashSet does not allow duplicate values, what is the difference between HashMap and Hashset?"
24584728,2,0,0,java.util.HashMap,"HashMap HashMap is a implementation of Map Interface, which maps a key to value.Duplicate keys are not allowed in a map.Basically map Interface has two implementation classes HashMap and TreeMap the main difference is TreeMap maintains order of the objects but HashMap will not.HashMap allows null values and null keys.HashMap is not synchronized,but collection framework provide methods so that we can make them synchronized if multiple threads are going to access our hashmap and one thread is structurally change our map."
2773843,2,0,2,java.util.HashMap,A HashSet is implemented in terms of a HashMap.
2773852,2,0,1,java.util.HashMap,A HashSet uses a HashMap internally to store its entries.
2773852,2,0,1,java.util.HashMap,"Each entry in the internal HashMap is keyed by a single Object, so all entries hash into the same bucket."
2773852,2,0,1,java.util.HashMap,"I don't recall what the internal HashMap uses to store its values, but it doesn't really matter since that internal container will never contain duplicate values."
2773852,2,0,1,java.util.HashMap,The internal HashMap is keyed with the Objects that make up the Set elements.
2773852,2,0,1,java.util.HashMap,The values of the HashMap are an Object that's just simply stored in the HashMap buckets.
2773853,2,0,1,java.util.HashMap,HashSet allows us to store objects in the set where as HashMap allows us to store objects on the basis of key and value.
2773854,2,0,2,java.util.HashMap,"As the names imply, a HashMap  is an associative Map (mapping from a key to a value), a HashSet is just a Set."
2773861,2,1,43,java.util.HashMap,A HashMap is an implementation of Map.
2773861,2,1,43,java.util.HashMap,"A HashSet does use a HashMap to back its implementation, as you noted."
2773862,2,0,105,java.util.HashMap,"{1,2,3,4,5} HashMap is a key -> value (key to value) map, e.g."
2773862,2,0,105,java.util.HashMap,"{a -> 1, b -> 2, c -> 2, d -> 1} Notice in my example above that in the HashMap there must not be duplicate keys, but it may have duplicate values."
13037158,2,0,0,java.util.HashMap,"HashSet and HashMap both store  pairs , the difference lies that in HashMap you can specify a key while in HashSet the key comes from object's hash code"
6971241,2,0,0,java.util.HashMap,"Basically in HashMap, user has to provide both Key and Value, whereas in HashSet you provide only Value, the Key is derived automatically from Value by using hash function."
6971241,2,0,0,java.util.HashMap,"So after having both Key and Value, HashSet can be stored as HashMap internally."
2773885,2,0,2,java.util.HashMap,"A HashMap is to add, get, remove, ... objects indexed by a custom key of any type."
2773885,2,0,2,java.util.HashMap,So a HashMap contains the elements and a HashSet remembers their hashes.
30032779,2,0,0,java.util.HashMap,HashMap  is a implementation of Map interface HashSet is an implementation of Set Interface HashMap Stores data in form of  key value pair HashSet Store only objects Put method is used to add element in map Add method is used to add element is Set In hash map hashcode value is calculated using key object Here member object is used for calculating hashcode value which can be same for two objects so equal () method is used to check for equality if it returns false that means two objects are different.
30032779,2,0,0,java.util.HashMap,HashMap is faster than hashset because unique key is used to access object HashSet is slower than Hashmap
14704034,2,0,0,java.util.HashMap,"Differences between HashSet and HashMap in Java 1) First and most significant difference between HashMap and HashSet is that HashMap is an implementation of Map interface while HashSet is an implementation of Set interface, which means HashMap is a key value based data-structure and HashSet guarantees uniqueness by not allowing duplicates.In reality HashSet is a wrapper around HashMap in Java, if you look at the code of add(E e) method of HashSet.java you will see following code : code."
14704034,2,0,0,java.util.HashMap,"2) Second difference between HashMap and HashSet is that , we use add() method to put elements into Set but we use put() method to insert key and value into HashMap in Java."
14704034,2,0,0,java.util.HashMap,"3) HashSet allows only one null key, but HashMap can allow one null key + multiple null values."
14704034,2,0,0,java.util.HashMap,That's all on difference between HashSet and HashMap in Java.
14704034,2,0,0,java.util.HashMap,In summary HashSet and HashMap are two different type of Collection one being Set and other being Map.
2775745,2,0,1,java.util.HashMap,HashMap implements Map and stores a mapping of keys and values.
2775745,2,0,1,java.util.HashMap,A use of HashSet and HashMap with respect to database would help you understand the significance of each.
2775745,2,0,1,java.util.HashMap,E.g: It might be used as implementation class for storing many-to-one relation ship between  class Item and Class Bid where (Item has many Bids) *HashMap:* is used to map a key to value.the value may be null or any Object /list of Object (which is object in itself).
23100373,2,0,1,java.util.HashMap,"Differences between HashSet and HashMap in Java HashSet internally uses HashMap to store objects.when add(String) method called it calls HahsMap put(key,value) method where key=String object & value=new Object(Dummy).so it maintain no duplicates because keys are nothing but Value Object."
23100373,2,0,1,java.util.HashMap,the Objects which are stored as key in Hashset/HashMap should override hashcode & equals contract.
23100373,2,0,1,java.util.HashMap,Keys which are used to access/store value objects in HashMap should declared as Final because when it is modified Value object can't be located & returns null.
2774608,1,0,14,java.util.HashMap,"I have a HashMap in Java, the contents of which (as you all probably know) can be accessed by code."
2774608,1,0,14,java.util.HashMap,"If a have a HashMap inside another HashMap i.e. a nested HashMap, how would i access the contents?"
2774626,2,1,36,java.util.HashMap,But your HashMap has to be templated: code.
2774639,2,0,2,java.util.HashMap,"If you're not using generics, you'd have to do a cast to convert the object retrieved from the outer hash map to a HashMap (or at least a Map) before you could call its get() method."
2775790,1,0,3,java.util.HashMap,"I tried using the HashMap, ArayList etc."
2777157,2,1,3,java.util.HashMap,"Don't even get me started on the default Java HashMap<Integer,Integer> compared to Trove's TIntIntHashMap or I'll go berzerk ;)"
2777750,2,0,1,java.util.HashMap,If you stored your attributes in a HashMap then you could simply parse the XML and then set the attributes accordingly.
2779251,1,0,60,java.util.HashMap,How can I convert JSON to a HashMap using Gson?
2779251,1,0,60,java.util.HashMap,Casting a HashMap into JSON when making the request wasn't hard at all but the other way seems to be a little tricky.
2780740,2,0,7,java.util.HashMap,"Your original solution, especially for small enums, may be magnitudes faster than using HashMap."
2780740,2,0,7,java.util.HashMap,HashMap will probably be not faster until your enum contains at least 30 to 40 elements.
2780158,2,0,0,java.util.HashMap,You should have a HashMap with the numbers as keys and the enum values as values.
2784408,2,0,0,java.util.HashMap,"), then just use a HashMap or PriorityQueue."
2784408,2,0,0,java.util.HashMap,"It is easier than a PriorityQueue since you don't need a custom object: HashMap<Integer, ArrayList<Integer>> indexMap = new HashMap<Integer, ArrayList<Integer>>(); Fill indexMap so we can get the indices for any given number in array code."
2785486,1,0,5,java.util.HashMap,"Is there a faster alternative, using HashMap is not an option, because the entity's uniqueness is built upon 4 of its attributes together, it would be tedious to put in the key itself into the map ?"
2785650,2,0,1,java.util.HashMap,"Then, use a HashMap so that you can find these things: code."
2785669,2,1,2,java.util.HashMap,Iterating through the list is O(n) while HashMap.get(K) is a constant-time operation.
2786052,2,0,3,java.util.HashMap,"By the way, if you don't need the synchronized feature, a HashMap<String,String> would probably be better than a Hashtable."
2790144,1,0,64,java.util.HashMap,"(Sometimes I make a HashMap mapping Integer.class to an instance of IntegerStuff, BigDecimal.class to an instance of BigDecimalStuff etc."
2790144,1,0,64,java.util.HashMap,"Yes, I know the HashMap and a bit more code can fix that too."
2790144,1,0,64,java.util.HashMap,The HashMap on Class won't work in that case because the Class won't be found.
27567309,2,0,4,java.util.HashMap,I think that the best solution is HashMap with Class as key and Handler as value.
27567309,2,0,4,java.util.HashMap,"Note that HashMap based solution runs in constant algorithmic complexity θ(1), while the smelling chain of if-instanceof-else runs in linear algorithmic complexity O(N), where N is the number of links in the if-instanceof-else chain (i.e. the number of different classes to be handled)."
27567309,2,0,4,java.util.HashMap,So the performance of HashMap based solution is asymptotically higher N times than the performance of if-instanceof-else chain solution.
27567309,2,0,4,java.util.HashMap,Below is the code snippet for HashMap based handling.
2791891,1,0,1,java.util.HashMap,permute data for a HashMap in Java.
2792731,1,0,21,java.util.HashMap,"""Type safety: The expression of type HashMap[] needs unchecked conversion to conform to HashMap[]"""
10907841,2,0,3,java.util.HashMap,"So, just write up a class declaration as a shell around your HashMap, and make an array of that class."
2793707,2,1,4,java.util.HashMap,"If you want the Map entries to be reclaimed when the value Set itself is no longer referenced, no, you don't need a weak HashMap."
2796299,2,1,2,java.util.HashMap,"First, for a pure memory solution I would probably use a HashSet<Integer> or HashMap<Integer>."
2796694,2,1,0,java.util.HashMap,It messes up with HashMap needs only Map So examValues declaration should be like that: code.
2799429,2,1,6,java.util.HashMap,"Or do not use a custom class, but rather treat the object as a data structure (e.g., use a simple HashMap of Strings or something)."
2804540,2,0,1,java.util.HashMap,You want to use a HashMap instead of LinkedList.
2804540,2,0,1,java.util.HashMap,"HashMap is a dictionary-like structure that allows you to create associations, for instance a=>1."
2804540,2,0,1,java.util.HashMap,Check out JavaDocs for HashMap to get a grasp how to use it:-).
2808302,2,1,6,java.util.HashMap,"Then you can read it using ObjectInputStream The objects that you put inside the Hashtable (or better - HashMap) have to implement Serializable  If you want to store the Hashtable in a human-readable format, you can use java.beans.XMLEncoder: code."
24572920,2,0,0,java.util.HashMap,You could also use MapDB and it will save the HashMap for you after you do a put and a commit.
2808774,1,0,1,java.util.HashMap,Sort collection of objects in HashMap based on the object's variable.
2808774,1,0,1,java.util.HashMap,I have a collection of book objects in a HashMap.
2808787,2,0,2,java.util.HashMap,gives you a sorted version of your HashMap.
2811537,1,0,21,java.util.HashMap,Is Java HashMap.clear() and remove() memory effective?
2811537,1,0,21,java.util.HashMap,Consider the follwing HashMap.clear() code: code.
2811537,1,0,21,java.util.HashMap,"So, my question is, how does JVM handle this array of nothing, and thus, is HashMap memory effective?"
2811570,2,1,36,java.util.HashMap,The idea is that clear() is only called when you want to re-use the HashMap.
2811576,2,0,3,java.util.HashMap,"You are right, but considering that increasing the array is a much more expensive operation, it's not unreasonable for the HashMap to think ""once the user has increased the array, chances are he'll need the array this size again later"" and just leave the array instead of decreasing it and risking to have to expensively expand it later again."
2811633,2,0,6,java.util.HashMap,"Looking at the source code, it does look like HashMap never shrinks."
2811633,2,0,6,java.util.HashMap,"If you're using a HashMap in such a way that it grows and shrinks dramatically often, you may want to just create a new HashMap instead of calling clear()."
2812860,2,0,0,java.util.HashMap,"If you had hundreds or thousands of values, running through all of them for each new entry could be prohibitive, and you might want to do something more sophisticated, like use a HashMap, or keep a separate array of flags of what values were used, or some such."
2812850,1,0,6,java.util.HashMap,Each element in the collection is a HashMap (so its a ComboBox of Hashmaps..).
2812850,1,0,6,java.util.HashMap,My question is - Given that I need each item to be a HashMap how do I set the text to apear in the combobox on the GUI?
2812850,1,0,6,java.util.HashMap,"Normally if I am populating a combobox with my own type, I would just overide the toString() method...but I am not sure how to acheive this since I am using a Java HashMap."
2812850,1,0,6,java.util.HashMap,"Any ideas (if possible, without implementing my own HashMap)?"
2812880,2,0,0,java.util.HashMap,If you want to override the toString() method you could just create a decorator class that implements Map and uses a HashMap to implemented the needed methods and give your own implementation of toString().
2812887,2,0,0,java.util.HashMap,"Of course, you have to override the toString method of the object you have in the HashMap"
2816053,1,0,2,java.util.HashMap,It then outputs a HashMap with the specified type for the values in its entries.
2817695,1,0,45,java.util.HashMap,How does Java order items in a HashMap or a HashTable?
2817695,1,0,45,java.util.HashMap,I was wondering how Java orders items in the Map (HashMap or Hashtable) when they are added.
2817716,2,0,3,java.util.HashMap,HashMap does not sort at all.
2817716,2,0,3,java.util.HashMap,"From the documentation of HashMap:  This class makes no guarantees as to   the order of the map; in particular,   it does not guarantee that the order   will remain constant over time."
2817719,2,0,1,java.util.HashMap,A Map is not an ordered data structure - you should not rely on entries in a HashMap being in a certain order.
2817719,2,0,1,java.util.HashMap,"Some Map implementations such as LinkedHashMap and TreeMap do guarantee a certain order, but HashMap does not."
2817719,2,0,1,java.util.HashMap,"If you really want to know what happens internally, lookup the source code of HashMap - you can find it in src.zip which should be in your JDK installation directory."
2817719,2,0,1,java.util.HashMap,"A HashMap has a number of ""buckets"" in which it stores its entries."
2817719,2,0,1,java.util.HashMap,The order in which you see the entries in the HashMap depends on the hash codes of the keys.
2817719,2,0,1,java.util.HashMap,But don't write programs that rely on entries being in a certain order in a HashMap - the implementation might change in a future version of Java and your program then would not work anymore.
2817728,2,1,92,java.util.HashMap,java.util.HashMap is unordered; you can't and shouldn't assume anything beyond that.
2817728,2,1,92,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
2817737,2,0,13,java.util.HashMap,First of all: HashMap specifically doesn't provide a stable and/or defined ordering.
2817737,2,0,13,java.util.HashMap,"Since it is sometimes useful to know the reason for the seemingly random ordering, here's the basic idea: A HashMap has number of buckets (implemented as an array) in which to store entries."
2817737,2,0,13,java.util.HashMap,"When an item is added to the map, it is assigned to a buckets based on a value derived of its hashCode and the bucket size of the HashMap."
2817778,2,0,0,java.util.HashMap,HashMap stores the values using the unique hash-value generated using a part of the key.
2819647,2,0,2,java.util.HashMap,"Also, creating new threads for each request is a bad idea, create a 'session' thread for each different IP you receive in a HashMap or something, and then do a guarded block on the session object."
2820183,2,0,0,java.util.HashMap,Do I understand you correctly if you have a java HashMap with entries ?
2820183,2,0,0,java.util.HashMap,"have a look at: http://java.sun.com/javase/6/docs/api/java/util/HashMap.html cheers,  Jørgen"
2826220,2,0,2,java.util.HashMap,"The only way to match this, AFAIK, is to create a class with two fields that implements hashCode and equals to use as a key for a HashMap."
2830739,1,0,7,java.util.HashMap,"An example scenario:  Thread A constructs a HashMap of ArrayLists, then assigns the HashMap to final field 'myFinal' in an instance of class 'MyClass' Thread B sees a (non-synchronized) reference to the MyClass instance and reads 'myFinal', and accesses and reads the contents of one of the ArrayLists  In this scenario, are the members of the ArrayList as seen by Thread B guaranteed to be at least as up to date as they were when MyClass's constructor completed?"
2831444,1,0,3,java.util.HashMap,"I want to find out the key for given value from HashMap, currently I have to go through all keys and check its value in map, is there a faster way?"
2831461,2,1,6,java.util.HashMap,Maybe you want another HashMap whose keys are the values of the other HashMap?
13522081,2,0,0,java.util.HashMap,Here are two related posts on stackoverflow:  Does Java have a HashMap with reverse lookup?
2833710,1,0,2,java.util.HashMap,I just set a conditional breakpoint in Eclipse's debugger with a mildly inefficient condition by breakpoint standards - checking whether a HashMap's value list (8 elements) contains Double.NaN.
2836287,2,1,45,java.util.HashMap,The point is to provide an implementation of HashMap that is threadsafe.
2839003,1,0,1,java.util.HashMap,"I read in the Java collections chapter on Sun's webpages that if you had a HashMap and wanted it sorted, you could use a TreeMap."
2839101,2,0,0,java.util.HashMap,"List<Entry<K, V>> which you in turn sort using Collections#sort() with help of a Compatator<Entry<K, V>> and finally repopulate a LinkedHashMap with it (not a HashMap or you will lose the ordering again)."
2840464,2,1,3,java.util.HashMap,"A HashMap<String,Integer> can be expected to do this in optimal time."
2847045,2,0,0,java.util.HashMap,"Map<Integer, String> typeMap = new HashMap<Integer, String>(); Map<Integer, String> valueMap = new HashMap<Integer, String>(); typeMap.put(1, ""java.lang.Double""); valueMap.put(1, ""10""); Class clazz = Class.forName((String) typeMap.get(1)); Constructor constructor = clazz.getConstructor(String.class); Object obj = constructor.newInstance(valueMap.get(1));"
2847897,2,0,0,java.util.HashMap,"If you want to add all the items from list to one hash table, you must call HashMap hMap=new HashMap(); outside the for loop."
2847947,2,0,0,java.util.HashMap,You probably want to adjust how you are populating your HashMap as follows: code.
2847947,2,0,0,java.util.HashMap,This approach allows you to take advantage of Java's Generics capability in its Collection objects such as HashMap.
2848524,2,0,2,java.util.HashMap,This can be achieved with HashMap.
2848532,2,0,2,java.util.HashMap,"but this is not a list, more HashMap or so."
2855652,2,0,1,java.util.HashMap,HashMap).
2859577,1,0,24,java.util.HashMap,"I could have my helper method build the HashMap, return it to the constructor, and have the constructor then assign the object to myMap."
6575632,2,0,7,java.util.HashMap,"How about implementing a private constructor that initializes your HashMap, and then have your main constructor(s) call that private constructor?"
2864581,2,0,1,java.util.HashMap,I'm also curious why you want to use an ArrayList rather than a synchronized HashMap.
2863910,2,0,1,java.util.HashMap,":p Now that we get that out of the way, the fastest way to do this is to have a Hashtable or HashMap containing all the IDs already generated."
2873254,1,0,26,java.util.HashMap,I was studying the legacy API's in the Java's Collection Framework and I learnt that classes such as Vector and HashTable have been superseded by ArrayList and HashMap.
2874139,1,0,4,java.util.HashMap,"I'd rather avoid the overhead of an in-memory database if possible, I'm hoping for something comparable in speed to a HashMap (or at least the same order of magnitude)."
2874284,2,0,0,java.util.HashMap,"For instance, if your values were stored in a HashMap (as suggested by another answer) as follows: code."
2877269,2,0,0,java.util.HashMap,"Consider Collection.contains (possibly in conjunction with Arrays.asList, if you are so unfortunate),  HashMap, or Set."
2878581,1,0,6,java.util.HashMap,The options I know are:  HashMap.
2878581,1,0,6,java.util.HashMap,Collections.sychronizedMap(HashMap).
2879489,2,0,1,java.util.HashMap,"If you want to be able to retrieve the number of the month, merge them all into a Map (HashMap) with the value being the month number."
2882082,1,0,0,java.util.HashMap,"I need to save these messages in LinkedList, ArrayList, HashMap and TreeMap."
2882082,1,0,0,java.util.HashMap,"I mean, have 2 different classes (for the user profile), one where I host the messages as Map<K,V> (and then I use HashMap and TreeMap where appropriately) and another class where I host them as List<E> (and then I use LinkedList and ArrayList where appropriately)."
2898788,2,1,0,java.util.HashMap,"I mean, have 2 different classes   (for the user profile), one where I   host the messages as Map (and   then I use HashMap and TreeMap where   appropriately) and another class where   I host them as List (and then I use   LinkedList and ArrayList where   appropriately)."
2887065,2,0,0,java.util.HashMap,"You can do this by keeping two data structures, an array of Events which is basically the binary heap storing your priority queue, and a HashMap from Event to the offset of that Event in the array (or maybe from Entity to a list of offsets of Events in that array)."
2885911,2,0,0,java.util.HashMap,HashMap.containsKey() is O(1) amortized time.
2885911,2,0,0,java.util.HashMap,"For both HashMap and TreeMap containsValue() is O(n), but there may be implementations optimized for containsValue() be as fast as containsKey()."
2885932,2,0,2,java.util.HashMap,"HashMap.containKey uses the hash of the key to fetch all keys with that hash (which is fast) and then uses equals only on those keys, so there's an improvement there; but containsValue() goes through the values with a for."
2885859,2,0,2,java.util.HashMap,"HashMap, containsKey is O(1)."
2885862,2,1,8,java.util.HashMap,"EDITED: With the new form of the question no longer including HashMap and TreeMap, my answer is entirely different."
2890835,2,1,0,java.util.HashMap,"The map is thread-unsafe (HashMap), so if you mutate it through config() and have other threads access map, you have a problem."
2890835,2,1,0,java.util.HashMap,"Though you could use a ConcurrentHashMap instead HashMap, a batch operation on ConcurrentHashMap is not atomic."
2888293,2,1,1,java.util.HashMap,"Maps will also use equals to check for the key, but some like HashMap will also use hashCode() to speed up the searching process (they first get all keys with the same hashcode, and then use equals on each of them to find if the key already exists and has a value assigned, which will then get replaced)."
2889777,1,0,341,java.util.HashMap,"Difference between HashMap, LinkedHashMap and TreeMap."
2889777,1,0,341,java.util.HashMap,"What is the difference between HashMap, LinkedHashMap and TreeMap in Java?"
2889783,2,0,4,java.util.HashMap,"For details look at the javadoc of TreeMap, HashMap, LinkedHashMap."
2889796,2,0,41,java.util.HashMap,HashMap is a map based on hashing of the keys.
2889796,2,0,41,java.util.HashMap,"LinkedHashMap is very similar to HashMap, but it adds awareness to the order at which items are added (or accessed), so the iteration order is the same as insertion order (or access order, depending on construction parameters)."
2889800,2,1,478,java.util.HashMap,The most important difference is the order in which iteration through the entries will happen:  HashMap makes absolutely no guarantees about the iteration order.
30890058,2,0,2,java.util.HashMap,"Let me put it simple:  HashMap is implemented as a hash table, and there is no ordering on keys or values."
30890058,2,0,2,java.util.HashMap,"LinkedHashMap preserves the insertion order Hashtable is synchronized, in contrast to HashMap."
30890058,2,0,2,java.util.HashMap,It has an overhead for synchronization.This is the reason that HashMap should be used if the program is thread-safe.
12147789,2,0,23,java.util.HashMap,"Just some more input from my own experience with maps, on when I would use each one:  HashMap - Most useful when looking for a best-performance (fast) implementation."
12147789,2,0,23,java.util.HashMap,(It is almost as fast as the HashMap).
17706384,2,0,3,java.util.HashMap,HashMap makes absolutely not guarantees about the iteration order.
28228281,2,0,11,java.util.HashMap,TeeMap implements SortedMap and NavigableMap while HashMap doesn't.
4871361,2,0,7,java.util.HashMap,"In NUT-SHELL HashMap : gives data in O(1) , no ordering TreeMap : gives data in O(log N), base 2. with ordered keys LinkedHashMap : is Hash table with linked list (think of indexed-SkipList) capability to store data in the way it gets inserted in the tree."
7802592,2,0,14,java.util.HashMap,"HashMap  It has pair values(keys,values) NO duplication key values unordered unsorted it allows one null key and more than one null values  HashTable  same as hash map it does not allows null keys and null values  LinkedHashMap  It is ordered version of map implementation Based on linked list and hashing data structures  TreeMap  Ordered and sortered version based on hashing data structures"
2890346,1,0,5,java.util.HashMap,This one Worked Like a charm with HashMap.
2890346,1,0,5,java.util.HashMap,I get no error with HashMap.
2890346,1,0,5,java.util.HashMap,"I also got a warning ""Type safety: Unchecked cast from Serializable to LinkedHashMap"" But i had this warning with HashMap too."
2892660,2,0,0,java.util.HashMap,Three Ideas:    You could use a HashMap with the coordinates as key and your elements as value.
2894440,2,1,2,java.util.HashMap,"By the way, Hashtable has a newer, sexier cousin in HashMap."
2894440,2,1,2,java.util.HashMap,"I noticed the multithreading tag in the question, so if you actually need the synchronized feature, you can use Collections.synchronizedMap In either case, whether you use a HashMap or a Hashtable, you want declare  myRooms simply as a Map (see Effective Java 2nd Edition, Item 52: Refer to objects by their interfaces)."
2894440,2,1,2,java.util.HashMap,Related questions  Overriding equals and hashCode in Java Understanding the workings of equals and hashCode in a HashMap Java hashmap vs hashtable Difference between a Deprecated and Legacy API?
2896258,1,0,2,java.util.HashMap,My question is what is the difference between LinkedList and ArrayList or HashMap and THashMap .
2897260,2,1,1,java.util.HashMap,The HashMap and THashMap are both implementations of the Map abstraction that are use hash tables.
2897260,2,1,1,java.util.HashMap,The HashMap class uses closed addressing which means that each bucket in the table points to a separate linked list of elements.
2897260,2,1,1,java.util.HashMap,"The net result is that THashMap uses less memory and is faster than HashMap for most operations, but is much slower it you need the map's set of key/value pairs."
2898362,1,0,3,java.util.HashMap,(2) Data structures an implementation As an end-product I think a HashMap would be most convenient.
2898362,1,0,3,java.util.HashMap,"Once all the RobotInitializers are instantiated, they are added to the HashMap."
2898362,1,0,3,java.util.HashMap,"Iterating through the HashMap, the simulation initializer takes items from the Hashmap and instantiates the appropriate Robots."
16237835,2,0,4,java.util.HashMap,Just a side note - I experienced on tomcat (7.0.30) that the Filter.init() methods are run in random order (iteration over HashMap).
2912431,2,0,0,java.util.HashMap,EDIT First I'd read all lines from the file/message and store them as key/value paris in a Hashtable (HashMap is not available on android..).
14444037,2,0,47,java.util.HashMap,"Constructor accepts an array of objects, and maps them into an array of integers using HashMap."
2920939,1,0,0,java.util.HashMap,i have a hashmap HashMap courses; i store all the postgradCourse and undergradCourse objects in the hashmap.
2924143,2,1,59,java.util.HashMap,"Some map   implementations, like the TreeMap   class, make specific guarantees as to   their order; others, like the   HashMap class, do not."
26938050,2,0,0,java.util.HashMap,"I can easily write an implementation of LinkedHashMap that returns you unordered keySet() and values(), as long as I stick to the contract of these two methods that are defined in Map, and overridden in HashMap."
2924171,2,0,0,java.util.HashMap,Probably just a big HashMap would perform about as well.
2924874,1,0,0,java.util.HashMap,JasperReports: Declaring variable as HashMap.
2924874,1,0,0,java.util.HashMap,Is there a way I could declare a variable of type HashMap which would call some java method to populate the HashMap?
2928023,2,1,0,java.util.HashMap,"(sorry, didn't pay attention, you've set the beginner flag ;)) Properties is a subclass of HashMap and HashMap offers an iterator, which is in Fact a subclass of AbstractMapIterator."
2936811,2,1,1,java.util.HashMap,Here I use a HashMap so that you don't have to allocate over 9000 references for a something like this:  code.
2943433,2,0,3,java.util.HashMap,Hash codes are used by hash-based collection classes such as HashSet and HashMap.
2945056,2,1,2,java.util.HashMap,Something like a doubly linked list with an extra nextEqualItemPtr in it and a HashMap pointing to the first of each item.
2945309,1,0,36,java.util.HashMap,What is the use of adding a null key or value to a HashMap in Java?
2945309,1,0,36,java.util.HashMap,HashMap allows one null key and any number of null values.
15441196,2,0,6,java.util.HashMap,If you are using a HashMap to encapsulate a tree structure.
2945336,2,1,59,java.util.HashMap,"HashMap handles null keys specially (since it can't call .hashCode() on a null object), but null values aren't anything special, they're stored in the map like anything else"
30862155,2,0,0,java.util.HashMap,"The benefit of storing the value null against a key in a HashMap is the same as in databases, etc - you can record a distinction between having a value that is empty (e.g."
30863847,2,0,1,java.util.HashMap,One example of usage for null values is when using a HashMap as a cache for results of an expensive operation (such as a call to an external web service) which may return null.
2947842,2,0,3,java.util.HashMap,"Yes, use the strings as keys in a HashMap, and have the corresponding values be objects defining the action to take if the key has been matched, unless you only have one behavior, in which case you can simply use a HashSet, test if the string is in the set, and then take action accordingly."
2951431,1,0,0,java.util.HashMap,"My guess is that I would need to use a HashMap, that has 6 keys and increments the value by one everytime the respective keys number is drawn."
2951715,2,1,3,java.util.HashMap,"A HashMap, or any kind of map, is far too complicated here."
2954263,2,0,1,java.util.HashMap,"Looking at a typical implementation of HashMap shows this to be the case, such as the one at: http://www.docjar.com/html/api/java/util/HashMap.java.html That being said, it's not something your code should rely on."
2954175,2,0,2,java.util.HashMap,"Sure, a HashMap with certain contents may not iterate in the same way as a different one with equal contents, or in a different VM invocation, or running on different JDK versions, etc."
2953944,2,0,3,java.util.HashMap,"When using a HashMap, there's no guarantee that the iteration order will be the same on each iteration."
2953965,1,0,4,java.util.HashMap,"But they don't show relationships between classes, so that leaves us with a situation like this: We see that there are, say, lots of Strings and int arrays and HashMap entries, but we can't really tell which application or package they come from."
2973968,2,1,40,java.util.HashMap,"HashMap: ""makes no guarantees as to the order of the map"" TreeMap: ""is sorted according to the natural ordering of its keys, or by a Comparator""  i.e. it's a SortedMap   So it looks like LinkedHashMap is what you need in this case."
2973851,1,0,1,java.util.HashMap,HashMap and case construct.
2977150,2,0,1,java.util.HashMap,"look at: http://java.sun.com/j2se/1.3/docs/api/java/util/Properties.html If you do not need to save the content, stay with a ""normal"" Map Implementation like HashMap"
2977184,2,0,0,java.util.HashMap,HashMap
2982866,2,0,1,java.util.HashMap,"For a fast lookup, I would suggest that you use HashSet or HashMap for your inventory collection."
2983969,2,1,4,java.util.HashMap,I would start by building the newList as a HashMap or TreeMap instead of a List.
2987617,2,0,3,java.util.HashMap,Create and populate a HashMap that maps the strings to integer codes and then switch on the codes.
2987914,2,1,5,java.util.HashMap,"Use a Map (interface) and HashMap (class) instead; Declare your variable, parameter and return types, where applicable, as interfaces not concrete classes; Assuming you're using Java 5, use generic type arguments for more readable code."
2987942,2,0,2,java.util.HashMap,"is much more expressive than just HashMap Third: don't use new String(""UK""), ""UK"" will do fine, you're creating the same string twice."
13202444,2,0,3,java.util.HashMap,"To get a Type representing HashMap<String, String>, do this: code."
2996865,2,1,11,java.util.HashMap,"A Hashtable on the other hand is a general-purpose Map implementation (which is mostly replaced by the HashMap, however)."
2998235,2,0,1,java.util.HashMap,public class FooRegistry() {     Map foos = new HashMap... code. }
3549812,2,0,2,java.util.HashMap,"Map configOverrides = new HashMap(); configOverrides.put(""hibernate.hbm2ddl.auto"", ""create-drop""); EntityManagerFactory programmaticEmf = code."
2998956,2,0,0,java.util.HashMap,If you can make the algorithm work with a HashSet or HashMap then contains() will by O(1) and your algorithm will be much more efficient.
2998850,1,0,0,java.util.HashMap,Edit: The original developer just wrote a singleton holding a HashMap to be the cache in question.
3000755,1,0,0,java.util.HashMap,"I am supposed to create a few random balls on a canvas, those balls being stored within an ArrayList (I hope an ArrayList is suitable here: the alternative options to choose from were HashSet and HashMap)."
3003910,2,0,3,java.util.HashMap,I think a little wrapper class around a HashMap or BidiMap reading the properties file will achieve the almost the same benefits and the developers later on will not pull out their hairs why they get a gazillion compilation errors because of a small change in a property file.
3007004,2,1,3,java.util.HashMap,I would use just a HashMap like this: code.
3008334,2,0,1,java.util.HashMap,Otherwise you can keep a separate HashMap that maps every player to his branch/team.
3013756,2,0,0,java.util.HashMap,A Java Map (including HashMap) has a keySet() method to retieve the keys.
3013756,2,0,0,java.util.HashMap,"If you convert the List to a Set as well (by using the HashMap constructor that takes a list), you can use the Set's retainAll(...) method to obtain an intersection of values from the keys of the map and the list."
3014569,2,1,4,java.util.HashMap,"You are better off using HashMap if no concurrency is involved, or ConcurrentHashMap otherwise."
3019214,2,0,0,java.util.HashMap,To map the characters/object to numbers you should use a HashMap/HashTable.
3019376,1,0,19,java.util.HashMap,Shortcut for adding to List in a HashMap.
3020127,2,0,2,java.util.HashMap,"Not sure what you mean by ""creating json manually"", but you can use something like gson (http://code.google.com/p/google-gson/), and that would transform your HashMap, Array, String, etc, to a JSON value."
3020601,1,0,30,java.util.HashMap,How is the implementation of LinkedHashMap different from HashMap?
3020601,1,0,30,java.util.HashMap,If LinkedHashMap's time complexity is same as HashMap's complexity why do we need HashMap?
3020601,1,0,30,java.util.HashMap,What are all the extra overhead LinkedHashMap has when compared to HashMap in Java?
3020626,2,1,20,java.util.HashMap,Each entry in a normal HashMap just has the key and the value.
3020638,2,0,10,java.util.HashMap,"HashMap doesn't have these extra costs (runtime,space) and should prefered over LinkedHashMap when you don't care about insertion order."
3020655,2,0,4,java.util.HashMap,"Due to order maintenance of the LinkedHashMap, the data structure needs additional memory compared to HashMap."
3020655,2,0,4,java.util.HashMap,"In case insertion order is not a requirement, you should always go for the HashMap."
3020695,2,0,16,java.util.HashMap,If LinkedHashMap's time complexity is same as HashMap's complexity why do we need HashMap?
3020695,2,0,16,java.util.HashMap,"Having said that, the difference in performance between HashMap and LinkedHashMap operations in equivalent use-cases is relatively small."
14068632,2,0,3,java.util.HashMap,There is another major difference between HashMap and LinkedHashMap :Iteration is more efficient in case of LinkedHashMap.
14068632,2,0,3,java.util.HashMap,"But in case of HashMap; as there is no fixed order, so iteration over it requires time proportional to its capacity."
21501908,2,0,1,java.util.HashMap,"LinkedHashMap inherits HashMap, that means it uses existing implementation of HashMap to store key and values in a Node (Entry Object)."
21501908,2,0,1,java.util.HashMap,"Benefit is : Iteration order is guaranteed to be insertion order, which is not in HashMap."
30026979,2,0,1,java.util.HashMap,"HashMap does not maintains insertion order, hence does not maintains any doubly linked list."
3024739,1,0,9,java.util.HashMap,"a TreeMap with real time as keys, or a HashMap with a counter of mutation operations combined with one or more indexes stored in TreeMaps mapping real time / tick count / etc."
3025064,1,0,11,java.util.HashMap,HashMap / TreeMap / ArrayList / LinkedList / HashSet / TreeSet).
3026959,2,0,4,java.util.HashMap,"Edit: As the other editors pointed out, you're likely misusing HashMap."
12928538,2,0,5,java.util.HashMap,"I think the asker wants to know how to sort ArrayList of HashMap(String,String) because Android needs this structure for adding menuItems to ListView."
3027538,1,0,7,java.util.HashMap,"The only problem with that approach is that, if I want to move an entity to a different point on the screen, I'd have to search through the values of the HashMap for the entity I want to move (inefficient since I dont know its Point position ahead of time), and then once I've found it remove it from the HashMap, and re-insert it with the new position information."
3029373,1,0,2,java.util.HashMap,HashMap key problems.
3029373,1,0,2,java.util.HashMap,I'm profiling some old java code and it appears that my caching of values using a static HashMap and a access method does not work.
3029373,1,0,2,java.util.HashMap,"edit Ok, I see that in the real code the Key gets used in other methods and changes, which therefore get's reflected in the hashCode of the object in the HashMap."
3029386,2,1,4,java.util.HashMap,"In this case, if at all possible, you should declare cache as simply a Map instead of a HashMap."
3029390,2,0,0,java.util.HashMap,Is the Map implementation really a HashMap?
3032682,2,0,1,java.util.HashMap,"If you really want you could have a Controller superclass that has generic messages to send a message and pass in a HashMap, that gives you good separation of code but, adds complexity and removes type checking."
3032863,1,0,0,java.util.HashMap,Call HashMap from jsp EL?
3043433,2,0,1,java.util.HashMap,API references  java.util.Map  java.util.HashMap java.util.TreeMap  A NavigableMap extends SortedMap    Related questions  How does Java order items in a HashMap or a HashTable?
3044447,1,0,2,java.util.HashMap,I have a HashMap object that I am getting on a JSP page.
3044498,2,1,8,java.util.HashMap,"When iterating over a HashMap, each entry is a java.util.Map.Entry, to get the key (in this example the serial number) and value (the Gift_product object) out use the key and value properties like this: First set the HashSet as an attribute in your action class e.g."
3052913,1,0,1,java.util.HashMap,What the best way to convert from String to HashMap?
3052913,1,0,1,java.util.HashMap,I would like to serialize a Java HashMap to string representation.
3052913,1,0,1,java.util.HashMap,The HashMap will contains only primitive values like string and integer.
3052913,1,0,1,java.util.HashMap,How to restore back the HashMap?
3237583,2,0,3,java.util.HashMap,A classic problem is keeping something like a HashMap object around with a lot of values in it when you don't need it since every entry in the HashMap is chewing up memory.
3059270,2,0,2,java.util.HashMap,"Instead of a HashSet, use a HashMap."
3059270,2,0,2,java.util.HashMap,"A HashMap maps a value to another value (see http://www.geekinterview.com/question_details/47545 for an explanation) In your case, the key of the HashMap is your string (just as the key of the HashSet is the string)."
3059270,2,0,2,java.util.HashMap,The value in the HashMap is the number of times you encountered this string.
3059270,2,0,2,java.util.HashMap,"When you find a new string, add it to the HashMap, and set the value of the entry to zero."
3059270,2,0,2,java.util.HashMap,"When you encounter the same string later, increment the value in the HashMap."
3059275,2,0,1,java.util.HashMap,"If you went with a HashMap<String, Integer>, you could increment whenever you found that your key was != null."
3059298,2,1,2,java.util.HashMap,"Also if you care for the occurences of each word declare a HashMap<String, Integer> as in others posts is mentioned."
3068309,1,0,10,java.util.HashMap,A HashMap?
3068353,2,0,7,java.util.HashMap,"In single-threaded context, HashMap is probably going to be OK."
3070375,2,1,10,java.util.HashMap,Then add new ForeignWrapper(foreign) to the standard HashSet / HashMap.
3069886,2,0,0,java.util.HashMap,If you want to put objects in a hash-based collection (such as HashMap or HashSet) you must also override hashCode() and you must make sure that hashCode() and equals() are implemented the right way (see the documentation of those methods in class Object for details on how to do that).
3070147,2,0,0,java.util.HashMap,Using HashMap/HashSet instead seems to be a good suggestion.
3069904,2,0,10,java.util.HashMap,Just use a HashMap/Set.
3069905,2,0,6,java.util.HashMap,"In that case, maybe you can use HashMap and HashSet instead?"
3069918,2,0,1,java.util.HashMap,"If you don't need sorting, then this is wasteful, as you could be using a hash-based collection (HashMap, HashSet) which would give you O(1) insertion time."
3069943,2,0,1,java.util.HashMap,"If you need to override hashCode but can't, I think you're looking at extending HashMap or writing your own."
3070460,2,0,1,java.util.HashMap,If memory is not a big problem subclass HashMap and HashSet to take an Equality class code.
3071514,2,0,3,java.util.HashMap,"You should use a HashMap, the you will have O(1)- Expected insertion time,  just do a mapping from integers to whatever."
3073217,1,0,2,java.util.HashMap,How can I get a HashMap to a List?
3074154,1,0,2,java.util.HashMap,Sorting a HashMap based on Value then Key?
3074154,1,0,2,java.util.HashMap,I have a HashMap of the type: code.
3074154,1,0,2,java.util.HashMap,The HashMap contains a list of Strings and the Integer is a counter for the number of times that String has been found.
3074154,1,0,2,java.util.HashMap,"What I would like to be able to do is sort the HashMap based on the Integers, then on the alphabetical order of the Strings."
3074154,1,0,2,java.util.HashMap,"Which doesn't sort the values alphabetically, also it accesses the HashMap max*h(size) times."
3077199,2,0,1,java.util.HashMap,"If you do, merge these duplicate objects using a simple HashMap: code."
3080935,2,0,1,java.util.HashMap,"Now, I second one of the comment to your question and I would consider using ""moderner"" data structure like ArrayList and HashMap."
3088001,1,0,17,java.util.HashMap,"I went with not exposing the id, because the ""Person"" (as you might have realized, my real domain does not have anything to do with people and clubs...) instances are easily available, but for now it is internally stored in a HashMap hashed on the id - but at least I am exposing it correctly in the interface."
3089197,1,0,5,java.util.HashMap,"So far what I've been able to learn is the following:  ThreadLocal class allows to hold 1 instance of an object at the thread level The instance is created by overriding initialValue() The instance is actually stored in the each thread's HashMap  A common sense usage example can be found here  All seemed fine, until I tried to run the example from the javadoc, the code is provided as following: code."
3092710,1,0,11,java.util.HashMap,"I want to know whether a particular key is present in a HashMap, so i am using containsKey(key) method."
3094201,2,0,1,java.util.HashMap,"HashMap to get your own class with these, if you want this automatically done."
3092722,2,1,19,java.util.HashMap,HashMap you'll lose functionality?
3102858,2,0,5,java.util.HashMap,"Since all of these answers make me barf, can I just add the suggestion that you either  Create a data type to express your data while encapsulating the details of the structure, or at least Create a key type that wraps an int[] (but overrides equals and hashCode properly) and use a HashMap instead?"
3109990,2,0,0,java.util.HashMap,Iterator myVeryOwnIterator = HashMap.keySet().iterator(); while(myVeryOwnIterator.hasNext()) {     System.out.println(myVeryOwnIterator.next()); }
3123002,2,0,1,java.util.HashMap,"A java.util.LinkedHashMap will ensure iteration in the order that items were added, try using that class instead of just a plain HashMap, which does not maintain iteration order."
3123013,2,1,2,java.util.HashMap,"To need to query for a list, not for a Map, because the Java HashMap (I suppose this is what the query will return) doesn't have support for sorting."
3124283,2,0,0,java.util.HashMap,It's a good practice to change hashCode whenever you change equals so HashMap works efficiently with your object.
4374295,2,0,1,java.util.HashMap,One thing you should do is to check out matching stack trace to see who is calling it; changes are it is indeed HashMap.
3124796,2,0,0,java.util.HashMap,"A HashSet is implemented as a HashMap that maps the key to itself, so switching to a HashSet won't make much difference, performance-wise."
3124683,2,1,5,java.util.HashMap,Most likely you're using very intensively a Map such as a HashMap.
3124683,2,1,5,java.util.HashMap,HashMap used the hashCode to distribute the objects.
3127189,1,0,6,java.util.HashMap,Good performance (can you beat HashMap?
3127203,2,0,1,java.util.HashMap,The obvious answer is to use a HashMap (or a LinkedHashMap if you care for the order of fields).
7694609,2,0,0,java.util.HashMap,"Like, how to create a decorator that turns a HashMap into a LinkedHaskMap?"
3141061,2,1,4,java.util.HashMap,"If the logic stores items in a HashMap as a cache, consider using SoftReferences, which will not be considered as references in garbage collection."
3157558,1,0,7,java.util.HashMap,Loop Java HashMap like Python Dictionary?
3157593,2,0,6,java.util.HashMap,The HashMap.entrySet() will return beans of key value pairs similar to the dictionary.iteritems().
3162687,2,0,5,java.util.HashMap,"From the Javadocs for HashMap.put():  Returns:       previous value associated with specified key, or null if there was no   mapping for key."
3178393,2,0,1,java.util.HashMap,"Read in the input file, and add each line to a java.util.HashMap<String, Integer>."
3188264,2,0,1,java.util.HashMap,"First, instead of the cascaded if-else, create a HashMap and put each combination of condition and path."
3203561,1,0,0,java.util.HashMap,"And for some reasons, I must load the files at the launch of the project, and if there is an action on these files, I must reload them (in a HashMap) For the moment, I load them just at the moment of the use, but I want to do this at the load of application, and let the JNotify working all the time."
3204066,1,0,2,java.util.HashMap,HashMap.containsKey(Object key) can't find a key.
3204066,1,0,2,java.util.HashMap,"""keyValuePairs""= HashMap  (id=830062742672)  { LocationId=1,  Default=true,  Editable=true,  Name=Til afskrivning, Id=1, Transcribed=false}  ""keyValuePairs.keySet()""= HashMap$1  (id=830062763448)   [ LocationId,  Default,  Editable,  Name, Id,  Transcribed] ""keyValuePairs.containsKey(""Name"")""= false  Could anybody please explain me what's wrong with it?"
3204663,2,0,2,java.util.HashMap,"If you really are going to check to see if a value already exists a lot, you're probably better off with a structure that makes this faster - HashSet, TreeSet, HashMap, etc..."
3210420,2,0,0,java.util.HashMap,"store your strings in hashtable (HashMap of (String and Integer)) , then iterator over the text and increase the integer value for the matching word in hashtable ."
3218376,2,0,6,java.util.HashMap,The type parameters have specific meanings for the implementation - how would the HashMap class know what you wanted to get out if you called map.get(name)?
3222512,1,0,24,java.util.HashMap,I am writing an application which will return a HashMap to user.
3223075,2,0,2,java.util.HashMap,I would not override the methods to throw an AssertionError as that means you can never compare the objects for equality or use them in a HashMap.
3226463,2,0,6,java.util.HashMap,"For example, if your profiling says that such and such a HashMap<Integer,Integer> is a CPU bottleneck or a memory hog, then it is a better idea to look for an existing specialized Map or Map-like library class than to try and implement the map yourself using arrays."
3230903,2,0,3,java.util.HashMap,"There's a reason with Trove' TIntIntHashMap runs around circles an HashMap<Integer,Integer>."
3230903,2,0,3,java.util.HashMap,"A TIntIntHashMap OWNS the default HashMap<Integer,Integer> for a reason: for the same reason my apps are now much faster than before."
3228340,2,0,0,java.util.HashMap,"As alzoid mentioned, a HashMap or HashTable is the perfect data structure for this task."
3235351,2,0,1,java.util.HashMap,"Just as an aside, you're using Vectors in that HashMap."
3235414,2,0,3,java.util.HashMap,The same is true for HashMap.
3240472,1,0,10,java.util.HashMap,"Now I'm reviewing code that simply puts listeners into a HashMap (could be any collection), the listener interface does not extend EventListener, and the fire method looks like this: code."
3245373,2,0,2,java.util.HashMap,"For example, a HashMap."
3245735,2,0,11,java.util.HashMap,"Something along these lines:  Create a HashMap<String, Integer> For each line in your input:  Split it into the word and number, and parse the number part (as Matthew comments below, using Scanner can help with this part) See if there's anything in your map for that word  If there isn't, use map.put(word, value) If there is, compare the current value with the new one, and replace the current value if the new one is higher   When you've read everything in the file, your map will contain (word / maximum value) pairs."
3250786,2,0,5,java.util.HashMap,Map interface (as well as HashMap class) expects only 2 generic type arguments: one for the key type and one for the value type.
3250893,2,1,19,java.util.HashMap,"Java generics Pair<String, String> stored in HashMap not retrieving key->value properly  A Java collection of value pairs?"
3254072,1,0,4,java.util.HashMap,Iterating over a HashMap of HashMaps in Java (or Scala).
3254072,1,0,4,java.util.HashMap,"Now, I have a HashMap mapping Strings to HashMaps, which map Objects to Foo."
3254072,1,0,4,java.util.HashMap,"A similar code works just fine, but the Size of the HashMap is too big to hold two of them in memory."
3254478,2,0,4,java.util.HashMap,"BTW using a Map < String,HashMap < Object,Array < Int>>> might not be really convenient at the end, if I were you I would consider introducing some classes that would hide the complexity of this construct."
3255194,1,0,0,java.util.HashMap,What else can I use instead of a HashMap?
3255249,2,0,2,java.util.HashMap,The HashMap ist not at all the problem here.
3255479,2,0,6,java.util.HashMap,(NOTE: You should use HashMap instead of the legacy collection class Hashtable).
3258021,2,0,0,java.util.HashMap,"If the above is what your instructor is expecting, I would suggest using a HashMap which has no problem using a Set as a key type: code."
3257563,2,1,6,java.util.HashMap,java.util.HashMap in 1.5 can still be accessed by code written in 1.4 (and of course this advantage extends to your own classes too).
3257581,2,0,0,java.util.HashMap,"For example, since HashMap is now declared as HashMap<K, V>, what would you do with all of that code that declares an (unparameterized) hashmap?"
3258592,1,0,1,java.util.HashMap,I am getting error message  org.springframework.beans.NotReadablePropertyException:   Invalid property 'produts[0]' of   bean class [java.util.HashMap]: Bean   property 'produts[0]' is not   readable or has an invalid getter   method: Does the return type of the   getter match the parameter type of the   setter?
3262504,1,0,1,java.util.HashMap,"Coherence cache | ConcurrentHashMap in, HashMap out."
3262504,1,0,1,java.util.HashMap,"I just started working with Oracle's Coherence cache and I noticed this: If I put in a ConcurrentHashMap object in the cache, when I retreive it, I could see that it is converted to a normal HashMap."
3684486,2,0,1,java.util.HashMap,This is why you get a HashMap back.
3262994,1,0,0,java.util.HashMap,"Sure the Java SE HashMap has an ""expensive"" hashing function and its variable size could potentially cause out of memory errors but what about a constant size Map with a simple hashing relative to its constant size?"
3263642,1,0,1,java.util.HashMap,JPS useBean with HashMap.
3263642,1,0,1,java.util.HashMap,And both the attributes fail for a HashMap.
3267612,2,1,54,java.util.HashMap,"look at set (Hashset, enumset) and hash (HashMap,linkedhash...,idnetityhash..) based implementations."
3273651,2,1,2,java.util.HashMap,"If you're using a HashSet<T> for aSet's implementation, HashSet uses a HashMap<T,HashSet<T>> behind the scenes anyway (it uses references to itself as the values - not sure if there's a reason for this other than choice - with the set's ""values"" as keys) and performs the bulk of its operations just by reinterpreting the return values of the Map functions."
3270428,2,1,10,java.util.HashMap,What if it it is a HashMap   object?
3270428,2,1,10,java.util.HashMap,"Then, the first   thread calls ""mMyMap = new HashMap();""   The second thread calls ""return   mMyMap;"" Can the second thread get   null, or can it only get original or   new HashMap object?"
3271320,1,0,5,java.util.HashMap,"The Private instance I have is private final Map<Character, SortedSet<String>> thesaurus = new HashMap <Character, SortedSet<String>>(); but how would create an instance variable in the constructor that would reference the private variable thesaurus upon the constructors creation."
3271320,1,0,5,java.util.HashMap,"for example  `public class Book{ private final Map<Character, SortedSet<String>> thesaurus = new HashMap <Character, SortedSet<String>>();  public Book(){ super(); What do i put here as an empty instance variable that implements a map and how do i assign it to thesaurus? }"
3271374,2,0,4,java.util.HashMap,"Then you've declared thesaurus to be an instance variable of class Book, and you also initialized its value to be a new HashMap."
3275757,1,0,1,java.util.HashMap,"PS: I'm just thinking, perhaps I could throw all the variables into a HashMap."
3275757,1,0,1,java.util.HashMap,"That way I could access them by using .get(varname), and I would only have to pass one HashMap variable into the subclass."
3282361,1,0,3,java.util.HashMap,I'm using a HashMap and the method show below to track change listeners for class types.
3284850,2,0,4,java.util.HashMap,have all the fields stored in a HashMap and indexed by Strings.
3289598,2,0,1,java.util.HashMap,I'm guessing the scheme registry is or works pretty much like a HashMap.
3293493,1,0,6,java.util.HashMap,I am using Jersey and JAXB to build a simple RESTful webservice I have a HashMap of 'String' to 'Integer': code.
3307445,1,0,4,java.util.HashMap,I want to iterate a HashMap in javascript using jstl.
3308131,2,1,13,java.util.HashMap,"""to iterate a HashMap in javascript using jstl"" - Not possible JSTL is executed in server side by your servlet container for which Javascript is just a text which would be skipped whereas JavaScript is executed in client side where JSTL is unknown."
23522453,2,0,0,java.util.HashMap,"If you are looking to also retrieve objects easily without using an enumeration or iterator, you may consider using both an ArrayList<String> and HashMap<String, Integer>."
3311110,1,0,1,java.util.HashMap,convert HashMap to JavaBean instance given javabean class.
3311110,1,0,1,java.util.HashMap,is there a utility out there for creating a bean (which has simple String attributes whose name match with HashMap keys ) given bean class as input along with properly set hashmap?
3312757,1,0,5,java.util.HashMap,"I have a function which returns an int value for a given key (from a HashMap<String, Integer>)."
3312849,2,0,0,java.util.HashMap,"I think you should combine options #1 and #3, since that's consistent with the behavior of the underlying HashMap."
3312849,2,0,0,java.util.HashMap,"From HashMap's get method documentation:  Returns the value to which the specified key is mapped in this identity hash map, or null if the map contains no mapping for this key."
3316630,1,0,3,java.util.HashMap,"Internally the class maintains a hashmap defined as HashMap<String, HashMap<String, String>> I store data in the map making the url the key (i keep these unique) and the hasmap value stores the corresponding data fields for that url such as title,value etc I occasionally serialize the internal objects used but the spider is multi threaded and as soon as i have say 5 threads crawling the memory requirements go up exponentially."
3324756,2,1,7,java.util.HashMap,"A HashMap/HashSet would first take the hash code to quickly narrow down the set of possible matches to only those entries which have the same hash code, and then call equals() on each one in turn until it found a match or determined that none of the entries was equal to the given key."
3327743,2,0,1,java.util.HashMap,and index the fields on which you want to search using a HashMap: code.
3329107,2,0,2,java.util.HashMap,"Not strange that your HashMap works slow, it has a linear performance."
23281829,2,0,0,java.util.HashMap,"Turns out that a HashSet is practically a HashMap, and (counterintuitively) takes up more more memory despite holding only values instead of key-value pairs."
3329212,2,0,0,java.util.HashMap,"From the JavaDoc (of HashMap - the collection that backs HashSet):  As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs."
3329212,2,0,0,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
7032835,2,0,0,java.util.HashMap,"Also If you have enough memory you can use some sorted collection like TreeMap as index map, or HashMap  to search user by name (separate Map per field)."
3333189,2,0,0,java.util.HashMap,"Use a HashMap<Location, DatabaseConnection> ?"
3339811,2,0,7,java.util.HashMap,"If your Keys (metrics) are unchanging, you could even just use a standard HashMap (they are threadsafe if readonly, but you'd be well advised to make this explicit with an ImmutableMap from Google Collections or Collections.unmodifiableMap, etc.)."
3340099,2,1,1,java.util.HashMap,As you have invited I am going to recommend HashMap :) The reason is because HashMap provides effectively constant time lookups for a single key.
3340099,2,1,1,java.util.HashMap,"If  you can make a Map<Id, Map<InList, Id>> oldIdToNewIdMap = new HashMap<InList, Map<Id,Id>>(), then you can lookup as Id newId = oldIdToNewIdMap.get(inList).get(oldId)."
3340264,2,0,0,java.util.HashMap,Or do you plan to use a HashMap and store the column values there?
29372109,2,0,1,java.util.HashMap,I would put the secondSet in a HashMap before the comparison.
3341678,1,0,3,java.util.HashMap,HashMap Implementation question.
3341678,1,0,3,java.util.HashMap,"HashMap contains a hash-table which is an array that hold the values as I understood the hash-table has an initial size, yet it can get increased after many invocation of put() (depends on the load-factor) anyhow I wonder how can you find a value after you change the size of the hash-table because I know that in order to calculate the has code of specific key you can use the size of the table for instance key*prime%size so how does it work?"
3341807,2,1,3,java.util.HashMap,"However, in the Java 1.4 HashMap, the size is always a power of two!"
3344763,2,0,1,java.util.HashMap,"If that's not important, use a HashMap."
3347042,2,0,1,java.util.HashMap,"In general, I don't think it's a problem with HashMap, as you said that the data was read correctly."
3347504,1,0,10,java.util.HashMap,How to read and write a HashMap to a file?
3347504,1,0,10,java.util.HashMap,I have the following HashMap:      code.
3347504,1,0,10,java.util.HashMap,Now I want to read this file back to a HashMap where the Object is an ArrayList.
3347504,1,0,10,java.util.HashMap,//How can I read the same object back into a HashMap ?
3347504,1,0,10,java.util.HashMap,OK So based on Cem's note: This is what seems to be the correct explanation: ObjectOutputStream serializes the objects (HashMap in this case) in whatever format that ObjectInputStream will understand to deserialize and does so generically for any Serializable object.
3347504,1,0,10,java.util.HashMap,In my case: I simply iterate through each of those elements in the HashMap when I read the Object back from the file and get the data and do whatever I want with it.
3347993,2,0,1,java.util.HashMap,"You should really define the object as a HashMap<String, Serializable> (or if you prefer, simpy Map<String, Serializable>)."
3348053,2,0,1,java.util.HashMap,In HashMap: code.
3348053,2,0,1,java.util.HashMap,the default HashMap will start off with 16 nulls.
3350384,2,0,8,java.util.HashMap,You appear to be confusing the internal resprentation of a HashMap with how the HashMap behaves.
3353291,2,0,0,java.util.HashMap,"It creates a new HashMap for every requests in Tomcat, code."
3353526,1,0,4,java.util.HashMap,IBatis + Java: Retrieving HashMap.
3353526,1,0,4,java.util.HashMap,How can I retrieve a HashMap using IBatis.
3353653,2,1,4,java.util.HashMap,"See this Question: http://stackoverflow.com/questions/3122979/how-to-get-a-sorted-result-in-ibatis/3123013#3123013 The user there gets a HashMap but needs a list, hence my answer there."
3353653,2,1,4,java.util.HashMap,So you can use the example in that Question description to retrieve a HashMap as he did.
3353635,1,0,4,java.util.HashMap,Eclipse Warning with Java HashMap.
3353635,1,0,4,java.util.HashMap,"Eclipse is saying ""HashMap is a raw type"" When I use the following code   code."
3353650,2,0,16,java.util.HashMap,Eclipse will give you that warning when you use a non-Generic HashMap using Java 5 or newer.
3353678,2,0,0,java.util.HashMap,"For instance, the following is a declaration that instantiates a HashMap with String type key and Integer type value."
3363594,2,1,2,java.util.HashMap,"Since an @Asynchronous method cannot access the Session context, and therefore also no Session Beans (at least i dont know how, i always got ConcurrentModificationErrors or similar ones) i created a Singleton ProgressEJB, which contains a HashMap: code."
3357130,1,0,3,java.util.HashMap,Can I constrain a HashMap by the amount of memory it takes up?
3357278,1,0,3,java.util.HashMap,Strange Java HashMap behavior - can't find matching object.
3357278,1,0,3,java.util.HashMap,"I've been encountering some strange behavior when trying to find a key inside a java.util.HashMap, and I guess I'm missing something."
3364307,2,0,1,java.util.HashMap,Are you sure you're using a java.util.HashMap and not a subclass of some sort?
3364307,2,0,1,java.util.HashMap,Here's the source code for java.util.HashMap.getEntry(Object key) from Sun's 1.6.0_20 JVM: code.
3359874,2,0,0,java.util.HashMap,"Even though you should use Preferences API or Properties, here is a hack that might also work:  Create a HashMap<String, Object> and use XMLEncoder/XMLDecoder for saving/loading."
9716136,2,0,0,java.util.HashMap,"I assume Eclipse and the Maven surefire plugin were using different JREs which had different implementations of HashMap ordering or something, which caused the tests run through Eclipse to pass and the tests run through surefire to fail (assertEquals failed)."
3369003,2,0,0,java.util.HashMap,"Hashtable is probably not the best class for you to use, try HashMap."
3369003,2,0,0,java.util.HashMap,You should really be programming to an interface: Map map = new HashMap(); (or Hashtable if you prefer.
3377334,2,1,2,java.util.HashMap,"Look at code structure:  get plugin jdepend investigate your package structure  Code against interfaces (Map, List, Set) instead of implementation classes (HashMap, ArrayList, TreeSet) Complete your Javadoc and make check it is up to date after all refactorings."
3377556,1,0,0,java.util.HashMap,or same with Map interface and HashMap class rather than: code.
3378512,2,0,1,java.util.HashMap,"If you actually want to have ""Couples"" or Pairs, have a look at HashMap."
3379992,2,1,1,java.util.HashMap,Now I need only one HashMap of these ResultFutures: code.
3380318,2,0,1,java.util.HashMap,"HashSets do not guarantee iteration order:  This class implements the Set   interface, backed by a hash table   (actually a HashMap instance)."
3380398,2,0,1,java.util.HashMap,"So, it would appear a HashMap<String, Animal> would be the best option, as it is fast in searching."
3381655,2,0,0,java.util.HashMap,"Your deleteDuplicateLines() method won't do anything, as there will never be any duplicates in the HashMap."
3381618,2,0,0,java.util.HashMap,"Perhaps a HashMap of ArrayList<String>,  keyed on the starting letter of the word would be a good starting choice."
3386823,1,0,4,java.util.HashMap,"select methods return different results:  ArrayCollection<HashMap<String, Object>> select() Object selectValue() HashMap<String, Object> selectRow() ArrayCollection<Object> selectColumn()  The last problem is with compiler warnings - ""warning: [unchecked] unchecked cast""."
3390629,2,0,0,java.util.HashMap,"Your tabular data, i guess, should be in the form of some function, for which f(x) = y, if that's the case I think a HashMap would be ok. As your question about symmetry, I think you could implement some class   code."
3405933,2,0,0,java.util.HashMap,Similar kind of problem was answered in another forumn: http://forums.sun.com/thread.jspa?threadID=5377524 To make code to work Create HashMap as: code.
3406971,2,1,9,java.util.HashMap,A HashMap of WeakReferences to Objects You can also use a HashMap of WeakReferences to Objects with Long keys.
3408291,1,0,1,java.util.HashMap,HashMap implementation of DataSource interface : nextRow() method?
3408291,1,0,1,java.util.HashMap,Providing the nextRow() method for the HashMap implementation seems somewhat messy - I guess I need to provide an iterator on the collection view of the data.
3408291,1,0,1,java.util.HashMap,"To provide a few more details:  I am thinking the newRow() method will return HashMap<String, String> HashMap implementation of the data store will be HashMap<String, HashMap<String, String>>  Any thoughts and comments are much appreicated!"
6687623,2,0,0,java.util.HashMap,"On a side note, a HashMap for each data row is a lot of overhead."
3408800,1,0,3,java.util.HashMap,Removing from a HashMap the only object reference won't be enough to remove the object?
3413555,1,0,1,java.util.HashMap,"I want to fill an ArrayList (Appointment_List) with HashMap's (Appointment), but each time I need to change the value of specified elements(Appt_Start_Time and endtime)."
3418417,2,0,1,java.util.HashMap,Appointment is THE SAME HashMap instance every iteration.
3418417,2,0,1,java.util.HashMap,You should do something like that: Appointment = new HashMap(); // ... do something with appointment ... Appointment_List.add(Appointment) This way you'll put a fresh new map to the list each iteration.
3538281,2,0,3,java.util.HashMap,HashMap is default choice.
3425929,1,0,2,java.util.HashMap,Performance of extra string comparisons vs HashMap lookups.
3425929,1,0,2,java.util.HashMap,This is essentially a question of string comparison vs. HashMap lookup performance.
3429213,2,0,2,java.util.HashMap,1) Remember that a successful retrieval of an item from a HashMap requires a string compare to confirm that you really have found the correct item.
3427947,1,0,4,java.util.HashMap,"For each of these, I make a StarDatabase class (a HashMap of Stars) and a Main class."
3429420,1,0,0,java.util.HashMap,why java.util.HashMap.getEntry can block my program?
3429420,1,0,0,java.util.HashMap,"I had waited at least one hour, but the thread didn't unlock , my question is why the thread'state is RUNNING, and stop at java.util.HashMap.getEntry(HashMap.java:347) ?"
3429420,1,0,0,java.util.HashMap,"my jdk version : java version ""1.6.0_21"" Java(TM) SE Runtime Environment (build 1.6.0_21-b06) Java HotSpot(TM) 64-Bit Server VM (build 17.0-b16, mixed mode) The thread info: ""PandoraScheduleTrigger-thread-5"" prio=10 tid=0x00000000443b0800 nid=0x5804 runnable [0x0000000043722000]    java.lang.Thread.State: RUNNABLE     at java.util.HashMap.getEntry(HashMap.java:347)     at java.util.HashMap.containsKey(HashMap.java:335)     at com.youlongqingfeng.pandora.context.ArmiesContext._getArmy(ArmiesContext.java:239)     at com.youlongqingfeng.pandora.context.ArmiesContext.getArmiesByCityId(ArmiesContext.java:169)     at com.youlongqingfeng.pandora.model.City.getTotalApplianceMap(City.java:4519)     at com.youlongqingfeng.pandora.model.City.calculateMemoryResource(City.java:4636)     at com.youlongqingfeng.pandora.model.City.buildTaskFinish(City.java:1089)     at com.youlongqingfeng.pandora.map.unit.ZhouMapResourceUnit.buildTaskFinish(ZhouMapResourceUnit.java:1618)     - locked <0x0000000603f02ae0> (a com.youlongqingfeng.pandora.map.unit.ZhouMapResourceUnit)     at com.youlongqingfeng.pandora.trigger.BuildTrigger.innerRun(BuildTrigger.java:39)     at com.youlongqingfeng.gameserver.utils.threadpool.CancelTrigger.run(CancelTrigger.java:34) Blocked thread dump: ""PandoraScheduleTrigger-thread-3"" prio=10 tid=0x0000000044c7c000 nid=0x5802 waiting for monitor entry [0x0000000043520000]    java.lang.Thread.State: BLOCKED (on object monitor)     at com.youlongqingfeng.pandora.map.unit.ZhouMapResourceUnit.armiesGroupReturnBack(ZhouMapResourceUnit.java:2279)     - waiting to lock <0x0000000603f02ae0> (a com.youlongqingfeng.pandora.map.unit.ZhouMapResourceUnit)     at com.youlongqingfeng.pandora.trigger.ArmyGroupArrivedTrigger.innerRun(ArmyGroupArrivedTrigger.java:53)     at com.youlongqingfeng.gameserver.utils.threadpool.CancelTrigger.run(CancelTrigger.java:34)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)     at java.util.concurrent.FutureTask.run(FutureTask.java:138)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:207)     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)     at java.lang.Thread.run(Thread.java:619) thank you."
3432817,2,0,3,java.util.HashMap,"Actually, you could have used ConcurrentHashMap instead of HashMap."
3432817,2,0,3,java.util.HashMap,HashMap will run into block state when different threads access the map in a loop or something.
3429759,2,0,0,java.util.HashMap,Use Hashtable if there are multiple threads and HashMap if there is only a single thread.
3429617,2,0,3,java.util.HashMap,"Some things to consider:  you are using HashMap, which is not synchronized itself."
3438864,1,0,9,java.util.HashMap,"why the redundant ""implements Map<K,V>"" (since HashMap already implements Map) ?"
3438931,2,0,0,java.util.HashMap,This way it wouldn't inherit all the implementations from HashMap.
3438936,2,1,12,java.util.HashMap,"I suppose it's a way of saying  No matter what interfaces HashMap implements (now or in the future), this class should implement the Map interface."
3438936,2,1,12,java.util.HashMap,"If someone responsible for the HashMap decides that it should no longer implement the Map interface, the compiler will warn the maintainer of LinkedHashMap that it no longer implements the Map interface as he intended."
3438936,2,1,12,java.util.HashMap,"Of course it's silly in this particular case (HashMap will obviously always be a Map), but similar situations may benefit from (and have given rise to) such convention."
3438963,2,0,0,java.util.HashMap,"It makes the intent clearer, so that it is obvious that this is intended to be a Map implementation, with specific behaviour, which incidentally happens to be created by extending HashMap, thereby being able to be used in some places, in place of a HashMap."
3439524,1,0,3,java.util.HashMap,I want to use java.util.HashMap as variable in JasperReport.
3439524,1,0,3,java.util.HashMap,I want  to use java.util.HashMap as variable in JasperReport.
3439524,1,0,3,java.util.HashMap,I want to save group names of my report in a HashMap.
3439524,1,0,3,java.util.HashMap,"I have tired and declared a variable of class java.util.HashMap and its expression field is  $V{variable1}.put($F{GROUPCOLUMNVALUE}, $F{GROUPCOLUMNVALUE}) but it gives does not works and gives null when I print it on report's group footer I am using iReport 3.7.3"
5260058,2,1,1,java.util.HashMap,You wrote that Variable expression: new java.util.HashMap() I think it might be initial value expression instead of variable expression
3443096,2,0,0,java.util.HashMap,I set the following properties on the variable:  Variable class: java.util.HashMap() Reset type: None  Calculation: System Variable expression: new java.util.HashMap()
3440096,1,0,2,java.util.HashMap,I'm trying to access elements in a HashMap.
3440096,1,0,2,java.util.HashMap,The keys of this HashMap are defined by an Enum.
3442870,1,0,2,java.util.HashMap,Getting URL value from HashMap in a JSP page (Using Struts2).
3442870,1,0,2,java.util.HashMap,"I am trying to get my page to link to a certain URL that is stored in a HashMap (the key is some name, and the value is the URL I want to link to)."
3442870,1,0,2,java.util.HashMap,"Note: productDocumentationMap is a HashMap of <String, String>, and dependenciesList is an ArrayList<String>."
3444529,2,0,0,java.util.HashMap,Using heavyweight things like Java's default HashMap and String objects is not one of them.
3444529,2,0,0,java.util.HashMap,"But the map resizing when you put millions of String in it ain't O(1) ;) Food for thought: determining if a word is present using, say, a Trie, will probably be faster than simply computing a String's hashcode (I'm not saying a trie is what you need is: all I'm saying is: there's more than ""let's use a HashMap, it's O(1) so you can't beat that""-meets-the-eye."
3444491,1,0,7,java.util.HashMap,How can I extract ArrayList from HashMap and loop through it in Java?
3444491,1,0,7,java.util.HashMap,I have set up a HashMap like so: code.
3444491,1,0,7,java.util.HashMap,"So now, I want to look through all of the entries in the HashMap and see if (for each 'sAccuser'), the list 'saAccused' contains a certain name."
3444491,1,0,7,java.util.HashMap,"... however I'm not sure how the Set and Iterator classes work :/ The problem is that I don't have the ""values""... the names... the 'sAccuser's... for the HashMap available."
3444491,1,0,7,java.util.HashMap,"In a nutshell, I want to iterate through the HashMap and check if a specific name is stored in any of the lists."
3444516,2,1,3,java.util.HashMap,"In a nutshell, I want to iterate through the HashMap and check if a specific name is stored in any of the lists."
3446072,1,0,1,java.util.HashMap,So I moved to a HashMap and performance was excellent.
3448849,1,0,0,java.util.HashMap,"I am trying to write an Object of kind ""HashMap"" to a file & recover it when my program run again."
3451661,1,0,0,java.util.HashMap,I saw also a HashMap implementation of something similar: code.
3453515,2,0,8,java.util.HashMap,"Internally, jsoup uses standard Java libraries (URL connection, HashMap etc) which are going to be reasonably well Android optimised."
3455457,1,0,8,java.util.HashMap,Java HashMap detect collision.
15603253,2,0,1,java.util.HashMap,"The other two answers I see a good IMO but I just wanted to share that the best way to test how well your hashCode() behaves in a HashMap is to actually generate a big number of objects from your class, put them in the particular HashMap implementation as the key and test CPU and memory load."
15603253,2,0,1,java.util.HashMap,So I decided to fill in a HashMap with random objects of that type and test number of collisions.
15603253,2,0,1,java.util.HashMap,So I wrote in groovy the class you see at the bottom extending openjdk implementation of HashMap to count number of collisions into the HashMap (see countCollidingEntries()).
15603253,2,0,1,java.util.HashMap,And size of this array depends on initialCapacity and loadFactor of the HashMap (it can increase when put() more data).
15603253,2,0,1,java.util.HashMap,The fact that HashMap is slower with bad hashCode() method means that by just benchmarking insertion and retrieval of data from the Map you effectively know which hashCode() implementation is better.
3456226,2,1,12,java.util.HashMap,"From this list, HashMap's smearing function is the equivalent of: code."
3456226,2,1,12,java.util.HashMap,"So for a collision to occur in a HashMap, the necessary and sufficient condition is the following : scramble(k1.hashCode()) == scramble(k2.hashCode())."
3456226,2,1,12,java.util.HashMap,"(For example, HashMap's smearing function was put into place because people were using HashMap with objects with the worst type of hashCode() for the old, power-of-two-table implementation of HashMap without smearing - objects that differ a little, or not at all, in their low-order bits which were used to select a bucket - e.g."
3456226,2,1,12,java.util.HashMap,"As you can see, the HashMap's smearing function tries its best to have all bits affect the low-order bits)."
3456491,1,0,9,java.util.HashMap,"HashMap for classes, not objects."
3456491,1,0,9,java.util.HashMap,Please don't refer to the design but to my question on a HashMap's usage ;-) I am aware of the class HashMap but only used it to assign objects to other objects.
3456518,2,0,23,java.util.HashMap,"Unless you have more specific bounds, the unbounded wildcard <?> can be used (see Effective Java 2nd Edition, Item 23: Don't use raw types in new code) Note that the interface Map is used here instead of a specific implementation HashMap (see Effective Java 2nd Edition, Item 52: Refer to objects by their interfaces)."
3457824,1,0,3,java.util.HashMap,Entries in a HashMap being overwritten by completely different keys?
3457824,1,0,3,java.util.HashMap,I have a Java HashMap used to store some basic string values: code.
3457971,2,0,4,java.util.HashMap,The HashMap uses a key's hashCode() method to index the Map's entries.
3459014,1,0,0,java.util.HashMap,(but I rather doubt that) I also tried replace EnumMap by HashMap but this didn't solve the problem either.
3459359,2,0,4,java.util.HashMap,"If you don't have the Class available, you can always use HashMap at some penalty."
3462238,1,0,7,java.util.HashMap,"Some map implementations,   like the TreeMap class, make specific   guarantees as to their order; others,   like the HashMap  class, do not."
3462244,2,1,13,java.util.HashMap,java.util.LinkedHashMap:  This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
3473383,2,0,1,java.util.HashMap,"If that is your plan then maybe a NoSQL Solution would work also, it is just a persistent HashMap that supports record locking as well as other features."
3471759,1,0,2,java.util.HashMap,"Is it really that bad to ignore the type parameters in ""new HashMap()""?"
3476582,2,0,0,java.util.HashMap,"I would change HashMap myHashMap = new HashMap<Flows, FlowStatics>(); to HashMap<Flows, FlowStatics> myHashMap = new HashMap<Flows, FlowStatics>(); but the addig is completly ok."
3477287,2,0,3,java.util.HashMap,You may want to subclass HashMap to create your own bimap: Changed my mind - there's no need to subclass HashMap.
3478108,2,0,36,java.util.HashMap,"and from the HashMap#keySet documentation:  The set [returned] is backed by the map, so   changes to the map are reflected in   the set, and vice-versa."
3481911,2,1,11,java.util.HashMap,"The method names are exposed to Rhino as properties on the native Java HashMap object, just as if you had the following JavaScript object: code."
3481911,2,1,11,java.util.HashMap,"My recommendation is that you either convert the HashMap keyset to an array, using method Set.toArray, or you obtain an iterator using Set.iterator()."
3480236,1,0,1,java.util.HashMap,"Choosing carefuly datatypes, finally a complex Class is created, then using a HashMap, those first Class objects get mapped with a key."
3480453,2,0,2,java.util.HashMap,"K stands for Key and V for Value, like in a HashMap."
3482848,2,0,4,java.util.HashMap,"Have you declared myHashMap using a Generic type: for example HashMap<Flows, FlowStatics> ?"
3487058,2,0,0,java.util.HashMap,"However in choosing the implementation it is imperative to consider which operations you wish to optimise for: {Insert, Delete, Random Access, Sequential Access} If you require only random access to each question (and answer), then the HashMap is probably your best bet."
3487058,2,0,0,java.util.HashMap,"Thus, if you are going to be displaying series of questions (and answers) consider using a variant of HashMap, LinkedHashMap."
3487058,2,0,0,java.util.HashMap,"Your basic hash table functionality is provided by HashMap, and it will yield O(1) complexity for lookup, however iteration, required for displaying ""series"" or ""listings"" can be expensive."
3485048,2,0,1,java.util.HashMap,"A HashMap is a perfect choice, but I'd recommend that you go a step further."
3485108,2,0,0,java.util.HashMap,For this simple 1:1 mapping you don't necessarily need a complex HashMap.
3487123,1,0,1,java.util.HashMap,Creating a CSV File in java from a HashMap.
3494724,2,0,0,java.util.HashMap,"As for grouping data in Java, take a look at java.util.HashMap (or any of the container classes that implement the Map interface)."
3494724,2,0,0,java.util.HashMap,HashMap is a container of key-value pairs.
3497102,1,0,0,java.util.HashMap,Memory leaks with HashMap/HashSet on Android.
3497102,1,0,0,java.util.HashMap,I have an Android application where I use HashMap where I keep my Threads (values) each executing a task (Runnable).
3497102,1,0,0,java.util.HashMap,The problem is that they seem to never been released by GC after finishing and being removed from the HashMap (and they are not referenced from anywhere else).
3497228,2,0,1,java.util.HashMap,"Even if you remove the reference to your Thread in the HashMap, it will not be GCed if it has not actually finished."
3497125,2,0,0,java.util.HashMap,How certain are you that you're actually removing them from the HashMap or HashSet?
3501578,1,0,1,java.util.HashMap,I've got a function filling a HashMap(rMap) of String arrays.
3501626,2,0,0,java.util.HashMap,"HashMap allows null values, so the value you are getting with String array[] =rMap.get(0); may be null."
3503230,2,1,3,java.util.HashMap,You should consider using a HashMap to store your events indexed by date.
3503230,2,1,3,java.util.HashMap,Then you can just check to see if there's a HashMap entry for the day in question.
3507436,2,0,4,java.util.HashMap,"If you want to have more flexibility than a HashMap (not that there's anything wrong with the solution), you can go with a chain of responsibility : code."
3511288,2,0,0,java.util.HashMap,"Instead, maybe you should represent the collection as a HashMap<T, Integer>, where the Integer represents the number of occurrences of a T in the ""collection""."
3512024,2,0,5,java.util.HashMap,"A relevant implementation of List:  ArrayList: This is backed by an array, so lookups on particular indices should be quick  Relevant implementations of Set:  HashSet: Backed by a HashMap so O(1) insertion time TreeSet: Respects the ordering of the data (using the compareTo method) - so iterating over the data will be in order - the trade off is O(log n) insertion time"
3512027,2,0,8,java.util.HashMap,"Loop through the resultset, creating an object for each one, and store them in an ArrayList or HashMap, depending on how you want to use the data."
3515836,1,0,3,java.util.HashMap,I have a new HashMap code.
3515905,2,0,3,java.util.HashMap,"The problem is, a HashMap is not sorted like a list."
3516182,2,0,1,java.util.HashMap,You cannot delete from HashMap like that.
3515952,2,1,2,java.util.HashMap,"First of all, you're saying that you've got a new ArrayList and you're illustrating this with a line that creates a new HashMap."
3515952,2,1,2,java.util.HashMap,"HashMap doesn't have a particular order, ArrayList (as any other List) does."
3515952,2,1,2,java.util.HashMap,"Removing from a HashMap If you've got a map of players, there's no such thing as ""the last item""."
3516006,2,0,0,java.util.HashMap,"4) finally, do players.remove(somelastKey); Bear in mind that HashMap is unordered, it depends on Object's hashCode to determine insertion order."
3516006,2,0,0,java.util.HashMap,"Instead of using HashMap, try using LinkedHashMap which keeps a predictable iteration order."
3516013,2,0,1,java.util.HashMap,"There's no ""first"" and ""last"" in a HashMap."
3516080,2,0,0,java.util.HashMap,"You'll probably have to extend HashMap, override put so that it caches the key, and then create a new method that just removes the key that was cached."
3516089,2,0,0,java.util.HashMap,Other than that there's really no way without using a LinkedHashMap or in some way creating your own wrapper map or extending HashMap.
3516294,1,0,1,java.util.HashMap,Java- not removing from HashMap.
3516294,1,0,1,java.util.HashMap,OK so I have this HashMap code.
3516443,2,0,6,java.util.HashMap,Declaring the object as a Map will allow the compiler to protect you from calling methods which are specific to HashMap.
3516509,2,0,1,java.util.HashMap,"It cannot be that the Classname is used for the additional methods as only clone() is added by HashMap, which has fallen in disuse (for good reasons)."
3516509,2,0,1,java.util.HashMap,"What could be is that the map needs to be Serializable for one reason or another, and the plain Map interface does not extend it, but HashMap does implement it."
3517666,1,0,4,java.util.HashMap,Possible Duplicates: Java: Efficient Equivalent to Removing while Iterating a Collection Removing items from a collection in java while iterating over it   I'm trying to loop through HashMap: code.
3518217,2,0,1,java.util.HashMap,In your particular case I would not modify the structure of the HashMap but merely null the value you want to remove.
3527216,1,0,20,java.util.HashMap,How to move a particular HashMap entry to Last position?
3527216,1,0,20,java.util.HashMap,"For Example, I have HashMap values like this: code."
3549555,2,1,89,java.util.HashMap,"Linked maps: There is also the special case of LinkedHashMap, a HashMap implementation that stores the order in which keys are inserted."
3549555,2,1,89,java.util.HashMap,"Output:  Last key: Not-Specified, last value: 1  Solution using HashMap: If you must rely on HashMaps, there is still a solution, using a) a modified version of the above comparator, b) a List initialized with the Map's entrySet and c) the Collections.sort() helper method: code."
3538092,2,0,13,java.util.HashMap,"HashMap doesn't have 'Last position', as it is not sorted."
3534786,2,1,1,java.util.HashMap,"The solution was to use a HashMap in the ResourceLoader, this way it saves from loading the images more than once since most of the images are used very frequently (might as well reuse the instances if you can)."
3536842,1,0,4,java.util.HashMap,Edit: Prepare my objects for the use within a HashMap.
3536874,2,0,1,java.util.HashMap,"If you hate hashCode:) and your object never be put to hash based containers(HashMap, HashSet..), just leave hashCode() alone, let its base class to calculate hashCode."
30939199,2,0,0,java.util.HashMap,"HashMap - you are able to store K,V pairs, but there is no order."
30939199,2,0,0,java.util.HashMap,It is the ordered version of a HashMap.
3539112,2,0,20,java.util.HashMap,Data structure So you want to use a convenient HashMap?
3542234,2,1,22,java.util.HashMap,"For example, suppose that HashMap provided this static factory: code."
3542234,2,1,22,java.util.HashMap,"Unfortunately the standard collection implementations such as HashMap do not have static factory methods as of release 1.6, but you can put these methods in your own utility class."
3544626,2,0,2,java.util.HashMap,"In particular, if you use Position instances as keys, HashMap will compare them with equals."
3544626,2,0,2,java.util.HashMap,From HashMap#get code.
3546138,2,0,0,java.util.HashMap,"You can use simple Key-Value, by using HashMap, of course with predefined keys."
3546138,2,0,0,java.util.HashMap,Return the HashMap for further processing.
3547372,2,1,55,java.util.HashMap,"In WildSnippet1, either the K or the V (or both) of the HashMap<K,V> can CC, which makes the direct instantiation through new illegal."
3754463,2,0,1,java.util.HashMap,"If you can't find a library that does what you need, I second the suggestion of using looser structured classes (like HashMap) or custom representation classes for being the link between your code and the JSON."
3555068,2,1,1,java.util.HashMap,You could put the sessionId (key) and  timestamp (value) in a static HashMap on creation (indicated by session.isNew()).
3559054,2,1,6,java.util.HashMap,"Also, according to your definition, the someMapRef map bean can only contain values of type java.util.HashMap, but you're trying to set a value for key 0 of SOME VALUE, which is a String."
3561506,2,1,1,java.util.HashMap,"You could pass those Global variables using a simple object with a HashMap thought a GWT-RPC call or just include this Hashmap with the result you already retrieve in the first place (along the ""big list of results [that] is sent back to the client to do the UI processing/display."")"
3567192,2,0,1,java.util.HashMap,"The simplest is to use a HashMap<String, String> in a serializable object, which you can retrieve with an RPC call: code."
3562329,2,0,0,java.util.HashMap,"You could encapsulate your own Object, for instance, a 'MyRecord' which is smaller than a HashMap, then it will be a List of 'MyRecord'."
3562329,2,0,0,java.util.HashMap,"If you have to use HashMap, use new HashMap(7,1) instead of default constructor, that  could save memory, since you said fixed '8 key-value pairs' in a map"
3561085,2,0,0,java.util.HashMap,"You don't specify what kind of comparison do you need, but I would reduce the amount of data held by the HashMap/Vector  by transforming the row information into a single hash number."
3560851,2,1,2,java.util.HashMap,"Similarly, HashMap isn't synchronized and Hashtable is, so using the former might be faster too."
3563533,2,1,0,java.util.HashMap,Only use HashMap for creating the instance.
3562933,2,0,1,java.util.HashMap,Maintain a second HashMap of 'preferred key' (e.g.
3597873,2,0,2,java.util.HashMap,"Because when your object is put into a hash based container(HashSet, HashMap...), the container puts/gets the element's hashcode."
15019075,2,0,36,java.util.HashMap,"hashCode() is used for bucketing in Hash implementations like HashMap, HashTable, HashSet, etc."
3570416,1,0,23,java.util.HashMap,Note that the iteration order for   HashMap is non-deterministic.
3570441,2,0,0,java.util.HashMap,This is the property of HashMap where elements are not iterated in the same order in which they were inserted as HashMap does not insert elements in order.
3570446,2,1,31,java.util.HashMap,"Above, it's saying that iterating through the exact same HashMap may give different results at different times, even when you haven't changed anything."
3570454,2,0,8,java.util.HashMap,"Be aware that both of these have slightly worse performance than a plain HashMap, as they both have to do extra work to keep track of the order."
3570458,2,0,0,java.util.HashMap,In the case of the HashMap depending on how you inserted elements you might have the one or other order of iteration.
3570679,2,0,5,java.util.HashMap,"Strictly speaking, HashMap iteration order is almost certainly not non-deterministic."
3571206,2,1,3,java.util.HashMap,"If the element's equals(Object) method does not give you the semantic that you require, then HashMap or HashSet are not options."
3580816,2,0,11,java.util.HashMap,"Other Java Collections Framework trivias These are all little trivias that are also clearly documented:  TreeSet is implemented with a TreeMap HashSet is implemented with a HashMap Collections.sort uses modified mergesort Map<K,V> is not a Collection<?> ArrayList doesn't specify exact growth policy (unlike, say, Vector)  Related questions  Why does java.util.Arrays.sort(Object[]) use 2 kinds of sorting algorithms?"
3583419,1,0,2,java.util.HashMap,Mapping String contents key/value pairs to a HashMap.
3583419,1,0,2,java.util.HashMap,I'm trying to establish some way of mapping a String document to a HashMap as follows: the String contains key/value pair code.
3595920,2,0,0,java.util.HashMap,A HashMap is overkill for this task.
3599252,2,0,2,java.util.HashMap,"These are the basis for data structures in Java: List, Set, LinkedList, HashMap, TreeMap, etc."
3602014,1,0,11,java.util.HashMap,This is in java.util.HashMap  code.
4466826,2,1,3,java.util.HashMap,values in HashMap is volatile.
3603067,1,0,1,java.util.HashMap,jstl forToken with Nested HashMap in request Attribute.
3603067,1,0,1,java.util.HashMap,"I have a HashMap (hshFields) of HashMaps (ecd_date, owned_by, etc..) with keys (label, size, etc..that I access as such: code."
3603067,1,0,1,java.util.HashMap,I'd like to now use a jstl forToken to loop over the nested HashMap.
3605237,1,0,11,java.util.HashMap,How print out the contents of a HashMap in ascending order based on its values?
3605237,1,0,11,java.util.HashMap,I have this HashMap that I need to print out in ascending order according to the values contained in it (not the keys).
3605320,2,1,14,java.util.HashMap,You aren't going to be able to do this from the HashMap class alone.
3605245,2,0,2,java.util.HashMap,"Create a TreeMap<String,String> Add each of the HashMap entries with the value as the key."
3610478,2,0,0,java.util.HashMap,"If modifications are rare, I'd implement some SortedByValHashMap<K,V> extends HashMap  <K,V>, similar to LinkedHashMap) that keeps the entries ordered by value."
3612394,1,0,3,java.util.HashMap,Java Concurrent HashMap.
3613382,2,1,51,java.util.HashMap,"31 is a large enough prime that the number of buckets is unlikely to be divisible by it (and in fact, modern java HashMap implementations keep the number of buckets to a power of 2)."
3621708,2,0,0,java.util.HashMap,"If that's truly what your data set looks like, you might consider duplicate tracking with a Collection (like a HashMap)."
3622007,1,0,8,java.util.HashMap,"Hashtable does not allow null keys or values, while HashMap allows null values and 1 null key."
3622007,1,0,8,java.util.HashMap,How is it useful to have such a key and values in HashMap?
21189173,2,0,2,java.util.HashMap,"Sir HashMap is also internally uses hashCode() method for inserting an element in HashMap, so I think this will be not the proper reason for ""why HashTable allow null key"""
3622103,2,1,15,java.util.HashMap,HashMap is newer than Hashtable and fixes some of its limitations.
3622103,2,1,15,java.util.HashMap,However it turns out that sometimes you do actually want to store nulls so the restrictions were removed in HashMap.
3622103,2,1,15,java.util.HashMap,The following warning was also included in the documentation for HashMap.get:  A return value of null does not necessarily indicate that the map contains no mapping for the key; it is also possible that the map explicitly maps the key to null.
3622103,2,1,15,java.util.HashMap,How is it useful to have such a key and values in HashMap?
3622649,1,0,1,java.util.HashMap,Storing a JSP HashMap without a mapping table?
3626752,1,0,78,java.util.HashMap,Key existence check in HashMap.
3626752,1,0,78,java.util.HashMap,Is checking for key existence in HashMap always necessary?
3626752,1,0,78,java.util.HashMap,I have a HashMap with say a 1000 entries and I am looking at improving the efficiency.
3626752,1,0,78,java.util.HashMap,"If the HashMap is being accessed very frequently, then checking for the key existence at every access will lead to a large overhead."
3626752,1,0,78,java.util.HashMap,This will reduce accesses to the HashMap by half.
3626752,1,0,78,java.util.HashMap,[Update] I do not have null values in the HashMap.
3627290,2,0,4,java.util.HashMap,Better way is to use containsKey method of HashMap .
3626788,2,0,4,java.util.HashMap,"By the way, HashMap doesn't throw exceptions for missing keys, it returns null instead."
3626794,2,0,24,java.util.HashMap,This is the code of HashMap: code.
3626794,2,0,24,java.util.HashMap,This is the HashMap source code.
3626794,2,0,24,java.util.HashMap,Resources :  HashMap source code Bad one HashMap source code Good one
3626871,2,0,0,java.util.HashMap,"Basically the access to HashMap should be O(1) but with wrong hashCode method implementation it's become O(n), because value with same hash key will stored as Linked list."
3628084,1,0,3,java.util.HashMap,"In order to minimize roundtrips to the database, it is retrieved only once in init() method, and is placed to a HashMap<> (i.e. cached in memory)."
3628084,1,0,3,java.util.HashMap,"For now, this HashMap is a member of the servlet class."
3630968,2,0,3,java.util.HashMap,"In fact, you could override hashCode() to always return 0 for every HashMap and it would be correct (altough it would make a lot of structures slow)."
3633418,2,0,1,java.util.HashMap,"Go from list to HashMap, use the name string as key."
3634273,1,0,0,java.util.HashMap,"but while performing delete operation when i am retrieving ""index"" file i am getting exception on the statement : Map filesUploaded = (HashMap) objIn.readObject(); Exception  is : SEVERE: null code."
3636834,1,0,2,java.util.HashMap,Map> myMap = new HashMap>();.
3636834,1,0,2,java.util.HashMap,"Just to clarify the below alteration of the nested HashMap shows a compiler error, whereas the above does not not; with a Map (not hashmap) code."
3636871,2,0,4,java.util.HashMap,"HashMap<String, Boolean> is not a Map<String, Boolean> it implements it."
3637179,1,0,2,java.util.HashMap,"I am looking at the source code for HashSet, which backed by a HashMap."
3637179,1,0,2,java.util.HashMap,The source code for HashMap shows the internals where elementCount is always decremented on a removeEntry() call.
3637179,1,0,2,java.util.HashMap,"Also, the methods for HashMap.empty() reply on elementCount being == 0, which would return false if elementCount was -1."
3637415,2,0,0,java.util.HashMap,"For HashMap, size() should not return -1."
3637415,2,0,0,java.util.HashMap,"However size() returns size, a private field of HashMap which is indepently maintained rather than by calculating the number of members each time it is called (because the entries table is stored as a linked list (NB not LinkedList))."
3637230,2,0,6,java.util.HashMap,"According to the documentation, HashMap returns the number of element in the map, with no other conditions."
3639327,2,0,1,java.util.HashMap,Declare the HashMap: code.
3640648,1,0,9,java.util.HashMap,How to correctly use HashMap?
3640665,2,0,4,java.util.HashMap,"Using HashMap<String, Object> is probably the best you can do if you insist on having heterogeneous values in the same map -- you'll need to cast those to do anything useful when you retrieve them (and how are you going to know what type to cast them to...?"
3640746,2,1,5,java.util.HashMap,"If getLastNonConfigurationInstance() returns a non-null object, then (HashMap) getLastNonConfigurationInstance() will either return the same object (if that object is a HashMap), or throw a ClassCastException."
3647651,1,0,2,java.util.HashMap,"But performance is awful, also don't really know how to solve it with HashMap."
3647683,2,1,7,java.util.HashMap,You should store informations on token from txtA (in a HashMap for instance) and then in a second loop (but not a nested one) you compare the strings with the existing one in the Map.
3649495,2,0,5,java.util.HashMap,"If you need this, a possible solution is a custom encoding and decoding HashMap<String, String>."
3650262,1,0,1,java.util.HashMap,Create concurrent HashMap in webapp.
3650262,1,0,1,java.util.HashMap,What is the best way to make threadsafe HashMap in Tomcat ?I'm going to create ConcurrentHashMap on InitServlet once on load on my application.
3650262,1,0,1,java.util.HashMap,And where is the best place to put this HashMap should i make it static ?
3651117,2,0,0,java.util.HashMap,"HashMap<String,byte[]>) is not that bad."
9320538,2,0,0,java.util.HashMap,"I'm not 100% sure but perhaps you could, create a HashMap of String to InetAddresses to associate the name of a IP/Hostname in a list or even an array of InetAddresses then create a new socket() using that IP/Hostname and call public void shutdownInput()."
3656485,1,0,2,java.util.HashMap,"I tried: Map<String, Object> map = (HashMap<String,Object>)o But this returns:   java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to java.util.HashMap The instance 'o' comes from a XMLRPC request."
3657125,2,0,7,java.util.HashMap,A good general-purpose map implementation is HashMap.
3854152,2,0,0,java.util.HashMap,On the Server side just have your RPC return a HashMap of properties and read those.
3665404,1,0,3,java.util.HashMap,I have a class which I want to set up as keys in HashMap.
3665456,2,0,0,java.util.HashMap,HashMap doesn't check compareTo(); HashMap checks hashCode() and equals().
3668768,2,0,4,java.util.HashMap,Neither HashSet nor HashMap are meant to sort.
3671235,2,0,1,java.util.HashMap,But consider initializing the various states inside a HashMap?
3671235,2,0,1,java.util.HashMap,"Then when the constructor is called, you populate the HashMap code."
3671235,2,0,1,java.util.HashMap,"Once the check Box is clicked, you can then populate the state and perform a look up in the HashMap table."
3670586,1,0,17,java.util.HashMap,Java HashMap vs JSONObject.
3670586,1,0,17,java.util.HashMap,I am wondering about the performance of Java HashMap vs JSONObject.
3670586,1,0,17,java.util.HashMap,It seems JSONObject stores data internally using HashMap.
3670586,1,0,17,java.util.HashMap,But JSONObject might have additional overhead compared to HashMap.
3670586,1,0,17,java.util.HashMap,Does any one know about the performance of Java JSONObject compared to HashMap?
3670682,2,0,5,java.util.HashMap,I would say the question doesn't make sense for a few reasons:  Comparing apples to oranges: HashMap and JSONObject are intended for 2 completely different purposes.
3670689,2,0,1,java.util.HashMap,JSONObject does not have too much additional overhead on top of a HashMap.
3670689,2,0,1,java.util.HashMap,If you are okay with using a HashMap then you should be okay using a JSONObject.
3670704,2,1,17,java.util.HashMap,"As you said, JSONObject is backed by a HashMap."
3670704,2,1,17,java.util.HashMap,"If you are dealing with JSON objects, you should always use JSONObject over HashMap."
3687549,1,0,0,java.util.HashMap,I am reading in a text file with four columns of data to a HashMap.
3688585,2,0,8,java.util.HashMap,"The object bound to map is not a HashMap, its class is an anonymous class extending HashMap."
3690461,1,0,18,java.util.HashMap,This is the reason I changed the implementation of the RangeCheck using TreeMap instead of HashMap.
3692426,1,0,7,java.util.HashMap,"Here's the output I get   Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space       at java.util.HashMap.addEntry(HashMap.java:797)       at java.util.HashMap.put(HashMap.java:431)       at java.util.HashSet.add(HashSet.java:194)       at makeMove."
3694198,2,0,2,java.util.HashMap,For Maps it is usually HashMap and TreeMap that is used.
3694198,2,0,2,java.util.HashMap,"The TreeMap maintains a sorted order of the inserted entries at the cost of slower search, but easier to sort than a HashMap."
3694203,2,0,2,java.util.HashMap,"When you use a HashSet (or a HashMap) data are stored in ""buckets"" based on the hash of your object."
3694461,2,0,0,java.util.HashMap,"If you use HashMap, you can get the entry by key."
3694790,1,0,1,java.util.HashMap,"I have a HashMap<String,MyDataClass> myMap; For each reference in the myMap, I also have some other MyDataClass references to the same object."
3695181,2,0,0,java.util.HashMap,I would agree with Bozho - subclass HashMap and add a way to add listeners to your new class.
3695181,2,0,0,java.util.HashMap,When other objects wanted to know when something was deleted would simply register a listener with your HashMap and implement the onDelete(Object o) method and then presto they would be notified.
3694810,2,1,0,java.util.HashMap,"If you want a remove(..) on one collection to affect another:  extend HashMap (or any collection) make a private Collection anotherCollection with setter and getter in your class override remove(..), call super.remove(..) and also call anotherCollection.remove(..)"
3702585,2,0,1,java.util.HashMap,"One example is to implement an interface anonymously and store it in a HashMap, something like this: code."
3707392,1,0,2,java.util.HashMap,I suggested to my colleague that he add an extra field to X plus a getter: private void Map info = new HashMap(); This would make the model objects X more flexible.
3712772,1,0,2,java.util.HashMap,"I also looked at HashMap, but there doesn't seem to be a way to populate without looping through the list and adding each Foo element one at a time."
3712851,2,0,4,java.util.HashMap,Where I'm going with this is the HashMap object that you talked about earlier.
3712851,2,0,4,java.util.HashMap,"Since HashMap does allow duplicate values associated with different keys, you could put Bar as the value and Foo as the key."
3715502,1,0,0,java.util.HashMap,"I then have to add lines to the constructor to assign a new instance of HashMap to hits map and ArrayList to the other variables, so far i have  spaceShips = new ArrayList();   blinks = new ArrayList();  Any help would be great cheers"
3715623,2,0,0,java.util.HashMap,"List<SpaceShip> spaceShips Don't declare variables public by default (although having said that, I haven't seen the rest of you code so maybe there's a good reason why you've done that)  You've said that your hitsMap variable should be an instance of Map but later on you've said that it needs to be a HashMap."
3715623,2,0,0,java.util.HashMap,"Therefore there's not much choice but to declare Map<SpaceShip, List<Blink>> hitsMap = new HashMap<SpaceShip, List<Blink>>();  For your misses list, start by copying your list of all spaceships (maybe via Collections.copy ?)."
3715609,1,0,1,java.util.HashMap,"Using a HashMap might be a solution, but I'd like to use an ArrayList if possible, because I normally won't need a key (except in this case)."
3715649,2,1,3,java.util.HashMap,"Then you could simply do int index = workerList.indexOf(new Worker(idToSearchFor));  Using a HashMap might be a solution, but I'd like to use an ArrayList if possible, because I normally won't need a key (except in this case)."
3715649,2,1,3,java.util.HashMap,"So, even though you may think that a HashMap is an overkill, it may be worth it, solely because it's slightly more logical and the code ends up being a bit easier to read."
15819005,2,0,0,java.util.HashMap,the best in this case is used a HashMap: code.
3722991,1,0,7,java.util.HashMap,I was using HashMap before like  code.
3723258,1,0,8,java.util.HashMap,Java HashMap or IdentityHashMap.
3723258,1,0,8,java.util.HashMap,Is there any potential defect to use these objects as keys in a HashMap?
3723327,2,1,5,java.util.HashMap,"If equals() and hashCode() are not overridden on key objects, HashMap and IdentityHashMap should have the same semantics."
3723327,2,1,5,java.util.HashMap,"Also, it's important to note that HashMap expects the equals() and hashCode() determination to remain constant."
3723327,2,1,5,java.util.HashMap,"In particular, if you implement some custom hashCode() which uses mutable fields on the key object, changing a key field may make the key get 'lost' in the wrong hashtable bucket of the HashMap."
3723334,2,0,1,java.util.HashMap,"In situation you describes, the behaviors of HashMap and IdentityHashMap is identical."
3723334,2,0,1,java.util.HashMap,(In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ?
3723334,2,0,1,java.util.HashMap,"In summary, my answer is that:  Is there any potential defect to use these objects as keys in a HashMap?"
3726032,2,0,2,java.util.HashMap,The implementation of IdentityHashMap is quite different than HashMap.
3727349,1,0,0,java.util.HashMap,Java HashMap unique key gets overwritten - please review code and advice.
3727504,2,0,1,java.util.HashMap,"Due to the way Java calculates hash codes, the String pairs you mention will end up with the same hash value, but the HashMap will handle those collisions gracefully (by making each bucket a linked list of entries, effectively)."
3728173,1,0,0,java.util.HashMap,I obtain a HashSet from a HashMap and I don't want that my modifications on the HashSet reflect on the HashMap values.
3728173,1,0,0,java.util.HashMap,Edit : I have to modify an element in the HashSet but I don't want to modify this same element in the HashMap.
3728222,2,1,4,java.util.HashMap,"However, if you modify an object inside the set (for example calling a setter on it), then those changes will be reflected inside the HashMap as well (since the Set and the Map will refer to the same object)."
3729549,1,0,2,java.util.HashMap,If the user enter character the method handle the value in 7Bits from the HashMap.
3730239,1,0,0,java.util.HashMap,Efficient HashMap retrieval with key composite key (build from 2 enums).
3730239,1,0,0,java.util.HashMap,I have a 2 enum values representing a mapping to object which I'm (currently) modeling with a HashMap with the 2 enums values are used as key and the object is the value.
20372984,2,0,0,java.util.HashMap,I have a HashMap named labels with a key of type Key with two enum as members.
3744186,1,0,1,java.util.HashMap,How to pass a HashMap of properties to an Autowired bean in Spring?
3748641,2,1,2,java.util.HashMap,"Rather than implementing this feature as every object having a private Monitor monitor field, think of it as being implemented as the JVM having a global HashMap<object, Monitor> monitors."
3748526,1,0,5,java.util.HashMap,I'm not quite sure how to access the HashMap though.
3748526,1,0,5,java.util.HashMap,"Say I implement a class that allows me to add and remove invoices from the HashMap, I do not know what the values would be: code."
3748531,2,0,19,java.util.HashMap,"Make another class that contains your info, name and quantity and put that as the value of your HashMap."
3748534,2,0,1,java.util.HashMap,"How about HashMap<Integer, ArrayList<String>> ?"
3748584,2,0,0,java.util.HashMap,"Depending on how flexible your datastructe is you can use a Hashmap a la:  HashMap<IdType, List<String>>, with IdType String or Integer, depending on the Keys you like to use."
3748584,2,0,0,java.util.HashMap,"HashMap<IdType, String[]> HashMap<IdType, YourObjectType>, with YourObjectType beeing a Object you defined yourself, holding the values you like  YourObjectType can of course be anything you can define as an Object."
3748584,2,0,0,java.util.HashMap,Also another HashMap if you like.
3752957,1,0,3,java.util.HashMap,"So:  If I use a HashMap<String,SoftReference<DRef>>, how do I ensure that the map will evict entries if the value of the entry (SoftReference) is collected?"
3757047,1,0,1,java.util.HashMap,"So in my class invoice, how do i use the method getID(), so that I can use it in the parameter for my key value in the HashMap?"
3758312,1,0,2,java.util.HashMap,"I have a Java HashMap whose keys are instances of java.lang.Object, that is: the keys are of different types."
3758312,1,0,2,java.util.HashMap,"In order to improve the performance of the get method for my HashMap, I'm inclined to mix the name of the Java type into the hashCode methods of my key objects."
24229693,2,0,0,java.util.HashMap,"Or maybe getClass().getName().getHashCode() as it stays consistent across JVM invocations, which might be helpful if you want a reproducible HashMap iteration order for easier debugging."
3766646,1,0,0,java.util.HashMap,I'm using a 'Properties' class in Java which inherits from HashMap.
3772985,2,0,0,java.util.HashMap,"I made a bug fix on some code where I declared a variable as Map<String, MyObject> and assigned it an instance of HashMap<String, MyObject>."
3772985,2,0,0,java.util.HashMap,The problem is that reflection tried to find a method with HashMap signature and not the declared Map signature.
3772985,2,0,0,java.util.HashMap,Since there was no method with a HashMap as a parameter I was unable to find a method by reflection.
3772985,2,0,0,java.util.HashMap,If you make another version of test that uses HashMap instead then it will work - but now you are forced to declare your variable with a concrete class and not the more flexible interface...
3770645,2,0,2,java.util.HashMap,A Map more explicitly a HashMap will guarantee O(1) on inserts and removes.
3771413,2,0,5,java.util.HashMap,"Don't use a HashMap with enums, this is what an EnumMap was designed for."
3771029,2,1,10,java.util.HashMap,"As seanizer mentions, you should also be using EnumMap as the Map implementation rather than HashMap."
3771123,2,1,14,java.util.HashMap,"From the 2007 JavaOne :  The second puzzle, aptly titled ""More Joys of Sets"" has the user create HashMap keys that consist or several URL objects."
3782126,2,0,5,java.util.HashMap,I'd save them in a HashMap instead so you can reference them by their keys instead.
3782126,2,0,5,java.util.HashMap,To get all the data you need parsed into a useful HashMap the Handler could look like this.
3782126,2,0,5,java.util.HashMap,The HashMap outlineMap will hold all your outline entries and the HashMap outlineData will hold the attributes in every single outline tag.
3782126,2,0,5,java.util.HashMap,As you can see outlineMap is always declared in the startDocument() method this way we ensure that every time your parse using this handler you will have an empty new HashMap.
3782126,2,0,5,java.util.HashMap,If this tag occurs we declare a new HashMap so we can hold each attribute set of every outline tag.
3782126,2,0,5,java.util.HashMap,Then we pass every other interesting attribute to our outlineData HashMap using the put() method.
3782126,2,0,5,java.util.HashMap,If it occurs we set the content of your first outlineMap entry by setting the key string from earlier as the key and the outlineData HashMap as the value.
3782126,2,0,5,java.util.HashMap,Here our HashMap accepts a string as its key and an object as its value (it accepts virtually everything as its value as everything in Java is an object in fact).
3782126,2,0,5,java.util.HashMap,And now you have your ready to use HashMap filled with the parsed data.
3782126,2,0,5,java.util.HashMap,In my example I pass our final HashMap outlineMap to a setter in another class in the endDocument() method.
3780949,1,0,3,java.util.HashMap,cast LinkedHashMap to HashMap in groovy.
3780949,1,0,3,java.util.HashMap,How do I convert LinkedHashMap to java.util.HashMap in groovy?
3780949,1,0,3,java.util.HashMap,"When I create something like this in groovy, it automatically creates a LinkedHashMap even when I declare it like HashMap h = .... or def HashMap h = ..."
3929647,2,0,1,java.util.HashMap,You shouldn't even care that it's a HashMap.
3781004,2,1,2,java.util.HashMap,LinkedHashMap is a subclass of HashMap so you can use it as a HashMap.
3781190,2,0,1,java.util.HashMap,Imagine a class that has one encapsulated HashMap using a String as a key (for the attribute name) and the value of the attribute so you could read the XML file and for evey property add the attribute to the class like.
3784905,1,0,0,java.util.HashMap,StringBuffer or HashMap for appending codes?
3784905,1,0,0,java.util.HashMap,StringBuffer or HashMap Which is the best way to append codes and also makes performance better.
3785044,2,1,2,java.util.HashMap,"""HashMap""?"
3785301,1,0,3,java.util.HashMap,Influence of HashMap optimization that caches the hash code associated with each entry to its get method.
3785301,1,0,3,java.util.HashMap,"Item 9: ALways override hashCode when you override equals  Some class PhoneNumber overrides equals() and doesn't override hashCode() ""two instances are involved: one is used for insertion into the HashMap, and a second, equal, instance is used for (attempted) retrieval."""
3785301,1,0,3,java.util.HashMap,"Even if the two instances happen to hash to the same bucket, the get method will almost certainly return null , as HashMap has an optimization that caches the hash code associated with each entry and doesn't bother checking for object equality if the hash codes doesn't match."""
3785301,1,0,3,java.util.HashMap,"what is the role (in not getting the right instance) of the HashMap optimization ""that cashes...""?"
3785301,1,0,3,java.util.HashMap,"Just for the case - ""the two instances happen to hash to the same bucket""- what if HashMap bothers about ""object equality if the hash codes doesn't match""?"
3785328,2,1,3,java.util.HashMap,"What is the role (in not getting the right instance) of the HashMap optimization ""that cashes...""?"
3785328,2,1,3,java.util.HashMap,"Just for the case - ""the two instances happen to hash to the same bucket""- what if HashMap bothers about ""object equality if the hash codes doesn't match""?"
3790956,2,1,1,java.util.HashMap,That's the nature of HashMap.
8133461,2,0,0,java.util.HashMap,of columns and more over if you are going with HashMap you can get column names too in keys.
3841428,2,1,2,java.util.HashMap,"QUick and dirty: make an ad-hoc query SELECT * FROM MYTABLE LIMIT 1 (replace LIMIT for your DB analog), map that in iBatis through a HashMap, and in your DAO just count the number of keys."
3795551,2,1,1,java.util.HashMap,"For example, if a model only wanted HashMap and you had a TreeMap, you'd be in trouble."
3795551,2,1,1,java.util.HashMap,"But if the model accepted Map (ok, pretend it's an Interface) then it would work with either HashMap or TreeMap."
3795819,2,0,1,java.util.HashMap,"Once you have processed all transactions, go through the HashMap and look for values greater than 2% the total number of transactions."
3795899,2,0,1,java.util.HashMap,"If I were in Your shoes, I'd extend HashMap where Credit card number would be my key and wrap other details in a bean and store it as a value in the map."
3796381,1,0,0,java.util.HashMap,I cannot do that using a HashMap.
3801461,2,1,1,java.util.HashMap,"I would also suggest you use a database but if you must use a file then an option i can suggest is Java serialization.Maintain a HashMap with Key as the credit-card number and the rest of the information wrapped in an object as the value.Each time a new records are added add the information to the hashmap and serialize the data and delete the old file.Same you can do for deletion of records and for searching its very easy since the information is in a hashmap , all you have to do is check if the key is present or not and another advantage is you don't have to bother about the format for writing into a file and then parsing it again."
3806836,1,0,0,java.util.HashMap,I have a HashMap which contains some thing like the following code.
3807856,2,0,4,java.util.HashMap,You could override equals and hashCode and store them in a HashMap or HashSet.
3807921,2,0,1,java.util.HashMap,"Implementing equals() and hashCode() correctly can be difficult to get right, and keys in a Map implementation like HashMap (which can give you efficient lookups) is sensitive to these methods."
3808712,1,0,2,java.util.HashMap,Java Mapping ArrayList to HashMap.
3808712,1,0,2,java.util.HashMap,"I want to sort this ArrayList into a HashMap<type, document[]> but am having some trouble getting my head around it."
3809342,2,1,1,java.util.HashMap,In Java you could use the Map interface ( http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.html ) I would use HashMap so that the key is the 3 letter word and the value is the count of occurances.
3816173,2,1,1,java.util.HashMap,"I suppose if you wanted to reuse LingPipe's ExactDictionaryChunker to do the NER, you could override their MapDictionary to store & retrieve from your choice of key/value database instead of their ObjectToSet (which does extend HashMap, by the way)."
3812952,1,0,5,java.util.HashMap,"Notable collections such as java.util.HashMap, juc.ConcurrentHashMap and ArrayDeque do not resize the backing store downwards, and ArrayList does not do so automatically."
3818745,1,0,27,java.util.HashMap,I am trying to pass a HashMap to a new activity using the intent.puExtra function.
3818745,1,0,27,java.util.HashMap,"Stepping through the debugger it seems that it adds the HashMap no problem, however when startActivty() is called I get a runtime error stating that Parcel: unable to marshal value com.appName.Liquor."
3818745,1,0,27,java.util.HashMap,"Liquor is a custom class that I created, and I believe it, in combination with a HashMap, is causing the problem."
3818745,1,0,27,java.util.HashMap,If I pass a string rather than my HashMap it loads the next activity no problem.
3818745,1,0,27,java.util.HashMap,"So I'm pretty sure the problem exists in the adding of the HashMap to the intent, and based off the error I believe my Liquor class is the cause, but I can't figure out why."
3819146,2,1,71,java.util.HashMap,Your HashMap itself is serializable but is the Bottle class serializable?
3822659,1,0,4,java.util.HashMap,Now my problem is how to extract all data for every recursion and save it in a HashMap for example.
3822659,1,0,4,java.util.HashMap,I could define a ContentHandler for the occurrence of Tags and have it extract the content in a HashMap and put it back in a master HashMap defined in the main content handler but I'm not sure hot to do this.
3825796,1,0,1,java.util.HashMap,L:{...} at I want to get HashMap
3828387,2,0,1,java.util.HashMap,"letters[(char)c] += 1; //store in index, so letters['a'] = 4 etc.. As I get it, you want your letters array to be like this letters['a']=(some value) letters['b']=(some value) In Java, arrays can be indexed only by integers, or in other data types ( they will be promoted to 'int' )Java Language Spec The nearest you could use is a Maps - HashMap or TreeMap"
3832622,1,0,7,java.util.HashMap,"Thanks Edit: In order to reduce disk I/O I'm going to be caching data in an in-memory HashMap, then updating the persistent hash in one go when the cache grows to a certain size."
3837875,1,0,4,java.util.HashMap,Java HashMap; Is recommendable?
3837875,1,0,4,java.util.HashMap,It has been reported that from Java JDK 1.3.1 to JDK 1.4.0 HashMap is 5 times slower (see  here).
3837875,1,0,4,java.util.HashMap,What is the state of the art of HashMap at java 6?
3840109,2,0,0,java.util.HashMap,@Suresh It is not correct to say that HashMap prevents collisions altogether.
3840109,2,0,0,java.util.HashMap,"So, collisions do happen in HashMap."
3839372,1,0,4,java.util.HashMap,I need to get each  into a HashMap where String is the ID.
3841974,2,1,7,java.util.HashMap,If you want to preserve the order of the elements in the XML file then you simply use a LinkedHashMap instead of a HashMap.
3844167,2,0,2,java.util.HashMap,"""(foo|baz)"" ), use Matcher.find(int) to find each occurrence, use a HashMap to lookup the replacement strings and a StringBuilder to build the output String from input string substrings and replacements."
3843445,1,0,7,java.util.HashMap,How to populate java.util.HashMap on the fly from Scala code?
3843445,1,0,7,java.util.HashMap,I am unit testing java code from ScalaTest and would like to populate a java.util.HashMap within the same statement it gets declared.
3843962,2,0,0,java.util.HashMap,Of course at this rate you could simple create a helper method that took the two arrays and returned a HashMap or extend HashMap and add a new constructor...
3844494,2,1,14,java.util.HashMap,Method One: Since java.util.HashMap has the constructor HashMap(Map<?
3844494,2,1,14,java.util.HashMap,"Method Three: Also, you can create an anonymous subclass of HashMap as long as it's okay to have a subclass (i.e. .getClass won't return java.util.HashMap), and use the initializer to set your values: code."
3844494,2,1,14,java.util.HashMap,"The downside is, of course, that it's a subclass of HashMap rather than HashMap, but it's more compact than the assignment-from-code-block version since you don't need to assign the new map to a val."
3843576,2,0,0,java.util.HashMap,"All the methods and constructors of java.util.HashMap are available to you, of course, but that does not provide a way to initialize a map unless you have another one to supply the initial values."
3851674,2,1,2,java.util.HashMap,"Note that it's important to properly implement the equals(Object) and hashCode() methods if you expect instances of the Pair class to behave properly when used in hash-based data structures (for example: Hashtable, HashMap, HashSet, HashMultimap, HashMultiset)."
3851385,2,0,3,java.util.HashMap,To answer your actual question - you can create a HashMap with name-attribute mapping.
3851510,2,0,3,java.util.HashMap,"vs HashMap<TKey, TValue> Allows you to quickly access the element by a means other than an index."
3854020,1,0,2,java.util.HashMap,Finding all keys in a HashMap with a character an replace it.
3854020,1,0,2,java.util.HashMap,I have a HashMap and now i need to find all the keys inside the HashMap which has a particular letter inside it and replace it with another letter
3855836,2,0,2,java.util.HashMap,"The javadoc for HashMap says this:  ""The iterators returned by all of this class's ""collection view methods"" are fail-fast: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException."
3856453,2,0,1,java.util.HashMap,"One way is to use a HashMap<Character,String> mapping each Character to the desired translated value, and use String.charAt() to extract each character in turn."
3856453,2,0,1,java.util.HashMap,"By using a HashMap, you only need to define mappings for the characters you wish to translate."
3857094,2,0,2,java.util.HashMap,"HashMap<String, String> should work just fine."
3864980,2,1,1,java.util.HashMap,"If you prefer a different Map implementation than HashMap (a reference map, for example) you can add to it the preservation of insertion order."
3870867,2,0,1,java.util.HashMap,"HashMap is java specific, so if you would want to have a map sent across the network via WS, declare it as an interface Map."
3870210,2,1,34,java.util.HashMap,"But since the JavaRanch thread talks about HashMap, I'll assume that that's the implementation you're referring to."
3870210,2,1,34,java.util.HashMap,"Iteration over a HashMap  is likely to be more expensive, requiring time proportional to its capacity."
3870210,2,1,34,java.util.HashMap,HashMap.entrySet() The source-code for this implementation is available.
3870210,2,1,34,java.util.HashMap,The implementation basically just returns a new HashMap.EntrySet.
3870210,2,1,34,java.util.HashMap,HashMap.keySet() and .get() Here you first need to get hold of the set of keys.
3870093,2,0,38,java.util.HashMap,"Because in the second case, for every key in the keySet the map.get() method is called, which - in the case of a HashMap - requires that the hashCode() and equals() methods of the key object be evaluated in order to find the associated value*."
3873635,1,0,10,java.util.HashMap,"Using jmap -histo and jmap -histo:live in sequence, I am able to determine that the apparently uncollected objects consist of:  several million HashMaps and arrays of HashMap$Entry (in a 1:1 ratio) several million Vectors and Object arrays (1:1 ratio, and about the same as the number of HashMaps) several million HashSet, Hashtable, and com.sun.jmx.remote.util.OrderClassLoaders, as well as arrays of Hashtable$Entry (about the same number of each; about half as many as the HashMaps and Vectors)  There are some excerpts from the GC output below; my interpretation of them appears to be that the CMS GC is getting aborted without failing over to the stop-the-world GC."
3875290,2,1,1,java.util.HashMap,Then we can keep Nodes we've previously seen in a HashMap.
3876779,2,1,4,java.util.HashMap,One of the simplest methods for doing this is using a HashMap: code.
3890686,2,1,10,java.util.HashMap,"The most used - HashMap does not, for example."
3890686,2,1,10,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
3895996,2,0,2,java.util.HashMap,"For a HashMap or LinkedHashMap, you've no way of knowing which entry's offsets will change."
3895996,2,0,2,java.util.HashMap,"Indeed for a regular HashMap, a single insertion can apparently ""randomize"" the entry offsets."
3900769,2,0,2,java.util.HashMap,"In theory, it can happen if the servletcontainer used by GAE uses a HashMap to store the headers before committing to the response and your local servletcontainer a LinkedHashMap or a List<Pair>."
3903726,2,1,3,java.util.HashMap,If the difference is large enough (i.e. the input is large & very sparse) a HashMap will be faster and will take less memory.
3906083,2,0,3,java.util.HashMap,"Btw, use HashMap instead of Hashtable (and ArrayList instead of Vector)"
3911841,1,0,0,java.util.HashMap,"In fact, the only place I can see the error occurring is inside the addAll method, but that shouldn't happen either as I'm using HashMap and LinkedList from the Java class library... code."
3922163,1,0,4,java.util.HashMap,HashMap via SOAP from Java to PHP and back.
3922649,1,0,0,java.util.HashMap,I am using following code to convert a XML file data into HashMap.
3922649,1,0,0,java.util.HashMap,So all sort of XMLs can be converted into HashMap If you suggest xStream.
3926685,2,0,3,java.util.HashMap,"Remember that putting an object into a HashMap doesn't make a copy of the Object, it just stores a reference to it, so the cost in time and memory is quite small."
3927561,2,0,0,java.util.HashMap,"As already mentioned, LinkedHashSet is build on LinkedHashMap, which is built on HashMap :) Javadocs says that it takes constant time to add an element into HashMap, assuming that your hash function is implemented properly."
3936091,2,0,2,java.util.HashMap,A simple HashMap backed up by Terracotta would do better and will allow to store collection bigger then JVM virtual memory.
3939092,1,0,2,java.util.HashMap,I have a HashMap which contains a String key (mail recipient's name) and the value contains an ArrayList of the mail for that particular recipient.
3939092,1,0,2,java.util.HashMap,"I need to sort the HashMap, and display the each user's name, email subject, and message."
3940428,1,0,0,java.util.HashMap,"Currently, I'm using a standard HashMap<Long, MyClass>."
3940443,2,0,0,java.util.HashMap,You could write your own HashMap implementation using a primitive long for the key instead of a Long wrapper.
3940443,2,0,0,java.util.HashMap,Its not hard to cut and paste the JDK HashMap to do this.
3940443,2,0,0,java.util.HashMap,Call to java.util.HashMap with a primitive long will now work without being boxed.
3942444,1,0,3,java.util.HashMap,file contains 1000+ words My approach: use a HashMap() to store and count the number of times each word appears in the file.
3942444,1,0,3,java.util.HashMap,Question: Would a HashMap() be the best way or would it be better to use a Binary Tree for ensuring faster lookup as there is a large count of words in the file?
3942444,1,0,3,java.util.HashMap,HashMap would result in a lot of memory overhead which is not desired.
3942739,2,0,0,java.util.HashMap,"This should drastically reduce the storage requirements (again assuming the strings are uniformly distributed and overlapping) Assuming that the counts are not to be persisted across invocations, while using a HashMap, let the Map be from Integer => Integer - where the ""key"" is the hashcode of the string and value the count."
3942495,2,0,0,java.util.HashMap,A HashMap is perfect.
3942495,2,0,0,java.util.HashMap,You need to store  a copy of each word encountered the count for each  A HashMap really won't store much more than that!
3942496,2,1,5,java.util.HashMap,The most efficient structure I can think of is a Trie Here's one open source implementation: Google Code patricia-trie Although I tend to agree with Mitch Wheat -- It sounds like a HashMap should work fine (It's always best to avoid premature optimization... so you should use a HashMap until you've shown that it's a bottleneck)
3943426,1,0,1,java.util.HashMap,"I am working on an application, in which i will be receiving data in HashMap."
3943426,1,0,1,java.util.HashMap,For example- suppose HashMap has following values- code.
3943973,1,0,8,java.util.HashMap,"I am aware that it would not perform near as well as a HashMap, but I only plan to use it for small/temporary programs."
3950366,1,0,2,java.util.HashMap,HashMap - correct usage?
3950366,1,0,2,java.util.HashMap,For that I'm creating a HashMap as following (this is not the complete implementation but only the relevant part): code.
3950549,2,1,2,java.util.HashMap,"Based on you timestamped debug output being correct, please remember the following, regarding the HashMap class:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
3950549,2,1,2,java.util.HashMap,"from the javadoc:  http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html  In the debugger, it may have looked like a key/value pair was being overwritten, but in reality, the insertion probably changed the order of the HashMap."
3950689,1,0,5,java.util.HashMap,HashMap inside an Arraylist.
3950689,1,0,5,java.util.HashMap,What could be the requirement if one has to append an HashMap into an ArrayList.
3950700,2,0,1,java.util.HashMap,"There is no ""special requirement"" to append an HashMap to an ArrayList."
3950700,2,0,1,java.util.HashMap,"And as neither Map nor HashMap implements Comparable, so if you want to sort the ArrayList, you would have to create your own Comparator."
3950702,2,0,1,java.util.HashMap,"What do you mean about ""append a HashMap into an ArrayList""?"
3950706,2,0,1,java.util.HashMap,"Obviously it would need to be of the correct Type, in this case a HashMap of Strings."
3950710,2,1,5,java.util.HashMap,"I would encourage wrapping the HashMap in a class that encapsulates the data inside, allowing the logic for manipulation to be inside the class, not just strewn about everywhere."
3951676,1,0,5,java.util.HashMap,I need a HashMap that is accessible from multiple threads.
3951676,1,0,5,java.util.HashMap,"There are two simple options, using a normal HashMap and synchronizing on it or using a ConcurrentHashMap."
3951676,1,0,5,java.util.HashMap,"Compared to a regular HashMap, how much more costly are the read and write operations (I am assuming that they are)?"
3953988,2,0,2,java.util.HashMap,"On a different note, the memory footprint of a ConcurrentHashMap (at the instance level) is somewhat larger than a HashMap."
3951702,2,0,2,java.util.HashMap,"CHM pays some penalty for the use of Atomic* operations under the covers, when compared to HashMap."
3951730,2,1,6,java.util.HashMap,So if you believe that the probability of contention is very low then a simple HashMap is probably your best bet.
3953407,2,0,1,java.util.HashMap,"If the number is unique, you may want to previously save all the movies in a HashMap: code."
3957094,1,0,11,java.util.HashMap,Convert HashMap.toString() back to HashMap in Java.
3957094,1,0,11,java.util.HashMap,I put a key-value pair in a Java HashMap and converted it to a String using the toString() method.
3957094,1,0,11,java.util.HashMap,Is it possible to convert this String representation back to a HashMap object and retrieve the value with its corresponding key?
23994733,2,0,1,java.util.HashMap,"The basic idea is that, 1st you need to convert HashMap String into Json then you can deserialize Json using Gson/Genson etc into HashMap again."
3957122,2,1,3,java.util.HashMap,"Once you convert HashMap to String using toString();  It's not that you can convert back it to Hashmap from that String, Its just its String representation."
3957122,2,1,3,java.util.HashMap,You can either pass the reference to HashMap to method or you can serialize it    Here is the description for toString() toString() Here is the sample code with explanation for Serialization.
11477727,2,0,1,java.util.HashMap,Are you restricted to use only HashMap ??
3957232,2,0,5,java.util.HashMap,"i converted HashMap into an String   using toString() method and pass to   the another method that take an String   and convert this String into HashMap   object  This is a very, very bad way to pass around a HashMap."
3957232,2,0,5,java.util.HashMap,"But a much better solution would be to change that ""another method"" so that it just takes a HashMap as parameter rather than a String representation of one."
3963652,1,0,4,java.util.HashMap,I have an ArrayList called _dataHeap and a HashMap called _dataMap.
3963652,1,0,4,java.util.HashMap,The HashMap bind from a Key to the index of the object in the ArrayList.
3963652,1,0,4,java.util.HashMap,This is so an item in the queue can be found by item using the HashMap or by index using ArrayList.
3966510,2,0,5,java.util.HashMap,"So, next time you use a (default) HashSet, you can be informed that each element in it costs 1 new object (not your element), 5 references, and an int, which is the exact same cost for an entry in HashMap (not unexpectedly, since any HashSet element ends up in a HashMap), and so on."
3972127,1,0,21,java.util.HashMap,HashMap alternatives for memory-efficient data storage.
3972276,2,0,0,java.util.HashMap,"Empty HashMap will already allocate 16 * size of a pointer bytes (16 stands for default initial capacity), plus some variables for hash object (14 + psize)."
3972291,2,0,0,java.util.HashMap,"From your description, it seems that instead of  an ArrayList of HashMaps you  rather want a (Linked)HashMap of ArrayList  (each ArrayList would be a column)."
3973127,2,1,5,java.util.HashMap,"To avoid duplicated String objects, just use a HashMap."
5263754,2,1,2,java.util.HashMap,Try copying e.getAttrs() into a map of your own; a shallow copy using new HashMap(e.getAttrs()) should be sufficient.
3978785,2,0,1,java.util.HashMap,Same with HashMap and LinkedHashMap (actually the former are implemented based on the later).
3973467,2,0,5,java.util.HashMap,"Knowing that getting an element out of an unsorted ArrayList is O(n), but getting it out of a HashMap is O(1) is HUGE."
3973467,2,0,5,java.util.HashMap,"The times when you need to worry about how fast you can, say, get items out of a HashMap should be pretty darn rare."
3973467,2,0,5,java.util.HashMap,"Realistically, most code will use ArrayList, HashMap, or HashSet."
3973512,1,0,14,java.util.HashMap,Java HashMap: How to get the first key's value?
3973512,1,0,14,java.util.HashMap,I am trying to use a HashMap to map a unique string to a string ArrayList like this: code.
3973670,2,1,4,java.util.HashMap,"HashMap<BaseEnum, WidgetData> There's plenty of discussion of why this is true on SO, but see http://stackoverflow.com/questions/2723397/java-generics-what-is-pecs for example."
3973670,2,1,4,java.util.HashMap,"Your choices basically boil down to 1) Use an EnumMap<EnumOps1,...> and lose out on the polymorphism 2) Use a HashMap<BaseEnum,...> and everything works fine but you have to use a non-Enum map."
3974126,1,0,2,java.util.HashMap,"Just one quick question, say, Car class extends HashMap(String, String)."
3975697,2,1,5,java.util.HashMap,"The iteration order of Hashtable (as well as HashMap) elements is not guaranteed (implementation dependent), so IMHO there is not much point trying to build a theory on it."
3975697,2,1,5,java.util.HashMap,"Btw Hashtable is obsolete, it is recommended to use (and analyse) HashMap instead."
3975697,2,1,5,java.util.HashMap,"However, the actual implementation of HashMap is quite a bit more sophisticated than that, at least since Java4."
3975697,2,1,5,java.util.HashMap,"For more details on this, see the following issues of the Java Specialist Newsletter:  HashMap requires a better hashCode() Follow-up to JDK 1.4 HashMap hashCode() mystery"
3978868,1,0,1,java.util.HashMap,"I read in this into a HashMap<Long, String>, the value part of it gets displayed in a List, now, I wish to obtain the key value, so I cooked up this simple routine: code."
3978868,1,0,1,java.util.HashMap,"My problem is being conscious of cpu cycles being chewed up in respect to Android, battery/cpu time, in looking for the value in the HashMap, that could be seen as a potential cycles of cpu lost."
3978884,2,0,1,java.util.HashMap,"Realistically, the only way to avoid having to iterate through is to keep two HashMaps (i.e. pay the memory cost) where one HashMap is the reverse of the first."
3978884,2,0,1,java.util.HashMap,You can create the reverse-lookup HashMap when you create your forward-lookup HashMap without having to loop through your data twice.
3979627,2,0,11,java.util.HashMap,"Since most relationships between classes/components fall into the has-a bucket (for example, a Car class is likely not a HashMap, but it may have a HashMap), it then follows the composition is often a better idea for modeling relationships between classes rather than inheritance."
3986158,1,0,7,java.util.HashMap,"Arguably the relative performance depends on the size of the list/map, since List#indexOf() is a linear search using String#equals() -> O(n) efficiency, while HashMap#get() uses hash to narrow down the search -> certainly more efficient when the map is big, but maybe inferior when there are just few elements (there must be some overhead in calculating the hash, right?)."
3986158,1,0,7,java.util.HashMap,What difference do various List and HashMap implementations make?
3986201,2,0,4,java.util.HashMap,"You're right: a List would be O(n), a HashMap would be O(1), so a HashMap would be faster for n large enough so that the time to calculate the hash didn't swamp the List linear search."
3986221,2,0,5,java.util.HashMap,"A third option and possibly my favorite would be to use a trie:                      I bet it beats the HashMap in performance (no collisions + the fact that computing the hash-code is O(length of string) anyway), and possibly also the List approach in some cases (such as if your strings have long common prefixes, as the indexOf would waste lot of time in the equals methods)."
3986221,2,0,5,java.util.HashMap,When choosing between List and Map I would go for a Map (such as HashMap).
3986276,2,0,2,java.util.HashMap,"And of course, it depends on how String.equals() and String.hashCode() are implemented, as well as the details of the HashMap and List classes used."
3986276,2,0,2,java.util.HashMap,"In the case of a HashMap, a lookup will typically involve calculating the hash of the key String, and then comparing the key String with one or more entry key Strings."
3986276,2,0,2,java.util.HashMap,"But the reality is that simply using a HashMap is a safe option, because it gives O(1) performance with a relatively small constant of proportionality (unless the entry keys are pathological)."
3986276,2,0,2,java.util.HashMap,"(FWIW, my guess is that the break-even point where HashMap.get() becomes better than List.contains() is less than 10 entries, assuming that the strings have an average length of 5 to 10.)"
3987086,2,0,1,java.util.HashMap,I think a HashMap will always be better.
3987086,2,0,1,java.util.HashMap,"Java's HashMap has (let's say) r buckets, and each bucket contains a linked list."
3987086,2,0,1,java.util.HashMap,"As the List implementation is O(nl) and the HashMap implementation is O(nl/r) (I'm dropping the first l as it's relatively insignificant), lookup performance should be equivalent when r=1 and the HashMap will be faster for all greater values of r. Note that you can set r when you construct the HashMap using this constructor (set the initialCapacity to r and the loadFactor argument to n/r for your given n and chosen r)."
3995463,1,0,1,java.util.HashMap,"A being the key from Map<String, Person> B being the name from Person.getName() C being the age from Person.getAge()  I can pull all of the values from the map using .values() as detailed in the HashMap docs, but I'm a bit unsure of how I can get the keys"
3996432,1,0,3,java.util.HashMap,"Ok, now I put all the 1000 findAccessionCode criteria inside the DAO by sending a Set of the raw data files to the DAO so it can retrieve the id's there, then finding them in the database, getting the ones it can find and adding it to a HashMap where the database object is mapped with the reference to the raw data file as key (so I know what raw data belongs to what database entry)."
4008752,1,0,1,java.util.HashMap,I have defined a HashMap which uses a double type key and another HashMap as value as shown code.
4008752,1,0,1,java.util.HashMap,Now for each entry of this HashMap I have a reference to a different HashMap; the name of which is derived from the key value of that entry in this HashMap.
4008752,1,0,1,java.util.HashMap,"For example: If my key value in HM1 is 8, then the name of the HashMap to be referenced in ""Alpha8""."
4008752,1,0,1,java.util.HashMap,"If the key value in HM1 is 6, then the name of the HashMap to be references in ""Alpha6""."
4008752,1,0,1,java.util.HashMap,"So my syntax in adding these to the HashMap HM1 is HM1.put(8, Alpha8); and HM1.put(6,Alpha6); My problem: The key values are pre-defined which I am reading from a text file."
4008752,1,0,1,java.util.HashMap,"Because if I say HM1.put(keyvalue, s1); it is the equivalent of passing a double key and a string value rather than a double key and the reference to another HashMap."
4008752,1,0,1,java.util.HashMap,"For primitive data types, you may be able to wrap but for a HashMap reference, I'm not sure how to do it."
4009886,2,1,11,java.util.HashMap,Because you must override hashCode in order to use a HashMap (or LinkedHashMap).
4010021,2,0,0,java.util.HashMap,"Maps come in different flavours, the most generally used is HashMap."
4010161,1,0,4,java.util.HashMap,I have a StandardAnalyzer working which retrieves words and frequencies from a single document using a TermVectorMapper which is populating a HashMap.
4010161,1,0,4,java.util.HashMap,The word frequencies returned in the HashMap are: browne 1 lucene 2 lawton 1 The problem is the words ‘lawton’ and ‘browne’.
4025727,2,1,1,java.util.HashMap,Seems that a simple extension of HashMap would do it: code.
4022595,2,0,2,java.util.HashMap,"HashSet:   This class implements the Set   interface, backed by a hash table   (actually a HashMap instance)."
4025719,2,1,2,java.util.HashMap,"If there are not going to be multiple values for each key, you shouldn't be using a Multimap to begin with and should just use normal HashMap."
4034211,2,1,7,java.util.HashMap,"java.util.HashMap is not threadsafe, and if accessed concurrently by multiple threads, one particular mode of failure is an infinite loop within a particular bucket."
4041570,2,0,3,java.util.HashMap,"If you're going to always access via key / value, use HashMap."
4041570,2,0,3,java.util.HashMap,"If you intend on cycling through all values, HashMap is horridly inefficient and so you should use LinkedHashMap instead."
4042024,2,0,0,java.util.HashMap,No need to store.Its not at all expensive.Check the source of ArrayList and HashMap.
4043510,2,0,0,java.util.HashMap,"If you want to ""recognize"" your ArrayLists, I would recommend using a Map, a HashMap for example."
4054927,2,0,0,java.util.HashMap,"Mark followed up that comment by suggesting raju use a HashMap<String, String> hashMap = new HashMap<String, String>(); — however that only works for a single key-value pair."
4054586,2,1,6,java.util.HashMap,"Not sure I get your question fully, but keep in mind that a HashMap can only store one value per key."
4055657,1,0,1,java.util.HashMap,"For HashMap, would implementing hashCode() for the value help if I only search by key?"
4055657,1,0,1,java.util.HashMap,I want to put my class A objects into a HashMap.
4055680,2,0,0,java.util.HashMap,You only need to support hashCode and equals for keys in a HashMap.
4059651,1,0,0,java.util.HashMap,Java HashMap put in a for loop in.
4059651,1,0,0,java.util.HashMap,"I have a for loop, where i check if there is a certain key in a HashMap, if the key is not there, it should put a new association in the HashMap."
4065233,2,1,8,java.util.HashMap,"When you create a new Pair instance, the default hashing implementation of Object generates a different hash, and hence your Hashtable fails to locate the pair (which is successfully inside) And finally - use a HashMap instead of Hashtable ."
4065896,2,0,3,java.util.HashMap,You need to move Map continentData = new HashMap(); inside your for loop so that a separate map is created on each pass.
4120975,2,0,0,java.util.HashMap,"See: http://directwebremoting.org/dwr/server/dwrxml/converters/collection.html Moreover, as in my comment above, you probably want to use a List (Array or Linked), and a HashMap."
4072127,1,0,4,java.util.HashMap,Custom HashMap implementation.
4072127,1,0,4,java.util.HashMap,"So the question was ""How would you implement a custom HashMap in java(Assume there is no such data structure called HashMap)""."
18351041,2,0,1,java.util.HashMap,this article explains HashMap and other collections very nicely.
4073647,2,0,3,java.util.HashMap,"This will return you an HashMap of sublists, where the key is the someValue and the value is the partitioned list associated to it."
4075279,2,0,0,java.util.HashMap,"As a simple example, in Java you have to type Map<String, List<String>> anagrams = new HashMap<String, List<String>>(); while in C# you can use var anagrams = new HashMap<String, List<String>>(); (although you can create very large, complex expressions in C# without ever having to name a type)."
4075736,2,1,3,java.util.HashMap,If it's currently a HashMap your iteration will take time proportional to it's capacity.
4079845,2,0,1,java.util.HashMap,"Alternatively you may be able to sub-class HashMap into your own type (MyEntityMap extends HashMap), since then type information can be inferred from generic super type; and passing MyEntityMap.class would give type information that most JSON libraries can use (Jackson and GSON at least)."
4078663,2,0,2,java.util.HashMap,"use ConcurrentHashMap keep on using simple HashMap, but build a new map on each modification and switch maps behind the scenes (synchronizing the switch operation or using AtomicReference)  Which approach is best depends heavily on your application, it is difficult to give you any ""best practice""."
4079329,2,1,3,java.util.HashMap,"Failure to do so may not show any strange functionality in your List but once you try to use the same object in say a HashMap, you may find that the remove or put may not function like you wanted."
4080177,1,0,1,java.util.HashMap,"I was reading the article ""Java theory and practice: Building a better HashMap"" that gives an excellent overview about the implementation of ConcurrentHashMap."
4080258,2,0,4,java.util.HashMap,"You would use a ConcurrentHashMap in the same instances you would use a HashMap, except that you plan on more than one thread using the map."
4080370,1,0,18,java.util.HashMap,"HashMap in Java, 100 Million entries."
4080370,1,0,18,java.util.HashMap,"I want to store 100 Million terms and their frequencies (in a text database ) into a HashMap <String, Double>."
4080615,2,0,1,java.util.HashMap,"Having 1.7GB of data in memory on a HashMap, I would have done any of the two:  Persist all the data (file/database) and have the top 1% or something in memory."
4081657,2,0,1,java.util.HashMap,Drop the HashMap and load all that data into HBase or one of the other NoSQL datastores and write your queries in terms of MapReduce operations.
4082416,1,0,7,java.util.HashMap,Equality between 2 HashMap.
4082416,1,0,7,java.util.HashMap,"All, In the equals() method of my class, I am using a private instance HashMap variable to compare for the equality."
4082416,1,0,7,java.util.HashMap,"However, 2 different objects still show being equal when comparing their HashMap variables."
4082476,2,1,10,java.util.HashMap,"If your HashHap uses arrays as keys or values, this would make HashMap.equals behave strangely (from your perspective)."
4082476,2,1,10,java.util.HashMap,"However, array semantic only affect HashMap equality if you use arrays as (or in) the key or value classes."
4082483,2,0,3,java.util.HashMap,"So if your hashmap's values (or keys I suppose) are arrays, HashMap.equals() will fail."
4083731,2,0,4,java.util.HashMap,Operations like contains(Object) (arguably the most important method in a Set) and remove(Object) are able to work in constant time by making use of the hash code of the object (by way of HashMap).
4092917,2,0,2,java.util.HashMap,"HashSet (like HashMap) uses, well, hashing, to achieve O(1) amortized set/test/remove performance."
4092917,2,0,2,java.util.HashMap,returns 1 for all values) then the performance of HashSet/HashMap will suffer greatly as a result (for any non-trivial n).
4085125,2,0,4,java.util.HashMap,"Java has structures for collections of key/value pairs (Map), but the implementation TreeMap and HashMap do not keep the insertion order of the keys."
4085778,2,0,3,java.util.HashMap,For example;  knowing that HashMap is not synchronized is important knowing how this might affect a multithreaded app is important knowing what kind of solutions exist for this problem is important
4085845,2,0,6,java.util.HashMap,"What's HashMap, TreeMap."
4088335,2,1,5,java.util.HashMap,"Store it temporarily in a HashMap<String,Rec>."
4088335,2,1,5,java.util.HashMap,"Create a HashMap<String,Rec>."
4088335,2,1,5,java.util.HashMap,"For each one, if the tag already exists as a key in the HashMap, then compare the two and decide which one to keep."
4088335,2,1,5,java.util.HashMap,"When you're done, the HashMap.values() method will give you all of your unique Rec objects."
4089733,1,0,4,java.util.HashMap,Some particularly annoying ones are the keySet and values collections on a HashMap (see JDK bugs 4756277 and 4501848 for that discussion).
4089733,1,0,4,java.util.HashMap,"About to try it... this would not respect the specification of, say, a HashMap#keySet() when deserialized, in that it would not be a live view of the mappings."
4090111,2,1,3,java.util.HashMap,"If all the lines are of a fixed length L bytes, then getting to line N is just a matter of seeking to position N*L. If this is an operation you repeat often, some pre-processing might help: for example, read the entire file once and record the starting position of each line in an in-memory HashMap."
4090111,2,1,3,java.util.HashMap,"Next time you need to go to line N, simply look up it's position in the HashMap and seek directly to that point."
4090179,2,0,2,java.util.HashMap,"If you want to access values by something else than their indices, look for the various implementations of the Map interface (such as HashMap)."
4090198,2,1,4,java.util.HashMap,"If all you want to store is key-value pairs, and don't care about iteration order,  I think you might like the HashMap class: code."
4090278,2,0,1,java.util.HashMap,"As the other people have mentioned, a HashMap is probably what you want if you don't care about iteration order."
4090278,2,0,1,java.util.HashMap,"If you do, you can use a LinkedHashMap, which is really a HashMap bolted onto an LinkedList, giving you the best of both worlds: fast random access and preservation of iteration order."
4099253,2,0,0,java.util.HashMap,You can parse the file into a HashMap and keep it around as long as you need it.
4100611,2,0,1,java.util.HashMap,"Something which is maybe also worth mention it, is that you should define the type of the elements you use in the List, for the HashMap its not possible because you are mixing Integers and Strings."
4100507,2,1,17,java.util.HashMap,"You need to create a new HashMap for every entry, instead of reusing the existing one."
4100507,2,1,17,java.util.HashMap,"also, you can remove the list.add(new HashMap()); as that adds an empty map to your list that is never populated."
25338144,2,0,0,java.util.HashMap,"Java Collections Algorithm Efficiencies: Source ArrayList  get, set: O(1) add, remove: O(n) contains, indexOf: O(n)  HashMap  get, put, remove, containsKey: O(1)  HashSet  add, remove, contains: O(1)  LinkedHashSet  add, remove, contains: O(1)  LinkedList  get, set, add, remove (from either end): O(1) get, set, add, remove (from index): O(n) contains, indexOf: O(n)  PriorityQueue  peek: O(1) add, remove: O(logn)  TreeMap  remove, get, put, containsKey: O(logn)  TreeSet  add, remove, contains: O(logn)"
4103893,1,0,0,java.util.HashMap,Is it possible to convert this table (a ResultSet object actually) into a ArrayList or HashMap for easier indexing or can I achieve it using the actual ResultSet?
4106978,1,0,3,java.util.HashMap,"The performance with the built in java hash table (HashMap specifically) was very poor, and after trying some alternatives -- Trove, Fastutils, Colt, Carrot -- I started working on my own."
4109273,2,1,13,java.util.HashMap,"Say you wanted to associate an integer with a list of class type T. Use the following code: Map<Integer, List<T>> myMultiMap = new HashMap<Integer, List<T>>(); It could get messy but, this should give you what you're looking for."
4112138,2,1,13,java.util.HashMap,The Map (such as a HashMap) could be used to keep track of how many times a character has appeared.
4139092,2,1,27,java.util.HashMap,ThreadLocals are very simple objects that could easily be described as a static HashMap that uses the thread name as the key and an object of your choosing as the value.
4118424,1,0,1,java.util.HashMap,"To debug my application I used jstack after it hangs, which gave me the following thread dump:  ""Thread-2"" prio=6   tid=0x0000000006b09800 nid=0x78fc   runnable [0x00000000083ef000 ]   java.lang.Thread.State: RUNNABLE           at java.util.HashMap.put(Unknown Source)           at bgp.parser.Entry.putToIdentifiedLinks(Entry.java:297)           - locked <0x00000000853f2020> (a bgp.parser.Entry)           at bgp.parser.Entry.parseTxtFile(Entry.java:141)           at bgp.parser.Entry.run(Entry.java:31) ""Thread-1"" prio=6   tid=0x0000000006b52800 nid=0x9390   runnable [0x00000000082ef000 ]   java.lang.Thread.State: RUNNABLE           at java.util.HashMap.getEntry(Unknown   Source)           at java.util.HashMap.containsKey(Unknown   Source)           at bgp.parser.Entry.identifiedLinksHasKey(Entry.java:281)           - locked <0x00000000853f00e0> (a bgp.parser.Entry)           at bgp.parser.Entry.parseTxtFile(Entry.java:134)           at bgp.parser.Entry.run(Entry.java:31)  It seams that the two threads access simultaneously the two synchronized functions which contradicts the meaning of synchronization."
4119796,1,0,0,java.util.HashMap,Nested HashMap Creation in Android.
4119796,1,0,0,java.util.HashMap,"I don't know the best way to organize the restaurants/submenus/item, but the way I was thinking was a nested HashMap like the following."
4120260,2,0,0,java.util.HashMap,"Map mpMaps=new HashMap(); mpMaps.put(""Map1"",mp); you'll get an exception with this statement: mp has type Map but you're treating it as a String."
4123743,1,0,21,java.util.HashMap,Theoretical limit for number of keys (objects) that can be stored in a HashMap?
4123743,1,0,21,java.util.HashMap,Is there a theoretical limit for the number of key entries that can be stored in a HashMap or does it purely depend on the heap memory available?
4123782,2,0,8,java.util.HashMap,"HashMap holds the values in an array, which can hold up to Integer.MAX_VALUE."
4123811,2,1,22,java.util.HashMap,Is there a theoretical limit for the number of key entries that can be stored in a HashMap or does it purely depend on the heapmemory available ?
4123811,2,1,22,java.util.HashMap,From the documentation of HashMap.size()  Returns: the number of key-value mappings in this map    which data structure is the best to store a very large number of objects(say several hundred thousand objects)?
4123814,2,0,0,java.util.HashMap,I agree with @Bozho's and will also add that you should read the Javadoc on HashMap carefully.
4123814,2,0,0,java.util.HashMap,Note how it discusses the initial capacity and load factor and how they'll affect the performance of the HashMap.
4123814,2,0,0,java.util.HashMap,HashMap is perfectly fine for holding large sets of data (as long as you don't run out of keys or memory) but performance can be an issue.
4127031,2,1,2,java.util.HashMap,"To iterate the data in the order data was inserted, use LinkedHashMap in place of HashMap."
4126305,2,0,1,java.util.HashMap,"If order is not important, you could use a HashSet or HashMap instead, depending on if you are only iterating them (Set) or need to do key lookups by RowID (Map)."
4129172,2,0,2,java.util.HashMap,"But I doubt that it can see through several levels of indirection, for example a HashMap wrapped in several UnmodifiableMaps."
4131008,2,1,3,java.util.HashMap,"(This is significantly different than just using get/put of a 'synchronized HashMap', see above.)"
4129859,1,0,1,java.util.HashMap,HashMap with values V=sets of keys?
4131733,2,0,0,java.util.HashMap,HashMap is only really used for cases when there is some logical reason to have special keys corresponding to values--I haven't seen anyone use them as a general data structure for everything.
4131777,2,0,6,java.util.HashMap,"There are two implementations of this in the java.util package, 'HashMap' and 'TreeMap'."
4134511,2,0,5,java.util.HashMap,"I suggest you create a HashMap<String, StringBuffer> and use that: code."
16398943,2,0,0,java.util.HashMap,The question has asked about having multiple keys in HashMap which is not possible.
16398943,2,0,0,java.util.HashMap,Refer: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.putForNullKey%28java.lang.Object%29
4138573,2,0,5,java.util.HashMap,"So, have a HashMap<String,SomeInterfaceYouWantToInvokeSuchAsRunnableWithPseudoClosures> look-up."
4138763,2,0,0,java.util.HashMap,"I also suggest an Enum method, although ExampleEnum.valueOf(""ITEM_APPLE"").ordinal() will have to do string comparisons to get to the answer while a HashMap will give you an O(1) complexity."
4138912,2,0,3,java.util.HashMap,"I would use a HashMap as that is closest to what you want to achieve, and therefore a maintainable solution."
4138912,2,0,3,java.util.HashMap,You can define a static HashMap: code.
4148431,1,0,2,java.util.HashMap,"So here is the problem I am facing, I'm trying to implement a HashMap using an Id as key, and an object pointer as the value."
4151362,2,0,1,java.util.HashMap,Probably rather decorate a HashMap.
4149648,2,0,0,java.util.HashMap,"IMO, I wouldn't split the type up into Foo and FooInstance -- I'd make a single class that would handle this pattern in a general way, probably by using a HashMap for the property values."
4150179,1,0,4,java.util.HashMap,Order HashMap alphabetically by value.
4150179,1,0,4,java.util.HashMap,"I have a HashMap<Object, Student> where the Object is the ID of the Student, and the Student is an object from Student."
4150179,1,0,4,java.util.HashMap,"How can I resort the HashMap by the Students name, student->getName()?"
18003532,2,0,1,java.util.HashMap,"You might not be able to sort a HashMap, but you can certainly do something that provides the same effect."
18003532,2,0,1,java.util.HashMap,"I was able to sort my HashMap <String, Integer> by descending value of the Integer by using the excellent code posted at the Javarevisited blog."
18003532,2,0,1,java.util.HashMap,"The same principle would apply to a HashMap <String, String> object: code."
4153889,2,1,2,java.util.HashMap,"For a start, you are using the HashMap unsynchronised."
4154216,2,0,0,java.util.HashMap,"This is why you need a synchronized map here, and why when using an unsynchronized HashMap your results will be indeterminate."
4154487,2,0,3,java.util.HashMap,Replace your HashMap with ConcurrentHashMap.
4156306,1,0,3,java.util.HashMap,HashMap copy all the keys into HashMapand initialize values to zero.
4157972,1,0,156,java.util.HashMap,"Suppose we have a HashMap<String, Integer> in Java."
25190704,2,0,1,java.util.HashMap,"There are misleading answers to this question here that imply Hashtable put method will replace the existing value if the key exists, this is not true for Hashtable but rather for HashMap."
25190704,2,0,1,java.util.HashMap,"See Javadoc for HashMap http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put%28K,%20V%29"
4158417,1,0,1,java.util.HashMap,"Java: find parent and children ....Tree, Loop, ArrayList, List, HashMap, ....what to do?"
4158634,2,0,0,java.util.HashMap,"The concrete Map can be either a HashMap or a TreeMap, each of which has its own advantages -- HashMap retrieval is usually faster, but TreeMap has the advantage of sorted keys."
4159414,1,0,1,java.util.HashMap,Now I want to compare these hashmaps in such a way so that I can put the missing key of 'c' into HashMap B with value as 0.
4159516,2,1,2,java.util.HashMap,"Let's call the ""target"" HashMap the one that will get the missing keys and ""sources"" each of the others."
4161285,1,0,1,java.util.HashMap,Convert HashMap.keySet() to CharSequence[]?
4161285,1,0,1,java.util.HashMap,"I have a method in a client class that gathers data from a server, and returns a HashMap."
4162202,2,0,1,java.util.HashMap,"If you want to perform some sort of lookup, you need a collection which supports lookups, such as HashMap (or a Map in general)."
4163647,1,0,1,java.util.HashMap,i want to save the datas on hibernate dynamically from a Map(like HashMap).
4163647,1,0,1,java.util.HashMap,My HashMap has informations like :  {videoResolution=921600} but i get following error :  code.
4165562,1,0,3,java.util.HashMap,"I have a HashMap of the column identifier mapped to the position in the view, for example: code."
4165810,1,0,2,java.util.HashMap,Deseralize a JSON ( containing HashMap ) returned from Server.
4165810,1,0,2,java.util.HashMap,How do I de-serialize the json back to Java HashMap ?
4167422,2,0,1,java.util.HashMap,Or - if you need a real java.util.HashMap - you could iterate over all values and copy them to a HashMap.
4165883,2,1,8,java.util.HashMap,A HashSet and a HashMap are different things.
4166225,2,0,1,java.util.HashMap,"In HashMap, for instance, the default table contains 256 rows only 16 rows (Sun JDK 1.6.0_17)."
4166294,2,1,14,java.util.HashMap,"Since the prime use of hashCode() is to determine which slot to insert an object into in the backing array of a HashMap/Hashtable, a hashcode > Integer.MAX_VALUE would not be able to be stored in the array."
4168208,1,0,0,java.util.HashMap,"The GetMap() member has unsafely cast a HashMap<Integer,Integer> to a Map<K,V>, which in the test case is a Map<String,String>."
4181249,1,0,3,java.util.HashMap,Problem accessing HashMap data from another class.
4181249,1,0,3,java.util.HashMap,Am having a problem accessing the data in a HashMap.
4182517,1,0,1,java.util.HashMap,So sort of like a HashMap.
4188001,1,0,0,java.util.HashMap,HashMap collisions: is my code correct?
4188747,2,0,0,java.util.HashMap,Which incidentally does not have the thread safety issues of putting a HashMap on a static field.
4188747,2,0,0,java.util.HashMap,An in-memory L2 cache hit is really not that much slower than a HashMap in the grand scheme of things.
4188040,2,0,0,java.util.HashMap,"With HashMap, you can store only one entry under any given key value (e.g."
4188566,2,1,0,java.util.HashMap,If you are using the actual objects you want as map keys and letting the HashMap take care of the details of what it does with the hashcode of those objects (and the keys implement equals and hashCode according to their contract) there will be no issue if there's a hashcode collision other than some possible performance reduction due to the need to search linearly through every entry that hashed to the same bucket.
4188566,2,1,0,java.util.HashMap,The HashMap does what it needs with the hashcode for you.
4192087,1,0,3,java.util.HashMap,so I looked into the source code to see if I can extend it to obtain what I want and found that the store implementation I use (MapCaptchaStore) uses a HashMap as the store... with no synchronization.
4195460,1,0,0,java.util.HashMap,Right now I'm placing this code in a separate method that returns a HashMap of the fields returned to that the exception is handled in-class.
12659023,2,0,5,java.util.HashMap,"The backing container for the aliases is a Map, a HashMap to be more specific."
12659023,2,0,5,java.util.HashMap,"The HashMap provides a fast access path to the aliases, and is also easy to grow."
12659023,2,0,5,java.util.HashMap,"Whenever we think about 'indexing' something, likely a HashMap should be our first choice."
4199829,1,0,1,java.util.HashMap,I'm going to need to do the same thing with ArrayList and HashMap collections too.
4201448,1,0,2,java.util.HashMap,"I have been contemplating using a HashMap, but I am not entirely sure how to make this work with multiple key values."
4206951,1,0,0,java.util.HashMap,HashMap 1 - is with a key of unique id and value as another hashmap containing tagid as key and description of fields to compare.
4206951,1,0,0,java.util.HashMap,HashMap 2 - is with a key of unique id same as Hashmap 1 and value as another hashmap containing tagid as key and value of description used in Hashmap 1.  code.
4206951,1,0,0,java.util.HashMap,Same is the case with HashMap 3 and HashMap 4 code.
4273892,2,0,2,java.util.HashMap,"I would combine both sets of hashmaps in a resulting one HashMap<String, ThisIsARow> for which the key would be the label itself."
4273892,2,0,2,java.util.HashMap,"Then I would loop through the second set of hashmaps, looking first if there is already a ThisIsARow instance in the resulting HashMap<String, ThisIsARow> for each label, creating and adding a new one (setting its label and valB) if there's none yet for this label, or else just set the valB of the existing ThisIsARow instance."
4207509,2,0,0,java.util.HashMap,I would use a HashMap: code.
4218661,2,0,5,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
4224760,1,0,3,java.util.HashMap,I was studying the source code of java.util.HashMap and I wanted to see how well the hashcode function distributes the key's in the internal array of Entry's(which is a package private variable).So I made a package named java.util in my project just to check weather I can fool the compiler to think it's the same package.Surprisingly it worked and I wrote the following code: code.
4225259,2,0,1,java.util.HashMap,"However, from what I can deduce: Keys in a HashMap are compared for equality using the equals(Object o) operation."
4228621,2,0,0,java.util.HashMap,"I believe that the code looks like: obj.getResult(); In this case the answer is simple: the compiler adds casting to MyClass and if you decompile the byte code you see something like  (MyClass)obj.getResult(); The same happens if you invoke you method and assign it result to variable: MyClass result = obj.getResult(); By the way I think that it is a pity that you added annotation @SuppressWarining(""unchecked"") If T is of type ""annotated"" you should say: public  T getResult(Class annotated) {     return (T) getResult(annotated, new HashMap(0)); } This is the usual way to work with generics."
4231042,1,0,3,java.util.HashMap,"The server needs to store all the games in progress and the players in them (currently doing this with a HashMap<UniqueGameID, GameObject>."
4234462,1,0,4,java.util.HashMap,"after I create a new object : Map<Float,Integer> m = new HashMap()<Float,Integer>; I have an array with ""float"" numbers which are unique ."
4234511,2,0,0,java.util.HashMap,"To do that you have to declare it as Map<Float,String> m = new HashMap()<Float,String>;."
4234985,1,0,115,java.util.HashMap,"I need for each Hash - create ComboBox, whose items are value  HashMap  example."
25616206,2,0,20,java.util.HashMap,Just copy paste below statement to your code and rename the HashMap variable from hm to your HashMap variable to print out key-value pair.
4234999,2,0,10,java.util.HashMap,"You can iterate over a HashMap (and many other collections) using an iterator, e.g."
4235774,1,0,7,java.util.HashMap,Changing HashMap keys during iteration.
4235774,1,0,7,java.util.HashMap,is it possible to change keys of a the same HashMap instance during iteration ?
4235774,1,0,7,java.util.HashMap,Now what I can think off is create another HashMap... code.
4235787,2,1,5,java.util.HashMap,HashMap contract forbids mutating it during iteration.
4235797,2,0,2,java.util.HashMap,There are four common types of modification you might want to do to the keys or values in a HashMap.
4235797,2,0,2,java.util.HashMap,"To change a HashMap key, you look up the value object with get, then remove the old key and put it with the new key."
4237245,1,0,6,java.util.HashMap,How iteration last to first in HashMap?
4237253,2,0,1,java.util.HashMap,HashMap doesn't guarantee any ordering.
4237311,2,0,6,java.util.HashMap,"Note 2 : In your question, you used a HashMap."
4237311,2,0,6,java.util.HashMap,Please note that HashMap doesn't guarantee any order for its elements.
4237311,2,0,6,java.util.HashMap,See the first paragraph of HashMap's javadoc for further references.
4248746,1,0,0,java.util.HashMap,Help me understand question related to HashMap in Java.
4248746,1,0,0,java.util.HashMap,"Here the tokenMap is an object of type HashMap<String, Integer>; I do have some idea about HashMap but what i want to know the ""key value"" for HashMap required is a single character or the whole word??"
4250996,2,0,1,java.util.HashMap,leads to a HashMap like this code.
4250996,2,0,1,java.util.HashMap,"After you've built your map (made of keys mapping to entries, or seemingly elements in the question), you'll need to run some statistics over it to find   the number of keys (look at HashMap) the average length of all keys (again, simple enough) the number beginning with ""a"" (just look at the String)  Then make a value object containing these values and return it from the method that does the statistics."
4248800,2,0,1,java.util.HashMap,"In Java, you can find the number of tokens in the HashMap by tokenMap.size()."
4255075,1,0,9,java.util.HashMap,Performance: Creating an ArrayList from HashMap.values().
4255075,1,0,9,java.util.HashMap,Question is how much it costs to create an ArrayList from a HashMap.values() Collection?
4255075,1,0,9,java.util.HashMap,"Objects could also be held in ArrayList (instead of HashMap) all the time which has implications in other parts (modifications of elements, easy by key)."
4255296,2,0,19,java.util.HashMap,HashMap.values() doesn't return an ArrayList of values but a Values Collection.
4255296,2,0,19,java.util.HashMap,The reason for values is just to reference HashMap's iterator.
4255296,2,0,19,java.util.HashMap,Your question:  Question is how much it costs to   create an ArrayList from a   HashMap.values() Collection?
4255190,2,0,0,java.util.HashMap,"You can create Your own HashMap, that holds the Arraylist collection of values directly (i do not believe that HashMap does it for free, the data structure for it is different)."
4255206,2,0,4,java.util.HashMap,HashMap internally stores values in a Collection values.
4255206,2,0,4,java.util.HashMap,"Take a look at the source code of AbstractMap, the parent of HashMap."
4255206,2,0,4,java.util.HashMap,So HashMap.values() directly returns a Collection.
4256412,1,0,0,java.util.HashMap,Java ArrayList: Get Distinct Values from ArrayList which contain HashMap.
4256412,1,0,0,java.util.HashMap,I have ArrayList which contain HashMap.
4256412,1,0,0,java.util.HashMap,In HashMap one or many key-value pairs exist.
4263141,2,0,0,java.util.HashMap,"Since you are making a class whose instances are being used as keys in a hash container (like  HashSet, HashMap, and HashTable), you must override hashcode() and equals()."
4269190,2,0,0,java.util.HashMap,"If you want multiple dialogs, then use a HashMap to keep track of the open dialogs."
4269190,2,0,0,java.util.HashMap,Every time the dialog is opened/closed you update the HashMap.
4268457,1,0,4,java.util.HashMap,"f is the Future, and the callable returns a HashMap where Agent is not really relevant."
4269839,1,0,5,java.util.HashMap,Java HashMap with overridden hashCode() and equals() returns no data.
4269839,1,0,5,java.util.HashMap,I have been working with Java's HashMap lately and have run afoul of some interesting behavior.
4269839,1,0,5,java.util.HashMap,"Whenever I attempt to get() from the HashMap, NULL is returned."
4269839,1,0,5,java.util.HashMap,I tried debugging into the HashMap's containsKey() method which does a get() which is checked for NULL.
4269839,1,0,5,java.util.HashMap,"So, is this a HashMap problem (likely not) or  (more likely) what could I be doing wrong?"
4271888,2,1,14,java.util.HashMap,Use an HashMap Example: code.
4277388,1,0,8,java.util.HashMap,Increment an Integer within a HashMap.
4278889,1,0,2,java.util.HashMap,Compress Java HashMap to be sent over RMI.
4280972,2,0,1,java.util.HashMap,"You can use Map<Integer, Set<Turtle>>:  http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html  with the key being the X coordinate."
4299166,2,1,7,java.util.HashMap,This is completely normal that your HashMap entries are printed in random order.
4299181,2,0,1,java.util.HashMap,"Yes, you'll get ""random"" iteration order when using HashMap."
4299204,2,0,0,java.util.HashMap,HashMap and HashSet does not guarantee the insertion order.
4299538,1,0,3,java.util.HashMap,"removing item from HashMap, Java Question?"
4299538,1,0,3,java.util.HashMap,"Hi i want to remove an item from HashMap, by applying a criteria."
4299538,1,0,3,java.util.HashMap,"So i get run time ConcurentModification Exception, because during the iteration i am modifying the HashMap."
4299567,2,0,1,java.util.HashMap,"The Iterator of the keySet() extends the HashIterator, whose remove() method calls HashMap.this.removeEntryForKey(key); You can also obtain the entrySet() if you need both the key and the value - its iterator has the same property."
4299728,1,0,58,java.util.HashMap,How can I combine two HashMap objects containing the same types?
4299728,1,0,58,java.util.HashMap,I have two HashMap objects defined like so: code.
4299728,1,0,58,java.util.HashMap,I also have a third HashMap object: code.
4299739,2,0,16,java.util.HashMap,HashMap has a putAll method.
4299739,2,0,16,java.util.HashMap,http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html
4301548,2,0,1,java.util.HashMap,"If you maintain a sorted List<Object> to store the items you want to track, along with a HashMap<Object, Integer> to store the starting position of each item, you can get O(1) indexOf in exchange for O(n) insert."
5015033,2,0,0,java.util.HashMap,Store the Object as both key and value in HashMap.
4479566,2,1,1,java.util.HashMap,"I use caching in my service layer so this is only as harmful as a HashMap lookup, but if you don't cache, you run the risk of unknowingly making dozens, hundreds or thousands of service calls."
4313505,1,0,28,java.util.HashMap,"What is the Clojure-idiomatic way to convert a data structure to a Java collection, specifically:  [] to a java.util.ArrayList {} to a java.util.HashMap #{} to a java.util.HashSet () to a java.util.LinkedList  Is there a clojure.contrib library to do this?"
4313836,2,1,54,java.util.HashMap,"Similarly, Clojure map class implements java.util.Map interface and HashMap takes a java.util.Map constructor argument."
4314870,1,0,8,java.util.HashMap,"(URL,   URLStreamHandler,   HashMap) line: 583   URLClassPath$JarLoader$3.run() line:   810   AccessController.doPrivileged(PrivilegedExceptionAction)   line: not available [native method]   URLClassPath$JarLoader.getResource(String,   boolean, Set) line: 806   URLClassPath$JarLoader.getResource(String,   boolean) line: 765   URLClassPath.getResource(String,   boolean) line: 169   URLClassLoader$1.run() line: 194   AccessController.doPrivileged(PrivilegedExceptionAction,   AccessControlContext) line: not   available [native method]   Launcher$AppClassLoader(URLClassLoader).findClass(String)   line: 190   Launcher$AppClassLoader(ClassLoader).loadClass(String,   boolean) line: 307   Launcher$AppClassLoader.loadClass(String,   boolean) line: 301   Launcher$AppClassLoader(ClassLoader).loadClass(String)   line: 248   C:\Program   Files\Java\jdk1.6.0_21\bin\javaw.exe   (28 Nov 2010 15:28:32)  Versions and plugins GWT: 2.1."
4325464,2,0,0,java.util.HashMap,"If your Java code requires method arguments that are something standard like a List or a Map, you can create an ArrayList or HashMap from within MATLAB: code."
4326644,2,0,0,java.util.HashMap,"as an example, HashMap is not thread-safe."
4326644,2,0,0,java.util.HashMap,"however, if i construct an instance and populate it staticly during class loading and then only ever read from the map afterwards, this is a safe usage of HashMap (because classloading provides the external thread-safety guarantee on setup and it is never modified afterwards)."
4327791,1,0,2,java.util.HashMap,HashMap of HashMaps traversal.
4327791,1,0,2,java.util.HashMap,"In Java, I'm trying to retrieve a HashMap<String, Object> that has the Object which is: HashMap<String, Object>."
4327791,1,0,2,java.util.HashMap,"I implemented a recursive function that returns either the HashMap<String, Object> found with the given key, or null if the key wasn't found."
4327817,2,0,1,java.util.HashMap,"For another, I prefer to do instanceof such as if (myObject instanceof java.util.Map) { ... } this way your map doesn't have to be a HashMap if later you decide to change it."
4327845,2,0,0,java.util.HashMap,"Try use HashMap<String, HashMap<String, Object>> main for your 'outer' HashMap, then you'll search for key: code."
4332695,2,0,3,java.util.HashMap,(a) Lower case letter for private and no new HashMap() needed when declaring.
4332732,2,0,1,java.util.HashMap,"The point of a HashMap is to let you look up the value, given the key."
4333331,2,0,3,java.util.HashMap,Instead of Hashtable use HashMap where possible.
4333279,2,1,16,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
4333279,2,1,16,java.util.HashMap,"This implementation spares its clients from the unspecified, generally chaotic ordering provided by HashMap (and Hashtable), without incurring the increased cost associated with TreeMap."
4333279,2,1,16,java.util.HashMap,Note that this is usually compared with HashMap rather than Hashtable - I don't know of an order-preserving equivalent to Hashtable; the latter isn't usually used these days anyway (just as ArrayList is usually used in preference to Vector).
4335207,1,0,0,java.util.HashMap,I have a HashMap and is used in the following way: code.
4335207,1,0,0,java.util.HashMap,"If the above is true, how do I get HashMap to only return true on equals() if they are in fact the same object and not a copy?"
4335269,2,0,0,java.util.HashMap,You need to ensure that your .equals() and your .hashCode() methods are implemented for all objects that you want to store in the HashMap.
4335316,2,0,0,java.util.HashMap,You must implement the equals() and hashCode() methods of the objects that you use as the keys in the HashMap.
4335316,2,0,0,java.util.HashMap,"Note that HashMap not only uses equals(), it also uses hashCode()."
4338445,1,0,4,java.util.HashMap,": Looking deeper with MAT, I see the following info: com.mysql.jdbc.JDBC4Connection @ 0x2aaab64ad820      |        1,856 |    87,110,160 |      8.28% |- java.util.HashMap @ 0x2aaab62115a8                |           64 |    87,021,632 |      8.27% |  '- java.util.HashMap$Entry[16384] @ 0x2aaae182e970|      131,096 |    87,021,568 |      8.27% It seems as each JDBC holds a huge amount of Hashmap entries (>6000 objects), and does not free them at all."
4339024,2,1,5,java.util.HashMap,"As for the HashMap, I've seen that too."
4342546,2,0,1,java.util.HashMap,Should new Java version introduce a backward incompatible change in the HashMap definition it will come with a new serialization UID.
4342546,2,0,1,java.util.HashMap,The worst thing that could happen is seeing the HashMap deprecated :) but I am sure it will still be compatible.
4343748,1,0,5,java.util.HashMap,"V requirements:  mutable sorted by comparator (with allowing elements such as compare(a, b) == 0) - these is need for iterations set (there is no such a and b, that a.equals(b) == true)  - optional  extra optional requirement to map   keys should be iterated by their natural order  now it's  HashMap<SomeEnum, LinkedList<Entity>> with different stuff like collections.sort() in the code."
4343871,2,0,0,java.util.HashMap,"You need an collection implementation V which is used this way: HashMap<SomeEnum, V>."
4343899,2,0,2,java.util.HashMap,You can use an EnumMap instead of the current HashMap.
4344035,2,1,11,java.util.HashMap,Constructing the Class There are six constructors:  Empty (Uses a HashMap and natural ordering for values) code.
4344035,2,1,11,java.util.HashMap,"with a Comparator(V) (Uses a HashMap<K,SortedSet<V>> with the supplied comparator for the values) code."
4349146,2,1,11,java.util.HashMap,"A few points to consider:  First of all, you're getting killed by the standard JDK HashMap class."
4349146,2,1,11,java.util.HashMap,"For each entry into your collection (a four-character string (8 bytes) and an integer (4 bytes), the standard java HashMap will consume:  A string object  8-byte object overhead 4-byte reference to an array 4-byte string-length field  A character array  8-byte object overhead 2-bytes for each character (times 4 characters) = 8 bytes 4-byte array-length field  An Integer object  8-byte object overhead 4-byte int value  A HashMap.Entry object  8-byte object overhead 4-byte Key reference 4-byte Value reference   So your tiny little 12 bytes of data becomes 64 bytes."
4349146,2,1,11,java.util.HashMap,And that's before the HashMap has allocated an array of hash values to use during its lookup operations.
4349146,2,1,11,java.util.HashMap,"In most cases, we don't really care about that, and the vanilla HashMap implementation is fine, even with its mandatory boxing and greedy memory consumption."
4349146,2,1,11,java.util.HashMap,"Update 2: I just did some testing of various solutions, and I was about to get about a 25% performance improvement using the LongHashBag approach instead of the standard HashMap approach."
4349021,1,0,5,java.util.HashMap,Dozer Mapping HashMap to List.
4354674,2,0,0,java.util.HashMap,"But if you want this, perhaps a Map such as a HashMap would better suit your purposes."
4356854,1,0,3,java.util.HashMap,"To indicate that I want to store a HashMap representation of a Java bean, but with constraints on allowed keys (only fname,lname,id and emails) and their types."
9340969,2,0,1,java.util.HashMap,"Here I have included a HashMap object which will keep on eye of what EditText contains value.And when you scroll the listview,it will be rendered again by calling its getView method."
4360112,2,1,25,java.util.HashMap,"For instance, a HashMap will call hashCode() upon its keys, to know whether the keys may already be contained in the HashMap."
4360112,2,1,25,java.util.HashMap,"If the HashMap does not find the hash code, it's obvious the key is not contained in the HashMap yet."
4361637,2,1,8,java.util.HashMap,I have created this helper method for sending data and special headers by POST method in Android (headers HashMap could be empty if you do not have any custom headers): code.
4367523,1,0,0,java.util.HashMap,2> Why dont we have load factor for HashMap ?
4367661,2,0,1,java.util.HashMap,I prefer using the HashMap from the standard Java Collections API class to Hashtable.
4367661,2,0,1,java.util.HashMap,"This is an excerpt from the JavaDoc of the java.util.HashMap<K, V> class: An instance of HashMap has two parameters that affect its performance: initial capacity and load factor."
4367661,2,0,1,java.util.HashMap,More detail can be seen in the HashMap's class source code.
4367559,2,0,1,java.util.HashMap,Java has two different implementations: HashMap and HashTable.
4367559,2,0,1,java.util.HashMap,"The HashTable has extra stuff for synchronization, so if you want the core implementation, look at the source code for HashMap."
4367602,2,1,4,java.util.HashMap,Why dont we have load factor for HashMap ?
4367602,2,1,4,java.util.HashMap,"We do - see HashMap(int initialCapacity, float loadFactor)  Why is load factor 0.75 for hashtable and not some other value which is varying."
4367602,2,1,4,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."""
4368610,1,0,1,java.util.HashMap,Efficient way to prune HashMap.
4369329,2,0,1,java.util.HashMap,If I had to implemtn this I would use a HashMap.
4369343,2,0,0,java.util.HashMap,"Your best bet is probably to have a HashMap<string, string> or HashMap<int, string> that is a static member of your main class or some other relevant class."
4369343,2,0,0,java.util.HashMap,Write a properties file and a simple method that is called near the start of the program to populate the HashMap.
4369343,2,0,0,java.util.HashMap,http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html
4369895,1,0,2,java.util.HashMap,"I've tried using HashMap.entrySet() & MyBatis's , but to no avail."
4378128,2,1,1,java.util.HashMap,"On the other hand, if this association is only used in one part of the project, then you should create the HashMap in that part of the project to store the relationship."
4385861,1,0,3,java.util.HashMap,Should I use an iterator to make a loop over HashMap?
4385861,1,0,3,java.util.HashMap,"I have a HashMap<String,String> (called p2p) and I want to make a loop over its elements."
4388275,1,0,4,java.util.HashMap,"HashMap<String, HashMap<String, A>> 4) other workarounds  What do people normally use and when?"
4397328,1,0,12,java.util.HashMap,"Probably I had to add that bestMove is HashMap<String,String>."
4399645,1,0,5,java.util.HashMap,"Map<String, Primitive> map = new HashMap<String, Primitive>();"
4413065,2,0,3,java.util.HashMap,I recomend a HashMap code.
4416000,2,0,5,java.util.HashMap,"You can wrap HashMap in a class, which delegates put, get, and other methods you use from HashMap."
4416000,2,0,5,java.util.HashMap,"This method is wasteful but safe, since it doesn't depend on the internal implementation of HashMap, AbstractMap."
4416000,2,0,5,java.util.HashMap,"Another option is to make a class which extends HashMap, and depend on its internal implementation."
4416000,2,0,5,java.util.HashMap,"Java 1.6 sources shows that put is called only in putAll in HashMap, so you can simply override put method: code."
4416000,2,0,5,java.util.HashMap,"Another option is similar to the first, and can make an utility method in your class which contains the HashMap instance and call that method wherever you need put something to your map: code."
4415841,2,0,3,java.util.HashMap,"You still won't have duplicates in the HashMap, because, as two other posters have pointed out, you can't get duplicate keys in a Map."
27347338,2,0,0,java.util.HashMap,As others pointed out you can't have the same element in a HashMap.
27347338,2,0,0,java.util.HashMap,By default HashMap will not allow this but there are some cases that you could end up with two or more elements are almost alike that you do not accept but HashMap will.
27347338,2,0,0,java.util.HashMap,"For example, the following code defines a HashMap that takes an array of integers as a key then add : code."
27347338,2,0,0,java.util.HashMap,"At this point, the HashMap did not allow dublicating the key and map1.size() will return 1."
27347338,2,0,0,java.util.HashMap,"This way, the HashMap will add all the three new elements so the map2.size() will return 3 and not 1 as expected."
27347338,2,0,0,java.util.HashMap,The explanation is that with the first map I created the object arr once and tried to add the same object 3 times which HashMap does not allow by default so only the last usage will be considered.
27347338,2,0,0,java.util.HashMap,That's why HashMap allowed them as different keys.
27347338,2,0,0,java.util.HashMap,"Bottom line, you don't need to prevent HashMap from adding dublicated keys because it won't by design."
4418896,1,0,5,java.util.HashMap,What causes the slightly unpredictable ordering of the iterator() for the java.util.HashSet and HashMap.keySet() classes?
4418896,1,0,5,java.util.HashMap,"For whatever reason, I missed the small detail that HashMap happens to BEHAVE THE SAME WAY for its keySet()."
4418896,1,0,5,java.util.HashMap,"Given both times I had a huge single threaded java application crawling through exactly the same instantiation/insertion space with exactly the same JVM parameters (multiple runs from the same batch file) on the same computer with almost nothing else running, what could possibly perturb the JVM such that HashSet and HashMap would, after an enormous number of iterations, behave unpredictably (not inconsistenly as the javadoc says not to depend upon the order)?"
4419134,2,0,1,java.util.HashMap,You can create two HashMap/HashSet with the same elements but get different orders depending on the capacity of the collection.
4419035,2,0,8,java.util.HashMap,"These will fill you in on the JDK's implementation of HashMap and TreeMap, respectively."
4419035,2,0,8,java.util.HashMap,"Some map implementations,   like the TreeMap class, make specific   guarantees as to their order; others,   like the HashMap class, do not."
4419035,2,0,8,java.util.HashMap,Note that a HashSet is just sugar for a HashMap.
4423067,2,0,1,java.util.HashMap,"If you need the extra methods for casting etc, you can write your own class JsObject or similarly named, which wraps a HashMap and provides those methods."
4431728,1,0,1,java.util.HashMap,"I've ran in to a problem where one of the classes that is being used a parameter (both in and out) in a particular webservice extends from HashMap<String,String>."
4440475,2,0,0,java.util.HashMap,Trove4j supports hashing strategies for its HashMap and while I use this library often I have only used a custom hashing strategy once I can remember.
4440436,1,0,1,java.util.HashMap,Here are the some parts of the code of my application This is the class which stores the HashMap: code.
4440436,1,0,1,java.util.HashMap,Two classes which access 'ChatWindows' HashMap code.
4440436,1,0,1,java.util.HashMap,"This class has run() method too, but that doesn't use the HashMap."
4440436,1,0,1,java.util.HashMap,'ChatListenThread' class is not able to access the contents of HashMap properly.
4440915,2,0,2,java.util.HashMap,"Another option would be a Map<K, V> (it's implementation HashMap)."
4441632,1,0,3,java.util.HashMap,I need to write a utility program which would accept a blank HashMap and any object as arguments and return the HashMap  code.
4449319,2,0,4,java.util.HashMap,"Further, any   variables that can be reached   through a final field of a properly   constructed object (such as the   elements of a final array or the   contents of a HashMap referenced by a   final field) are also guaranteed to be   visible to other threads."
4450951,2,1,6,java.util.HashMap,"I think I would carefully say that final field freeze in this case means that when you create an instance of A and safely publish it, other objects will never see an uninitialized value for b or c.   I would also say that when you are creating the instance of B inside A, other initialization code inside A will never see an uninitialized value for c.   One case where I have encountered real questions around final field freeze is for example a class that contains a (mutable) HashMap, intended only for read, initialized during construction: code."
4450951,2,1,6,java.util.HashMap,"The answer is yes, because final field freeze guarantees that the HashMap and everything reachable from it (here it's just strings, but could be arbitrarily complex objects) is frozen at the end of construction."
4449769,2,0,3,java.util.HashMap,hashCode is overrided so as to make instances with same fields identical for HashSet/HashMap etc.
4453476,1,0,20,java.util.HashMap,"What is the difference between : HashMap, HashTable and HashList ?"
4453528,2,0,6,java.util.HashMap,"HashMap and HashTable are maps; they are a collection of unqiue keys, each of which is associated with a value."
4456280,1,0,4,java.util.HashMap,I tried using the HashMap but it would only map to the last occurrence of this data.
4456312,2,1,7,java.util.HashMap,"The behavior of Map and HashMap you describe is the intended behavior, as other commenters note."
4464667,2,0,2,java.util.HashMap,I think you should be using a HashMap since it is far more efficient if you just want to store and retrieve specific strings.
4464922,2,1,2,java.util.HashMap,"Instead of constant time, space complexity and performance you have the characteristics of a HashMap."
4465817,2,0,1,java.util.HashMap,"Try http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.html, or more specifically a http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html."
4465818,2,0,2,java.util.HashMap,It's called java.util.HashMap
4465833,2,1,7,java.util.HashMap,You can use a HashMap or a Hashtable.
4465880,2,0,2,java.util.HashMap,Its main advantage over HashMap its that it retains the order the keys were added.
4465880,2,0,2,java.util.HashMap,For HashMap they appear in a pseudo random order which makes reading them much harder.
4468535,2,0,3,java.util.HashMap,"See http://en.wikipedia.org/wiki/Hash_table and http://www.docjar.com/html/api/java/util/HashMap.java.html A hash table or hash map is an array of linked lists, keyed by hashcode."
4471718,2,0,0,java.util.HashMap,Along with this maintain a map (eg a HashMap) from the java object to the Id.
4476031,1,0,1,java.util.HashMap,What's wrong with this Java HashMap declaration?
4476597,2,1,8,java.util.HashMap,"If it was legal to compile such a code, you would've been able to sneakily insert element of other types in the HashMap: code."
4477719,1,0,0,java.util.HashMap,So I wrote a Facade which you can see below there is a problem with the HashMap and I suspect that the values which I attempt to add into the HashMap during the construction aren't going so well.
4480334,1,0,20,java.util.HashMap,How to call a method stored in a HashMap?
4483695,2,1,0,java.util.HashMap,"Your classes Item and ItemEx don't have the methods equals(Object) and hashCode(), so they cannot be used directly as keys in a HashMap."
4498835,1,0,1,java.util.HashMap,"I'm looking for a data structure that will act like a Queue so that I can hava First In First Out behaviour, but ideally I would also be able to see if an element exists in that Queue in constant time as you can do with a HashMap, rather than the linear time that you get with a LinkedList."
4498955,2,1,2,java.util.HashMap,"A simple approach is to have a Queue and a HashSet, and always perform an add to both and remove from the HashMap when you remove from the Queue."
4499410,2,1,13,java.util.HashMap,In this case you could for instance make use of a HashMap.
4499410,2,1,13,java.util.HashMap,"As @Peter Lawrey points out in the comments: If the order in the array is important to you, you could use a LinkedHashMap instead of a HashMap."
4508580,2,0,2,java.util.HashMap,The most obvious example of such an optimisation is the HashMap class.
4508580,2,0,2,java.util.HashMap,"In fact, this is one of the reasons that the String class is immutable: if you were able to modify a String (and so change its hashCode) while that String was the key in a HashMap, then you would never be able to find it, since you would end up looking for it in the wrong place!"
4506014,2,0,0,java.util.HashMap,"You could use a HashMap<String, String> then just iterate through the cookie string adding new hash entries, then, once you're done, you can do something like cookie.setPath(hash.get(""path"")) and cookie.setDomain(hash.get(""domain""))"
4506865,2,0,0,java.util.HashMap,and either choose a HashMap if I wanted fast read and insert of single rows or a TreeMap if sorted output based on the keys is a typical scenario.
18195369,2,0,2,java.util.HashMap,"I submit an example for a HashMap<Enum, List<Object>> In this case, the object is a custom class, Person code."
7981662,2,0,15,java.util.HashMap,"Open JSONObject.java file, it uses internally HashMap which doesn't maintain the order."
4523504,2,1,1,java.util.HashMap,A HashMap is almost certainly he best way.
4526989,1,0,3,java.util.HashMap,I have thousands of words stored in a HashMap.
4530246,1,0,0,java.util.HashMap,"creating Object equality ""HashMap"" in ActionScript3 as java HashMap."
4530246,1,0,0,java.util.HashMap,"in a word, I want implements a data-structure works like HashMap in java"
4531231,1,0,2,java.util.HashMap,Edit: I changed to HashMap and result is still same
4531336,2,1,5,java.util.HashMap,"The Map interface makes no guarantees about iteration order, and the HashMap implementation is based on hash functions which means the iteration order is basically random, and will sometimes change completely when new elements are added."
4532698,1,0,4,java.util.HashMap,two HashMap iteration.
4537836,2,0,0,java.util.HashMap,I agree that a HashMap will work.
4537952,1,0,1,java.util.HashMap,When the application starts it just reads the file into a HashMap.
4538058,2,0,1,java.util.HashMap,To take your example: You have a huge HashMap.
4545209,2,0,3,java.util.HashMap,How about using a HashMap?
4545209,2,0,3,java.util.HashMap,Of course we assume that HashMap has O(1) read and write.
4546307,2,1,6,java.util.HashMap,"If you want to use it, you should use HashMap or ConcurrentHashMap instead."
4549984,2,0,2,java.util.HashMap,"LinkedList, HashMap and so on)."
4552338,2,0,1,java.util.HashMap,"Similarly, if you don't know how a HashMap works then you can't know how to properly define classes that can be stored in one."
4552717,1,0,1,java.util.HashMap,"Reducing time complexity using HashMap, or is there a better method?"
4552717,1,0,1,java.util.HashMap,"However, I'm uncertain of the time complexity of this new code: Is it O(n) because you only use one for-loop, or does the fact we require the use of the HashMap's get methods make it O(n log n) ?"
4552768,2,0,0,java.util.HashMap,because searching in HashMap is just O(1)  code.
4553037,2,0,0,java.util.HashMap,"To ensure, the HashMap will always have the time complexity of O(1), you may have to enter proper initialCapacity."
4553037,2,0,0,java.util.HashMap,"So the hashmap initiation could be like the below, HashMap<Character, Integer> letters = new HashMap<Character, Integer>(69);"
4553624,1,0,34,java.util.HashMap,HashMap get/put complexity.
4553624,1,0,34,java.util.HashMap,We are used to saying that HashMap get/put operations are O(1).
4553624,1,0,34,java.util.HashMap,"As I understand from the javadocs, the HashMap load factor should be 0.75."
4553778,2,0,6,java.util.HashMap,"On top of that, what you may not know (again, this is based in reading source - it's not guaranteed) is that HashMap stirs the hash before using it, to mix entropy from throughout the word into the bottom bits, which is where it's needed for all but the hugest hashmaps."
31378268,2,0,2,java.util.HashMap,HashMap operation is dependent factor of hashCode implementation.
4553642,2,1,57,java.util.HashMap,"In the worst case, a HashMap has an O(n) lookup."
4564531,2,1,2,java.util.HashMap,"so far I didn't get any answers so I wrote the function that iterates through the rows and creates an ArrayList of HashMap type (String, Object)."
4568450,2,0,1,java.util.HashMap,Don't take his suggestion of using ArrayLists though - all you need is one of the Map implementations (HashMap or TreeMap).
4568872,1,0,3,java.util.HashMap,All the JSON objects are stored in a HashMap.
4568872,1,0,3,java.util.HashMap,"My earlier comment that ""template"" was being returned was because of a bug where I was not saving the returned process object back into the HashMap."
4569693,2,1,1,java.util.HashMap,"If they have multiple names, then a HashMap would be a reasonable solution code."
4570107,1,0,1,java.util.HashMap,What I am trying to do is build a levelDirectory (based on the Singleton DP) that essentially is an object that has a HashMap object within it that stores all the Level subclasses.
4570482,2,0,1,java.util.HashMap,That would give you a Set (subTypes) to iterate on and put it in the HashMap.
4572074,1,0,3,java.util.HashMap,"The current approach I'm using is to have a StateList Object which contains a HashMap that stores State Objects via a string key (i.e. HashMap<String, State>)."
4572074,1,0,3,java.util.HashMap,"Each State Object contains its own HashMap of City Objects keyed off the city name (i.e. HashMap<String, City>)."
4577998,1,0,10,java.util.HashMap,Time Complexity of HashMap methods.
4577998,1,0,10,java.util.HashMap,"(more specifically, ArrayList, HashSet and HashMap) Now, when looking at the HashMap article, they only really speak about the get() and put() methods."
4577998,1,0,10,java.util.HashMap,http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html The methods i still need to know are: code.
4577998,1,0,10,java.util.HashMap,"I think that remove() will be the same complexity as get(), O(1), assuming we don't have a giant HashMap with equal hashCodes, etc etc... For size() i'd also assume O(1), since a HashSet, which also has no order, has a size() method with complexity O(1)."
4577998,1,0,10,java.util.HashMap,"The one i have no idea of is values() - I'm not sure whether this method will just somehow ""copy"" the HashMap, giving a time complexity of O(1), or if it will have to iterate over the HashMap, making the complexity equal to the amount of elements stored in the HashMap."
4578019,2,0,1,java.util.HashMap,I once checked the source code and what I remember is that there is a variable named size that always hold the number of items in the HashMap so size() is O(1).
4578039,2,1,15,java.util.HashMap,The source is often helpful: http://kickjava.com/src/java/util/HashMap.java.htm  remove: O(1) size: O(1) values: O(n) (on traversal through iterator)
9149689,2,0,2,java.util.HashMap,The code for remove(as in rt.jar for HashMap) is: code.
4582383,1,0,0,java.util.HashMap,I need to separate the key value pair and move it to a HashMap.
4592579,2,0,6,java.util.HashMap,Paraphrasing my answer to this very similar question about Map vs. HashMap: There is no difference between the objects.
4599097,1,0,4,java.util.HashMap,"I've stumbled on this method in some code whose only purpose is to create a String Key for a HashMap (EDIT: In my case all of X, Y and Z will be numeric, consider them co-ordinates if that makes it easier): code."
4599300,2,0,0,java.util.HashMap,The string-representation itself is created only to later represent a hashcode in the HashMap.
4599300,2,0,0,java.util.HashMap,"That has the potential to improve the performance when the HashMap is accessed or modified very often, because the calls to equals()/hashCode() are faster."
4599300,2,0,0,java.util.HashMap,"if the HashMap is accessed by other code not under your control) may have it easier, because they just use the CustomerIdentifier instead of duplicating the key-generation code (it's not much, but the problem may often come later, when someone changes the delimiter and the other code doesn't...) Also, this approach let's you put the validation of the x/y/z values into a class."
4599300,2,0,0,java.util.HashMap,"The second downside is that you may often have to create new key objects for code which accesses the HashMap, but only has the x/y/z values at hand."
4599176,2,0,0,java.util.HashMap,I don't believe that your MyKey approach above would result in noticeably different behavior from a HashMap versus using a key generated with createMappingKey.
4599176,2,0,0,java.util.HashMap,"Both MyKey and String have correct equals and hashCode behavior, so from a HashMap's perspective, there's no difference between the two."
4599176,2,0,0,java.util.HashMap,"I do think that using MyKey as your HashMap key instead of a plain old String makes it a little clearer to another programmer that there are strict rules for what constitutes a correct key, so that they don't do something goofy like stick in a """" key in the HashMap (either on purpose or by accident)."
4610741,1,0,1,java.util.HashMap,servlet ArrayList and HashMap.
4610795,2,0,2,java.util.HashMap,I think you're asking why there is only one value stored in your HashMap.
4610795,2,0,2,java.util.HashMap,"If you're asking why each element in your list is the same, well as Nikita said, you're storing the exact same HashMap into your List each time."
4611764,1,0,7,java.util.HashMap,Java HashMap.containsKey() doesn't call equals().
4622381,2,0,0,java.util.HashMap,"For parsing the file, HashMap is your friend here."
4622381,2,0,0,java.util.HashMap,"The source file works with names like ""v0"", so start by making a HashMap<String, Vertex> which stores ""v0"" (or whatever key you are looking at) in the key and a new Vertex object initialized with the city name as the value."
4633580,2,1,55,java.util.HashMap,"Note that HashMap<K,V> is a concrete class, but we're assigning it to a Map<K,V> reference, which is an interface."
4633580,2,1,55,java.util.HashMap,"This is the recommended style in Java, because it allows you to switch HashMap for e.g."
4633583,2,0,1,java.util.HashMap,Use a HashMap as follows: code.
4640302,2,1,2,java.util.HashMap,"If the application is single-threaded, use a HashMap."
4640302,2,1,2,java.util.HashMap,"HashMap<String, HashMap<Integer, HashMap<Integer, HashMap<String, Item>>>>."
4640302,2,1,2,java.util.HashMap,See this question to see how to iterate over the HashMap.
4641973,2,0,0,java.util.HashMap,and a HashMap: code.
4642989,2,0,4,java.util.HashMap,I would suggest use HashMap instead of linked list.
4644264,2,1,3,java.util.HashMap,If the words are unique then use HashMap.
4644264,2,1,3,java.util.HashMap,"and  wordsAndDates.get(""a"") return 1 If not you shouldn't use HashMap because it overrides previous value."
4644072,2,0,1,java.util.HashMap,In this case it seems like a HashMap should fit nicely (it's pretty close to python's dict).
4644661,1,0,2,java.util.HashMap,"HashMap ""WriteOnce"" Implementation."
4645168,2,0,1,java.util.HashMap,1: Wrap HashMap.
4653755,1,0,0,java.util.HashMap,Adjacency List HashMap> failing to locate its values.
4653755,1,0,0,java.util.HashMap,"I am halfway through debugging a Breadth-First Search algorithm using an adjacency list representation of graph data: HashMap<String, ArrayList<Edge>>."
4653755,1,0,0,java.util.HashMap,I know that the HashMap lookup is receiving the correct Key.
4654423,1,0,1,java.util.HashMap,How to have a HashMap as @WebParam with JBossWS 3.1.2.
4654423,1,0,1,java.util.HashMap,I am trying to develop a web service with JBossWS 3.1.2 that has a HashMap as one of its arguments.
4654423,1,0,1,java.util.HashMap,The generated client code contains an empty abstract class AbstractMap.java and an empty class HashMap.
4654423,1,0,1,java.util.HashMap,I also tried wrapping HashMap with a custom class (ParameterMap) but just got more of the same.
4660379,2,0,5,java.util.HashMap,The HashMap needs to be wrapped in another Java class called HashMapWrapper.java (or whatever).
4660379,2,0,5,java.util.HashMap,The ping method call needs to be modified to use the wrapper class instead of HashMap: code.
4657305,1,0,2,java.util.HashMap,"Currently I am using a HashMap over a sub-sample of a 1,000 vectors, but I'm not sure it will scale to production."
4657350,2,1,4,java.util.HashMap,"I think you're asking whether a HashMap with 40,000 entries in will be okay."
4657350,2,1,4,java.util.HashMap,"There won't be very much overhead for each HashMap entry, so if you've got enough space to store the objects themselves in memory, it's unlikely that the overhead of the map would cause a problem."
4658978,2,1,3,java.util.HashMap,"Here you can see an example that gets two values from two combo-boxes, adds them to a HashMap and passes the map to iReport."
4658255,1,0,1,java.util.HashMap,Can you throw some light on what is the design issue in not allowing HashMap to be static with declarations like this.?
4658292,2,0,0,java.util.HashMap,"Your declaration of HashMap is completely correct, maybe you're trying to use it from a non-static context/method?"
4658293,2,0,11,java.util.HashMap,You did not import java.util.HashMap (of course in that case the error has nothing to do with your use of the static keyword).
4670045,1,0,1,java.util.HashMap,Query on indexed table in sql database versus using own HashMap.
17765278,2,0,1,java.util.HashMap,Using Your own HashMap to maintain will make you life tough    What if you have too many entries to accommodate in memory    What if your application is re-started?
4670194,2,1,2,java.util.HashMap,"Looking up in the HashMap will be quicker, but if the data changes you have the overhead of managing the data and updating your cache, not to mention deciding on which bits of data you are going to cache."
4670195,2,0,1,java.util.HashMap,"You should be able to achieve an indexed SQL query in 1-10 milli-seconds, and a lookup on a HashMap should be less than 1 micro-second."
4670497,1,0,1,java.util.HashMap,Is Lucene a good choice for Key/Value HashMap?
4670497,1,0,1,java.util.HashMap,Right now is important to have an efficient HashMap.
4671150,2,1,0,java.util.HashMap,The simplest solution is a HashMap and it's fairly efficient.
4671150,2,1,0,java.util.HashMap,Is there any particular reason you think a HashMap would be a bad solution?
4674923,1,0,0,java.util.HashMap,Retrieving objects from a HashMap using java.
4674957,2,1,4,java.util.HashMap,"Note that with enum keys, it is recommended to use an EnumMap instead of HashMap."
4675542,2,0,1,java.util.HashMap,Still doing so you end up with a annonymous subclass of HashMap...
4677828,2,1,6,java.util.HashMap,"But since that was a supported use case in the ""old"" HashMap, it needs to be supported in the generics version as well."
4683476,1,0,1,java.util.HashMap,String key not found in HashMap.
4683476,1,0,1,java.util.HashMap,"I have a HashMap with one entry that has a key of ""1""."
4687305,2,0,1,java.util.HashMap,"(as of now single linked lists are almost extinct, HashMap buckets comes to mind, though)."
4686578,1,0,1,java.util.HashMap,"Hello suppose I have a hashmap HashMap<Integer,boolean[][]> map= new HashMap(); How do I put a true or false value on the map in the 2d array"
4686844,2,0,1,java.util.HashMap,"(Works with all basic Map implementations too but if you happen to have a non-serializable map, you can always create a HashMap with the same content and serialize it instead.)"
4688567,2,1,6,java.util.HashMap,"I would do this by giving MyData a private HashMap that holds all your strings, which can then be accessed by key."
4691166,1,0,13,java.util.HashMap,"Why not HashMap, TreeMap or LinkedHashMap?"
4691501,2,0,4,java.util.HashMap,will give you hundreds of thousands of data: try to put that in a Java HashMap and... Kaboom!
14798963,2,0,1,java.util.HashMap,"Regarding HashMap or HashTable : Mainly if your class is used in multithreaded manner than you  have to use HashTable, otherwise HashMap is the best option."
14798963,2,0,1,java.util.HashMap,HashMap vs TreeMap: If you need insertion order into collection then we have to use TreeMap.
14798963,2,0,1,java.util.HashMap,HashMap vs LinkedHashMap: LinkedHashMap implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
4692071,2,0,2,java.util.HashMap,HashMap which would give you O(1) access time?
4692222,2,0,0,java.util.HashMap,"If the order of the results is important, a different approach could use a HashMap&lt;Integer,String&gt; to create your dataset, then extract the keys using HashMap&lt;?,?&gt;.getKeySet() then sort them in their natural order (they're numeric after all) then extract the values from the map while iterating over the keySet."
4692486,1,0,1,java.util.HashMap,Possible Duplicate: Why does HashSet implementation in Sun Java use HashMap as its backing?
4692519,2,0,2,java.util.HashMap,The HashMap is actually used as the backing store for the HashSet.
4692519,2,0,2,java.util.HashMap,"From the docs:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
4692523,2,0,1,java.util.HashMap,"The answer is right in the API docs ""This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
4692523,2,0,1,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
4692523,2,0,1,java.util.HashMap,"It doesn't need to use a HashMap, but it is probably just good code re-use."
4692523,2,0,1,java.util.HashMap,"It is probably really easy to use a HashMap as the backing of a HashSet, because all you would have to do would be to use hashCode (defined on all objects) on the value you are putting in the Set to determine if a dupe, i.e., it is probably just doing something like code."
4692531,2,0,0,java.util.HashMap,"The very first sentence of the class's Javadoc states that it is backed by a HashMap:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
4692531,2,0,0,java.util.HashMap,Why is it backed by a HashMap?
4692544,2,0,0,java.util.HashMap,It's just a matter of convenience that the standard Java class library implements HashSet using a HashMap -- they only need to implement one data structure and then HashSet stores its data in a HashMap with the actual set objects as the key and a dummy value (typically Boolean.TRUE) as the value.
4692549,2,0,0,java.util.HashMap,HashMap has already all the functionality that HashSet requires.
4694077,2,0,1,java.util.HashMap,Simply use a HashMap code.
4697062,2,0,4,java.util.HashMap,HashMap doesn't guarantee insertion order.
4700150,1,0,2,java.util.HashMap,How to persist a HashMap with hibernate.
4700873,1,0,0,java.util.HashMap,I have HashMap object contains a key x-y-z with corresponding value test-test1-test2.
4700873,1,0,0,java.util.HashMap,Based on this string array I want to remove HashMap values.
4701348,2,0,0,java.util.HashMap,Or use list.contains(your-String) But I guess using a HashMap will provice better access times for that kind of things.
4701406,2,0,0,java.util.HashMap,A HashMap or even a simple sorted List would be better.
4701412,2,0,0,java.util.HashMap,A HashMap or even a simple sorted List seem more appropriate.
4710973,1,0,1,java.util.HashMap,I thought I might need to set up  inweak references for stub maps using Weak HashMap instead of HashMap but I don't know if this is right choice.
4721781,2,0,0,java.util.HashMap,"In Java 1.5, or Java 5, they rewrote many of the collection classes, like List, Iterator, HashMap, etc."
4723056,1,0,4,java.util.HashMap,What's cheaper: Traversal using n iterators of a single ConcurrentHashMap or n instances of a HashMap.
4723056,1,0,4,java.util.HashMap,"Do do this I am asking myself if it's cheaper (primary in sense of cpu utlization, secondary in memory):  to provide each consumer thread a seperate instance of a HashMap."
4726977,2,0,1,java.util.HashMap,"I would keep a separate HashMap from queue objects to Integers, and a running count of the total number of objects you've ever added to the queue (so when you insert object X, the counter means that object X is the Nth object inserted)."
4726977,2,0,1,java.util.HashMap,"Every time you add an object to the queue, add it to the HashMap as the key; the value is the current value of the counter."
4726977,2,0,1,java.util.HashMap,"When you need to ask which of two objects is first, look them up in the HashMap and compare the ordinals."
4733461,2,0,2,java.util.HashMap,request.getParameterNames () uses HashMap  internally to store the  name value pairs of form fields.
4746010,2,0,3,java.util.HashMap,"A HttpServletRequest saves all it's parameters in a HashMap, and a HashMap has NO ORDER."
4737364,1,0,0,java.util.HashMap,"In Java, Why cannot we use generically a common DataStructure like HashMap for all the scenarios?"
4737364,1,0,0,java.util.HashMap,"Since, the hardware is becoming very cheap and has very huge memory available these days.Why cannot we use generically a common DataStructure like HashMap for all the scenarios ?"
4737399,2,1,5,java.util.HashMap,"String, any of the auto-boxed primitives), then a HashMap will be perfectly acceptable in general."
4737399,2,1,5,java.util.HashMap,"Not to mention that if you know (but are unable to change) that your keys have a poorly-implemented hashCode() method, especially if it's inconsistent with equals, then HashMap may be a poor choice anyway."
4737399,2,1,5,java.util.HashMap,"While you can write some code with lazy-init semantics around a standard HashMap, by packing all of this logic inside the map implementation itself it becomes easier to test for correctness - and the client logic is much simpler."
4737447,2,0,1,java.util.HashMap,"While a HashMap is useful in many situations, and yes, hardware is becoming very cheap, there are situations where information should be kept sequentially or at least in some type of order."
4737447,2,0,1,java.util.HashMap,a HashMap may not be the easiest to work with.
4737447,2,0,1,java.util.HashMap,"A HashMap could still be used in any situation that I can think of, but it could be easier, and definitely more computationally efficient to use a different structure in many situations."
4737486,2,0,2,java.util.HashMap,"A HashMap is a Map, which is not always what you want - sometimes a List, or a Stack is most appropriate."
4737505,1,0,3,java.util.HashMap,"Getters and setters and container objects (ArrayList, HashMap, etc)."
4738162,1,0,3,java.util.HashMap,"My structure is HashMap<String, Object>."
13029252,2,0,0,java.util.HashMap,"Map<.String,String> hashmap=new HashMap<.String,String>().. here in this line ...map and string both are implictly serializable , so we dont need to implement serializble for these explicitly but if you put your own object that must be serializable."
4738196,2,0,1,java.util.HashMap,HashMap and String already implement this interface and thus can be serialized successfully.
4738196,2,0,1,java.util.HashMap,"If you do run into problems, try serializing a simple HashMap<String, String> with some dummy values."
4743731,1,0,3,java.util.HashMap,Implementing a sort of key-value pair (not essentially a HashMap) in Java.
4743731,1,0,3,java.util.HashMap,"In my view, a HashMap makes it difficult to implement this type of mapping."
4748188,1,0,2,java.util.HashMap,What can cause HashMap containsKey() to fail with String as the key?
4749248,2,0,0,java.util.HashMap,"If each node only has a reference to its parent, you do need to build a tree; but you can do it in a single pass over the data using a HashMap to map each node to a list (which you build) of its children."
4749094,1,0,11,java.util.HashMap,In my debugger I see there's a simple HashMap called resourceEntries in the classLoader.
4749207,1,0,9,java.util.HashMap,"And Eclipse is pointing at HashMap<String, Byte> with its warnings."
4761654,2,0,1,java.util.HashMap,"If you know you have about 500 words, I'd suggest store the 500 words and their masks in a HashMap with initial capacity of about 650 (JDK doc says hashing is most efficient with a load factor of 0.75)."
4761654,2,0,1,java.util.HashMap,Put in the word-mask pairs in the HashMap with a for loop.
4761654,2,0,1,java.util.HashMap,"The biggest bang for the buck (HashMap) you get is that the get/put operations (searching for the key) are done in constant time, which is better than O(n) in array and even O(log(n)) if you do binary search on sorted array."
4761654,2,0,1,java.util.HashMap,"Armed with the HashMap, you can build up a SringBuffer while filtering those 85KB of text."
4761654,2,0,1,java.util.HashMap,"PS If you are building the map at a server and doing the filtering somewhere else (at a client) and need to transport the Dictionary, HashMap won't do - it cannot be serialized."
4761654,2,0,1,java.util.HashMap,"If on the same machine, HashMap is more memory efficient."
4762356,2,1,1,java.util.HashMap,"I am using a Trove TIntObjectHashMap to store this information, but you could do the same with a Java HashMap."
4767249,1,0,0,java.util.HashMap,Iterating through HashMap by values.
4767249,1,0,0,java.util.HashMap,"I need to loop through a HashMap, but to give importance to the values' order."
4767266,2,0,4,java.util.HashMap,"If you still want to keep your Map a HashMap, you could use one of Collections' numerous functions for getting sorted collections (e.g."
4768416,1,0,1,java.util.HashMap,I have a Java HashMap object that contians a User object and a Room object.
4769111,1,0,7,java.util.HashMap,"I wondering how can I accomplish the same thing with Java, I guess it has something to do with HashMap?"
4769894,2,1,18,java.util.HashMap,"for instance, in Perl I can do the following:       $hash{AREA_CODE}->{PHONE}->{STREET_ADDR}   I wondering how can I accomplish the same thing with Java, I guess it has something to do with HashMap?"
4769162,2,0,5,java.util.HashMap,"See the Map interface and its implementations, specially HashMap."
4769746,1,0,0,java.util.HashMap,“The key difference between the two is that access to the Hashtable is synchronized on the table while access to the HashMap isn't.
4771506,1,0,0,java.util.HashMap,"It is important that the whole map is not locked which is why I haven't used a synchronized block around a normal HashMap as even if there are threads waiting on key A, key B should still be allowed to be updated as long as there are no threads already updating the value stored for B."
4774814,1,0,0,java.util.HashMap,"How should I do this with use of StringBuilder or StringBuffer, possibly HashMap?"
4776920,1,0,3,java.util.HashMap,HashMap as a static member in java.
4776920,1,0,3,java.util.HashMap,I want to carry a HashMap over as a static member for each instance of a new class.
4776920,1,0,3,java.util.HashMap,"Every time I try to .get or.put into my HashMap, however, I get a NullPointerException."
4776920,1,0,3,java.util.HashMap,"I'm doing: public class EmailAccount { private static HashMap<String,Integer> name_list; and then name_list.put(last_name, occurences); Even name_list.containsKey(last_name); returns NullPointer."
4776931,2,0,1,java.util.HashMap,"You created a field that can hold a HashMap, but you didn't put anything inside of it You need to put a new HashMap<String, Integer>() into your field."
4776934,2,0,5,java.util.HashMap,"While it may seem obvious to you that you want a HashMap, so it should just implicitly initialize it, Java doesn't know if you want in fact a HashMap, or maybe a HashMap subclass, like LinkedHashMap Class-level primitives, like int can be left just like private static int someNumber; and won't throw a NullPointerException by accessing it--but that's because primitives can't be null."
4777622,1,0,9,java.util.HashMap,"List only takes one argument, and HashMap won't allow duplicates (as far as I know)."
4777636,2,1,20,java.util.HashMap,"You can use the Entry<U,V> class that HashMap uses but you'll be stuck with its semantics of getKey and getValue: code."
4786997,2,0,2,java.util.HashMap,"Unfortunately if you need to perform a number of methods atomically, you have to use locking, in which case using concurrent hash map doesn't help and you may as well use a plain HashMap."
4794953,1,0,3,java.util.HashMap,"For a HashMap that maps from a custom class, how to make it so that two equivalent keys will map to say value?"
4799780,2,0,0,java.util.HashMap,People use various Lists and HashMap instead.
4804725,2,0,0,java.util.HashMap,Store the data in a HashMap 2.)
4819822,2,0,2,java.util.HashMap,What I've done for similar substitutions is create a Map (usually HashMap) with the Unicode characters as the keys and their substitute as the values.
4814867,1,0,8,java.util.HashMap,"Possible Duplicate: How to Initialise a static Map in Java   How to fill HashMap in Java at initialization time, is possible something like this ?"
4814981,2,0,1,java.util.HashMap,Some remarks to Jigar Joshie: the the type of sizeNeeded is not a HashMap anymore.
4814981,2,0,1,java.util.HashMap,It is a subclass of HashMap.
21886468,2,0,2,java.util.HashMap,Besides disk backed TreeMap and HashMap it gives you other collection types.
4815678,2,1,9,java.util.HashMap,"The map implementations (HashMap, HashTable) max out around 3-4Million keys/GB of memory for very simple key/value pairs and in most cases the limit is much lower."
4815761,1,0,0,java.util.HashMap,Converting a HashMap into Clojure map performs not as excepted from a java call.
4815761,1,0,0,java.util.HashMap,"I want to pass a List<HashMap<String,String>> to a Clojure function in which I want to use the inner HashMaps as regular Clojure maps but I cannot get values from the map with using the :key function (which works fine for a regular Clojure map) I use the into {} function but it does not make what I except it to make."
4815761,1,0,0,java.util.HashMap,And in the fourth println it is obvious that the HashMap is not properly converted into Clojure map.
4815761,1,0,0,java.util.HashMap,(I know I could use the get() function of the HashMap but it would be more comfortable to able to use it as a Clojure map)
4815896,2,0,3,java.util.HashMap,HashMap is a hash table.
4815898,2,1,38,java.util.HashMap,"You can't do this with HashMap, which doesn't maintain an insertion order anywhere in its data."
4816359,2,0,1,java.util.HashMap,You should take a look at HashMap.
4816359,2,0,1,java.util.HashMap,"Something like HashMap<Integer, List<Integer>> seems to work well for your case."
4820765,2,0,0,java.util.HashMap,"If this is a homework, then all I can say is: use String.split() and HashMap<String,Integer>."
9142492,2,0,0,java.util.HashMap,/*count no of Word in String using TreeMap we can use HashMap also but word will not display in sorted order */ code.
4825280,1,0,0,java.util.HashMap,"My solution (nested HashMaps):  The main object, DataContainer has a HashMap which contains property names as keys."
4828605,2,0,1,java.util.HashMap,"I can't tell for ehcache, but I've been having a similar problem for HashMap used as cache."
4829373,2,1,5,java.util.HashMap,That would give you a Java HashMap instance as a JavaScript variable.
4830989,2,0,0,java.util.HashMap,http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html#keySet() This returns you a Java Set of the keys :) Another way is to iterate the Map and store the keys in Array/ArrayList
4832543,2,1,7,java.util.HashMap,"Second, the implementation should be a HashMap, not a HashTable."
4832543,2,1,7,java.util.HashMap,"HashTable synchronizes everything, where as HashMap does not."
4833336,1,0,22,java.util.HashMap,Should I just extend HashMap?
4833378,2,0,0,java.util.HashMap,"This assumes that your myMap is a global variable (for simplicity's sake), if that's not what you want then you can also extend Map or HashMap into something like MyMap and just include this extra function."
4838584,2,0,0,java.util.HashMap,Overall it's not very different from the interface approach but it creates dumb instances (like HashMap/Hashtable  for bucket entries).
4838067,2,1,4,java.util.HashMap,The super(map) invokes the HashMap constructor that copies all mappings of the argument map to the newly created map.
4838067,2,1,4,java.util.HashMap,From the docs:  Constructs a new HashMap with the same mappings as the specified Map.
4838400,1,0,8,java.util.HashMap,Java HashMap duplicate elements.
4841849,1,0,1,java.util.HashMap,STACK java.util.ConcurrentModificationException stack trace: java.util.ConcurrentModificationException                 at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)                 at java.util.HashMap$ValueIterator.next(HashMap.java:822)                 at xxx.xxxxx.xx.xxxxxxx.end(RoleOrganizer.java:108)                 at (xxxxxxxxx.java:568)                 at xxx.xxxx.xxxxxxx.handleRequest(xxxxHandler.java:74)                 at com.xxxxx.server.JavaInstanceMethod.execute(JavaInstanceMethod.java:33)                 at xx.xxxxxxx.execute(AppServer.java:1469)                 at xxx.xx.executeRequest(xxxxxjava:1269)                 at xxx.xxxxx.server.xxxx.doGet(xxxxx.java:350)                 at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)                 at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)                 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)                 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)                 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)                 at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)                 at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)                 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)                 at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)                 at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)                 at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)                 at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)                 at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)                 at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)                 at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)                 at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:690)                 at java.lang.Thread.run(Thread.java:619) Code Below with stack error line number 108 indicated Line 87  anpublic void end() { code.
4842852,2,0,3,java.util.HashMap,"As a serialized form of an in-memory hashmap it is a different matter, though, as HashMap lookups are very fast."
4843095,2,1,16,java.util.HashMap,"This creates an anonymous subclass of HashMap, and populates it in the instance initializer."
4844747,2,0,1,java.util.HashMap,"Java HashMap duplicate elements  If you do not need duplicate key/value pairs, then just use standard java HashMap implementation of the Map interface."
4846206,2,0,1,java.util.HashMap,"You would have a HashMap<String, Boolean> where each variable name key has an associated Boolean value."
4846206,2,0,1,java.util.HashMap,The VariableNode.eval() method looks up the value of the variable in your HashMap and returns it.
4846716,2,0,2,java.util.HashMap,What about using some sort of named-map construct instead of an array such as a HashMap?
4846733,2,0,0,java.util.HashMap,"Instead of using an array, you could use a HashSet or even HashMap without worrying about open slots or the max capacity your array can hold."
4846733,2,0,0,java.util.HashMap,You also don't need to worry about adding duplicate objects in HashSet or HashMap.
4846733,2,0,0,java.util.HashMap,"With HashMap, it allows you to get your object by whatever key you assigned to the object... makes your code looks cleaner without all the loopings."
4846832,2,0,1,java.util.HashMap,"I suggest you might want to switch to either a hashing data structure (e.g., a HashMap) or a sorted data structure to improve your lookup and search calls."
4849961,2,0,1,java.util.HashMap,But your best bet is likely to be a HashMap.
4851681,1,0,8,java.util.HashMap,how to get the size of a HashMap using jstl.
24521897,2,0,0,java.util.HashMap,You can see an example to find the JSTL HashMap size here We are using HashMap size method here code.
4856317,2,0,1,java.util.HashMap,"Moreover, the time to insert or remove an element from a HashMap is expected constant time, which is extremely fast."
4856317,2,0,1,java.util.HashMap,"That said, I'd suggest reworking the system to use HashMap instead of ArrayList before doing this; the savings in time and code complexity will really pay off."
4860498,2,0,1,java.util.HashMap,"But please keep in mind, that most things come with an overhead (like the ""hash"" in HashSet/HashMap)."
4860662,2,0,1,java.util.HashMap,"HashMap is far form the fastest solution, only theoretically it's O(1)."
4860662,2,0,1,java.util.HashMap,Alternatively use self unwrapped long[]/int[] arrays (depending on the target architecture 32/64) Why HashMap ain't good?
4866028,2,1,6,java.util.HashMap,"ThreadLocals are also very fast, you can think of it as a HashMap<Thread,Object>, which is always queried with Thread.getCurrentThread()."
6104379,2,0,4,java.util.HashMap,"Converting to an intermediate object like HashMap, Map, Set, or even toString() is much more efficient."
4870756,2,1,1,java.util.HashMap,"The GameGui class had a GameModel field called gameModel and holds a collection of JButtons (actually a HashMap), and in each button's ActionPerformed method, the model's advancePlay() method is called and a private method called enablePlayerTurns() is called that enables or disables the player JButtons depending on the value of the corresponding player in the model: code."
4871802,2,0,1,java.util.HashMap,The way you've structured your code means that the HashMap will only ever contain two key/value pairs.
4871802,2,0,1,java.util.HashMap,"So while you've written five put lines, only two objects will ever be placed in the HashMap."
4871375,2,0,1,java.util.HashMap,HashMap is-a Map which cannot contain duplicate keys.
4872138,2,0,0,java.util.HashMap,Consider using a HashTable or a HashMap using the date strings as keys and price as values.
4872759,2,1,2,java.util.HashMap,"I also took the liberty to address some flaws in your code:  Don't use Raw Types in new code (use generics) Don't use Vector, Hashtable or Enumeration, use ArrayList<E>, HashMap<K,V>, Iterator<E> (respectively) instead."
4875129,1,0,1,java.util.HashMap,I have an Object[] which entails lots of Objects of the type HashMap.
4875129,1,0,1,java.util.HashMap,The HashMap looks like this: code.
4875129,1,0,1,java.util.HashMap,"I have tried to cast it to HashMap[], however no luck."
4875189,2,1,3,java.util.HashMap,However i doubt that you really have a HashMap array in there.
4875216,2,0,3,java.util.HashMap,"Even if an array of Objects only contains HashMap instances, it's still an array of Objects, and can't be cast to an array of HashMaps."
4875216,2,0,3,java.util.HashMap,"You may, however, iterate over the array, and cast each element to a HashMap (or Map)."
4878259,2,0,186,java.util.HashMap,"Here a compilation of most common ways to achieve this:  Send data inside intent Use a singleton class Use application singleton Static fields HashMap of WeakReferences Persist objects (sqlite, share preferences, file, etc.)"
4878259,2,0,186,java.util.HashMap,"HashMap of WeakReferences Same idea, but allowing the garbage collector to removed unreferenced objects (e.g."
7945937,2,0,9,java.util.HashMap,"here:  http://developer.android.com/resources/faq/framework.html#3   Primitive Data Types Non-Persistent Objects Singleton class - my favorite :D A public static field/method A HashMap of WeakReferences to Objects Persistent Objects (Application Preferences, Files, contentProviders, SQLite DB)"
4881910,2,1,4,java.util.HashMap,That then uses a LinkedHashMap instead of a HashMap to back the set.
4885095,1,0,31,java.util.HashMap,"It would even work a bit better, since the least significant bits would ""change as much as possible"", e.g., for an enum containing up to 16 elements and a HashMap of size 16, there'd be for sure no collisions (sure, using an EnumMap is better, but sometimes not possible, e.g."
4885095,1,0,31,java.util.HashMap,"Summary of the answers Using Object.hashCode() compares to a nicer hashCode like the one above as follows:  PROS  simplicity  CONTRAS  speed more collisions (for any size of a HashMap) non-determinism, which propagates to other objects making them unusable for  deterministic simulations ETag computation hunting down bugs depending e.g."
4885405,2,1,7,java.util.HashMap,"Given the normally small number of instances of an enum class, and the speed of the equals method, I wouldn't be surprised if the HashMap lookup time was bigger with your algorithm than with the current one, due to its additional complexity."
4886973,1,0,8,java.util.HashMap,"The problem is, I feel silly doing these linear lookups when I could just be using a HashMap<String, PresentationChannel>."
4905700,1,0,2,java.util.HashMap,"Implement using existing Synchronized Java classes (Hashtable, StringBuffer, Vector)  or synchronize the blocks when we implement Unsynchronized Java classes (HashMap, StringBuilder, ArrayList) or create a synchronized collection objects from Collections.synchronizedXXX() method and then use it (of course, i cant synchronize StringBuilder like this.!!)"
4907185,2,1,8,java.util.HashMap,"However, if you are mapping to a HashMap, then you should specify the javaType explicitly to ensure the desired behaviour."
4911682,1,0,0,java.util.HashMap,Does ConcurrentLRUCache/HashMap ever touch disk?
4925264,2,1,4,java.util.HashMap,You would get the same warning if you did something like this Map myMap = new HashMap<string>();.
4928079,2,1,2,java.util.HashMap,"There are extension points in LinkedHashMap for building LRU caches, and then of course there's the people's favourite, SoftReference, in combination with a HashMap."
4925389,1,0,3,java.util.HashMap,What's the purpose of HashMap.Entry.recordAccess and recordRemoval?
4925389,1,0,3,java.util.HashMap,"If you take a look at the code for HashMap, you'll find empty methods called recordAccess and recordRemoval."
4925469,2,0,0,java.util.HashMap,"However, if you were subclassing HashMap you could subclass the backing HashMap.Entry as well to receive such events easily."
4928687,2,1,4,java.util.HashMap,"Some things Ehcache can give you, that you would have to manage yourself with a HashMap."
4931903,2,0,0,java.util.HashMap,"You can use new Hashtable(Map t), just be aware that the second Hashtable will contain the same instances as the first one (not copies of the objects)... And by the way you should consider using HashMap rather then Hashtable, Hashtable is an older class that is synchronized where HashMap is the unsynchronized equivalent, the other difference is that HashMap also permits null..."
4932220,2,1,1,java.util.HashMap,"If your C class or one of its interfaces also supplies a public .clone() method (and this really does what you want for single C objects), a simple way without serialization would be this (using HashMap instead of Hashtable, but it does not really matter here): code."
4932259,1,0,4,java.util.HashMap,Which is better option for HashMap?
4932259,1,0,4,java.util.HashMap,Which is better option to use:  HashMap with initial size: HashMap hm = new HashMap(10); or HashMap without initial size: HashMap hm = new HashMap()?
4932259,1,0,4,java.util.HashMap,Also what is loadfactor and modcount in HashMap's property?
4932259,1,0,4,java.util.HashMap,When I debug my code in eclipse and look at value of HashMap it shows a property named loadfactor with a value of 0.75 and a property named modcount with a value of 3.
4932259,1,0,4,java.util.HashMap,in which i store all send/received messages in HashMap.
4932376,2,0,1,java.util.HashMap,"Strictly speaking you should not care about the internal fields of the HashMap (loadfactor and modcount are fields, not properties: properties would have getters/setters)."
4932398,2,1,8,java.util.HashMap,Have you checked the HashMap API Javadoc?
4932398,2,1,8,java.util.HashMap,"The capacity is the number of buckets in the hash table The initial capacity is simply the capacity at the time the hash table is created The load factor is a measure of how full the hash table is allowed to get before its capacity is automatically increased  On setting the initial size too high:  Iteration over collection   views requires time proportional to   the ""capacity"" of the HashMap instance   (the number of buckets) plus its size   (the number of key-value mappings)."
4932398,2,1,8,java.util.HashMap,"Higher   values decrease the space overhead but   increase the lookup cost (reflected in   most of the operations of the HashMap   class, including get and put)."
4933715,2,0,1,java.util.HashMap,"So if you use a HashMap, it should be Map<Integer, String> The primary benefit of a HashMap over other data structures is the constant lookup time: no matter how big the map gets, the time it takes to retrieve a value for a given key stays the same."
4933715,2,0,1,java.util.HashMap,"However, since you're not looking for a specific word, just any word, the HashMap benefit doe not apply to you case."
4942253,2,1,3,java.util.HashMap,"However, if you wanted to ""roll your own"" code, and you have enough memory (probably 1Gb), your application could:  parse the file into sequence of words, filter out stopwords, build a ""reverse index"" as a HashMap<String, List<Integer>>, where the String values are the unique words, and the List<Integer> objects give the offsets of the words' occurrences in the file."
4942468,1,0,3,java.util.HashMap,Inserting enum values into HashMap.
4942468,1,0,3,java.util.HashMap,I am doing a program in which i need to insert enum values into a HashMap.
4942468,1,0,3,java.util.HashMap,Through the program I need to implement a HashMap containing 4 threadpools (whose names act as key) corresponding to which i have a ThreapoolExcecutor object.
4942499,2,1,6,java.util.HashMap,You may want to consider using an EnumMap instead of a HashMap here.
4942499,2,1,6,java.util.HashMap,"EnumMap is much faster and more space-efficient than a HashMap when using enumerated values, which seems to be precisely what you're doing here."
4942511,2,0,0,java.util.HashMap,"You're using a String as the key of your HashMap, you should be using the Enum class instead."
4943284,1,0,8,java.util.HashMap,"Important detail, when I change the type to java.lang.Object in both my Class and the context xml it does get wired In fact, I can cast it to a HashMap in my code and get everything to work."
4943428,2,0,0,java.util.HashMap,"I'm pretty sure your factory method returns java.util.Map, not java.util.HashMap, so I guess you could probably do this: code."
4943436,2,1,4,java.util.HashMap,"The injection can only be performed safely if Spring can figure out that the bean instance (a HashMap) was actually instantiated as a HashMap<String, String>."
4943436,2,1,4,java.util.HashMap,"Map instead of HashMap, or a raw HashMap rather than a HashMap<String, String>."
4944089,1,0,2,java.util.HashMap,HashMap for enum as key.
4944089,1,0,2,java.util.HashMap,"I am confused as of how to initialize the HashMap for every object been called by some other process ..To make clear : My program, MyThreadpoolExcecutorPgm.java initializes a HashMap My Progran AdditionHandler.java requests a thread from the HashMap by passing ThreadpoolName (enum)."
4944089,1,0,2,java.util.HashMap,"I am getting ""No thread available from HashMap"" message."
5815927,2,0,2,java.util.HashMap,Or you may also use a Java Fuzzy HashMap (an extention to java hashMap that allows fuzzy search): http://sourceforge.net/projects/fuzzyhashmap/ I think it is exactly what you need.
4947244,2,0,0,java.util.HashMap,"If you have several forces acting on each node, you need to map a node to a collection of fources, for instance by using a HashMap<Node, Set<Vector>>."
4954613,2,0,1,java.util.HashMap,In many cases I have seen it to be actually faster than a HashMap.
4956714,1,0,1,java.util.HashMap,where the MyConverter#convert() method would be called for any instance of a Map (for instance a HashMap)?
4956844,1,0,72,java.util.HashMap,HashMap with multiple values under the same key.
4956844,1,0,72,java.util.HashMap,Is it possible for us to implement a HashMap with one key and two values.
4956844,1,0,72,java.util.HashMap,Just as HashMap?
21871888,2,0,0,java.util.HashMap,"and in HashMap we can put in this way, code."
4956865,2,0,38,java.util.HashMap,"No, not just as a HashMap."
4956865,2,0,38,java.util.HashMap,You'd basically need a HashMap from a key to a collection of values.
7277323,2,1,20,java.util.HashMap,You'll need to import HashMap at the very least.
7277323,2,1,20,java.util.HashMap,Now you've got a HashMap that maps all the currently existing components in your frame/content pane/panel/etc to their respective names.
7277323,2,1,20,java.util.HashMap,"If you plan on adding, removing, or renaming components at any point during runtime, I would consider adding methods that modify the HashMap according to your changes."
4961558,1,0,3,java.util.HashMap,"I want to have the website available in multiple languages, so I've created a HashMap for each language I plan to support, and am finding the text via map.get(""identifier"") (with some other code, of course.)"
4964621,2,0,1,java.util.HashMap,"There are alternatives (though not good ones, IMO):  Use a generic map type such as HashMap or Properties to represent the objects as name value pairs."
4967961,2,0,4,java.util.HashMap,"It's basically a question of what's faster:  generating a cache key and querying a HashMap or iterating over all methods and querying for parameter compatibility  My guess: for large classes (many methods), the first method will win, otherwise the second will"
4968567,2,0,0,java.util.HashMap,What you need is not two HashMap but only one.
4968567,2,0,0,java.util.HashMap,And the map will be HashMap where the key is user_id and the value is Compose.
4968573,2,0,0,java.util.HashMap,The problem is that you're incrementing the number of elements in your first HashMap as you go along.
4968573,2,0,0,java.util.HashMap,Think about what the map HashMap contains during the first and the second add operations to multi.
4968573,2,0,0,java.util.HashMap,To fix this you will need to create a new HashMap each time you add something to multi code.
4968574,2,0,0,java.util.HashMap,Now use this object as the key in your HashMap (a timestamp should probably be a long / Long): code.
4968576,2,0,0,java.util.HashMap,"You are adding the values to the old Hashmap, but you need to create a secound HashMap."
4968578,2,0,0,java.util.HashMap,"You would need to create a new HashMap object for your key every time else when you change the elements on map, this change will filter through to multi."
4972150,2,0,0,java.util.HashMap,How exactly would you like to use Map (HashMap) and where do you see problem with that?
4979163,2,1,2,java.util.HashMap,The HashMap needs to be wrapped in an object list: code.
4972160,1,0,3,java.util.HashMap,Question: Is there a property or some HashMap/Table available to servlets where a few variables can be stored during the manual startup?
4972558,2,0,2,java.util.HashMap,"If collection is specifically a HashMap, the order of the collection's elements are indeed tossed out the window."
4975068,1,0,3,java.util.HashMap,XMLAdapter for HashMap.
4975068,1,0,3,java.util.HashMap,but I want an adapter that will convert this into a HashMap code.
10908786,2,0,0,java.util.HashMap,They have given a similar example for HashMap.
4975506,1,0,1,java.util.HashMap,"Guys, this is silly, but i got to ask You have a     private Map<String, String> dbMap = new HashMap<String, String>(); i am putting stuff in after having read the file like: code."
5129924,2,1,2,java.util.HashMap,Think of JNDI as a HashMap where key is a String and value is either a concrete object or another HashMap of the same structure.
4980757,1,0,34,java.util.HashMap,"If I implement my own hashing function and use it as part of a look-up table (i.e. a HashMap or Dictionary), what strategies exist for dealing with collisions?"
4980789,2,0,5,java.util.HashMap,"If I implement my own hashing function   and use it as part of a look-up table   (i.e. a HashMap or Dictionary), what   strategies exist for dealing with   collisions?"
4980796,2,0,11,java.util.HashMap,"I strongly suggest you to read this blog post which appeared on HackerNews recently:  How HashMap works in Java In short, the answer is  What will happen if two different   HashMap key objects have same   hashcode?"
4980796,2,0,11,java.util.HashMap,And keys   equals () method will be used to   identify correct key value pair in   HashMap.
4981071,2,0,2,java.util.HashMap,"As there is some confusion about which algorithm Java's HashMap is using (in the Sun/Oracle/OpenJDK implementation), here the relevant source code snippets (from OpenJDK, 1.6.0_20, on Ubuntu): code."
31161193,2,0,1,java.util.HashMap,This is used in Java HashMap/Hashtable to avoid collisions.
4989408,1,0,4,java.util.HashMap,I want to implement a HashMap with a key with 2 components.
4989501,2,0,0,java.util.HashMap,"It’s common usage of HashMap, the point is you have to define (override) equals() and hashCode() in class Key properly."
4993392,2,0,2,java.util.HashMap,HashMap) with String as key
4993421,2,0,0,java.util.HashMap,"Are you looking for the HashMap<k,v>() class?"
5002597,2,0,3,java.util.HashMap,A HashMap or other map structure would seem to make more sense.
5004732,1,0,2,java.util.HashMap,"I have an ArrayList<HashMap<String, String>>."
5008701,2,0,3,java.util.HashMap,"Its only goal is to generate sufficiently distributed hash codes for different strings so that HashMap, HashSet and all other hash-based collections are efficient when holding strings."
5008940,1,0,0,java.util.HashMap,"I plan to create a representation of a 2D (topographical) map in Android (3.0) in the following way  a class MapCoordinate, which is just a 'struct' and consist of public attributes x,y of type int and represents a MapCoordinate a class MapPoint (not a good name probably), which encapsulates methods to access and alter data of a point in a map (for one map coordinate) a class Map, which has one instance / Map (there is only one in my app) and encapsulates a Map by having a HashMap: code."
5014325,2,0,1,java.util.HashMap,";)   You are not creating enough objects to really matter, but one way to reduce its consumption is to use a POJO instead of a HashMap."
5014371,2,0,0,java.util.HashMap,"Since you want an ArrayList<<HashMap<String, String>>, there's nothing wrong."
5015594,1,0,0,java.util.HashMap,multiple HashMap implementation.
5019851,1,0,0,java.util.HashMap,I want to index every object according to its type and id number (which every EntityProxy has - something simple like creating a HashMap for each type.
5028782,2,0,1,java.util.HashMap,So I propose a re-design where you rely on HashMap<String> and HashSet<String>.
5028782,2,0,1,java.util.HashMap,"The main value of a HashMap is the constant look-up time, meaning the performance will not get worse (read more on Wikipedia if you're interested in how it works)."
5029036,2,0,0,java.util.HashMap,Returns true HashMap implements Map but there is nothing written such.
5031954,2,0,36,java.util.HashMap,"To sum all this stuff up, here is a listing of what will work or won't work with the different ways to handle equals/hashCode:   EDIT: To explain why this works for me:  I don't usually use hashed-based collection (HashMap/HashSet) in my JPA application."
5034039,1,0,1,java.util.HashMap,"I have an assignment, This is my HashMap initialization.."
5034081,1,0,3,java.util.HashMap,I'm trying to put some key values in HashMap and then trying to sort out using TreeMap as below.
5040753,1,0,11,java.util.HashMap,"As per Sun Java Implementation, during expansion, ArrayList grows to 3/2 it's initial capacity whereas for HashMap the expansion rate is double."
5040753,1,0,11,java.util.HashMap,"As per the implementation, for HashMap, the capacity should always be in the power of two."
5040753,1,0,11,java.util.HashMap,That may be a reason for HashMap's behavior.
5040753,1,0,11,java.util.HashMap,"But in that case the question is, for HashMap why the capacity should always be in power of two?"
5041789,2,0,5,java.util.HashMap,for HashMap why the capacity should always be in power of two?
5041314,2,0,3,java.util.HashMap,"The way HashMap is designed/implemented its underlying number of buckets must be a power of 2 (even if you give it a different size, it makes it a power of 2), thus it grows by a factor of two each time."
5040806,2,0,0,java.util.HashMap,"Now when the capacity of a HashMap is reached, size is extended and existing data is re-distributed with the new buckets."
5041357,2,0,0,java.util.HashMap,A general rule to avoid collisions on Maps is to keep to load factor max at around 0.75 To decrease possibility of collisions and avoid expensive copying process HashMap grows at a larger rate.
5040880,2,1,7,java.util.HashMap,"For the HashMap, it is creating a new backing array and putting all map entries in the new array."
5040892,2,0,0,java.util.HashMap,"I can't give you a reason why this is so (you'd have to ask Sun developers), but to see how this happens take a look at source:  HashMap: Take a look at how HashMap resizes to new size (source line 799) code."
5046750,1,0,2,java.util.HashMap,"This type might represent, for example, a HashMap."
5047396,1,0,0,java.util.HashMap,Note:  It is my understanding that util:map will default to a Java type of HashMap.
5052160,2,1,5,java.util.HashMap,"Map Implementations:  The three general-purpose Map   implementations are HashMap, TreeMap   and LinkedHashMap."
5052160,2,1,5,java.util.HashMap,"If you need   SortedMap operations or key-ordered   Collection-view iteration, use   TreeMap; if you want maximum speed and   don't care about iteration order, use   HashMap; if you want near-HashMap   performance and insertion-order   iteration, use LinkedHashMap."
5052155,2,0,1,java.util.HashMap,HashMap is usually the default choice.
5052157,2,0,1,java.util.HashMap,HashMap is most commonly used for such Key-Value pairs.
5052681,1,0,0,java.util.HashMap,Use HashMap in XMLRPC result.
5052681,1,0,0,java.util.HashMap,"I am new in Android development, and I am trying to receive a HashMap in RESULT by using XMLRPC but every time it's crash the application, this is my code please advice me : code."
5052812,2,0,0,java.util.HashMap,A HashMap as a base data structure (I say base because you could combine multiple structures to get you the most optimal storage) would probably be the best solution.
5052812,2,0,0,java.util.HashMap,"If you needed to access one of the cells and you implemented a linked list, it would require O(n) time to iterate the list to get to that cell, whereas a HashMap would only require O(1) time to access what you want."
5052841,2,0,0,java.util.HashMap,To achieve the fast and scalable access to cells you should use HashMap with inner hash maps.
5052891,2,0,2,java.util.HashMap,"You don't need more than one data structure, a single HashMap will do."
5056708,1,0,4,java.util.HashMap,i am reading data from a text file and want to store HashMap in another HashMap..  code.
5058984,2,0,0,java.util.HashMap,HashMap in HashMap will cause problems in readability especially when it goes beyond two levels.
5057504,1,0,0,java.util.HashMap,"As you can see, the Set s and the keys of HashMap hm are have the same components, but was instantiated differently (k1 = k2)."
5058445,2,1,4,java.util.HashMap,"Additionally to .hashCode(), you should have an implementation of equals(Object), not (only) equals(DoubleKey<...>), since otherwise you'll have two independent methods here (and only the first one is actually called by the HashMap)."
5057560,1,0,0,java.util.HashMap,I couldn't really come up with a proper title for my question but allow me to present my case; I want to calculate a significance ratio in the  form: p = 1 - X / Y Here X comes from an iterative process; the process takes a large number of steps and counts how many different ways the process can end up in different states (stored in a HashMap).
5058125,2,1,17,java.util.HashMap,"Given a class definition MapImpl extends HashMap<T extends Comparable, Integer> and an instance of that class, you cannot find out what specific value of T was used in the code that created the instance, because that information does not exist."
5059046,1,0,0,java.util.HashMap,"I'm not able to navigate down to the HashSets in my datastructure I declared an array of Map[] and populated it with HashMap with K of Integer, and V of HashSet of String but was unable to add items to the HashSet."
5059059,2,0,1,java.util.HashMap,"You need to cast it to HashMap<Integer,HashSet<String>>."
5067621,2,0,35,java.util.HashMap,"The PHP arrays are in fact quite the same as a Java HashMap with an added ""max key"", so it would know which key to use next, and a strange iteration order (and a strange equivalence relation between Integer keys and some Strings)."
5062010,2,0,1,java.util.HashMap,"If you want an extremely fast implementation, a HashMap is actually a very good idea."
5062016,2,1,0,java.util.HashMap,There's no need to use a special data structure as simply using a HashMap should work well.
5062057,1,0,2,java.util.HashMap,Retrieving an iterator for a HashMap throws a cast exception.
5062057,1,0,2,java.util.HashMap,I have some relatively simple code I have made that is supposed to retrieve an iterator to a HashMap & print out the key pair values.
5062057,1,0,2,java.util.HashMap,"Exception in thread ""main"" java.lang.ClassCastException: java.util.HashMap$Entry cannot be cast to java.lang.String        at Delete.main(Delete.java:25)  Here is my code & I point out where line 25 is:   code."
5062192,1,0,1,java.util.HashMap,Weird Exception thrown on HashMap upon iteration.
5062192,1,0,1,java.util.HashMap,I have a problem with a HashMap I have created.
5062192,1,0,1,java.util.HashMap,"The exception is:  Caused by: java.lang.ClassCastException: java.util.HashMap$KeyIterator cannot be cast to javassist.bytecode.Descriptor$Iterator       at ContentTree.populateTree(ContentTree.java:39)  Why is this exception being thrown, is there something wrong with my HashMap?"
5064085,2,0,0,java.util.HashMap,"Example of your Query import java.util.HashMap; import java.util.Map; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.MapKey; import javax.persistence.OneToMany; @Entity public class Department {     @Id @GeneratedValue(strategy=GenerationType.IDENTITY)     private int id;     private String name;     @OneToMany(mappedBy=""department"")     @MapKey(name=""name"")     private Map students; code. }"
5064891,2,0,0,java.util.HashMap,Like this: interface ISimpleDelegate{ void doSomeLogic(Base b) } `Map delegates = new HashMap(); After this add your logic as anonymous classes that realizes ISimpleDelegate.
5066674,2,0,1,java.util.HashMap,"I don't think you should extend HashMap, you should manage an existing Map implementation from the outside: Add the leaves code."
5067088,2,1,2,java.util.HashMap,If you do not know where in the list the particular book is you have 2 choices: 1) iterate through the list until you find the book you want or 2) you can use a HashMap.
5067088,2,1,2,java.util.HashMap,Then you can put all your books in a HashMap keyed by an Integer id: code.
5073328,1,0,4,java.util.HashMap,Is it overkill to have a HashMap to avoid iteration?
5073436,2,0,1,java.util.HashMap,"It's either HashMap doing it, or we wrote our own iteration code."
5076740,1,0,15,java.util.HashMap,I'm using cyPair as a key in a HashMap and it's called in a very tight loop to retrieve values.
5189142,2,0,0,java.util.HashMap,It should outperform java.util.HashMap nicely as well.
5076813,2,0,1,java.util.HashMap,"And use this as your key in your HashMap Instead of HashMap<String,Whatever> use HashMap<Pair<String,String>,Whatever> In your tight loop instead of map.get( str1 + str2 ) you'd use map.get( Pair.create(str1,str2) )."
5080662,2,0,5,java.util.HashMap,You should look at the source of the HashSet constructor it calls... it's a special constructor that makes the backing Map a LinkedHashMap instead of just a HashMap.
5083410,1,0,0,java.util.HashMap,"Basically, I create a HashMap from item ID to integer and increment the integer every time I see an occurrence of the item."
5083410,1,0,0,java.util.HashMap,Apparently HashMap is not the optimal data structure here.
5083523,2,1,4,java.util.HashMap,"Actually, a HashMap is a reasonable solution here because you have to accumulate the totals."
5083523,2,1,4,java.util.HashMap,"After you have the HashMap, there are several ways to do things."
5083523,2,1,4,java.util.HashMap,"You're better off accumulating things in a HashMap where it's easy to look things up by ID, and then post-process to apply ordering by count."
5084898,2,0,0,java.util.HashMap,Then you can look at the HashMap documentation if you don't know how to use the class: http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html Hint: you will need to use HashMap.keySet() to see which departments have been entered.
5100042,2,0,0,java.util.HashMap,While HashMap always offers O(1);
5098842,2,0,1,java.util.HashMap,If you're doing this quite frequently you might consider creating a HashMap as the lookup time is constant.
5098854,2,0,0,java.util.HashMap,"You should consider using a HashMap instead, that way you will be able to store the items by their (unique, i guess) product code."
5098858,2,0,3,java.util.HashMap,"I'm guessing they aren't sequential, in which case you'd indeed need to use a HashMap."
5098858,2,0,3,java.util.HashMap,"When you store items in the HashMap, store them keyed by the information you'd like to use when you look them up: code."
5098873,2,0,3,java.util.HashMap,"You could have used hashcodes to speed things up, but for that your catalogue will have to be a HashMap"
5100398,1,0,0,java.util.HashMap,ConcurrentModificationException Program in java HashMap.
5100398,1,0,0,java.util.HashMap,"I google this program,I know I can using a ConcurrentHashMap instead of a plain HashMap, but I want to know ,why I using : code."
5100398,1,0,0,java.util.HashMap,"to create new Instance for HashMap,still throw ConcurrentModificationException ?"
5100458,2,0,1,java.util.HashMap,"In such cases, the HashMap iterator will throw a ConcurrentModificationException."
5106197,1,0,1,java.util.HashMap,"I have about 8000 files  to read the contents and have it in HashMap like (path,contents)."
5107732,2,0,0,java.util.HashMap,As mentioned a HashMap or HashSet can provide reasonable performance above what you've mentioned.
5107602,2,1,11,java.util.HashMap,"You may want to look into HashMap or HashSet, both of which give constant time retrieval, and it's as easy as going: code."
5107602,2,1,11,java.util.HashMap,"Additionally, HashSet (and HashMap for its keys) prevents duplicate elements."
5109731,1,0,1,java.util.HashMap,a message is then put into HashMap (simplified) code.
5113688,1,0,2,java.util.HashMap,Sortable HashMap-like data structure in Java?
5113688,1,0,2,java.util.HashMap,Is there some sort of data structure in Java that resembles a HashMap that can be sorted by key or value?
5114277,2,1,2,java.util.HashMap,Use HashMap as storage with Keys as UserName.
5114277,2,1,2,java.util.HashMap,You can check if user exists by performing containsKey method of HashMap.
5114283,2,0,2,java.util.HashMap,"What about using a HashMap, keyed on the name?"
5114283,2,0,2,java.util.HashMap,Then you could use containsKey() to see if the name's already in the HashMap before adding the entry.
5114889,2,1,7,java.util.HashMap,"For example Map (and HashMap) can have type parameters K and V for the types of keys and values, respectively."
5115858,1,0,0,java.util.HashMap,I am trying to pass a list of some data by storing each item's data in a HashMap and then storing all the HashMaps in a ArrayList and then passing it to the request object to the View.
5116677,2,0,1,java.util.HashMap,"Use a HashMap<String,Integer>, loop through the list of words and store the count ."
5116677,2,0,1,java.util.HashMap,Refer to the documentation here on how to use HashMap:  http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html
5117357,1,0,5,java.util.HashMap,How to get count the same values from HashMap?
5117357,1,0,5,java.util.HashMap,The values of my HashMap HM are as follows: code.
5117357,1,0,5,java.util.HashMap,"Here, I want to count the similar values in the HashMap HM."
5117453,2,0,0,java.util.HashMap,"Also, it is probably overkill to use a HashMap as the key if you are just storing two values."
5119508,2,1,3,java.util.HashMap,"A database would be one option (and bear in mind that there is one, Derby, built into the JDK); there are other ways of keeping simple key-value stores on disk (like a HashMap, but in a file), but there's nothing built into the JDK."
5122967,2,0,8,java.util.HashMap,"Look at the Map interface, and at the concrete class HashMap."
12418201,2,0,2,java.util.HashMap,A more convenient method to use an equivalent of associative array is to use a HashMap where you can use the key of the HashMap to provide the associative array quality.
5123859,2,0,1,java.util.HashMap,Why not just define the enum in a class that wraps the enum and a HashMap relating the enum values to resource id's?
5131145,2,0,0,java.util.HashMap,"Once you've understood how characters from files can be read into programs, read up on HashMap and LinkedList."
5136467,1,0,1,java.util.HashMap,Java HashMap adds value to the head of the list.
5136509,2,1,6,java.util.HashMap,"For example, the HashMap uses hashing to store its values, and the more randomly the hash function distributes its values the better the performance."
5136509,2,1,6,java.util.HashMap,It gives the speed of a HashMap while guaranteeing a predictable traversal order which is defined by the order in which you insert the elements.
5139661,1,0,2,java.util.HashMap,"My Hashmap as declared as HashMap<String, ArrayList<SortableContactList>> where SortableContactList list is a POJO class as  code."
5139701,2,1,0,java.util.HashMap,"The question remains, how to determine x, so maybe you should consider accepting the advice of MarcoS, implementing the HashMap as follows : HashMap<String, SortableContactList> And you should definitely consider implementing hashCode for your SortableContactList to ensure correct hashing , i.e. storing and retrieving the objects in a HashMap."
5139701,2,1,0,java.util.HashMap,"For details please consult this great advice from Effective Java EDIT : added MarcoS' advice of implemeting the HashMap as HashMap<String, SortableContactList>"
5147887,1,0,2,java.util.HashMap,"In Java, empty HashMap space allocation."
5147887,1,0,2,java.util.HashMap,How can i tell how much space a pre-sized HashMap takes up before any elements are added?
24062783,2,0,0,java.util.HashMap,In the latest version of Java 1.7 (I'm looking at 1.7.0_55) HashMap actually lazily instantiates its internal table.
24062783,2,0,0,java.util.HashMap,"So your HashMap, before you add anything to it at least, will occupy only the handful of bytes of object overhead and instance fields."
5149303,2,0,2,java.util.HashMap,Reasoning:  The Sun Java 1.6 implementation of HashMap has a fixed side top-level object and a table field that points to the array of references to hash chains.
5149303,2,0,2,java.util.HashMap,In a newly created (empty) HashMap the references are all null and the array size is the next power of two larger that the supplied initialCapacity.
5149361,2,0,2,java.util.HashMap,"In principle, you can:  calculate it by theory:  look at the implementation of HashMap to figure out what this method does."
5149361,2,0,2,java.util.HashMap,"So, we now have one quite small HashMap object (it contains only 3 ints, one float and one reference variable), and one quite big Entry[] object."
5149361,2,0,2,java.util.HashMap,Thus your 1000000-mappings HashMap (assuming an load factor > 1) would take ~28 MB on 32-bit-VMs and ~56 MB on 64-bit VMs.
5150997,1,0,1,java.util.HashMap,"commandMap = new HashMap(); commandMap.put(""SET_DISPLAY"", 0xD0); commandMap.put(""READ_ADC"", 0xD1); commandMap.put(""GET_PARAM"", 0xD2); commandMap.put(""SET_PARAM"", 0xD3); commandMap.put(""GET_IOVALUE"", 0xD4); commandMap.put(""SET_IOVALUE"", 0xD5);"
5153723,2,0,1,java.util.HashMap,"Declare interfaces rather than concrete types, i.e. use List and Map rather than ArrayList and HashMap ""true"" is clearly wrong - needs to be true, as the former is a String the latter a Boolean  As for the logic of your code, it would be easier for me to comment if you explained a bit more/better what you are trying to do."
5159038,2,0,0,java.util.HashMap,"Of course this is possible, java.util.HashMap is for example (basically) built without using java.util."
5159046,2,0,0,java.util.HashMap,Get the java.util.HashMap source (it is open source) and use it.
5159068,2,0,0,java.util.HashMap,Take a look at the source from java.util.HashMap
5158961,1,0,4,java.util.HashMap,So for example: a HashMap : {'root' => 'HashMap : {'file1.png' => byte[] content}}
5159346,2,1,2,java.util.HashMap,"So for example: a HashMap : {'root', 'HashMap : {'file1.png' => byte[] content}}  As I answered some time ago on another question, there is no single ""tree"" data structure (tree interface) in the Java API, since every use needs other features."
5159346,2,1,2,java.util.HashMap,"Your proposed HashMap-tree, for example, is not realizable in a type-save way - you would need wrapper objects somewhere."
5159194,1,0,2,java.util.HashMap,"What I want is to deserialize their JSON data into HashMap<String, Object>, where Object may be a String or a HashMap."
5163750,1,0,1,java.util.HashMap,I used the session.set/getAttribute() to pass my HashMap to another servlet.
5163750,1,0,1,java.util.HashMap,"On my next servlet, I will add a value to my HashMap but when I search for the value, it can't be read."
5164455,2,0,1,java.util.HashMap,"--- this is the way you are setting it HashMap itemList = (HashMap)session.getAttribute(""hashM""); --- this is the way you are retrieving it Use the same key ""itemList"" at both the places."
5166538,1,0,3,java.util.HashMap,"I can't really use MultiValueMap.decorate() on a synchronized HashMap, or have I misunderstood something?"
5166538,1,0,3,java.util.HashMap,"Question 2: I have another class that extends a HashMap to hold my experimental values, that are parsed in when the software starts."
5166803,2,0,2,java.util.HashMap,"To your second question: In order to ensure the immutability, i.e. that it is read-only, I would not inherit the HashMap but use it inside your class."
5166826,2,1,2,java.util.HashMap,I would have a class that provides your methods and has a HashMap as a private member.
5166826,2,1,2,java.util.HashMap,"As long as your methods don't change the internal state of the object or the HashMap, they won't have to be synchronised."
5169101,1,0,9,java.util.HashMap,"I am fully loading a java HashMap on initialization, but after initialization multiple threads will be reading the data from the HashMap."
5169274,2,0,4,java.util.HashMap,"If you have the HashMap declared as final, and you pre-initialize a local HashMap then store the global HashMap with the local, after constructor initialization that HashMap's contents are garunteed to be visibile."
5169137,2,0,0,java.util.HashMap,As long as the initialization is complete before reading starts there is no reason why all the contents of the HashMap would not be visible to every thread.
5203323,2,0,0,java.util.HashMap,"Given that you don't want to use the zero index, maybe you should try using a HashMap."
5203323,2,0,0,java.util.HashMap,"The HashMap is part of the Java Collections Framework, which gives you access to a powerful set of methods."
5170116,1,0,13,java.util.HashMap,I could simply use a static HashMap (which I initially did until I realized it wouldn't be global due to different instances serving my requests).
10098869,2,0,0,java.util.HashMap,"2) I don't see how you are putting and getting from the cache, but the put statement you have is a bit strange:  cache.put(CACHE_GEO_CLIENTS, new HashMap());   It looks like you are putting a second cache inside the main cache."
5183682,2,0,1,java.util.HashMap,The other somewhat odd thing I'm doing here is creating a single cache entry of type HashMap to store my actual values.
5170638,1,0,0,java.util.HashMap,"Now I am using HashMap<String, POJO_CLASS>."
5170638,1,0,0,java.util.HashMap,"Now my need is to search an object by id, and that method should return an object (which is stored in HashMap as value)."
5171011,2,0,1,java.util.HashMap,"500 objects is not that many, so I would just put them in a second HashMap keyed on the id."
5171060,2,0,0,java.util.HashMap,"In this case, building a second HashMap off of id, would give you the best performance."
5171060,2,0,0,java.util.HashMap,In that case I would just do a linear search through the HashMap.
5170675,2,1,1,java.util.HashMap,"HashMap lookups are going to be very fast, O(1) time whereas binary searches are going to take O(lg(N)) time on Lists that have random access abilities (ArrayList)."
5174233,1,0,2,java.util.HashMap,"I have a hash-based collection of objects, such as HashSet or HashMap."
5174938,1,0,0,java.util.HashMap,I want it to take all the words between any </p> and </p> and store it in a HashMap.
5178721,1,0,0,java.util.HashMap,"so basically I want a button that when clicked will end a conversation, and then redirect to a new page... this works ONCE, then every time after I see the following in my logs..  (from the users point of view, everything worked properly.. when the button is clicked, the redirect works properly)  SEVERE:   java.util.ConcurrentModificationException           at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)           at java.util.HashMap$EntryIterator.next(HashMap.java:834)           at java.util.HashMap$EntryIterator.next(HashMap.java:832)           at org.jboss.weld.context.AbstractConversationContext.deactivate(AbstractConversationContext.java:250)           at org.jboss.weld.jsf.WeldPhaseListener.deactivateConversations(WeldPhaseListener.java:131)           at org.jboss.weld.jsf.WeldPhaseListener.afterPhase(WeldPhaseListener.java:96)           at com.sun.faces.lifecycle.Phase.handleAfterPhase(Phase.java:189)           at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:107)           at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)           at javax.faces.webapp.FacesServlet.service(FacesServlet.java:312)           at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1534)           at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:343)           at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:215)           at net.balusc.http.multipart.MultipartFilter.doFilter(MultipartFilter.java:78)           at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)           at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:215)           at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:279)           at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)           at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:655)           at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:595)           at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:98)           at com.sun.enterprise.web.PESessionLockingStandardPipeline.invoke(PESessionLockingStandardPipeline.java:91)           at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:162)           at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:326)           at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:227)           at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:170)           at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:822)           at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:719)           at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1013)           at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:225)           at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)           at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)           at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)           at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)           at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)           at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)           at com.sun.grizzly.ContextTask.run(ContextTask.java:71)           at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)           at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)           at java.lang.Thread.run(Thread.java:662) SEVERE: WebModule[]PWC1322: Error   invoking requestDestroyed method on   ServletRequestListener   org.jboss.weld.servlet.WeldListener   java.lang.IllegalStateException:   Context is not active           at org.jboss.weld.context.AbstractConversationContext.deactivate(AbstractConversationContext.java:263)           at org.jboss.weld.servlet.WeldListener.requestDestroyed(WeldListener.java:125)           at org.apache.catalina.core.StandardContext.fireRequestDestroyedEvent(StandardContext.java:4588)           at org.apache.catalina.core.StandardHostValve.postInvoke(StandardHostValve.java:243)           at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:328)           at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:227)           at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:170)           at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:822)           at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:719)           at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1013)           at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:225)           at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)           at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)           at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)           at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)           at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)           at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)           at com.sun.grizzly.ContextTask.run(ContextTask.java:71)           at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)           at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)           at java.lang.Thread.run(Thread.java:662)"
5179223,1,0,3,java.util.HashMap,"But I am getting error :  SEVERE: A message body writer for Java type, class java.util.HashMap, and MIME media type, application/json, was not found   Mar 3, 2011 3:32:41 PM com.sun.jersey.server.impl.application.WebApplicationImpl onException   SEVERE: Internal server error   javax.ws.rs.WebApplicationException  Any ideas?"
5180342,1,0,1,java.util.HashMap,"When using HashMap in java , what is the type of the key?"
5180342,1,0,1,java.util.HashMap,"When using a HashMap, will the hashmap store the entire objectA as a key , or will it only use the objectA.hashCode() as the key , thus resulting in an actual hashmap of int->ObjectB ?"
5180348,2,0,2,java.util.HashMap,"When using a HashMap, will the hashmap store the entire objectA as a key  Yes whole object as key It will use key's hashCode()  internally to store Value Lets look into code code."
5180384,2,0,1,java.util.HashMap,"That way you can call HashMap#values() to get a Set<Entry<key_type, value_type>> which contains the keys as well."
5184323,2,0,0,java.util.HashMap,You are indeed operating on HashMap.KeyIterator.
5184463,2,0,6,java.util.HashMap,"What you have written is the HashMap.KeyIterator class, which according the Java language access specifiers (or at least the rough interpretation of JDK 1.0 used by reflection) is not available to your code."
5185638,2,0,0,java.util.HashMap,"This is correct but if your are looking for the right foo object, instead of using a List, use a Map, like the HashMap."
5185258,2,0,2,java.util.HashMap,In bar class you should use HashMap instead of ArrayList with FooName as key and Foo as pair.
5185258,2,0,2,java.util.HashMap,Since HashMap has o(1) searchingtime which you are doing with a for loop itreation in arraylist.
5185262,2,0,1,java.util.HashMap,"You could try using a HashMap in Bar, instead of using a List."
5188024,2,1,5,java.util.HashMap,in a HashMap) of [result of getName()->object -> list of matches].
5188028,2,0,1,java.util.HashMap,If the objects are immutable (or you at least know their names won't change) you could create an index using a HashMap.
5189100,1,0,5,java.util.HashMap,"hashCode, implementation, and relation to HashMap."
5189100,1,0,5,java.util.HashMap,Because assuming that HashMap chooses buckets by an algorithm something like: code.
5189100,1,0,5,java.util.HashMap,"That's when the performance of HashMap really matters anyway, isn't it?"
5189210,2,0,1,java.util.HashMap,A hashing function for something like a HashMap needs to be reasonably unique for it's key set but the relationship between the keys (ie how alike two keys are) need not be random.
5189210,2,0,1,java.util.HashMap,For very large Map containers (think billions of keys) we probably do want to be a little more clever but that seems beyond what Java's HashMap was designed for.
5189490,2,0,1,java.util.HashMap,If you have a look at the source code of HashMap there is hash function called with the key.hashCode() value which means it goes through its own way of assigning a hash.
6879487,2,0,2,java.util.HashMap,"Inside the HashMap class implementation, it protects against poor hashing functions: code."
5191232,1,0,1,java.util.HashMap,"I'm having a problem saving/loading an ArrayList<HashMap<String, Object>> across Android versions."
5192706,1,0,9,java.util.HashMap,Java: Is there a container which effectively combines HashMap and ArrayList?
5192706,1,0,9,java.util.HashMap,I keep finding a need for a container which is both a HashMap (for fast lookup on a key type) and an ArrayList (for fast access by integer index).
5192789,2,0,0,java.util.HashMap,Why don't you simply keep the HashMap and then use hashMap.entrySet().toArray(); as suggested here?
5193090,2,0,0,java.util.HashMap,"If you don't want to remove anything, or can live with following indexed not shifted (i.e. remove(i) being equivalent to set(i, null), there is nothing which forbids having both O(1) index and key access - in fact, then the index is simply a second key here, so you could simply use a HashMap and a ArrayList (or two HashMaps) then, with a thin wrapper combining both."
5194291,2,1,4,java.util.HashMap,"I would use a properties file or an XML file, load it into memory (as a HashMap<Integer, Integer>) on startup and then just serve from the hashmap."
5195845,1,0,3,java.util.HashMap,Java HashMap and underlying values() collection.
5195845,1,0,3,java.util.HashMap,I was wondering if the Collection view of the values contained in a HashMap is kept ordered when the HashMap changes.
5195845,1,0,3,java.util.HashMap,"For example if I have a HashMap whose values() method returns L={a, b, c} What happened to L if I add a new element ""d"" to the map?"
5195891,2,0,5,java.util.HashMap,I was wondering if the Collection view of the values contained in a HashMap is kept ordered when the HashMap changes.
5195891,2,0,5,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
5195892,2,0,0,java.util.HashMap,"HashMap in Java aren't ordered, so I think it will be safe to say that values() won't return an ordered Collection."
5195892,2,0,0,java.util.HashMap,"LinkedHashMap is an ordered version of HashMap (insertion order), but I don't know it values() will return an ordered Collection."
5195941,2,0,0,java.util.HashMap,Generally they is no guarantee of order when you are using HashMap.
22339316,2,0,2,java.util.HashMap,Basic Facts about HashMap.
22339316,2,0,2,java.util.HashMap,HashMap will generate hashcode for each key irrespective of the object type.
5201542,2,0,0,java.util.HashMap,"Guess what, using a HashMap returns in no time: Here's the modified version and it finish always in 0 ms.  code."
5203326,1,0,15,java.util.HashMap,"It means that HashMap and other hash containers are completely prohibited from using tables based on universal hashing, even if the language designers may think that such tables would be appropriate in the language design."
5203799,1,0,21,java.util.HashMap,"My Solutions  Use a HashMap, or any similar data structure, to hold the informations."
5204242,2,1,12,java.util.HashMap,"But it won't allow you to put your objects into a HashMap, HashSet, etc."
24370280,2,0,4,java.util.HashMap,"As others have pointed out, you can't use a HashingStrategy with the built in HashSet or HashMap."
24370280,2,0,4,java.util.HashMap,"UnifiedSetWithHashingStrategy uses half the memory of a UnifiedMap, and one quarter the memory of a HashMap."
5205129,1,0,4,java.util.HashMap,Creating a custom iterator for a HashMap.
5205129,1,0,4,java.util.HashMap,I am trying to implement an iterator that will iterate through the HashMap and its duplicates.
5205151,2,0,3,java.util.HashMap,java.util.HashMap allows to associate only one value with one key.
5205152,2,0,4,java.util.HashMap,"You may want to look at how they implemented iterator() for HashMap, specifically looking at the internal private class HashIterator."
5205153,2,0,0,java.util.HashMap,You can access an Iterator for your HashMap like this : code.
5205153,2,0,0,java.util.HashMap,"The problem in your case seems to come from the fact that a HashMap in java can't have identical keys, so your code add only two objects to the HashMap."
5209687,1,0,0,java.util.HashMap,Should use TreeMap or HashMap for wrapping named parameters?
5209687,1,0,0,java.util.HashMap,"I guess TreeMap might have a smaller footprint, because it's less sparse then HashMap."
5210653,2,0,0,java.util.HashMap,This should be even more efficient than a HashMap.
5209696,2,0,5,java.util.HashMap,"The main difference is that TreeMap is a SortedMap, and HashMap is not."
5209696,2,0,5,java.util.HashMap,"If you need your map to be sorted, use a TreeMap, if not then use a HashMap."
5209773,2,0,0,java.util.HashMap,"I guess you don't need order of entries in Map, so HashMap is OK for you."
5209800,2,1,3,java.util.HashMap,"I guess TreeMap might have a smaller   footprint, because it's less sparse   then HashMap."
5209800,2,1,3,java.util.HashMap,"That may actually be wrong, because empty HashMap slots are null and thus take up little space, and TreeMap entries have a higher overhead than HashMap entries because of the child pointers and color flag."
5212173,2,0,1,java.util.HashMap,If you change the values in the array rarely and can allow a expensive preparation and memory isn't a problem you can do better by storing a HashMap.
5215707,2,1,0,java.util.HashMap,"If performance is a problem then you could build an index using HashMap with keys as ids and values as (x, y) pairs."
5216958,2,0,1,java.util.HashMap,I will rather suggest that you use a HashMap.
5217073,2,0,1,java.util.HashMap,Allocate a Hashtable or HashMap that maps Node to Boolean.
5219066,1,0,1,java.util.HashMap,Order HashMap according Integer.
5219075,2,0,1,java.util.HashMap,You cannot control the order of HashMap elements.
5219129,2,1,1,java.util.HashMap,"A HashMap is not ordered, and a TreeMap is ordered by key, not by value, so it won't help."
5220619,1,0,8,java.util.HashMap,Return from HashMap when no key.
5220619,1,0,8,java.util.HashMap,"What does a HashMap<String,String> return when I call map.get(""key"") and I don't have an entry with the key ""key"" in the HashMap?"
5220650,2,0,2,java.util.HashMap,"Check documentation - HashMap get() method description:  Returns the value to which the   specified key is mapped, or null if   this map contains no mapping for the   key."
10935324,2,0,1,java.util.HashMap,"So when defining the map: Map<Pair, Tile> tiles = new HashMap<Pair, Tile>;  For placing tile objects onto the map I used tiles.put(new Pair(x, y), new GrassTile()); and for retrieving the object tiles.get(new Pair(x, y));."
13359725,2,0,0,java.util.HashMap,I would recommend a HashMap.
10935951,2,0,1,java.util.HashMap,"Such structure is a HashMap (what PHP uses is a kind of a LinkedHashMap, but you were probably not using the ""linked"" part)."
10935951,2,0,1,java.util.HashMap,"Remember that the implementations MUST use both x and y - a wizard in your IDE will help you); your map will be: Map map = new HashMap();  The best thing: if you keep using the Map interface, you will not be locked out, and you will be able to make a lot of improvements."
10935951,2,0,1,java.util.HashMap,Like wrapping the HashMap into an object that creates parts of the map using some algorithmic techniques.
5226137,2,0,2,java.util.HashMap,"Or if you're used to associative arrays like PHP has, the use the corresponding structure in Java, which is a Map (HashMap would be OK) : define a Coordinate class with appropriate equals and hashCode methods, and use a HashMap<Coordinate>."
5226155,2,0,0,java.util.HashMap,"HashMap, SortedMap, etc depending on how much data you intend to store and your access patterns (Sorted Map is very good for sequential access, HashMap is better for random access)."
5230449,2,1,0,java.util.HashMap,"Ok, I've done like this so far :    my Thrift file :  namespace java lserver.gen service LuceneServer {    list<map<string,string>> search(1:string term) } in Java I return an ArrayList like so : HashMap<String, String> res = new HashMap(); ArrayList<HashMap> result = new ArrayList<HashMap>(); //blah blah blah return result; So in php I can access as mentioned in question..."
5230363,1,0,0,java.util.HashMap,"JSP, Java, Spring, iterating through HashMap and calling basic getter method from its value?"
5230545,1,0,4,java.util.HashMap,Find if HashMap contains chosen value and return key.
5230545,1,0,4,java.util.HashMap,"Is there any way to find if my HashMap<String, String> contains entry ( key,value) with value=""x"" and to go through all entries sequentially ?"
5230562,2,0,7,java.util.HashMap,"HashMap.containsKey() This is what HashMap is made for in the first place... (Not sure what you mean by ""to go through all entries sequentially"", though."
5230562,2,0,7,java.util.HashMap,":( If you need that feature, design your own two-way HashMap that stores the location of each value in the other's value (hopefully that made sense), and then use that class."
5230586,2,0,0,java.util.HashMap,Use HashMap.containsKey() to know if it contains a given key.
5230586,2,0,0,java.util.HashMap,Use HashMap.keySet() or HashMap.entrySet() to retreive the collection of entries or values and iterate sequentially on it.
5236036,2,0,0,java.util.HashMap,"If cache is a plain HashMap, then the problem is actually much worse; i.e. your proposed ""double-checked pattern"" behaves much worse than a simple reference-based double-checking."
5236036,2,0,0,java.util.HashMap,"If it is based on a plain HashMap, I would suggest using a ConcurrentHashMap as the first approach."
5237101,1,0,23,java.util.HashMap,Is it possible to get element from HashMap by its position?
5237101,1,0,23,java.util.HashMap,"How to retrieve an element from HashMap by its position, is it possible at all?"
5237160,2,0,2,java.util.HashMap,"HashMap - and the underlying data structure - hash tables, do not have a notion of position."
5237160,2,0,2,java.util.HashMap,"These buckets are not ordered in a way that makes sense outside the HashMap interface and as such, the items you put into the HashMap are not in order in the sense that you would expect with the other data structures"
5237164,2,0,2,java.util.HashMap,HashMap has no concept of position so there is no way to get an object by position.
5237200,2,0,1,java.util.HashMap,I'm assuming by 'position' you're referring to the order in which you've inserted the elements into the HashMap.
5243365,2,0,0,java.util.HashMap,"Here is the code you need in order to get two values from two combo-boxes, add them to a HashMap and pass the map to iReport."
5248328,2,0,1,java.util.HashMap,"But because equals is used by technical stuff (HashMap), you should implement it in a technical way, and build the business logic related equals by something else (something like the comparator interface)."
5248096,2,1,3,java.util.HashMap,Hint: Use a HashMap or a List... or.... Other solution that needs Integer[] instead of int[] and is faster: code.
5248964,1,0,2,java.util.HashMap,Find a object key from a HashMap.
5248964,1,0,2,java.util.HashMap,I have a HashMap having key as my own object and key as ArrayList of String.
5249024,2,1,3,java.util.HashMap,"HashMap are supposed to work the other way : you have the key, you're looking for the object."
5256297,2,0,0,java.util.HashMap,We get the key object from Hashmap without iterating the keyset of HashMap by converting keyset to ArrayList.
5249203,2,0,0,java.util.HashMap,"In Java, HashMap associates a key with a value, not the other way around."
5249203,2,0,0,java.util.HashMap,"You can retrieve a Set of all of the keys using HashMap.keySet(), or alternatively iterate over all of the entries using HashMap.entrySet(): code."
5261128,2,1,2,java.util.HashMap,Use a HashMap.
5266623,1,0,3,java.util.HashMap,Hibernate(JPA) mapping a HashMap.
5266623,1,0,3,java.util.HashMap,Prereading: How to persist a HashMap with hibernate My problem revolves aroung the following structure that I want to map with JPA: code.
5266623,1,0,3,java.util.HashMap,"How can I annotate only the List part with @Lob (When I just annotate the field I get a class cast error, because HashMap can't be cast to Blob, which is the root of my problem - that I can't annotate only the values part of the map)?"
5266962,1,0,0,java.util.HashMap,Overriding equals() and hashCode() methods of HashMap implementation.
5266962,1,0,0,java.util.HashMap,"I have a hashmap of the type HashMap<Long, ArrayList<String>>."
5266962,1,0,0,java.util.HashMap,"of elements I would be putting in the HashMap, thus I have used initial Capacity = (No."
5267040,2,0,1,java.util.HashMap,(You are correct in that when you use an object as key in a HashMap you should make sure it has consistent implementations for those methods)
5267058,2,1,4,java.util.HashMap,The equals(..) method of HashMap has linear complexity.
5269199,2,0,2,java.util.HashMap,"Interface Map<String,String>, implementation classes HashMap<String,String> or TreeMap<String,String>"
5277522,1,0,0,java.util.HashMap,Coming off my way-too-popular question from yesterday: Hibernate(JPA) mapping a HashMap I'm trying to map a structure that is essentially the following: code.
5282013,1,0,13,java.util.HashMap,"Using data structures like HashMap and HashSet enables amortized constant time lookups, but there is an element of overhead involved."
5282472,2,1,8,java.util.HashMap,"Thing is, if you move, for example, the Transition class to simply a primitive, then you're not forced to use anymore the slow HashMap<Transition,...> default Java collections: you can use libraries like Trove's TLongObjectHashMap (or TLongInt... or TLongLong, whatever) which owns the default HashMap big times (the Trove libraries basically provides maps and sets that are super efficient, both fast and small, when you work with primitives: you don't generate countless garbage nor constant needless wrapping around primitives, so less GC etc."
5282277,2,0,0,java.util.HashMap,"By the way, better use Map<String, IMyInterface> for the variable and HashMap<String, IMyInterface> for the constructor instead of Hashtable."
5283294,1,0,2,java.util.HashMap,Can a Java HashMap's size() be out of sync with its actual entries' size?
5283294,1,0,2,java.util.HashMap,I have a Java HashMap called statusCountMap.
5283641,2,0,2,java.util.HashMap,HashMap is not thread-safe.
5283641,2,0,2,java.util.HashMap,"Therefore, if there is any point where two threads could update a HashMap without proper synchronization, the map could get into an inconsistent state."
5283323,2,1,6,java.util.HashMap,I believe you can achieve this if you modify a key after it is added to a HashMap.
5288743,1,0,0,java.util.HashMap,Java HashMap cannot find key from within ListDataListener event.
5288743,1,0,0,java.util.HashMap,Can someone explain why the HashMap acts like it does in this example: Simple test that checks a hashmap for a key.
5288743,1,0,0,java.util.HashMap,So storing a ArrayList in a HashMap is not a good idea.
5288995,2,1,2,java.util.HashMap,"I know you understand the problem now, but here is the explanation for other people: The HashMap uses the hashcode of the key, which in this case is the hashcode of the List."
5288927,2,0,0,java.util.HashMap,The solution to store collections in a map is to NOT use HashMap but instead using a map based on references like apache commons ReferenceIdentityMap or java.util.IdentityHashMap.
5289282,2,0,0,java.util.HashMap,"However, a standard like HashMap has no functionality for changing the relationship between key and value."
5289562,1,0,2,java.util.HashMap,Compare 2 keys in Java HashMap.
5289562,1,0,2,java.util.HashMap,"I've made a BinaryTree< HashMap<String, String> >."
5289562,1,0,2,java.util.HashMap,"EDIT: There is only one key in each HashMap (it's a very simple language translation system), so sorting the keys shouldn't be necessary."
5289634,2,1,3,java.util.HashMap,The keys in the set for a HashMap have an unpredictable order that is sensitive to the sequence of operations that populated the map.
5289634,2,1,3,java.util.HashMap,Using a HashMap to represent a single pair is ... crazy.
5292925,1,0,0,java.util.HashMap,Why does Java's HashMap have different behaviour with different objects?
5292925,1,0,0,java.util.HashMap,I have the following piece of Java code using HashMap and generics: code.
5293630,2,0,1,java.util.HashMap,"Maybe in your restaurant, you have multiple Customers called ""Bob"" on that particular night, so just having a HashMap of names isn't enough anymore."
5293630,2,0,1,java.util.HashMap,"By having a HashMap of Customers, you can simply change the Customer class hashing algorithm and everything will work perfectly (hopefully)."
5293638,2,0,1,java.util.HashMap,"If the HashMap were keyed by a String, you could certainly get away with having a reasonable Region.toString() method and using that as the key, but using the more complex object will allow you to write more flexible code."
5293638,2,0,1,java.util.HashMap,"While others may disagree, I find myself using Maps in somewhat unpredictable ways sometimes, where calling HashMap.keySet() gives me a Set of fully populated, complex objects with a plethora of information."
5293638,2,0,1,java.util.HashMap,"If I had my HashMap with complex objects, that would be as simple as: code."
5301348,2,0,1,java.util.HashMap,"Yes, use the HashMap to save the values and to go through the file, you can use a Scanner"
5590390,2,0,0,java.util.HashMap,"In Java you should definitely stay with HashMap<String, Integer>."
5590390,2,0,0,java.util.HashMap,The terms will be the HashMap keys and the term frequency the value.
5301224,2,0,1,java.util.HashMap,"You can use a HashMap, where key is your term and value - the frequency of it."
5307003,1,0,9,java.util.HashMap,I have a cache which I implemented using a simeple HashMap.
5314226,2,0,1,java.util.HashMap,"That said, I once created a sparse list (mostly containing null) backed by a HashMap<Integer, E> - but there I disabled structural modifications (similar to Arrays.asList)."
5316900,2,0,2,java.util.HashMap,"edited: The problem is because when you call putAll() you put references to your main nodes, after it your algorithm modify nodes (actually in your nodes HashMap) and this will be propagate in the next tests."
5317679,2,0,1,java.util.HashMap,"You are getting the warning because the compiler cannot verify that the assignment to htmlSpecialChars is a HashMap<String,String>, since the method getSpecialChars() is returning a plain, non-generic HashMap."
5317614,2,1,4,java.util.HashMap,"You're getting this because getSpecialCharMap() is returning an object whose type cannot be verified by the compiler to be HashMap< String, String>."
5319437,2,0,2,java.util.HashMap,"You sound like you really want a tree or graph and don't know how to write it, so you're inventing this notation to try and make it work with HashMap."
5319480,2,0,0,java.util.HashMap,"You can certainly define a hash map with type HashMap<String, ?> and get dynamic depth at the cost of type safety."
5324599,2,0,0,java.util.HashMap,That is because HashMap doesn't keep the keys in the same order you add them.
5323533,1,0,3,java.util.HashMap,Unexpected output with HashMap.
5323602,2,0,6,java.util.HashMap,When you switch map1 to HashMap output will be true true as you expected.
5323632,2,0,2,java.util.HashMap,IdentityHashMap uses == where ordinary HashMap uses .equals().
5325640,1,0,0,java.util.HashMap,But I have get the following error:  org.apache.jasper.JasperException: javax.el.PropertyNotFoundException: The class 'java.util.HashMap$Entry' does not have the property 'productId'.
5325667,2,0,1,java.util.HashMap,You need to declare your HashMap as such so that it knows what the type of the key/value pair are.
5329358,1,0,59,java.util.HashMap,TreeMap or HashMap?
5329408,2,0,2,java.util.HashMap,"Inserting new elements into a HashMap will, on average, be a good deal faster than inserting elements into a TreeMap."
5329408,2,0,2,java.util.HashMap,"Unless you need your elements sorted, I'd go with the HashMap."
5329410,2,0,40,java.util.HashMap,"TreeMap provides guaranteed O(log n) lookup time (and insertion etc), whereas HashMap provides O(1) lookup time if the hash code disperses keys appropriately."
5329410,2,0,40,java.util.HashMap,"Unless you need the entries to be sorted, I'd stick with HashMap."
5329410,2,0,40,java.util.HashMap,"I can't remember the details of the differences between all of them, but HashMap is a perfectly reasonable ""default"" option :) For completeness, I should point out that there was a discussion on Stack Overflow a month or so ago about the internals of various maps."
5329539,2,0,3,java.util.HashMap,Don't forget there is also LinkedHashMap which is nearly as fast as HashMap for add/contains/remove operations but also maintains the insertion order.
5332677,2,1,4,java.util.HashMap,"Have the getItemAtPosition method return a generic HashMap, so you don't have to cast it."
5332686,2,0,3,java.util.HashMap,"Alternatively, if you're reading from the map only, you can cast it to HashMap<?, ?> and check the type of the objects you get out of the map with instanceof."
5334312,2,0,0,java.util.HashMap,Another alternative would be to use a ConcurrentHashMap instead of a HashMap.
5334312,2,0,0,java.util.HashMap,A ConcurrentHashMap is probably slower than a regular HashMap.
5334887,1,0,3,java.util.HashMap,Fastest way to restructure a HashMap.
5334887,1,0,3,java.util.HashMap,"I have a HashMap that maps companies to an ArrayList of the products they sell, like so: code."
5334887,1,0,3,java.util.HashMap,"This is expensive though, because I have to check to see whether the HashMap I am creating contains that product as a key each time before adding, plus it requires me to get the each ArrayList, add the new vendor, delete the old ArrayList then map the new one for each entry."
5335004,2,0,0,java.util.HashMap,Maintain two data structures—the HashMap you maintain now and another one that maps products to companies: code.
5335387,1,0,1,java.util.HashMap,java.util.HashMap java.util.LinkedList etc...
5335422,2,0,0,java.util.HashMap,"I mean, HashMap is basically the same as Dictionary<TKey, TValue>, while LinkedList is basically the same as LinkedList<T>."
5338359,1,0,5,java.util.HashMap,"I am working on a project where a lot of searches are being conducted on a very large set of data so I am realizing using a traditional database structure itsn't working as I need to read tables into a HashMap format, that stays in memory the entire time, to be able to run queries in the amount of time needed for the application performance."
5338359,1,0,5,java.util.HashMap,I am wondering what the recommended process for peristing a HashMap is with regard to speed of retrieving them from their persistent state and regard to minimizing extra code needed (as now I am writing custom classes that read the necessary data from DB tables and then create a nested HashMap reflecting the data structure that I need it to be in to be searchable as quickly as possible.
5340943,2,0,2,java.util.HashMap,Basically just include the jar in your class path and use it like a HashMap: code.
5340503,1,0,0,java.util.HashMap,I have a HashMap that contains 12 million entries.
5348316,1,0,1,java.util.HashMap,"Edit: HashMap listing is a HashMap<String, ArrayList<String>>"
5348356,2,0,0,java.util.HashMap,I think the most pluasible place where the exception is occuring is at the following line : HashMap listing = (HashMap) data.get(s); Are you sure data.get(s) is suppose to return hashmap.
5348341,2,1,1,java.util.HashMap,And then in the HashMap(listing) what is the type of key and value?
5348346,2,0,1,java.util.HashMap,"HashMap.entrySet() returns Set<Map.Entry<K,V>>."
5348346,2,0,1,java.util.HashMap,"As a side note, your HashMap is a raw type and should be parameterized."
5354659,1,0,0,java.util.HashMap,where obj1 and obj2 are objects I've an idea - HashMap could solve my problem So It'll looks like code.
5355302,2,0,0,java.util.HashMap,"As you remarked, the HashMap<Coordinate, Value> structure does not let you iterate through the rows or columns."
5359031,1,0,2,java.util.HashMap,HashMap in an SQLite Database.
5359031,1,0,2,java.util.HashMap,I would like to store a HashMap in an SQLite Database.
5359081,2,1,3,java.util.HashMap,"Seeing HashMap is a key/value pair, why not add all keys/values to a JSON Object and store the object in SQLite?"
5362277,2,1,1,java.util.HashMap,"For the mutable Properties case, use HashMap<String, String> instead of Properties."
5369788,2,0,0,java.util.HashMap,"If you then want to sort by key, simply use a SortedMap (like TreeMap) instead of the usual HashMap."
5369788,2,0,0,java.util.HashMap,"You are emulating the individual entries by a HashMap each, then putting them all in a ArrayList ... :-/ Here what I would have done in your example: code."
5369578,2,1,21,java.util.HashMap,"You need to implement a Comparator<HashMap<String, String>> or more generally Comparator<Map<String, String>> which just extracts the value assocated with the value key, then use Collections.sort."
5380836,2,1,0,java.util.HashMap,Basically it's a text file with a list of key value pairs that Java can read easily and put into a HashMap which can be accessed by the user.
5386427,2,1,2,java.util.HashMap,"For instance, if I write class Foo extends HashMap {}, Eclipse reports: ""HashMap is a raw type."
5386427,2,1,2,java.util.HashMap,"References to generic type HashMap should be parameterized"""
5391425,1,0,0,java.util.HashMap,What is the most efficient way in Java to flatten this into a continuous  byte[] with the same ordering (thats why the HashMap is Linked).
5395308,1,0,11,java.util.HashMap,Read data from HashMap using JSTL tag in JSP without using for each or for loop.
5396956,2,0,0,java.util.HashMap,"After that, you can use get and put to get items in and out of the HashMap."
5396956,2,0,0,java.util.HashMap,Java HashMap Documentation
16355122,2,0,3,java.util.HashMap,"according jdk source code from javasourcecode.org, HashSet use HashMap as its inside implementation, the code about put method of HashSet is below : code."
5397045,2,0,1,java.util.HashMap,Because in 2nd case you adding same reference twice and HashSet have check against this in HashMap.put() on which HashSet is based: code.
5398774,1,0,1,java.util.HashMap,"I found this and it seems to be working, I'm trying to iterate trough HashMap : Java: iterate through HashMap But this portion of code shows warnings and I don't have a clue how to make it not show them : code."
5402941,2,1,2,java.util.HashMap,"you might not get an exception and one of the updates might get lost in an endless loop (happened to me with a HashMap once, not very likely for simple List implementations, but could still be possible) you might not get an exception and introduce wrong state in your list (for example one element inserted correctly, followed by a null element)."
5406783,1,0,1,java.util.HashMap,Why does my HashMap recognize hash keys that aren't supposed to be keys yet?
5406783,1,0,1,java.util.HashMap,I'm programming the game of Othello and I am storing the possible moves found in a HashMap in the following way:  code.
5406783,1,0,1,java.util.HashMap,"But when I tested it out, and painted about 100 or so new boards on my screen, I suddenly got the following message in my console:  Recognized hashCode xxxxxxxxxx   Getting moves from HashMap..."
5411870,1,0,1,java.util.HashMap,HashMap that can infer key name with name of value's class.
5411870,1,0,1,java.util.HashMap,"Is there something out there, maybe Guava, that could infer the key name of a HashMap from the either the classname or variable name of the key value?"
5412787,1,0,1,java.util.HashMap,And a Places class (a HashMap of Place objects): code.
5412787,1,0,1,java.util.HashMap,"Essentially, my question is:  Would there be any efficiency gained in searching the HashMap for key, as opposed to searching for value directly in, let's say, a sorted ArrayList?"
5412882,2,0,0,java.util.HashMap,It depends upon how you search the HashMap.
5412851,2,0,3,java.util.HashMap,"Would there be any efficiency gained in searching the HashMap for key, as opposed to searching for value directly in, let's say, a sorted ArrayList?"
5412862,2,0,0,java.util.HashMap,"Accessing objects through an ArrayList is much faster than doing it by a key of a HashMap, but the pointers to that objects have to be stored on memory in a continuous block, that makes slower to remove and put object in the ArrayList."
5412862,2,0,0,java.util.HashMap,"For example, if you need to put and/or remove the places lots of times it will be better to use the HashMap as the ArrayList is less eficient."
5412862,2,0,0,java.util.HashMap,If you definetly use the HashMap it will be faster to use an unique string as a key.
5415528,2,1,2,java.util.HashMap,"Use a HashMap with the row index as keys, and then either a HashMap or TreeMap for the actual elements (with the column index as key)."
5418686,1,0,0,java.util.HashMap,Is HashMap the best choice?
5418686,1,0,0,java.util.HashMap,Is HashMap the best choice to find the instruction i need fast ?I havent used it before but from the description it seems that using the int ID as key would make this run efficiently.
5418714,2,0,2,java.util.HashMap,Note that a HashMap does not maintain the order of its elements.
5420393,1,0,4,java.util.HashMap,How to append a string to a HashMap element?
5423165,2,0,1,java.util.HashMap,Have a look at the code for Map/AbstractMap/HashMap as an example.
5423171,2,0,7,java.util.HashMap,"If, down the road, I decide the memory overhead of HashMap is too much, I can re-do this as a TreeMap, and live with the slightly more expensive lookup times code."
5423171,2,0,7,java.util.HashMap,"Because peopleByName is a Map, not a TreeMap or a HashMap, all my calls are guaranteed to work on either map regardless of implementation."
5424263,1,0,3,java.util.HashMap,JSON Decode Custom Class with HashMap member using GSON in Java.
5424263,1,0,3,java.util.HashMap,So my question is: Is there a way to get GSON to decode the HashMap in my class?
5425366,1,0,1,java.util.HashMap,"How can one perform set operations on a HashMap, such as Collections.addAll()?"
5427330,2,1,1,java.util.HashMap,Parsing it into a HashMap would be my first thought.
5428949,1,0,1,java.util.HashMap,HashMap entries.
5429034,2,0,0,java.util.HashMap,"Looking over your code, you store a HashMap of String-keyed properties for every Thing?"
5429034,2,0,0,java.util.HashMap,"First thing to do is switch to enum-based HashMap, and see if that makes a performance difference [and sum applies to all your Strings all over the place - replace them with enums everywhere, and have on utility that converts them to Strings if they need be displayed to users] Now, why exactly do you have 3 million entries?!?!"
5429085,2,1,0,java.util.HashMap,"A HashMap<Integer, Object> takes a LOT more space than an Object[]."
5430938,2,0,0,java.util.HashMap,Accessing the HashMap via keySet iterator is even faster than using the keySet iterator on the TreeMap.
5438925,2,1,5,java.util.HashMap,"Some classes may cache similar variables under certain circumstances, but the HashMap itself will not."
5438955,2,0,2,java.util.HashMap,"A HashMap does not in any way try to save space by ""reusing"" the value elements (that would require it to compare each added value to all the existing ones, which would be very expensive - after all, it is only the keys that are hashed for quick lookup)."
5467008,2,0,0,java.util.HashMap,"its EntrySet method is coming from HashMap which returns Map, I want something returned to be Map  Yes, that is unwieldy."
5443319,2,0,5,java.util.HashMap,"Personally I wish StringBuffer didn't exist - it was in the ""let's synchronize everything"" phase of Java, leading to Vector and Hashtable which have been almost obsoleted by the unsynchronized ArrayList and HashMap classes from Java 2."
5443794,1,0,1,java.util.HashMap,For Java I am thinking about using a HashMap to simulate the Arrays in PHP.
5443812,2,1,2,java.util.HashMap,"If you want to preserve the order you put the values into the HashMap, then look into using LinkedHashMap."
5443812,2,1,2,java.util.HashMap,But HashMap is a decent choice if you don't have that requirement.
5443821,2,0,2,java.util.HashMap,"Yes HashMap (or TreeMap, depending on your memory needs) will work perfectly for you."
5443834,2,0,1,java.util.HashMap,"HashMap will do, but there is no Java equivalent to extract(), because of the fundamentally different background of the language."
5445334,1,0,0,java.util.HashMap,Possible to Store a HashMap in the ServletContext?
5445334,1,0,0,java.util.HashMap,Is it possible to store a HashMap into the ServletContext in Java?
5445334,1,0,0,java.util.HashMap,When I go to get the attribute back it's a String...is there a way to cast it back to a HashMap?
5445334,1,0,0,java.util.HashMap,"I Set the Attribute like this: event.getServletContext().setAttribute(""Banners"", getAllBanners()); The method getAllBanners() returns a HashMap<Integer, ArrayList<byte[]>> object."
5445334,1,0,0,java.util.HashMap,"Then when I want to access it I call: event.getServletContext().getInitParameter(""GBPBanners""); EDIT** Got it HashMap <Integer, ArrayList<byte[]>> myMap = (HashMap<Integer,ArrayList<byte[]>>) event.getServletContext().getAttribute(""Banners"");"
5448244,2,1,1,java.util.HashMap,"You are probably doing it wrong... First, a HashMap can't store ints, it needs proper objects - like Integer  – An array is an object, although it's hidden behind some syntactic sugar."
5449451,2,0,2,java.util.HashMap,A better solution is to store your items in a HashMap (keyed by Item.id) to make look-up easier.
5449310,2,0,0,java.util.HashMap,"I think the HashMap is ideal if you have lots of adding, updating etc."
5449310,2,0,0,java.util.HashMap,ah found another stackoverflow link with HashMap loadfactor HashMap intialization parameters (load / initialcapacity).
5448909,2,0,2,java.util.HashMap,Not a HashMap or HashMultiMap because they don't allow you to iterate the keys in order.
5449138,2,0,2,java.util.HashMap,"As an aside - why on earth do you create and populate a HashMap, then use a TreeSet to get the iteration order over the keys?"
5449847,2,0,1,java.util.HashMap,"Mixing arrays and Collections, although possible, tends to be confusing and lead to problems in my experience; also HashMap is generally preferred to Hashtable."
5453151,2,0,0,java.util.HashMap,Then you can store all of the threads into a HashMap where the key would be the username.
5453226,1,0,3,java.util.HashMap,I would like to know of a Map that works like a regular HashMap/Hashtable except it takes a function which returns the hashcode and performs the equality test rather than letting the HashMap use Object.hashCode/equals.
5454088,1,0,0,java.util.HashMap,Using data structures (HashMap) I was able to do it.
5455824,1,0,2,java.util.HashMap,I'm not sure if HashMap or TreeMap store Map.Entry in itself.
5455903,2,1,10,java.util.HashMap,"Here some more observations about the default maps (all in OpenJDK 1.6.0_20 as found in Ubuntu's openjdk6-source package):  The general purpose maps HashMap and TreeMap (as well as the legacy Hashtable) are already using some kind of Entry objects as part of their internal structure (the table or tree), so they simple let these objects implement Map.Entry and return them."
5455903,2,1,10,java.util.HashMap,"ConcurrentHashMap internally uses a HashEntry class analogously to the HashMap, but this does not implement anything."
5460087,2,0,2,java.util.HashMap,"Imagine if you stuck your object into a HashMap, and then changed part of it."
5460087,2,0,2,java.util.HashMap,You would no longer be able to locate it in the HashMap because its hashCode would be different.
5465642,2,1,7,java.util.HashMap,"You want to use a Map with string keys, for example a HashMap<String, something>."
5472281,2,0,1,java.util.HashMap,This way you can load your properties into a HashMap as you suggest in your question.
5475951,2,0,0,java.util.HashMap,"HashMap<String, String> and not just the words ""String"" and ""String""."
5524986,2,0,0,java.util.HashMap,"I'm not 100% certain what you're trying to accomplish, but I think what might work for you is using a List or HashMap."
5524986,2,0,0,java.util.HashMap,If some might have addBacon while some others may have addSausage then maybe a HashMap>.
5524986,2,0,0,java.util.HashMap,"Then you pass the List or HashMap with the Intent to your next activity which will iterate over it, tally everything up, and display your output."
5477452,1,0,0,java.util.HashMap,"Setting key type in HashMap, how?"
5477452,1,0,0,java.util.HashMap,"hi I want to create a HashMap (java) that stores Expression, a little object i've created."
5477452,1,0,0,java.util.HashMap,I guess i just don't fully understand the idea behind HashMap so i'm not sure what keys to use.
5477486,2,0,0,java.util.HashMap,"When you get something from a HashMap, you have to cast it to the actual type of object it represents (we can do this because all objects in Java inherit the Object class)."
5477486,2,0,0,java.util.HashMap,"So, if your keys are strings and your values are Integers, you would do something like: Integer myValue = (Integer)myMap.get(""myKey""); However, you can use Java generics to tell the compiler that you're only going to be using Strings and Integers: HashMap<String,Integer> myMap = new HashMap<String,Integer>(); See http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html for more details on HashMap."
5477499,2,0,3,java.util.HashMap,"Java HashMap relies on two things:  the hashCode() method, which returns an integer that is generated from the key and used inside the map the equals(..) method, which should be consistent to the hash calculated, this means that if two keys has the same hashcode than it is desiderable that they are the same element."
5478269,1,0,0,java.util.HashMap,Ideally I'd like to get this as fast as a lookup in a HashMap (which is what I'm currently using).
5481204,1,0,2,java.util.HashMap,how can I get a linked HashMap.
5481204,1,0,2,java.util.HashMap,"I has a Args class,this class extend HashMap and has some methods: code."
5481332,2,1,2,java.util.HashMap,"If that is not an option, you could do the same with extends HashMap."
5481332,2,1,2,java.util.HashMap,"Basically, you override all of the methods in the parent HashMap, and delegate the actions to a private LinkedHashMap instance."
5482105,2,0,1,java.util.HashMap,"Otherwise, your objects will be unusable as keys in HashMap, HashSet, etc."
5482175,2,0,4,java.util.HashMap,Some implementations (for instance HashMap) depend on the fact that when two instances are equal their hashcode should be the same.
5482183,2,0,0,java.util.HashMap,"In Hashcode it is always required that if two objects are equal then their hashCode always have to be the same other wise the hash collections(HashMap, HashSet etc."
5483330,1,0,14,java.util.HashMap,How does one convert a HashMap to a List in Java?
5483330,1,0,14,java.util.HashMap,"In Java, how does one get the values of a HashMap returned as a List?"
5483545,2,0,19,java.util.HashMap,Note that the order of the keys and values will be unreliable with a HashMap; use a LinkedHashMap if you need to preserve one-to-one correspondence of key and value positions in their respective lists.
5490311,2,0,1,java.util.HashMap,"If you only want it to iterate over your HashMap, no need for a list: code."
5488059,1,0,5,java.util.HashMap,Synchronization in a HashMap cache.
5488178,2,0,1,java.util.HashMap,"Your code looks ok, except that you are synchronizing more than actually required:  Using a ConcurrentHashMap instead of a synchronized HashMap would allow multiple invocations of the get method without locking."
5490137,2,0,2,java.util.HashMap,"Rather than have an individual named member variable for each attribute, have you considered using a HashMap to store attributes?"
5492855,2,0,0,java.util.HashMap,"I think that code above should flatten it down into one list, still grouped by country code and access type (not in insertion order though, since you used HashMap and not LinkedHashMap), which I think is what you want."
5496944,1,0,6,java.util.HashMap,Java: count the total number of items in a HashMap>.
5496944,1,0,6,java.util.HashMap,"I have this HashMap<String, ArrayList<Item>> , is there a way to count the total number of items in all the Lists in the Map without going through all Lists?"
23442190,2,0,1,java.util.HashMap,Use the size() method defined for HashMap.
5499565,2,0,1,java.util.HashMap,"You are creating at least one HashMap for every word (often more) - so if you have really many different words, you run out of memory."
5503416,2,0,0,java.util.HashMap,"HashMap<String, String[]> ab = new HashMap<String, String[]>();"
5503447,2,0,1,java.util.HashMap,Not so easy - see here: Using a byte array as HashMap key (Java)
5503484,2,0,0,java.util.HashMap,Becouse of the == comparision done inside of the HashMap class.
5511279,1,0,64,java.util.HashMap,What are the differences between a WeakHashMap and a HashMap?
5515249,2,1,0,java.util.HashMap,"You can use this string, convert into a HashMap in Java and work with the data."
5515249,2,1,0,java.util.HashMap,You can use FlexJSON to convert json string into a HashMap.
5518980,1,0,0,java.util.HashMap,HashMap toString problem.
5518980,1,0,0,java.util.HashMap,I am having a Map of type HashMap.
5519662,1,0,2,java.util.HashMap,Say I have a Java program that does the following things:  Read an Array of Integers into a HashMap that keeps track of how many occurrences of the Integers exists in the array.
5519662,1,0,2,java.util.HashMap,Then I grab the Keys from the HashMap and place them in an Array: code.
5519662,1,0,2,java.util.HashMap,"Then iterate through the sorted keyArray grabbing the corresponding value from the HashMap, in order to display or format the results."
5519662,1,0,2,java.util.HashMap,I would assume that it iterates through the HashMap retrieving the Keys.
5519774,2,0,0,java.util.HashMap,"First, Step 1 is only O(n) if inserting integers into a HashMap is O(1)."
5519774,2,0,0,java.util.HashMap,HashMap could be less efficient depending on how it addresses certain issues.
5521989,1,0,0,java.util.HashMap,i m parsing xml in which particular designation contaion list of staff... so while parsing i usee hashmap to store value.I continueously add staffdata in arraylist and when i found end element tag i put that arraylist object in HashMap and clear Arraylist to store next data.
5524562,1,0,0,java.util.HashMap,Can't retrieve HashMap inputs in another method.
5524562,1,0,0,java.util.HashMap,I have a superclass (SetupFunctions) which I have used in my HashMap --> code.
5524562,1,0,0,java.util.HashMap,Thats why I have the type SetupFuncition in the HashMap.
5527337,1,0,6,java.util.HashMap,"Consider this HashMap extention (generates an instance of the V class when calling ""get"" if it's null) code."
5533202,2,0,0,java.util.HashMap,Put the found words into a HashMap  (keyed on the word) and increment the value for each word as you find it.
5535755,2,0,3,java.util.HashMap,It's a HashMap so you are accessing items with their keys.
30857556,2,0,0,java.util.HashMap,"If you have a lot of these, you could (partially) implement ParallelArrayMap<> (i.e., a map backed by parallel arrays), or maybe ParallelArrayHashMap<> (to add a HashMap if you want efficient lookup by key), and use that, which allows iteration in the original order."
5546112,2,0,0,java.util.HashMap,"Try a Hash Map from Double to Set<Pair<Double, Double>> HashMap<Double, Set<Pair<Double, Double>> Answers; code."
5546992,2,1,0,java.util.HashMap,HashMap or TreeMap) to represent mappings from one kind of thing to another kind of thing.
5549021,1,0,3,java.util.HashMap,"Now, I am wondering: since I already store each parameter inside a HashMap, does it really makes sense to keep a separate field with the right type for each parameter?"
5549074,2,1,4,java.util.HashMap,";) It is about as expensive as creating objects, like String or adding an entry to a HashMap."
5549979,1,0,7,java.util.HashMap,"I can use a HashMap where each Car's hashCode maps to the actual Car object, but it probably isn't the school-book solution since it is unsafe - I would have to make sure myself that every hashCode maps to a Car with that hashCode - there could be inconsistency."
5551106,2,0,0,java.util.HashMap,Implement the Maps with HashMap - see comments above about how hash codes are used.
5551127,2,0,0,java.util.HashMap,"Welp, yeah, HashMap<Car, List<PurchaseOffer>> would be perfect if it wasn't for the fact that   each Car contains a List<PurchaseOffer> as a property."
5550641,2,1,4,java.util.HashMap,"I think that you really do need (at least) a HashMap<Car, List<PurchaseOffer>> ... as suggested by @Andreas_D Your objection that each Car already has a List<PurchaseOffer> is beside the point."
5550641,2,1,4,java.util.HashMap,"The list in the HashMap is the aggregate list, containing all PurchaseOffer objects from all Car objects that stand for the same physical car."
5550058,2,0,3,java.util.HashMap,"The basic datastructure should be a HashMap<Car, List<PurchaseOffer>>."
5551098,2,0,1,java.util.HashMap,"I would prefer to use a HashMap<Car, List<PurchaseOffer>>, as suggested before (Andreas, Stephen), mainly if the Car object does not hold the list of PurchaseOffers."
5551098,2,0,1,java.util.HashMap,"Otherwise I would consider using a HashMap<Car, Car> or, better IMO, a HashMap<ID, Car> if there is an unique ID for each Car."
5551098,2,0,1,java.util.HashMap,"This would contain the HashMap, or whichever - so it's easy to change the implementation without needing to change its interface)"
5550799,2,0,2,java.util.HashMap,"Perhaps it would be better to use a thread-safe Map of Future<PropertyDescriptor> (see, for example, Synchronization in a HashMap cache)."
5551130,1,0,3,java.util.HashMap,My root class is unmarshalling the Channels to a HashMap using an @XmlJavaTypeAdapter and the code below works as expected.
5551130,1,0,3,java.util.HashMap,I tried using a @XmlElementWrapper but that can only be used on a collection or array property which will not work since allChannels is a HashMap.
5551569,1,0,0,java.util.HashMap,"I have a clustering algorithm storing the clusters in HashMap<String, ArrayList<String>>."
5551569,1,0,0,java.util.HashMap,"I need to compare it with the ground truth which is stored in another HashMap<String, ArrayList<String>>."
5551928,2,1,0,java.util.HashMap,"I'm not 100% clear on how your class is set up and how the HashMap<String, ArrayList<String>> is really meant to work, but my inclination is that you should have a Hash of your keys."
5551928,2,1,0,java.util.HashMap,edit I also assumer there is a HashMap of the centroids to the clusters themselves.
5552056,2,0,0,java.util.HashMap,I guess you can create a reverse HashMap in which the KeyObj is a new object with an ArrayList and a counter.
5552056,2,0,0,java.util.HashMap,"In the reverse HashMap, the counter of the key will be the number of equal ArrayLists."
5552056,2,0,0,java.util.HashMap,Now the comparing algorithm is easy: Iterate through the values of the first HashMap and search for the value as a key of the new HashMap.
5553395,1,0,0,java.util.HashMap,"First I was thinking of a List, but as the order doesn't matter, and I need fast add/remove capabilities, I'm now thinking that a HashMap, using the username as the key and the User object as the value would be a better option."
5553542,2,1,1,java.util.HashMap,"as the order doesn't matter, and I need fast add/remove capabilities  You've got it, an HashMap would be the perfect choice, in my opinion."
5553627,2,0,2,java.util.HashMap,If the number of attributes is very large then a HashMap is going to be your best bet.
5557854,2,1,3,java.util.HashMap,If you care about the order of the movies - use an ArrayList or LinkedList instead of the HashMap (And change the movieLibray member from Map to List)
5560639,2,0,1,java.util.HashMap,"One like your SortedSet<Foo> and then also a HashMap<FooKey,Foo> similar to what ColinD mentioned."
5560639,2,0,1,java.util.HashMap,"Also if memory resources are constrained, and your strings are really what differentiate the objects, then you can just implement hashcode() and equals() on your object Foo and then just use them as both the key and value (like HashMap<Foo,Foo>."
5564770,2,1,7,java.util.HashMap,"Unlike HashMap, HashTable doesn't apply a supplemental hash function to mix bits of hashcode."
5564770,2,1,7,java.util.HashMap,"It's a really interesting point - it means that this implementation of Hashtable can show a worst case performance in some real-world scenarios, whereas for HashMap it's unlikely."
5564770,2,1,7,java.util.HashMap,Yet another reason to favor HashMap over Hashtable.
5566842,2,0,1,java.util.HashMap,"here jsf will search for getters/setters of the field elements in java.util.HashMap which doesn't exist, and so the error"
5567679,2,1,4,java.util.HashMap,A HashMap is simply the wrong data structure for a pattern search.
5567679,2,1,4,java.util.HashMap,So why not just use an Array or ArrayList of Sets instead of a HashMap and replace map.get(string.length()) with list.get(string.length()-1) or array[string.length()-1].
5567679,2,1,4,java.util.HashMap,I bet the performance will be better than with a HashMap (but we won't be able to tell the difference unless you have a reaaaallly old machine or gazillions of entries).
5575877,2,1,0,java.util.HashMap,"If there is not a synchronized lock surrounding the usage of both maps (in which case a normal HashMap would be fine), then there can be brief inconsistencies when items are added/removed where one map is updated and the other has not been."
5577391,1,0,1,java.util.HashMap,"But for the life of me I can't figure out how to create an array of Map<String,Object>[] I get the error ""Can create a generic array of HashMap"" when I try HashMap<String,Object>[] params = new HashMap<String,Object>[20000]; I also failed at attempting to cast an ArrayList.toArray() to a HashMap<String,Object>[]"
5580678,2,0,2,java.util.HashMap,"O(1) which is constant in normal case, if they don't collide See Also   HashMap API doc HashTable Data Structure"
5580679,2,1,4,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
5580698,2,0,1,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
5581126,2,1,2,java.util.HashMap,"First off, make sure you're using the right collection: you probably want HashMap instead."
5582069,2,1,2,java.util.HashMap,"Or, if you want to give different weights to each word, use HashMap where the word is the key."
5581364,2,0,0,java.util.HashMap,"However, your code instances a HashMap."
5583311,2,0,5,java.util.HashMap,If you use a HashMap then looking up a given date will be an O(1) operation.
5589123,1,0,0,java.util.HashMap,A HashMap seems ideal for this but where would be a good location to store it?
5589123,1,0,0,java.util.HashMap,Some creating class which handles the building of the Food objects (perhaps this would be a good location for the above HashMap?)
5595361,1,0,4,java.util.HashMap,Is it HashMap?
5595396,2,0,1,java.util.HashMap,HashMap does this.
5595399,2,0,1,java.util.HashMap,"I think the standard HashMap already works this way: it has a number of bins, and elements with colliding hash codes end up in the same bin."
5595399,2,0,1,java.util.HashMap,You can lookup the source code of HashMap yourself: in your JDK installation directory there is a file src.zip that contains the source code.
5595399,2,0,1,java.util.HashMap,LinkedHashMap is just a HashMap combined with a List to keep track of the insertion order of elements in the map.
5595383,2,0,0,java.util.HashMap,You may use HashMap code.
5595383,2,0,0,java.util.HashMap,The HashMap grants fast random access.
5595391,2,0,2,java.util.HashMap,"Well, just a regular HashMap links entries that end up in the same bucket (each bucket is really an element in an array of linked lists)."
5596627,2,0,1,java.util.HashMap,"If I didn't have a lot of memory, and a directory structure that followed the 80:20 rule (or, more likely, 95:5), I'd think of a HashMap<String,Set<String>>."
5600991,1,0,7,java.util.HashMap,"I'm implementing a custom hash function, If I get a number of collisions into a HashMap bucket, how can I know how many elements are stored in the bucket?"
5601085,2,0,2,java.util.HashMap,"You will have to investigate how the collection (HashMap) distributes hashCode values to buckets and mirror the process yourself, monitoring your inserts to keep track of collisions."
5601117,2,0,0,java.util.HashMap,you could write some reflective code to gain access to the internal buckets of the HashMap and inspect them yourself.
5601333,1,0,15,java.util.HashMap,Limiting the max size of a HashMap in Java.
5601333,1,0,15,java.util.HashMap,I want to limit the maximum size of a HashMap to take metrics on a variety of hashing algorithms that I'm implemeting.
5601333,1,0,15,java.util.HashMap,I looked at the loadfactor in one of HashMap's overloaded constructors.
5601333,1,0,15,java.util.HashMap,I tried setting the loadFactor to 0.0f in the constructor (meaning that I dont't want the HashMap to grow in size EVER) but javac calls this invalid:  code.
5601333,1,0,15,java.util.HashMap,Is there another way to limit the size of HashMap so it doesn't grow ever?
5601377,2,0,46,java.util.HashMap,You could create a new class like this to limit the size of a HashMap: code.
5601499,2,0,1,java.util.HashMap,The method put in the HashMap class is the one in charge of adding the elements into the HashMap and it does it by calling a method named addEntry which code is as follows: code.
5601499,2,0,1,java.util.HashMap,"As you can see in this method is where the HashMap is resized if the threshold has been exceeded, so I would try extending the class HashMap and writing my own methods for put and addEntry in order to remove the resizing."
5602736,2,0,1,java.util.HashMap,"See for instance http://download.oracle.com/javase/tutorial/collections/intro/index.html For instance, if you don't want to sort first and use a loop, you could use a HashMap from the collections classes."
5602874,1,0,2,java.util.HashMap,"After that, a for-loop is ran to add values into their respective HashMap, and then the HashMaps are ran through another loop used for packet creation."
5603296,2,0,1,java.util.HashMap,"There are three cases to consider:  If the variables containing the (only) HashMap references are about to go out of scope, calling clear() on them is a waste of time."
5603296,2,0,1,java.util.HashMap,The HashMap objects will be collected next time the GC is run on the heap that contains them.
5603296,2,0,1,java.util.HashMap,"(It is more complicated than that, when you consider generations, concurrent collectors and so on, but lets not go there ...) Assuming that the HashMap is unreachable and not finalizable, then neither phases of marking it will find either it, its internal objects (i.e. the hash array or the chains) or the keys and values in the map ... assuming the latter are not reachable by some other route."
5604413,2,1,19,java.util.HashMap,You can extend the HashMap class with your class like this: code.
5604413,2,1,19,java.util.HashMap,"But keep in mind that this will be a class it won't be the same as you type HashMap<String, String>"
5621974,2,1,1,java.util.HashMap,If you are going just test for property equality then a HashMap will do.
5620049,1,0,4,java.util.HashMap,HashMap synchronisation.
5620088,2,0,0,java.util.HashMap,Collections.synchronizedMap() just forwards the HashMap.
5620101,2,0,0,java.util.HashMap,"Yes, HashMap is not synchronized so inserting elements from concurrent threads yields undefined results."
5620209,2,0,1,java.util.HashMap,"Basically, this is more-or-less a drop in replacement for the HashMap, but is thread-safe when correctly used, has additional guaranteed-atomic methods for certain tasks and is lock-free (by exploiting the properties of a reasonable hashing function) in most cases."
5626634,2,1,2,java.util.HashMap,HashMap with appropriate synchronization) to hold the asynchronous calls that are executing.
7514752,2,0,1,java.util.HashMap,When we try to insert any key in HashMap first it checks whether any other object present with same hashcode and if yes then it checks for the equals() method.
7514752,2,0,1,java.util.HashMap,If two objects are same then HashMap will not add that key instead it will replace the old value by new one.
5632452,2,0,0,java.util.HashMap,"HashMap, HashSet, Hashtable, LinkedHashMap, & LinkedHashSet use hashing."
5631337,2,0,6,java.util.HashMap,"I guess, the .toString() method of implementing class (HashMap or TreeMap for ex.)"
5632390,2,0,0,java.util.HashMap,Only the keys are unique in a Hashtable (and HashMap is the same).
5632879,2,0,1,java.util.HashMap,http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html
5633785,2,0,1,java.util.HashMap,"For example, HashMap is useful in most cases, but if you need keys (in your code - ""names"") sorted, TreeMap would be better."
5635062,2,0,0,java.util.HashMap,Use ConcurrentHashMap instead of HashMap and ConcurrentMap when declaring field and it should be.
5641557,2,0,5,java.util.HashMap,The runtime signature is just plain HashMap and ArrayList - Generics are a compile-time thing.
5642965,2,1,5,java.util.HashMap,The Java HashMap uses the following rehashing method: code.
5643714,1,0,1,java.util.HashMap,However I run into Error 415's when the object that is to be deserialized contains a HashMap: code.
5647827,1,0,0,java.util.HashMap,*; import   java.io.Serializable; import   java.util.ArrayList; import   java.util.Collection; import   java.util.Collections; import   java.util.Comparator; import   java.util.Date; import   java.util.HashMap; import   java.util.Iterator; import   java.util.LinkedHashMap; import   java.util.LinkedList; import   java.util.List; import java.util.Map;   import javax.ejb.EJB; import   javax.enterprise.context.SessionScoped;   import javax.inject.Named; import javax.faces.bean.ManagedBean; import   javax.faces.context.FacesContext;   import   javax.faces.event.AjaxBehaviorEvent;   import javax.inject.Inject; import service.IUserService; /**  *  * @author Julian  */ @Named   @ManagedBean @SessionScoped public   class KwetterBean implements   Serializable { code.
5647827,1,0,0,java.util.HashMap,"Integer>();           for (User u : uService.findAll()) {               for (Tweet t : u.getTweets()) {                   String[] words = t.getTweet().split("" "");                   for (String word : words) {                       if (word.startsWith(""#"")) {                           if (trends.containsKey(word)) {                               trends.put(word, trends.get(word) +   1);                           } else {                               trends.put(word, 1);                           }                       }                   }               }           }           trends = (HashMap) sortByValue(trends);           Iterator testiter = trends.keySet().iterator();           while (testiter.hasNext()) {               templist.add((String) testiter.next());           }           if(templist.size() < 5)               return templist; code."
5652974,1,0,2,java.util.HashMap,Java: Getting the 500 most common words in a text via HashMap.
5652974,1,0,2,java.util.HashMap,"I'm storing my wordcount into the value field of a HashMap, how can I then get the 500 top words in the text?"
5653070,2,0,1,java.util.HashMap,Here you can find a guide how to sort a HashMap by the values.
5655769,1,0,2,java.util.HashMap,import java.util.HashMap; import java.util.Map; import org.checkthread.annotations.ThreadSafe; @ThreadSafe public class SpellCorrectListCacheManager { code. }
5656629,2,0,2,java.util.HashMap,You cannot parallelize updates to HashMap because update can trigger resize of the underlying array including recalculation of all keys.
5656646,2,0,1,java.util.HashMap,I wouldn't use HashMap if you need to be concerned about threading issues.
5656696,2,0,0,java.util.HashMap,Look into Concurrent HashMap.
5657608,2,0,0,java.util.HashMap,Code using a HashMap or ArrayList.
5657608,2,0,0,java.util.HashMap,"The key of the HashMap represents the state, The ArrayList will have the cities."
5657316,2,0,1,java.util.HashMap,I would suggest using a HashMap that maps each state name to an ArrayList of city names.
5657316,2,0,1,java.util.HashMap,"As you process each input record, retrieve the ArrayList for the state from the HashMap."
5657316,2,0,1,java.util.HashMap,"If it's not there, then this is the first record for the state, so create a new ArrayList and put it in the HashMap under the state name."
5657316,2,0,1,java.util.HashMap,"If you need it as a multidimensional array at the end, then you can extract all the key/value pairs from the HashMap after everything has been processed."
5666982,2,0,2,java.util.HashMap,Solution use a regular HashMap: code.
5666820,1,0,9,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
5670761,2,0,0,java.util.HashMap,"Same goes with List or Map, instead of ArrayList or HashMap"
5676951,1,0,0,java.util.HashMap,"I read everywhere that you should use a HashMap, but I'm not quite sure if this is the correct method of doing so."
5677003,2,0,1,java.util.HashMap,"The idea is correct but as far as I see, you don't make correct use of the HashMap."
5678896,1,0,2,java.util.HashMap,This is the new method I created using a HashMap: code.
5679119,2,1,2,java.util.HashMap,"The standard approach to implementing Huffman trees is to use a hashmap (in Java, you'd probably use a HashMap<Character, Integer>) to count the frequency for each letter, and insert into the priority queue one node for each letter."
5679313,1,0,0,java.util.HashMap,Why is HashMap resetting after it exits method?
5679313,1,0,0,java.util.HashMap,"In the last method listed, I tested to see if the HashMap had null values instead of actually being empty, but it returns as having no values at all."
5679313,1,0,0,java.util.HashMap,Why is the HashMap resetting after I exit the first method?
20004474,2,0,3,java.util.HashMap,TimeZone functions are now controlled by SecurityManager (with a synchronized HashMap under the AppContext class).
5683847,2,1,1,java.util.HashMap,"The underlying data structure you want is probably a map (with HashMap probably being the best concrete implementation), not a set."
5685260,2,0,1,java.util.HashMap,use array[2][10] or simply array[10] (where number of digits = index of array and value = occurs) or even better - HashMap<> - google it.
5689517,1,0,33,java.util.HashMap,Java HashSet vs HashMap.
5689517,1,0,33,java.util.HashMap,I understand that HashSet is based on HashMap implementation but is used when you need unique set of elements.
26331514,2,0,0,java.util.HashMap,"I think the major difference is, HashSet is stable in the sense, it doesn't replace duplicate value (if found after inserting first unique key, just discard all future duplicates), and HashMap will make the effort to replace old  with new duplicate value."
26331514,2,0,0,java.util.HashMap,So there must be overhead in HashMap of inserting new duplicate item.
5689533,2,1,84,java.util.HashMap,"The difference between the two should be obvious:  in a Map you store key-value pairs in a Set you store only the keys  In fact, a HashSet has a HashMap field, and whenever add(obj) is invoked, the put method is invoked on the underlying map map.put(obj, DUMMY) - where the dummy object is a private static final Object DUMMY = new Object()."
5689574,2,0,6,java.util.HashMap,"In case of a HashMap, putting a new key,value pair with an existing key will overwrite the existing value to set a new value for that key."
5689807,1,0,1,java.util.HashMap,The server has List/HashMap/Queue of 'Socket' with their chat nick-names.
5693329,2,0,0,java.util.HashMap,"Most people would use HashMap<String, String>, or, for some json purposes, HashMap<String, Object>."
6304516,2,1,4,java.util.HashMap,"If the Map type in the example is changed to HashMap<String, Object> as recommended in another answer, then the output becomes {3=java.lang.Object@10b61fd1, one=java.lang.Object@24e2dae9, too=java.lang.Object@299209ea}, which is of course probably useless."
6304516,2,1,4,java.util.HashMap,"If for some reason a type of HashMap<String, Object> must be deserialized to, then custom deserialization processing would be necessary."
5697967,2,0,1,java.util.HashMap,"If the response is simple key-value, then you can convert the response into a HashMap<String,Object> which will act as a 'generic' class to satisfy all type of responses in your use case."
5698167,2,1,3,java.util.HashMap,"Have you considered stuffing the mapping into a HashMap once, and then just querying the map?"
5698174,2,0,2,java.util.HashMap,"This is what a map is for; Create a HashMap, add key and values to the map like code."
5699794,1,0,1,java.util.HashMap,"HashMap allows me to have null keys, but ConcurrentHashMap doesn't."
5699794,1,0,1,java.util.HashMap,I tried to create a synchronized version of HashMap using Collections.synchronizedMap(new HashMap()) but it doesn't accept null keys either.
5699853,2,1,5,java.util.HashMap,"If you give it a HashMap, it supports the null key (and also null values, you said ""...I need to have ""null"" key values..."" which can be read either way)."
6136285,2,0,0,java.util.HashMap,ConcurrentHashMap is quite different from Collections.synchronizedMap(new HashMap()).
5703492,1,0,0,java.util.HashMap,I think this is because HashMap's structure is  code.
5703557,2,0,2,java.util.HashMap,"You need to a implement a Comparator<HashMap<String,String> > and place the logic of your sort ordering inside its compare method."
5703559,2,0,1,java.util.HashMap,"So, to have your items sorted, just repalce your HashMap with a TreeMap, and all the work will be done."
5711060,2,0,0,java.util.HashMap,Obviously the the Object in the HashMap definition will need to be changed to the Object which you're keying off of.
5711724,1,0,4,java.util.HashMap,"After data is ""put"" into the HashMap, that data is never changed."
5711724,1,0,4,java.util.HashMap,"That is, is it safe to read a value from a HashMap at the same time that another thread is writing a value, knowing that the other thread will never be writing to the value you're reading?"
5711879,2,1,1,java.util.HashMap,You can't do that with multiple threads at once with a standard HashMap.
5713764,2,0,0,java.util.HashMap,"Instead of the HashMap you could use a persistentMap, then each writer will have to lock it while adding the new object and replacing the reference to the map with the new one, but readers could always read from the ""current"" version (possibly not finding the value they are looking for, because it is concurrently added."
5720368,1,0,14,java.util.HashMap,I am using an inner class that is a subclass of a HashMap.
5746058,2,1,4,java.util.HashMap,What happens is that docName is a reference to an element in an array (fields) and I am keeping that reference for the life of the program (by storing it in the global HashMap documents).
5721181,2,0,4,java.util.HashMap,Call your original HashMap a.
5721181,2,0,4,java.util.HashMap,"Have a second HashMap<String, Integer> aCount."
5721181,2,0,4,java.util.HashMap,"Every time you insert a key k and value v into the first HashMap, check to see if aCount.containsKey(v)."
5721181,2,0,4,java.util.HashMap,"Every time you remove a key k and value v from the first HashMap, check the count using aCount.get(v)."
5721181,2,0,4,java.util.HashMap,"Then, you need only call aCount.contains(v) to find out whether or not a given value is in your HashMap a."
5721181,2,0,4,java.util.HashMap,"Because, this way, instead of having an O(n) query time to find out if a value exists in your HashMap, you get O(1) time."
5721189,2,0,0,java.util.HashMap,"If you really need speed, you will neeed to store the used values in a HashSet, apart from the HashMap."
5721232,2,0,0,java.util.HashMap,"Since you are only interested in null, everytime you put into the HashMap, you can check if the value is null and store the key in a HashSet."
5723544,1,0,1,java.util.HashMap,HashMap Values Becoming Invalid?
5723736,2,1,3,java.util.HashMap,This way you blow the HashMap completely.
5723804,2,0,0,java.util.HashMap,"Just to tell you, the error will not come Java or the HashMap."
5730149,1,0,2,java.util.HashMap,I have a HashMap with coordinates as keys.
5730337,2,0,0,java.util.HashMap,You should realize there is a difference between a hashcode and the unique key to be used in a HashMap.
5730234,2,0,3,java.util.HashMap,"However, a HashMap will not require unique hashing, it will simply handle the collisions when they occur."
5730464,2,1,7,java.util.HashMap,"EDIT: IMHO HashMap/HashSet is O(log(log(n)) due to collisions, it is only O(1) if there is a perfect hash function."
5730464,2,1,7,java.util.HashMap,"prints [2032, 2002, 1972, 1942, 1913, 1883, 1853, 1823, 1763, 1729, 1703, 1669, 1642, 1608, 1582, 1548, 1524, 1494, 1456, 1426, 1405, 1375, 1337, 1307, 1255, 1221, 1187, 1153, 1134, 1100, 1066, 1032, 1016, 986, 956, 926, 881, 851, 821, 791, 747, 713, 687, 653, 610, 576, 550, 516, 508, 478, 440, 410, 373, 343, 305, 275, 239, 205, 171, 137, 102, 68, 34, 0] The values are in reverse order because the HashMap has generated into a LinkedList."
5807991,2,1,40,java.util.HashMap,"Map / HashMap, List / ArrayList & LinkedList and Set should be enough to get going."
5780654,2,0,3,java.util.HashMap,I suggest HashMap to get the idea of the computing/memory cost of these operations.
5740261,2,0,0,java.util.HashMap,"Also you could consider gathering those object.item_n properties into a property collection of some sort (like HashMap<String, String> textualproperties )and iterate over those or whatever."
5742746,2,0,5,java.util.HashMap,Use a data structure like a HashMap to record frequencies of each number.
5742746,2,0,5,java.util.HashMap,"Iterate through in O(n) time to build the frequency counts, then either iterate through whole HashMap or extract one value."
5750122,1,0,0,java.util.HashMap,"A simplistic solution I can think of is to send a representation of the user with modified id and version and to map the ""public"" values with the database values in a HashMap that lives in the server's memory."
5760792,2,0,3,java.util.HashMap,"HashMap, TreeMap and the like all have reads that are modification free and so are fine, but implementations that track usage may perform updates internally."
5825114,2,0,1,java.util.HashMap,I think others have covered the answer already (yes in the case of the HashMap implementation).
29058755,2,0,1,java.util.HashMap,Contained in the map implementations are non-volatile fields (like HashMap.entrySet.
6131081,2,0,1,java.util.HashMap,"The time complexity should be O(N) because the HashMap operations put, get and keySet are O(1)."
5918104,2,0,1,java.util.HashMap,"As I commented, your sollution is not O(N), because the containsValue make a search of all values stored at the HashMap."
5761639,1,0,2,java.util.HashMap,HashMap with String and Arraylist - Error Message.
5761688,2,0,0,java.util.HashMap,"BTW, a good habit to get into is to define the types for variables in the least restrictive way possible, say declare map as type Map instead of HashMap  code."
5761689,2,0,3,java.util.HashMap,You have an HashMap that has Strings for keys and ArrayLists for values: code.
5762356,2,1,1,java.util.HashMap,Use a HashMap with the key type as your entity ID and the value type as the Java class for that object.
5762356,2,1,1,java.util.HashMap,"If it has not, fetch the entity from the remote service, deserialize the object appropriately, load it into the HashMap by the specified ID, and return it."
5762893,2,0,2,java.util.HashMap,"Furthermore even if you don't write it too well, the HashMap implementation rehashes your result to reduce collisions: code."
5763844,2,0,2,java.util.HashMap,"Similarly, you should prefer HashMap to HashTable."
5765429,1,0,0,java.util.HashMap,I want to use HashMap or any Map for my purpose.
5765582,2,0,2,java.util.HashMap,"if not, use a HashMap Can you have the same rating for two cities?"
5766119,2,1,3,java.util.HashMap,"Then, if you really want to understand, download Eclipse and browse the source code (the JDK classes are open source):  Interface Collection All Superinterfaces:       Iterable All Known Subinterfaces:       BeanContext, BeanContextServices, BlockingDeque, BlockingQueue,   Deque, List, NavigableSet,   Queue, Set, SortedSet All Known Implementing Classes:       AbstractCollection, AbstractList, AbstractQueue, AbstractSequentialList,   AbstractSet, ArrayBlockingQueue,   ArrayDeque, ArrayList, AttributeList,   BeanContextServicesSupport,   BeanContextSupport,   ConcurrentLinkedQueue,   ConcurrentSkipListSet,   CopyOnWriteArrayList,   CopyOnWriteArraySet, DelayQueue,   EnumSet, HashSet, JobStateReasons,   LinkedBlockingDeque,   LinkedBlockingQueue, LinkedHashSet,   LinkedList, PriorityBlockingQueue,   PriorityQueue, RoleList,   RoleUnresolvedList, Stack,   SynchronousQueue, TreeSet, Vector  Per the commenter below, see java.util.Map:  Interface Map Type Parameters:       K - the type of keys maintained by this map       V - the type of mapped values All Known Subinterfaces:       Bindings, ConcurrentMap, ConcurrentNavigableMap,   LogicalMessageContext, MessageContext,   NavigableMap, SOAPMessageContext,   SortedMap All Known Implementing Classes:       AbstractMap, Attributes, AuthProvider, ConcurrentHashMap,   ConcurrentSkipListMap, EnumMap,   HashMap, Hashtable, IdentityHashMap,   LinkedHashMap, PrinterStateReasons,   Properties, Provider, RenderingHints,   SimpleBindings, TabularDataSupport,   TreeMap, UIDefaults, WeakHashMap  The Java Collections Framework contains the APIs you are researching, which I believe another poster mentioned."
5767754,2,0,0,java.util.HashMap,"If you want to try a low-cost approach (programming-wise), then a HashMap<Integer, Byte> or something close could make a decent sparse vector."
5769082,2,1,2,java.util.HashMap,"Also, to assign a score to a particular string array, assuming your scores are int's you could use a HashMap as follows, code."
5769150,2,0,2,java.util.HashMap,If you use java.util.Properties the key-value pairs are stored in a Hashmap which doesn't maintain any order no matter how you insert sorted values in a HashMap.
5769909,1,0,0,java.util.HashMap,Problem with HashMap values().
5771037,1,0,3,java.util.HashMap,Creating a static HashMap and setting it into a class in Java--will it be truly static?
5771037,1,0,3,java.util.HashMap,"In my solution I have classes to model functions;  but since binding has to be global I was thinking that I could create a class whose only job was to contain a static HashMap for all my variable bindings, but set each function class's HashMap to point to it."
5771037,1,0,3,java.util.HashMap,"What I'm not sure about is if this will work as intended;  if I have multiple functions, can I guarantee that they all have access to the data in my binding HashMap?"
5773096,1,0,5,java.util.HashMap,"HashMap would almost work, but using java.util.Collections.max() is at least O(n) in the size of the map."
5773239,2,0,0,java.util.HashMap,I combined a TreeMap with an HashMap (which is not really O(1) but it is almost when it's not too full and the hashing function is good) and I got really good results.
5773239,2,0,0,java.util.HashMap,"For your specific case, I would go for a dynamic combination between an HashMap and a custom helper data structure."
5773239,2,0,0,java.util.HashMap,"Just keep all the stuff in the HashMap, and then use a special field (currentMax) that only contains the max element in the map."
5773239,2,0,0,java.util.HashMap,"When you insert() in your combined data structure, if the element you're going to insert is > than the current max, then you do currentMax <- elementGoingToInsert (and you insert it in the HashMap)."
5773374,2,0,0,java.util.HashMap,Look at using java.util.HashMap.
5773374,2,0,0,java.util.HashMap,"If so, you will need to convert the vals array into a Float (or Double) array first, and modify the HashMap instantiation accordingly: code."
5776331,1,0,3,java.util.HashMap,Storing a HashMap in an SQL database.
5776331,1,0,3,java.util.HashMap,How do you store a HashMap inside of an SQL database?
5776331,1,0,3,java.util.HashMap,"Also, how would you load that HashMap from a SQL database back into an instance of a HashMap?"
5776331,1,0,3,java.util.HashMap,Each player has a HashMap that stores their properties.
5776331,1,0,3,java.util.HashMap,I need to store that HashMap in the database along with it's respective user.
5776385,2,0,1,java.util.HashMap,Each entry in the HashMap is like a row in your table.
5776385,2,0,1,java.util.HashMap,You would end up having a separate table for each HashMap (probably).
5776348,2,0,1,java.util.HashMap,"HashMap is data structure, You can store data residing in it."
5777472,1,0,0,java.util.HashMap,"doing this, i find that my java memory does not get swapped (so, i guess heap memory is treated a bit differently from stack here) [oh, i did change all the code to be static typed as well - i know, very bad programming style] the issue that i am running into now is how to handle my HashMap... all my attempts of trying to build a lookup table is failing with O(n^2) running time to build!!"
5781190,2,0,1,java.util.HashMap,HashMap) and is modified by other thread you may get ConcurrentModificationException.
5781416,1,0,0,java.util.HashMap,How can I put a HashMap as an input in a Java Web Service?
5782021,1,0,3,java.util.HashMap,DB4o HashMap toString().
5782021,1,0,3,java.util.HashMap,To do this I create an instance of a TelephoneDirectory which contains a year and a HashMap of entries.
5786317,2,0,1,java.util.HashMap,"In your object, you could include a key-value data store like a HashMap or Dictionary so that additional data can be passed without changing the signature or schema of the web service."
5788247,2,0,0,java.util.HashMap,"something like this :HashMap<Integer,AClass> ."
5792235,1,0,2,java.util.HashMap,"Currently I have 2 HashMap<String,Integer> and do it like this:  code."
5794351,1,0,0,java.util.HashMap,Refactoring a class using ArrayList to use HashMap (Java).
5794351,1,0,0,java.util.HashMap,I was told to change everything to HashMap() instead of ArrayList() and for the most part everything worked perfect.
5794351,1,0,0,java.util.HashMap,my HashMap() looks like private HashMap critMap = new HashMap(); I have Room class and Creature class  Room can have Creatures in it.
5794351,1,0,0,java.util.HashMap,THIS IS THE METHOD AFTER I TIRED TO IMPLEMENT HashMap() code.
5794480,2,1,0,java.util.HashMap,It could be that you didn't change the getCreatures() method after you switched to HashMap since after the change you dont need to loop and get(i).
5799245,2,0,2,java.util.HashMap,"Or, you can also use a HashMap"
5800020,2,1,4,java.util.HashMap,"HashSet is more or less a decorator of a full blown HashMap, somewhat heavier compared to an array."
10267480,2,0,1,java.util.HashMap,"I just keep a global HashMap containing my datasources, and if I request a datasource that does not exist yet, I create a new one."
5803606,1,0,0,java.util.HashMap,In java i have a bean object(type unknown) i want to put the values of members of that bean into one HashMap with class members as key.Without using reflection can i do that if so how ?
5804762,1,0,1,java.util.HashMap,How to get attributes for HashMap value?
5804933,2,0,0,java.util.HashMap,If your question is how to cast the value mapped to the key in the HashMap why not use generics to achieve that: code.
5805898,2,1,7,java.util.HashMap,Use a normal HashMap with variable names as strings against their values.
5808018,1,0,2,java.util.HashMap,Key not found in a HashMap for a composite object.
5808018,1,0,2,java.util.HashMap,"Now, I add the key in HashMap HashMap map = new HashMap(); map.put(key1,1); Now, this is the problem when I do contains key, it gives false; code."
5808198,2,0,1,java.util.HashMap,"HashMap#containsKey overrides AbstractMap#containsKey - so there's a subtle difference in the way that the condition: ""Returns true if and only if this map contains a mapping for a key k such that (key==null ?"
5808198,2,0,1,java.util.HashMap,"However, for a HashMap, you need to have the implementation of hashCode() correct and satisfying the appropriate identity as well."
5808251,2,1,4,java.util.HashMap,"Since HashMap calls equals(Object) to check keys for equality, your method never gets called, so you need to implement equals(Object) instead."
5808253,2,0,1,java.util.HashMap,public boolean equals(PatternGeneratorKey k) { is not what HashMap uses.
5811684,2,0,1,java.util.HashMap,Looking at the code (http://code.google.com/p/gui4processing/source/browse/trunk/GUI4Processing/src/guicomponents/G4P.java?r=331) shows that all GImageButton instances are stored in a static HashMap.
5811253,1,0,1,java.util.HashMap,I have a finite number of lists Each list contains a finite number of contacts Each contact is represented as a HashMap Each list is linked to a provider  The same contact may be present in multiple providers (and hence multiple lists).
5811253,1,0,1,java.util.HashMap,"For example if the same contact appears in multiple lists (multiple HashMaps corresponding to the same physical person) I want to merge all the HashMaps into a single one, and put the merged HashMap into the master list."
5811253,1,0,1,java.util.HashMap,"The problem that has me scratching my head is efficient scanning of the lists ... is there no other way than linearly going through each list in a nested loop, grabbing the next HashMap, checking if it already exists in the mater list and merging/creating a new one ... ?"
5811752,2,1,1,java.util.HashMap,"First observation - using a HashMap to represent your contacts smells of ""object denial""."
5811406,2,0,0,java.util.HashMap,"For your internal master list, can you use a class that you can define a meaningful equals() on to encapsulate the HashMap, instead of just storing straight HashMaps?"
5812970,1,0,4,java.util.HashMap,"So I was initially thinking that in step (2) as I went through the file I would build up and put into the cross-request container a Map<CategoryId, Set<ObjectId>> (specifically a HashMap for quick lookup and insertion) and then when it was time to do the work I could just iterate on the map and for each CategoryId pull out the associated Set<ObjectId> and pass them into assignObjectsToCategory()."
5813880,2,0,0,java.util.HashMap,"You will also be able to add new elements to the HashMap, with the appropriate key values."
5816297,2,0,4,java.util.HashMap,HashMap) there may be a performance issue.
5818676,2,0,1,java.util.HashMap,"And from there you could store it in a HashMap<String, Integer> as others have said."
5818565,2,0,0,java.util.HashMap,Use a HashMap that holds alarm name and count.
5818565,2,0,0,java.util.HashMap,"When you get an alarm check it on HashMap, if exists increase the count otherwise put it into that HashMap and set count as 1, repeat until the end."
5818565,2,0,0,java.util.HashMap,When you iterate over that HashMap you will able to see which ones has alarmed and how many times.
5819946,1,0,1,java.util.HashMap,Call on different constructor with 'default' HashMap.
5819946,1,0,1,java.util.HashMap,Now the requirements of MyClass changed and the user can provide a HashMap to indicate some pairs .
5822987,2,0,1,java.util.HashMap,"If you want to avoid creating a new anonymous HashMap subclass, and only need one pair, and don't want to make a new static method, you could do this: code."
5822987,2,0,1,java.util.HashMap,"If your other constructor takes a Map and copies it, you may not even need to crate the HashMap code."
5819982,2,1,3,java.util.HashMap,You could inline the HashMap creation: code.
5820247,2,0,1,java.util.HashMap,"I prefer it over subclassing the HashMap-class (as suggested by @alpian) - Seems cleaner, and also does not create the risk of breaking the contract of the equals() method (described here: http://c2.com/cgi/wiki?DoubleBraceInitialization)"
5819997,2,0,1,java.util.HashMap,"Personally, I would go with creating a new HashMap(...) in both constructors, and not try to wrap the creation in a new static method."
5822572,1,0,0,java.util.HashMap,Java HashMap losing value on loop iteration.
5823556,2,1,0,java.util.HashMap,"Even though failure to override hashCode() will only break usage of your class in HashSet, HashMap, and other hashCode dependent structures, you should still override hashCode() to maintain the contract described by Object."
5823064,2,0,0,java.util.HashMap,"(Note that the above code can cause null reference exceptions if getName() returns null: you may want to use a utility class as described here) And yes hashCode() would be called when you use some hashing data structure like HashMap,HashSet  You must override hashCode() in every   class that overrides equals()."
5823064,2,0,0,java.util.HashMap,"Failure   to do so will result in a violation of   the general contract for   Object.hashCode(), which will prevent   your class from functioning properly   in conjunction with all hash-based   collections, including HashMap,   HashSet, and Hashtable."
5826123,2,1,6,java.util.HashMap,"(The same is valid for equals and hashCode of keys in hash-based structures like HashMap, by the way.)"
5826384,1,0,29,java.util.HashMap,"Java : Iteration through a HashMap, which is more efficient?"
5826597,2,0,2,java.util.HashMap,"In general, the second one would be a bit faster for a HashMap."
5826410,2,0,6,java.util.HashMap,"EDIT: Actually, upon looking at the source of the HashMap class, it seems that alt #2 should be quite a bit faster (when we are talking about nano seconds)."
5826428,2,0,5,java.util.HashMap,"All HashMap iterators call the nextEntry method, which returns an Entry<K,V>."
26148496,2,0,0,java.util.HashMap,"Map: Map<String, Integer> map = new HashMap<String, Integer>(); Beside the 2 options, there is one more."
5826497,2,0,1,java.util.HashMap,"bguiz, I think (I don't know) that iterating the EntrySet (alternative 2) is marginally more efficient, simply because it doesn't hash each key in order to get it's value... Having said that, calculating the hash is an O(1) operation per entry, and therefore we're ONLY talking O(n) over the whole HashMap... but note that all this applies to HashMap only... other implementations of Map may have VERY different performance characteristics."
5829311,2,0,2,java.util.HashMap,But the main idea is to call EnumWindows with a WndEnumProc() that will put all windows it finds to a collection ( in my case an HashMap ).
5828647,1,0,7,java.util.HashMap,An interchangeable key/value HashMap Set structure.
5828923,2,0,1,java.util.HashMap,"I hope I'm not completely wrong:  You can use a HashMap and put each mapping twice: (primary, secondary) and (secondary, primary)."
5830575,1,0,5,java.util.HashMap,"At one place i have to use a map with many values mapped to a single key, so i was wondering whether there is any significant performance distinction between using HashMap of key, list and MultiMap of key , values in java."
5830695,2,0,1,java.util.HashMap,"In case you don't want to introduce a new dependency, HashMap<Key, Collection<Value>> should do the trick which is pretty much what apache.collections HashMultiMap does."
5830622,2,0,0,java.util.HashMap,"You could use Guava which provides different value collection implemantions: HashMultiMap (HashMap<KEY, HashSet<VALUE>>), ArrayListMultiMap (HashMap<KEY, ArrayList<VALUE>>)..."
5839429,2,0,0,java.util.HashMap,"As far as the unique visitors per page go, you can grab the 1st element of the array you used for splitting and putting that value inside a HashMap with the that IP value as the key and the page they visited as a value."
5839429,2,0,0,java.util.HashMap,"Then do a check on the HashMap with every IP that comes in and if its not in the it, insert it and by the end you will have a HashMap filled with unique elements/IPs."
5839359,1,0,154,java.util.HashMap,I am getting this error in a program that creates several (hundreds of thousands) HashMap objects with a few (15-20) text entries each.
5839359,1,0,154,java.util.HashMap,"So, my question is: is there any programmatic alternative to this, for the particular use case (i.e., several small HashMap objects)?"
5839359,1,0,154,java.util.HashMap,"If I use the HashMap clear() method, for instance, the problem goes away, but so do the data stored in the HashMap!"
5839392,2,1,84,java.util.HashMap,"Options that come to mind:  Specify more memory like you mentioned, try something in between like -Xmx512m first Work with smaller batches of HashMap objects to process at once if possible If you have a lot of duplicate strings, use String.intern() on them before putting them into the HashMap Use the HashMap(int initialCapacity, float loadFactor) constructor to tune for your case"
14384239,2,0,6,java.util.HashMap,Use alternative HashMap implementation (Trove).
14384239,2,0,6,java.util.HashMap,Standard Java HashMap has >12x memory overhead.
5839535,2,1,12,java.util.HashMap,"If you allocate a HashMap or Hashtable with a large initial size, the majority of the space will be occupied by the hash array."
5839535,2,1,12,java.util.HashMap,"If you are storing objects in a default allocated HashMap or Hashtable, the class will automatically resize the hash table as it gets larger."
5841210,2,1,1,java.util.HashMap,"The ""default"" implementation of Map is the HashMap class... By default I mean use HashMap whenever you need a Map, unless you've got a good reason to use something else, which won't be often."
5841210,2,1,1,java.util.HashMap,HashMap is generally the best allround performer.
5842874,1,0,0,java.util.HashMap,"when ObjectUtils.compare(object1,object2); --> return HashMap contain ""username"" and ""passwork"" as key"
5843590,2,0,3,java.util.HashMap,"Also, you should use HashMap instead of Hashtable these days, and you should declare variables with the broadest useful type, which here means List rather than ArrayList, and Map rather than Hashtable or HashMap."
5845137,1,0,2,java.util.HashMap,A Model class that extends HashMap and it's using completely raw types (ugh!)
10254691,2,0,0,java.util.HashMap,"Rather, you can use a HashSet instead of a HashMap for code clarity."
10254691,2,0,0,java.util.HashMap,Note: HashSet is internally backed by a HashMap with a final object used as the Value in the Key Value pair.
5846151,2,1,6,java.util.HashMap,"To answer your question about unique strings, you can adapt the way I use the HashMap in a similar fashion."
5846151,2,1,6,java.util.HashMap,"create a new HashMap, call it uniqueStrings when reading strings from the file, check if the HashMap that keeps track of the count contains the current string  if it doesn't, then add it to uniqueStrings if it does, then remove it from uniqueStrings  after you're done reading the file, you will have only unique strings in uniqueStrings  Let me know if you have questions."
5847106,1,0,1,java.util.HashMap,I can use a syncronize block I can use Map m = Collections.synchronizedMap(new HashMap(...)); in my code.
5847289,2,1,9,java.util.HashMap,a HashSet (backed by HashMap) works if the hashcodes of objects do not change.
5853087,1,0,0,java.util.HashMap,"an array or a list of Java HashMap<String, String> objects, where each HashMap will contain the data of a single top-level JSON object from the file."
5853087,1,0,0,java.util.HashMap,"From what I have seen, you can't get a HashMap<String, String> from Jackson, so I have to put up with a HashMap<String, Object>: code."
5862779,2,0,0,java.util.HashMap,"Each of the HashMap<String, Object> objects placed in the above ArrayList corresponds to a single (top-level) JSON event."
5855783,1,0,1,java.util.HashMap,Sorting HashMap by key.
5855783,1,0,1,java.util.HashMap,"hello I need to implement a method that receives a HashMap and sorts (mergeSort) it's values by key (without using TreeMap, SortedMap or Collections.Sort or use any sort solutions from JAVA Packages)."
5855974,2,1,1,java.util.HashMap,What you did in merge is using wildcards on the result HashMap code.
5855975,2,0,4,java.util.HashMap,This will sort the keys and return a subclass of HashMap.
5855975,2,0,4,java.util.HashMap,"The problem you have is that you cannot return a HashMap as it doesn't keep the order, adn you cannot return a TreeMap because it will sort the keys for you making anything else you redundant."
5856124,2,0,1,java.util.HashMap,"Answering your question, put at your guide lines to use WeakHashMap ( http://download.oracle.com/javase/6/docs/api/java/util/WeakHashMap.html ) for caching rather than to use the ""normal"" HashMap."
5864736,2,0,1,java.util.HashMap,"It reduces the overhead and sort of takes us back to having to do our own memory cleanup, as we did in C, albeit in a much simpler approach akin to a HashMap."
5865449,2,1,0,java.util.HashMap,Refactor the settings into a separate data object (rather than a HashMap or servlet instance fields) to be shared by servlet instances.
5871741,2,0,1,java.util.HashMap,"This is the basic, to create the updated HashMap (to send to server) iterate over the array of CheckBoxes and insert key as current name of the check box, and value depending if the checkbox is selected or not."
5871761,1,0,0,java.util.HashMap,but the HashMap gets emptied in mysterious ways sometimes!
5872335,2,0,2,java.util.HashMap,You don't want to use a HashMap as a singleton since it's not thread safe.
5871936,2,1,1,java.util.HashMap,"I'd say a HashMap: it lets you quickly check whether an object exists with a given unique ID, and retrieve that object if it does exist in the collection."
5871936,2,1,1,java.util.HashMap,"This answer originally made reference to the Hashtable class, but after further research (and some good comments), I discovered that you're always better off using a HashMap."
5873404,1,0,0,java.util.HashMap,"Like Map result = new HashMap(); result.put(""Report Page"", line.substring(60)); I then add these Maps to a list and I interate through the list and display my table."
5873404,1,0,0,java.util.HashMap,"String line; while ((line = reader.readLine()) != null) { Map result = new HashMap(); if(line.contains(""Parm Name/Value:REPORT_PAGE"")){  result.put(""Report Page"", line.substring(60)); } rows.add(result);"
5878221,2,0,0,java.util.HashMap,Look here at how the java.util.HashMap implementation handles this problem.
5883782,2,1,0,java.util.HashMap,It excels over org.json implementation by the fact that it simply extends HashMap for JSONObject and ArrayList for JSONArray making these objects by definition serializble and thus cacheable.
5885669,1,0,0,java.util.HashMap,I've been reading on here and the general answer is to use a HashMap which I'm not interested in since this isn't to solve a real problem.
5888098,2,0,0,java.util.HashMap,"What you can do, however, is to use a data structure such as a HashMap."
5888098,2,0,0,java.util.HashMap,"To print all the data in the HashMap, you can, for instance, dome something like this: code."
5888407,1,0,0,java.util.HashMap,"In Java: List, ArrayList and Map, HashMap."
5888407,1,0,0,java.util.HashMap,Is List:ArrayList::Map:HashMap ?
5888441,2,0,2,java.util.HashMap,List and Map are interfaces their implementations are ArrayList and HashMap
5888445,2,0,2,java.util.HashMap,"An ArrayList is a concrete implementation of a List, and a HashMap is a concrete implementation of a Map."
5888455,2,1,6,java.util.HashMap,"If you're asking whether or not HashMap implements the Map interface, like ArrayList implements the List interface, then yes."
5888457,2,0,1,java.util.HashMap,"Just as an ArrayList is an implementation of the List interface, similarly, HashMap is an implementation of the Map interface."
5888475,2,0,0,java.util.HashMap,HashMap implements the Map interface and maps keys to values just like a 'hashtable'.
5916028,1,0,4,java.util.HashMap,AppContext.mainAppContext contains a HashMap which contains a BasicPopupMenuUI.MenuKeyboardHelper instance.
5916743,2,0,2,java.util.HashMap,"No, the depth doesn't matter (until the memory runs out, at least) Just use HashMap instead of Hashtable"
5920135,1,0,14,java.util.HashMap,Printing HashMap In Java.
5920135,1,0,14,java.util.HashMap,I have a HashMap: code.
5923231,1,0,0,java.util.HashMap,"GWT, modifying code that uses InputStreamReader and java.net.URL class to send a HashMap or other object through Post?"
5923231,1,0,0,java.util.HashMap,"While this is a good starting point, I'd like to figure out how to now be able to send an actual object from GWT (such as just a HashMap for testing) to Spring through a POST method."
5923545,2,0,0,java.util.HashMap,The latest versions of GWT will automatically handle serialization for all classes marked Serializable (includes HashMap) or IsSerializable (for custom data classes.)
5923405,1,0,2,java.util.HashMap,"I need to use a HashMap of the form <String, ArrayList<String>> that is going to be  accessed by several different threads."
5927494,2,1,2,java.util.HashMap,"Map<String, List<Float> dictionary = new HashMap<String, List<Float>>(); Note that local primitive variables are also not initialized, so this could give you an error too: boolean res; In Java only class members are initialized, local variables are not."
5927862,1,0,6,java.util.HashMap,How to sort the values of a HashMap freemarker template.
5927862,1,0,6,java.util.HashMap,I have in java this HashMap: code.
5927996,2,0,0,java.util.HashMap,"If you need iteration over a HashMap in predictable order, you can use a LinkedHashMap with predictable iteration order, it maintains a doubly-linked list running through all of its entries."
5927924,2,0,0,java.util.HashMap,HashMap is not ordered.
5928934,2,0,2,java.util.HashMap,"You can define collection using generics, so compiler will do work for you: Map<String, Map> one = new HashMap<String, Map>();  Map<String, Integer> two = new HashMap<String, Integer>();  Now your can say: int n = one.get(""foo"").get(""bar""); No casting, no problems."
5938082,2,0,0,java.util.HashMap,"If you really don't need a list at all, you may be able use an Array, a TreeMap, or a HashMap."
5947869,1,0,16,java.util.HashMap,Like ImmutableMap.of() for HashMap in Maps?
5947869,1,0,16,java.util.HashMap,But such methods afren't there for HashMap or LinkedHashMap in Maps class.
5947869,1,0,16,java.util.HashMap,Is there any better way to do this or Guava assumes such a map is always a constant map and ImmutableMap is best option to go with and don't need to provide a utility for HashMap.
5947915,2,1,13,java.util.HashMap,Why would you want those for a regular HashMap or LinkedHashMap?
5948568,1,0,2,java.util.HashMap,"I could also use HashMap<Element, Element> and store the same referrence as the key and value, but that seems just as dirty... Is there some better way to do this?"
5948692,2,0,0,java.util.HashMap,below is the basic caching implemetation here also HashMap is used  Caching implementation
5948614,2,1,3,java.util.HashMap,"If you're using a HashSet, the underlying implementation actually uses a HashMap anyway, so I suggest you go with a HashMap."
5949605,1,0,5,java.util.HashMap,"And Im putting these to a Long, String HashMap pair."
5949639,2,0,2,java.util.HashMap,Use TreeMap instead of HashMap.
5949639,2,0,2,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
5949671,2,0,3,java.util.HashMap,use LinkedHashMap instead of HashMap.
5950432,2,1,3,java.util.HashMap,"Just create the HashMap inside the method, then move all the work into an auxillary method, like this: code."
5951162,1,0,6,java.util.HashMap,"Create a HashMap (in a final field) Populate HashMap Wrap HashMap with unmodifiable wrapper Map Start other threads which will access but not modify the Map  As I understand it the Map has been ""safely published"" because the other threads were started after the Map was fully populated so I think it is ok to access the Map from multiple threads as it cannot be modified after this point."
5951215,2,0,0,java.util.HashMap,"Also note that if you only wrap the original Map rather than creating a copy, ie the unmodifiable Map delegates method calls further to the inner HashMap, modifying the underlying Map may introduce race condition problems."
5954184,2,1,3,java.util.HashMap,"Well you can also use array, List , but if you use HashMap you retrieval process would be almost o(1)"
5954583,1,0,0,java.util.HashMap,I tried different collection types but would like to stick to a HashMap (because I have to have random access).
5954651,2,0,1,java.util.HashMap,A HashMap is typically just a large array of references filled to a certain percentage of capacity.
5954651,2,0,1,java.util.HashMap,"Once your map is filled, you can copy it to another HashMap with a more appropriate (smaller) size giving a larger fill percentage."
5957256,1,0,2,java.util.HashMap,While on another system it is returning the following  java.util.HashMap$ValueIterator@38fff7  Any ideas about this discrepancies?
5960246,2,1,2,java.util.HashMap,"With XSSF, the iterator you get back is taken from a TreeMap (it's the values iterator), so I wouldn't expect a HashMap iterator but I would expect a java.util one That makes me think that you're possibly not using the same version of POI in both places See the POI FAQ for how to check which jar file you're using for POI"
5963631,1,0,0,java.util.HashMap,In my controller I use HashMap to get student details like code.
5967574,2,0,0,java.util.HashMap,"Java has a way of wrapping an existent hash map and returning a synchronized map; however you will have to write the synchronization yourself: Collections#synchronizedMap It is quite easy to extend an HashMap or implement the Map interface to enforce some synchronization on get() and put(), however iterators are more tricky."
5968208,1,0,3,java.util.HashMap,How to convert List to a HashMap.
5974065,1,0,3,java.util.HashMap,HashMap does extend AbstractMap and the first line where map is declared compiles fine.
5974147,2,1,7,java.util.HashMap,We should have a ConcurrentHashMap - but in reality we've only got a HashMap.
5981647,1,0,2,java.util.HashMap,How do I create a multidimensional HashMap or Hashtable in JSP / Java and convert it to a JSON object?
5981647,1,0,2,java.util.HashMap,I need help creating a multidimensional HashMap or Hashtable in JSP.
5981647,1,0,2,java.util.HashMap,Why I do I need HashMap or HashTable?
5982588,1,0,10,java.util.HashMap,"I'm somewhat new to multithreaded environments and I'm trying to come up with the best solution for the following situation: I read data from a database once daily in the morning, and stores the data in a HashMap in a Singleton object."
5982588,1,0,10,java.util.HashMap,"I'm worried about the case where the getter is called while I'm emptying and recreating the HashMap, thus trying to find an element in an empty/malformed list."
5983232,2,0,3,java.util.HashMap,"EDIT: If it is not just a simple a -> A case, then it might be an idea to create a HashMap with key=>value pairs: code."
5989758,1,0,4,java.util.HashMap,I am thinking of using HashMap to count the elements' frequencies by incrementing the corresponding counter each time an element occurs & then doing HashMap iteration 5 times to find the highest freq.
5989954,2,0,0,java.util.HashMap,I would also use a HashMap.
5989971,2,0,2,java.util.HashMap,I would do it in two iterations like this: first count the frequencies using a HashMap.
5989971,2,0,2,java.util.HashMap,"First, calculate frequencies using HashMap."
5992238,2,0,0,java.util.HashMap,"You have chosen incorrect collection type for this operation, if you wanna save your element tag values in Set yes it is better to use HashSet but implementation of HashSet approximately you try to do, so values of Set puts into HashMap like keys, but you can use another collection like List, Queue, Stack try to find better for you."
5993752,1,0,4,java.util.HashMap,HashMap serialization and deserialization changes.
5993752,1,0,4,java.util.HashMap,"We are seeing some problems with HashMap, where we serialize it, but when we deserialize it the checksum changes."
5993752,1,0,4,java.util.HashMap,I would like to be able to serialize the HashMap and get the same checksum when I deserialize it.
5993788,2,1,4,java.util.HashMap,"You are doing nothing wrong, it just can't be done with a HashMap."
5993788,2,1,4,java.util.HashMap,"In a HashMap, order is not guaranteed."
5993788,2,1,4,java.util.HashMap,"(The HashMap class   is roughly equivalent to Hashtable,   except that it is unsynchronized and   permits nulls.)"
5993833,2,0,4,java.util.HashMap,Your check sum cannot depend on the order of entries as HashMap is not ordered.
5995259,2,0,2,java.util.HashMap,a HashMap and code.
5997415,2,0,2,java.util.HashMap,"But to answer the following part: ""Then does this ensures that myObj would be 100% intialiased when another thread does a cHashM.get() "", it would depend on when the object is put into the HashMap."
5999727,1,0,4,java.util.HashMap,HashMap says Key doesn't exist even though it does.
5999727,1,0,4,java.util.HashMap,I have run into an interesting problem which I'm pretty sure is the fault of HashMap.
5999727,1,0,4,java.util.HashMap,"Consider the following debug code (AMap is a HashMap, key is a value passed to this method) code."
5999727,1,0,4,java.util.HashMap,"As you can see, fetching the key from the HashMap directly doesn't work but looping through I get the exact same key, meaning its there it just can't be found with get()."
5999736,1,0,5,java.util.HashMap,Java HashMap with or without type?
5999736,1,0,5,java.util.HashMap,Should the declaration of a HashMap always include the type e.g.
5999744,2,0,7,java.util.HashMap,";)  Map is the interface, which defines behavior, and HashMap is an implementation that provides the behavior."
6000433,1,0,1,java.util.HashMap,"I would like to, for example, serialize an object such as Map <String, String> testMap = new HashMap <String, String> () and then pass this into a Spring controller, from a client."
6001743,1,0,6,java.util.HashMap,"I have bean ""MyBean"", which has property HashMap - ""map"" which values type is MyClass."
6001791,2,1,4,java.util.HashMap,"So, var is set as your HashMap and EL tries to look up the key ""value"" on it."
6002497,2,1,7,java.util.HashMap,"This will work fine, but once you get to serializing a HashMap you will not end up with an obvious {keyOne:""one"",keyTwo:""two""} but rather something strange like {entry:[{key:""keyOne"",value:""one""},{key:""keyTwo"",value:""two""}]}."
6004324,1,0,1,java.util.HashMap,"I have verified that I can access this basic service through a browser by pulling up the XML page using a url like http://localhost:8080/WebServicesExample/hello?wsdl The code I currently have is like below, however I want to make a service so that a serialized object can be passed in, for example a HashMap and then have spring de-serialize it, etc."
6004917,2,1,4,java.util.HashMap,"He proposes, in situations like yours, to have all the references to bitmaps in a HashMap of soft references, so the GC can collect the unused images when needed."
6005843,1,0,1,java.util.HashMap,"I have Map <A, List<A>> map = new HashMap<A, List<A>>(); Say I want to print out each element in List<A> via an enhanced for loop doing map.get(KeyOftypeA) does not return an iterable list...seems it returns a generic Object what do I do to get back the nice list i input and make it iterable?..."
6006478,2,0,0,java.util.HashMap,A Hashtable != HashMap The documentation for Map#keyset() says Returns a Set view of the keys contained in this map The documentation for Iterator in Java - a more general discussion can be found on Wikipedia
6006479,2,0,0,java.util.HashMap,This Set contains all of the Key Values from the HashMap.
6006479,2,0,0,java.util.HashMap,"oh and as someone pointed out, we are getting a HashMap from wordobject."
6006484,2,0,0,java.util.HashMap,You are declaring a typical Java HashMap in the first line (a little obvious).
6006484,2,0,0,java.util.HashMap,"You usually construct a HashMap using generics for key value pairs: HashMap<K,V> The Java API HashMap class allows you to get a set of the keys used for the HashMap."
6010843,1,0,15,java.util.HashMap,I usually use HashMap for couples of data key + value.. should I go for HashMap + Arraylist ?
6013631,1,0,2,java.util.HashMap,"But I have a small doubt that is, while adding the instance of A to HashSet/HashMap the value of the hashCode() is x, after sometime the value of the same hashCode() changed to y."
6013716,2,0,3,java.util.HashMap,"When the return value of hashCode() or equals() changes while the object is contained in HashMap/HashSet etc., the behavior is undefined (you could get all kinds of strange behavior)."
6020126,1,0,4,java.util.HashMap,"In Java, I enter the Properties file in my HashMap like this: code."
6021256,1,0,3,java.util.HashMap,"I thought about putting the HashMap into an ArrayList and Collections.sort() it, but that would require more copying than the actual solution."
6022379,2,1,2,java.util.HashMap,How about using a HashMap to create a view-scoped cache?
6023113,2,1,5,java.util.HashMap,"You might have to tweak this (for example, store the result of the merge to put in the lookup), what you are doing here is leveraging the fact that for a Map, put and get operations are really fast (a HashMap uses the hashCode method that is on every object)."
6028728,2,0,1,java.util.HashMap,"This does not really make a difference at all, because when you look at the JDK source code, the Sun implementation of HashSet uses an instance of HashMap internally to store its values: code."
6028235,2,1,1,java.util.HashMap,"Well, using HashMap you will be forced to store data in this way : code."
6028284,2,0,5,java.util.HashMap,"HashSet<E> is implemented using a HashMap<E, E> under the hood."
6029836,2,0,0,java.util.HashMap,"Tokenising is tricky...  Iterate through your tokens and count them up, e.g using a HashMap."
6036413,1,0,0,java.util.HashMap,Cant see the contents of the HashMap .
6036413,1,0,0,java.util.HashMap,Output reaches flag2 but i cant see what is inside the HashMap..
6038182,2,0,1,java.util.HashMap,You can find the index 'i' in a single lookup (without looping) if you use a HashMap.
6039693,1,0,1,java.util.HashMap,So that the next action can get bean from HashMap easily without requesting to DB or any iteration.
6042114,1,0,2,java.util.HashMap,"I am debugging a web application, where each logged in user has a ""session variable map"" implemented in a simple Spring session scoped bean that has a session scoped HashMap bean injected."
6043299,1,0,1,java.util.HashMap,"The problem is, when I try to load an object(HashMap<Integer, int[]>) of size more than 500k, it takes forever on my phone."
6045469,2,0,2,java.util.HashMap,"However, you really should implement the hashCode and equals methods, so that two pairs containing the same objects will be equal to each other, and can be used as keys in a HashMap."
6045637,2,0,4,java.util.HashMap,"I'd advise you to use ArrayList instead of Vector and HashMap instead of Hashtable, respectively (as discussed here and in many other questions), but most of all I'd advise you to change your requirements."
31470197,2,0,0,java.util.HashMap,"ArrayList, LinkedList, HashSet,LinkedHashset and TreeSet in Collection Interface and HashMap,LinkedHashMap and Treemap are all non-synchronized."
6045943,1,0,3,java.util.HashMap,adding a key to HashMap without the value?
6045943,1,0,3,java.util.HashMap,Is there a way to add a key to a HashMap without also adding a value?
6045943,1,0,3,java.util.HashMap,"I know it seems strange, but I have a HashMap<String, ArrayList<Object>> amd I want to first be able to create keys as needed and then check if a certain key exists and, if so, put the appropriate value, namely the ArrayList<Object> Was that confusing enough?"
6045960,2,0,2,java.util.HashMap,"It is allowed by HashMap You can also use a Set initially, and check it for the key, and then fill the map."
6053821,2,0,0,java.util.HashMap,"If neither of these cases are true, you should also think about if you only need a vanilla Map, a HashMap may be a better choice."
6053821,2,0,0,java.util.HashMap,HashMap has O(1) access; TreeMap does not.
6054388,2,0,0,java.util.HashMap,"You can make a HashMap<String, Vector<ValueType>> which maps a String key to a Vector."
6058304,1,0,3,java.util.HashMap,(The subset is stored in a HashMap in a HashMap in the form HashMap> map; The Integer-Key is the length of the formatstring and the String Key of the second Hashmap specifies a datesignature only containing the separating characters.
6230369,2,0,0,java.util.HashMap,"Your Shape interface is utilized in the same manner as a HashMap, but I have never seen a HashMap do what you are trying to do, eventually you have to have X be a class in Shape."
6230369,2,0,0,java.util.HashMap,"Otherwise you are doing HashMap  If you always want X to be a ""IS A"" relationship to an interface it won't happen."
6062718,2,1,1,java.util.HashMap,"In this case for instance, the entry set is actually an inner class of HashMap, named EntrySet."
6062897,2,0,0,java.util.HashMap,Everytime you do a 'setname' add a corresponding key-value mapping to the HashMap.
6062897,2,0,0,java.util.HashMap,Then retrieve all the keys of this HashMap and sort them(This will be a simple sorting of strings).
6127071,2,1,1,java.util.HashMap,"If your return a Vector<Object> it will work with ColdFusion's array utilities, and a HashMap<String,Object> will work with ColdFusion's Struct utilities."
6064447,1,0,1,java.util.HashMap,It is a HashMap.
6064612,2,0,1,java.util.HashMap,"HashMap<K, V> You are now maintaining a codebase written for Java 1.4 or earlier that does not use generics."
6064612,2,0,1,java.util.HashMap,"you may know that a HashMap has String keys and Integer values, but this cannot be reflected in the type of the HashMap, so you must cast individual values."
6078207,1,0,5,java.util.HashMap,Why does this HashMap.get return a null?
6078237,2,0,3,java.util.HashMap,"Note that, it is very important you override both equals and hashCode, as two objects that're equal must hash to the same value for a HashMap to work correctly."
6078239,2,0,1,java.util.HashMap,"Because that's what the HashMap relies on in order to find the objects referenced by the keys; as it stands now, it's the versions of those methods inherited from Object that are being used, which will only match if you use the same objects as keys, whereas you're creating new, albeit 'equal', ones."
6078240,2,1,11,java.util.HashMap,(It compiles fine because these methods are both virtual and inherited in all objects as they are part of Object: HashMap can't enforce this at compile-time.)
6078240,2,1,11,java.util.HashMap,"Both of these methods are required to be implemented because hashCode determines the hash-bucket used in the HashMap implementation and equals is to ensure that an object is value-equals (multiple objects can have the same hashCode, which is why equals is also required)."
6985749,2,0,1,java.util.HashMap,"in PreparedStatements) $variables$ that became directly portions of SQL string Dynamic SQL feature to include portions of SQL based on properties values   Then your SQL mapper will execute the query and return a Java object: if your record returning from query is known, you can map columns to a POJO; otherwise in MyBatis you can have a HashMap as a resulting class and, eventually, treat every record with a handler through the queryWithRowHandler() method of the SqlMapClient to post process returned data."
6985749,2,0,1,java.util.HashMap,Once you have at least a HashMap representation of your query you can then easily transform it in XML.
6086842,1,0,1,java.util.HashMap,"I have a map object testMap declared as HashMap<String, Test>."
6088240,1,0,2,java.util.HashMap,"Requirements  Several classes need to contain localized descriptions in multiple locales These need to be persisted into the db They have to be searchable by substring for all locales (show up if the seachstring is a substring of any description) Localized descriptions should be queryable without loading the master-object (by master-object-id, -type and locale)  Current solution (doesn't solve the last requirement) Each class contains a HashMap annotated as code."
6091945,2,0,0,java.util.HashMap,"Well what might also help is by using: HashMap map = new HashMap(); map.put(impliedBy,impliedVar); To get the var simply: String value = map.get(impliedBy)."
6092642,1,0,63,java.util.HashMap,How to remove a key from HashMap while iterating over it?
6092642,1,0,63,java.util.HashMap,"I am having HashMap called testMap which contains String, String."
6092642,1,0,63,java.util.HashMap,"testMap contains ""Sample"" but I am unable to remove the key from HashMap."
6099548,2,0,1,java.util.HashMap,Hashtable works just fine but is undesirable was replaced by HashMap in Java 1.2 (1998) I suggest you not use it unless you have to.
6099548,2,0,1,java.util.HashMap,however a better solution would be to use a Map like HashMap.
6105950,2,1,4,java.util.HashMap,"The second one is even more broken, because the internals of HashMap are no thread-safe and it's not just a single value but a complex data structure - using it from many threads produces completely unpredictable results."
6105845,2,1,7,java.util.HashMap,"Also, you may want to look into HashMap rather than Hashtable."
6105845,2,1,7,java.util.HashMap,"HashMap is not thread safe, but is faster."
6105845,2,1,7,java.util.HashMap,"If you are trying to do this in a single thread, I would recommend HashMap."
6112015,2,1,3,java.util.HashMap,"You can go around it by:  putting each branch inside a class (or a method) and use class loader (or reflection) to construct an instance of it (or call this method); in case of having a finite set of elements you must respond to, having a HashMap<String, Method> and populating it before parsing, then simply invoking method the hash gives you; this implies the use of reflection."
6117495,1,0,1,java.util.HashMap,JDO - HashMap within an embedded Class.
6117495,1,0,1,java.util.HashMap,Are you able to store a HashMap within an embedded class on App Engine?
6117495,1,0,1,java.util.HashMap,"However, when I attempt to add an item to the HashMap and persist it I get the following error: Specified class class com.google.appengine.api.datastore.Blob is not persistable I know you can successfully use a HashMap in a ""normal"" class but can they be used in embedded Class's also?"
6122046,2,0,0,java.util.HashMap,"If you know all possible values of mmPageCounter and whatPageNext beforehand, you can use a HashMap."
6437495,2,0,3,java.util.HashMap,I'd go and throw in some extra bytes for a HashMap to get rid of the string switching block.
6128879,2,1,0,java.util.HashMap,"The HashMap will store the require group, along with the key."
6137446,2,0,1,java.util.HashMap,"I've changed the storage of the HashMap so that it stores regular integers, instead of attempting to store a binary representation as an integer value."
6137503,1,0,0,java.util.HashMap,"May 26, 2011 1:02:16 PM org.apache.catalina.core.StandardWrapperValve invoke SEVERE: Servlet.service() for servlet Api threw exception java.lang.OutOfMemoryError: GC overhead limit exceeded     at com.sun.net.ssl.internal.ssl.InputRecord.<init>(Unknown Source)     at com.sun.net.ssl.internal.ssl.AppInputStream.<init>(Unknown Source)     at com.sun.net.ssl.internal.ssl.SSLSocketImpl.init(Unknown Source)     at com.sun.net.ssl.internal.ssl.SSLSocketImpl.<init>(Unknown Source)     at com.sun.net.ssl.internal.ssl.SSLSocketFactoryImpl.createSocket(Unknown Source)     at com.microsoft.sqlserver.jdbc.TDSChannel.enableSSL(IOBuffer.java:1472)     at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:1042)     at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:817)     at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:700)     at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:842)     at java.sql.DriverManager.getConnection(Unknown Source)     at java.sql.DriverManager.getConnection(Unknown Source)     at org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:133)     at org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:114)     at org.hibernate.cfg.Configuration.buildSettingsInternal(Configuration.java:2836)     at org.hibernate.cfg.Configuration.buildSettings(Configuration.java:2832)     at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1843)     at de.giz.ff.domain.Subject.findSubject(Subject.java:139)     at de.giz.ff.domain.Question.getSubjectName(Question.java:354)     at de.giz.ff.server.Api.doFetch(Api.java:66)     at de.giz.ff.server.Api.doGet(Api.java:199)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)     at org.apache.coyote.ajp.AjpAprProcessor.process(AjpAprProcessor.java:427) May 26, 2011 1:02:27 PM org.apache.catalina.core.ApplicationContext log SEVERE: Exception while dispatching incoming RPC call com.google.gwt.user.server.rpc.UnexpectedException: Service method 'public abstract java.util.ArrayList de.giz.ff.client.FrageFunktionService.getTextsAndRights(int,java.lang.String)' threw an unexpected exception: java.lang.OutOfMemoryError: GC overhead limit exceeded     at com.google.gwt.user.server.rpc.RPC.encodeResponseForFailure(RPC.java:385)     at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:588)     at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:208)     at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:248)     at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at waffle.servlet.NegotiateSecurityFilter.doFilterPrincipal(Unknown Source)     at waffle.servlet.NegotiateSecurityFilter.doFilter(Unknown Source)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)     at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:861)     at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:579)     at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1584)     at java.lang.Thread.run(Unknown Source) Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded     at java.util.HashMap.<init>(Unknown Source)     at org.hibernate.dialect.function.SQLFunctionRegistry.<init>(SQLFunctionRegistry.java:37)     at org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:212)     at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1845)     at de.giz.ff.domain.Client.findClient(Client.java:49)     at de.giz.ff.server.FrageFunktionServiceImpl.getTextsAndRights(FrageFunktionServiceImpl.java:123)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:569)     ... 21 more"
6137665,1,0,2,java.util.HashMap,If I just return a Map I get;  [org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor]   No message body writer has been found   for response class HashMap.
6139724,2,0,5,java.util.HashMap,"Examples of this pattern in the standard API:  HashMap.keySet Subject.getPrincipals  The documentation should take care to say something like The object is backed by the returned collection, so modifications will ..."
6140955,2,0,3,java.util.HashMap,"It is a hybrid of two data structures, a LinkedList, where insertion order is preserved by adding elements to the end of a list of nodes which have access to their immediate neighbours, and a HashMap, or a Map that uses an array of bucket Lists, where a modulus division remainder of the key's hashcode() determines the starting bucket to query for the equals() method of the keys that lie in that bucket's list of contents."
6140955,2,0,3,java.util.HashMap,"The advantage is that you can walk the existing elements in a HashMap in order of insertion, due to the LinkedList nature, and you can quickly jump to the correct bucket in a key lookup (saving a lot of time for a large collection) if you have the key of the element."
6140881,2,0,0,java.util.HashMap,HashMap has no guarantee of the order they are returned.
6140884,2,0,2,java.util.HashMap,To create a HashMap that maps integers on strings you would write: code.
6140892,2,1,14,java.util.HashMap,"It has a   predictable iteration order (a la   linked list), yet the retrieval speed   is that of a HashMap."
6141370,2,1,4,java.util.HashMap,"You need to override equals and hashCode - HashMap doesn't use compareTo, which is meant for sorting."
6142154,2,0,2,java.util.HashMap,"EDIT: The line 247 in HashMap, which is created in HashSet then used in it, describes a hash function maybe this is what you want?."
6143597,2,0,1,java.util.HashMap,"An even better options is perhaps to do a pass over the file and store the keys in a HashSet, or in a HashMap mapping for instance the keywords to their offsets in the file."
6152806,2,0,1,java.util.HashMap,"So given the existence of the HashMap class, what more help do you need?"
6154314,1,0,0,java.util.HashMap,m is a HashMap and someModifiedDate is coming as 2010-11-26 EDIT: I get InvalidTypeEception.
6154845,1,0,4,java.util.HashMap,I'm doing something wrong here I am trying to populate some values into HashMap and add each hasmap to a list which will be added to a JSON object: code.
6155540,1,0,2,java.util.HashMap,BeanMap to HashMap conversion?
6155540,1,0,2,java.util.HashMap,"What is the easiest and most efficient way of converting a List<BeanMap> to a List <HashMap<String,String>>?"
6155964,2,1,4,java.util.HashMap,HashMap is appropriate for most cases.
6157363,1,0,9,java.util.HashMap,How to calculate HashMap memory usage in Java?
6157363,1,0,9,java.util.HashMap,I was asked in an interview to calculate the memory usage for HashMap and how much estimated memory it will consume if you have 2 million items in it.
6157363,1,0,9,java.util.HashMap,How would I estimate the memory usage of this HashMap Object in Java?
16194915,2,0,0,java.util.HashMap,I think that the question should be clarified because there is a difference between the size of the HashMap and the size of HashMap + the objects contained by the HashMap.
16194915,2,0,0,java.util.HashMap,"If you consider the size of the HashMap, in the example you provided, the HashMap stores one reference to the String ""aby"" and one reference to the List."
16194915,2,0,0,java.util.HashMap,"You also add the 4*(X-1) bytes references where the ""X"" is the number of empty buckets that the HashMap has created when you called the constructor new HashMap<String,List<String>>() ."
16194915,2,0,0,java.util.HashMap,"According to http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html, it should be 16."
16194915,2,0,0,java.util.HashMap,"So in the end, the size of your above HashMap would be 4 + 4 + 1 + (4*15) + 16 + 8 = 93 bytes This is an approximation based on data that are owned by the HashMap."
16194915,2,0,0,java.util.HashMap,"I think that maybe the interviewer was interested in seeing if you were aware of the way HashMap works (the fact for example that the default constructor create and array of 16 buckets for Map entry, the fact that the sizes of the objects stored in the HashMap do not affect the HashMap size since it only store the references)."
16194915,2,0,0,java.util.HashMap,"HashMap are so widely used that under certain circumstances, it should be worth using the constructors with initial capacity and load factor."
6160485,2,1,13,java.util.HashMap,In fact discarding one reference to the HashMap might not free any memory at all.
6160485,2,1,13,java.util.HashMap,"As has been pointed out, HashMap and List is more complex as many, if not all, the Strings can be reused, possibly String literals."
6160485,2,1,13,java.util.HashMap,(I only say likely as a HashMap can have capacity for 1 billion entries even though it is empty.
6158670,2,1,6,java.util.HashMap,"Hopefully, when you are going to build your HashMap you are not going to mix Students and Teachers as the keys to that map."
6158670,2,1,6,java.util.HashMap,"And even in the case when you want to do HashMap<Object, Object> you will be OK, because code."
6162442,1,0,1,java.util.HashMap,"I could probably use simple HashMap but it implies repeating a huge number of times collections containing the same elements, not taking into account that [b1,b2] is a sub-collection of [b1,b2,b3,b4] for instance."
6600001,2,0,0,java.util.HashMap,HashMap.
6173932,2,0,1,java.util.HashMap,You could use HashMap with the date as key!
6177797,2,1,5,java.util.HashMap,"If you want the words to be sorted alphabetically, use TreeMap instead of HashMap."
6178837,2,1,3,java.util.HashMap,"This is done so that the array can conform the the List interface, which is required by the HashSet constructor a HashSet is a collection backed by a HashMap (hashtable)."
11577351,2,0,18,java.util.HashMap,"A HashSet carries an internal HashMap with <Integer(HashCode), Object> entries and uses equals() as well as the equals method of the HashCode to determine equality."
17072994,2,0,2,java.util.HashMap,"For example, HashSet uses an internal HashMap."
17072994,2,0,2,java.util.HashMap,"If you check the source code of HashMap, you'll see it depends on both the hashCode() and the equals() methods of the elements to determine equality:  code."
7325352,2,0,2,java.util.HashMap,The put method of non synchronized HashMap is most probably called from multiple threads.
7325352,2,0,2,java.util.HashMap,I faced the very same issue when had large number of calls to HashMap's put method from multiple threads.
6198256,2,0,1,java.util.HashMap,Search for HashSet\HashMap to understand the internal representation if you're interested.
6198337,2,0,0,java.util.HashMap,"Remember that HashSet is implemented over HashMap, the values added to hashMap based on hashcode and equality."
6199921,2,0,0,java.util.HashMap,"Schedule a job from ServletContextListener use remove() method of HashMap simply , make sure about concurrency"
6199997,2,0,2,java.util.HashMap,"From that you can get the user id (which you already stored before, probably when the user logged in), and remove it also from your HashMap with in the SessionContext."
6200410,2,1,1,java.util.HashMap,To handle this you can used a HashMap where key is file name and Value is the amount.
6209644,2,0,2,java.util.HashMap,"As @EJP said, using a Filter with a HashMap that stores the last access time by IP address key."
6211167,1,0,1,java.util.HashMap,I have created a ArrayList of HashMap like  code.
6212047,1,0,0,java.util.HashMap,"HashMap, ArrayList, some combination?"
6215486,1,0,11,java.util.HashMap,So I tried by iterating through the string by using charAt and storing the character as key in a HashMap and the number of occurences as its value.
6216727,1,0,2,java.util.HashMap,How do I grab an index from an array in a HashMap?
6216727,1,0,2,java.util.HashMap,"I've got a HashMap<Object, String[]> I just want to grab the 0 index position from the String[]."
6216752,2,0,4,java.util.HashMap,HashMap doesn't have a 0index and it doesn't have a String[] You cannot do what you ask because it doesn't make sense.
6223918,1,0,1,java.util.HashMap,I have a scenario where I have multiple HashMap objects which need to be stored in the same text file.
6223918,1,0,1,java.util.HashMap,Also when I try to retrieve objects say HashMap b now and HashMap a when the need arises.
6224465,2,0,0,java.util.HashMap,Another approach is to put each HashMap as an entry in a Zip archive.
6223970,2,0,6,java.util.HashMap,"Later on when you deserealize the ArrayList object, you can get individual HashMap objects back: code."
6225065,2,0,0,java.util.HashMap,"If possible use better data structure for your problem, use HashMap, with name to score mapping and , sort the hashmap with values."
6225413,2,0,1,java.util.HashMap,BTW: Is there any reason it has to be a HashMap and not a Map?
6227463,2,0,1,java.util.HashMap,"By your argument, java.util.HashMap does not go in the manifest, and both java.util.HashMap and any implementation of Activity all derive from Object, so therefore you do not need to put your activities in the manifest."
6227383,2,0,1,java.util.HashMap,"Take a look at the source for the HashMap class, in the transfer() method, which is called by the resize() method."
6231831,2,0,1,java.util.HashMap,"You probably want to construct a Map of String to Object, using perhaps HashMap, and pass that in."
6236751,1,0,6,java.util.HashMap,Android: what is the difference between Bundle Vs java.util collections like HashMap.
6236751,1,0,6,java.util.HashMap,What is the difference between Bundle Vs java.util collections like HashMap?
6236801,2,1,12,java.util.HashMap,"One difference I can see easily is that a Bundle allows you to put int, boolean, etc., into it while a HashMap seems to require you to convert them to/from objects."
6237223,1,0,16,java.util.HashMap,Iterate over an HashMap> with Struts 2.
6237223,1,0,16,java.util.HashMap,"I want to display a label, which is the key in the HashMap, followed by a table (the value in the HashMap) containing every elements in the ArrayList, for each elements in the HashMap."
6237223,1,0,16,java.util.HashMap,I saw a lot of example for an HashMap but didn't find one for my case.
6241927,1,0,6,java.util.HashMap,Why are custom objects not equivalent keys for a HashMap?
6241927,1,0,6,java.util.HashMap,I'm having trouble using my own class as a key for a HashMap code.
7026307,2,0,1,java.util.HashMap,"You definitely must override the method equals(Object), and for certain implementation of a Map (HashMap) it is also necesary that you overrdide the method hashCode()."
6245446,1,0,1,java.util.HashMap,"From now on, each time I create a UnitType object, I need to register it within the Manager (Manager has a HashMap<Long, UnitType> which maps IDs to the objects)."
6249156,1,0,3,java.util.HashMap,HashMap.containsKey() - how to search for a class?
6249156,1,0,3,java.util.HashMap,"Hello if you search in an HashMap<String,String> for a specific value of a key-value-pair, you can write the following:   code."
6249156,1,0,3,java.util.HashMap,"In this case, can I use containsKey at all or do I have to use a loop over the HashMap?"
6249170,2,1,4,java.util.HashMap,"The HashMap/Hashtable puts the items in ""buckets"" by using the hashCode of the key, so a new object that represents the same value as another object, and which should be considered as the same object must return the same hashCode."
6249185,2,0,1,java.util.HashMap,HashMap uses hashCode() and equals().
6261151,2,0,0,java.util.HashMap,I added a HashMap in which I save the selected items.
6261151,2,0,0,java.util.HashMap,"I can call the select state from my activity, by calling the HashMap... And it works great!"
6259677,1,0,2,java.util.HashMap,Sorting HashMap objects on their properties rather values.
6259677,1,0,2,java.util.HashMap,I have HashMap rollCall code.
6259677,1,0,2,java.util.HashMap,I have seen alot of people sorting HashMap using TreeMap on value I want to sort on a property of Person rather on value.
6259710,2,0,1,java.util.HashMap,"This will not sort your HashMap (a HashMap has always a seemingly random order), but give you another sorted datastructure instead."
6261276,2,0,0,java.util.HashMap,You may want to use a TreeMap instead of a HashMap and create the Map with a custom Comparator that provides the sorting.
6262594,1,0,3,java.util.HashMap,How to find the duplicate entries of an array of string and make them null by using HashMap.
6262594,1,0,3,java.util.HashMap,"I've an array of string, I want to find the duplicate strings in the array and want to make the duplicates null by using HashMap with a good time complexity."
6262671,2,0,0,java.util.HashMap,"Instead of a HashMap you can use a Set too, the steps are (you can work the details out yourself):  for every string in the array if the string exists in the Map/Set null it otherwise add it to the Map/Set  That's it."
6269037,2,0,0,java.util.HashMap,Look at a way of using a Map implementation (such as HashMap) to store the data you need while only traversing the text in O(n) (HashMap's get() and put() -- and presumably contains() -- methods are O(1)).
6270148,1,0,1,java.util.HashMap,How can I pass a ruby hash to a java constructor which will store it in a HashMap?
6272674,2,1,1,java.util.HashMap,HashSet is not thread-safe (it is based on the non-threads-safe HashMap - race conditions in which can end up causing infinite loops).
6272446,2,0,5,java.util.HashMap,You can also store the descriptions in a HashMap in order to detect whether you have entered a circle.
6302233,2,1,1,java.util.HashMap,"If this set is small enough, you'll be able to get away with a HashMap<String,Set<String>>, where you mapped keywords to the sentences that contained them."
6299941,2,0,2,java.util.HashMap,I would use TreeMap or HashMap (or the set implementations for each TreeSet-HashSet).
6302135,1,0,4,java.util.HashMap,"Now I'm thinking if I'm shooting myself in the foot with a too complex return value and whether I should instead return a simple ArrayList of HashMap where each HashMap contains all the needed info (date, hostname, message)."
6307960,2,0,1,java.util.HashMap,Changed the return type of listMysqlBackups to a simple HashMap.
6303120,1,0,2,java.util.HashMap,I want the HashMap map and the member variable name to in sync.
6307802,1,0,0,java.util.HashMap,Learning HashMap.
6307838,2,1,4,java.util.HashMap,to use a HashMap properly.
6307838,2,1,4,java.util.HashMap,"The hashCode() part is above and beyond simple equality, and is required for the HashMap to work correctly."
6316619,1,0,1,java.util.HashMap,"I have used a HashMap, but I always get following error: code."
6316699,2,1,4,java.util.HashMap,"From your description, you should be able to use HashMap for this."
6318501,1,0,1,java.util.HashMap,In my android project I have several images int the drawable folder with a prefix that I would like to load in a HashMap  :  Example : code.
6324416,2,0,0,java.util.HashMap,method inherited from HashMap.
6324416,2,0,0,java.util.HashMap,When you use getProperty Properties class lookup in default property and return value from it if Properties HashMap doesn't contain value.
6809836,2,1,2,java.util.HashMap,Build a simple translation HashMap yourself.
6329799,1,0,0,java.util.HashMap,Getting Exception while generating the WebService when HashMap is passed as parameter.
6331926,1,0,6,java.util.HashMap,"And through an sqlite jdbc library : Map objTable = new HashMap (); //...adding some jdbc stuff, we get a copy of DBTable in objTable Then if object is modified, thus being."
6333537,1,0,2,java.util.HashMap,Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public java.util.Map org.idahosif.sips.util.ExternalService.getExternalConfigPropertyMap()] threw exception; nested exception is java.lang.StackOverflowError     at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:127)     at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:435)     ... 152 more Caused by: java.lang.StackOverflowError     at java.net.URLStreamHandler.hostsEqual(URLStreamHandler.java:439)     at sun.net.www.protocol.file.Handler.hostsEqual(Handler.java:135)     at java.net.URLStreamHandler.sameFile(URLStreamHandler.java:396)     at java.net.URLStreamHandler.equals(URLStreamHandler.java:316)     at java.net.URL.equals(URL.java:842)     at java.security.CodeSource.equals(CodeSource.java:135)     at java.util.HashMap.get(HashMap.java:305)     at java.security.SecureClassLoader.getProtectionDomain(SecureClassLoader.jav
6343340,2,0,1,java.util.HashMap,"You can make a map like as HashMap<String, Data> where the first argument is the key (I suppose a String, you can use what you want) and Data is a a class that contains the data values for the key."
6343340,2,0,1,java.util.HashMap,"A more simple way is use array, in a map like HashMap<String,String[]>, but is not very useful."
6353901,2,1,8,java.util.HashMap,One solution is to put the TextView that represents each counter into a HashMap together with it's position in the list as the key.
6347001,2,0,2,java.util.HashMap,Why not use a HashMap  With a hash map you can set Key value with what ever types you want.
6348839,2,0,0,java.util.HashMap,Another possibility is to use a HashMap to store your rows if you need to constantly reference them throughout the page.
6349853,1,0,0,java.util.HashMap,I have the following method which calls a POST service and it returns XML which I want to put the attributes of the element into a HashMap The XML format is: code.
16697682,2,0,0,java.util.HashMap,"As for me, the best way to do this, is to use static HashMap of custom objects, like this: code."
6357794,2,1,4,java.util.HashMap,"I haven't found a simple way to get the wrapper class for a primitive type so I use a predefined HashMap (it has 9 classes, including void)"
6358853,1,0,2,java.util.HashMap,How to Get Values from List of HashMap?
6358853,1,0,2,java.util.HashMap,I have a List of HashMap's which has key of type Integer and value of type Long.
6358853,1,0,2,java.util.HashMap,"Now, how do I retrieve the key and value from the list of HashMap?"
6358853,1,0,2,java.util.HashMap,Update 1: Actually i am getting the value from the database and putting that into a HashMap code.
6358949,2,0,2,java.util.HashMap,"Note: I've also changed a little your code, using Map instead of HashMap when possible"
6364202,2,0,0,java.util.HashMap,"As mentioned in the comment above, a good place to start would be HashMap."
6366278,1,0,2,java.util.HashMap,"As far as I can see for the list and creation, a HashMap fits my needs but i'm a bit puzzled on recalling the objects and calling their methods using the HashMap."
6366278,1,0,2,java.util.HashMap,"Just as a reference, let me give you a little code: Here is the HashMap: code."
6374342,2,1,1,java.util.HashMap,HashMap and use that as the cache (use weak references so the cache can get garbage collected if the Garbage Collector decides to do this).
6376848,1,0,0,java.util.HashMap,"When I try to iterate through each element using an enhanced for I get a ClassCastException stating that ""java.util.HashMap cannot be cast to MyCustomObject""."
6376848,1,0,0,java.util.HashMap,So before the enhanced for statement I extracted the first object in the list and used .getClass and it DID come up as HashMap.
6382927,2,1,10,java.util.HashMap,"a HashMap is almost the same as a Hashtable, but with the synchronization removed."
6382927,2,1,10,java.util.HashMap,"To get an idea of how these classes are implemeted, have a look at their inheritance tree:  Map (just the interface)  Dictionary (obsoleted abstract class)  Hashtable (the ""old"" map implementation lives on it's own)  AbstractMap (the basic functionality of the ""new"" map implementations)  HashMap (the first concrete map implementation for general purpose use)  LinkedHashMap (extends HashMap by mainaining the linked list)"
28230295,2,0,0,java.util.HashMap,The most important difference is the order in which iteration through the entries will happen: HashMap makes absolutely no guarantees about the iteration order.
6382847,2,0,7,java.util.HashMap,"They all honor the same contract, but there are some differences in the implementation:  LinkedHashMap : keys are maintained in insertion order HashTable : all operations are synchronized, no ordering guarantees HashMap : no ordering guarantees, best performance  Generally, the best practice is to use Map as the type for variables, and then you instantiate an implementing type based on the needs of your code."
6382847,2,0,7,java.util.HashMap,"HashMap is generally preferred unless you need some ordering guarantees, in which case LinkedHashMap or TreeMap are good choices."
6389122,1,0,6,java.util.HashMap,Does a HashMap with a getAndWait() method exist?
6389122,1,0,6,java.util.HashMap,"Many threads may populate a HashMap, in some cases I need to wait (block) until an object exists in the HashMap, such as: code."
6391456,2,0,0,java.util.HashMap,Few other things:  As a Java standard your class name should start with upper case so consider TestMap instead of testMap Type of Map variable should be generic Map instead of an implementation like HashMap (I have corrected that in my answer).
6391488,2,0,1,java.util.HashMap,"When you go through the for loop, you aren't creating a new instance, you're just putting new values in the existing HashMap."
6391488,2,0,1,java.util.HashMap,"Simple fix: move the initialization inside the for loop, so on each iteration through the loop, the HashMap is re-instantiated."
6396869,2,0,4,java.util.HashMap,It's basically a HashMap which both maps key to value and value to key.
6398369,2,0,0,java.util.HashMap,"Use a Map<...> oraRowDetailsMap = new HashMap<...>(); inside your result set loop to create a new map for each row, instead of only once before the loop."
6398902,1,0,2,java.util.HashMap,"In Java, should i use HashMap to implement the LRUCache I have seen questions like implement a generic LRU cache, and also have seen questions like implement a LRU cache."
6405709,2,1,27,java.util.HashMap,"Also, HashMap is now preferred over Hashtable, because Hashtable has unnecessary concurrency overhead."
16883554,2,0,2,java.util.HashMap,LinkedHashMap is used for maintaining order of inserting elements.. Hashtable is similar to HashMap but it doesn't allow null key or value while HashMap allows one null key and several null values...
6406255,2,0,2,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
6406255,2,0,2,java.util.HashMap,Also it's very useful to look inside the code of Hashtable and HashMap.
6409389,2,1,25,java.util.HashMap,"If you need to do this for a lot of names, you may want to build a HashMap<String, Integer> to map them easily."
6417413,2,0,1,java.util.HashMap,"The first has default scope and is defined in HashMap, the latter is a public interface."
6418584,2,1,4,java.util.HashMap,It is rather the fault of LinkedHashMap and HashMap that repurpose a public name for private use.
6418341,2,0,1,java.util.HashMap,Have you tried either populating the HashMap before creating the adapter or calling  code.
6419107,1,0,0,java.util.HashMap,"Using Dozer, assuming Bar to java.util.HashMap is a trivial mapping, how do I map instances of Foo to instances of java.util.HashMap such that the referenced instances of Bar are mapped to java.util.HashMap as well?"
6419107,1,0,0,java.util.HashMap,"That is, I want the result of the mapping to be a HashMap with key ""barList"" which holds an instance of ArrayList>."
6419107,1,0,0,java.util.HashMap,Each HashMap in this list should be a mapping of Bar to HashMap.
6419107,1,0,0,java.util.HashMap,But I want to know how I can express the conversion to HashMap with a list of references to Bar such that I get this: code.
6419236,1,0,1,java.util.HashMap,"How can I using Array, List ,HashMap or HashSet - create long list of BitmapFields?"
6419236,1,0,1,java.util.HashMap,"Can i use List, Array, HashMap, or HashSet for this purpose?"
6426050,2,0,1,java.util.HashMap,"The association can be of a form of HashMap<String, Calculator>."
6431159,2,0,0,java.util.HashMap,"Try to insert a word with its synonyms, and then select a word, then while the word is selected try to insert another pair word-synonyms, there will come the exception import javax.swing.AbstractListModel; import javax.swing.DefaultListModel; import javax.swing.JList; import javax.swing.JPanel; import javax.swing.JFrame; import javax.swing.JScrollPane; import java.awt.Rectangle; import java.util.HashMap; import java.util.Map; import java.util.Set; import javax.swing.JTextField; import javax.swing.JButton; import javax.swing.event.ListSelectionEvent; import javax.swing.event.ListSelectionListener; public class Synonims extends JFrame { code. }"
6431321,2,0,1,java.util.HashMap,"My solution would be to use brute force and split the string as needed, and update a HashMap based on that."
6436916,2,1,3,java.util.HashMap,Or same example for if the buttons are in a HashMap that uses the button text String as the key: code.
6440486,2,0,1,java.util.HashMap,A java HashMap is very similar to a python dictionary.
17380550,2,0,1,java.util.HashMap,"I ran the sample code to understand the difference between HashMap and WeakHashMap, Hope it helps code."
6454110,1,0,0,java.util.HashMap,I have list of strings that to be passed to the JR report using a HashMap.
6468864,2,0,1,java.util.HashMap,Why are you passing the list as a HashMap instead of an actual List?
6456308,2,0,2,java.util.HashMap,"if you needed to keep track of how often you see the same word, even though you only want to count it once, you could make a variable that keeps track of that frequency and put it in a list such that the index of the frequency count is the same as the index in the ArrayList so you know which word the frequency corresponds too or better yet use a HashMap where the key is the distinct word and the value is its frequency (basically use the same code as above but instead of ArrayList use HashMap and add in some variable to count the frequency: code."
6455027,1,0,1,java.util.HashMap,The class goes through the data (called trees here) in the large text file and parses the geographical coordinates from it to the HashMap.
6457109,1,0,6,java.util.HashMap,"This made me confuse that the set to aMap is aMap = new HashMap<String, String>();."
6461276,1,0,2,java.util.HashMap,The data for the columns is stored in a HashMap on each row Object.
6461276,1,0,2,java.util.HashMap,I have not found any way in DynamicJasper to specify that a column's value should come from a particular key on the HashMap.
6478602,2,1,1,java.util.HashMap,I suppose that you defined an POJO for your data and then added all these objects to the HashMap (correct me if I am right).
6478602,2,1,1,java.util.HashMap,What I did was to create a new Object that extends HashMap implementation.
6478602,2,1,1,java.util.HashMap,"(In fact you dont have to extend this, you can use the HashMap object itself)."
6478602,2,1,1,java.util.HashMap,So now instead of having objects inside HashMap I directly inserted values for the properties.
6478602,2,1,1,java.util.HashMap,Instead of adding these various objects to a List and providing it as datasource you can use a HashMap this way to define your objects: code.
6478602,2,1,1,java.util.HashMap,So the keys of each HashMap are considered to be the properties defined in the Columns (the properties of the initial POJO).
6462055,1,0,8,java.util.HashMap,The HashMap one looks much much better but I really need performance on this so that has priority.
6462055,1,0,8,java.util.HashMap,"EDIT: Well Array's it is then, suggestions are still welcome EDIT: I forgot to mention, the size of the Array/HashMap is always the same (6) EDIT: It appears that HashMaps are faster Array: 128ms Hash: 103ms When using less cycles the HashMaps was even twice as fast test code: code. }"
6464004,2,1,11,java.util.HashMap,HashMap uses an array underneath so it can never be faster than using an array correctly.
6464004,2,1,11,java.util.HashMap,HashTable is usually much slower than HashMap because it does much the same thing but is also synchronized.
6462063,2,0,2,java.util.HashMap,"arrays when the indexes are know are faster (HashMap uses an array of linked lists behind the scenes which adds a bit of overhead above the array accesses not to mention the hashing operations that need to be done) and FYI HashMap<String,SomeObject> objects = HashMap<String,SomeObject>(); makes it so you won't have to cast"
6462075,2,0,0,java.util.HashMap,HashTable has even worse performance thatn HashMap.
6462084,2,0,2,java.util.HashMap,"Logically, HashMap is definitely a fit in your case."
6462084,2,0,2,java.util.HashMap,From performance standpoint is also wins since in case of arrays you will need to do number of string comparisons (in your algorithm) while in HashMap you just use a hash code if load factor is not too high.
6462084,2,0,2,java.util.HashMap,"Both array and HashMap will need to be resized if you add many elements, but in case of HashMap you will need to also redistribute elements."
6462084,2,0,2,java.util.HashMap,In this use case HashMap loses.
6462697,2,1,2,java.util.HashMap,A HashMap will return null if the key specified is not bound to a value.
6470054,1,0,8,java.util.HashMap,guava multimap that uses TreeMap not HashMap?
6470054,1,0,8,java.util.HashMap,I only see HashMap+ArrayList implementation (ArrayListMultimap).
6473082,1,0,0,java.util.HashMap,The data for the graph is coming from database as a HashMap.
6479547,1,0,0,java.util.HashMap,"I have my HashMap, code."
6493605,1,0,108,java.util.HashMap,How does a HashMap work in Java?
6493605,1,0,108,java.util.HashMap,"Now if am correct, I have following doubt: HashMap internally uses hashcode of the object."
6493605,1,0,108,java.util.HashMap,"Then if two objects can have same hashcode,  then how can the HashMap track which key it uses?"
6493605,1,0,108,java.util.HashMap,Can someone explain how HashMap internally uses the hashcode of the object?
24059910,2,0,5,java.util.HashMap,"HashMap use 2 data structure:  Hash Use hash value to group elements into slots, control by hash() method of HashMap, linked list (singly) Each slot is a singly linked list, their key has the same hash value, the slot index is control by indexFor() method of HashMap,  Find value: First find the slot by hash value, then loop each element in the slot until found or end, Add value: First find the slot by hash value, then try find the value: * if found, then replace the value, * if not found, then add a new one to begining of the slot, capacity Capacity is slot size, as element count increase, capacity is larger but liner to element count, and finally equals to size (Integer.MAX_VALUE), linked list length: As element count increase, length is liner to a small constant value, and finally equals to 1, speed: put / get, has O(1) speed, because slot is access via index, and linked list length is very small, space: The slot size increase as element count increase, but it's empty element are null, so not much space is taking, resize: When resize capacity, it also need to do rehash, this might take a while, And I wrote a simple test class: code."
15401246,2,0,21,java.util.HashMap,"You can find excellent information at http://javarevisited.blogspot.com/2011/02/how-hashmap-works-in-java.html To Summarize:  HashMap works on the principle of hashing put(key, value): HashMap stores both key and value object as Map.Entry."
15401246,2,0,21,java.util.HashMap,"if there is collision ,HashMap uses LinkedList to store object."
15401246,2,0,21,java.util.HashMap,get(key): HashMap uses Key Object's hashcode to find out bucket location and then call keys.equals() method to identify correct node in LinkedList and return associated value object for that key in Java HashMap.
25912874,2,0,3,java.util.HashMap,We know  HashMap stores key-value pair in Map.Entry (we all know) HashMap works on hashing algorithm and uses hashCode() and equals() method in put() and get() methods.
25912874,2,0,3,java.util.HashMap,"(even we know this) When we call put method by passing key-value pair, HashMap uses Key **hashCode()** with hashing to **find out the index** to store the key-value pair."
25115717,2,0,2,java.util.HashMap,Hash map works on the principle of hashing  HashMap get(Key k) method calls hashCode method on the key object and applies returned hashValue to its own static hash function to find a bucket location(backing array) where keys and values are stored in form of a nested class called Entry (Map.Entry) .
25115717,2,0,2,java.util.HashMap,Whenever we call get( Key k )  method on the HashMap object .
25115717,2,0,2,java.util.HashMap,Note that there can only be one null key in HashMap .
30284174,2,0,0,java.util.HashMap,"I will not get into the details of how HashMap works, but will give an example so we can remember how HashMap works by relating it to reality."
25116054,2,0,1,java.util.HashMap,"HashMap  works on principle of hashing, we have put() and get() method for storing and retrieving object form HashMap .When we pass an both key and value to put() method to store on HashMap , it uses key object hashcode() method to calculate hashcode and they by applying hashing on that hashcode it identifies bucket location for storing value object."
25116054,2,0,1,java.util.HashMap,HashMap  uses linked list in case of collision and object will be stored in next node of linked list.
25116054,2,0,1,java.util.HashMap,Also HashMap  stores both key+value tuple in every node of linked list.
25484962,2,0,3,java.util.HashMap,When you create HashMap with default constructor Array is gets created with size 16 and default 0.75 load balance.
18492835,2,0,12,java.util.HashMap,HashMap is an array of Entry objects.
18492835,2,0,12,java.util.HashMap,Consider HashMap as just an array of objects.
18492835,2,0,12,java.util.HashMap,When you create a HashMap with the default constructor code.
18492835,2,0,12,java.util.HashMap,"Adding a new key-value pair  Calculate hashcode for the key Calculate position hash % (arrayLength-1) where element should be placed (bucket number) If you try to add a value with a key which has already been saved in HashMap, then  value gets overwritten."
6493893,2,0,9,java.util.HashMap,Take a look at the implementation of HashMap.get from the OpenJdk.
6493659,2,0,62,java.util.HashMap,"It's used by HashMap as a ""first pass filter"" so that the map can quickly find possible entries with the specified key."
6502531,1,0,1,java.util.HashMap,confusion about HashMap's method containsValue.
6502531,1,0,1,java.util.HashMap,"Basically I have a HashMap that stores key-value as String-String[] I would like to have a method that finds out if a new inserted String[]-value, contains a String that is already present in already stored String[]-value."
6503488,2,0,0,java.util.HashMap,So what you want is each string in the value of HashMap must be unique.
6502585,2,0,2,java.util.HashMap,"However, you need to loop through all values in the HashMap, which makes this O(n) (or simply speaking: slow)."
6504530,2,0,0,java.util.HashMap,"If it were correct, you'll finish having HashMap with content {""key"", new A()} - which is type-error!"
6509859,1,0,5,java.util.HashMap,The problem I'm having is that it blows up at runtime when it gets to the json unmarhsaller:  No type converter available to convert from type: java.util.HashMap to the required type: com.xxx.MyType  The response is of this format: code.
6510050,1,0,2,java.util.HashMap,My data came from a Class ConcessionDistance which is a basic extension of HashMap containing location data (as integer convert as string) and some other stuff that we don't need here.
6514960,2,1,7,java.util.HashMap,You could probably make it more elegant with a HashMap lookup to a callback but I doubt it would be any faster.
6517236,2,0,0,java.util.HashMap,One example to do this is to subclass HashMap and intercept the put (for add/modify operations) and remove (for delete operations).
6517737,1,0,0,java.util.HashMap,"I am taking a HashMap, as key I am putting section and as value of that key I am puting an ArrayList of all items (with pos, name, description) related to that particular key (as section name)."
6517743,1,0,7,java.util.HashMap,"The use of LinkedHashMap with its more efficient iterators (in comparison to the plain HashMap) was a significant boost, but I was hoping to reduce what is essentially book-keeping time to the minimum."
6517743,1,0,7,java.util.HashMap,"They are sort-of-interned on the heap using a separate HashMap, since they are pretty repetitive, therefore their hash code is already cached and most hash validations (when the HashMap implementation is checking whether two keys are actually equal, after their hash codes match) boil down to an identity comparison (==)."
6517948,2,0,0,java.util.HashMap,Create a new HashMap; every key in any of your hashmaps is a key in this one and the list keeps the HashMaps where that key appears.
6528675,2,0,1,java.util.HashMap,"You could have a HashMap and a HashMap, and then have a structure which encapsulates keeping them synchronized."
6531132,1,0,8,java.util.HashMap,Java HashMap Removing Key/Value.
6531132,1,0,8,java.util.HashMap,I'm just looking for an explanation and/or insight as to why its better to iterate over a HashMap.
6531132,1,0,8,java.util.HashMap,However if I don't iterate over the HashMap the key is not removed.
6531654,2,0,0,java.util.HashMap,"But instead of synchronized HashMap you can also use ConcurrenHashMap which allows you to specify concurrency levels, i.e. how many thread can work with map at the same time."
6537080,2,0,0,java.util.HashMap,java.util.HashMap$Values cannot be cast to java.util.ArrayList As I know the method .values() returns a Collection so don't know where is the problem here.
6539384,2,0,2,java.util.HashMap,"Since you say you dont want code spoon fed to you which I applaud - the next step you want to implement is actually adding the HashMap instance variable to your class, since that is your underlying storage."
6543392,2,1,1,java.util.HashMap,"Now, in the HashMap, store the  pairs ."
6543392,2,1,1,java.util.HashMap,Create a HashMap map with the following values: code.
6542694,2,0,1,java.util.HashMap,"Not that hard, though, just a little memory-expensive, if you keep a HashMap of IDs to indices."
6542694,2,0,1,java.util.HashMap,If you poke around on line you'll find various IndexedHashSet implementations that all work on more or less this principle -- an array or ArrayList plus a HashMap.
6542510,2,0,2,java.util.HashMap,HashMap has complexity O(1) both for insertion and removal.
6542510,2,0,2,java.util.HashMap,"HashMap is fine  one can obtain a random element in   O(1), after this operation the picked   element is removed from the structure."
6542510,2,0,2,java.util.HashMap,you can traverse an HashMap in O(n) EDIT: example of picking up a random element in O(n): code.
6546464,2,0,0,java.util.HashMap,And use the map : Map id2event = new HashMap();
6546638,2,0,2,java.util.HashMap,"This is because when HashMap can contain and object that inherits from E, so you want to be able to pass a collection of objects of any type that inherits E, not just E. If it were Collection, then you wouldn't be able to pass an ArrayList<F>, where F extends E, for example."
6548131,2,0,2,java.util.HashMap,"You will need to pick a specific implementation, such as HashMap."
6548141,2,0,2,java.util.HashMap,"If you want to lookup a value based on a given key, then store the pairs in a HashMap (faster) or Hashtable (slower but thread-safe)."
6548143,2,0,2,java.util.HashMap,I think a java.util.HashMap would be better suited for this requirement especially if sorting is not required.
6548148,2,0,1,java.util.HashMap,"If the ""keys"" to your target values will be unique and only ever have one target mapped to them, then I would recommend using java.util.HashMap instead."
6548148,2,0,1,java.util.HashMap,Plus you can Iterate over HashMap like you could an ArrayList.
6553067,1,0,2,java.util.HashMap,Hashtable vs HashMap performance in single threaded app.
6553067,1,0,2,java.util.HashMap,I know that Hashtable is synchronized so it is safe to be used in multithread app and HashMap is not.
6553106,2,0,0,java.util.HashMap,"That's the (one of) the points of HashMap not being synchronized by default (use synchronizedMap() to make it synchronized; although note that depending on your usage, just simple synchronization may not be enough to keep integrity over all operations you might want to do)."
6553115,2,0,2,java.util.HashMap,"If you are talking about the Hashtable and HashMap included with the Java SDK, there is definitely a performance difference, as HashMap doesn't have to use the synchronized blocks, which have an overhead."
6553374,2,0,4,java.util.HashMap,If you want a thread safe collection you can use ConcurrentHashMap or Collections.synchronizedMap() with LinkedHashMap or HashMap.
6553645,2,0,1,java.util.HashMap,"Then we probably should prefer HashMap if possible, which at least won't be slower than Hashtable in any case, as far as we know."
6558138,2,0,0,java.util.HashMap,"If have no numbers on Hashtable vs. HashMap, but some years ago I compared Vector with ArrayList, where there is a similar issue."
6558388,2,1,7,java.util.HashMap,For example a Java HashMap has no order so you cannot expect to get the results in insertion order.
6559060,2,1,2,java.util.HashMap,"you can first parse the String into String[] (using split()) and, iterate over the words and check if a word is needed to be replaced by looking for it in your HashMap<String,String> of blacklisted words."
6562292,2,0,1,java.util.HashMap,"Dictionary is obsolete, so you should use some kind of Map instead (usually a HashMap)."
6562907,2,1,6,java.util.HashMap,"Note that Map is only an interface, so to create such a map, you'll need to create an instance of HashMap or similar, like so: code."
6562907,2,1,6,java.util.HashMap,See also:  Map in the Java 6 documentation HashMap in the Java 6 documentation
6563153,2,0,2,java.util.HashMap,"To do it effectively, you need to use a HashMap."
6564755,2,1,2,java.util.HashMap,HashMap: code.
6570963,1,0,1,java.util.HashMap,"AFAIK, if you want to use a normal HashMap where the key is an integer and the value is an integer, then you will end up with at least 2 + 3 * N objects, where N is the number of entries."
6570963,1,0,1,java.util.HashMap,"Access does not need to be O(1), like in a normal HashMap."
6572100,2,0,1,java.util.HashMap,"A HashMap is simpler and faster, it doesn't do very much and is not thread safe."
6586024,2,0,3,java.util.HashMap,"If it helps, the Java Collections Tutorial seems to recommend ArrayList as the general-purpose list implementation when there aren't any pertinent criteria:  In each case, one implementation — HashSet, ArrayList, and HashMap — is clearly the one to use for most applications, all other things being equal."
6589744,1,0,5,java.util.HashMap,Each verb's key in the HashMap is based on the infinitive form of the verb.
6595310,1,0,4,java.util.HashMap,So approach was this:  Create a List or HashMap Create predefined number of connections Add them to the collection.
6595982,1,0,0,java.util.HashMap,Sorting a HashMap with 2 fields.
6596072,1,0,1,java.util.HashMap,Ideally I would like to put it all in a HashMap.
6600319,2,0,0,java.util.HashMap,Ideally I would like to put it all in a HashMap.
6600319,2,0,0,java.util.HashMap,"This would deserialize any JSON object into a HashMap, composed of just Java SE components."
6603146,1,0,4,java.util.HashMap,Java HashMap with ArrayList wildcards.
6603146,1,0,4,java.util.HashMap,"I have a HashMap where the values are ArrayLists, and I'm trying to write a function to accept generic instances of these HashMaps code."
6603146,1,0,4,java.util.HashMap,"The error message is  The method foo(HashMap<?,ArrayList<?>>) in the type Example is not applicable   for the arguments (HashMap<String,ArrayList<Integer>>)."
6604045,2,0,1,java.util.HashMap,"The type HashMap<?, ArrayList<?>> means about a map which maps keys of some unknown (fixed) type to lists, each of which has elements of some unknown fixed type."
6604045,2,0,1,java.util.HashMap,"The type HashMap<String, ArrayList<Integer>> means a map from strings to lists of integer."
6604045,2,0,1,java.util.HashMap,"The type HashMap<String, ?"
6604045,2,0,1,java.util.HashMap,"HashMap<?, ?"
6604045,2,0,1,java.util.HashMap,"The method argument type HashMap<K, ArrayList<V>> with type variables <K, V> means a map from some type K to lists of some type V, where K and V are decided by the caller of the method."
6604045,2,0,1,java.util.HashMap,"Just a side note: You should have used the more general types Map<K,V> and List<E> instead of HashMap<K,V> and ArrayList<E> for your methods, since most certainly the method will work on any type of map/list and does not care about the specific implementation."
6607403,2,0,0,java.util.HashMap,"HashMap<K, V> is not a subtype of HashMap<K, W> even if V is a subtype of W. (You know this already, right?)"
6607403,2,0,0,java.util.HashMap,"However, HashMap<K, V> is a subtype of HashMap<K, ?"
6603334,1,0,2,java.util.HashMap,Problem: I'm trying to do a simple serialization of a HashMap with JAX-B in a JAX-RS application and running into extra output that I'd like to avoid.
6603334,1,0,2,java.util.HashMap,The default serialization of the HashMap includes XML namespaces and prefixes that are useless (for my app).
6604041,2,0,0,java.util.HashMap,To make an object an 100% deterministic key with a HashMap you need to override hashCode() and equals() where they are consistent in that equals() always returns true when the hashCode()s are the same.
6604041,2,0,0,java.util.HashMap,"Nothing, if we never used an Integer   as a key in a HashMap or other   hash-based collection."
6604041,2,0,0,java.util.HashMap,"However, if we   were to use such an Integer object for   a key in a HashMap, we would not be   able to reliably retrieve the   associated value, unless we used the   exact same Integer instance in the   get() call as we did in the put()   call."
6604041,2,0,0,java.util.HashMap,"The Java platform   architects anticipated the importance   of hash-based collection classes --   such as Hashtable, HashMap, and   HashSet -- in typical Java   applications, and comparing against   many objects with equals() can be   computationally expensive."
6604112,2,0,2,java.util.HashMap,"The HashMap does not know anything about your new method, it will simply call the original one for comparing your key object in the map with the query key (after finding one with matching hashCode)."
6603990,2,0,0,java.util.HashMap,It's likely that you haven't overridden equals(..) correctly - it is a requirement for a HashMap to work correctly
6604876,1,0,7,java.util.HashMap,"In the end, I want something like a Map<String, HashMap<String, ArrayList<String>>, where the String is the LabTest name and the HashMap uses the type (e.g."
6605149,2,0,0,java.util.HashMap,Check out HashMap.
6607641,2,0,37,java.util.HashMap,"Another example is HashMap<String, Integer>, which means ""a map with String keys and Integer values."""
6609777,1,0,0,java.util.HashMap,"*; import java.util.ArrayList; import java.util.HashMap; import com.infy.csvUtil.CSVFileReader; public class Creation extends SeleneseTestCase {     public void setUp() throws Exception {         setUp(""http://14.126.220.15:84333/"", ""*firefox"");     } code."
6609845,1,0,1,java.util.HashMap,"I'm wondering if it's wise to use the hashCode of this Set as key for the cache (HashMap), because in the java documentation it says: ""The hash code of a set is defined to be the sum of the hash codes of the elements in the set""."
6610014,2,1,10,java.util.HashMap,"It gives warning at line HashMap<String, Object> newMap = (HashMap<String, Object>) map.get(453); that is ""Type safety: Unchecked cast from Object to HashMap"" but no error at all."
9737901,2,0,0,java.util.HashMap,As already noted you cannot get that error from the line of code where you extract the HashMap.
6610408,1,0,0,java.util.HashMap,Can any one explain this strange behavior of java HashMap?
6610408,1,0,0,java.util.HashMap,I have used HashMap in Java a lot but has never encountered this behavior.
6611293,1,0,6,java.util.HashMap,"(So, for example, it was cheaper to invoke methods on a HashMap map than a Map map, even though in both cases the map was a HashMap.)"
6612191,1,0,0,java.util.HashMap,"I don't understand the java.util.HashMap$KeyIterator.next and java.util.HashMap$HashIterator.nextEntry error messages, as I'm not able to get the keySet for a HashSet explicitly I assumed the Iterator was going through the keySet by default."
6612240,2,0,0,java.util.HashMap,You should not add/remove items to/from a HashSet or HashMap (which btw is the base class for HashSet during iteration.
6613463,1,0,2,java.util.HashMap,HashMap is broken/ performance issues.
6613463,1,0,2,java.util.HashMap,Currently I have HashMap implemented which  code.
6613535,1,0,1,java.util.HashMap,I have an ArrayList and a HashMap in the context.
6620674,2,1,3,java.util.HashMap,"In this case, check for List and Map (interfaces), rather than ArrayList and HashMap (specific implementations); consider what will happen if the context hands you a LinkedList rather than an ArrayList, or a Map that's not a HashMap - your code would (unnecessarily) explode Use while (condition) rather than for (;condition;) - it's just ugly If you know the types of your Collections, specify them."
6613894,2,0,0,java.util.HashMap,"Some ideas are  Put all dependencies in a HashMap, detecting cycles means to find find a non-null value in when performing the write check Use two ""pointers"" to traverse the list with one pointer faster than the other."
27806218,2,0,0,java.util.HashMap,"If you have a limited ""known size"" set of synchronization patterns, you could probably avoid using a HashMap and use a ConcurrentHashMap instead, with its putIfAbsent method which might be easier to understand."
6616555,1,0,3,java.util.HashMap,HashMap Concept.
6616555,1,0,3,java.util.HashMap,"I read in a book where it was mentioned that when we put elements in HashMap, internally it is stored in bucket."
6616699,2,0,0,java.util.HashMap,Best way to understand is by tracing source   In eclipse If configured jdk hit ctrl+shift+T type HashMap and AbstractMap  AbstractMap and HashMap   You only need to do it once !
6616568,2,1,4,java.util.HashMap,"Lots of details at http://en.wikipedia.org/wiki/Hash_table See also Internal implementation of java.util.HashMap and HashSet And of course you can use the source, Luke."
6618364,1,0,3,java.util.HashMap,Why does hashCode() return zero before items are added to HashMap?
6618364,1,0,3,java.util.HashMap,How can I get hashCode after Map map = new HashMap(); ?
6618405,2,0,9,java.util.HashMap,"Since your HashMap (which is derived from AbstractMap) is initially empty, that sum is zero."
6623668,1,0,1,java.util.HashMap,Store HashMap on SD card.
6623668,1,0,1,java.util.HashMap,I want to store the HashMap object in a file on SD card.
6623668,1,0,1,java.util.HashMap,"For example, I want the LazyList of images that is saved in HashMap to be stored in a file on SD card."
6623745,2,0,1,java.util.HashMap,"All objects in the HashMap must be Serializable, then you should be able to just serialize the map with something like code."
6629261,2,0,0,java.util.HashMap,"The most simple implementation, I think, is by HashMap for nodes, that is each node is built by hash map which contains the matching node per char."
6630244,2,1,2,java.util.HashMap,Use a Map (some concrete implementation thereof; HashMap would work) when you process the line.
6631555,2,1,1,java.util.HashMap,Its possible that your HashMap has objects that are not marked Serializable?
6631739,1,0,3,java.util.HashMap,Where Model is a class that extends HashMap and represents a single Row in a Table.
6634816,1,0,2,java.util.HashMap,"HashMap - all operations O(1), anologous to HashSet."
6635884,2,0,0,java.util.HashMap,Use the HashMap to convert from day nums (0 to 6) to Strings and vice versa.
6639080,1,0,9,java.util.HashMap,"I started with a HashMap but it seems that HashMap is somewhat space inefficient (I'm storing ~20 million records, and seems to require ~6GB RAM)."
27329809,2,0,0,java.util.HashMap,"Consider Koloboke Collections, which is up to 2 times faster than Trove according to various tests:  Time - memory tradeoff with the example of Java Maps Large HashMap overview: JDK, FastUtil, Goldman Sachs, HPPC, Koloboke, Trove  if configured to consume the same memory as Trove."
6639147,2,0,0,java.util.HashMap,Do you know what kind of space savings I can expect over HashMap for Trove?
6639147,2,0,0,java.util.HashMap,But here are some rough estimates (assuming a 32bit JVM):  HashMap keys would need to be Integer instances.
13506162,2,0,6,java.util.HashMap,"License: New BSD license, Language: Java JDBM2  JDBM2 provides HashMap and TreeMap which are backed by disk storage."
6641361,1,0,0,java.util.HashMap,If in side a HashMap if another hashMap is there then I need to understand that its object inside an object.
6641446,2,0,7,java.util.HashMap,"The HashMap is testing with == before .equals, and since you are putting the same object twice, the first test passes."
6641453,2,0,0,java.util.HashMap,The equality check is done by HashMap in three steps:  hash code is different => unequal objects are identical (==) => equal equal method gives true => equal  The second step prevents calling equals since identical objects are always assumed equal.
6644090,1,0,2,java.util.HashMap,"I have data stored in a HashMap, which I want to access via multiple threads simultaneously, to split the work done on the items."
6644090,1,0,2,java.util.HashMap,"Of course this doesnt work with a HashMap, because I can't access it via an index."
6644114,2,1,1,java.util.HashMap,But obviously if the HashMap changed then you would have to do those two operations over again which could get very costly.
6644158,2,0,3,java.util.HashMap,"Firstly, you shouldn't be using a HashMap, because iteration order is undefined."
6644169,2,0,1,java.util.HashMap,With HashMap#keySet -> Set#toArray you would get an array of the keys.
6644169,2,0,1,java.util.HashMap,Then each thread would access only the keys it had been assigned and finally you could access the entries of a given partition of the HashMap with only those keys.
6644507,2,0,0,java.util.HashMap,"If I understand you correctly, you are basically looking for a HashMap."
6644511,2,0,0,java.util.HashMap,"I'd say create a custom class that inherits from say HashMap, on insert you check the specified key/value if it's valid."
6645735,2,1,1,java.util.HashMap,What I would recommend (which may simplify what you already have) is to create a HashMap which maps String types to q2a2_add types.
6645735,2,1,1,java.util.HashMap,"Then, when you want to add a new tab panel, you can just check if the String exists in the HashMap instead of searching through to check the titles."
6645735,2,1,1,java.util.HashMap,"If it doesn't exist, you can add it to a HashMap stored inside of your outer JPanel class."
6645735,2,1,1,java.util.HashMap,"Then, when you want to access the tabpanels, you can simply access them by string inside the HashMap and get/set their properties as you please."
6651205,2,0,1,java.util.HashMap,"If you want to be able to find a specific item according to a key, use a HashMap."
29864821,2,0,0,java.util.HashMap,"Doing this can sometimes be faster than using a HashMap, which relies on hashCode() and equals() calls."
6659455,1,0,20,java.util.HashMap,How to name a HashMap in Java?
6659455,1,0,20,java.util.HashMap,"This might be a silly question, but I have never found a satisfying way to name a variable of type HashMap<K,V> in Java."
6659455,1,0,20,java.util.HashMap,"For example - lets say I have a HashMap where every bucket is a <K,V> pair where K is a String say representing ""State"" and V is an Integer representing the number of counties the state has."
6659455,1,0,20,java.util.HashMap,"Should the HashMap be named as ""mapStateCounty"", ""stateToCountyMap"", etc."
6663428,1,0,1,java.util.HashMap,differences of performances between NSDictionary (obj-c) and HashMap (java).
6664306,1,0,4,java.util.HashMap,Performance for HashMap when Key is Guaranteed Unique.
6664344,2,1,7,java.util.HashMap,"For many JRE implementations and operation mixes, this class will yield better performance than HashMap (which uses chaining rather than linear-probing)."
6664352,2,0,1,java.util.HashMap,"ConcurrentHashMap is the most expensive of the HashMap implementations, this is becuase it is thread safe."
6664622,2,0,1,java.util.HashMap,"If your application is single threaded or if there is no contention, ConcurrentHashMap is slower than HashMap."
6664658,1,0,0,java.util.HashMap,What's the right way to build Java Map that is a HashMap but converts values on input and output?
6664658,1,0,0,java.util.HashMap,I basically need a slightly modified version of a HashMap where whenever a value is read or written it needs to be converted.
6664658,1,0,0,java.util.HashMap,"Of course I could basically copy the implementation from HashMap and modify it to fit my needs, but that seemed to be rather ugly solution and I before I do that I wanted to make sure I am not missing a much nicer solution."
6665049,1,0,1,java.util.HashMap,or for the HashMap: code.
6674366,1,0,0,java.util.HashMap,"Also, would a HashMap be a lot faster than a SortedMap?"
6674414,2,0,1,java.util.HashMap,"As for SortedMap vs HashMap - typically a HashMap lookup is O(1) if you don't have many hash collisions, but a SortedMap lookup is only O(log n) if there aren't equal elements."
6678202,1,0,0,java.util.HashMap,HashMap stored on disk is very slow to read back from disk.
6678202,1,0,0,java.util.HashMap,I have a HashMap that stores external uids and then it stores a different id ( internal for our app ) that has been set for the given uid.
6678202,1,0,0,java.util.HashMap,"The load however will overwrite it, if we successfully load, otherwise it will use the default empty HashMap."
6678202,1,0,0,java.util.HashMap,The HashMap is written to disk using: code.
6678202,1,0,0,java.util.HashMap,"The issue I have is, locally running in Eclipse performance is fine, but when the application is running in normal use on a machine the HashMap is taking several minutes to load from disk."
6678202,1,0,0,java.util.HashMap,The HashMap that it contains has about ~3000 key-value pairs.
6678202,1,0,0,java.util.HashMap,"The machine is a VM running XP it has only recently started becoming slow to read the HashMap, so it must be related to the size of it, however 400kb isn't very big I don't think."
6680434,2,1,7,java.util.HashMap,"You can then iterate over the original list, constructing a BlogKey for each and adding to a HashMap: code."
6687178,2,0,4,java.util.HashMap,You should be able to make a copy of a HashMap using its clone method.
6688690,1,0,1,java.util.HashMap,"The error message is  Type mismatch: cannot convert from HashMap<String,ArrayList<String[]>> to Map<String,List> Why does that means?"
6691367,2,0,0,java.util.HashMap,All you want is a HashMap.
6691592,2,0,0,java.util.HashMap,"A HashMap consists of many key, value pairs."
6692008,1,0,15,java.util.HashMap,Java ConcurrentHashMap is better than HashMap performance wise?
6692008,1,0,15,java.util.HashMap,"In fact, the   ConcurrentHashMap implementation performs better than HashMap in   nearly all situations."
6692008,1,0,15,java.util.HashMap,"So, does anyone know any resources that shows the performance statistics for both ConcurrentHashMap and HashMap?"
6692008,1,0,15,java.util.HashMap,Or can anyone explain to me why ConcurrentHashMap is faster than HashMap?
6700032,2,1,7,java.util.HashMap,"Doug Lea is extremely good at these things, so I won't be surprised if at one time his ConcurrentyHashMap performas better than Joshua Bloch's HashMap."
6700032,2,1,7,java.util.HashMap,"However as of Java 7, the first @author of HashMap has become Doug Lea too."
6700032,2,1,7,java.util.HashMap,Obviously now there's no reason HashMap would be any slower than its concurrent cousin.
6700032,2,1,7,java.util.HashMap,"Eventually ConcurrentHashMap is within 3% of HashMap, which is quite remarkable."
16099101,2,0,3,java.util.HashMap,The reason a HashMap could be slower is because it has to detect ConcurrentModification to know when to throw an exception.
16099101,2,0,3,java.util.HashMap,"Acquiring a lock is very fast, especially so in single-threaded situations when you already hold the lock, but checking modCount is two reads and a jump-if-not-equal that HashMap must pay to throw CoModException."
16099101,2,0,3,java.util.HashMap,"In situations when you have a completely private map for dictionary get/put only, you can often used a stripped down HashMap without any modCount or even size tracking for added performance boost."
6692151,2,0,5,java.util.HashMap,A ConcurrentHashMap is likely to be better than a synchronized HashMap.
6692151,2,0,5,java.util.HashMap,"On the other hand an unsynchronized HashMap is likely to be faster than a ConcurrentHashMap, because of the overhead of unnecessary locking in the latter case."
6692174,2,0,10,java.util.HashMap,"If you are accessing the HashMap with only a single thread HashMap is fastest (it does not do any synchronization), if you are accessing it from multiple threads ConcurrentHashMap is faster than doing the synchronization coarse-grained by hand."
6692859,2,1,0,java.util.HashMap,"I would create a HashMap<String, Vector<String>> hashMap."
6693155,1,0,2,java.util.HashMap,JAXB ignores HashMap properties?
6693155,1,0,2,java.util.HashMap,I'm using the JAXB implementation that comes with J2SE to serialize a bean that contains a HashMap property.
6693155,1,0,2,java.util.HashMap,"This more or less works unless the structure has more than one level, i.e. the HashMap is a property of a bean that is a property of a bean - like this: code."
6693155,1,0,2,java.util.HashMap,"This outputs <?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?><b2><b><map/></b></b2> instead of a correctly formatted HashMap."
6694222,2,1,1,java.util.HashMap,"The explanation is given on the website you linked:  Unfortunately, as of 2.1, this processing is only defined for bean   properties and not when you marshal HashMap as a top-level object   (such as a value in JAXBElement.)"
6694222,2,1,1,java.util.HashMap,"In such case, HashMap will be   treated as a Java bean, and when you look at HashMap as a bean it   defines no getter/setter property pair, so the following code would   produce the following XML: Bean with Map:  code."
6703877,2,1,3,java.util.HashMap,"""is it suggested to use ArrayList<HashMap<String, Child>>""  No."
6703877,2,1,3,java.util.HashMap,"The JSON structure doesn't match ArrayList<HashMap<String, Child>>."
6707735,1,0,0,java.util.HashMap,"It should work like this:  first, it creates an object (an HashMap) which will be lately and periodically updated every 24 hours then there will be an handler which will process the requests received."
6707735,1,0,0,java.util.HashMap,"This processing phase is done basing on the content of the HashMap, which is created outside the handler."
6708540,1,0,1,java.util.HashMap,"HashMap, from property file with custom error_code-error_message pairs."
6711491,2,1,2,java.util.HashMap,a HashMap that maps thread ids to Thread objects.
6713239,1,0,14,java.util.HashMap,Partial search in HashMap.
6713355,2,1,18,java.util.HashMap,"Yeah, a HashMap is not the right data structure for this."
6713317,2,0,0,java.util.HashMap,Put it all in a MultiMap (or just store a List as the value in your HashMap).
6714098,1,0,0,java.util.HashMap,"Let me explain: in my code, i'm using an ArrayList of BooleanWrap (a home made class of boolean) which will be later assigned as a value in a HashMap (there is a for cycle which update the values of this ArrayList until a condition is verified)."
6714159,2,0,2,java.util.HashMap,"The ""issue"" is that the original object stored in the HashMap is being mutated."
6714623,1,0,1,java.util.HashMap,"My code does this - List<HashMap<String, String>> painItems = new ArrayList<HashMap<String, String>>(); every time the activity is created, but I want it to persist the list throughout the application life cycle, and even when the application is closed then re-opened... Any help would be appreciated."
6714686,2,0,2,java.util.HashMap,To clarify you will need to pull the values out of your  HashMap and store them in a text format using one of the methods mentioned above.
6714686,2,0,2,java.util.HashMap,Then when your app starts you have to get the values from storage and load them into the HashMap.
6720658,2,1,91,java.util.HashMap,"4) For the ConcurrentHashMap (and the Set derived from it): Here most basic options are (on average, if you have a good and fast hashCode()) in O(1) (but might degenerate to O(n)), like for HashMap/HashSet."
6720658,2,1,91,java.util.HashMap,"Resizing is slow (as for HashMap/HashSet), thus try to avoid this by estimating the needed size on creation."
6721655,1,0,1,java.util.HashMap,"I have a hashMap: HashMap<Entity1,List<Entity2>>();."
6722168,1,0,0,java.util.HashMap,"I have an ArrayList of HashMaps, and I have the key and value of one HashMap that I'd like to use to match the value of another HashMap found at a different position.. For example: code."
6730805,2,0,1,java.util.HashMap,Try using a HashMap with the ID as the Key and the Item as the Value.
6730805,2,0,1,java.util.HashMap,"In an HashMap you cant duplicate Items with the same Key, so your problem is solved at the bottom of your programming."
6737022,1,0,8,java.util.HashMap,"I have a JSON string which looks as following: {""altruism"":1,""amazon"":6} What I want to have is a HashMap<String, Integer> with two entries afterwards."
6737459,1,0,0,java.util.HashMap,Reducing memory usage of very large HashMap.
6737459,1,0,0,java.util.HashMap,Some information:  The HashMap maps a String key (which is less than 20 chars) to a String value (which is approximately 50 characters).
6737459,1,0,0,java.util.HashMap,This HashMap is initialized with an initial capacity of 3 million so that the load factor is around .66.
6737459,1,0,0,java.util.HashMap,"The HashMap is only utilized by a single operation, and once that operation is completed, I ""clear()"" it."
6737459,1,0,0,java.util.HashMap,"One idea I had was to change the HashMap to HashMap and use the hashCode of the String as the key, this will end up saving a bit of memory but risks issues with collisions if two strings have identical hash codes ... how likely is this for strings that are less than 20 characters long?"
6737459,1,0,0,java.util.HashMap,"The CSV file itself is only 100 MB, but java ends up using over 600MB in memory for this HashMap."
9972627,2,0,1,java.util.HashMap,And as per my experience h2 runs great with load operation and this code will certainly  be faster and less memory intensive than ur manual HashMap based joining method.
6738192,2,0,0,java.util.HashMap,You might find TObjectIntHashMap more efficient than HashMap but both will be fairly efficient.
6737588,2,1,2,java.util.HashMap,"Your solution based on a map of authors' names to counts is a pretty good one (if you use a HashMap, it'll have an overall average time complexity of O(n))."
6737608,2,0,0,java.util.HashMap,"Average case for lookup with a Java HashMap is going to be O(1), meaning it won't drastically increase your running time."
6751775,2,0,8,java.util.HashMap,"I did not examine the source code for HashMap very carefully, but at a first glance it appears that the array length in each HashMap must be a power of two, making it another implementation of a dynamic array."
6751775,2,0,8,java.util.HashMap,Note that HashSet is essentially a wrapper around HashMap.
6757868,1,0,48,java.util.HashMap,"I have a Map as syntax as Map<String, String> testMap = new HashMap<String, String>();."
6757868,1,0,48,java.util.HashMap,"So I thought there can be a way to redefine that Map as testMap = new HashMap<String, String>(); and previously used Map will be Garbage collected."
6757944,2,0,1,java.util.HashMap,"If you also need to eliminate that, the easiest way would be to discard the whole HashMap and replace it with a new instance."
6757944,2,0,1,java.util.HashMap,"In this case, you may want to look at a more (memory-) efficient implementation than the generic HashMap, such as the TLongLongHashMap found in the GNU Trove library."
6757985,2,0,2,java.util.HashMap,I think calling new HashMap() is a better idea since it will not have to do as much processing as clearing the hashmap.
6767365,1,0,7,java.util.HashMap,Updating Java HashMap key.
6767365,1,0,7,java.util.HashMap,"I was just wondering, what would happen if key of a HashMap is mutable, test program below demonstrate that and I am unable to understand when both equals and hashCode methods returns  true and same value, why does hashmap.containsKey return false."
6767437,2,0,4,java.util.HashMap,The HashMap puts your object at the location for hash key 5.
6767486,2,0,0,java.util.HashMap,Thus the HashMap used 5 to place the value into the appropriate bucket.
6769152,2,0,1,java.util.HashMap,It sounds to me like you're looking for a nested HashMap.
6770404,1,0,3,java.util.HashMap,"I load all the classes into a HashMap, and it all works great if I add NEW commands, but if I change an old one, nothing changes in it."
6775478,1,0,0,java.util.HashMap,ArrayList custom class as HashMap key.
6775478,1,0,0,java.util.HashMap,"I want to store my data in HashMap<Point[], Double>."
6775582,2,0,1,java.util.HashMap,"You are storing the same array instance, keyPts, into the HashMap on every iteration (and overwriting its contents as well)."
6779504,1,0,0,java.util.HashMap,My program adds elements to a HashMap (checking for dupes with .containsKey(key)).
6782126,2,0,3,java.util.HashMap,"Once there, you can get the event properties such as the property name and property's new value which will be selected item on jList3 in this case, for counting how many times some item was clicked, you could use a HashMap, setting the key as the item index of jList and the associated value how many time the item has been clicked: code."
6782145,2,0,2,java.util.HashMap,"The basic idea here is that the MyListItem should keep track of everything you are interested in tracking so you don't need multiple lists and even worse, to remember to add an item to both a JList and a HashMap or any other data structure."
6783792,2,1,1,java.util.HashMap,"If more than one request might kick off the process, then I would save each isDone toggle in a HashMap with some kind of identifier."
6783391,2,0,4,java.util.HashMap,"I don't know if this is what you had in mind at all, but you could set up a HashMap of image id's (which are ints) and Strings of correct answers."
6790384,1,0,0,java.util.HashMap,Odd HashMap Counter Behavior.
6793689,2,1,0,java.util.HashMap,"Per your comment, a HashMap cannot contain the same keys per the implementation the same key would be: code."
6796104,2,1,1,java.util.HashMap,"So if you say new HashMap<String,Integer>;, you are saying that all operations against this map will use a key that is a string and a value that is an integer."
6796104,2,1,1,java.util.HashMap,"You could, of course, create such a map as new HashMap<Class,Object>;."
6800295,1,0,0,java.util.HashMap,"One option I've been thinking of is simply to have a .txt file as the database and upon server start, create a HashMap or something and use the data stored in the file."
6802483,1,0,216,java.util.HashMap,How to directly initialize a HashMap (in a literal way)?
6802483,1,0,216,java.util.HashMap,Is there some way of initializing a Java HashMap like this?
6802512,2,0,264,java.util.HashMap,"However, you should be careful and make sure that you understand the above code (it creates a new class that inherits from HashMap)."
6802523,2,0,39,java.util.HashMap,"This creates an anonymous subclass of HashMap, whose instance initializer puts these values."
6812935,2,0,2,java.util.HashMap,I think you could do better than using a HashMap.
6812935,2,0,2,java.util.HashMap,You then check if the string is in the HashMap and either it gets stored or the counter get incremented.
6812935,2,0,2,java.util.HashMap,"So of the ""1GB"" of text you read, we can guess that you'll only be storing about 5MBs of it in your HashMap."
6812935,2,0,2,java.util.HashMap,And the total memory used by a Radix tree would be a lot smaller than a HashMap.
6809097,2,0,0,java.util.HashMap,"To answer your question, first, you need to understand how HashMap works."
6809097,2,0,0,java.util.HashMap,"This is an excerpt from JavaDoc http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html:  The expected number of entries in the map and its load factor should   be taken into account when setting its initial capacity, so as to   minimize the number of rehash operations."
6808880,2,1,1,java.util.HashMap,"Theoretically , since HashMap access is generally O(1), I guess your algorithm is O(n), but in reality has several inefficiencies."
6808880,2,1,1,java.util.HashMap,"Finally, your use of HashMap will be slower than needed because the default size at construction is very small, and it will have to grow internally a number of times, forcing a rebuilding of the hash table each time."
6804325,1,0,1,java.util.HashMap,I am storing the actor names in a HashMap like this: code.
6804325,1,0,1,java.util.HashMap,But... what do I do if the actor I'm looking for is not in the HashMap (ie.
6804325,1,0,1,java.util.HashMap,"I assume I would have to pick the first actors' name form the connectedActors list, insert it as new key into the HashMap, and fetch all actors he played with him to insert them to."
6813685,1,0,1,java.util.HashMap,Struts2  and a list of HashMap.
6813685,1,0,1,java.util.HashMap,"I have a list of HashMap in my Action class, something like {month=05, day=20, dayOfWeek=Mon}."
6815177,2,0,0,java.util.HashMap,"A HashMap would be simple, since you want to map from a query name/key to a query/value."
6820092,1,0,5,java.util.HashMap,JAXB HashMap unmappable.
6820092,1,0,5,java.util.HashMap,I want to convert a HashMap in a POJO class to XML.
6820092,1,0,5,java.util.HashMap,I tried using the XmlAdapter but it results in only the key and value pairs of the HashMap being the attributes of the XML Elements.
6820092,1,0,5,java.util.HashMap,I need the Key to be the Element itself and the value of the HashMap to be the value of the element.
6820092,1,0,5,java.util.HashMap,This is the class which has the HashMap field: XmlElementMap.java code.
8770027,2,0,12,java.util.HashMap,"I have the same requirement ""I need the Key to be the Element itself and the value of the HashMap to be the value of the element""."
8770027,2,0,12,java.util.HashMap,"I didn't use customized adapter, but implemented it by converting the HashMap entries dynamically to a list of JAXBElement objects, and then annotated the list with @XmlAnyElement."
6822047,2,1,29,java.util.HashMap,"As LinkedHashMap is a subclass of HashMap this result variable will be true, so this might probably be better for you as it's going to find exact and subclass matches."
6826152,2,0,0,java.util.HashMap,you should define HashMap like: map = new HashMap(NUMBER).
6825174,2,1,2,java.util.HashMap,"If you want to reduce the memory footprint, take a look at GNU Trove for a more compact (and faster) implementation of primitive maps (instead of using HashMap<Integer,Integer>)."
6827147,1,0,0,java.util.HashMap,"My Service returns a HashMap and has three input parameters  apuId,providerId,notes I am not sure how to send these parameters to the WS, I am sure it's just few method calls away ex; call.setProperty."
6827794,2,0,4,java.util.HashMap,"As for the size=9 but only 7 values in the table, you are misunderstanding the internal workings of the HashMap."
6833945,2,0,10,java.util.HashMap,"It returns an anonymous inner class extending HashMap, not a HashMap."
6835752,1,0,0,java.util.HashMap,How do I cast a HashMap to a concrete class?
6835752,1,0,0,java.util.HashMap,"I have a class, lets call it Fruit, and I have a HashMap."
6835752,1,0,0,java.util.HashMap,"I want to be able to initialize a new instance of Fruit, but set to the values in HashMap."
6835805,2,0,0,java.util.HashMap,Casting of a HashMap to a fruit wouldn't be possible.
6835808,2,1,5,java.util.HashMap,The second is not possible because a HashMap is not a Fruit.
6836117,2,0,4,java.util.HashMap,"Now, for the ""somehow"" part: the easiest (and most flexible) way would be to have a Map<String, TextureRegion> (Map is an interface, HashMap would probably be sufficient in this case) in your Assets class that contains the texture regions."
6839200,2,0,0,java.util.HashMap,"If you don't want to go down the Interceptor or Aspect road (keeping everything in the Controller):  Create a BaseController that all Controllers extend Have a HashMap in the BaseController mapping URLs to Titles Put the addTitle method there too, modifying to return the same string as the JSP name."
6838652,2,0,1,java.util.HashMap,"You seem to want to associate an int with a String, and one way to do this is to use a Map such as a HashMap."
6838652,2,0,1,java.util.HashMap,"This way you could read in the data and use it easily in a HashMap, or data base, or really any way that you desire."
6838589,2,0,1,java.util.HashMap,"Might I suggest that if you don't care about the order you retrieve things, to go with a HashMap if you're looking to do a lot of contains calls."
6838703,2,0,1,java.util.HashMap,"I recently worked on a project which managed complex data structures of 1-2 GB worth of millions of strings, and the standard out-of-the-box ArrayList and HashMap were more than sufficient."
6840394,2,1,30,java.util.HashMap,"(So, for example, it was cheaper to invoke methods on a   HashMap map than a Map map, even though in both cases the map was a   HashMap.)"
6841120,2,1,0,java.util.HashMap,I have used HashMap keys as an input characters and value as a counter.
6841021,2,0,2,java.util.HashMap,"create  HashSet and  HashMap: set,map and int count=0,  iterate over the string, and add each character and its index."
6841183,1,0,0,java.util.HashMap,Axis web service client respnose HashMap.
6841183,1,0,0,java.util.HashMap,The returned HashMap is always empty and I think that axis does not support it.
6843701,1,0,1,java.util.HashMap,Send a HashMap using Jersey for REST web service.
6843701,1,0,1,java.util.HashMap,"I want to send a HashMap to the server, but I have a problem."
6843701,1,0,1,java.util.HashMap,"This code works fine if I change parameter of the method to String, but with a HashMap, it doesn't work :  code."
6847535,1,0,1,java.util.HashMap,Java Iteration: Hashtable vs HashMap.
6847591,2,0,1,java.util.HashMap,I think with a HashMap you have to get the entrySet.
6847591,2,0,1,java.util.HashMap,Here's a ref on iterating a HashMap: http://www.java2s.com/Code/JavaAPI/java.util/HashMapentrySet.htm I agree with your initial train of thought though - not sure why it works this way...
6850757,2,0,8,java.util.HashMap,"If you need this often (for the same enum), it might be better to create once a HashSet or a HashMap mapping the names to the enum values."
6855245,2,0,0,java.util.HashMap,HashTable and HashMap both do not guarantee the ordering of it's elements.
6855932,1,0,1,java.util.HashMap,Sort for HashMap in Android.
6855932,1,0,1,java.util.HashMap,I have a HashMap and I need sort him by key.
6857023,1,0,4,java.util.HashMap,As parsing the XML is single-threaded as simple HashMap might do the job as well.
6857219,2,1,3,java.util.HashMap,"Add an extra indirection step: Have a second HashMap that keeps the keys, and look up the keys there first before inserting them in the in-memory structures."
6859844,1,0,3,java.util.HashMap,"Now my requirement is to pass array of HashMaps I am not able to do so, even though HashMap implements Serializable."
6880361,2,1,2,java.util.HashMap,"I am using Asix2 to devolpe a project, actually I do not have Axis2 experience very much,HashMap is complex object in Java, some base objects are suppoeted by Asix2, such as simple Array, so do not try to use complex objects of Java when you use Axis.I think your reqest can not get, for axis recently do not support it.Thanks and regards."
6871966,2,0,0,java.util.HashMap,When HashMap call these method it will search out for these method in the parent class which is Object in this case.
6875381,2,1,2,java.util.HashMap,"(Expanding, based on comments below and requirement that it act ""as if"" it had been passed by reference) Create a global HashMap<int,ArrayList<Packet>> passed_packets; When creating the intent, add the object now being passed as an extra to the HashMap: code."
6875381,2,1,2,java.util.HashMap,"When receiving the intent, get the hash key, get the value from the HashMap, and remove it from the HashMap code."
17626540,2,0,1,java.util.HashMap,If so keep a HashMap.
6876679,1,0,0,java.util.HashMap,Example : protected static Map userMapList=new HashMap(); this Map keep my application users contexts.
6878935,1,0,2,java.util.HashMap,"What I did is a structure like that: Map<Item, Map<Item, Float>> I tried this with HashMap and Hashtable."
6881886,2,0,1,java.util.HashMap,"The easiest solution would be to properly initialize the HashMap during creation, like this: code."
6885950,1,0,0,java.util.HashMap,I wanted to implement SoftHashMap based on Java SoftReference and HashMap.
6885950,1,0,0,java.util.HashMap,I was wondering what hashcode() would be used for put and pull functions of the underlying HashMap.
6886721,2,1,54,java.util.HashMap,"This statment creates an anonymous subclass of HashMap, where the only difference from the parent class is that the 4 entries are added during instance creation."
6886854,2,0,3,java.util.HashMap,"If you use the Guava library, you can use its ImmutableMap class, either by itself (examples 1 and 2), or as an initializer for a HashMap (examples 3 and 4): code."
6887839,1,0,0,java.util.HashMap,Compare HashMap with text file.
6887839,1,0,0,java.util.HashMap,Now I want to compare this text file with HashMap which has already those values.
6887839,1,0,0,java.util.HashMap,How to read this text file and compare with HashMap.
6888738,2,0,1,java.util.HashMap,"Load the text file into another HashMap, using whatever semantics are appropriate, and then call HashMap.equals()."
6888065,2,0,0,java.util.HashMap,"I'll leave it to you to read the text file (unless I'm missing something, a class like BufferedReader should work for you), but I'll tell you how to use the HashMap."
6887865,2,0,0,java.util.HashMap,You are then able to iterate through the keys in your HashMap and do a comparision with the Hashtable.
6888048,2,0,0,java.util.HashMap,"Why not use the HashMap to store (line number, position in the file), instead of (line number -> line)."
6888943,2,1,1,java.util.HashMap,"If you really want to use keys (which is actually unnecessary in this case), you can always implement a HashMap instead of a HashSet in a similar fashion."
6893022,2,1,5,java.util.HashMap,"This is also the hash in use when using the built-in collections, such as java.util.HashMap."
6895192,1,0,5,java.util.HashMap,I want to display the values in a HashMap.
6895192,1,0,5,java.util.HashMap,"A HashMap may have duplicate values (but not duplicate keys), but I want to display a value only once."
6895861,1,0,0,java.util.HashMap,"I do use a lot of in memory cache using Java's APIs(like HashMap, ArrayList etc)."
6904048,1,0,4,java.util.HashMap,This Object contains a HashMap content as well as some other fields.
6905165,2,1,3,java.util.HashMap,"If you have a large number, you could think about using a HashMap or such with the Command pattern."
6905248,2,1,10,java.util.HashMap,"On the other hand, if you have calculated it, when you go to put it in a HashMap or HashSet, it won't be retrieved."
6906614,1,0,2,java.util.HashMap,I'm trying to get a XmlAdapter to a HashMap to work and I keep getting an exception.
6906614,1,0,2,java.util.HashMap,Identify the Unmappable Class I'm trying to map a java.util.HashMap.
6906614,1,0,2,java.util.HashMap,The exception description is very clear but I can't see where I am trying to convert a MappingType to a HashMap.
6907249,1,0,2,java.util.HashMap,"The collections covered are: HashMap, Hashtable, TreeMap, LinkedHashMap, HashSet, TreeSet, LinkedHashSet, ArrayList, Vector, LinkedList, PriorityQueue."
6907899,1,0,0,java.util.HashMap,String Array Into HashMap Collection Object.
6907899,1,0,0,java.util.HashMap,I would like to add the string array into a collection obejct like HashMap so that I could retrieve values in any class like  code.
6908216,2,1,1,java.util.HashMap,The HashSet.add() method (which is basically HashMap.put() method) finds the best place on the self-maintained inner table according to the hashcode().
6908216,2,1,1,java.util.HashMap,If you change the value of the item That is Key in HashMap so it will alter the hashcode() value resulting abnormal result.
6910389,2,0,1,java.util.HashMap,There's a golden rule somewhere at the API you may have missed: The hashCode must not be changed while the object is in the HashMap/Set!
6910389,2,0,1,java.util.HashMap,The HashMap/Set uses the hashCode to arrange and find objects in a faster way.
6916838,2,0,0,java.util.HashMap,"Place each (name,age) pair in the ArrayList<Foo> into a HashMap<String,Foo>."
6916838,2,0,0,java.util.HashMap,"If the HashMap already contains a key with the same name, then compare the ages and replace accordingly."
6916838,2,0,0,java.util.HashMap,"Then after you're done, replace the elements in the ArrayList with the elements in the HashMap."
6924913,2,0,3,java.util.HashMap,"In terms of HashMap limitations, I guess it can suffer if items have a bad hashing algorithm, but thats about it."
6924936,2,0,0,java.util.HashMap,They mean that the order of elements is not preserved in HashMap.
6925158,1,0,0,java.util.HashMap,"Create HashMap as cache for objects, problem with key object."
6926802,2,0,0,java.util.HashMap,One example being HashMap [as against hashtable] - try to use it with multiple threads without a lock outside.
6937185,2,0,2,java.util.HashMap,"You could use a TreeSet and the String.CASE_INSENSITIVE_ORDER comparator, which I find more elegant than the suggested HashMap solutions: code."
6937232,2,0,0,java.util.HashMap,"How about using HashMap (HashMap), with key being generated by a your hash function."
6940471,2,0,1,java.util.HashMap,The approach I would choose is: iterate over all elements and put them in a Map (HashMap in Java).
6947525,2,1,1,java.util.HashMap,"Both java.util.HashMap and java.util.Hashtable use some sort of chaining, at least in the implementation used in the Sun/Oracle JRE and the OpenJDK one."
6946580,1,0,2,java.util.HashMap,where domainMap is of the type java.util.HashMap.
6954509,1,0,9,java.util.HashMap,"but java compiler complaining about that ""cannot instantiate the type HashMap(); whats wong with it..?"
6954573,2,1,13,java.util.HashMap,"Since Object is a supertype of everything, params can be assigned be assigned a reference to both HashMap<String, Integer> as well as HashMap<String, String>, among many other things."
6955320,1,0,1,java.util.HashMap,Error when adding HashMap values to TreeSet.
6957102,2,0,3,java.util.HashMap,"The wildcard provides flexibility (you can now assign a HashMap<String, String> or a HashMap<String, Integer> to map) in exchange for a condition: you cannot write to map, because it doesn't know what the actual class of the values will be."
6957815,2,1,0,java.util.HashMap,"I think the simplest method is to put the AREAS into a <String, Set> HashMap, then enter all  the associated CODES into the relevant map."
6961529,2,0,4,java.util.HashMap,"Map<KeyType,ValueType> which is implemented by HashMap<KeyType, ValueType> and TreeMap<KeyType, ValueType>, among others -- HashMap is unordered and TreeMap is ordered."
6961529,2,0,4,java.util.HashMap,"Other useful Maps are LinkedHashMap which is like HashMap but iterates in insertion order, and com.google.common.collect.Maps in Guava which has a bunch of utility methods, and com.google.common.collect.ImmutableMap which is an immutable map implementation."
6961535,2,1,12,java.util.HashMap,"Check the Javadoc for Map implementations; the most common is HashMap, but there are sorted, concurrent, deterministically iterable implementations etc."
6961552,2,0,0,java.util.HashMap,HashMap and TreeMap are your best bets.
6962564,2,1,8,java.util.HashMap,Suppose there are two keys a and b such that:  a.hashCode() == b.hashCode() a.equals(b) returns false b.equals(a) returns true  Then suppose that the HashMap implementation searches for an existing key by calling existingKey.equals(newKey) for each existing key with the same hash code as the new key.
6962564,2,1,8,java.util.HashMap,"Now building the second HashMap, we may end up getting the entries in the order { b, a }."
6962599,2,0,0,java.util.HashMap,It depends of how the first HashMap is initialized.
6962599,2,0,0,java.util.HashMap,"Also everytime you add an object into the HashMap , once it passes 75% load factor, it allocates twice the default size to accomodate new values."
6971342,2,0,1,java.util.HashMap,"Or perhaps you should switch to using a HashMap<String, Song>, that would let you look up a song by it's title."
6971592,2,0,3,java.util.HashMap,The HashMap tries to distribute all the objects it holds among buckets.
6973618,1,0,9,java.util.HashMap,"I would initially return the HashMap that the method generated, but thought it would be better to return an ImmutableMap."
6979345,2,0,0,java.util.HashMap,"I have no idea what you're actually trying to do, but it looks like you want to do a map from words to the sentence fragment it was found in - try a HashMap<String,String>"
6979890,1,0,9,java.util.HashMap,Difference of HashMap in alt-rt.jar and rt.jar?
6979890,1,0,9,java.util.HashMap,What is the difference between HashMap in alt-rt.jar and rt.jar.
10231540,2,0,5,java.util.HashMap,"Indeed the HashMap from alt-rt.jar is faster than the traditional HashMap, however its memory consumption is much higher due to usage of HashMap$FrontCache."
6980659,1,0,1,java.util.HashMap,I've checked the heap dump with Eclipse Memory Analyzer and there were some HashMap issues.
6981656,1,0,3,java.util.HashMap,converting Object -HashMap to XMLObject.
6981656,1,0,3,java.util.HashMap,I have created a webservice which takes a HashMap as parameter.
6981656,1,0,3,java.util.HashMap,The issue is: I have the HashMap or List and API is expecting it to be XMLObject is there any conversion utility which can be useful to convert my value to XMLObject?
7109959,2,1,0,java.util.HashMap,"not sure about conversion, but I have successfully sent HashMap via webservice by wrapping the HashMap in an object like so: code."
6981764,1,0,1,java.util.HashMap,"I am trying to get simple user Details (Name,Phone No, Gender(Option Box)) in an Applet and display the details in an JSP.I put all the three details in an HashMap and send it in a output Stream."
6981764,1,0,1,java.util.HashMap,While on a servlet i just get the HashMap and forward it to a jsp page to display.
6982040,2,0,2,java.util.HashMap,"hashCode is used to get the hashCode of an object, in order to know in which bucket of a HashMap this object must be placed."
6982040,2,0,2,java.util.HashMap,"null can be used as a key in a HashMap, but it's treated as a special case."
6982558,1,0,1,java.util.HashMap,How to get MessageBodyWriter to work with a HashMap using RestEasy and Tomcat?
7213750,2,0,0,java.util.HashMap,The idea is to have a known way to get the key to be used with the HashMap.
6982993,1,0,0,java.util.HashMap,How to store a string into HashMap using StringTokenizer.
6982993,1,0,0,java.util.HashMap,How can I store the key-value pairs into a HashMap object using StringTokenizer?
6992608,1,0,141,java.util.HashMap,HashSet is based on HashMap.
6992608,1,0,141,java.util.HashMap,"If we look at HashSet<E> implementation, everything is been managed under HashMap<E,Object>."
6992608,1,0,141,java.util.HashMap,<E> is used as a key of HashMap.
6992608,1,0,141,java.util.HashMap,And we know that HashMap is not thread safe.
6992608,1,0,141,java.util.HashMap,"Also, If I want to create my own ConcurrentHashSet can I achieve it by just replacing the HashMap to ConcurrentHashMap and leaving the rest as is?"
6994249,2,1,3,java.util.HashMap,"Or finally instead of using the class ""ChangeLog"" just completely avoid using it and use a HashMap instead which is serializable by default."
6996191,1,0,4,java.util.HashMap,Here is my code to store the data into HashMap and display the data using iterator code.
6996241,2,0,1,java.util.HashMap,HashMap does not keep order in which we put data into it.So You may follow LinkedHashMap instead.It keeps the order in which we put data.LinkedHashMap can be used same as HashMap.
6996267,2,0,0,java.util.HashMap,The reason is HashMap and HashSet doesn't guarantee the order of the stored values.
6996219,2,1,18,java.util.HashMap,A HashMap has no guaranteed order:  This class makes no guarantees as to the order of the map;  Use a LinkedHashMap.
6996220,2,0,6,java.util.HashMap,"You need to use a LinkedHashMap because it maintains ordering of its entries, unlike HashMap."
6996220,2,0,6,java.util.HashMap,This implementation differs from   HashMap in that it maintains a doubly-linked list running through all   of its entries.
6997460,2,0,1,java.util.HashMap,"The decision to allow or disallow null is made by the implementing class; just follow the links in the various ""See Also"" sections to get to the implementing classes (for example, HashMap) then look at the insertion methods (generally a variation on add, push, or put) to see if that implementation permits null."
7093882,2,0,9,java.util.HashMap,"Compare this with targeting Java SE, where you don't have to include classes like ArrayList and HashMap in your jar, since any Java SE runtime already has those."
12008833,2,0,0,java.util.HashMap,"I timed 3 different solutions in nanosecond accuracy, since after all the initial question was about performance: Fully synching the function on a regular HashMap: code."
12008833,2,0,0,java.util.HashMap,Subsequent invocations were the fastest on the regular HashMap with method sync like user237815 suggested but only by 300 NANO seocnds.
7003568,2,0,1,java.util.HashMap,A regular HashMap will do it.
7004684,1,0,0,java.util.HashMap,Java HashMap Collision Example Not Working.
7004684,1,0,0,java.util.HashMap,"My understanding is that Java's implementation of HashMap uses ""buckets"" which point to a list of values to handle collisions and that an object will only ever be overridden if the hashCode() for the key AND the equals() for the object are BOTH the same for the object being added and the object it collides with."
7004684,1,0,0,java.util.HashMap,"I tried playing around with HashMap to try to see the collision behavior in action but no matter what I do, it always seems to override."
7004713,2,0,1,java.util.HashMap,"If you read the javadoc for HashMap, you'll note that the put() method is defined as follows  put(Object key, Object value)  Associates the specified value with the specified key in this map."
7012727,2,0,0,java.util.HashMap,"Here's updated code that uses HashMap<Node,Node>."
7012727,2,0,0,java.util.HashMap,This successfully creates a collision and if you look at the HashMap with a debugger you can see the list it is building in the bucket that had a collision: code. }
7007345,1,0,9,java.util.HashMap,"I know that typical Map implementations (for example, HashMap) use a hashcode to decide what bucket to put the entry in, and that if that hashcode should change somehow (perhaps because the contents of the Set should change at all, then that could mess up the HashMap by causing the bucket to be incorrectly computed (compared to how the Set was initially inserted into the HashMap)."
7018149,2,1,3,java.util.HashMap,"Why not simply use a HashMap<Double, Rectangle>?"
7025478,1,0,2,java.util.HashMap,Using char[] array in HashMap in java.
7025478,1,0,2,java.util.HashMap,I am using a HashMap with a char array as the key.
7025478,1,0,2,java.util.HashMap,"But when I put the key, value into the HashMap and print it the value printed as the key is some strange value."
7025518,2,0,4,java.util.HashMap,"BTW, they don't have a hashCode() implementation either, so they make bad keys for HashMaps (see this similar question about using byte arrays as HashMap keys)."
7025523,2,0,2,java.util.HashMap,"char[]'s .toString() method (which is used when printing map contents) is not implemented to display the contents of the array - it uses the default toString() implementation which includes the class name ([C in this case) followed by the hashcode, which is typically the (hex) memory address in the JVM You shouldn't use arrays as keys in HashMap, because they don't implement hashCode() and equals() based on the elements."
7025548,2,0,2,java.util.HashMap,The real problem is that char[] does not have meaningful implementation of the equals() and hashCode() methods that HashMap relies on.
7025572,2,0,0,java.util.HashMap,"It's not possible to make this work for char arrays, because HashMap is based on the hashCode() and equals() methods of the key objects."
7026564,1,0,4,java.util.HashMap,But according to the sources of HashSet and HashMap it have to call it.
7029136,1,0,5,java.util.HashMap,java: HashMap iterator order.
7029393,2,0,11,java.util.HashMap,"It guarantees iteration order:  This implementation (LinkedHashMap) spares its clients from the unspecified, generally chaotic ordering provided by HashMap (and Hashtable), without incurring the increased cost associated with TreeMap"
7029192,2,0,1,java.util.HashMap,"Since HashMap uses hashing to store the entries in an underlying container, you aren't guaranteed any specific order."
7029192,2,0,1,java.util.HashMap,"If you want your entries from your HashMap ordered, you must sort them yourself."
7029613,2,0,0,java.util.HashMap,"Store the tags in a LinkedList of String LinkedLists and the tag values in a HashMap of the following type: LinkedHashMap data= new LinkedHashMap(); You can then call the tag names from the linked lists, append the tag values from the Hash Map and write them out to a new XML file."
7031713,2,0,1,java.util.HashMap,"If your array is only containing a couple of nodes, you may as well consider a HashMap where K is an immutable class containing the array coordinates of a given node and V an object containing val1 and val2 for that node."
7032961,1,0,0,java.util.HashMap,Java: How to use a pair of keys for HashMap.
7032961,1,0,0,java.util.HashMap,Is it possible do the counting with a HashMap with 2 keys?
7035698,2,0,0,java.util.HashMap,The usual data structure for this is a Map of some sort (typically a HashMap).
7091407,2,0,1,java.util.HashMap,"OK, I have experimented with several of your suggestions, and here are my results (I checked (Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()) before filling the array, and checked again after filling the array and gc()):  Original (array of strings): 54 bytes/word (not 40 as I mistakenly wrote) My solution (array of chunks of strings, separated by spaces):  2 words per chunk - 36 b/w (but unacceptable performance)   10 words per chunk - 18 b/w   100 words per chunk - 14 b/w  byte arrays - 40 b/w char arrays - 36 b/w HashMap, either mapping a string to itself, or mapping a string to its index - 26 b/w  (not sure I implemented this correctly)  intern - 10 b/w baseline (empty array) - 4 b/w  The average word length is about 3 chars, and most chars are non-ASCII so it's probably about 6 bytes."
7039450,2,0,3,java.util.HashMap,"intern() quite slow, so you can replace this by a HashMap that will do the same trick for you."
7048628,2,0,3,java.util.HashMap,"The fastest solution to this is O(n) AFAIK use a loop to iterate the string, get the character and update the count in a HashMap accordingly."
7048628,2,0,3,java.util.HashMap,At the end the HashMap contains all the characters that occurred and a count of all the occurrences.
7054147,2,0,4,java.util.HashMap,"java.util.HashMap has very similar semantics, however it is not synchronized."
7054150,2,1,6,java.util.HashMap,"Although not marked as deprecated in the API doc, HashTable is obsolete, you could consider use HashMap."
7054150,2,1,6,java.util.HashMap,The main differences (the two that the doc said) are:  HashMap is unsynchronized; HashMap can contain nulls.
7054150,2,1,6,java.util.HashMap,So beware of these two when you swap in HashMap for HashTable.
7057472,2,0,3,java.util.HashMap,A general map implementation is something like HashMap.
7057430,1,0,11,java.util.HashMap,TreeMap or HashMap faster.
7057430,1,0,11,java.util.HashMap,What I concern is which one of HashMap and TreeMap will result in better (faster) performance in searching a key in the map?
7057444,2,0,9,java.util.HashMap,HashMap is O(1) for access; TreeMap is O(log n).
7057449,2,0,15,java.util.HashMap,"But if you just want to access elements, irrespective of their order use HashMap"
7057459,2,0,4,java.util.HashMap,"a HashMap is O(1) average, so it is supposed to be faster, and for large maps will probably have better throughput."
7057459,2,0,4,java.util.HashMap,"However, a HashMap requires rehashing when Load Balance become too high."
7057459,2,0,4,java.util.HashMap,So  think twice before using HashMap if latency is an issue!
7057459,2,0,4,java.util.HashMap,"a HashMap is also vulnerable to poor hashing functions, which might cause O(n), if many items in use are hashed into the same place."
7057462,2,0,1,java.util.HashMap,HashMap is faster.
7057462,2,0,1,java.util.HashMap,"For your application HashMap is the better choice since I doubt you will need the alphabetically sorted list often, if ever."
7057606,1,0,2,java.util.HashMap,The closest I have in Java is HashMap: code.
7061743,2,0,1,java.util.HashMap,"His class is essentially a nice little framework that uses reflection to gather up all conversion methods at runtime and put them in a HashMap<String, Method> where the key String is a unique id for that input-output combination."
7062232,1,0,0,java.util.HashMap,Remember I have no option to use a HashMap.
7062531,1,0,0,java.util.HashMap,"I've a Bean named as Bucket, it has a HashMap."
7062531,1,0,0,java.util.HashMap,I want to initialize the bean and polulate the HashMap in the faces-config.xml with a property file.
7070133,1,0,10,java.util.HashMap,Extract all 20 attributes I want to persist into a HashMap before inserting the object.
7071954,2,0,5,java.util.HashMap,"Then you can ask questions in next areas:  Java Core (Object#methods(); String#intern(); Checked & Unchecked exceptions and when should you use them; Memory Leaks) Collections API (ArrayList vs. LinkedList; how HashMap works and what's the difference betwixt HashMap, Hastable & ConcurrentHashMap; what is a ConcurrentModificationException; what concurrent collections do you know) Databases:  General (prepared statements; mapping class hierarchies to the relational DB; types of locks; transaction isolation) ORM, let's say we're talking about Hibernate (Levels of cache; examples of HQL; problems with mapping concrete collections such as LinkedList; caveats implementing equals())  Concurrency (atomic operations; volatile; Executors; BlockingQueue; detecting deadlocks in applications) MOM (in what situations it's better than SOAP; ask for some EIP) Spring IoC (how to define an ArrayList in XML; bean scopes) XML (namespaces; SAX vs. DOM; XML Catalogs; XPath expressions) OO:  OOD (LSP, SRP, OCP, DRY, ISP; give some example to the interviewed guy to solve some OO-problem) Design Patterns (all 3 types of Factories, Lazy Singleton with a proper synchronization, Command vs. Strategy)  Algorithms and structures (trees, heaps, lists; soring, iterating, etc.)"
7075475,2,0,0,java.util.HashMap,"Java has HashMap, which is exactly an associative array - you have a key of any type (may be string) and a value of any type, with lookup O(1)"
7075528,2,1,1,java.util.HashMap,"As Bozho said, use a HashMap<Color, Integer>."
7075697,2,1,9,java.util.HashMap,"If some callers require Map (BTW don't use concrete types like HashMap in your interfaces) and others an object, there might be two reasons for that:  the method returns completely different things depending on the arguments (e.g."
7075719,2,0,0,java.util.HashMap,"Then you can provide a wrapper for HashMap, your DTO's could implement that interface directly and you could also have a wrapper that contains a HashMap and a DTO."
7084444,2,0,0,java.util.HashMap,"You could, however, use a HashMap and just map every object to itself."
7084451,2,0,2,java.util.HashMap,The best way to do that would be to write a set wrapper around HashMap that maps each added value to itself.
7086009,1,0,0,java.util.HashMap,Performance and weirness of HashMap.
7086009,1,0,0,java.util.HashMap,Nested HashMap performance.
7086009,1,0,0,java.util.HashMap,"HashMap I have the following: HashMap <String, HashMap <String, HashMap <String,String>>> table = new HashMap <String,     HashMap <String, HashMap <String, String> >>(); this is right?"
7086213,2,1,2,java.util.HashMap,"In terms of nesting the HashMaps, a better option might be to concatenate the keys and use a non-nested HashMap if you're typically interested in the end values and not the intermediate maps."
7089787,1,0,1,java.util.HashMap,I wrote an XMLAdapter for my HashMap.
7103611,1,0,13,java.util.HashMap,HashMap Serializability.
7103611,1,0,13,java.util.HashMap,HashMap implements the Serializable interface; so it can be serialized.
7103611,1,0,13,java.util.HashMap,I have looked at the implementation of HashMap and the Entry[] table is marked as transient.
7103684,2,0,6,java.util.HashMap,HashMap takes care of its own serialization through the use of the writeObject and readObject methods.
7103690,2,0,3,java.util.HashMap,"The javadocs explain:  The capacity of the HashMap (the length of the bucket array) is   emitted (int), followed by the size (an int, the number of key-value   mappings), followed by the key (Object) and value (Object) for each   key-value mapping."
7147924,2,1,0,java.util.HashMap,You are putting the same keys over and over again to the Map hm:  HashMap hm = new HashMap(); code.
7105590,2,0,1,java.util.HashMap,HashTable doesnot keep order.It will print randomly.You should go for LinkedHashMap.You can use LinkedHashMap in the same manner as you did for HashMap.Just put LinkedHashMap in place of HashMap.LinkedHashMap keeps the order of data in which you enter into it.
7107649,2,0,2,java.util.HashMap,"Create a HashMap<List<Range>> that maps a String (""mat1"" - ""mat50"") to a list of Ranges (just a wrapper for a startOfRange int and an endOfRange int) and populate it with the data from file_1."
7108049,2,0,1,java.util.HashMap,"So, in full, the algorithm would be something like:  Create a hash map which maps Long to a List of Longs (HashMap<Long, List<Long>>) Get the hash of each line in the first file (Object.hashCode should be sufficient) Get the offset in the file of the line so you can find it again later Add the offset to the list of lines with matching hashCodes in the hash map Compare each line of the second file to the set of line offsets in the index Keep any lines which have matching entries  EDIT: In response to your edited question, this wouldn't really help in itself."
7112142,1,0,4,java.util.HashMap,Why can't I set HashMap to HashMap.
7112171,2,0,2,java.util.HashMap,It should be HashMap<?
7115445,1,0,48,java.util.HashMap,What is the optimal capacity and load factor for a fixed-size HashMap?
7115445,1,0,48,java.util.HashMap,":) If I know that my HashMap will fill up to contain, say, 100 objects, and will spend most of the time having 100 objects, I'm guessing that the optimal values are initial capacity 100 and load factor 1?"
7115445,1,0,48,java.util.HashMap,"Here's the one illustrating difference between load factor 0.75 and 1, in cases where I initialize HashMap and fill it up to full capacity."
7115445,1,0,48,java.util.HashMap,First chart shows what happens when HashMap is filled to capacity; load factor 0.75 performs worse because of resizing.
7115445,1,0,48,java.util.HashMap,"This chart proves that 0.75 was worse due to resizing; if we fill the HashMap to half capacity, 0.75 is not worse, just... different (and it should use less memory and have unnoticably better iteration performance)."
7115445,1,0,48,java.util.HashMap,This is get performance for all three load factors and different HashMap sizes.
7154181,2,1,42,java.util.HashMap,"The truth is, unless you are perfectly tuning your settings to the implementation of HashMap, the results are going to be all over the place."
7115550,2,0,1,java.util.HashMap,"From the HashMap JavaDoc: As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs."
7115550,2,0,1,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
7115550,2,0,1,java.util.HashMap,"Just because the HashMap is more ""crowded"" doesn't mean that more objects will be placed in the same bucket, right?"
7115485,2,0,2,java.util.HashMap,"First, I'm assuming that your HashMap will not grow beyond 100; if it does, you should leave the load-factor as it is."
7115485,2,0,2,java.util.HashMap,This is not worth it... just leave it 101 and everyone is happy and no-one is looking though the source-code of java.util.HashMap.
7115485,2,0,2,java.util.HashMap,"Third, the claim that setting the HashMap to the exact capacity of what you expect with a load factor of 1 ""will kill your lookup and insertion performance"" is just not true, even if it's made in bold."
7120052,1,0,4,java.util.HashMap,I have a hashmap: Map dateEvent = new HashMap(); where key is a date and time and value is a string.
8074022,2,0,1,java.util.HashMap,"If you were to try to access an element directly, lets say ls.get(0)y you would receive a ClassCastException: java.util.HashMap cannot be cast to ProductInfo."
7122485,1,0,3,java.util.HashMap,"Is ""key"" stored twice in Java HashMap?"
7122485,1,0,3,java.util.HashMap,"When a Key-Value pair is added to a HashMap in Java, in order to determine the bucket location  for value object, the hash map implementation uses hashCode of ""key"" object and applies hashing to it."
7122485,1,0,3,java.util.HashMap,"My question is, is ""key"" object stored twice in HashMap, once as a key and then in the bucket where key -value pair is stored in a Linked List?"
7122525,2,0,0,java.util.HashMap,"If you want to know exactly how HashMap works, then you can lookup the source code."
7122536,2,1,2,java.util.HashMap,First of all: a HashMap and (anything else in fact) can only ever store a reference to some object you pass into it.
7122536,2,1,2,java.util.HashMap,"Next: the actual implementation of HashMap is not prescribed by the Java standard, so it may (and will) vary depending on which JVM you use."
7122536,2,1,2,java.util.HashMap,"And finally, looking at the OpenJDK source code of HashMap, the Entry class has exactly one reference to the key (in the aptly names key field), so the key is stored only once."
7122546,2,0,1,java.util.HashMap,"When accessing a bucket in a HashMap, the hash function is applied to the key that is being searched."
31000254,2,0,1,java.util.HashMap,"Also, a SingletonMap implementation returned by Collections.singletonMap() has a smaller memory footprint than a regular HashMap."
31000254,2,0,1,java.util.HashMap,"It only has to contain two member fields: the key and the value, whereas a HashMap maintains an internal array of Node objects plus other member fields."
7127682,1,0,2,java.util.HashMap,Java memory management with HashMap.
7127860,2,0,0,java.util.HashMap,Look at the javadoc for HashMap for more details.
7127861,2,1,2,java.util.HashMap,I don't think HashMap alone will be robust enough as it is not thread-safe.
7127864,2,0,0,java.util.HashMap,HashMap is O(1).
7127876,2,0,0,java.util.HashMap,"HashMap is ""robust"" (in the sense that it works)."
7127876,2,0,0,java.util.HashMap,"For a HashMap, this means at least 2.400.00 pointers, in 32 bit architecture 9.600.000 Bytes."
7127876,2,0,0,java.util.HashMap,"Just for the structure of the HashMap, assuming no colisions (extra 4 bytes per collisions) and excluding the size of the data itself (keys and values)."
7127876,2,0,0,java.util.HashMap,"In relation to time, it depends of how much the equals() and hashCode() functions take, and also in the number of collisions in the HashMap (number of collisions == numer of execution of equals, more or less)."
7130121,1,0,1,java.util.HashMap,I hoped that the Java HashMap could be improved because I knew my data types for the keys and values and they were primitives and also my problem space.
7130121,1,0,1,java.util.HashMap,But I noticed that my own naive implementation was about 4x slower than the generic Java HashMap.
7130121,1,0,1,java.util.HashMap,Does anyone have any good suggestions to build a custom Long to Int hashtable in Java that significantly outperforms the Java HashMap?
7140865,2,1,2,java.util.HashMap,A quick note from @Bruno Reis:  Just note that this creates an anonymous inner class that inherits from HashMap.
7141104,2,0,2,java.util.HashMap,Using shuffle offers a far more uniform distribution of questions each time the application runs compared with relying on the order in which HashMap stores questions internally (which will most likely be the same for a given JVM implementation).
7143563,1,0,3,java.util.HashMap,"Type mismatch: cannot convert from HashMap< String,LinkedList< String>> to Iterators.Map< String,List< String>>  Hashmap implements the Map interface, and LinkedList implements the List interface."
7143643,2,0,0,java.util.HashMap,Please use the Interface for the HashMap: code.
7143647,2,0,3,java.util.HashMap,"Because a Map<String, List<String>> allows you to put an ArrayList<String> into it, but doing so would violate the type integrity of a HashMap<String, LinkedList<String>>."
7143647,2,0,3,java.util.HashMap,"Either declare your HashMap as a HashMap<String, List<String>> or your variable as a Map<String, LinkedList<String>> or Map<String, ?"
7143650,2,1,0,java.util.HashMap,"Fix this like the following: Map<String, List<String>> result = new HashMap<String, List<String>>(); Pay attention that I changed LinkedList to List in the right side of your assignment."
7143650,2,1,0,java.util.HashMap,"Really, when you create map of list you do not care about the implementation of List, therefore say HashMap<String, List<String>>."
7143668,2,0,3,java.util.HashMap,"As other posts have suggested , you have to use List as your type in the HashMap type parameters."
7145815,2,1,6,java.util.HashMap,...  Internally the manifest is represented by a HashMap which is an unordered data structure.
7175819,2,1,0,java.util.HashMap,"When i submit it to persist or update i read that list verifying which item has been changed and the new value of it... To get it easier i've created a HashMap passing the index and the value... so if the user change the value 1000 times, the value will be ever the last one..."
7155923,1,0,8,java.util.HashMap,Persist HashMap in ORMLite.
7155923,1,0,8,java.util.HashMap,"I need to persist this class, which has a HashMap."
7155923,1,0,8,java.util.HashMap,"Its my first time trying to persist a HashMap, also first time with ORMLite so any advice would be greatly appreciated!"
7162320,2,1,12,java.util.HashMap,Persisting a HashMap whose value is a List of Sets.
7159639,1,0,2,java.util.HashMap,It has a list of Action objects which are stored into a HashMap.
7162340,1,0,6,java.util.HashMap,Now I have a HashMap which holds a pattern as the key and a ValueMatcher as the value.
7162340,1,0,6,java.util.HashMap,"This aproach on the other hand requires me to have a HashMap with all the possibilities, a ValueMatcher interface and 5 implementations each with only 1 short ""matches"" methode."
7162340,1,0,6,java.util.HashMap,I really regret that we can't hold methods in a HashMap/pass them as arguments because then I'd only have 1 class with all the matching methodes and store them in a HashMap.
7169885,2,1,5,java.util.HashMap,"Other notes:  The best way to iterate over the keys/values of a map is by iterating over Map.entrySet() Always use the abstract type for your variables - eg Map<?, ?> myMap not the concrete implementation (ie HashMap<?, ?> myMap)  Here's the generic version of the sortMap method that will sort any suitable map based on the reverse order of the values: code."
7169765,2,0,4,java.util.HashMap,java.util.HashMap is unordered.
7170894,2,0,2,java.util.HashMap,You are probably best off hard coding a Hashtable or HashMap code.
25259730,2,0,2,java.util.HashMap,The HashMap: code.
7176385,1,0,0,java.util.HashMap,How to create query from HashMap?
7177311,1,0,1,java.util.HashMap,"The problem I have is the natural way of doing this, a HashMap from nodes to integers, will itself call the hash function on the nodes."
7177311,1,0,1,java.util.HashMap,"I thought I could do this by making HashMap, and casting the nodes to object, which would then invoke the hashCode method on objects, but this didn't work (inserts into the hash still call the node hash and equality functions."
7177446,2,0,1,java.util.HashMap,"I thought I could do this by making HashMap, and casting the nodes to object, which would then invoke the hashCode method on objects, but this didn't work  Indeed, since hashCode is virtual, and is overridden in your node class, so always the subclass implementation will be called, regardless of the static type of the reference you have."
7179752,1,0,0,java.util.HashMap,"Why doesn't the HashMap ""contain"" the keys that are internally changed only?"
7179752,1,0,0,java.util.HashMap,"In my program, I have a HashMap."
7179752,1,0,0,java.util.HashMap,"When I change the content of one of its keys, it is no longer remain as a member of the HashMap."
7181584,1,0,6,java.util.HashMap,"I have a class MyMap which extends java.util.HashMap, the following code works as a block of statements but I don't understand the use of the extra curly braces code."
7181611,2,1,10,java.util.HashMap,"creates an anonymous inner class, which is a subclass of HashMap."
7186808,1,0,7,java.util.HashMap,"In Java, is it safe to change a reference to a HashMap read concurrently."
7190738,2,0,0,java.util.HashMap,The real problem comes later when all your methods in your Java business code only accept HashMaps ;D However if you have a small application only I would consider to define interfaces (instead fo classes) and generate at runtime with the proxy API classes that implement those interfaces but use a HashMap instead of writing a normal class.
7194522,1,0,24,java.util.HashMap,"I need to copy all keys and values from one A HashMap onto another one B, but not to replace existing keys and values."
7197721,2,1,5,java.util.HashMap,"If that's the case, you can do this in O(n) time by using a standard HashMap."
7197721,2,1,5,java.util.HashMap,"In particular, your algorithm could work like this:  Construct a HashMap from String to Double."
7197721,2,1,5,java.util.HashMap,"For each element in the list:  If the named object doesn't exist in the HashMap, insert it with value equal to the price."
7197721,2,1,5,java.util.HashMap,"If the named object does exist in the HashMap, update the value by adding in the value associated with the current object."
7197721,2,1,5,java.util.HashMap,"Iterate across the HashMap and for each element, create a new MyObject from the key/value pair."
7197721,2,1,5,java.util.HashMap,"Finally, step 3 takes O(n) time again because you have to visit every element in the HashMap exactly once."
7203362,2,0,2,java.util.HashMap,"Since you must have duplicates (107 less than 109), you could implement radix sort using (say) an array of 107 8-bit counters, with a HashMap<Integer, Integer> to deal with the relatively few cases where the counters overflow."
7207537,2,1,5,java.util.HashMap,"Using a Map you could do something like this: Map <JCheckBox,Class<U>> uCheck = new HashMap<JCheckBox,Class<U>>(); // add your checkboxes and U-classes to the map code."
7213076,2,0,3,java.util.HashMap,"Maybe you could use a HashMap, code."
7213076,2,0,3,java.util.HashMap,"I've skipped the ""Value_"" since if you decide to use the HashMap, you wouldn't need a variable name as such, just the key."
7213419,2,1,2,java.util.HashMap,"How you implement the valueOf method is up to you - you could iterate through the EnumSet of all values trying to find a match, or create a HashMap from Integer to RPCPacketDataType, or potentially just an array (with validation)."
7214732,1,0,0,java.util.HashMap,How to make the java HashSet / HashMap work with any Object?
7216981,1,0,1,java.util.HashMap,"Thanks for your time, -mojavestorm Further explanation: Two Implementations and their limits: 1) I have a HashMap(Integer, Vector(Integer)) preMap that contains a GroupID as key and a Vector of userIDs."
7224153,2,0,3,java.util.HashMap,"In the following example, the compiler generates an unchecked conversion warning because the HashMap() constructor refers to the HashMap raw type, not the Map<String, List<String>> type: Map<String, List<String>> myMap = new HashMap(); // unchecked   conversion warning  source: http://download.oracle.com/javase/tutorial/java/generics/gentypeinference.html This remains the same in Java 7, however they tried to make it less repetitive by supporting diamond syntax."
12274787,2,0,2,java.util.HashMap,"As answered by ""Snicolas"", your problem is that the HashMap is not populated by the time its being used."
7227572,1,0,4,java.util.HashMap,Sorting HashMap.
7227572,1,0,4,java.util.HashMap,I have an ArrayList of HashMap.
7227572,1,0,4,java.util.HashMap,Each HashMap contains many key-value-pairs.
7227572,1,0,4,java.util.HashMap,I want to sort the ArrayList by the value of the key distance in the HashMap.
7227753,1,0,4,java.util.HashMap,How can I sort HashMap keys by their numerical value?
7227772,2,1,10,java.util.HashMap,A HashMap cannot be sorted.
7227783,2,0,0,java.util.HashMap,HashMap doesn't sort anything.
7232873,2,1,5,java.util.HashMap,"It's true that HashMap does this caching, but it was HashMap's author (Josh Bloch) who strongly suggested we not follow that precedent!"
7234598,1,0,2,java.util.HashMap,find key with highest value in HashMap using lambdaj (java).
7234598,1,0,2,java.util.HashMap,"I try to find the find key having the hightest value in a HashMap < String,Double > using lambdaj."
7235593,1,0,0,java.util.HashMap,"Java: HashMap claims it has key, but somehow hasn't."
7235593,1,0,0,java.util.HashMap,I have a HashMap mapping objects of my Context class to Integers.
7237519,1,0,2,java.util.HashMap,Retrieving Original HashMap from a SimpleAdapter/ListView on Item Press.
7237519,1,0,2,java.util.HashMap,"I have a SimpleAdapter that populates a ListView, but when the user presses an item I'd like to be able to get the original HashMap that was used to populate the row that was clicked."
7237968,2,1,17,java.util.HashMap,"In this particular case (assuming a Sun/Oracle JRE), a KeyIterator (an internal inner class of the HashMap class that is used by the HashSet) is used to iterate through the Collection."
7237968,2,1,17,java.util.HashMap,A particular characteristic of this Iterator is that it tracks the number of structural modifications performed on the Collection (the HashMap in this case) via it's Iterator.remove method.
7242827,1,0,0,java.util.HashMap,which is constructed as a HashMap.
7244100,1,0,5,java.util.HashMap,"For example: HashMap <String> <Integer> <Integer> <Integer> (what I want to do) but you can only use 2 parameters, as it seems: HashMap <String> <Integer>."
7244130,2,0,3,java.util.HashMap,"You should create an object to hold that data, and then store it like this: HashMap<String, MyObject>."
7244158,2,0,0,java.util.HashMap,"so new HashMap<String, Object>()"
7244211,2,0,0,java.util.HashMap,"You can use a HashMap< TypeOfYourKey, Object > to store arbitrary objects."
7252854,2,0,2,java.util.HashMap,"Hash table based Collections like HashSet and HashMap call hashcode, whereas sorted Collections like TreeSet and TreeMap call compareTo method in addition to equals."
7253256,2,0,3,java.util.HashMap,Prefer HashMap to Hashtable
7256066,2,1,2,java.util.HashMap,"3 objects will be hashed to the same bucket, but because all 3 are different this bucket will contain a chain of values (linked list for HashMap in Java) with the same hash code but not equal to each other."
7256030,2,0,1,java.util.HashMap,"So the HashMap is more inefficient, but its contract doesn't change."
7258827,1,0,3,java.util.HashMap,I'm working with a program that runs lengthy SQL queries and stores the processed results in a HashMap.
7258827,1,0,3,java.util.HashMap,"My speculation is that because these callables are creating their own copy of the data, I'm doubling memory usage when I join them into another large HashMap."
7258827,1,0,3,java.util.HashMap,"Could I improve memory usage by replacing the callables with runnables that instead of storing the data, write it to a concurrent HashMap?"
7259151,2,1,12,java.util.HashMap,"We really should have options around this for HashMap, HashSet etc...) While Comparator<T> may be okay in some situations, it doesn't provide the hashCode method which would be important for hash-based collections."
7262892,1,0,4,java.util.HashMap,Java best practices: Put/Get SubClass objects into HashMap that expects SuperClass objects.
7262892,1,0,4,java.util.HashMap,Let's say I instantiate a HashMap with SuperClass as value-type.
7263399,1,0,28,java.util.HashMap,"[2]: without it (normal strings) it is impossible, with it, this particular step remains the most computation intensive one EDIT: Due to the surprising interest in this post, here is some code to test it out: http://pastebin.com/4CD8ac69 And the results of interning a bit more than 1 million strings:  HashMap: 4 seconds String.intern(): 54 seconds  Due to avoid some warm-up / OS IO caching and stuff like this, the experiment was repeated by inverting the order of both benchmarks:  String.intern(): 69 seconds HashMap: 3 seconds  As you see, the difference is very noticeable, more than tenfolds."
7264373,1,0,2,java.util.HashMap,One of the recommendations here: ArrayList custom class as HashMap key failed to produce any better results.
7264390,2,0,4,java.util.HashMap,Those are the methods that HashMap uses to first narrow down the list of candidate keys very quickly (using the hash code) and then check them for equality (by calling equals).
7267701,1,0,2,java.util.HashMap,"One solution I've thought of is to populate a HashMap with the keys/values from the properties file, but then that would mean less elegant code in the form of: code."
7267701,1,0,2,java.util.HashMap,Where HM is the HashMap located within com.x.y.messages...
7267844,2,0,1,java.util.HashMap,i dont see why store data from Properties to HashMap code.
7267756,2,0,0,java.util.HashMap,See http://download.oracle.com/javase/6/docs/api/java/util/Map.html But in fact as Thomas pointed out above you don't need a new HashMap just code.
7267775,2,0,3,java.util.HashMap,It can't and thus you'd need to go for the HashMap approach.
7272512,1,0,1,java.util.HashMap,I'm getting a JSON Mapping exception when trying to construct a HashMap.
7275520,1,0,14,java.util.HashMap,Eclipse debugging HashMap: Logical Structure using Key and Value's toString() method.
10019962,2,0,36,java.util.HashMap,I just knocked up this example using HashMap.
8787594,2,0,2,java.util.HashMap,"MANIFEST.MF Entries Ordering: Note that the key-value pairs in the MANIFEST.MF file are represented as a java.util.HashMap which ""does not guarantee that the order will remain constant over time.""."
7275790,1,0,5,java.util.HashMap,"some objects.. so what are the advantages/disadvantages of internal storage ( http://developer.android.com/guide/topics/data/data-storage.html#filesInternal via getCacheDir()) and object cache (something like WeakHashMap or HashMap < String, SoftReference < Drawable > )?"
7279907,2,0,2,java.util.HashMap,"If you don't need thread safety, you can use HashMap instead."
7280013,2,0,0,java.util.HashMap,"And if you do not have thread-safety issue, go for HashMap for better performance."
7281056,2,1,4,java.util.HashMap,"This block of code executed outside any mutex, so several threads can run it at same time, so each of the threads (having same shortcode) got it's own lock, independent of each other (and only one of them will be stored in locks hashmap -- which one it's the question, since ordinary HashMap not designed for concurrent use -- you can't predict exactly which ""put"" will actualy takes effect in which order, you can even got exception or wrong behavior in this code, if current puts cause resize for example)."
7283369,2,0,1,java.util.HashMap,"You better use the Java HashMap object for that purpose http://download.oracle.com/javase/1,5.0/docs/api/java/util/HashMap.html"
21689050,2,0,2,java.util.HashMap,"I know, this has been asked and answered long ago, however if anyone is interested, here is my solution - custom set class backed by HashMap: http://pastebin.com/Qv6S91n9 You can easily implement all other Set methods."
7286807,1,0,1,java.util.HashMap,Parse a single Line of XML into a HashMap.
7286807,1,0,1,java.util.HashMap,I would like to extract the values into a HashMap so that: code.
7287949,1,0,3,java.util.HashMap,I'm trying to create a new HashMap for each document I have as input.
7288001,2,0,0,java.util.HashMap,"If you know/want to reference the name of the document, you could even use a HashMap of HashMaps."
7288022,2,0,0,java.util.HashMap,You need to put your hash maps into another (dynamic) container like ArrayList or other HashMap.
7294635,2,1,83,java.util.HashMap,"Searching: O(n)  Stack:  Push: O(1) Pop: O(1) Top: O(1) Search (Something like lookup, as a special operation): O(n) (I guess so)  Queue/Deque/Circular Queue:  Insert: O(1) Remove: O(1) Size: O(1)  Binary Search Tree:  Insert, delete and search: Average case: O(log n), Worst Case: O(n)  Red-Black Tree:  Insert, delete and search: Average case: O(log n), Worst Case: O(log n)  Heap/PriorityQueue (min/max):  Find Min/Find Max: O(1) Insert: O(log n) Delete Min/Delete Max: O(log n) Extract Min/Extract Max: O(log n) Lookup, Delete (if at all provided): O(n), we will have to scan all the elements as they are not ordered like BST  HashMap/Hashtable/HashSet:  Insert/Delete: O(1) amortized Re-size/hash: O(n) Contains: O(1)"
7296768,2,1,4,java.util.HashMap,"Basically, Java collection classes like Vector, ArrayList, HashMap, etc."
7297937,1,0,9,java.util.HashMap,I have a HashMap: code.
7305913,1,0,3,java.util.HashMap,"private Map, V> multiMap= new HashMap,V>();."
7305913,1,0,3,java.util.HashMap,"The complier says that it Type mismatch: cannot convert from HashMap<ArrayList<K>,V> to Map<List<K>,V>."
7305941,2,1,14,java.util.HashMap,"The reason is that Java Generics do not have contra-/covariance (HashMap<List> is not a supertype of HashMap<ArrayList>, although List of course is a supertype of ArrayList)."
7307520,1,0,1,java.util.HashMap,"I can't execute the tags thing( each value of the value set has to have a tag of itself) with using  Map<K, TreeSet<V>> multiMap= new HashMap<K,TreeSet<V>>() and I don't need Map<K,HashMap<V,T>> tags = new HashMap<K,HashMap<V,T>>(); in order to use multimap."
7309763,2,1,6,java.util.HashMap,"BTW: All ArrayList objects are the same size, All LinkedList objects are the same size all HashMap objects are the same size etc."
7333845,2,0,18,java.util.HashMap,The answer partly depends on whether they are talking about a classic hashtable implementation (like HashTable / HashMap in Java) or something more sophisticated.
7321627,1,0,0,java.util.HashMap,I'm trying to create my own version of HashMap with some utility methods.
7321671,2,0,3,java.util.HashMap,But it's almost always a bad idea to extend a HashMap.
7324850,1,0,2,java.util.HashMap,How to avoid items being re-ordered when put into java HashMap.
7324888,2,0,5,java.util.HashMap,"A HashMap in java is not sorted http://download.oracle.com/javase/1,5.0/docs/api/java/util/HashMap.html."
7324888,2,0,5,java.util.HashMap,If you want predictable iteration order use a LinkedHashMap instead: http://download.oracle.com/javase/1.4.2/docs/api/java/util/LinkedHashMap.html Heres a good discussion on the difference: How is the implementation of LinkedHashMap different from HashMap?
7328590,1,0,2,java.util.HashMap,Is it better to put these on a HashMap like: code.
7328672,2,0,6,java.util.HashMap,"Intuitive If you use a HashMap, anyone who needs to access any of the fields will have to know the field names in advance."
7328672,2,0,6,java.util.HashMap,HashMap objects are better suited to key/value pairs where the keys are not known at compile time.
7334479,1,0,4,java.util.HashMap,"PriorityQueue works great for the ""constantly sorted"" requirement, and HashMap works great for the fast retrieval by key, but I need both in the same list."
7334515,2,0,2,java.util.HashMap,"Since you're already using HashMap, that implies that you have unique keys."
7339273,1,0,8,java.util.HashMap,In the above example the HashMap is a list of attributes where as the key is the attribute name and the value should be the type of the attribute (Integer or String).
7339441,2,0,6,java.util.HashMap,"How about subclass HashMap and override the put method, throwing an exception when an unsupported type is used?"
7339458,2,0,2,java.util.HashMap,Subclass the HashMap and enforce the type limits in said subclass when adding the elements.
7343160,2,0,5,java.util.HashMap,"This is worse if the attributes of E1 and E2 possess different values; the equals implementation would prevent two significantly different entities from being added to a Set, and the hashCode implementation will give you a O(n) lookup time when entities are looked up from a HashMap using the primary key."
7341418,1,0,7,java.util.HashMap,I tried separate ArrayLists for the Integers and a HashMap... but a no go on those.
7341724,2,1,13,java.util.HashMap,NB: might be better to use a HashMap instead of an inner class for the opts.
7342799,2,0,1,java.util.HashMap,"Replace HashMap with ConcurrentHashMap, your impl is fine."
7342292,2,1,5,java.util.HashMap,getStuff returns some internal object that is used by the HashMap implementation during resizing.
7342645,1,0,3,java.util.HashMap,I'm trying to use XStream to (de)serialize a HashMap of some of my own classes in an Android app.
7345468,2,0,2,java.util.HashMap,The map containing your locks won't incur a large performance problem if you use a HashMap because Strings are immutable and the hash code of the String will likely only have to be calculated once.
7345241,1,0,24,java.util.HashMap,builder for HashMap.
7345751,2,1,36,java.util.HashMap,"And if you need a mutable map, you can just feed that to the HashMap constructor."
7347844,2,0,2,java.util.HashMap,HashMap is mutable; there's no need for a builder.
7350595,2,1,1,java.util.HashMap,"So the code for anyone interested would look like this: Map, Annotation> annotations = new HashMap, Annotation>(4); code."
7350044,2,0,7,java.util.HashMap,"Some options / ideas:  Leave it as it is - it's not fundamentally broken, and is reasonably clear and simple to maintain Use a switch statement (if you are using Java 7) - not sure if this gains you much though Create a HashMap of String to FunctionObjects where the function objects implement the required behaviour as a method."
7350831,2,0,6,java.util.HashMap,"It is still kinda messy (big enum with 100+ entries, even it all it does is dispatching), but may avoid the HashMap initialization code (100+ puts is also messy in my opinion)."
7350831,2,0,6,java.util.HashMap,"Each approach has it's trade offs:  HashMap = Fast + Kinda messy (""set-up"" code with hundred of puts) Enum = Fast + Kinda messy 2 (huge file)."
7350831,2,0,6,java.util.HashMap,"Reflection = Slower + runtime error prone, but provides clean separation without resorting to clunky big HashMap."
7350216,1,0,0,java.util.HashMap,Java:HashMap storing same value as key and value.?
7350216,1,0,0,java.util.HashMap,I am getting this strange output in HashMap.
7350216,1,0,0,java.util.HashMap,"My HashMap<String,String> will store only string as key and value pair."
7350216,1,0,0,java.util.HashMap,"Hence after ever iteration I am getting value,value in HashMap whereas it should be key,value."
7351083,1,0,3,java.util.HashMap,So I thought of using HashMap.
7351192,2,0,0,java.util.HashMap,"You could use HashMap<Integer,Set<T>> or HashMap<Integer,List<T>>, where T is the type of value_1, value_2 etc."
7361809,1,0,0,java.util.HashMap,JAVA:-Converting Object Stored in HashMap to sql Date Type.
7363090,1,0,2,java.util.HashMap,"There are some collection objects (HashSet, ArrayList, HashMap) in these cached objects."
7365787,1,0,0,java.util.HashMap,"Since the Objects are different types does this matter, or should I only care if I expect to mix them as keys in the same HashMap?"
7365881,2,0,1,java.util.HashMap,"HashMap and the like don't look at the actual runtime class - and indeed there isn't a standard way to tell whether two objects of different classes can be equal (for instance, Lists with the same values in the same order generated by ArrayList and Arrays.asList should compare equal)."
7365881,2,0,1,java.util.HashMap,"For HashMap, I'm guessing the hit wont be too bad, but could be worse for, say, a probing implementation where there is a significant gain for getting a hit on first inspection."
7377141,2,0,4,java.util.HashMap,My guess is it is reading a HashMap that was previously written to the file using corresponding Out/Write methods.
7377150,2,0,6,java.util.HashMap,"this code will  create InputStream from fileName (String, absolute path to file) create ObjectInputStream, to read objects saved in that file will create HashMap object, saved to Map map variable  So that mean, in file, there is a object of type HashMap which will be casted to Map with this code"
7377156,1,0,4,java.util.HashMap,I have a piece of code where different threads manipulating the HashMap.
7380866,1,0,0,java.util.HashMap,Generic HashMap.
7381856,1,0,2,java.util.HashMap,synchronizing access to HashMap from outside.
7381856,1,0,2,java.util.HashMap,I have a private HashMap and I am using Collections.synchronizedMap() on it.
7381891,2,1,3,java.util.HashMap,I would strongly recommend using the ConcurrentHashMap if you really need concurrent access to a HashMap.
7384948,2,1,64,java.util.HashMap,If you want object3 to be at position3 all the time I'd suggest you use a HashMap with position as key and object as a value.
7385204,2,0,0,java.util.HashMap,But just another alternative solution is to use a HashMap and use the key (Integer) to store positions.
7388874,2,0,2,java.util.HashMap,"If you create a HashMap you can also having the level of difficulty to be the key of the map will make it easier for you to display cards in a progressive order, using a structure like: HashMap < Integer difficultyLvl, ArrayList < Cards > cardsOnSameDifficultyLvl > Using ArrayList and HashMap will make the application easier add/delete/edit cards at runtime and the structures can be populated from a text file, or even from the directory/filename structure."
19255985,2,0,1,java.util.HashMap,In the junit-test i re-implemented the interface using HashMap.
19255985,2,0,1,java.util.HashMap,"I could have used HashMap<Integer, E> in the android-businesslayer instead of SparseArray"
7392189,2,0,3,java.util.HashMap,"If you don't need to worry about memory constraints, you can solve this problem quite easily by using a HashMap that maps from array elements to their frequencies."
7392189,2,0,3,java.util.HashMap,"For each element, if that element is already in the HashMap, you update the key/value pair in the HashMap to increment the frequency of that element."
7392189,2,0,3,java.util.HashMap,"Once you've finished populating the HashMap, you can then iterate across the map and copy over all elements that have frequency at most k into a new ArrayList."
7393253,2,0,1,java.util.HashMap,"Each HashMap$Entry takes 24 bytes as well, and the array for the HashMap takes 4 bytes."
7396904,2,0,0,java.util.HashMap,"Note also that the Map type is an interface and the HashMap type is a concrete class, so typically you declare variables to be of an interface type and the contained instances to be specific classes."
7400805,2,1,1,java.util.HashMap,"Yes, looks like it, because according to Java semantics, there isn't anything that ""cannot be stored in an array of type java.lang.Object[]"" - except primitives, but those can't be values in a HashMap"
7401603,2,0,2,java.util.HashMap,"Yes Hashtable is thread safe, If a thread safe is not needed in your application then go through HashMap, In case, If a thread-safe implementation is desired,then it is recommended to use ConcurrentHashMap in place of Hashtable."
19843765,2,0,0,java.util.HashMap,"*If a thread-safe implementation is not needed, it is recommended to use HashMap* in place of Hashtable."
7401732,1,0,0,java.util.HashMap,How to add more than one Objects of same type with same Key inside a HashMap.
7402285,2,0,0,java.util.HashMap,"Map map = new HashMap() Then when u set an ordinary object without multiple value set for the key and value as any valueObject map.put(""key"", valueObject) when you want to add more than one, you can check for exiting key map.containsKey(""key"") and then add it to an arraylist and add remaining values into this list map.put(""key"", valueObjectList)."
7402377,2,1,1,java.util.HashMap,As Map is an interface take a HashMap class for the moment.
7405557,1,0,2,java.util.HashMap,Our implementation of this Factory uses a HashMap to maintain the relationship between the String instance and a so called ActionInstantiator that will provides the concrete Action instance.
7408318,2,0,0,java.util.HashMap,"HashMap first locates a hash bucket according to the hash code, but then looks through each object it finds there (using equals) to find an object semantically equivalent to the one you actually wanted."
7408389,2,1,6,java.util.HashMap,"To accomplish this, you could make a copy of the map, localContacts = new HashMap<>(contactList) and remove all mappings where the TelephoneNumber starts with an area code other than your local area code."
7410257,1,0,2,java.util.HashMap,Constraint Specific Key - convention for HashMap - Java.
7410257,1,0,2,java.util.HashMap,"Simple question, yet I couldn't figure out the answer, Is it possible to constraint key convention for my application's HashMap?"
7410257,1,0,2,java.util.HashMap,"Thank you for any kind of help  What I can do so far : I might check by an if statement while adding key and value into   HashMap, lets say in setLocationList(String key, Place place);."
7411744,1,0,2,java.util.HashMap,Should I put them in a HashMap or something?
7411861,2,1,5,java.util.HashMap,Should I put them in a HashMap or something?
7412597,1,0,2,java.util.HashMap,"Here the key to my HashMap is time in seconds as string, ie I am adding value to hashmap like this code."
7414920,2,0,0,java.util.HashMap,HashMap uses key.hashValue() to sort the values.
7415472,2,0,0,java.util.HashMap,It would seem that you want the order of the keys of a HashMap to be the same as your sorted list of keys.
7415472,2,0,0,java.util.HashMap,"The closest you will get is to create a LinkedHashMap, and populate it by inserting entries from the old HashMap in the order of the sorted keys."
7415472,2,0,0,java.util.HashMap,"In that case, you simply need to extract the HashMap's keys into an array and sort it."
7414975,2,0,0,java.util.HashMap,A HashMap isn't sorted at all.
7414975,2,0,0,java.util.HashMap,"You can get the values(), as a Collection, and you can sort that any way you like, but it doesn't sort the HashMap itself."
7414975,2,0,0,java.util.HashMap,"It isn't defined to do anything differently, especially as you haven't sorted the HashMap at all."
7415366,1,0,1,java.util.HashMap,HashMap.keySet().toArray() doesn't help as the entired HashMap are not sorted.
7415621,2,0,0,java.util.HashMap,"That code is not really sorting the HashMap - it is merely returning the keys, sorted by their value: So all you need is: code."
7416480,2,0,0,java.util.HashMap,"Map implementations (TreeMap, HashMap) provide private implementations of Map.Entry, which are not visible outside the class."
7416733,1,0,0,java.util.HashMap,Implementation of containsKey HashMap<> - Java.
7416733,1,0,0,java.util.HashMap,The whole purpose of using containsKey() is to check whether any given key is already in HashMap or not?
7416733,1,0,0,java.util.HashMap,"Potential Solution:  One solution could be get a unique data from that object1(oldKey) and   check with object2(new key), If they are same than don't use it in   HashMap."
7416782,2,1,3,java.util.HashMap,So any class where these two methods are implemented properly will work correctly as a key in a HashMap.
7416825,2,0,2,java.util.HashMap,HashMap.containsKey() methods finds if whether the key's hashCode() exists and not by equality comparison.
7416825,2,0,2,java.util.HashMap,This is implemented in HashMap.getEntry() method: code.
7418795,2,0,1,java.util.HashMap,FunctionalJava provides one: http://functionaljava.googlecode.com/svn/artifacts/3.0/javadoc/fj/data/HashMap.html
7438747,2,0,0,java.util.HashMap,"It was actually because, almost directly after the DB was created, I was using a null HashMap to insert some values into it instead of populating the HashMap with the return of my method (which actually worked.."
7430811,1,0,1,java.util.HashMap,"I am loading some Classes from a location (using my own Classloader) and my Application users can add their jar files to this location and I will load all the classes present in those jar files.It is like some runtime plugin Classes of a particular type.Then I keep these Class literal objects in a HashMap (which is a field of a particular class) and create instances from there whenever required.If some class literal is removed from this HashMap,then no-one should be able to a create an instance of that class-literal, like the class should get unloaded for my users who are adding classes."
7436765,1,0,4,java.util.HashMap,"My current approach is to use a HashMap<Object, WeakReference<Object>>."
7438751,1,0,1,java.util.HashMap,Extracting Metadata using Apache Tika and Storing into HashMap.
7438751,1,0,1,java.util.HashMap,I am trying to extract metadata using apache tika and then putting into HashMap..
7448843,2,1,2,java.util.HashMap,in HashMap.hash(int).
7450214,2,1,5,java.util.HashMap,HashSet is a wrapper for HashMap which in turn use an array.
7450214,2,1,5,java.util.HashMap,HashMap is a hash table but not the Hashtable class.
21402997,2,0,0,java.util.HashMap,"(The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)"
7457137,2,1,5,java.util.HashMap,You can use plain old HashMap.
7460048,2,1,4,java.util.HashMap,"Otherwise, I think your best bet is to probably to create a HashMap<String, ApplicationInfo> mapping the name to package."
7460053,2,0,0,java.util.HashMap,"Why don't you use a HashMap< String, ApplicationInfo > instead, and index it by packageName?"
7463245,1,0,1,java.util.HashMap,Like for a object to be inserted into a HashMap the object should implement the equals() and the hashcode() method(not necessarily).
7466112,2,0,0,java.util.HashMap,Here is some details: Extends from HashMap.
7466112,2,0,0,java.util.HashMap,"In HashMap, each entry has a key and value, that is basic."
7466112,2,0,0,java.util.HashMap,So here is what you got: A map that has the same speed with HashMap when retrieving an entry by a key.
7466236,2,0,3,java.util.HashMap,"Just use an ordinary HashMap<String, Long>."
7495640,2,0,0,java.util.HashMap,"Regarding the transient variable, best way to understand as if why do we declare transient variable and later on serialize them in writeobject method is to check/analyze/debug readobject/writeobject methods of LinkedList/HashMap/etc classes."
7469306,1,0,1,java.util.HashMap,A HashMap?
7475323,1,0,1,java.util.HashMap,Sort Values in HashMap.
7475547,1,0,0,java.util.HashMap,"The more I use a Java HashMap, the more the performance drops - even with stable size."
7475547,1,0,0,java.util.HashMap,I use a Java HashMap  for this.
7475658,2,0,1,java.util.HashMap,Here are some links: Java HashMap performance optimization / alternative http://www.ibm.com/developerworks/java/library/j-jtp05273/index.html http://www.javamex.com/tutorials/collections/hash_function_guidelines.shtml Bad idea to use String key in HashMap?
7477612,2,0,5,java.util.HashMap,"One example is the non-final (and package-private) method HashMap#init(), an empty method which is in place for the exact purpose of being overriden by subclasses: code."
7477612,2,0,5,java.util.HashMap,"(from the HashMap source) I don't have any examples of how it's used by subclasses - if anyone does, feel free to edit my answer."
7477612,2,0,5,java.util.HashMap,"I do notice that each HashMap constructor takes care to call init() last, but this is of course still before the subclass constructor."
7477685,2,0,3,java.util.HashMap,"Yes, it's done in the JDK (like the HashMap code) with special ""init()"" methods that imply initialization of all subclass code; but, I would offer that the following pattern of calls is much cleaner and permits more flexibility."
7479030,2,0,0,java.util.HashMap,"Seriously, just use a HashMap!"
7479715,1,0,1,java.util.HashMap,"I want to get an profiling output like this count callee caller time ,  like this in profiling output 1 java.util.LinkedHashMap.init()V java.util.HashMap."
7481549,2,0,0,java.util.HashMap,It returns a hashCode for an object which is used in Hashing Based DataStructure (For example :  HashMap) See Also  API Doc
7481592,2,0,0,java.util.HashMap,"Also, it's generally used in Hashed classes/collections like, HashMap, HashSet, etc."
7483357,2,0,1,java.util.HashMap,"So, maintain a HashMap<StateInput, State> trans and do trans.put(StateInput(q0, 1), q1) for the example you gave, where code."
7488144,2,1,11,java.util.HashMap,Don't use Arrays as keys in a HashMap / HashSet!
7488152,2,0,3,java.util.HashMap,To implement that extend HashMap and then use Collections.newSetFromMap(map)
7488622,1,0,1,java.util.HashMap,package javasampleapps; import java.util.ArrayList; import java.util.Calendar; import java.util.Date; import java.util.GregorianCalendar; import java.util.HashMap; import java.util.List; import java.util.Map; code.
7490898,1,0,1,java.util.HashMap,Maybe saving all session in a HashMap and access it statically?
7496462,1,0,0,java.util.HashMap,What types can we assign to K in HashMap?
7496462,1,0,0,java.util.HashMap,"What types can we assign to K in HashMap<K,V>?"
7496638,2,0,1,java.util.HashMap,"If you get an Object from the HashMap, it is passed to you as a reference and thus any call to its methods will affect the object contained in the Map."
7498751,1,0,8,java.util.HashMap,I have a HashMap defined like this... code.
7498751,1,0,8,java.util.HashMap,"For some more information, I'm working with a binary search tree of ""people"", storing the unique names and frequencies in a HashMap."
7498751,1,0,8,java.util.HashMap,"What I want to do is to print the most common last names, and someone told me to use HashMap as I wanted to store a String together with an Integer."
7498822,2,0,9,java.util.HashMap,"If you have to use a HashMap, then the simplest way is probabably just to loop through the Map looking for the maximum code."
7498832,2,0,1,java.util.HashMap,I would also use a HashMap to perform the lookups in the other direction as well.
7504519,1,0,1,java.util.HashMap,problem getting value from HashMap.
7504519,1,0,1,java.util.HashMap,Hi all I'm using a HashMap to hold one of my object with a string key.
7505472,2,0,2,java.util.HashMap,I would use a HashMap with the country code as the key and the count as the value.
7505475,2,1,5,java.util.HashMap,You might try a HashMap.
7505475,2,1,5,java.util.HashMap,"With a HashMap, you can use the country code as the key, and the count of how many times each appears as the value stored in that key."
7505898,2,0,0,java.util.HashMap,To complete the answer with something other than HashMap.
7506818,1,0,3,java.util.HashMap,"I have a jsp page that receives a HashMap object of this type: Map<Long, Map<String, Object>>."
7506818,1,0,3,java.util.HashMap,"But this throws ""Property 'response' not found on type java.util.HashMap..... Would someone please tell me what I am doing wrong?"
7507121,1,0,20,java.util.HashMap,I want to get over this issue by closing the resultset after constructing a HashMap out of it and close the result set after that.
7507121,1,0,20,java.util.HashMap,I have read on how to iterate through the Hashmap efficiently but i want to know if this HashMap technique is efficient if is there any other efficient way of doing this ??
7507121,1,0,20,java.util.HashMap,If HashMap is what i am looking for finally How do I construct the HashMap and use it to do tasks.
7507383,2,0,4,java.util.HashMap,"First, you should never return a HashMap, which is a specific implementation."
7512718,2,0,0,java.util.HashMap,"A List of List<Integer> will probably do, unless you need to put/get by key, in which case you need a HashMap with a composite key, that holds two integers."
7512490,2,0,0,java.util.HashMap,You can use HashMap which is based on key value pair.
7513224,2,0,1,java.util.HashMap,For example HashMap or TreeMap?
7519339,1,0,42,java.util.HashMap,HashMap to return default value for non-found keys?
7519339,1,0,42,java.util.HashMap,Is it possible to have a HashMap return a default value for all keys that are not found in the set?
7519422,2,1,40,java.util.HashMap,There's no Map implementation that does this exactly but it would be trivial to implement your own by extending HashMap: code.
13156033,2,0,8,java.util.HashMap,You can simply create a new class that inherits HashMap and add getDefault method.
7520454,2,0,1,java.util.HashMap,"You are using a ConcurrentHashMap, HashMap lookups have computation complexity of O(1) which means irrespective of the size of the data, these calls will return in constant time."
7525135,2,0,0,java.util.HashMap,"In addition to Bohemian's solution, you might want to protect the original put method from HashMap like this: code."
7524570,2,0,2,java.util.HashMap,You could use a class the extends HashMap and provides this special functionality: code.
7532083,2,0,3,java.util.HashMap,I'd probably make a swap(...) method for this and use a HashMap for the swap.
7534619,2,0,3,java.util.HashMap,"Unfortunately, JAXB is not able to directly serialize a Map or HashMap instance directly."
7534671,2,1,5,java.util.HashMap,"Hashtable is synchronized, if you do not need this then using HashMap is the common replacement."
7541357,2,0,1,java.util.HashMap,"EDIT As several people noted, HashMap is a more modern and better alternative."
7542979,1,0,0,java.util.HashMap,HashMap with int array (int[]) as value returns null on get?
7542979,1,0,0,java.util.HashMap,I know its creating the HashMap correctly but when trying to return the int array for a key I cant seem to get.
7544691,1,0,3,java.util.HashMap,Best way to initialize a HashMap.
7544691,1,0,3,java.util.HashMap,"I started to think about it, and as far as I know a HashMap is implemented under the hood via a hash table."
7544711,2,0,5,java.util.HashMap,Depends on how much you're going to store in the HashMap and how your code will use it afterward.
7544711,2,0,5,java.util.HashMap,Profile your program to see whether it's spending too much time in HashMap.put.
7544755,2,0,4,java.util.HashMap,"The nice thing about Java is that it is open-source, so you can pull up the source code, which answers a number of questions:  No, there is no relationship between HashMap and HashTable."
7544755,2,0,4,java.util.HashMap,"HashMap derives from AbstractMap, and does not internally use a HashTable for managing data."
7549640,1,0,4,java.util.HashMap,Reversing a HashMap from Map to Map>.
7554106,1,0,0,java.util.HashMap,HashMap absolute capacity.
7554106,1,0,0,java.util.HashMap,I 've been doing some performance checks with one HashMap object in my code and discovered that it slows down adding objects inside at around 2000-2400 objects.
7554173,2,0,4,java.util.HashMap,HashMap can support many elements if the hashCode() algorithm is good.
7554302,2,1,5,java.util.HashMap,The standard implementation of HashMap is limited to around 750 million entries (depending on how you use it e.g.
7554302,2,1,5,java.util.HashMap,"However, unless the HashMap is synchronized it will not block."
7554302,2,1,5,java.util.HashMap,"Even if this were the case, I would expect it to have on a growing of the HashMap with a default load factor this would be 3072 (i.e. 4096*0.75) rather than the value you see."
7555371,1,0,4,java.util.HashMap,"I have found a leak (elements added to HashMap, never to be cleansed, at the time of core dump 1,4 M elements)."
7556357,1,0,9,java.util.HashMap,Also why does HashMap allow null keys?
12949784,2,0,1,java.util.HashMap,"I will let you know how the hashmap stores the objects internally: HashMap stores the values through put(key,value) and gets the values thorugh get(key)."
7557157,2,0,0,java.util.HashMap,"HashTable also came before HashMap, so naturally it would be less advanced."
7556403,2,0,4,java.util.HashMap,"Perhaps they saw the need for a null key, and more importantly - null values, and added it in the HashMap implementation."
7556445,2,1,20,java.util.HashMap,"HashMap is newer, and has more advanced capabilities, which are basically just an improvement on the Hashtable functionality."
7556445,2,1,20,java.util.HashMap,"As such, when HashMap was created, it was specifically designed to handle null values as keys and handles them as a special case."
7561986,2,0,0,java.util.HashMap,The simplest way is to set the initialCapacity of the HashMap to a low value and start inserting elements.
7561986,2,0,0,java.util.HashMap,"From what I can see though, there's no way with the default HashMap to get it to tell you if there's a collision."
7565137,1,0,1,java.util.HashMap,Some observations :  Its an intermittent issue  JDK 1.6 CentOS 5.3  As I understand this error is intermittent I suspect it occurs whenever the HashSet (hence underlying HashMap) needs to resize itself.
7565166,2,0,1,java.util.HashMap,"HashSet and HashMap aren't designed to be thread-safe - if you're going to access your set from multiple threads, you should use synchronization to prevent concurrent access."
7565341,1,0,3,java.util.HashMap,"Java HashMap not finding key, but it should."
7565341,1,0,3,java.util.HashMap,"I use a service to populate a HashMap<DomainObject,Boolean> coming from my database (JPA driven) which is in turn returned to my view, via an EJB remote method call (using Apache Wicket)."
7565341,1,0,3,java.util.HashMap,"Assuming HashMap<DomainObject, Boolean> map and DomainObject do are the two variables interesting I have the following results in the debugger map.keySet(); gives me an object corresponding to do (even the @whatever simili-reference is identical), hashcode() on both objects returns similar value and equals() between the two returns true map.containsKey(do); returns false map.get(do); returns null, weird because my key seems to be in the map."
7565341,1,0,3,java.util.HashMap,"The only workaround I found is to recreate a new map on top of the existing one new HashMap(map), in this new map, I have no problem at all looking up an object by its key."
7565595,2,0,0,java.util.HashMap,"To see what's happening, you could (temporarily) use a more verbose implementation of HashMap... Maybe something like this: code."
7565695,2,1,4,java.util.HashMap,[This basically expands on Jesper's answer but the details may help you] Since recreating the map using new HashMap(map) is able to find the element I am suspecting that the hashCode() of the DomainObject changed after adding it to the Map.
7567675,2,0,1,java.util.HashMap,Imagine if equals was overriden and you put it in a HashMap and then you change the value.
7568352,2,0,0,java.util.HashMap,i.e. for mutable keys a HashMap is the same as using an IdentityMap.
7567754,1,0,4,java.util.HashMap,Now obviously using a standard POJO HashMap we're going to run out of memory and the JVM will crash.
7568120,1,0,1,java.util.HashMap,"I need to pass HashMap<String,String> ,Map Please help me invoke a groovy method with parameters Error: Exception in thread ""main"" groovy.lang.MissingPropertyException: No such property: userparams for class: [Ljava.lang.Object; Update code."
7569506,2,0,0,java.util.HashMap,This problem might best be solved with a different data structure such as a HashMap or SortedSet.
7569506,2,0,0,java.util.HashMap,"In order to use a HashMap, you would need to define a class that can produce a hash code for the dev and inst string pairs."
7569506,2,0,0,java.util.HashMap,"You would then use HashMap<DevAndInstPair, PanelData> as the map type."
7569506,2,0,0,java.util.HashMap,"A SortedSet is somewhat trickier to use than a HashMap, but I personally think that it is the more elegant solution to this problem."
7571331,1,0,0,java.util.HashMap,I am trying to load a 12mb txt file into memory as a HashMap to make it available for the application to use it but I am getting an OutOfMemoryError code.
7571558,2,0,2,java.util.HashMap,"A HashMap in the application had an item added to it, and in doing so hit its limit for the current array backing."
7575301,1,0,0,java.util.HashMap,"The Map will be constructed with = new HashMap(, )."
7576065,1,0,1,java.util.HashMap,I want to store some class fields values in a HashMap then write it to a file (the path is passed as an argument) and then restore HashMap and fetch needed info.
7585622,1,0,0,java.util.HashMap,"I mean that not normal, because when I deploy this version on my localhost, if the form uploads no file the method getUploadedBlobs returns an empty HashMap."
7585622,1,0,0,java.util.HashMap,"However, when I deploy on google servers, if the form uploads no file, the method getUploadedBlobs seems  to return a HashMap with wrong data."
7589539,2,0,0,java.util.HashMap,"I suggest you to use ""HashMap"" since it can define types for both keys and values code."
7594818,2,0,0,java.util.HashMap,I would use a HashMap or a Hashtable as tskzzy suggested.
7594717,2,1,13,java.util.HashMap,"Use a HashMap<String,Integer> Create the HashMap like so code."
7596430,1,0,4,java.util.HashMap,"In my project, I have a class called Teams, which contains a HashMap(Integer, Team) of Team objects."
7596430,1,0,4,java.util.HashMap,"Now, I wonder what the best approach would be to know what Team a Player is assigned to: -> Store the ID of the team in Player (private int team), this ID is then used to get the Team from the HashMap in Teams."
7596546,2,0,0,java.util.HashMap,"The potential danger with using the object reference as the key in a HashMap (or any Map) is that it can, if done improperly, become a memory leak."
7596566,2,0,0,java.util.HashMap,"If you store the Id , what will happen if the HashMap is updated along ?"
7598706,1,0,1,java.util.HashMap,EDIT: A HashMap will not work as the order of the items in the list is also deemed to be important.
7598706,1,0,1,java.util.HashMap,My understanding is that a HashMap is not practical when the order of the list matters in some way.
7598804,2,0,2,java.util.HashMap,That will create a HashMap holding a list for each object so you can have multiple objects pointed to by one tag.
7602430,2,0,0,java.util.HashMap,"Where the class may be used as a key in a HashMap (or stored in a HashSet), equals() must be constant for the time that it's in the map."
7602430,2,0,0,java.util.HashMap,"This suggests that, in order to avoid a lot of analysis and/or bugs, classes used as HashMap keys should restrict equals() to  effectively immutable fields - including associations."
7602665,1,0,7,java.util.HashMap,Store an array in HashMap.
7602665,1,0,7,java.util.HashMap,"How can i store an array of integers values in a HashMap, after that i write this HashMap in a txt file  but this isn't important at the moment."
7602761,2,0,0,java.util.HashMap,You can store objects in a HashMap.
7602761,2,0,0,java.util.HashMap,"HashMap<String, Object> map = new HashMap<String, Object>(); You'll just need to cast it back out correctly."
7605090,1,0,2,java.util.HashMap,Each element is a HashMap lookup for my values.
7605143,2,1,4,java.util.HashMap,It looks like you're using a HashMap where you should design your own class: code.
7605613,1,0,0,java.util.HashMap,One implementation of this interface could have for example a HashMap as a repository of all the defined Attributes.
7605613,1,0,0,java.util.HashMap,"The question is, can we using reflection or any other thing build new instances of subclasses of attributes only knowing the id of that subclasses, so implement the interface defined above, without the need to define the HashMap an add each new defined subclass to the HashMap?"
7606558,1,0,0,java.util.HashMap,Before I make a request to start the database and then I load into a HashMap information necessary to perform the verification if records exist before being added to the database in MySQL.
7606558,1,0,0,java.util.HashMap,"Also every time you add a record to the MySQL database that record tamibén add to HashMap, since one of the debugging process is duplicated."
7606653,2,1,1,java.util.HashMap,From what I understand you are inserting your records first into the HashMap to get rid of duplicates and they you copy it to the MySQL database.
7606653,2,1,1,java.util.HashMap,If that is the case you can try to use HugeCollections library and their HugeMap instead of simple HashMap
7607650,1,0,2,java.util.HashMap,Convert ArrayList fetched from HashMap to an Array.
7607650,1,0,2,java.util.HashMap,"When i stored my fields in HashMap , i did it like simple Objects  code."
7607650,1,0,2,java.util.HashMap,I access values from HashMap (look for the last lines) code.
7607708,2,0,0,java.util.HashMap,Your HashMap should really be a proper class that you wrote with the real properties to hold your different fields.
7608697,2,0,0,java.util.HashMap,In order to create a report with input parameters you have to pass them through a HashMap.
7608819,1,0,0,java.util.HashMap,"My target is to generate such json string: {""EndTime"": ""\/Date(1309737600000)\/""} I define a HashMap to generate the string If I define the string value as ""\\/Date(1317375052044)\\/"" then the result is ""\\\\/Date(1317375052044)\\\\/""."
7610689,1,0,9,java.util.HashMap,Returning a list of wildcard matches from a HashMap in java.
7610689,1,0,9,java.util.HashMap,Is there any way I can get a list of these matches from my HashMap?
7617374,2,1,7,java.util.HashMap,"In Java, you want the Map interface, and probably the HashMap class as the implementation."
7617378,2,0,1,java.util.HashMap,"You want to use a Map, most likely a HashMap."
7617379,2,0,1,java.util.HashMap,I believe its an abstract class so you'll have to use one of its concrete subclasses like HashMap<?>
7617380,2,0,2,java.util.HashMap,You would use one of the Map implementations such as HashMap to do that.
7618050,1,0,1,java.util.HashMap,"I started to use a simple HashMap and iterating over it's entrySet mapping key strings in the JSONObject to value strings for the ContentValues object, but I'd like to account for the fact that some JSON properties are integers or booleans."
7618463,2,1,8,java.util.HashMap,References: List.addAll(Collection c);  HashMap.keySet()
7620486,2,1,2,java.util.HashMap,A better way is a Map like HashMap where you can store key-value pairs.
7624001,1,0,1,java.util.HashMap,"get the String [] and map to a Map = new HashMap ... (word, frequency) print everything."
7632240,2,1,33,java.util.HashMap,"A HashSet uses a HashMap internally, so it has the same maximum size as that  A HashMap uses an array which always has a size that is a power of two, so it can be at most 230 = 1073741824 elements big (since the next power of two is bigger than Integer.MAX_VALUE)."
7632240,2,1,33,java.util.HashMap,"However, when the HashMap stops resizing, then it will still allow you to add elements, exploiting the fact that each bucket is managed via a linked list."
7632240,2,1,33,java.util.HashMap,Therefore the only limit for elements in a HashMap/HashSet is memory.
7632240,2,1,33,java.util.HashMap,"Note that while HashMap, HashSet and LinkedList seem to support more than Integer.MAX_VALUE elements, none of those implement the size() method in this way (i.e. they simply let the internal size field overflow)."
7637828,1,0,0,java.util.HashMap,Getting ConcurrentModificationException while modifying a HashMap in a thread class.
7637828,1,0,0,java.util.HashMap,"Hi I am running a thread service, the job of this thread is to check the age of a list items in a  HashMap."
7637828,1,0,0,java.util.HashMap,"When an item is older than say 5 seconds, I will have to delete the item from the HashMap."
7637828,1,0,0,java.util.HashMap,"But when the code attempts to delete the item from the HashMap, I get a java.util.ConcurrentModificationException."
7637828,1,0,0,java.util.HashMap,I am populating the HashMap in the main() method in the original program.
7676085,2,1,0,java.util.HashMap,"I have found the solution for my question, instead of using HashMap, I am using ConcurrentHashMap."
7641911,1,0,5,java.util.HashMap,"Now, what I thought is pretty straightforward:  I create 2 HashMap: ref and cur."
7642115,2,0,2,java.util.HashMap,"Create a second implementation of the AnagramKey interface that uses a HashMap<Character, Integer> to represent the character counts."
7642115,2,0,2,java.util.HashMap,"The break-even density at which an int[] uses less space than a HashMap<Character, Integer> is asymptotically around 1 character in 15 across the range of characters in your count array."
7642115,2,0,2,java.util.HashMap,(Each entry in a HashMap with those key/value types occupies in the region of 15 32-bit words.)
7642115,2,0,2,java.util.HashMap,And that doesn't take account of the overheads of the HashMap node and the hash array node ...
7641942,2,0,3,java.util.HashMap,"Assuming that your HashMap is a mapping from (character) -> (number of occurrences in the string), you pretty much have it."
7641942,2,0,3,java.util.HashMap,"If you're not using any languages other than English, then a HashMap is overkill: you can simply use an array of 26 counts representing A..Z."
7641984,2,1,5,java.util.HashMap,"part is one of:  Make a HashMap of character counts Sorting the characters Making a 26-int array (the ultimate hash table solution, but only works for the Latin alphabet)  I ran them all with this: code."
7641984,2,1,5,java.util.HashMap,"The HashMap one could be significantly improved if:  There was a way to make a HashMap<char, int> There was a way to specify the default value of in a HashMap and a way to get-and-increment (so there would only be one lookup instead of 2)  But, these aren't in the standard library, so I'm ignoring them (just like most programmers using Java would)."
7641984,2,1,5,java.util.HashMap,"You need to consider the overhead and the size of n. In this case, n is fairly small, and the overhead of a HashMap is significant."
7646868,2,0,6,java.util.HashMap,Use a HashMap.
7646868,2,0,6,java.util.HashMap,"EDIT: you may want to wrap the HashMap, to make sure that every time an object is added or removed, the counter is modified appropriately."
7647482,2,1,1,java.util.HashMap,HashSet isn't really suited for keeping track of individual counts but HashMap is nearly perfect.
7647644,1,0,2,java.util.HashMap,"It says: Type mismatch: cannot convert from HashMap<String,List<f2>> to Map<String,List<?"
7648456,2,0,3,java.util.HashMap,"Use a HashMap<Integer, Integer> to store results that you have already computed, and look up values there before trying to recompute them."
7654257,1,0,1,java.util.HashMap,"The memory is accumulated in one instance of ""java.util.HashMap$HashMapEntry[]"" loaded by """"."
7654257,1,0,1,java.util.HashMap,"The histogram lists java.util.HashMap$HashMapEntry[], java.util.HashMap and java.util.HashMap$HashMapEntry as the three objects with the largest shallow heap."
7656771,1,0,1,java.util.HashMap,"If you look at HashMap, or HashSet, it uses array internally, and there is LinkedHashSet and map correspondingly to keep ordering."
7657772,2,0,2,java.util.HashMap,"newPerson would be a java hash map (java.util.HashMap<String,String>) and you would explicitly insert by using put"
7662335,2,0,0,java.util.HashMap,You can use a HashMap code.
7663585,1,0,1,java.util.HashMap,But I am having a hard time mapping a Set that uses a HashMap as the backing storage.
7698817,2,0,0,java.util.HashMap,"I found out in a message in the mybatis-user group that Mybatis will not actually do what I want (even if I get rid of the intermediary CustomSet, it does not look like Mybatis will be able to populate the hashmap the way I need it) so I have decided to go with what the OP in that topic is doing: Getting back a list and populating the HashMap myself."
7698817,2,0,0,java.util.HashMap,"This will allow me to get the objects through the mapping and with little amount of code, have the necessary HashMap populated."
7667097,1,0,1,java.util.HashMap,"I need to retrieve list values from a map of type Map<String,List<HashMap<String, Object>>> in JSP based on a condition."
7672953,2,0,1,java.util.HashMap,"You can improve this version, if you only concern with startWith instead of contains then you can distribute words in a HashMap and you will have narrowed search"
7676691,2,0,0,java.util.HashMap,Or you could create a HashMap and use the pattern as a key to the List objects if you need to know which pattern is where.
7678660,2,0,1,java.util.HashMap,"If you state that two objects are equal then their hashcodes must be identical, or else the HashMap holding them will be unable to cope."
7678229,2,0,0,java.util.HashMap,A couple of other options are:  Use a HashMap with large initialCapacity If your keyset is dense then you can use an int[].
7684842,2,0,1,java.util.HashMap,"As the javadoc explains:  This implementation spares its clients from the unspecified, generally   chaotic ordering provided by HashMap (and Hashtable), without   incurring the increased cost associated with TreeMap."
7684842,2,0,1,java.util.HashMap,"Meaning that you can iterate over your elements in the same order you entered them, but the basic operations have the same complexity as a normal HashMap, with a performance hit due to the linked list handling."
7684842,2,0,1,java.util.HashMap,You may picture this as an HashMap traversed by a double-linked list connecting the keys in the order they were inserted.
7684842,2,0,1,java.util.HashMap,"Also, be aware that a LinkedHashMap will take more memory than a simple HashMap."
7678195,2,0,0,java.util.HashMap,"If you just want a faster Map implementation, have you considered HashMap?"
7683973,2,0,1,java.util.HashMap,"for(HashMap<String, String> map : data){        ... deal with map...      }"
30831123,2,0,0,java.util.HashMap,If you require a generics or want more efficient use of space then consider SparseArray or even a Map like a HashMap may be appropriate for your purposes.
7688575,1,0,1,java.util.HashMap,"Both HashMap and Node are Serializable, so where is everything breaking down?"
7688575,1,0,1,java.util.HashMap,com.google.gwt.user.client.rpc.SerializationException: Type 'java.util.HashMap$Values' was not included in the set of types which can be serialized by this SerializationPolicy or its Class object could not be loaded.
7689432,2,0,0,java.util.HashMap,You can use a HashMap.
7694468,1,0,6,java.util.HashMap,"I've already implemented this for the likes of ArrayList, HashMap, ConcurrentHashMap, etc."
7695009,2,1,4,java.util.HashMap,"Please forget my following statement: Then if you are using a popular implementation HashMultiset, there is already a HashMap<E, AtomicInteger> working under the scene."
7695009,2,1,4,java.util.HashMap,"That is, when the HashMultiset iterates, also a HashMap iterates."
7695009,2,1,4,java.util.HashMap,No need to transform  into another HashMap.
7700303,1,0,1,java.util.HashMap,"I have a HashMap and want to synchronize each row/entry separately in order to maximize concurrency, so in this way many threads can access the HashMap at the same time but no two threads or more can access the same row/entry at the same time."
7703175,1,0,2,java.util.HashMap,my question is why we create a Map variable instead of HashMap here?
7703185,2,1,5,java.util.HashMap,"For example, if at some point you decide you want to use a TreeMap instead of a HashMap, then you'd only need to change: code."
7703185,2,1,5,java.util.HashMap,"If at some point you decide to internally represent this map as something other than a HashMap, then you'll keep this internal to your class."
7703185,2,1,5,java.util.HashMap,"If you make the method return a HashMap instead, then you're exposing implementation details."
7703185,2,1,5,java.util.HashMap,"In the future, if you want to use something other than a HashMap, then all the code using this class will need to be changed to accommodate this."
13360798,2,0,12,java.util.HashMap,It supports HashMap and TreeMap But it is only application embedded.
7707280,2,1,2,java.util.HashMap,"This would be clearly represented by a HashMap<K,V> in Java."
7707280,2,1,2,java.util.HashMap,"With this, you could create an instance of a HashMap<String, Integer> where you could get/set integer values within the hash map at particular string key."
7707280,2,1,2,java.util.HashMap,"With a HashMap, you may want to use containsKey(K key) or get(K key) depending on whether you want to see if the key exists in the map at all, or if the value at that key in the map is non-null."
7710999,2,0,0,java.util.HashMap,"Update: I've just seen it being used in java.util.HashMap, apparently for lazy initialization of the entrySet field."
7718280,1,0,1,java.util.HashMap,I have a HashMap in the following format.
7718280,1,0,1,java.util.HashMap,"I had no problem with a HashMap<String, String> hashmap, but when the value is a List I can't figure out the best way to store this out."
7718310,2,1,0,java.util.HashMap,A HashMap is Serializable; so you can do this by default.
7727054,1,0,1,java.util.HashMap,I have a HashMap that keeps references to my applications modules.
7727206,2,0,3,java.util.HashMap,For the first few questions relating to garbage collection in Java : The remove(key) method of the HashMap is a safe way to remove the object from collection.
7731164,1,0,1,java.util.HashMap,I have the following code that writes out the results of a HashMap.
7731164,1,0,1,java.util.HashMap,"I'm wondering the easiest way to open this property back up and pull the data back into a HashMap, the putAll was a nice way to get the data into the property and store the data."
7731164,1,0,1,java.util.HashMap,"I don't see a getAll to retrieve it, and the HashMap Key/Value data was not known before the hashmap was created so can't just retrieve by property name."
7734202,1,0,27,java.util.HashMap,"I have: HashMap<String, String> o code."
7734544,1,0,1,java.util.HashMap,What code is required to continuously loop though a HashMap?
7734544,1,0,1,java.util.HashMap,"Currently my code is causing intermittent ConcurrentModificationException errors, probably because of the way I am looping through the HashMap: code."
7734544,1,0,1,java.util.HashMap,How does one continuously loop though a HashMap and avoid a ConcurrentModificationException error?
7736338,2,0,0,java.util.HashMap,"I was thinking about the performance when iterating over a hashmap,  so i did a quick test of 25 iterations over 10^6 random Longs and removing 10% of then, using different map implementations: ConcurrentHashMap, HashMap, LinkedHashMap and a TreeMap."
7734573,2,1,5,java.util.HashMap,I am not sure about the part of continuously looping a HashMap.
7734772,2,0,3,java.util.HashMap,It takes an Iterable (such as a HashMap) and returns an Iterator that continuously loops over the data until either the Iterable is empty or you break the loop.
7739981,1,0,4,java.util.HashMap,work (copied from HashMap).
7741073,1,0,1,java.util.HashMap,You see that i use a HashMap(mapValueForCompare) to collect all values and compare each value with the value of the new HashMap(mapInfo).
7743073,1,0,0,java.util.HashMap,"Java HashMap, count Same key entries."
7743073,1,0,0,java.util.HashMap,"It seems to me, the easiest way to do it, would be use the formatted date from the database as a key for the HashMap, and then when I need to know how many entries, is it possible to know how many entries there are with the same key?"
7747313,2,0,1,java.util.HashMap,"I suggest using a standard implementation of a splay tree, i.e. without the counters, and having a separate HashMap for frequencies."
7747313,2,0,1,java.util.HashMap,"This does not sacrifice complexity, since operations on a splay tree are O(log n), while operations on a HashMap are O(1)."
7750083,1,0,2,java.util.HashMap,Java: Compact a HashMap (analogue of ArrayList#trimToSize).
7750083,1,0,2,java.util.HashMap,Is there a way to compact a HashMap in the sense that you can with an ArrayList through its trimToSize() method?
7750113,2,0,4,java.util.HashMap,The benefit of getting HashMap to do this itself internally would probably just be that the hash codes wouldn't need recomputing.
7755211,1,0,4,java.util.HashMap,"The processing required for each request is almost negligible (a HashMap.put() method call), parsing the JSON would probably be the dominant overhead."
7756078,1,0,34,java.util.HashMap,"A HashMap is, of course, a most obvious solution, but as I'm memory constrained and need to store 2 million pairs, 7 characters long keys, I need something that's memory efficient, the retrieval speed is a secondary parameter."
7756144,2,0,24,java.util.HashMap,The Trove library has optimized HashMap and HashSet classes for primitives.
7756411,2,1,57,java.util.HashMap,And there's also an example showing how much memory can be saved by using Trove instead of a regular Java HashMap: code.
7756411,2,1,57,java.util.HashMap,"So our goal now becomes to use Trove (seen that by putting millions and millions of entries in a regular HashMap, your app begins to feel unresponsive)."
7756411,2,1,57,java.util.HashMap,"2 million is really not that much but you'll still feel the ""Object"" overhead and the constant (un)boxing of primitives to Integer in a regular HashMap{String,Integer} which is why Trove makes a lot of sense here."
7811718,2,0,0,java.util.HashMap,Actually HashMap and List are too general for such specific task as a lookup of int by zipcode.
7756181,2,0,8,java.util.HashMap,"First of, did you measure that LinkedList is indeed more memory efficient than a HashMap, or how did you come to that conclusion?"
7756181,2,0,8,java.util.HashMap,"However, again, I doubt that a HashMap, HashTable or - in particular - a TreeMap would consume that much more memory, but the first two would provide constant access and the tree map logarithmic and provide a nicer interface that a normal list."
7756228,2,0,2,java.util.HashMap,Use java.util.TreeMap instead of java.util.HashMap.
7756228,2,0,2,java.util.HashMap,"No extra buckets, unlike HashMap or Hashtable."
20624259,2,0,0,java.util.HashMap,You just need to configure the expiring policy (time-to-live-seconds and max-idle-seconds) and use the Map as if Java's HashMap would be.
7762914,2,1,5,java.util.HashMap,"This can involve an array, an ArrayList  (likely what you want here), a LinkedList, a Map such as a HashMap, a Set, and other types of collections."
7768134,2,1,2,java.util.HashMap,"Looking at the source for HashMap will show you that there are internal instances which are also allocated; there is an array of HashMap.Entry instances, and one HashMap.Entry instance for every stored value."
7769760,1,0,2,java.util.HashMap,Internally these methods use the Java Colletions Framework (HashMap/TreeMap in particular).
7769866,2,0,0,java.util.HashMap,"When you create a collection Map myMap = new HashMap(),  myMap is a reference to the underlying collection."
7770504,2,0,0,java.util.HashMap,"If you want a global context, just start with a blank HashMap, and pass the same map to each call of the interpret methods."
7774302,1,0,0,java.util.HashMap,"The format is HashMap<String, Map> A sample data: code."
7776148,2,0,7,java.util.HashMap,You need to read the explanation included in the JavaDoc for HashMap  The load factor is a measure of how full the hash table is allowed to get before its capacity is automatically increased.
7776148,2,0,7,java.util.HashMap,http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html
7776319,2,0,6,java.util.HashMap,(For the implementation of HashMap that's built into Java of course.)
7779685,1,0,0,java.util.HashMap,"For example, consider the following  Process A supports 1-5    Process B supports 1-3 Process C supports 3-9  The initial solution I had was to create a simple HashMap<Integer, List<Process>>."
7780930,2,0,0,java.util.HashMap,You can use an ArrayList and a HashMap together: code.
7784436,2,0,1,java.util.HashMap,There are 2 types of Maps in JDK: HashMap and SortedMap (typically we use its implementation TreeMap).
7784436,2,0,1,java.util.HashMap,When you are using HashMap (and Hashtable) the order of keys is unpredictable: it depends on implementation of hashCode() method of class you are using as keys of your map.
7786363,2,0,1,java.util.HashMap,You can store each thread's reference into a HashMap - along with its id or Name  as the key.
7786363,2,0,1,java.util.HashMap,"Later when you want to deal with one particular Cashier thread ,  use the Name or id to fetch the corresponding Thread from the HashMap and call the appropriate logOff() method on it."
7786372,2,0,1,java.util.HashMap,"If collecting the reference to all the threads is a problem, One other way could be having a public static synchronized HashMap that has the threadId(random number assigned at runtime to each thread) as the key and the boolean as the value."
7786718,2,0,1,java.util.HashMap,"It's not quite clear to me what you mean with ""element at the first index of a Hashtable"", however, since the order of elements in a Hashtable  or HashMap is not guaranteed."
7789527,1,0,3,java.util.HashMap,Converting ArrayList to HashMap.
7789527,1,0,3,java.util.HashMap,I want to convert to ArrayList to HashMap Like this code.
7789527,1,0,3,java.util.HashMap,Please help me how to convert to HashMap.
7789541,2,1,9,java.util.HashMap,"The general methodology would be to iterate through the ArrayList, and insert the values into the HashMap."
7789542,1,0,0,java.util.HashMap,"I have make a table through this HashMap.But I am not able to use the""R/W"" value at runtime."
7790947,1,0,3,java.util.HashMap,Should a method for lazily loading and caching an Object in a HashMap be synchronized?
7790999,2,0,1,java.util.HashMap,"Without synchronized your code would have 2 problems:  HashMap is not thread-safe, it should not be used from multiple threads without synchronization."
7792523,1,0,2,java.util.HashMap,HashMap gives an unordered list of values?
7792523,1,0,2,java.util.HashMap,I'm having a weird problem with HashMap in Android.
7792535,2,0,4,java.util.HashMap,You need to use SortedMap instead of HashMap.
7792550,2,1,14,java.util.HashMap,The HashMap implementation of Map does not guarantee any order during iteration.
7792587,2,0,3,java.util.HashMap,In HashMap order is not there.
7792618,2,0,0,java.util.HashMap,"If you use Simple HashMap then  this class use some hashing technique to store the value ,at the time of extracting the data from list its use same hash technique."
7792618,2,0,0,java.util.HashMap,In Placed  of HashMap  you have to use LinkedHashMap to make it ordered List.
7795057,1,0,0,java.util.HashMap,Collection of an own datatype or HashMap.
7795057,1,0,0,java.util.HashMap,Second I could use a HashMap with Person as key and Integer as Value.
7795158,2,0,0,java.util.HashMap,I'm not sure why you think HashMap is less elegant then what you'd write (but then I don't know how amazing your programming skills are).
7795158,2,0,0,java.util.HashMap,Maybe you mean that a HashMap has more methods than you'll need.
7796717,2,0,1,java.util.HashMap,"As for the HashMap, I think it's a perfectly good solution, although I would use Person as a value and some integer or string identifier as key."
7798126,2,1,0,java.util.HashMap,"You could create a  method nextPrime(""methodName"") which creates a prime number and registers it in a HashMap<String,Integer> where String is the method name received as argument and Integer stores the prime."
7798126,2,1,0,java.util.HashMap,You can check the HashMap to see if a prime number was already used for another method.
7798472,1,0,2,java.util.HashMap,"Create a HashMap<Long,String> with the user's input."
7798472,1,0,2,java.util.HashMap,If HashMap does not contain a key with the same value as ResultSet's row id then add it to HashMap  In the end get HashMap's values as a List.If it contains duplicates reject input.
7798744,2,1,1,java.util.HashMap,"Create a HashMap<Long, String> and put all of the items from the database in it, then also create a HashSet<String> with all of the values from your database in it."
7798744,2,1,1,java.util.HashMap,Edit: For multiple updates perform all of the updates on the HashMap created from your database then once again check the Map's value set to see if its' size is different from the key set.
7805667,2,0,5,java.util.HashMap,A hashCode is usually used for a Hash collection such as HashSet or HashMap.
7806528,1,0,0,java.util.HashMap,"For instance, a first setting class may be made of 4 public float fields, another one can be made of a sole HashMap."
7808774,2,0,3,java.util.HashMap,The HashMap can be used to pass parameters you can then use inside your velocity template.
8738867,2,1,5,java.util.HashMap,"As you can see in the image, the first time, Eclipse didn't know anything other than HashMap, which I used before."
7813423,2,1,6,java.util.HashMap,"If you have a requirement to store arbitrary number of variables, HashMap might be a good choice."
7813423,2,1,6,java.util.HashMap,But remember you are sacrificing type-safety without much gain - HashMap will probably still occupy more memory as opposed to a single object with lots of nulls.
7813423,2,1,6,java.util.HashMap,The only valid usage of HashMap is when you need to store arbitrary pairs (it is not clear whether variables/key names are constant in your case) of key -> value.
7813447,2,0,0,java.util.HashMap,"I wouldnt recommend you to use a HashMap for store object fields that will store data, ie: properties."
7813581,2,0,0,java.util.HashMap,"However, if your object has a set of properties and then needs to have a list of other things of varying types and a varying number, then a  HashMap might make sense."
7814589,1,0,4,java.util.HashMap,Using HashMap as Collection in Java.
7814589,1,0,4,java.util.HashMap,I was thinking of creating a interface with a getKey() method and a wrapper around the HashMap taking all objects that implement that interface.
7814843,2,1,3,java.util.HashMap,"You might consider extending ForwardingList of guava, and using a HashMap in the back."
7823045,1,0,1,java.util.HashMap,"So far, I managed to insert code when a method exits, but I would like to log something like ""method foo returned HashMap { 1 -> 2, 2 -> 3 }"" I'm looking for a general approach that can also deal with, for instance, java.io."
7826299,1,0,3,java.util.HashMap,Java HashMap>() Comparison.
7826555,2,0,0,java.util.HashMap,"Off the top of my head, you could first use HashMap.equals() to tell if they are different and then get the keySet of each hashmap and compare them: fastest way to compare two Set in Java Then once you've got the differences in keys, you could repeat the process on your value collections."
7826376,2,0,2,java.util.HashMap,HashMap.equals will tell you if they are identical (same keys and values) but the rest you will have to roll yourself.
7826376,2,0,2,java.util.HashMap,"You will need to iterate the keyset() of one HashMap, look for it in the keySet() of the other and if found then compare the values."
7829986,2,0,0,java.util.HashMap,And/or use a HashMap thus: code.
7830791,1,0,3,java.util.HashMap,Java HashMap race condition.
7830791,1,0,3,java.util.HashMap,No other thread can possibly update the same key in the HashMap!
7830811,2,1,7,java.util.HashMap,"The answer is yes, there are potential race conditions:  when resizing an HashMap by two threads at the same time when collisions happens."
7830811,2,1,7,java.util.HashMap,"To explain better what I mean on the second point, I was looking at the source code of HashMap in OpenJdk 7 code."
7831851,1,0,0,java.util.HashMap,"I came up with some possible solutions but have difficulty picking/implementing them:  HashMap < Integer, ArrayList > with X as an integer key and the Ys as an ArrayList."
7831851,1,0,0,java.util.HashMap,Also I am unsure about runtime performance of HashMap.
7831930,2,0,1,java.util.HashMap,"if you use an ArrayList of Points you have nearly the same performance as with an array (in Java) and I think this is the fastest solution, because as you already mentioned you have to iterate through the complete int-array and a HashMap and the relying ArrayLists have to be changed depending on changing/adding coordinates"
7848462,2,0,0,java.util.HashMap,"I found where is trouble  don't use Object[] params = new Object[]{""74600b5f2d157"", ""ipb"",""','""};  instead use  HashMap and then  Object result = client.execute(""ipb.fetchOnlineUsers"",new Object[] {hMap}); It's work correctly"
7838942,1,0,5,java.util.HashMap,HashMap Copy behavior I can't figure out.
7838942,1,0,5,java.util.HashMap,"I call the following function below (getTabSetDifferences) passing in one and two, as expected if there are some differences, those values will be removed from the HashMap and it'll be different than before it was passed in for the test."
7839233,1,0,2,java.util.HashMap,I tried implementing something like this: where map = HashMap having name-value pairs.
7839468,1,0,5,java.util.HashMap,The problem lies in the declaration of the HashMap: I want to be able to do something like code.
7839891,1,0,0,java.util.HashMap,i have a Vector of Hashmap and the HashMap contains different data types: code.
7839891,1,0,0,java.util.HashMap,theResults contains this HashMap: code.
7839891,1,0,0,java.util.HashMap,I want to sort the contents of my vector of HashMap according to BLDG_ID so that when I display the data it would look like code.
7844170,1,0,1,java.util.HashMap,"-The way I started doing it was by making a hashMap of points on the board(keys) and their current domains(initialized to 1..9 unless given) -> HashMap<Point, ArrayList<Integer>> curDomains = new HashMap<Point, ArrayList<Integer>>(); though I'm not sure if this is the best data structure to use."
7847064,2,0,2,java.util.HashMap,"You might decide that it would be more convenient to use a HashMap to store the error codes (for whatever reason) and once you changed that, all code accessing the field would break."
7851234,1,0,0,java.util.HashMap,But when I check the size of the classes HashMap it is zero.
7856374,1,0,5,java.util.HashMap,Use a HashMap to store instance variables?
7856374,1,0,5,java.util.HashMap,What I have come up with is to use a HashMap to store the key/value pairs for the object and then expose those values through a get and set method.
7856407,2,1,11,java.util.HashMap,"Second problem is concurrency, HashMap is not thread safe."
7857935,1,0,3,java.util.HashMap,How to get an object from a HashMap in Java.
7857935,1,0,3,java.util.HashMap,I'm trying to get the speed of a Test object from a HashMap when given the key but I'm not quite sure how to do it.
7857992,2,0,1,java.util.HashMap,The values() method returns a collection of values contained in the HashMap object.
7859193,1,0,0,java.util.HashMap,Add an element in an existing HashMap.
7859210,2,0,1,java.util.HashMap,"HashMap is designed to be efficient for key lookups, not value lookups."
7859407,2,0,1,java.util.HashMap,"Java gives you a lot of collection generic containers (HashMap-s, ArrayList-s etc etc.)."
7860836,2,1,45,java.util.HashMap,Note that HashMap due to lookup optimizations does not preserve order.
7860850,2,0,2,java.util.HashMap,"The only thing you coulkd do with a HashMap is get all the keys, and store them in a sorted set or in a List and sort the List."
7861158,2,0,5,java.util.HashMap,HashMap does not preserve insertion order nor does it sort the map.
7863727,1,0,0,java.util.HashMap,"Java: Cannot find symbol error on Map, HashMap."
7866227,1,0,0,java.util.HashMap,"For one of the methods we have specifically been asked to use casting (even though I have been told countless times that if I have to use it then I should restructure) but for the other method we have been asked to call a method which is only specific of two of the children classes, casting won't work here because I don't know what the children classes are in the HashMap."
7869677,2,1,4,java.util.HashMap,"If you're going to put a class in a HashMap or HashSet, you MUST implement equals() and hashCode()."
7872341,1,0,0,java.util.HashMap,"How is this possible: HashMap<byte[], byte[]> and what is hash() of byte[]?"
7872375,2,0,2,java.util.HashMap,"As a result, key in this HashMap is considered unique if it is a different array, not if array contents are equal."
7886736,1,0,0,java.util.HashMap,My HashMap's Key is getting the wrong values.
7886736,1,0,0,java.util.HashMap,"When I do a HashMap.get(suffix) it gives me the index of the key it added last, rather then the one I'm trying to pull (this occurs on the duplicates..."
7889201,2,0,0,java.util.HashMap,"You can use the next construction  public enum AreaCode { area1(7927), area2(7928), area3(7929);  private static final Map<Integer, AreaCode> idMap = new HashMap<Integer, AreaCode>();  static {     for (AreaCode areaCode : AreaCode.values()) {         idMap.put(areaCode.id, areaCode);     } }  private Integer id;  private AreaCode(Integer id) { this.id = id; }  public static AreaCode getById(Integer id) { return idMap.get(id); }"
7896667,2,0,0,java.util.HashMap,Depending on your app server you might need to modify the key elements defined in the HashMap.
7896682,2,0,2,java.util.HashMap,"However, as the two answers here have mentioned, a HashMap might acheive what you are looking for."
7896682,2,0,2,java.util.HashMap,"A HashMap (or any other map, for that matter) maps a Key to a Value."
7896457,2,0,7,java.util.HashMap,You could use a HashMap to achieve the same effect.
7898818,1,0,0,java.util.HashMap,Calling a method of an Object in a HashMap in Java.
7898818,1,0,0,java.util.HashMap,I do have a HashMap in CarManager that has a collection of CarEntities.
7899730,2,1,7,java.util.HashMap,A HashMap by definition doesn't have an order.
7899730,2,1,7,java.util.HashMap,If you need to preserve or create some kind of order you need to use TreeMap instead of HashMap.
7899733,2,0,4,java.util.HashMap,A HashMap doesn't have any order.
7899742,2,0,4,java.util.HashMap,HashMap doesn't have an order.
7899768,2,0,0,java.util.HashMap,"You can use an implementation of java.util.SortedMap, like java.util.TreeMap instead of HashMap."
7902970,1,0,1,java.util.HashMap,"HashMap), how can I transform it to one written with Hadoop like the one provided in the sample code of the Hadoop distribution?"
7904033,2,1,1,java.util.HashMap,A HashMap is a perfectly good choice here.
7904033,2,1,1,java.util.HashMap,So the next thing to think about is what that HashMap will store.
7904033,2,1,1,java.util.HashMap,You have a few options for the value in the HashMap.
7904033,2,1,1,java.util.HashMap,"If you find yourself getting a String value from the map and doing additional processing consider replacing that String with a Class that better represents your data so you have something like HashMap<String, DoskiasData>."
7903967,2,0,0,java.util.HashMap,Using a HashMap in the way you describe is exactly how I would approach this problem.
7904667,1,0,2,java.util.HashMap,I have an XYSeries to which I add values from a HashMap.
7904667,1,0,2,java.util.HashMap,I'd like the datapoints on the graph to have labels on them based on the key value in the HashMap.
7909081,1,0,0,java.util.HashMap,I've made a child interface because I want a specific VehicleEntity object say Truck to add itself to the HashMap in Car.
7910197,2,0,3,java.util.HashMap,HashMap will give you better performance than Hashtable in any single threaded scenario.
7910129,2,0,1,java.util.HashMap,"Given that the class Word has a counter and a string, I'd use a HashMap<String, Word>."
7910230,2,0,1,java.util.HashMap,The Java HashMap implementation should constantly be resizing the internal data structure to be larger than the number of elements in the map by a certain amount and the hashing algorithm is good so I would assume collisions are minimal and that you will get much closer to O(1) than O(n).
7910230,2,0,1,java.util.HashMap,What HashMap are you using?
7910303,2,0,1,java.util.HashMap,The asymptotic complexity of HashMap.containsKey() is O(1) unless you've done something ridiculous in your implementation of myObject.hashCode().
7910303,2,0,1,java.util.HashMap,"Note that TreeMap.containsKey() has O(log n) complexity, not HashMap...  Stop looking at those forums :)"
7911326,1,0,1,java.util.HashMap,"As per my initial redesign approach, following are the options I need suggestion on from everyone at SO:   1> Create a custom logger class with all the required information for logging and for each record in error, store the record ID as key and the Logger class object as value in a HashMap."
7911326,1,0,1,java.util.HashMap,"When all the records are processed completely, perform database inserts for all the records in the HashMap in one shot."
7931611,2,0,1,java.util.HashMap,"Instead of memorizing every error in a HashMap, you could try (provided the DBMS supports it) to batch all those insert statements together and fire it at the end."
7911760,1,0,0,java.util.HashMap,Which is better between using long string key or short string key in HashMap?
7911760,1,0,0,java.util.HashMap,Which is better between using long string key or short string key in HashMap?
7911760,1,0,0,java.util.HashMap,Long string key in HashMap code.
7911760,1,0,0,java.util.HashMap,Short string key in HashMap code.
7911760,1,0,0,java.util.HashMap,Let's say there would be 4000+ entries in the HashMap.
7911801,2,1,4,java.util.HashMap,This makes them a very poor candidate for a key to a HashMap and the fact it reduces data integrity should trump any potential performance concerns.
7912545,2,0,0,java.util.HashMap,"I'm guessing on your data types here from what I can see in your code sample, but it looks like you need to use a HashMap<String, Text> to correlate the String to the Text (is that another String?)"
7912545,2,0,0,java.util.HashMap,"I'm not sure where R.string.def1 and R.string.def2 are coming from in your sample, but it you load them in the HashMap like this at the beginning: code."
7912545,2,0,0,java.util.HashMap,You can also do something where R.string itself is a HashMap instead of copying it over (if you have access it change it that is...looks like it might be some Android library).
7913994,1,0,0,java.util.HashMap,Compare HashMap values in an ArrayList.
7913994,1,0,0,java.util.HashMap,"I have an ArrayList and there are some HashMap<String, String> in this."
7914268,2,0,0,java.util.HashMap,"Create a Set<HashMap<String,String>> and add every member of list to it."
7920877,2,0,0,java.util.HashMap,"What about just using a java.util.HashMap with (interned) strings as keys, and doing the conversion in a few lines of Clojure ?"
7919669,2,0,1,java.util.HashMap,Start with studying the HashMap Java class.
7919669,2,0,1,java.util.HashMap,Run a series of tests in which you provide a HashMap as a parameter.
7920731,1,0,0,java.util.HashMap,I was wondering if there was an class like HashMap in which the key is an identifying field in the object.
7920776,2,0,4,java.util.HashMap,What's wrong with using a HashMap?
7920817,2,0,0,java.util.HashMap,"You could always use HashMap and add the field as the key (if you were going to make it immutable anyway, i don't see any problem with that)."
7920890,2,0,0,java.util.HashMap,It's the HashMap itself.
7921492,1,0,0,java.util.HashMap,This myVar is used as a key in a HashMap holding the string values to be rendered to each variable.
7921492,1,0,0,java.util.HashMap,Or any method I could use so I can identify which tokens are variables to used in the HashMap.
7922019,1,0,17,java.util.HashMap,Found this code on http://www.docjar.com/html/api/java/util/HashMap.java.html after searching for a HashMap implementation.
7922219,2,1,20,java.util.HashMap,In order for it to make any sense it has to be combined with an understanding of how HashMap allocates things in to buckets.
7929860,1,0,0,java.util.HashMap,"I sent a HashMap containing the name Product instances and their quantities to template.From this info, I can calculate individual prices,total price etc and render as a table."
7929860,1,0,0,java.util.HashMap,"Now ,this has to be put in a pdf.For that I call up a controller method(say createReport(...)) and pass the same HashMap.In the controller method ,I have to format the info somehow and render using renderPDF()."
7929860,1,0,0,java.util.HashMap,"So,I am sending the HashMap back and forth and I am wondering if this is the proper way.."
7931066,2,0,6,java.util.HashMap,I suggest using a HashMap for this whereby the map key is the Character you've read and the map value is the Integer count of the number of occurences.
7931568,2,1,4,java.util.HashMap,"You may use a HashMap, or LinkedHashMap if you need to preserve the insertion order like a List does."
7941762,2,1,4,java.util.HashMap,"For another, in your example the PriorityQueue will not be notified of any changes you make to the HashMap so it wouldn't be able to respond to that even if it were designed to do so."
7941762,2,1,4,java.util.HashMap,"I don't know how you're using this queue, but one possible solution would be to just store the nodes in your HashMap and create a new PriorityQueue whenever you change the HashMap."
7946637,2,1,3,java.util.HashMap,"Luckily, they fixed it with HashMap, and now you should almost never use Hashtable"
7951366,2,0,1,java.util.HashMap,HashMap has no defined ordering.
7951366,2,0,1,java.util.HashMap,"If you want ordering, and still benefit the O(1) seek time the HashMap offers, you might want to use LinkedHashMap, but note that ordering in this map is defined by order of insertions."
7953788,1,0,1,java.util.HashMap,Java HashMap Duplicate bucket entries.
7953987,1,0,5,java.util.HashMap,"When we use ArrayList or HashMap in Java, we have to import java.util.ArrayList or java.util.HashMap."
7954004,2,0,6,java.util.HashMap,"ArrayList and HashMap are however in the java.util package, which is not implicitly imported."
7954180,2,0,1,java.util.HashMap,"You could use a HashMap where the key is the concatenation of the first two strings, the ones which you'll use for lookups, and the value is a Boolean, representing the yes and no strings."
7954180,2,0,1,java.util.HashMap,"You could have a HashMap<String, HashMap<String, Boolean>> where you first index by e.g."
7954139,2,1,5,java.util.HashMap,"You might consider using a HashMap<YourDouble, String>."
7954139,2,1,5,java.util.HashMap,"You could either create an object, YourDouble which holds the first two values, or else append one to the other -- if values will still be unique -- and use HashMap<String, String>."
7959988,1,0,6,java.util.HashMap,Randomly getting elements in a HashMap or HashSet without looping.
7959988,1,0,6,java.util.HashMap,HashSet is backed by a HashMap which is backed by an array of HashMap.Entry objects.
7959988,1,0,6,java.util.HashMap,What is the best way to randomly select an element stored in a HashSet or HashMap?
7960023,2,1,3,java.util.HashMap,HashMap and HashSet simply aren't suitable for this.
7960042,2,0,1,java.util.HashMap,"If you don't call contains() (which will call equals() many times), you can use ArrayList.get(randomNumber) and that will be O(1) You can't do it with a HashMap - it stores the objects internally in an array, where the index = hashcode for the object."
7960042,2,0,1,java.util.HashMap,So a HashMap is not an option for random access.
7960737,1,0,0,java.util.HashMap,Performance of HashMap against HashMap - Java.
7960737,1,0,0,java.util.HashMap,"All, I am working on an existing system where the developer had defined a lot of HashMaps with following definition: HashMap<String, Comparable> x = new HashMap<String, Comparable>(); Now, there is absolutely no need of comparison for the value part of the hashmap since it simply represents only a single piece of information."
7960737,1,0,0,java.util.HashMap,"So, I went ahead and changed the code since there was no point of comparison here by defining the HashMap as: HashMap<String, Object> y = new HashMap<String, Object>(); I had timed the code execution for before and after change."
7961072,2,1,3,java.util.HashMap,"In general you'll want a HashMap (fast but not stored in order), but there's also a TreeMap which is slightly slower but stored in order (which can be useful sometimes)."
7961481,2,0,1,java.util.HashMap,"EDIT: just thought of something... you could use two Map instances, like HashMap, with the first one using a as key and the second using b as key."
7990667,2,1,1,java.util.HashMap,"I did some thing different, Instead of using the HashSet, I have used HashMap where I have used int a  as a key in first HashMap and the object is stored as value."
7990667,2,1,1,java.util.HashMap,And in the other HashMap I have kept the key as int b and the object as value.
7990667,2,1,1,java.util.HashMap,But I know I am paying the price by using some more memory but my main concern was time so I chose HashMap over TreeSet.
7970711,2,0,0,java.util.HashMap,It would be very easy to modify HashMap and HashSet to accept hashing and equality-testing strategies.
7970737,2,0,0,java.util.HashMap,A simple solution is to bypass HashSet and use HashMap directly.
7964586,2,1,3,java.util.HashMap,"You're creating a single HashMap<String, String> and repeatedly overwriting the entries within it."
7965132,1,0,15,java.util.HashMap,Java sort HashMap by value.
7965132,1,0,15,java.util.HashMap,I have this HashMap: code.
7965132,1,0,15,java.util.HashMap,The following code is ordering the HashMap by value: code.
7965132,1,0,15,java.util.HashMap,"How can i sort this HashMap by value, following the same approach as sortByValue?"
7966652,2,0,2,java.util.HashMap,"(linear) For each token / word check membership in the HashMap (O(1)) Write the word, or the word including your marked-tags to the output."
7968552,2,0,5,java.util.HashMap,"HashMap, if you later decide it is a better solution) with minimal code touch-points."
7968568,2,0,1,java.util.HashMap,"In general it is better to program against Interfaces because it is easier, e. g., to switch from TreeMap (ordered) to HashMap (maybe faster)."
7968571,2,0,0,java.util.HashMap,So you get freedom to modify your method workings if you latter find that a HashMap would improve your application speed.
7969286,1,0,4,java.util.HashMap,"Java, How to add values to Array List used as value in HashMap."
7969286,1,0,4,java.util.HashMap,"What I have is a HashMap<String, ArrayList<String>> called examList."
7969286,1,0,4,java.util.HashMap,"So key for this HashMap is couresID, and value is a ArrayList of all grades (exam attempts) this person has made."
7969286,1,0,4,java.util.HashMap,"So how would I, or example, add something to ArrayList inside HashMap?"
7969340,2,0,2,java.util.HashMap,"First, you have to lookup the correct ArrayList in the HashMap: code."
28232631,2,0,1,java.util.HashMap,First create HashMap.
28232631,2,0,1,java.util.HashMap,HashMap> mapList = new HashMap>(); Get value from HashMap against your input key.
7969851,1,0,1,java.util.HashMap,I have a HashMap called examList which stored exam grades of each course a student took.
7972353,1,0,1,java.util.HashMap,Do I have to use a HashMap to make this work?
7972420,2,1,2,java.util.HashMap,"ArrayList is the first step in the right direction, next use a HashMap per row, and finally add that to your SimpleAdapter."
7972420,2,1,2,java.util.HashMap,"To keep all this data points organized we place them into a HashMap, 1 hash map per row."
7972420,2,1,2,java.util.HashMap,"To present several rows of data we have an ArrayList to hold each row of data, 1 element (of HashMap) per row."
7975802,1,0,24,java.util.HashMap,When to use HashMap over LinkedList or ArrayList and vice-versa.
7975802,1,0,24,java.util.HashMap,"What is the reason why we cannot always use a HashMap, even though it is much more efficient than ArrayList or LinkedList in add,remove operations, also irrespective of the number of the elements."
7975802,1,0,24,java.util.HashMap,"I googled it and found some reasons, but there was always a workaround for using HashMap, with advantages still alive."
7976002,2,1,44,java.util.HashMap,"When you add items to a HashMap, you are not guaranteed to retrieve the items in the same order you put them in."
7976002,2,1,44,java.util.HashMap,"There are subclasses of HashMap like LinkedHashMap that will maintain the order, but in general order is not guaranteed with a Map."
7975907,2,0,15,java.util.HashMap,Map is an interface in the Java Collection Framework and a HashMap is one implementation of the Map interface.
7975907,2,0,15,java.util.HashMap,HashMap are efficient for locating a value based on a key and inserting and deleting values based on a key.
7975907,2,0,15,java.util.HashMap,The entries of a HashMap are not ordered.
7977274,2,0,1,java.util.HashMap,"If you have profiled a problem in an area of code using clear() or new HashMap(), then you may be better off looking at an alternative to HashSet that is faster."
7977161,2,0,3,java.util.HashMap,"A HashSet is backed by a HashMap, and the call to clear() reroutes to HashMap.clear()."
7977164,2,0,1,java.util.HashMap,HashSet#clear will iterate through all of the elements in the backing HashMap and set them to null.
7977887,1,0,1,java.util.HashMap,"Normally, I'd use a sax parser, construct a HashMap, fill the keys when the parser passes the index element and afterwards add the cell data."
7980514,2,0,1,java.util.HashMap,"You can store numbers in a HashMap<JButton, Integer>, for example."
7980872,2,1,1,java.util.HashMap,"SQLUtility.setParameters (easy to implement, write it yourself) loops over the HashMap keys and sets the parameters on the query."
7986257,2,0,2,java.util.HashMap,"There will, however, be a steady stream of HashMap instances being created to be fed to putIfAbsent and then being thrown away."
7986257,2,0,2,java.util.HashMap,"In the uncommon case that it does not, it will do an additional but necessary new HashMap() and putIfAbsent."
7986257,2,0,2,java.util.HashMap,"In the very rare case that it does not, but another thread has also discovered that, one of the threads will be doing a redundant new HashMap() and putIfAbsent."
7987594,2,1,0,java.util.HashMap,Your use of the terms key and value suggests you are attempting to use (or maybe implement) a HashMap.
7988032,1,0,1,java.util.HashMap,Insertion into HashMap changes values in other stored HashMaps.
7988032,1,0,1,java.util.HashMap,"So I have a HashMapCharacter, HashMap that stores all of this."
7988045,2,0,1,java.util.HashMap,You need to create a new object for each character you add to the HashMap.
7988066,2,1,1,java.util.HashMap,"You only ever create one MuteableInt for total, and put this same object reference into each sub-HashMap."
7992028,2,0,1,java.util.HashMap,You may get the min from a ArrayList (implements List extends Collection) or the values of a HashMap (HashMap.values() returns a private implementation of the Collection interface).
7992028,2,0,1,java.util.HashMap,If the java.util.Collections.min() has a ArrayList as parameter type you couldn't use the method to get the minimum value of a HashMap.
7993887,2,0,1,java.util.HashMap,You could use a HashMap where the key is still A10 but now the value is a List.
7993839,2,1,2,java.util.HashMap,Can't you use primary key of the table as the key of your HashMap ?
7993971,1,0,0,java.util.HashMap,"I am suggested to use Collections.synchronizedMap private static Map < String, HashSet < String >> HashSets =     Collections.synchronizedMap (new HashMap < String,                                  HashSet < String >> ()); As per http://download.oracle.com/javase/6/docs/api/ , I need to use synchronized() keyword while accessing values.I don't understand it quite well."
7997120,1,0,0,java.util.HashMap,"In order to accomplish this, I'm keeping a global HashMap of instances."
7997120,1,0,0,java.util.HashMap,"When I attempt to solve the concurrency exception issue, I use syncronized OR ConcurrentHashMap rather than HashMap."
7997120,1,0,0,java.util.HashMap,Where should my global HashMap of instances go?
7998408,1,0,0,java.util.HashMap,"The list that the Adapter binds to is of type List<HashMap<String, Object>>."
7998657,1,0,3,java.util.HashMap,Currently the program uses a HashMap and adds the primary key from a database to it twice: code.
7998994,1,0,2,java.util.HashMap,The suggestions that I generate are stored in a HashMap.
7999546,1,0,8,java.util.HashMap,Why is HashMap containsKey slower than get in Sun JDK?
7999546,1,0,8,java.util.HashMap,Why is calling containsKey on a HashMap slower then get?
8003399,2,0,0,java.util.HashMap,"Even before generics were introduced, things like HashSet and HashMap couldn't store primitives."
8005145,2,1,1,java.util.HashMap,"I doubt,I completely understand your problem and what you want exactly.But i can suggest you that you can maintain HashMap for storing position-id pairs for each listview."
8218508,2,1,6,java.util.HashMap,"a Magic Container like a HashMap<String, Object>)."
8008045,2,1,2,java.util.HashMap,"EDIT: I was expecting a faulty hashCode or equals implementation, but since your answer, you revealed that you're mutating the keys after they are added to an HashSet or HashMap."
8008045,2,1,2,java.util.HashMap,"For this reason, always make HashMap or HashSet keys Immutable."
8011924,1,0,1,java.util.HashMap,How to get content of HashMap's looping on java in Android?
8015903,1,0,4,java.util.HashMap,"I'm having this problem: I'm reading 900 files and, after processing the files, my final output will be an HashMap<String, <HashMap<String, Double>>."
8020650,2,0,0,java.util.HashMap,Either with #keySet or #entriesSet http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html
8024175,1,0,0,java.util.HashMap,"Hope you can help :) Answer: Well I figured it out, even though as ring bearer pointed out I could just use a HashMap!"
8025383,2,1,1,java.util.HashMap,"From the snippet you've posted, it is possible that the HashMap<String, Integer> in your cast is incorrect."
8025383,2,1,1,java.util.HashMap,"The original HashMap may have been defined as simply a HashMap or HashMap<Object, Object> since your variable name is untypedResult."
8025827,2,0,0,java.util.HashMap,Looks like you want to populate a Bean from a HashMap.
8029570,1,0,1,java.util.HashMap,I have a table with 50 columns and I want to insert all items in a HashMap variable into it (HashMap keys and table column names are the same).
8029631,2,0,3,java.util.HashMap,Get the key set for the HashMap.
8029631,2,0,3,java.util.HashMap,Then iterate that key set again to set parameters by name using the Objects you retrieve from the HashMap.
8029618,1,0,0,java.util.HashMap,Get variable type in a HashMap in java.
8029618,1,0,0,java.util.HashMap,"I have a HashMap<String,Object> and stored some data from 3 different types (Integer,String,Long)."
8030645,1,0,0,java.util.HashMap,Java HashMap returning null.
8033085,1,0,1,java.util.HashMap,Removing [] from ArrayList Output and Storing in HashMap.
8033085,1,0,1,java.util.HashMap,I have a HashMap.
8033085,1,0,1,java.util.HashMap,"So when I put this ArrayList in HashMap and print the HashMap I get the output as  [Region1,Region2,Region3,Region4]."
8033085,1,0,1,java.util.HashMap,I put this ArrayList in HashMap code.
8033085,1,0,1,java.util.HashMap,I already succedded by using StringBuffer and Iterator but I cannot use it everytime Since I have huge number of ArrayList which will go inside the HashMap..
8033150,2,0,0,java.util.HashMap,Try subclassing HashMap and override the toString() method
8033742,1,0,3,java.util.HashMap,Is there a way to get Java's unique hashcode from objects like HashMap?
8033742,1,0,3,java.util.HashMap,I believe that if I declare a HashMap and repeatedly feed it instances of Map.Entry eventually a hashcode will collide with another hashcode even if the two keys (which happen to be Strings for my needs) are different.
8033742,1,0,3,java.util.HashMap,At that point HashMap and other classes that use hashing will produce a different hash code which serves as the real key for internal use.
8033799,2,0,2,java.util.HashMap,Obligatory link: Hash table -- only a very few cases even allow for minimal perfect hashing and this does not cover a general hash table like HashMap.
8033799,2,0,2,java.util.HashMap,"(The OpenJDK 7 HashMap implementation uses a Linked-List Chaining approach and final equality is decided by == and equals(), in that order.)"
8033756,2,0,1,java.util.HashMap,Read the code for HashMap to find out more details.
8033756,2,0,1,java.util.HashMap,How would you expect HashMap to produce a genuinely unique int hash when there can be more than 232 distinct objects?
8033760,2,1,8,java.util.HashMap,"Also: HashMap doesn't produce a ""unique hash code"": it simply stores all elements with the same hash code in the same bucket (in a linked list) and checks every one of them using equals() if it has to retrieve one of those."
8036880,2,1,9,java.util.HashMap,"Edit: After your edit I think that the solution to your problem is to simply use HashMap<String, List<String>>."
8037065,2,0,1,java.util.HashMap,Probably you will want to use LinkedHashMap instead of regular HashMap to be able to retrieve the data in the same order that you added it.
8058165,2,0,0,java.util.HashMap,Java representation ^^ Dictionary vs HashMap ><
8046418,1,0,1,java.util.HashMap,Java HashMap sorting.
8046418,1,0,1,java.util.HashMap,"Possible Duplicate: Java Ordered Map   I have list of product object in the HashMap<Integer,Product> I want to do the sorting  code."
8046465,2,0,2,java.util.HashMap,"Alternatively, you could get the keySet, sort it, iterate it and pull information from HashMap, but that would be unnecessary IMHO."
8046485,2,1,2,java.util.HashMap,"If you don't want to frequently access the values based on the key, you shouldn't use HashMap."
8046512,2,0,1,java.util.HashMap,"HashMap map = new HashMap(); hash map is storing the values in the form of key,value pair.and it was not synchronized(means it can act upon many threads).intial capacity of hasmap is 16.and load factor is 0.75. intial capacity*loadfactor=16*0.75=12 that means after storing the 12 th key vale pair hash map size is doubled."
8050289,1,0,1,java.util.HashMap,Scalability issue with HashMap in Multithreaded Multicore system.
8050289,1,0,1,java.util.HashMap,"When reading data from HashMap and doing arithmetic calculation I am seeing a performance dip from 16 thread onwards, but while doing only arithmetic operation it's scaling as per expectation."
8050289,1,0,1,java.util.HashMap,"Please find the test result below: Reading from HashMap and performing arithematic operation: no of threads | Time Taken (seconds) =>  1       |      85,  2 |           93,  4 |          124,  8   |        147, 16  |         644 Performing only arithematic operations : no of threads | Time Taken (seconds) => 1    |        25, 2       |     32, 4       |     35, 8       |     41, 16      |     65, 32      |    108, 40       |   112, 64      |    117, 100    |     158 Also adding the code block for reference : code."
8050303,2,0,6,java.util.HashMap,"In a more complex workload, the visible effect of lookup in the HashMap may tend to disappear and performance look more like what you would expect."
8050829,2,0,0,java.util.HashMap,At first I suspected it was because HashMap case creates an object on every lookup.
8050451,1,0,1,java.util.HashMap,I am using a HashMap in memory to maintain my java objects.
8050563,2,0,0,java.util.HashMap,"You can make use of weblogic p13n cache for this purpose, instead of using your own HashMap to cache the java objects."
8050563,2,0,0,java.util.HashMap,"weblogic p13n cache provides you method for cluster aware cache clear as well, in case you need it, in case you want to use your own HashMap for caching, provide a update method for that HashMap and clear the java objects that you want to be reloaded and then call the cache creation method."
8055785,2,0,0,java.util.HashMap,"You can initially put them all in a HashMap, and then simply access it."
10952716,2,0,1,java.util.HashMap,I've usually preferred java.util.TreeMap to a HashMap.
8061821,2,0,0,java.util.HashMap,"IF however, you are looking for an asynchronous implementation, you should use the HashMap."
8061821,2,0,0,java.util.HashMap,A HashMap too requires an Iterator to traverse through it.
8061821,2,0,0,java.util.HashMap,HashTables: http://download.oracle.com/javase/1.4.2/docs/api/java/util/Hashtable.html HashMaps: http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html Iterator: http://download.oracle.com/javase/1.4.2/docs/api/java/util/Iterator.html
8061606,2,0,3,java.util.HashMap,"For an implementation similar to C#'s Dictionary try HashMap<K, V>"
8061607,2,0,7,java.util.HashMap,"Use the Map<K, V> interface, and the HashMap<K, V> class for example."
8061615,2,1,2,java.util.HashMap,Java has Hashtable and HashMap See Differences between HashMap and Hashtable?
8064222,1,0,0,java.util.HashMap,NotSerializableException on HashMap.
8064222,1,0,0,java.util.HashMap,"I've a hash map like : Map gen = HashMap<Integer, MyObj> When I execute AccessController.doPrivileged(gen), it throws exception as follows."
8081886,2,1,3,java.util.HashMap,"You could well do new HashMap<K, V>() inside the generified class."
8089985,1,0,2,java.util.HashMap,"The thing is, from a performance point of view this binary search to find the right pocket at each turn seems unnecessary, wouldn't it be possible to simply have some kind of HashMap whereas each entry in the table is linked to the range as shown above and pulling using a key within that range would pull out the associated individual in linear time instead of requiring a binarysearch."
8091737,2,0,0,java.util.HashMap,HashMap allows find elements by exact value of a key only.
8092650,2,0,1,java.util.HashMap,"With n=1.000 individuals and selecting k=100 of them, you can do   100 binary searches, O(k logn) or 1.000 puts in a Tree, HashMap or some other data structure, O(n+k)  Only testing will tell what is faster, performance depends on n, k and the implementations."
8094525,2,0,0,java.util.HashMap,"And using a HashMap Furthermore, IMHO the best way to iterate over a HashMap is to use the entry set: code."
8095902,2,1,3,java.util.HashMap,"Since the HashMap is effectively read only I wouldn't assign Collections.synchronizedMap rather Collections.unmodifiableMap (this wouldn't effect the Map itself, just prohibit from accidental puts from someone else possible using this class)."
8096926,2,0,1,java.util.HashMap,"format is really up to you, xml, json, csv if you decided to use java serialization i would recommend to store your data into a HashMap and wrap you accessor around the map code."
8097579,2,1,3,java.util.HashMap,"However, since you have a uniqueKey, which I assume is unique to each instance of a Chapter, have you considered using a HashMap instead?"
8097579,2,1,3,java.util.HashMap,"Then you could just use uniqueKey as keys, and you'd just have to check whether the key is present (eg: using HashMap.containsKey()) or not: code."
8097579,2,1,3,java.util.HashMap,"With a HashMap, you can also just get the Object you want with .get(): code."
8097591,2,0,2,java.util.HashMap,Typically in this situation you should consider refactoring your key fields into a separate key class and then using a HashMap rather than a HashSet.
8097593,2,0,1,java.util.HashMap,"If you want lookup, you may be better off going with a HashMap instead of a HashSet."
8097599,2,0,1,java.util.HashMap,"Or, if you need access to the object via the key, then you should use a HashMap, rather than a HashSet."
8098746,2,0,0,java.util.HashMap,"You can use HashMap, where Key  is your string  and value - count."
8099986,2,0,0,java.util.HashMap,I think a class that wraps a HashMap and List (as you said in your post) is probably the best best for fast contains and access.
8103643,1,0,4,java.util.HashMap,".NET port with Java's Map, Set, HashMap."
8105787,2,0,0,java.util.HashMap,HashMap will be using hashCode.
8106382,2,0,0,java.util.HashMap,"That means if you use them as the key in a HashMap (or as an element of a HashSet), you can only expect to find them if you use the exact same instance of the object to do the look up."
8106382,2,0,0,java.util.HashMap,"The ""contract"" is that if two objects are equal then they must have the same hashCode, however your analysis is correct - hashCode only matters in the collections API (HashSet, HashMap, etc.)."
8107300,2,0,0,java.util.HashMap,Or a HashMap of ArrayLists you could access via the names of your categories: code.
8109556,2,0,0,java.util.HashMap,"I'd go with HashMap since its structure allows mapping a value to a key (HashMap ) and it does the part of adding, finding and removing items."
8109556,2,0,0,java.util.HashMap,You can also use them for multi-level hashmaps if you need more than 2 columns (HashMap ) you can look that up.
8111876,2,0,3,java.util.HashMap,"If you want to search by ID, you just need to create a second index, mapping IDs to row indices, which could be a HashMap<Integer, Integer>."
8112975,1,0,7,java.util.HashMap,Get key from a HashMap using the value.
8112975,1,0,7,java.util.HashMap,I want to get the key of a HashMap using the value.
8112990,2,0,4,java.util.HashMap,"Read the javadoc for HashMap and that might help you: HashMap To get the value, use hashmap.get(100)."
8113024,2,0,1,java.util.HashMap,"if you what to obtain ""ONE"" by giving in 100 then  initialize hash map by hashmap = new HashMap<Object,String>(); haspmap.put(100,""one""); and retrieve value by hashMap.get(100) hope that helps."
8113029,2,1,23,java.util.HashMap,The put method in HashMap is defined like  this: code.
8113029,2,1,23,java.util.HashMap,"You can't easily look up by value in a HashMap, if you really want to do that, it would be a linear search done by calling  entrySet(), like this: code."
8113029,2,1,23,java.util.HashMap,"However, that's O(n) and kind of defeats the purpose of using a HashMap unless you only need to do it rarely."
8117413,2,0,0,java.util.HashMap,"Suggestion: If its not required to use an array, and you can use any other data-structure you can implement the same in a HashMap very easily."
8118861,2,0,1,java.util.HashMap,What you need to do can be done through the use of a HashMap.
8118929,2,0,1,java.util.HashMap,"Second, I am assuming you actually want to write a collection because you are learning how to do it, otherwise please use a HashMap or some other kind of map as described in some of the other answers."
8119366,1,0,22,java.util.HashMap,Sorting HashMap by values.
8119366,1,0,22,java.util.HashMap,I need to sort my HashMap according to the values stored in it.
8119366,1,0,22,java.util.HashMap,The HashMap contains the contacts name stored in phone.
24846609,2,0,0,java.util.HashMap,`   /**      * sort HashMap by value      * CustomData needs to provide compareTo() for comparing CustomData      * @param map      */ code.
8119401,2,0,8,java.util.HashMap,A HashMap is fundamentally unordered.
8119406,2,1,25,java.util.HashMap,"Just a kick-off example , This way is more useful as it sorts the HashMap and keeps the duplicate values as well."
8120051,2,1,4,java.util.HashMap,"Use an explicit HashMap or WeakHashMap instead of intern() to avoid storing strings in the GC permanent generation - this was an issue in older JVMs, not sure if it is still a valid concern."
8123542,1,0,6,java.util.HashMap,"Consider that I’ve got a standard Java bean: i.e. it contains members that are String, List, HashMap, etc."
8128408,1,0,20,java.util.HashMap,"To me, it looks like HashMap<String, Object>, but I'm very new to Objective-C."
8128479,2,0,11,java.util.HashMap,"For practical usage: HashMap<String, Object> would be the way to go for a simple, non-parallel dictionary."
8246715,2,1,5,java.util.HashMap,It looks like you are iterating over the contents of a HashMap.
8246715,2,1,5,java.util.HashMap,"Board defines emptyCells which is a HashMap, and then GameSearch calls Board.getEmptyCellCollection (which returns the values of the HashMap as a collection) and then iterates over them."
8246715,2,1,5,java.util.HashMap,"If you need to iterate over the contents of a HashMap in predictable order, use LinkedHashMap."
8161555,2,0,1,java.util.HashMap,The solution ended up being a HashMap.
8161555,2,0,1,java.util.HashMap,The HashMap associates each product object (they key) with the order number (the value).
8136880,2,0,2,java.util.HashMap,At runtime the map is just a HashMap.
8136888,2,0,2,java.util.HashMap,"You can find that it is a HashMap using reflection, but you will not be able to find the type parameters due to type erasure."
8141021,1,0,6,java.util.HashMap,Java XStream with HashMap.
8142918,2,1,1,java.util.HashMap,"You add values to that creating as many HashMap<String, String> objects as you need and using list.add(yourHashMap), where list is the ArrayList."
8147667,1,0,1,java.util.HashMap,Understanding HashMap and IdentityHashMap.
8147667,1,0,1,java.util.HashMap,"Now I am putting A,B,rB in HashMap, say hm, and IdentityHashMap, say ihm."
8147667,1,0,1,java.util.HashMap,"As per the java docs, IdentityHashMap does k1 == k2 while HashMap does k1.equals(k2) , if k1 and k2 are not null."
8147760,2,1,3,java.util.HashMap,"HashMap will only use equals when two keys have the same hash code, so it is essential that whenever you override equals you also override hashCode and vice versa."
8154159,2,0,1,java.util.HashMap,I would probably be looking at some kind of HashMap of HashMaps structure here where the first level of HashMaps would use the sources as keys and the second level would contain the actual data (the minimal for detecting duplicates) and use your hashcode function for hashing.
8154916,1,0,0,java.util.HashMap,Generate string combinations from string arraylists stored in HashMap.
8162452,1,0,0,java.util.HashMap,Inserting from ArrayList to HashMap.
8162452,1,0,0,java.util.HashMap,This is my HashMap.
8162501,1,0,0,java.util.HashMap,Worse case time complexity put/get HashMap.
8162501,1,0,0,java.util.HashMap,I want to know what's the worst case time complexity of put/get methods of HashMap incase the object used as a key always returns hashcode as 1.
8162501,1,0,0,java.util.HashMap,I was looking at this HashMap get/put complexity but it doesn't answer my question.
8170376,2,0,0,java.util.HashMap,"If the number of entries in the array is big and I guess it is, then you need to consider using a ""direct access"" data structure such as a HashMap which will act as a database table where you have values referenced by their keys"
8174062,2,0,1,java.util.HashMap,Hash search (using HashMap) is good but if you have a key with a finite numeric-range an array would do better.
8174065,2,0,3,java.util.HashMap,"ArrayList, HashMap will perform better as they don't have synchronized blocks, which 99.9% of the time don't get you anything useful anyways."
8179753,1,0,2,java.util.HashMap,How to create ten thousand objects and store them in a HashMap.
8179753,1,0,2,java.util.HashMap,"I am thinking of storing the data simultaneously in a HashMap which I will clear at the end of the day, every day."
8179753,1,0,2,java.util.HashMap,Do I need 30 different HashMap or can I build a key like 'pathName+randomNumber'?
8179753,1,0,2,java.util.HashMap,In the end I want to be able to locate the first entry in the HashMap for each source and the two latest entries thereby enabling me to see what the difference between these three are.
8179753,1,0,2,java.util.HashMap,"I have tried to look on the web but with no luck as I think the HashMap examples are always focused towards storing Objects, but not on how to create the objects you store in them... (yeah I know - it's a rookie question) ;)"
8180143,2,1,1,java.util.HashMap,use HashMap instead of the ArrayList).
8180511,1,0,2,java.util.HashMap,ClassCastException when passing a HashMap to a Java function.
8183453,2,0,1,java.util.HashMap,You will be getting the out of memory exception at the point where the HashMap need to expand it's internal storage.
8183460,2,0,4,java.util.HashMap,When HashMap is getting full it doesn't allocate extra space for just one more object.
8183479,2,0,4,java.util.HashMap,The HashMap class resizes on occasion as the number of entries in it grows.
8184049,1,0,7,java.util.HashMap,"HashMap, List>> : specify that the lists' classes extend the keys'."
8184049,1,0,7,java.util.HashMap,"To that end, I'm using a HashMap, where keys are the superclasses, and values a list of their extended classes."
8186339,2,0,5,java.util.HashMap,For example in the HashMap the underlying storage is an array: code.
8186339,2,0,5,java.util.HashMap,See the sourcecode of HashMap for OpenJdk 7 and look for void resize(int newCapacity).
8187410,2,0,0,java.util.HashMap,You can a HashMap to store the String keys and their values.
8187410,2,0,0,java.util.HashMap,"HashMap, as its name suggests, uses the Strings' hash values to efficiently store and retrieve values."
8187416,2,0,0,java.util.HashMap,"Not sure what constraints you're working under here (i.e. this might take way too much memory depending on how big the strings are), but if you have to maintain the linked list you could create a HashMap that maps the strings to their position in the list which would allow you to retrieve any string from the list with 2 constant time operations."
8195041,2,0,2,java.util.HashMap,"It seems like you are trying to implement your own hash table (in contrast to using the Hashtable or HashMap included in java), so it's more a data structure question than a java question."
8195069,2,1,4,java.util.HashMap,Java for example doubles the size of its HashMap when the load factor gets past 0.75.
8195261,1,0,2,java.util.HashMap,Update Element in ArrayList/HashMap using java.
8195261,1,0,2,java.util.HashMap,"I'm doing some coursework for uni, I really should know this but I am unsure how I can update an object stored in a HashMap."
8195261,1,0,2,java.util.HashMap,"I have an abstract 'User' class that extends into 'Customer' and 'Staff' classes, instances of which are stored in a HashMap named 'mapUsers'."
8195261,1,0,2,java.util.HashMap,"My real question is, will this update the object stored in the HashMap or will I have to remove the element stored in the HashMap and replace with the modified temp instance."
8195285,2,1,7,java.util.HashMap,"Since your HashMap holds references, doing this: code."
8195285,2,1,7,java.util.HashMap,"will change the name also inside the HashMap, because both references point to the same thing."
8195285,2,1,7,java.util.HashMap,"Or alternatively, assuming p is already in the HashMap: code."
8197050,1,0,1,java.util.HashMap,Storing ArrayList and HashMap using java.util.properties.
8197050,1,0,1,java.util.HashMap,How can I store an ArrayList and/or a HashMap variable using java.util.properties?
8197106,2,0,1,java.util.HashMap,Have you considered just storing your configuration information in a HashMap rather than a Properties object?
8197111,2,0,1,java.util.HashMap,"Storing a HashMap would be easy, since each key and value in the Map can be represented by a corresponding key and value in the Properties object (see the setProperty method in Properties."
8202751,2,0,0,java.util.HashMap,A HashSet uses a HashMap under the hood.
8202751,2,0,0,java.util.HashMap,"Therefore, the contains operation uses the hashCode() method in the object to check if it's present in the hash table implemented by HashMap."
8203449,2,0,1,java.util.HashMap,"You can store the words/hints in two arrays with the same index, or you can put them in a HashMap with map.put(wordA, hintA)."
8203449,2,0,1,java.util.HashMap,"A HashMap won't keep the order of the words; if you do need to maintain the order, you can use a LinkedHashMap."
8204454,1,0,1,java.util.HashMap,What is HashMap and what does it mean when we use < > for ArrayList class?
8204486,2,1,7,java.util.HashMap,Both HashMap and ArrayList can be considered as array in PHP.
8204486,2,1,7,java.util.HashMap,"ArrayList is indexed by number, and HashMap is collection of key value pairs - PHP does not differentiate those two situations."
8204486,2,1,7,java.util.HashMap,This particular declaration says that there is an ArrayList (number indexed array) and all its element are of type HashMap.
8204486,2,1,7,java.util.HashMap,"For each HashMap, which is a collection of key/value pairs, the keys are of type String, and values are of type Object."
8204565,1,0,0,java.util.HashMap,i want to clone a HashMap which have a Object as value.
8206622,2,0,0,java.util.HashMap,Are you trying to clone the HashMap and all of its contents?
8206622,2,0,0,java.util.HashMap,If you simply want a copy of a Map you can use the copy constructor on HashMap.
8205498,2,0,2,java.util.HashMap,"If you want to retrieve a class instance based on a String, consider using a Map such as a HashMap."
8206689,2,0,1,java.util.HashMap,"To make this work efficiently, I've sometimes given my GUI a HashMap and then have control pass in the String key that allows the getText method to obtain the correct JTextfield, get its text and return it."
8211784,1,0,2,java.util.HashMap,How to give the static value to HashMap?
8211784,1,0,2,java.util.HashMap,I have HashMap like:  code.
8213157,2,0,1,java.util.HashMap,"You could maintain a HashMap that maps the log ids that have been encountered so far to some Object, and synchronize on the Object that belongs to the id of the log being written to."
8213157,2,0,1,java.util.HashMap,Note that reads and writes to the HashMap must be synchronized on the HashMap itself.
8216295,1,0,1,java.util.HashMap,"If I override .equals(), do I need to override .hashCode() even if I don't use a HashMap?"
20909091,2,0,1,java.util.HashMap,"Suppress deprecated import warning in Java   1: I wonder why they used Hashtable and not HashMap, since ObjectName is available since 1.5 and Hashtable is obsolete since 1.2"
8223148,2,1,21,java.util.HashMap,The most direct replacement of a Hashtable is a HashMap.
8223148,2,1,21,java.util.HashMap,On difference that could be important is that all relevant methods of Hashtable are synchronized while they are not synchronized on HashMap.
8223159,2,0,3,java.util.HashMap,A better replacement for Hashtable is HashMap.
8223159,2,0,3,java.util.HashMap,Hashtable is synchronized unlike HashMap.
8223203,2,0,2,java.util.HashMap,"You should use HashMap, but it is not designed for concurrent environments, where you may use ConcurrentHashMap."
8224284,2,1,4,java.util.HashMap,"On the other hand HashMap is mutable, i.e. its internal state can be changed: code."
8224329,2,0,1,java.util.HashMap,Initially d1 and the HashMap entry for D1 point to the same object (so they each contain the same reference).
8224329,2,0,1,java.util.HashMap,"This change is only to d1, the HashMap entry for D1 still has the original reference as its value, and therefor is still pointing to the Double 0.00."
13029022,2,0,1,java.util.HashMap,"Map<.String,String> hashmap=new HashMap<.String,String>().. here in this line ...map and string both are implictly serializable , so we dont need to implement serializble for these explicitly but if you put your own object that must be serializable."
8226634,1,0,2,java.util.HashMap,"I need to have a HashMap< Integer, String> which can serve fast operations for retrieving a list of all entries whose keys are in a certain integer range besides, getting values from map based on keys."
8226683,2,0,3,java.util.HashMap,"However, you can't use HashMap to create one, because the map would have to be a SortedMap."
8229473,1,0,24,java.util.HashMap,"HashMap: One Key, multiple Values."
8229494,2,0,3,java.util.HashMap,"A standard Java HashMap cannot store multiple values per key, any new entry you add will overwrite the previous one."
8233560,2,0,0,java.util.HashMap,(I'd also probably store the commands in a HashMap from command name to implementation instead of searching the array.)
8236945,1,0,42,java.util.HashMap,Case insensitive string as HashMap key.
8236945,1,0,42,java.util.HashMap,I would like to use case insensitive string as a HashMap key for the following reasons.
8236945,1,0,42,java.util.HashMap,During initialization program creates HashMap with user defined String While processing an event (network traffic in my case) I might received String in a different case but I should be able to locate the  from HashMap ignoring the case I received from traffic.
8236957,2,0,5,java.util.HashMap,Subclass HashMap and create a version that lower-cases the key on put and get (and probably the other key-oriented methods).
8236957,2,0,5,java.util.HashMap,"Or composite a HashMap into the new class and delegate everything to the map, but translate the keys."
8237003,2,0,11,java.util.HashMap,And the common Map operations should O(1) ... just like a regular HashMap.
18359758,2,0,1,java.util.HashMap,"Based on other answers, there are basically two approaches: subclassing HashMap or wrapping String."
8241250,2,0,0,java.util.HashMap,"To modify an element, you will need first to remove the original [will probably require an additional HashMap:State->value to store the current value] and then to insert the new node, with its modified value Note that you will probably have to rewrite equals() for your nodes."
8240680,2,0,1,java.util.HashMap,You can create a HashMap gui and put any component you want to that map.
8241582,1,0,0,java.util.HashMap,By reading the javadocs for HashMap and HashTable I came to the conclusion that what the implementation does is basically replace the value and essentially doesn't employ any collision resolution?
8241634,2,0,3,java.util.HashMap,"If you want to store more than one value for a single key, you can always use HashMap<KeyType, ArrayList<ValueType>> and do some housekeeping to initialize the array when necessary."
8242271,2,0,3,java.util.HashMap,"Assuming you require O(1) access time as per a regular HashMap, I suggest to implement your own (inefficient) ""key range"" methods."
8242271,2,0,3,java.util.HashMap,"In other words, sacrifice the performance of the key-range operation for the improved access time you achieve with a regular HashMap."
8245887,2,0,2,java.util.HashMap,HashMap or TreeMap) (O(1)) or/and sort data and use binary search (log(n)).
8252282,2,0,0,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
8252282,2,0,0,java.util.HashMap,"AbstractMap, HashMap, Hashtable,  TreeMap use according your requerment  ...."
8255878,1,0,5,java.util.HashMap,How much longer (in nanoseconds) does a try-catch take when catching an exception rather than doing a check (assuming message has HashMap type performance for lookup)?
8258082,2,0,1,java.util.HashMap,Simply use java.util.HashMap and java.util.HashSet for registrations and listeners respectively.
8261075,1,0,23,java.util.HashMap,adding multiple entries to a HashMap at once in one statement.
8261075,1,0,23,java.util.HashMap,I need to initialize a constant HashMap and would like to do it in one line statement.
23664406,2,0,9,java.util.HashMap,See also: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableMap.html A somewhat related question: Like ImmutableMap.of() for HashMap in Maps?
8264702,1,0,0,java.util.HashMap,HashMap method in using it as a most common value.
8266904,1,0,1,java.util.HashMap,Why usually Map = new HashMap() instead of HashMap = new HashMap()?
8266944,2,1,5,java.util.HashMap,"Less typing, Map is the Interface (same with List) for that class so it's easier to pass a Map around than a HashMap since the functionality is the same the only difference is the implementation."
8266944,2,1,5,java.util.HashMap,This is usually done (in some cases) when lets say for some reason you decide that HashMap isn't what you want and you want to use TreeMap instead but in all of your code there's HashMap parameters and changing those can be a pain.
8267558,2,0,0,java.util.HashMap,Drop the ArrayList and use a HashMap; code.
8267512,2,1,1,java.util.HashMap,"Instead of storing the accounts in an ArrayList<SavingsAccount> I suggest you store them in a HashMap<String, SavingsAccount>."
8271331,2,1,8,java.util.HashMap,"Rather than storing the default color in the HashMap using a NULL key, put the default color in the specific variable."
8271814,1,0,2,java.util.HashMap,"I've written one constructor method,  addRequirement(Requirement,Project), in Project which adds a Requirement to the requirements HashMap as a tentative example of what I currently think is the solution."
8275322,2,0,0,java.util.HashMap,"Why not just look up the Location and Info objects by referenceId, then put them into a HashMap?"
8275338,2,0,1,java.util.HashMap,You only need to make a HashMap for one of your lists.
8275338,2,0,1,java.util.HashMap,"Then you build your final HashMap by looping through the second list, using the other list's HasMap to get the matching value."
8289771,1,0,1,java.util.HashMap,"Is the a way to add a new functionality to a non extend-able class i.e(final class ) in Java , I know a way to add a property to it using HashMap .for example if i have a Widget class that declared final  and i want to add a new property to it lets say  'serial code' then i can you the HashMap to add it like this  code."
8292380,1,0,2,java.util.HashMap,"My definition is as follows: public class FooInfo {    ...    @Persistent     private Map vote = new HashMap();    ... } And I tried to access it like this: Query query = persistenceManager.newQuery(""SELECT FROM com.foo.app.db.FooInfo where vote.get(\""TOTAL\"") >=1"") However, Google App Engine returns this exception:  Message: javax.jdo.JDOUserException: Problem with query =1>: Unsupported method  while parsing expression: InvokeExpression{[PrimaryExpression{vote}].get(Literal{TOTAL})} Does this mean GAE doesn't support the get method or I am not using it correctly?"
8293970,1,0,3,java.util.HashMap,Java: HashMap: get: specify default value.
8293970,1,0,3,java.util.HashMap,"In Java, the HashMap.get method does not have the second argument for specifying a default value."
8294030,2,0,1,java.util.HashMap,Consider writing an adapter for HashMap that provides you with a new get() method that allows you to specify a default value.
8297390,1,0,0,java.util.HashMap,"suppose you have a HashMap m and there is already a key value pair <""key1"", object> inside."
8297664,2,0,0,java.util.HashMap,See this if you need to modify when looping: Java: iterate through HashMap
8298290,1,0,3,java.util.HashMap,How to sort HashMap based on Date?
8298290,1,0,3,java.util.HashMap,"I trying to sort this HashMap based on date in keys My Hash map: Map<Date, ArrayList> m = new HashMap<Date, ArrayList>();"
8298305,2,1,19,java.util.HashMap,Use a TreeMap instead of HashMap.
8298305,2,1,19,java.util.HashMap,"Alternatively, if you have an existing HashMap and want to create a TreeMap based on it, pass it to the constructor: code."
8298584,2,0,0,java.util.HashMap,Use TreeMap instead of HashMap to store the data，it will be sorted automatically.
8299029,1,0,2,java.util.HashMap,"I want to use MultiKeyMap from Apache Collection, because I need a HashMap with two keys and a value."
8299094,2,1,3,java.util.HashMap,If you need only one key to get a value you have a plain old HashMap.
8300528,1,0,2,java.util.HashMap,I read that it is a directory that stores names and objects (something like HashMap in Java?).
8304952,2,1,13,java.util.HashMap,"Try using a LinkedHashMap, from the javadocs:  Hash table and linked list implementation of the Map interface, with predictable iteration order This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries."
8309589,1,0,3,java.util.HashMap,"I'm thinking about adding a List variable that could contains an HashMap with these couple of key--> value:  ""type"" --> the type of the field that I would search (for example String.class or java.util.Date.class); ""name"" --> the name of the field on the entity class; ""value0"" --> the first value that I would looking for; ""value1"" --> the second value for the ""between"" clause; ""clause"" --> which filter I want use."
8314756,2,1,0,java.util.HashMap,Maybe a synchronized HashMap that associates each ID with some type of synchronized ordered Queue?
8315302,1,0,1,java.util.HashMap,"Stringtemplate: is it ok to Apply Templates, in which HashMap uses, To Multi-Valued Attributes."
8315302,1,0,1,java.util.HashMap,"There is two template in my .stg file, and both of them apply on multi-value a HashMap."
8315302,1,0,1,java.util.HashMap,The HashMap is employed as an injected object.
8315302,1,0,1,java.util.HashMap,And I need those instance of HashMap can be injected for many times.
8315302,1,0,1,java.util.HashMap,"My trouble is, when I switch to another template, ANTLR seems to consider the second HashMap as a List -- multipul objects and null value."
8315302,1,0,1,java.util.HashMap,What about a HashMap?
8315302,1,0,1,java.util.HashMap,"Does StringTemplate consider the HashMap, key/value pair access, an object purposely, as a List and as multi-value injected by mistake?"
8315368,1,0,0,java.util.HashMap,"This should be converted to java HashMap, where there can be only one instance of objects defined in step 1) but there will be a new instance of objects defined in step 2) for each mapping."
8316087,2,1,7,java.util.HashMap,"If Beer is not a good candidate for comparisons (most things aren't) then consider using HashMap instead, and overriding equals() and hashCode() on Beer (see Effective Java Chapter 3 for a great reference on this)."
8316153,2,0,1,java.util.HashMap,You could just use a HashMap.
8324520,2,1,6,java.util.HashMap,The problem is that you are using the debugger to check the contents of the HashMap.
8324520,2,1,6,java.util.HashMap,add the following to the end of your code to see what is really in the HashMap:   code.
8327399,2,0,4,java.util.HashMap,"Why not take a collection, likely a Map such as a HashMap, and use it as the nucleus of your own combo box model class that implements the ComboBoxModel interface?"
8328196,2,0,3,java.util.HashMap,"Java don't have associative arays, use HashMap instead http://developer.android.com/reference/java/util/HashMap.html code."
8328182,2,0,2,java.util.HashMap,You can look at the examples in HashMap.
8342534,2,0,2,java.util.HashMap,So what you need is a tool that compiles a HashMap which contains method name + file name + line number as keys and the value max_stack as values.
8331522,2,1,3,java.util.HashMap,"You should create a HashMap, say something like:   Map linkSet = new HashMap(); And whenever you click on the drawing and create a label, add the JLabel and the point on the image to the set using the put method with the JLabel as the key and the Point as the value."
8337161,1,0,3,java.util.HashMap,Hibernate One-to-many HashMap not updating on child.
8342083,1,0,0,java.util.HashMap,"I want to send whole HashMap of data via POST for filling report and then return this report as XLS file stream, so the user should get ""Save as..."" dialog."
8344967,2,0,1,java.util.HashMap,"However if most elements are empty (no paths), you could use instead a HashMap<Pair, Set<Path>>, where Pair is just some object that stores (X, Y)."
8342814,1,0,0,java.util.HashMap,PipedOutputStream in HashMap for threads.
8342814,1,0,0,java.util.HashMap,They do share a common HashMap.
8342814,1,0,0,java.util.HashMap,"Because all threads can access the HashMap, is it ok to store there all the streams?"
8342927,2,0,0,java.util.HashMap,"HashMap is not synchronized, so you have to add your logic or use a synchronized collection."
8344337,1,0,0,java.util.HashMap,"The approach I am thinking is simple: in a class (say Base) which gets to be loaded early enough, a registry (e.g., a HashMap) of plugin objects will be maintained, each of which will later on be used for invoking some of their methods."
8345505,2,1,0,java.util.HashMap,"You make your list of Strings, and then you can make a `HashMap like so: code."
8346132,1,0,0,java.util.HashMap,HashMap updating ArrayList.
8346132,1,0,0,java.util.HashMap,"I'm just starting to learn to use HashMap and reading the java tutorial, but I'm having trouble."
8346132,1,0,0,java.util.HashMap,"I'm trying to update the List inside a HashMap but I want to get the List of that key, is there a way to update a specific List of the key instead of having to make...5 different Lists and updating those?"
8346493,2,0,1,java.util.HashMap,"If you used a HashMap with the name as the index, then adding (with .put) to the HashMap will add if new but not duplicate if repeated."
8346797,2,0,1,java.util.HashMap,"Then, check to see if a token has an opening bracket, and if so you put it as a HashMap key."
8352378,1,0,20,java.util.HashMap,Why does HashMap require that the initial capacity be a power of two?
8352378,1,0,20,java.util.HashMap,I was going through Java's HashMap source code when I saw the following code.
8352378,1,0,20,java.util.HashMap,I also see that the constructor which allows creating a HashMap with a custom capacity converts it into a power of two: code.
8353320,2,0,2,java.util.HashMap,The ideal situation is actually using prime number sizes for the backing array of an HashMap.
8353320,2,0,2,java.util.HashMap,"Therefor you'll find another very important method in Java's HashMap implementation, which is the hash(int), that compensates for poor hashcodes."
8361777,1,0,3,java.util.HashMap,Java HashMap: adding to arraylist.
8361777,1,0,3,java.util.HashMap,I'm using the HashMap class and it looks like this: code.
8361826,2,0,2,java.util.HashMap,"Get the ArrayList based on the String key, do add() to the ArrayList and then put it back into the HashMap (optional, since the map already holds the reference to it); code."
19129236,2,0,0,java.util.HashMap,"private static HashMap> mmArrays = new HashMap>(); mmArrays.put(key,data);"
8361987,1,0,0,java.util.HashMap,Java 1.6 memory leaks: HashMap and ArrayList.
8361987,1,0,0,java.util.HashMap,Case 1:  Looping through the entryset of a HashMap causes the object java.util.HashMap&EntryIterator to grow.
8363569,2,1,1,java.util.HashMap,"The problem in your code was that you can't retrieve something else than EventBase from a HashMap<…, EventBase> because there's no way to statically prove this is typesafe."
8362913,1,0,5,java.util.HashMap,"The json is a simple HashMap, but the mapper is complaining when I try and deserialize."
8362913,1,0,5,java.util.HashMap,My serialized HashMap string..... code.
8363592,2,0,4,java.util.HashMap,"Easy method: Use a HashMap<Integer, Integer>."
8363592,2,0,4,java.util.HashMap,"When you find a number from the user that's already contained in the HashMap, change the value for that key (the user's number) to the current value + 1."
8363592,2,0,4,java.util.HashMap,"Once you're done inputting, go through the elements of the HashMap to find the largest value."
8365838,1,0,0,java.util.HashMap,"At first I tried to insert a HashMap, runtime gave me IllegalArgumentException: Non-serializable object Then I tried wrapping it in a class that is implementing Serializable, but runtime still throws the above exception."
8366049,2,1,1,java.util.HashMap,The Non-serializable object exception is coming from an object inside the HashMap.
8366049,2,1,1,java.util.HashMap,HashMap itself is serializable but all objects being serialized need to be serailizable.
8366244,2,0,0,java.util.HashMap,See: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html Note that some people suggest using a small class rather try to use a generic structure like Entry (which actually was intended to represent a key/value pair in a Map).
8368718,2,1,8,java.util.HashMap,"You should go and find a datastructure to hold them (a HashMap seems suitable, for example), add all Panels and use a key to get them back and add labels as you want."
8368757,2,0,0,java.util.HashMap,You can use a HashMap coupled to an ArrayList : code.
8368757,2,0,0,java.util.HashMap,You can also use a Date instead of String for the HashMap key.
8368757,2,0,0,java.util.HashMap,"In fact, instead of using HashMap and ArrayList, you can use any combination of classes implementing the Map interface and the List or Set interface"
8370542,1,0,0,java.util.HashMap,"I have a HashMap with Objects (key is a String, value is an ItemDTO)."
8370542,1,0,0,java.util.HashMap,"I do change the order of ItemDTOs within the newly created list of ItemDTOs (step 2 above), but I don't change the ItemDTOs themselves (hence they are static and within the HashMap I mentioned at the beginning)."
8371831,1,0,1,java.util.HashMap,"When I read this file I have two put the two object ""Company"" and ""Person"" into two different HashMap."
8373365,1,0,0,java.util.HashMap,HashMap returning null.
8373365,1,0,0,java.util.HashMap,"This takes my string, and looks at a HashMap map I've created to see if their is a room in that direction key."
8373365,1,0,0,java.util.HashMap,I'm afraid the issue is how I'm creating my room's direction HashMap: In my Room Class: code.
8373365,1,0,0,java.util.HashMap,"The errors occur on the commented line but I think it's really with my Room Class methods, or the way I'm creating the HashMap(I've never used one before)."
8373403,2,1,1,java.util.HashMap,"FWIW, a call to HashMap<String,Room>.get(x) will return null if (and only if) one of the following:  there is no map entry for x, or the map entry for x is null."
8373462,2,0,1,java.util.HashMap,"It's just Direction.NORTH, and it won't compile if you don't get it right This is useful for callers as well as implementers  you can create your Map as an EnumMap instead of HashMap, which is more efficient (though this may not be an issue in your application)"
8375708,2,0,1,java.util.HashMap,Looking at the HashMap class it includes the add operation and it does not specify it as optional.
8375708,2,0,1,java.util.HashMap,"Thus, every implementation of the Java library will have to include an implementation of this method for their HashMap class."
8379152,2,0,0,java.util.HashMap,"But without that (potentially rather complex analytics, perhaps not this simple case though) the compiler can't really know what is assigned to h. You can assign a PrinterStateReasons to a HashMap, just not to a LinkedHashMap."
8379120,2,1,4,java.util.HashMap,"Your h variable is declared as being a HashMap[], which means that as far as h is concerned, anything implementing HashMap is a valid element."
8379120,2,1,4,java.util.HashMap,"PrinterStateReasons implements HashMap, and so h[0] = new PrinterStateReasons(); is a perfectly valid statement."
8379120,2,1,4,java.util.HashMap,"Similarly, since LinkedHashMap implements HashMap, the statement HashMap[] h = new LinkedHashMap[4]; is a perfectly valid statement."
8380058,2,0,0,java.util.HashMap,"If the webapp only ever reads the hash table, then a plain HashMap is sufficient."
8380058,2,0,0,java.util.HashMap,"If the webapp needs to read and update the hash table, then the choice is between a ConcurrentHashMap or a synchronized wrapper for a regular HashMap."
8380058,2,0,0,java.util.HashMap,"Otherwise, a HashMap with a synchronization wrapper will be sufficient."
8380454,2,1,2,java.util.HashMap,"As you're not updating the Hashtable, you don't require synchronization, so I'd use a HashMap instead."
8398271,2,1,1,java.util.HashMap,"In fact, this hashmap of hashmaps of hashmaps is actually a tree, but because you don't use any interface above HashMap/Value you forced to use cast on Object(it still Okay, it just not 'right' OOP way to do things)."
8383563,1,0,2,java.util.HashMap,"I've tried using Map, HashMap and LinkedHashMap as a type for AutoBean factory and always after serializing it's changing initial elements order."
8928286,2,0,0,java.util.HashMap,"Apparently, and at least in GWT 2.4, LinkedHashMap.clone() in GWT returns a HashMap, in contrast to pure Java behavior."
8390257,2,0,1,java.util.HashMap,"Some map   implementations, like the TreeMap class, make specific guarantees as   to their order; others, like the HashMap class, do not."
8389378,2,0,6,java.util.HashMap,So overriding toString basically creates a HashMap of the enum values.
8390693,2,0,2,java.util.HashMap,Use HashMap: code.
8390700,2,1,1,java.util.HashMap,"Use a map implementation, like HashMap."
8392584,2,0,0,java.util.HashMap,"If you are trying to store a map of ID to entity, then you should probably use a HashMap<Integer,EntityC4> instead."
8392942,1,0,1,java.util.HashMap,Put ResultSet into HashMap?
8392942,1,0,1,java.util.HashMap,I have an mySQL ResultSet and I want to store that in my HashMap: code.
8393410,1,0,0,java.util.HashMap,Say I have a HashMap of HashMaps defined like this: code.
8393629,1,0,0,java.util.HashMap,I used HashMap and got the result displayed as below code.
8395180,1,0,5,java.util.HashMap,I have a HashMap where the key is of type String and the value is of type LinkedList of type String.
8400326,1,0,4,java.util.HashMap,(ClassInfoCache.java:156)        [exec]     at com.sun.corba.ee.impl.orbutil.ClassInfoCache.get(ClassInfoCache.java:281)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputStream_1_0.read_value(CDRInputStream_1_0.java:1097)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputStream_1_0.read_value(CDRInputStream_1_0.java:935)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputStream_1_0.read_abstract_interface(CDRInputStream_1_0.java:928)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputStream_1_0.read_abstract_interface(CDRInputStream_1_0.java:918)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputObject.read_abstract_interface(CDRInputObject.java:557)        [exec]     at com.sun.corba.ee.impl.io.IIOPInputStream.readObjectDelegate(IIOPInputStream.java:391)        [exec]     at com.sun.corba.ee.impl.io.IIOPInputStream.readObjectOverride(IIOPInputStream.java:544)        [exec]     at java.io.ObjectInputStream.readObject(ObjectInputStream.java:345)        [exec]     at java.util.HashMap.readObject(HashMap.java:1030)        [exec]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        [exec]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)        [exec]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)        [exec]     at java.lang.reflect.Method.invoke(Method.java:597)        [exec]     at com.sun.corba.ee.impl.io.IIOPInputStream.invokeObjectReader(IIOPInputStream.java:1832)        [exec]     at com.sun.corba.ee.impl.io.IIOPInputStream.inputObject(IIOPInputStream.java:1214)        [exec]     at com.sun.corba.ee.impl.io.IIOPInputStream.simpleReadObject(IIOPInputStream.java:425)        [exec]     at com.sun.corba.ee.impl.io.ValueHandlerImpl.readValueInternal(ValueHandlerImpl.java:308)        [exec]     at com.sun.corba.ee.impl.io.ValueHandlerImpl.readValue(ValueHandlerImpl.java:274)        [exec]     at com.sun.corba.ee.impl.encoding.CDRInputStream_1_0.readRMIIIOPValueType(CDRInputStream_1_0.java:1015)        [exec]     ... 98 more        [exec] |#]        [exec]  Am I missing something?
8402455,1,0,1,java.util.HashMap,"The error occurs after 3000/4000 lines , the memory is acting like this  start value: 14443720  **:13572128  **:12078128  **:10575592 **:14126224  ->new increase always lower than start value then decreasing **:12559920 **:11811440 **:10229128 **:13751400 -> ... **:13011080 The ""coding maps"" are maps generally of the type HashMap<Integer,Hashmap<Integer,String>>."
8402980,2,0,0,java.util.HashMap,I'm not sure I understand your HashMap of HashMaps.
8402980,2,0,0,java.util.HashMap,If there is a HashMap per line in your text file then that is going to take up a lot of memory.
8407969,1,0,6,java.util.HashMap,"I would like to have a HashMap<String, String>, that every day at midnight, the cache will expire."
8408054,2,0,2,java.util.HashMap,"Create a TimerTask that can clear, or recreate, the HashMap and via a Timer instance arrange for it to be executed at midnight."
8408338,2,0,0,java.util.HashMap,"You could extend the HashMap class with your specific generic definitions and make a generic class that takes the <T> as argument, something like this: code."
8408867,2,0,2,java.util.HashMap,"Each occurence of a wildcard corresponds to a different type, and the only appropriate scope for a type parameter representing the type is the entry in the outer HashMap."
8408867,2,0,2,java.util.HashMap,"Unfortunately, HashMap does not allow constraining the entry type in its type parameter like: code."
8410043,2,0,0,java.util.HashMap,"What you probably want is: HashMap<Class<?>, HashMap<Long, Object>>."
8410766,1,0,0,java.util.HashMap,Possible Duplicate: Differences between HashMap and Hashtable?
8410814,2,0,0,java.util.HashMap,"here is a good link, you can refer to that: Differences between HashMap and Hashtable?"
8410819,2,0,1,java.util.HashMap,I think you have to do the following things first before asking:  Search on stackoverflow Search on Google   The following results are obtained by above two methods: StackOverflow: Differences between HashMap and Hashtable?
8410819,2,0,1,java.util.HashMap,Google what is the difference between HashMap and Hashtable Difference between HashMap and HashTable?
8413608,1,0,9,java.util.HashMap,I want to send a HashMap object to a ReST resource as a POST variable.
8413608,1,0,9,java.util.HashMap,Is there any other way to send a HashMap object as POST variable?
8420184,2,1,20,java.util.HashMap,"However, when your client application needs to provide your REST service with some sort of data (in your case a HashMap containing I suppose a lot of important information) it would Serialize it to XML first, then send it to the service which would then deserialize and use it."
8420184,2,1,20,java.util.HashMap,"Unfortunately, Jersey is not able to automatically marshal/unmmarshal HashMaps so if you just provided HashMap parameter in your newProj method, you would get an exception."
8420184,2,1,20,java.util.HashMap,So how to send a HashMap to your service?
8420184,2,1,20,java.util.HashMap,"Now you can easily pass your HashMap<String, String> to your REST service."
8417356,2,0,4,java.util.HashMap,"This is going to be null if that entry isn't in the HashTable (BTW, you should be using HashMap)."
8420463,2,1,6,java.util.HashMap,Trove doesn't handle concurrent use itself; it's like java.util.HashMap in that regard.
8420463,2,1,6,java.util.HashMap,"So, like HashMap, even seemingly innocent, read-only methods like containsKey() could throw a runtime exception or, worse, enter an infinite loop if another thread modifies the map concurrently."
8420463,2,1,6,java.util.HashMap,"I don't know the internals of Trove, but with HashMap, rehashing when the load factor is exceeded, or removing entries can cause failures in other threads that are only reading."
8426175,2,0,1,java.util.HashMap,"I can't guarantee how much of an improvement it would make, but try using HashMap instead of Hashtable."
8426175,2,0,1,java.util.HashMap,"HashMap is not synchronized, which I'm guessing you don't need here, since everything should be done on a single thread for your UI anyway."
8426175,2,0,1,java.util.HashMap,See Differences between HashMap and Hashtable?
8427488,1,0,3,java.util.HashMap,HashMap destroys encoding?
8427488,1,0,3,java.util.HashMap,"ASCII but ""special chars  and languages"" like ""..офіціалнов назвов Російска.."" So let's assume that this is the content of the file: офіціалнов назвов Російска Now I'd like to split the whole file content in single words and create another file which list all these words in lines like:  офіціалнов назвов Російска  My problem is: if I put these single words into an HashMap and read the values from it -> the encoding is lost."
8427488,1,0,3,java.util.HashMap,The funny thing is: if I don't put the values into the HashMap but store them immediately into the output file like: code.
8428127,1,0,0,java.util.HashMap,Accessing a HashMap of custom objects in request scope after a redirect.
8428127,1,0,0,java.util.HashMap,I have a HashMap of custom objects being passed to a JSP using RequestDispatcher and I am able to access the object and its properties using JSTL.
9095052,2,0,0,java.util.HashMap,"But, if you want that HashMap, in response.sendRedirect, you can put that in session like  code."
8436598,1,0,1,java.util.HashMap,ArrayList and HashMap both got the same issue.
8439962,1,0,1,java.util.HashMap,the problem is the method load into the HashMap listaordini only the numbers 03 and 2 while the numbers before aren't considerer.why?
8440087,2,1,2,java.util.HashMap,"The problem is, a map (such as a HashMap) must have a unique mapping for each key."
8444039,2,0,4,java.util.HashMap,"If you use a HashMap it's O(n) that way, instead of your algorithm's O(n^2)."
8444174,2,0,1,java.util.HashMap,HashMap !
8448693,2,0,1,java.util.HashMap,@Peter is certainly right (damn him for his fast fingers) that you should consider using a non-synchronized class to implement this and that HashMap is better to use.
8448208,2,0,1,java.util.HashMap,Often the Map interface and HashMap or LinkedHashMap class are better choices as they are not sunchronized.
8450442,1,0,1,java.util.HashMap,HashMap search and match regex.
8450442,1,0,1,java.util.HashMap,I am trying to search on a HashMap and match specific string to nodes which represent string.
8451177,1,0,6,java.util.HashMap,Update: Let's assume it's not HashMap so the map is implemented as a tree of some kind.
8451206,2,0,0,java.util.HashMap,Look here to see if this might be an alternative for you: What happens when a duplicate key is put into a HashMap?
8451526,1,0,5,java.util.HashMap,is searching Key in HashMap is faster than TreeMap?
8451526,1,0,5,java.util.HashMap,"Only in terms of space required to store n elements, which would be more efficient between a TreeMap and a HashMap implementation?"
8451606,2,0,3,java.util.HashMap,"A HashMap has a constant-time average lookup (O(1)), while a TreeMap's average lookup time is based on the depth of the tree (O(log(n))), so a HashMap is faster."
8451551,2,1,7,java.util.HashMap,HashMap is O(1) on average for simple key lookups.
8451551,2,1,7,java.util.HashMap,"Class HashMap<K,V>  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
8455048,2,0,2,java.util.HashMap,java.util.HashMap is not ordered collection.
8455062,2,1,2,java.util.HashMap,HashMap is not ordered.
8455073,2,0,1,java.util.HashMap,"HashMap is not neither sorted nor order, you can use TreeMap."
8460024,2,0,2,java.util.HashMap,"If you want fast reads as well as fast insertion, you can use Dictionary, HashMap."
8460186,1,0,0,java.util.HashMap,I had a HashMap and I used the clone function to make a deep copy.
8461593,1,0,1,java.util.HashMap,I have tried using a HashMap.
8464735,1,0,2,java.util.HashMap,I have a problem with HashMap.
8464775,2,0,0,java.util.HashMap,"no, you can't sort by value using HashMap or any of the standard jdk map implementations."
8464783,2,0,0,java.util.HashMap,"A HashMap does not maintain an order, so it can't be sorted."
8464794,2,1,3,java.util.HashMap,HashMap is an implementation of Map insteface that does not preserve any order of keys.
8465322,2,0,0,java.util.HashMap,Please see Limiting the max size of a HashMap in Java Another approach is to use Guava Collections MapMaker interface: http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/collect/MapMaker.html
8465372,2,0,0,java.util.HashMap,If you want to set the maximum number of possible entries inside the map you should use LinkedHashMap instead of a standard HashMap .
8469883,2,1,4,java.util.HashMap,"I would also check that your function's return type and the local variable are defined as HashMap<String, Boolean> as well."
8477899,2,1,2,java.util.HashMap,"If I got you problem, You can create new map(HashMap I reccomend) and put values using column name or index as key."
8478952,2,1,3,java.util.HashMap,with data being an HashMap defined as explained here (first example).
8481418,1,0,2,java.util.HashMap,Ecore modeling to generate a HashMap dto that holds a HashMap.
8481418,1,0,2,java.util.HashMap,"How to create DTO for HashMap<String, HashMap<String, String>> using Eclipse Modeling EMF?"
8488680,2,0,0,java.util.HashMap,I would suggest creating a new HashMap and use the putAll method passing in the Multimap.asMap() result.
8488680,2,0,0,java.util.HashMap,HashMap is serializable.
8492691,1,0,0,java.util.HashMap,"and now i repeat the same, the program works but in serialized output, i do not see this HashMap."
8492691,1,0,0,java.util.HashMap,"What is the problem, is there some different approach used to serialize HashMap type objects??"
8495557,1,0,1,java.util.HashMap,"replaceAll, regex and HashMap return me a NullPointerException."
8496184,2,1,2,java.util.HashMap,"A better solution would be to use a HashMap<Integer, String>, with the id being the key and the name being the value."
8496220,2,0,0,java.util.HashMap,"If you want to retrieve the elements in id order, you want a HashMap if the ids are all regular in the sense that you can be sure of things like ""ids are 1 to 10 and there are no unused ids""."
8496869,1,0,0,java.util.HashMap,Multiple threads will read and write to the HashMap.
8496869,1,0,0,java.util.HashMap,"I was wondering if it would be best to remove the synchronized on the methods and just use Collections.synchronizedMap(new HashMap<String,RouterTableEntry())` what is the most sensible way in Java to do this?"
8625480,2,1,2,java.util.HashMap,Using a HashMap with same procedure will instead have complexity O(1).
8625480,2,1,2,java.util.HashMap,I defined Dictionary as a HashMap like this: code.
8625480,2,1,2,java.util.HashMap,Once HashMap is filled in whatever order I use procedure indicated by @dasblinkenlight to order it once and for all with complexity O(N) code.
8625480,2,1,2,java.util.HashMap,And from now on to have index position in alphatebetic order of word in dictionary only thing needed is to acces it's variable DictionaryPosition: since word is know you just need to access it and this has constant cost in a HashMap.
8503797,2,1,2,java.util.HashMap,If you have duplicates you could construct HashMap that has the value as the key and the count as the value.
8512068,2,0,0,java.util.HashMap,An obvious one would be to just have a local in-memory HashMap.
8511990,1,0,4,java.util.HashMap,"For reasons outside the context of this question, I want to place a few components (bar chart, and a table) on a small/simple JasperReport, and I want the data to come from a HashMap that I'll pass in."
8512569,2,0,0,java.util.HashMap,"Actually, I looked at the current HashMap implementation (preferred over Hashtable as everyone points out)."
8512570,2,0,0,java.util.HashMap,"As already said, it's better to use HashMap."
8512419,2,1,6,java.util.HashMap,"First, I suggest you use a HashMap instead of a Hashtable, for the same reason that ArrayList is a better choice than a Vector: less overhead due to useless synchronization."
8512419,2,1,6,java.util.HashMap,My guess is that iterating through an ArrayList will be faster than iterating through the Set returned by a Hashtable's (or HashMap's) entrySet() method.
8512419,2,1,6,java.util.HashMap,"Obviously, changes to the display list (other than appending or chopping off the last element) are going to be faster for a HashMap than for an ArrayList."
8512419,2,1,6,java.util.HashMap,"Clearly using an ArrayList is a big win (by a factor of 3-4) over a HashMap, at least for my style of iterating through a HashMap."
8512426,2,0,1,java.util.HashMap,"But note that, unless you need multithread synchronization, you should use a HashMap rather than a Hashtable."
8512429,2,0,0,java.util.HashMap,"A) don't use Hashtable, use HashMap."
8512429,2,0,0,java.util.HashMap,"Lookup will be faster in the HashMap, Iteration will likely be the same as both use arrays internally."
8512429,2,0,0,java.util.HashMap,"(but the arrays in a HashMap have gaps, so that might give a slight advantage to the ArrayList)."
8512431,2,0,0,java.util.HashMap,Use java.util.HashMap instead of java.util.Hashtable if you don't need retrieval synchronization.
8513203,2,0,0,java.util.HashMap,"Instead of an array I would prefer java.util.HashMap where you can easily put key-value pairs into, besides that you don't need to worry about initializing your size or out of bounds errors."
8521210,1,0,0,java.util.HashMap,"Looking for a way to make a simple database or list in Java (More advanced than HashMap, easier than JDBC)."
8521210,1,0,0,java.util.HashMap,"I've tried with HashMap, hashtable as well as ArrayList of old, but it gets really messy when I've got to store, for example, the product name (Str), selling price (int), buying price (int), a description (Str) and a product type (boolean)."
8521210,1,0,0,java.util.HashMap,"What I'm looking for is a kind of HashMap that allows more ""rows""."
8524902,1,0,0,java.util.HashMap,HashMap put or putAll?
8527367,2,0,2,java.util.HashMap,"You could use a HashMap<Integer, Double>."
8532156,2,0,0,java.util.HashMap,"The mechanism is supposed to let the bitmaps be garbage collected, so an ordinary HashMap to SoftReferences is what you actually need."
8531769,2,0,0,java.util.HashMap,The class HashMap is not thread-safe.
8531887,2,0,1,java.util.HashMap,"Even if multiple threads access the method, each will have a unique HashMap to work with."
8532421,2,0,0,java.util.HashMap,"HashMap is not thread-safe, but assuming you never publish instance a nor its two hash maps outside foo(), then all three are confined to one thread and need not be thread-safe."
8534354,1,0,1,java.util.HashMap,Compare HashMap with Objects.
8534440,2,0,0,java.util.HashMap,First thin is that the key should be Integer and value should be CustomObject and then the HashMap can be sorted based on the comparator.
8534440,2,0,0,java.util.HashMap,But by default the HashMap or if you wan to sort on CustomObject then you have to make the CustomObject implements Comparable and write the compare method in that which will make the HashMap to sort based on CustomObject.
8535554,1,0,7,java.util.HashMap,TreeSet/TreeMap equivalent for HashSet/HashMap (custom hasher).
8535554,1,0,7,java.util.HashMap,Edit: @Max brings up a good technical point about equals() -- fair enough; and it's true for TreeMap and HashMap keys via Map.containsKey().
8537135,2,0,3,java.util.HashMap,"Example of this would be extending HashMap, which accepts null values and keys, with some implementation which prohibits null values in calls to it's methods."
8537054,1,0,2,java.util.HashMap,"This maps to two tables, an ENTITY table, and an ENTITY_DATA table which contains a row for each element in the HashMap."
8537054,1,0,2,java.util.HashMap,It maps the values in the HashMap as VARCHAR(256) and I need it to be VARCHAR(1024).
8541012,2,1,3,java.util.HashMap,"For counting you might want to use a Map<Character, Integer> counter like java.util.HashMap."
8543981,2,0,3,java.util.HashMap,(The registry has to be a class maintaining a HashMap - it cannot be a HashMap.).
8543981,2,0,3,java.util.HashMap,the HashMap) - and then calls registryListener.connectionAdded(...); This registryListener is a instance of TcpConnectionManager.
8544136,2,0,1,java.util.HashMap,Internally it is implemented more effective than ordinary HashMap.
8544161,2,0,1,java.util.HashMap,Then use a HashMap with that member as the key.
8550588,1,0,0,java.util.HashMap,I require to get the list of keys where the values are equal for those keys from a HashMap.
8550626,2,0,1,java.util.HashMap,The most basic method will be to:  Get the first key of the HashMap and iterate over the map checking for keys with the same value.
8555366,2,0,2,java.util.HashMap,"Then use a HashMap<JButton, Icon> and associate each button with an image."
8558840,1,0,0,java.util.HashMap,"Ten days of running give 420 MB memory leak of the following objects: - java.lang.management.MemoryUsage, - [C (array of char), - java.util.HashMap$Entry, - [Ljava.util.HashMap$Entry (array of HashMap$Entry), and some others."
8563058,1,0,0,java.util.HashMap,JSF HashMap property binding.
8565058,1,0,0,java.util.HashMap,Binding A HashMap Instance In Guice.
8565193,2,1,2,java.util.HashMap,"If you just need the returned Map injected, I would ...  define a subclass ""@Singleton public class MyInjectedMap extends HashMap { }"" bind a Provider < MyInjectedMap > to produce instances"
8565160,1,0,0,java.util.HashMap,Check if Java ArrayList of HashMap contains a key.
8565160,1,0,0,java.util.HashMap,"I have this type ArrayList<HashMap<String,String>> ."
8567725,2,1,5,java.util.HashMap,There is a nice race condition with a non-thread-safe HashMap.
8567725,2,1,5,java.util.HashMap,Which puting into the HashMap with multiple threads can cause it to go into an infinite loop.
8567943,2,0,0,java.util.HashMap,"The action to check for existense of value in the HashMap and the update (or addition) of value should be ""guarded""."
8571178,2,1,4,java.util.HashMap,"For example, HashBiMap is backed by two HashMap instances and handles the dirty work for you."
8571187,2,0,0,java.util.HashMap,"Certainly for HashMap, where even if it provided searching for a key by value, would be inefficient."
8575307,1,0,2,java.util.HashMap,"and i get the following error when I try to do it   Can not instantiate value of type [map type; class java.util.HashMap, [simple type, class java.lang.String] -> [simple type, class java.lang.String]] from JSON String; no single-String constructor/factory method  So far I have the following but it does not seem to work."
8575433,1,0,2,java.util.HashMap,"From the reference link: How do you redirect to another URI and access an object from the previous modelAndView, if the public ModelAndView sendEmail() {} had been modified and say, other objects like Collection or HashMap would have added in the Model Object, then how would you have accessed in the /nextPageclass method ?"
8578443,2,0,0,java.util.HashMap,"For example, in a HashMap with internal table (array) for entries with size 8 it will use last 3 bits of hash numbers to adress table entry."
8579849,2,0,3,java.util.HashMap,"In Java, the size() of a HashMap is of type int, so there's an upper bound of 2^31-1 elements in the map."
8580382,2,0,1,java.util.HashMap,For Java: HashMap has an underlying store is an array which is always a power of 2 in size.
8580056,2,1,2,java.util.HashMap,"If there is an inherent flaw in the hashing function used by HashMap<K,V>, a ""funnel"" could occur where the keys ab and ba both map to, say, thing1."
8580496,1,0,11,java.util.HashMap,What happens when HashMap or HashSet maximum capacity is reached?
8580496,1,0,11,java.util.HashMap,"Just a few minutes back I answered a question asking about the ""Maximum possible size of HashMap in Java""."
8580496,1,0,11,java.util.HashMap,"As I have always read, HashMap is a growable data-structure."
8580496,1,0,11,java.util.HashMap,"But someone corrected me saying that since the size() method of HashMap returns an int, there is a limit on its size."
8580496,1,0,11,java.util.HashMap,"I just tried to test it on my local but failed, I need more than 8GB memory to insert more than 2,147,483,647 integers in the HashMap, which I don't have."
8580496,1,0,11,java.util.HashMap,"My questions were:  What happens when we try to insert 2,147,483,647 + 1 element in the HashMap/HashSet?"
8580496,1,0,11,java.util.HashMap,"If not what happens to the HashMap/HashSet, its already existing elements and the new element?"
8581452,2,0,1,java.util.HashMap,"If I understand you correctly, you could use a HashMap or HashSet to map your writers to a key word."
8581235,2,0,1,java.util.HashMap,"In case you want to maintain the list of BufferedWriter reference, then I gues it would good to use a Map (HashMap<String, BufferedWriter>) and the do map.put(keyword, writer)."
8588246,1,0,2,java.util.HashMap,How to use ArrayAdapter-HashMap- with EndlessAdapter class?
8589642,2,1,2,java.util.HashMap,"This will require you to learn how to create a custom ArrayAdapter, as you will quickly discover that ArrayAdapter knows little about how to use a HashMap<String, String>."
8589642,2,1,2,java.util.HashMap,"You will need to extend ArrayAdapter to your own WhateverThisIsAdapter, where you override getView() to handle pouring data from your HashMap<String, String> into inflated rows, properly handling your row recycling."
8589564,2,0,1,java.util.HashMap,"BTW to improve your code change your map definition to:  Map<Block, List<Vector2f>> blockMap = new HashMap<Block, List<Vector2f>>(); Now you can use any type of list."
8590187,2,0,3,java.util.HashMap,"If you can somehow define a ""key"" for your search terms, you could use a HashMap data structure (in java.util) as a very fast lookup table."
8590307,2,0,1,java.util.HashMap,"If so, as a general solution you can create a HashMap where keys a class that corresponds to your search criteria."
8590591,2,0,2,java.util.HashMap,"You can just use a HashMap<String, String> which maps the conflicts/differences to the consensus symbols."
8591315,2,0,0,java.util.HashMap,"Since a HashMap can only sort on one hash for every object, you will never be able to select the distinct lists 'out of the box'."
8591315,2,0,0,java.util.HashMap,"What I would suggest is using a Tuple with two keys, and then iterate over the HashMap and select only those elements that have tuple.key1=X."
8597482,1,0,1,java.util.HashMap,"(and the map will not otherwise be used)  In either of these cases, does ConcurrentHashMap offer you anything additional in terms of thread safety above an ordinary HashMap?"
8597573,2,0,0,java.util.HashMap,"In the second case, there is a concern since access to a HashMap that modifies it structurally (adding a value) requires synchronization."
8599002,1,0,1,java.util.HashMap,"the object is properly created, no exception occurs, the fields ""level"" and ""salary"" are correctly populated, but the ""details"" field (originally a HashMap) is always null."
8599348,1,0,1,java.util.HashMap,"HashMap ""method put() is undefined for the type HashMap""."
8599348,1,0,1,java.util.HashMap,"I programmed the following into Eclipse but the program keeps giving me the error: The method put(String, String) is undefined for the type HashMap.As far as I know, put() is the correct method to use to input values into a HashMap."
8600153,2,0,0,java.util.HashMap,Perhaps you are importing a HashMap class from some other library?
8600153,2,0,0,java.util.HashMap,It should be java.util.HashMap.
8601049,2,0,4,java.util.HashMap,"I haven't looked at your code in detail, but it looks like you're storing a lot of data in a HashMap; more than fits in memory when you have a lot of records."
8604023,1,0,2,java.util.HashMap,I am not sure if this is better than creating new HashMap() every time.
8604478,2,0,0,java.util.HashMap,The problem you have is that most of the objects are Map.Entry objects in the HashMap.
8604478,2,0,0,java.util.HashMap,While you can recycle the HashMap itself (and its array) these are only a small portion of the objects.
8604371,2,0,0,java.util.HashMap,"I think what you want is an Object pool kind of thing, where you get an object(in your case, its HashMap) from the object pool, perform your operations, and if that Object is no longer needed you put it back in the pool."
8604136,2,0,0,java.util.HashMap,I can 99% guarantee you that the bottleneck will never be in new HashMap() call.
8605365,1,0,2,java.util.HashMap,Can Java HashMap create deadlocks?
8605365,1,0,2,java.util.HashMap,I have a HashMap that many threads read and write to at the same time.
8605444,2,0,0,java.util.HashMap,HashMap is not thread-safe.
8605444,2,0,0,java.util.HashMap,"To make HashMap thread-safe, utilize Collections.synchronizedMap() method."
8605825,2,0,0,java.util.HashMap,A deadlock is not possible using an unadorned HashMap.
8605825,2,0,0,java.util.HashMap,The HashMap class does no locking so there is not opportunity for deadlock.
8605825,2,0,0,java.util.HashMap,"However, if you used Collections.synchronizedMap(...) to wrap a HashMap and you used this in conjunction with other locking, you could get a deadlock ... if different threads acquired the locks on the objects in a different order."
8605825,2,0,0,java.util.HashMap,"And obviously, multiple threads accessing the same HashMap (which is not thread-safe) is hazardous."
8605825,2,0,0,java.util.HashMap,"Indeed, it might be possible for one thread to see an inconsistent state of a HashMap that causes it to go into an infinite loop; e.g."
8605392,2,0,0,java.util.HashMap,"HashMap is not synchronized, so yes, you will probably get in trouble."
8605397,2,0,1,java.util.HashMap,Of course a deadlock may happened when using a HashMap.
8605397,2,0,1,java.util.HashMap,But the deadlock is made by your code which is using the HashMap.
8605653,2,0,1,java.util.HashMap,HashMap isn't thread-safe and doesn't do any locking.
8605399,2,0,5,java.util.HashMap,"If you are only protecting your HashMap with one (correctly used) lock (or not at all), then deadlocks cannot occur."
8605399,2,0,5,java.util.HashMap,"Note that the standard HashMap is not itself protected in any way, so only your locking code (which you haven't posted) can cause a deadlock."
8605413,2,0,0,java.util.HashMap,When using an unsynchronized HashMap in a mutithreaded environment multiple modifications can create an internally currupted hash map structure.
8607187,2,0,3,java.util.HashMap,"This isn't much to go on, but let's see:  Say you have an int[10] and you want to store them in a HashMap (Dictionaries aren't used much these days)."
8607779,2,0,1,java.util.HashMap,You could drastically reduce your code replication (and the mistakes like this that code replication brings about) by iterating over the keys in your HashMap and executing the same same logic during each iteration (as opposed to copying/pasting the same lines of code for each field).
8609601,2,0,0,java.util.HashMap,"Use HashMap and put your packet on there, it will make it simple."
8662786,2,1,7,java.util.HashMap,"The invocation context just lazily creates a simple HashMap, as is done in org.jboss.ejb3.interceptor.InvocationContextImpl Glassfish does something similar."
8662786,2,1,7,java.util.HashMap,"Just as in JBoss AS, GlassFish too lazily creates a simple HashMap, in this case in com.sun.ejb.EjbInvocation."
8609255,1,0,0,java.util.HashMap,HashMap containing Array which contains a Object - confusion deluxe.
8609255,1,0,0,java.util.HashMap,I've some problems with a some JSON output which is stored in a HashMap.
8609255,1,0,0,java.util.HashMap,For converting the JSON output (comes form a API from the web) to HashMap I'm using a solution from stackoverflow (can't find the link - sorry!
8609255,1,0,0,java.util.HashMap,to store the JSON in the local HashMap.
8609696,1,0,1,java.util.HashMap,I created a HashMap : code.
8628995,1,0,1,java.util.HashMap,Java HashMap boxed key type autocast weirdness.
8628995,1,0,1,java.util.HashMap,Just came up upon a very strange behavior of Java HashMap.
8629022,2,0,0,java.util.HashMap,"The get method of the HashMap accepts an Object, regardless of the generic type."
8629679,1,0,1,java.util.HashMap,"Java to C#: HashMap, Map and Queue."
8629679,1,0,1,java.util.HashMap,"So, I know I have to use Dictionary instead of HashMap but I have some problems dealing with the generics in .Net."
8632530,2,0,0,java.util.HashMap,"To remove duplicate items, you can use HashMap (), where as the key codes will be used by the sum of the letters (as each letter has its own code - is not a valid situation where two different words have an identical amount of code numbers), as well as the value - this the word."
8632530,2,0,0,java.util.HashMap,"When adding a new word in a HashMap, if the amount of code letters of new words is identical to some of the existing key in a HashMap, then the word with the same key is replaced by a new word."
8632530,2,0,0,java.util.HashMap,"Thus, we get the HashMap collection of words without repetition."
8634622,1,0,0,java.util.HashMap,How java HashMap does chaining?
8634622,1,0,0,java.util.HashMap,I have read somewhere that HashMap uses chaining to resolve collisions.
8634645,2,0,1,java.util.HashMap,"From the documentation of HashMap.put(K, V):  Associates the specified value with the specified key in this map."
8634647,2,0,0,java.util.HashMap,You should read this What happens when a duplicate key is put into a HashMap?
8634648,2,1,7,java.util.HashMap,HashMap cannot store multiple values for the same key.
8634702,2,0,1,java.util.HashMap,"Java's HashMap does not do chaining, as the documentation for put(K, V) clearly states:  public V put(K key, V value) Associates the specified value with the specified key in this map."
8636524,1,0,0,java.util.HashMap,Iteration of arrays over a HashMap.
8638479,2,0,2,java.util.HashMap,HashMap data structures are O(1) access.
8641054,2,0,2,java.util.HashMap,"You need to put a HashMap<String,List<String>> into your (initially empty) hm field."
8642185,2,0,10,java.util.HashMap,HashMap has the same problem as well as a considerable overhead for each element stored in it.
8644216,2,0,3,java.util.HashMap,"You should map player (or his name) to score: Map<Player, Integer> player2score = new HashMap<Player, Integer>(); Then add players to map: int score = ...."
8657633,1,0,0,java.util.HashMap,Iterating through HashSet empties HashMap entry.
8657633,1,0,0,java.util.HashMap,For some reason when accessing the servlet after the first time the HashMap is empty of values.
8657867,2,0,0,java.util.HashMap,Iterating through HashSet empties HashMap entry  That doesn't happen.
8672615,2,0,0,java.util.HashMap,"If you create an additional layer to process these messages I'd suggest to process the message into a HashMap<String, Object> and return that to the application along with the header information."
8668410,2,1,0,java.util.HashMap,Make sure that you've prepared the HashMap beforehand: code.
8669187,2,1,0,java.util.HashMap,One way to do this is to use a HashMap.
8669414,1,0,2,java.util.HashMap,Decorating a HashMap adding randomness to prevent (D)DoS.
8669414,1,0,2,java.util.HashMap,EDIT by the way the point of the workaround here is to reuse all the existing HashMap (like the ConcurrentHashMap etc.)
8669414,1,0,2,java.util.HashMap,"I was wondering if it would be possible to write a decorator around a HashMap{String,String} so that to every String added a random (random from the point of view of an attacked) value was added to the String, like this: code."
8669575,2,0,0,java.util.HashMap,If you are really worried about this you could use a String class with your own hashCode() or you could override the built in hashCode for String or the value used by HashMap.
8669946,1,0,27,java.util.HashMap,In order to verify it I went through reference implementation of Java HashMap from Oracle and indeed found a static hash functions used:  code.
8671416,2,0,39,java.util.HashMap,"Understanding Attack Vector How HashMap's work Say a comment form on a blog accepts the parameters - first_name, last_name, comment as post parameters."
8671416,2,0,39,java.util.HashMap,"Internally, Tomcat stores these parameters as a HashMap."
8671416,2,0,39,java.util.HashMap,The logical structure of this HashMap is like this - code.
8754137,2,0,0,java.util.HashMap,Java HashMap/HashTable can do the 'resize' operation when the filled entry reach threshold.
8754137,2,0,0,java.util.HashMap,It's hard to say that there have an fixed bucket HashMap waiting for you.
8670310,2,0,0,java.util.HashMap,"To get a value from a HashMap use the get(key) method, when providing the key."
8675845,1,0,1,java.util.HashMap,My program is written in Java and it seems the java.util.HashMap cannot handle this (somehow it's extremely slow).
8675924,2,0,4,java.util.HashMap,"If a HashMap is extremely slow, then the two most likely causes are as follows:  The hashCode() and/or equals(Object) methods on your key class could be very expensive."
8675927,2,0,1,java.util.HashMap,A lot of times bad HashMap performance can be blamed on colliding hashes.
8675927,2,0,1,java.util.HashMap,"When there's a collision, HashMap generates a linked list for the colliding objects."
8675927,2,0,1,java.util.HashMap,"Worst-case if you're returning the same hash for all objects, HashMap essentially becomes a linked list."
8677045,2,0,0,java.util.HashMap,I came up with same same problem when adding list to a HashMap.
8678743,1,0,0,java.util.HashMap,"I guess there is problem with serialization or I cant send the obect of FilenetFolderImpl using ContentOfRootFolder which is of type           Map<String, Object> ContentOfRootFolder = new HashMap<String, Object>(); In any case I need to return the values of FilenetFolderImpl."
8687178,2,0,0,java.util.HashMap,"If you only wish to query based on TObject id, use HashMap HashMap<String,List<TStructureRow>.Store List against the id of TObject.You can retrieve list of all TStructureRow corresponding to a particular TObject id in (theoretically)constant average time."
8685473,2,0,4,java.util.HashMap,You could answer to your own question by reading the javadocs for HashMap.
8685473,2,0,4,java.util.HashMap,"If one thread is using one of a HashMap's collection iterators and another adds or removes an entry, then the first one is likely to get a ConcurrentModificationException."
8685473,2,0,4,java.util.HashMap,"If you solve the above two problems by locking out all other operations on the HashMap while your ""send to all"" operation is going on, you are unintentionally creating a performance bottleneck."
8685473,2,0,4,java.util.HashMap,You get a similar effect (but on a finer scale) if you simply put a synchronization wrapper around the HashMap.
8685473,2,0,4,java.util.HashMap,A simple (but not universal) solution to all 3 problems that probably will work in your use-case it to use a ConcurrentHashMap instead of a plain HashMap.
8691067,2,0,1,java.util.HashMap,"Since this is Java, I would use a HashMap<String, Set<String>>."
8689725,1,0,15,java.util.HashMap,"I put my buttons on a HashMap Collection and when I want to add them to my Class which extends Jpanel, I don't know how can I get the buttons from my collection."
8689753,2,0,2,java.util.HashMap,"It is supposed to be slightly more efficient to enumerate the entries of a map than to enumerate its values, but this factoid presumes that your Map is a HashMap, and also presumes knowledge of the inner workings (implementation details) of the HashMap class."
8689753,2,0,2,java.util.HashMap,"What can be said with a bit more certainty is that no matter how your map is implemented, (whether it is a HashMap or something else,) if you need both the key and the value of the map, then enumerating the entries is probably going to be more efficient than enumerating the keys and then for each key invoking the map again in order to look up the corresponding value."
8689798,2,0,1,java.util.HashMap,The order of iteration in a HashMap is pretty random.
8691984,2,0,1,java.util.HashMap,"Failure to do so will result in a violation of the general contract   for Object.hashCode(), which will prevent your class from functioning   properly in conjunction with all hash-based collections, including   HashMap, HashSet, and Hashtable."
8691992,2,0,0,java.util.HashMap,"This method returns the hash code value as an integer and is supported for the benefit of hashing based collection classes such as Hashtable, HashMap, HashSet etc."
8692903,2,0,0,java.util.HashMap,"Another way of getting the right filename, though, would be to simply use a HashMap to describe what image should be shown for what result."
8696308,1,0,2,java.util.HashMap,HashMap Alternative for Storing Integers.
8701763,2,1,5,java.util.HashMap,I think it would be a complete waste of time to use any form of HashMap.
8702893,2,1,1,java.util.HashMap,import edu.berkeley.nlp.mt.Alignment; import edu.berkeley.nlp.mt.SentencePair; import fig.basic.LogInfo; import java.io.Serializable; import java.util.ArrayList; import java.util.HashMap; import java.util.Iterator; import java.util.List; import java.util.Map; public abstract  class WordAligner implements Serializable { code. }
8703356,2,0,1,java.util.HashMap,"For convenience, you can wrap this into a custom collection that takes a Comparator parameter on retrieval operations, and use it as a key for an HashMap of all the PriorityQueues."
8703496,1,0,17,java.util.HashMap,I want to implement a HashMap in Python.
8703496,1,0,17,java.util.HashMap,depending on his input I am retrieving some information from the HashMap.
8703496,1,0,17,java.util.HashMap,"If the user enters a key of the HashMap,  I would like to retrieve the corresponding value."
8704394,2,0,0,java.util.HashMap,You could map the id of the checkbox to it's state using a global HashMap.
8708783,2,0,4,java.util.HashMap,"I would recommend creating a HashMap from set A, and then iterating through set B and checking if any element of B is in A."
8709807,2,0,3,java.util.HashMap,you can use HashMap like code.
8711370,2,0,0,java.util.HashMap,"You can find more info about Maps in the Java documentation: Map, HashMap."
8713253,1,0,0,java.util.HashMap,HashMap key with multiple values.
8713253,1,0,0,java.util.HashMap,I'm trying to bind some indexes and they're corresponding strings so I tried using a HashMap like so:  code.
8713839,1,0,0,java.util.HashMap,HashMap to JTable.
8713839,1,0,0,java.util.HashMap,"My application is working fine, except for printing the HashMap to JTable in VisaArtiklarWindow."
8714127,2,0,2,java.util.HashMap,"First: a HashMap is unordered, you probably want a TreeMap, so the rows are ordered by article number."
8724762,2,1,7,java.util.HashMap,make the  HashMap static code.
8733190,1,0,4,java.util.HashMap,"I can see that this is because of KeyEntity.hashCode - when inserting into the HashMap KeyEntity.handle is null, so all pairs will have the same hash code."
8734857,2,1,1,java.util.HashMap,"That said, your HashMap code looks reasonable and I'm not sure what is your question or problem??"
8745459,2,0,0,java.util.HashMap,"Alternately, you could also use a single HashMap with the HashMap.Key as the Integer and the HashMap.Value as count for that Integer."
8744653,1,0,2,java.util.HashMap,HashMap>.
8744653,1,0,2,java.util.HashMap,"Or is it better to convert the date to a string and then use HashMap<String, ArrayList<Email>> Note, the dates are added without hours, minutes and seconds, so just like 06/07/2010 for example."
8744811,2,1,4,java.util.HashMap,"DateTime has properly defined equals and hashcode methods, so using those as the key in a HashMap is perfectly OK."
8744811,2,1,4,java.util.HashMap,"Additionally, you could also consider using TreeMap rather than HashMap, so that your map is automatically sorted by date."
8744728,2,0,2,java.util.HashMap,"It's entirely unclear what the values within the HashMap and TreeMap are, because you're using the raw types."
8747574,2,0,3,java.util.HashMap,Create a class that implements it and holds onto your desired HashMap.
8747627,2,0,5,java.util.HashMap,"Hashtable is ""old"", so you should consider using a HashMap instead."
8747627,2,0,5,java.util.HashMap,Hashtable and HashMap order their entries in a pretty unpredictable manner.
8748758,2,0,1,java.util.HashMap,"The way you've described your use-case, why not consider the HashMap, or some other Map based implementation?"
8750213,1,0,4,java.util.HashMap,"Using JSTL how to ""put"" a value into a HashMap."
8750213,1,0,4,java.util.HashMap,I'm looking to set the key value pairing of a HashMap using JSTL only.
8750213,1,0,4,java.util.HashMap,Example of retrieving HashMap key/value pairs using JSTL: code.
8750952,1,0,4,java.util.HashMap,What do you exactly mean by HashMap's iterator is fail-fast and HashTable's enumerator isn't?
8751117,2,0,3,java.util.HashMap,"The best way is to probably look at the source for each class as implemented by the Open JDK implementation for each class; that way, you can get your answer straight from the horse's mouth, as it were :-) That aside, essentially, ""fail-fast"" in this sense means that an Iterator over a HashMap will throw an exception if it detects that another thread has modified the targeted HashMap - if you look in the source for HashMap, you will see this is done by simply checking a counter for the number of expected modifications."
8751117,2,0,3,java.util.HashMap,"If the modification count is different than the Iterator expected, that means that someone else has come in since the last check and messed around with the HashMap, and so the Iterator throws a ConcurrentModificationException."
9387272,2,1,0,java.util.HashMap,"However, your solution looks a little over-engineered: you don't need Lucene to compute term frequencies in memory (method calculate of CountWords), you just need to analyze your input and store frequencies in a HashMap<String, Integer> map."
8759717,1,0,1,java.util.HashMap,How can i access specific value in a HashMap?
8759765,2,1,1,java.util.HashMap,You can use Collections.max() to get the maximum value of the Collection of hashmap entries obtained by HashMap.entrySet() with custom comparator for comparing values.
8760923,2,0,2,java.util.HashMap,Create HashMap with keys as a Character and Integer count as value.
8761213,2,0,6,java.util.HashMap,"HashMap, LinkedHashMap, TreeMap all implement Map."
8761213,2,0,6,java.util.HashMap,"ints and map will be ArrayList and HashMap only, forever."
8761251,2,0,3,java.util.HashMap,"You do this to make sure later when working with the variable you (or anyone using your classes) won't rely on methods specific for the implementation chosen (ArrayList, HashMap, etc.)"
8764891,1,0,1,java.util.HashMap,HashMap with ArrayList key can not find it when Arraylist grows.
8764948,2,0,1,java.util.HashMap,"You can't use a mutable object (that is, one whose hashCode changes) as the key of a HashMap."
8765037,2,0,0,java.util.HashMap,"I would suggest that you either subclass ArrayList and override the hash() & equals() methods, or wrap the HashMap in a key class."
8768385,1,0,0,java.util.HashMap,"getResponseDataMap().containsKey(""A"")?a.setText(getResponseDataMap().get(""A"").toString()):"""" where getLocalRequestDataMap is a HashMap ."
8770045,2,1,0,java.util.HashMap,Your problem is that HashMap does not preserve insertion/iteration order when it is converted into an ArrayList to return from your method.
8771779,2,1,3,java.util.HashMap,"You could, however, use a single HashMap where the key would be the lines, and the value would be the number of occurrences of the line in the file."
8772577,2,0,1,java.util.HashMap,"For the first part: Instead of putting the expensive objects directly into the HashMap, instead create a simple wrapper that is cheap to create."
8773020,2,1,1,java.util.HashMap,"Also, may be HashMap will be more useful for that task."
8773020,2,1,1,java.util.HashMap,If more than one event can occurs in one day then you have use HashMap with List as I proposed.
8773065,2,0,0,java.util.HashMap,"Use a HashMap<Date, JSONObject> instead for this."
8773065,2,0,0,java.util.HashMap,"If you want to have one Date be associated with multiple JSONObjects, then perhaps  you want to use a Map that holds a List: HashMap<Date, List<JSONObject>>"
8776722,1,0,2,java.util.HashMap,Replace/Changing HashMap items during iteration.
8776722,1,0,2,java.util.HashMap,I get Concurrent Modification Exception when i try to remove an item from HashMap.
8776722,1,0,2,java.util.HashMap,"I know that removing items during iteration through HashMap will trigger this exception , but i need to replace older item with new one."
8776722,1,0,2,java.util.HashMap,"Maybe to create a copy of  countNumberOfEachCharacter HashMap , and whe iterate through original HashMap to remove item from copy HashMap ?"
8776735,2,0,2,java.util.HashMap,"This is also documented in the class javadoc of HashMap  The iterators returned by all of this class's ""collection view   methods"" are fail-fast: if the map is structurally modified at any   time after the iterator is created, in any way except through the   iterator's own remove method, the iterator will throw a   ConcurrentModificationException."
8776735,2,0,2,java.util.HashMap,"Just call put with that key and an updated value, which will update the value, as documented in the javadoc of the HashMap#put method  Associates the specified value with the specified key in this map."
8778266,2,0,1,java.util.HashMap,I would be using HashMap to be exact.
8778270,2,0,3,java.util.HashMap,"However if you want timed expiry, I would use a HashMap with a PriorityQueue (so you can check whether the next to expire entry has expired)"
8778294,2,0,5,java.util.HashMap,All too often I see a badly implemented cache (HashMap) effectively turn into a memory leak.
8781769,1,0,4,java.util.HashMap,"The point is that, I would like to get an HashMap on client side from REST service and I get it without any issue if I'm usin a browser."
8796008,2,1,8,java.util.HashMap,Are we talking about HashMap instances.
8796050,2,0,1,java.util.HashMap,"Consequently (and in order to get O(1) lookup), I'd recommend using HashMap and HashSet."
8796050,2,0,1,java.util.HashMap,Note that because neither HashSet or HashMap are synchronised you will need to look for some other solution if you want thread-safe code.
8800784,1,0,2,java.util.HashMap,"I don´t know how to modify the code to deferentiate between {0,0,3} and {0,3,3} (I still should use HashMap)."
8801544,1,0,1,java.util.HashMap,"Internally, backed up by something like a HashMap (and possibly a soft reference)."
8802020,1,0,1,java.util.HashMap,HashMap is not possible since it is one to one.
8802020,1,0,1,java.util.HashMap,HashMap or Need to use beans ?
8802059,2,1,2,java.util.HashMap,You can use a HashMap with the property name as the key and a composite object holding the min and max as value.
8802059,2,1,2,java.util.HashMap,Then create a HashMap as: code.
8805943,2,0,2,java.util.HashMap,Use HashMap instead of HashSet.
8806860,1,0,2,java.util.HashMap,I noticed that Netty has some internal Concurrent HashMap utilities.
8806860,1,0,2,java.util.HashMap,"I'm working on a project that needs a Concurrent HashMap and I'm debating whether I should use the netty implementation, but I can't see any difference in the source code."
8807778,1,0,0,java.util.HashMap,"The way I was planning on doing it was to have the interpreter find my  first token, and go from there to the appropriate class via the HashMap (cf."
8808943,2,0,1,java.util.HashMap,"If you can use sorted List1, you can look up and delete in O(logn), the total complexity will then be mlogn If you can use HashMap, which will allow you to look up and delete in O(1), you can further decrease the time complexity to basically O(m), then you can use one loop to go through list 2 and remove from set 1 all the same element."
8818986,2,0,3,java.util.HashMap,store your users objects in a HashMap  code.
8825837,1,0,2,java.util.HashMap,How to access HashMap in JSP by Object key (rather than String).
8825837,1,0,2,java.util.HashMap,"I can access a HashMap<String, Object> easily enough in JSTL but is it possible to access a HashMap<Object, Object> I only ask because I don't receive any errors (or output) when trying the following: code."
8829909,2,0,0,java.util.HashMap,"See the answer from Kevin Dolan on this SO question: Convert JSON to HashMap using Gson in Java Note, it isn't the accepted answer and you'll probably have to modify it a bit."
8830984,2,0,0,java.util.HashMap,"You can not add duplicate entries as it is a Set  The persistent collections injected by Hibernate behave like HashMap, HashSet, TreeMap,   TreeSet or ArrayList, depending on the interface type."
8831565,2,0,0,java.util.HashMap,"One solution is to use two data structures, a set (i.e. HashSet) and a map (i.e. HashMap)."
8831565,2,0,0,java.util.HashMap,"If it is not, get the real tag by using get(alias) on the map (O(1) for HashMap)."
8836678,2,0,0,java.util.HashMap,You just need a HashMap (java) to hold the index of the last row containing the ID.
8835928,1,0,13,java.util.HashMap,"I habitually use HashMap in my programs, since I know it is usually the most efficient (if properly used) and can cope with large maps easily."
8835928,1,0,13,java.util.HashMap,"Is HashMap<K,V> too complicated for these small, local and temporary uses?"
8835928,1,0,13,java.util.HashMap,Is it still the case that HashMap is the best choice for them?
8835928,1,0,13,java.util.HashMap,"It may be that HashMap is the right answer, but this is not a case of premature optimisation (or at least it may not be)."
8836137,2,0,1,java.util.HashMap,"If you do a lot of iterations over what is in a map, a LinkedHashMap is usually quite a lot faster than a HashMap, if you have a lot of threads working with the Map at the same time, a ConcurrentHashMap is often a better choice."
8836137,2,0,1,java.util.HashMap,"Then of course there are cases when a HashMap makes no sense at all, like if you have three values which you will always index with the keys 0, 1 and 2 but I assume you understand that :-)"
10587180,2,1,6,java.util.HashMap,"HashMap is one of the best and most flexible Map implementations around, and is hard to beat."
8836173,2,0,2,java.util.HashMap,HashMap is a good choice because it offers average case O(1) puts and gets.
8836173,2,0,2,java.util.HashMap,It does not guarantee ordering though like SortedMap implementations (i.e. TreeMap O(log n) puts and gets) but if you have no requirement for ordering then HashMap is better.
8835976,2,0,9,java.util.HashMap,If not I think HashMap is fine.
8835976,2,0,9,java.util.HashMap,"Besides, looking at the API, I'm not seeing anything simpler than a HashMap."
8838041,2,0,1,java.util.HashMap,"HashMap uses more or less memory (when created) depending on how you initialize it: more buckets mean more memory usage, but faster access for large amounts of items; if you need only a small number of items you can initialize it with a small value, which will produce less buckets that will still be fast (since they will each receive a few items)."
8836060,2,0,3,java.util.HashMap,A HashMap is possibly the most light weight and simple collection.
8841394,1,0,0,java.util.HashMap,Basically I am using this method to obtain the keys to my HashMap from the Strings in an ArrayList.
8841394,1,0,0,java.util.HashMap,There are 8 different possibilities (8 keywords) that a string in the HashMap can start with.
8841394,1,0,0,java.util.HashMap,The COMMANDS map to the  HashMap and its classes.
8841489,1,0,4,java.util.HashMap,How can a HashMap consist only of one entry/object?
8841489,1,0,4,java.util.HashMap,i would like to have a HashMap with only one key-value object.
8841489,1,0,4,java.util.HashMap,I have created the following HashMap: code.
8841489,1,0,4,java.util.HashMap,In the HashMap i would like to have only one entry/object.
8841489,1,0,4,java.util.HashMap,"<3,""foo.txt,hello.txt,test.txt"">  3 means that i've found the word ""Hello"" in three files and the Value consists of the files where the word was found if i use the method put, a new entry is created in the HashMap cause the key changes."
8841489,1,0,4,java.util.HashMap,How can i have only one object in a HashMap and modify the key every time?
8841547,2,0,2,java.util.HashMap,Is there a reason you need to use a HashMap?
8841590,2,0,2,java.util.HashMap,You are not really using a HashMap so to speak : your counter is not really a key.
8846211,1,0,0,java.util.HashMap,"Now what i want to do is like :  I want to check for something in ""payload"" in class ""Meta"" and if it does not exist, then i want to return a Java HashMap to client (in form of JSON) containing the error key."
8850719,1,0,1,java.util.HashMap,How can i use the ArrayList in HashMap in a HashMap EDIT After applying toto2's solution implementation works.
8850792,2,0,0,java.util.HashMap,Assuming you have your HashMap defined as above and add an entry like this: code.
8850983,2,0,0,java.util.HashMap,You can put your last row into a HashMap and check against it.
8852778,2,0,12,java.util.HashMap,"Nothing, if we never used an Integer as a key in a HashMap or other   hash-based collection."
8852778,2,0,12,java.util.HashMap,"However, if we were to use such an Integer   object for a key in a HashMap, we would not be able to reliably   retrieve the associated value, unless we used the exact same Integer   instance in the get() call as we did in the put() call."
8852796,2,0,2,java.util.HashMap,"Nothing, if we never used an Integer as a key in a HashMap or other   hash-based collection."
8852796,2,0,2,java.util.HashMap,"However, if we were to use such an Integer   object for a key in a HashMap, we would not be able to reliably   retrieve the associated value, unless we used the exact same Integer   instance in the get() call as we did in the put() call."
8853862,2,0,3,java.util.HashMap,"Unfortunately, String.intern() can be slower than a simple synchronized HashMap."
8853862,2,0,3,java.util.HashMap,"If we don't want to write our own pool, but use the good old HashMap, we'll still need to create a key object that wraps char[],offset,length (something like CharSequence)."
8855849,1,0,2,java.util.HashMap,"Sorting a HashMap, while keeping duplicates."
8855849,1,0,2,java.util.HashMap,I'm trying to sort a HashMap in two ways.
8856082,2,1,1,java.util.HashMap,Further I recommend to declare against Map instead of HashMap or LinkedHashMap to avoid confusion by yourself and others.
8855878,2,0,5,java.util.HashMap,It's not possible to sort a HashMap at all.
8855878,2,0,5,java.util.HashMap,"By definition, the keys in a HashMap are unordered."
8864111,1,0,2,java.util.HashMap,Storing a HashMap inside another HashMap and improving performance.
8864111,1,0,2,java.util.HashMap,I am supposed to created a HashMap inside another HashMap as shown below which can store the value inside the inner HashMap based on the key of the outer HashMap at the runtime i.e. required output for program should be of the format  code.
8864111,1,0,2,java.util.HashMap,"where 1,2 are Key values for Outer HashMap."
8867114,1,0,1,java.util.HashMap,"I'm trying to use the values within a Map collection (doesn't matter what kind, HashMap, TreeMap), to populate an ICEfaces datatable component and display the objects properties."
8868459,1,0,2,java.util.HashMap,HashMap in class diagram (UML).
8868459,1,0,2,java.util.HashMap,In my code I have attribute with HashMap datatype.
8868459,1,0,2,java.util.HashMap,"But, as I know, there is no HashMap datatype in UML standard."
8868459,1,0,2,java.util.HashMap,The question is - can I use HashMap as datatype for attribute of the class?
8870950,2,0,1,java.util.HashMap,HashMap should not appear in your UML model anyway.
8870950,2,0,1,java.util.HashMap,HashMap is just an implementation of a qualified association.
8870950,2,0,1,java.util.HashMap,"So if you had a Class A with a HashMap you would model a UML Class A, a UML Class B and a UML Association from A to B."
8870950,2,0,1,java.util.HashMap,If your HashMap key is the name of B (and B has that name as an attribute) you would simply omit the qualifier.
8868520,2,0,0,java.util.HashMap,HashMap is only one of many java classes.
8868560,2,0,1,java.util.HashMap,Just use a normal class in UML and call it HashMap.
8870576,1,0,3,java.util.HashMap,Java: How can I write HashMap >> to a file?
8875680,1,0,19,java.util.HashMap,Difference between Hashtable and Collections.synchronizedMap(HashMap).
8876289,2,0,4,java.util.HashMap,"The successor to   Hashtable, HashMap, which appeared as part of the Collections   framework in JDK 1.2, addressed thread-safety by providing an   unsynchronized base class and a synchronized wrapper,   Collections.synchronizedMap."
8876192,2,1,8,java.util.HashMap,The main difference between HashTable and Collections.synchronizedMap(HashMap) exist more at the API level.
8876205,2,0,0,java.util.HashMap,A good example is:  The conditions you describe will not be satisfied by HashMap.
13839305,2,0,2,java.util.HashMap,"For example, Hashtable doesn't sport HashMap's advanced recalculation of supplied keys' hashcodes that reduces hash collisions."
8878022,2,0,0,java.util.HashMap,"Second solution (not recommended, but just for info) Instead of looping again, just add your objects to a HashMap instead of an array."
8877129,1,0,4,java.util.HashMap,What is the main advantage of using Hashtable comparing with HashMap.
8877171,2,1,3,java.util.HashMap,"Note that there is a slight semantic difference - Hashtable does not allow nulls, while HashMap allows null values and a null key."
8877221,2,0,1,java.util.HashMap,"The main difference is that HashTable is synchronized internally, while HashMap is not."
8879206,1,0,1,java.util.HashMap,Possible Duplicate: builder for HashMap   Are there any utility class which allows to create a Map from a number of key-value pairs in a convenient and readable manner?
8879206,1,0,1,java.util.HashMap,I also know about double-brace approach (new HashMap<>() {{ put(..); put(..); }}) but I don't find it either readable or convenient.
8881150,2,0,2,java.util.HashMap,"HashMap is not going to do it, but a TreeMap could."
8887529,2,0,0,java.util.HashMap,"is enough, if you want to use an HashMap."
8890889,2,1,2,java.util.HashMap,It sounds like you probably want a HashMap... that's certainly a mutable key/value dictionary.
8890889,2,1,2,java.util.HashMap,"It's not clear what you're doing with NSMutableDictionary, but if it's simple key/value lookup, then some implementation of Map (whether it's HashMap or something else) is appropriate."
8891215,2,0,2,java.util.HashMap,"You could put elements of List<B> into a HashMap<Integer,B>, with the id being the key."
8895962,1,0,8,java.util.HashMap,Set object fields from HashMap.
8895962,1,0,8,java.util.HashMap,": Given an Object and a HashMap, it enumerates the keys of the Hashmap and looks up the setters for these keys in the Object and sets the associated values."
8904421,2,0,0,java.util.HashMap,"But to be a little more specific, create a HashMap using a string(name) as the key and an int(frequency) as the value."
8904421,2,0,0,java.util.HashMap,Then go through each name in the stack and add it to the HashMap and increase the frequency for that name by 1.
8904421,2,0,0,java.util.HashMap,"If a name is already in the HashMap, just increase its frequency."
8906786,2,0,0,java.util.HashMap,"But, as has been stated in other answers, this doesn't mean anything with a HashMap."
8906656,2,0,4,java.util.HashMap,You cannot do it with HashMap because keys are not ordered.
8906660,2,0,1,java.util.HashMap,else you could go the way HashMap -> getEntrySet -> toArray -> get(size-1)
8906664,2,0,2,java.util.HashMap,"It isn't possible (or more like doesn't make sense) to differentiate between ""first"" and ""last"" when it comes to HashMap."
8906671,2,0,4,java.util.HashMap,"A HashMap is an unordered map, so it doesn't have any concept of 'first' or 'last."
8907278,1,0,2,java.util.HashMap,"If we would use the HashMaps to store received data, how can we estimate maximum size of HashMap that our system can handle?"
8909810,1,0,21,java.util.HashMap,How to print all key and values from HashMap in Android?
8909810,1,0,21,java.util.HashMap,Am trying to use HashMap in Android sample project.
8909810,1,0,21,java.util.HashMap,"I just store keys and values in HashMap, i want to show the keys and their values in EditView."
8911089,2,0,2,java.util.HashMap,"where obviouslly the InnerValueType can still be a Hashtable If your data structure is not accessed by multiple threads, you can repalce Hashtable with HashMap which has all the behaviour of a hashtable structure but without the synchronisation."
8911102,2,0,1,java.util.HashMap,"You should use HashMap, not Hashtable (because Hashtable is a legacy collection class that has been replaced by HashMap since Java 1.2)."
8911421,2,0,0,java.util.HashMap,Generics are a way for Java to force a collection data structure (HashMap in your case) to accept only a specific types of objects.
8913849,1,0,0,java.util.HashMap,"This code is supposed to parse a String, split it in two parts, parse it for a String variable name, and then assign it an empty string as a value for now, and then store the information about the variable's name and value in a HashMap."
8913849,1,0,0,java.util.HashMap,//add to variables HashMap code.
19086959,2,0,0,java.util.HashMap,"2nd-we can't pass a primitive type by a reference to a method and many of the standard data structure implemented by java operates on object:eg(ArrayList,HashSet,HashMap,etc),so they need these object referenc"
8918212,2,0,1,java.util.HashMap,I would use HashMap.
8922685,2,1,4,java.util.HashMap,"You can then create a HashMap<String,Long> which holds the index of a given string in Array1."
8922879,2,0,2,java.util.HashMap,"For the first approach a 2d array is the best, for the second I would go with an HashSet (or HashMap if you want weights) When choosing one over the other you need to consider the graph size, the number of edges vs number of nodes and what algorithm you are going to run on it."
8923251,1,0,20,java.util.HashMap,What is the time complexity of HashMap.containsKey() in java?
8923251,1,0,20,java.util.HashMap,I need to know: What is the time complexity of HashMap.containsKey() in java?
8923273,1,0,12,java.util.HashMap,How can I have a HashMap with unique keys in java?
8923273,1,0,12,java.util.HashMap,How can I have a HashMap with unique keys in Java?
8923273,1,0,12,java.util.HashMap,Or even does this make any sense to have unique keys in HashMap or the keys are unique by default?
8923397,2,0,1,java.util.HashMap,Try to look at the Java API for Map which is interface that HashMap implements.
8923342,2,0,1,java.util.HashMap,"HashMap is a collection to store (key,value) pairs and According to the documentation of HashMap the keys are always unique."
8927679,2,0,2,java.util.HashMap,"If not, then you can use HashMap or something like that."
8931341,1,0,3,java.util.HashMap,"I meant whether there is some general way to say HashMap does not store order of elements being inserted, where LinkedHashMap does."
8932225,2,1,3,java.util.HashMap,"Here are three: Storing all data in a HashMap If you don't have too many records, or if each record doesn't take much space, you could read them all into RAM."
8932225,2,1,3,java.util.HashMap,You can also use a HashMap to map the name of the student to their record.
8932225,2,1,3,java.util.HashMap,Using a HashMap as an index Yet another option is to combine the two approaches I mentioned above.
8935983,1,0,2,java.util.HashMap,I have a class that can be constructed with two different types of objects (a HashMap or a separate class that I call a SearchTerm).
8943033,2,0,1,java.util.HashMap,"Declare HashMap<String, String> map = new HashMap<String, String>(); inside the for loop."
8943114,2,0,3,java.util.HashMap,"So simply put  indexVocabulary = new HashMap<String,Integer>();"
8947262,2,1,3,java.util.HashMap,"Comparing a Trove TIntIntHashMap with a (HashMap<Integer,Integer>* is not even fun."
8947545,1,0,0,java.util.HashMap,How to delete another item(not the one you are holding) while Iterating the HashMap.
8947602,2,0,1,java.util.HashMap,You cannot modify a HashMap while iterating through it.
8949910,1,0,0,java.util.HashMap,[Detailed]HashMap delete further item (not the one you are visiting) while iterating?
8949910,1,0,0,java.util.HashMap,My idea is to use HashMap< Interger， ArrayList< Integer >> to store the points and their adjacency lists.
8958941,2,0,1,java.util.HashMap,Add elements of both arrays into a HashMap where the value is the number of times the element occurs.
8958968,2,1,1,java.util.HashMap,I would prefer to use Set over HashMap as HashMap need key-value & Sets talks about UNIQUENESS.
8958987,1,0,1,java.util.HashMap,Currently I have a Grails domain class with a HashMap of strings (HashMap metadata = new HashMap().
8959340,2,1,0,java.util.HashMap,You can see the working example here: import java.util.HashMap; import java.util.Map; code.
8960301,1,0,1,java.util.HashMap,I'm trying to find a way to extract a HashMap from a private static field within another class via Java.
8960301,1,0,1,java.util.HashMap,Then in its construct it has: entityRenderMap = new HashMap(); How do you get the values within entityRenderMap via Reflection in Java?
8966095,1,0,0,java.util.HashMap,what is the most effective way to persist HashMap?
9859620,2,1,4,java.util.HashMap,I'd recommend JDBM3 library which provides a disk backed HashMap and TreeMap implementations.
8967456,2,0,0,java.util.HashMap,"Its implementation uses a HashMap, and here's the relevant code that determines if the set contains() (actually it's inside HashMap's getEntry() method): code."
8968357,2,0,1,java.util.HashMap,"If you decide to do this in Java, the thing you are looking for is a HashMap with the abbreviations as key and the full name as value."
8968617,1,0,0,java.util.HashMap,Trouble getting value of a HashMap element in Android.
8968617,1,0,0,java.util.HashMap,What I'm trying to do here is to get the field uri from the HashMap.
8968617,1,0,0,java.util.HashMap,"If I log this out, it tells me that the class is of the instance HashMap, but when I try to use the method .get() on it, Eclipse says this: code."
8968681,2,1,0,java.util.HashMap,"On your createItem method, you're returning a HashMap<String, String> and expect Java to bind it to Map<String, ?>."
8968684,2,0,0,java.util.HashMap,"Instead of storing your data into a HashMap create a class holding this data, and then store it into a IList or Map."
8971219,2,0,1,java.util.HashMap,"Create a  HashMap, iterate the array: for each x in the array: if x is not in the map [as key], insert (x,1) to the map, else: insert (x,map.value(x)+1) to the map."
8972980,1,0,2,java.util.HashMap,Arbitrary 'columns' from HashMap in hibernate query.
8974499,1,0,1,java.util.HashMap,"I can't get photo from contacts and put it in the List View, I organise that in HashMap."
8975872,2,0,0,java.util.HashMap,You can use multidimensional arrays or you can try any  pairs like HashMap
8975835,2,0,2,java.util.HashMap,"Then create a HashMap<Coordinate, Data> and work with it."
8983741,2,0,1,java.util.HashMap,You cannot sort a HashMap.
8983741,2,0,1,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."""
8983749,2,1,2,java.util.HashMap,"if you made the mistake of declaring mylist to be a List<HashMap>), you've got little choice."
8983749,2,1,2,java.util.HashMap,A HashMap is inherently unsorted / unordered and you can't change that fact.
8985623,2,0,2,java.util.HashMap,"With a standard HashMap, the only thing you can do is iterate over the entries of the map until you find one that has the value that you are looking for and then return the key for that."
8985623,2,0,2,java.util.HashMap,"HashMap is made to quickly and efficiently lookup a value if you know the key, but not the other way around."
8995813,2,0,2,java.util.HashMap,"If you need to keep track of the number of occurrences, you can use a HashMap instead of a HashSet, where you increase the number of duplicate strings you encounter."
9002827,2,0,0,java.util.HashMap,"The rest shouldn't be more than a few loops, maybe a HashMap to speed it up..."
9007448,2,1,8,java.util.HashMap,"HashMap) don't intrinsically support prefix lookups, so for those you'll have to iterate over all keys."
9018304,2,0,0,java.util.HashMap,"Extending HashMap would give you a class to put the method in and keep map-specific code out of your method, so lowering complexity and making the code more natural to read."
9008010,1,0,0,java.util.HashMap,How can I use contains method on a list that contains HashMaps so that it returns true when I ask whether or not the list contains a specified HashMap For Example: code.
9008209,2,0,1,java.util.HashMap,"The put method in HashMap returns the previous value associated with the key, it doesn't return the HashMap itself."
9008209,2,0,1,java.util.HashMap,"That aside, List.contains uses equals for comparisons, and AbstractMap.equals, inherited by HashMap,  tests for the two maps having the same mappings, not being the same instance."
9008532,1,0,8,java.util.HashMap,I've got a List of HashMap so I'm using List.contains to find out if the list contains a specified HashMap.
9008861,1,0,0,java.util.HashMap,I have tried implementing Comparator with a TreeMap but I got an error so I switched back to HashMap.
9008961,2,1,2,java.util.HashMap,"You should use the HashMap unordered, and then each time you want to order, put all the values of the HashMap into a TreeMap, using a Comparator that has the HashMap as a variable."
9008961,2,1,2,java.util.HashMap,"Then, for each key you compare, you get the value of the HashMap (the list) and check the list size."
9010157,2,0,1,java.util.HashMap,"Display all days/generate all dates according to the rules of calendars, but only add a day to the HashMap if a new entry is saved."
9010157,2,0,1,java.util.HashMap,Above is over-simplified: wrap the HashMap in a class to arbitrate CRUD operations on days.
9009491,1,0,0,java.util.HashMap,How to use indexOf on a List containing HashMap with multiple key/value pairs.
9009491,1,0,0,java.util.HashMap,Each HashMap in the list might have multiple key/value pairs.
9009491,1,0,0,java.util.HashMap,I want to indexOf on the list to find out the index of the element where the passed in HashMap is.
9009491,1,0,0,java.util.HashMap,"However, the problem is that equals method of HashMap looks at all the entire entrySet while comparing."
9009733,2,1,4,java.util.HashMap,"You might then think that you could subclass HashMap to redefine equals, but that would violate the symmetry property of Object.equals()."
9013049,2,1,1,java.util.HashMap,"It is using a primary cache  private final HashMap<String, Bitmap> sHardBitmapCache and a secondary static cache private final static ConcurrentHashMap<String, SoftReference<Bitmap>> sSoftBitmapCache Entries kicked out of the primary cache are put into the secondary cache."
9023453,1,0,3,java.util.HashMap,On a HashMap: code.
9025681,1,0,3,java.util.HashMap,If we use a HashTable or HashMap and the size can not fit more elements then these collections are resized to accomodate more elements.
9025802,2,1,1,java.util.HashMap,Open HashMap and see: code.
9027615,1,0,0,java.util.HashMap,how to inject a Map constructured HashMap ?
9034821,1,0,2,java.util.HashMap,"After that, I register this new server to my public ServerManager-class, which collects all servers in a HashMap and calls their exposed methods in a certain order."
9034821,1,0,2,java.util.HashMap,My idea was to introduce a public static final String IDENTIFIER-field to the interface and use it as the keys in the HashMap.
9034821,1,0,2,java.util.HashMap,"As an alternative, I thought about using the Class of the implementations as the keys in the HashMap so I can write something like this: code."
9037924,2,1,3,java.util.HashMap,You don't: HashMap is inherently unordered.
9038451,2,0,1,java.util.HashMap,"The iteration order of a HashMap is the natural ordering of the hash codes of the keys (because the hash value determines the bucket and the buckets are iterated over sequentially), so you could just iterate over map.keySet()."
9043254,1,0,8,java.util.HashMap,How to get a immutable collection from java HashMap?
9043254,1,0,8,java.util.HashMap,I need to get a collection from the java HashMap without the changes in the map reflecting in the collection later .
9043401,2,0,2,java.util.HashMap,From the Javadoc for HashMap.values:   Returns a Collection view of the values contained in this map.
9043402,2,0,0,java.util.HashMap,"Create a shallow copy of the original map whith HashMap.clone(), then retrieve the values colleation from that."
9043952,1,0,0,java.util.HashMap,Java's HashTable is a synchronized hashtable (and exists for quite a while) while HashMap is an unsynchronized.
9043952,1,0,0,java.util.HashMap,And if yes why there is no such method in HashMap and only keyset() is provided?
9043989,2,0,2,java.util.HashMap,The method does not exist in HashMap because keySet already does the job.
9044304,1,0,1,java.util.HashMap,How to efficiently get the values from a HashMap with a static class?
9044304,1,0,1,java.util.HashMap,"I have a class with a HashMap<k,v>."
9044304,1,0,1,java.util.HashMap,The type of the values of this HashMap is a static class which has two different objects as attributes.
9044432,2,0,0,java.util.HashMap,"Of course, this requires you to encapsule the HashMap inside the class and never give a straight access to it, because then someone using the class could modify the HashMap directly, and the List would no longer be in sync with the Map."
9045681,2,0,1,java.util.HashMap,"This method is used by HashMap, HashSet etc to store objects."
9045706,1,0,0,java.util.HashMap,Iterator for Set using HashMap won't produce the value / key?
9045706,1,0,0,java.util.HashMap,"HashMap doesn't have an iterator , so I used Set in order to get the elements of the hashmap."
9045706,1,0,0,java.util.HashMap,"My problem started when I wanted to iterate on the values of the HashMap , but since that's not possible , I tried with Set , but Set returns an Object and not the Coordinate object itself ."
9047090,1,0,3,java.util.HashMap,How to sort HashMap keys.
9047142,2,0,0,java.util.HashMap,"I'd suggest that you change the HashMap key from String to Date, e.g."
9047142,2,0,0,java.util.HashMap,"HashMap<Date, List<AppPrjMilestone>>."
9047157,2,0,2,java.util.HashMap,HashMap doesn't provide any ordering when you iterate over it (or even guarantee that the order will stay the same if you loop multiple times).
9047167,2,0,0,java.util.HashMap,HashMap doesn't define the order of iteration over the elements.
9047176,2,1,11,java.util.HashMap,You can however accomplish this by acquiring an array of the keys via: Object[] keys = map.keySet().toArray(); Then sorting the list with Arrays: Arrays.sort(keys); and finally iterating through each key and retrieving the value from the HashMap.
9047340,1,0,1,java.util.HashMap,So I pass as parameters a String that is the method to be called and a HashMap that has the parameters.
9050668,1,0,4,java.util.HashMap,"Java Concurrency: Are ""get(Key) for HashMap and ConcurrentHashMap equal in performance?"
9050668,1,0,4,java.util.HashMap,Are get(Key) method calls for a a standard HashMap and a ConcurrentHashMap equal in performance when no modifications happen for the underlaying Map (so only get() operations are performed.)
9050668,1,0,4,java.util.HashMap,"Therefore I am asking I am doing a lot of gets (and have the option to either implement it with a HashMap (create a temporary Hashmap, Copy Data into new HashMap, and swap association) or using a ConcurrentHashMap... As my App really doeas a lot of gets I want to learn more how performance is lost with both different gets."
9054989,2,1,2,java.util.HashMap,(I'm looking at JDK 6)  HashMap.get() is pretty simple: code.
9052197,1,0,1,java.util.HashMap,EndStatement or PrintlnStatement depending on the first element of an Array parsed from a String which serves as a keyword to a HashMap called commandHash.
9053988,2,0,9,java.util.HashMap,"HashMap, where contiguous keys are not required."
9067029,1,0,2,java.util.HashMap,"Goal, just a plain HashMap."
9068108,2,1,3,java.util.HashMap,"no component in any of programing languages aren't designated to displaying too largiest matrix of data on the screen, then you have two choises  faster way is let's this job for SQL engine, that designated for searching and filtering rows in hugest Database table slower way is hold these data in HashMap and there apply Comparator, and JTable would be display only result from this Comparator"
9068951,1,0,1,java.util.HashMap,using a HashMap or some similar synchronized version.
9083496,2,0,4,java.util.HashMap,Here's my simple cookie handling using a HashMap.
9070402,1,0,2,java.util.HashMap,"I can  get the types of parameters via method.getGenericParameterTypes(); example for the parameter HashMap would be java.util.HashMap<java.lang.String, java.lang.Integer> but there are quite a lot of different possibilities right!"
19392801,2,0,1,java.util.HashMap,Using an HashMap could be a good idea.
9074106,2,1,5,java.util.HashMap,"EDIT: If the cards can hold more than one action, you can use a HashMap to store actions for that card: code."
9074106,2,1,5,java.util.HashMap,A HashMap is a collection that can store key-value pairs.
9074106,2,1,5,java.util.HashMap,"Now, when you're actually processing the cards, you need to check the HashMap for all actions stored in this card."
9074106,2,1,5,java.util.HashMap,One way to iterate through the HashMap is to do the following: code.
9073988,2,1,1,java.util.HashMap,Use HashMap to map Character  to the Occurance (Integer)
9074590,2,0,1,java.util.HashMap,You want a java.util.Map (common implementations: TreeMap and HashMap).
9074605,2,0,3,java.util.HashMap,A HashMap will only store objects for unique keys.
9074605,2,0,3,java.util.HashMap,"In this case, the inner HashMap will store only unique integers and the outer HashMap will store only unique Enum types."
9080879,1,0,1,java.util.HashMap,I have a HashMap of a following structure: code.
9081139,2,0,1,java.util.HashMap,I suggest you store it in a HashMap: code.
9081145,2,0,0,java.util.HashMap,"I would use a distinct type, backed by a static HashMap, e.g."
9081166,2,0,1,java.util.HashMap,You can use HashMap collection for this problem: Country Code becomes Key and it's prefix value becomes its Value You can put all these name-value pairs in a configuration file (.txt OR xml etc.)
9081166,2,0,1,java.util.HashMap,"and fill HashMap using put(key, value) method."
9081019,2,0,3,java.util.HashMap,HashMap
9081048,2,0,2,java.util.HashMap,"You'll have to benchmark to see if it's much slower then using a HashMap, but it does a lot for readability..."
9082921,2,0,0,java.util.HashMap,"When overriding equals, you also have to override hashCode (in particular, if you are going to use HashSet or HashMap...)."
9083797,2,0,0,java.util.HashMap,"I see two options:  Cast the return value to an String[]: String[] myEntry = (String[]) cacheTimeStamp.get(""stringKey""); (My preference) Add type arguments to the map: private static Map cacheTimeStamp = new HashMap(); // ..."
9087754,1,0,2,java.util.HashMap,Deduplicating HashMap Values.
9087754,1,0,2,java.util.HashMap,The only thing I can think of is keeping a log of the processed Values as I iterate over HashMap and then through the ArrayList and check to see if I've encountered a Value previously.
9087754,1,0,2,java.util.HashMap,Is there a way to pre-process the HashMap to remove duplicates from the ArrayList values?
9087754,1,0,2,java.util.HashMap,"To illustrate...if I have String1>List1 (a, b, c) String2>List2 (c, d, e) I would want to remove ""c"" so there are no duplicates across the Lists within the HashMap."
9088031,2,0,0,java.util.HashMap,"Essentially, we have another HashMap that stores the list values and we remove the non-unique ones when adding a list to the map."
9087834,2,0,1,java.util.HashMap,"I believe creating a second HashMap, that can be sorted by values (Alphabetically, numerically), then do a single sweep through the sorted list, to check to see if the current node, is equivalent to the next node, if it is, remove the next one, and keep the increment at the same, so it will remain at the same index of that sorted list."
9087851,1,0,1,java.util.HashMap,HashMap and JDK 7.
9087851,1,0,1,java.util.HashMap,"Simple experiment has shown that JDK7 compiled HashMap<Integer, Integer> uses many threads when performing simple serial insert-find benchmark:  Insert million numbers."
9088011,2,1,2,java.util.HashMap,How did you verify that the HashMap code is actually using multiple Java threads?
9087998,2,0,0,java.util.HashMap,If you read the openjdk source code (it's open source) you'd find that HashMap does not create threads.
9091732,1,0,1,java.util.HashMap,"Ex: HashMap<String, String> o = (HashMap<String, String>) My question is what is the use of < and > signs."
9091732,1,0,1,java.util.HashMap,"Ex: ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>(); Why there are two parameters inside?"
9091888,2,1,0,java.util.HashMap,"It specifies that this is not just an arbitrary HashMap, but a HashMap with Key and its value as a String parameters, written HashMap < String, String>."
9091888,2,1,0,java.util.HashMap,"We say that HashMap is a generic interface that takes a type parameters - in this case, String."
9094027,1,0,2,java.util.HashMap,"I have two HashMap, first one has 3149 records and the second one 5440 records, when I combine them, the result size is smaller then 3149+5440."
9097017,1,0,0,java.util.HashMap,"Edit: Observations:  In my Company.class I had defined Set<Employee> and when xstream unmarshall it, it create the set as HashMap, so the order is not maintained."
9099575,2,0,2,java.util.HashMap,You can find a bit more here: Performance ConcurrentHashmap vs HashMap Java Hashtable many accesses problem
9103103,1,0,0,java.util.HashMap,Cglib Enhancer of HashMap on Google App Engine throws a Class Not Found Exception.
9103103,1,0,0,java.util.HashMap,I am using cglib to enhance a HashMap so I can intercept method calls on the HashMap.
9103103,1,0,0,java.util.HashMap,"Once deployed on the server, however, I am getting an exception ""java.lang.NoClassDefFoundError: [Ljava/util/HashMap$Entry;"" The line of code that throws the exception is: code."
9103103,1,0,0,java.util.HashMap,"I am using cglib version 2.2 (cglib-nodep-2.2.jar) EDIT: This is interesting: If I create a class that extends from HashMap, then I can enhance that class without any issues."
9103103,1,0,0,java.util.HashMap,Caused by: java.lang.ClassNotFoundException: java.util.HashMap$Entry     ... 35 more
9103596,2,1,0,java.util.HashMap,"EDIT: BTW, I'm assuming that you are importing java.util.HashMap... check you did not import other implementation (like ""com.google.gwt.dev.util.collect.HashMap"")... somtimes this kind of mistake happens for nothing!"
9104465,1,0,2,java.util.HashMap,"In Java programming, an example would be a performance of HashMap."
9108392,2,0,2,java.util.HashMap,"In this case the compiler is sure that HashMap does not extend Date, thus giving you the error."
9107948,2,1,8,java.util.HashMap,"Since you can't compile a cast from a HashMap to a Date, you can't compile an instanceof test between the two either."
9111834,2,1,0,java.util.HashMap,"If you need to track additional data on a per lock basis you might consider to use a HashMap<Integer, ILockInformation>."
9119880,2,0,12,java.util.HashMap,A HashSet is actually a HashMap where the value is always the same.
9119880,2,0,12,java.util.HashMap,"The way a HashMap works is described in many places (it is referred to as ""hashtable"" as well)."
9121690,2,0,1,java.util.HashMap,Use a counter for total threads and HashMap which counts the number of threads currently attempting to access site X.
9122638,1,0,4,java.util.HashMap,On a final note: would it be better to use a HashMap of ArrayLists (eventually I'm going to be creating CDF's for max values up to about 10k)?
9127009,2,1,0,java.util.HashMap,"Given that the App Engine dev server seems to use some kind of HashMap to store objects, I would guess that there's some kind of hashing performed on the Protocol Buffer bytes or the original object of the Key  - are these likely to be similar between objects (ie."
9129090,1,0,2,java.util.HashMap,parsing on HashMap in Java.
9129126,2,1,4,java.util.HashMap,"I don't know what ""parsing"" means for a HashMap, either."
9133346,2,0,2,java.util.HashMap,"2) since there are lots of AbstactTableModels based on HashMap, I'd suggest to return arrays type implemented in API directly  code."
29551271,2,0,0,java.util.HashMap,"Now you can simply a HashMap<PermutationString,ArrayList<String>> as follows: code."
9139050,1,0,0,java.util.HashMap,I write my implementation of HashMap in Java.
9139793,2,1,1,java.util.HashMap,HashMap avoids this issue by using a power of 2 and uses the following approach code.
9139793,2,1,1,java.util.HashMap,HashMap uses the following code.
9139793,2,1,1,java.util.HashMap,"for security reasons, if you have a service which could the subject of a denial of service attack, you will want to use a different hash to avoid a malicious user turning your HashMap into a LinkedList."
9139547,2,0,3,java.util.HashMap,"You want a HashMap, with whatever your ""data"" as the key, and a counter as the value."
9139547,2,0,3,java.util.HashMap,"http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html The reason it's a good choice is because it has O(1) ""contains"" checking, retrieval, and insertion time."
9139550,2,0,1,java.util.HashMap,"Sound like you need to use a HashMap<YourClass, Integer> (link)."
9139588,1,0,0,java.util.HashMap,Starter stores it in a HashMap in Database class.
9139588,1,0,0,java.util.HashMap,Scheduler reads the same HashMap from Database class.
9139588,1,0,0,java.util.HashMap,"Now to ensure that the exact same HashMap is access by all classes throughout my java project, I have 2 options-- to make HashMap static or to make Database  a singleton class."
9139588,1,0,0,java.util.HashMap,The problem-- if Test class does this Starter starterInstance1 = new Starter(); Starter starterInstance2 = new Starter(); how do i ensure starterInstance1 and starterInstance2 have their own instance of Database class or the HashMap?
9139588,1,0,0,java.util.HashMap,"========== Just being more clear: class Test{ Starter start1 = new Starter();//creating 1 instance of my application start1.init();//this will initialize Scheduler etc and do a ""getDatabaseInstance()"" for(int i=0;i<50;i++){ start1.sendData(""abc""); //all these 50 requests will b submitted to a threadpool that will send request to be stored in HashMap in Database class."
9139588,1,0,0,java.util.HashMap,The HashMap will be accessed concurrently by Scheduler and other classes.
9141582,2,0,2,java.util.HashMap,The chances of the problem being in HashMap rather than in your code are incredibly small.
9141659,1,0,2,java.util.HashMap,"I have the following problem:  I store an object associated to another object on a HashMap; Change a property from the key object used on step 1; As the hashcode is used to store the keys on the regular implementation of HashMap, when I perform a get() on the HashMap, I get null, because the old object hashCode was different at step 1."
9141820,1,0,0,java.util.HashMap,HashMap code not giving the desired results.
9141896,2,1,2,java.util.HashMap,"You only ever create one Info object, so all keys in the HashMap map to the same object."
9142203,1,0,4,java.util.HashMap,"I am not familiar to the classes in java, and therefore could not understand how can i implement it with HashMap or something else (trie or else), which will  make the loading process fast ."
9144471,1,0,1,java.util.HashMap,"I was thinking about using a HashMap and TreeMap, where the HashMap holds IDs and the TreeMap stores the elements sorted by date."
9144472,1,0,15,java.util.HashMap,Why is the hash table of HashMap marked as transient although the class is serializable.
9144472,1,0,15,java.util.HashMap,I was looking at the source of HashMap.
9144472,1,0,15,java.util.HashMap,A HashMap implements Serializable.
9144515,2,1,22,java.util.HashMap,HashMap uses writeObject and readObject to implement custom serialization rather than just letting its field be serialized normally.
9144550,2,0,6,java.util.HashMap,The Entry[] table of a HashMap is simply an acceleration structure - it allows for fast lookup of the stored entries.
9149067,1,0,0,java.util.HashMap,"Exception in thread ""main"" java.lang.StackOverflowError   at   java.util.HashMap.get(Unknown Source)  Hi, Why am i getting stackoverflow exception to this program?"
9152460,2,0,0,java.util.HashMap,You might want to consider something simpler like a HashMap instance.
9153733,2,0,0,java.util.HashMap,I don't know if this answer would be useful to you as I could not understand the problem very well but here are few suggestions :  To take a variable as input and print its value you can use a HashMap (java.util.HashMap) with String keys and Double values.
9153795,2,0,4,java.util.HashMap,The modern class – HashMap – is not synchronized.
9153802,2,0,0,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."""
9155873,2,0,1,java.util.HashMap,"You're essentially right: the hashtable (btw, HashMap is the newer, more recommended class) uses hashCode() to find a bucket to put your object in."
9155922,2,0,0,java.util.HashMap,"A HashTable (or HashMap) contains N bins, where a bin can hold more than one Object."
9157928,2,0,1,java.util.HashMap,"However, you should be sure that this is even a concern before worrying about that at this point; I'm assuming the network overhead to one call to your servlet by far outweighs a single HashMap lookup of a short string."
9157339,2,0,1,java.util.HashMap,The first approach of storing the commands in HashMap is better.
9157353,2,1,3,java.util.HashMap,Performance When using Map the only cost is accessing a HashMap (negligible).
9161927,1,0,2,java.util.HashMap,"If you read the JNDI glossary, it basically defines these two as follows:  naming service - An API that allows you to perform operations on different contexts context - Sounds an awful lot like a HashMap directory service - An API that allows you to perform operations on directory objects directory object - an object that is in a directory....(?!?!)"
9163585,1,0,0,java.util.HashMap,"I tried to put Vertex coordinates in a HashMap  where Point is the coordinate in the grid of the Hexagon, and Point3f[] is the coordinates in 3d space of each vertex of the Hexagon."
9165357,2,0,5,java.util.HashMap,"Although, if you plan to store instances of the Custom class in hashing data structures (such as HashSet or HashMap, etc.)"
9168279,1,0,3,java.util.HashMap,"When I need to sort a HashMap by value, the advice seems to be to create the HashMap and then put the data into a TreeMap which is sorted by value."
9168393,2,0,2,java.util.HashMap,"Create a HashBiMap as you would your HashMap, then create a new TreeMap from its inverse: code."
9170142,2,0,1,java.util.HashMap,"If you need to search by member, you probably want a HashMap/TreeMap, as long as you don't mind only getting exact matches."
9170167,2,0,4,java.util.HashMap,I recommend looking into the HashMap data structure.
9171528,1,0,0,java.util.HashMap,Key in HashMap java.
9171528,1,0,0,java.util.HashMap,"I usually come across scenarios while using HashMap in Java as follows : I've a list of Objects of class A (List<A>)  A has fields int f1, int f2 and other fields."
9171633,2,0,0,java.util.HashMap,"Of course, the HashSet is probably just a HashMap with null values, but you don't have to invent keys and values."
9179336,1,0,0,java.util.HashMap,"In an attempt to resolve, I've added a hybrid cache where I use a HashMap up to a threshold and then I spill over to a Lucene index (local file system)."
9181150,1,0,4,java.util.HashMap,Java - Is it common practice to use a hashtable (eg HashMap) to map objects to themselves?
9184310,1,0,1,java.util.HashMap,java.util.HashMap cannot be cast to org.apache.axiom.om.OMElement.
9184310,1,0,1,java.util.HashMap,"I created WSDL file and in the WS Client class am trying to send HashMap as the parameter as follows : HashMap<String, ArrayList<User>> map = new HashMap<String, ArrayList<User>>(); VerifyStub stub = new VerifyStub(); Verify vu = new Verify(); vu.setHmap(map); And am experiencing the above error message ""java.util.HashMap cannot be cast to org.apache.axiom.om.OMElement""."
9184310,1,0,1,java.util.HashMap,"May I know, whether I can convert HashMap to OMElement."
9184374,2,1,2,java.util.HashMap,You can't pass Collections like HashMap through a wsdl interface.
9189787,2,0,0,java.util.HashMap,Maybe it is just me but seems like HashMap is your friend.
9190470,1,0,3,java.util.HashMap,"I like the idea of using the HashMap, so I'll create a subclass and add an addAndReturn() function to it."
9190593,2,0,5,java.util.HashMap,"(As @AlexR says, I'm assuming that you want a reference to the previous object equal to the one you are trying to add now) Instead of using a Set, try using a HashMap with the same object as a key and a value."
9190601,2,0,3,java.util.HashMap,"Another option would be a HashMap<T, T> where you store a mapping from each object to itself."
9191733,2,0,0,java.util.HashMap,"If they are meaningful headers and are subject to change, have a HashMap that stores the values."
9191733,2,0,0,java.util.HashMap,"HashMap is the most flexible solution, but beware, performance!"
9201412,2,0,0,java.util.HashMap,"You seem to have got your input down, using your scanner class all you need to do is add a HashMap."
9201412,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html Something along the lines of, Update code."
9203483,2,0,3,java.util.HashMap,"A class overrides the equals() and hashCode() methods so that it can be used in data structures like HashSet and (as keys in) HashMap, and the hash code is typically derived by some identifying member attributes."
9203862,2,0,1,java.util.HashMap,Or a HashMap keyed by Integer.
9208537,1,0,8,java.util.HashMap,I noticed that a lot of instances of HashMap$Entry and TreeMap$Entry are referenced and created by libraries originating from sun.rmi.
9220584,2,0,1,java.util.HashMap,"There is absolutely nothing wrong with having the type that is an array of a parameterized type: MyEntry<E>[] or HashMap<String,Integer>[][] or whatever."
9215312,2,1,1,java.util.HashMap,"Assuming that all your values are of integer type, you should create a HashMap<string,Integer> to store variable values, and pass it to your evaluate method: code."
9216070,2,1,3,java.util.HashMap,"In a HashMap, a key cannot have two values."
9216070,2,1,3,java.util.HashMap,"One way to have multiple values per key is by using HashMap<K,Collection<V>>."
9216070,2,1,3,java.util.HashMap,"edit: If you're talking about multiple keys ending up in the same bucket, then you need to modify HashMap's put() method: code."
9216089,2,0,1,java.util.HashMap,If you're modifying the HashMap class then you should be able to find where the list of elements is chained off the hash array and detect when there's more than one in the chain.
9216089,2,0,1,java.util.HashMap,"HOWEVER, you'd better have a very good reason for modifying HashMap, AND you'd better change the package and name of the class (to something like com.my.company.HashMapWithCollisionStatistics) or risk the eternal wrath of everybody who comes behind you to maintain Java code in your group."
9217756,2,0,1,java.util.HashMap,"Haven't tried using annotations (use mappers instead) but AFAIK it looks like it expects the map being HashMap<someA, someB> where someA has a getter and a setter for ""a"" (like getA, setA)... you can even use the same class (HashMap"
9222685,2,1,5,java.util.HashMap,A possible solution would be to use a HashMap where the key is the slotNumber and the value points to the slot.
9224842,2,0,0,java.util.HashMap,From HashMap code : code.
9230476,2,0,1,java.util.HashMap,You could easily use a HashMap but then you'd lose your syntax-safety.
9231018,1,0,2,java.util.HashMap,I could use a HashMap and use the index as a key but that's really inefficient.
9231121,2,1,3,java.util.HashMap,I could use a HashMap and use the index as a key but that's really inefficient.
9231127,2,0,1,java.util.HashMap,"HashMap is probably much less inefficient than you think, try it."
9231139,2,0,0,java.util.HashMap,"If you are looking for a sparse array (where most of the indices will be empty), a Map of some sort (probably a HashMap) will be your best bet."
9231139,2,0,0,java.util.HashMap,"Any array-esque solution will be forced to reserve space for all the empty indices, which is not very space-efficient, and a HashMap is fast enough for most normal purposes."
9231042,2,0,3,java.util.HashMap,"Specifically, if you use HashMap, it will also be O(1) - though it will be slower than ArrayList."
9231591,1,0,1,java.util.HashMap,"I'm implementing a JPA-like process: all classes representing a table must subclass a DBTable abstract class which contains a HashMap linking column names (String) to java.lang.reflect.Field I got from calling getClass().getDeclaredFields() in the super-class constructor, called from the sub-class constructor."
9236346,2,0,0,java.util.HashMap,"See the documentation of the Java HashMap:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
9236909,2,0,1,java.util.HashMap,"If you try to calculate / estimate / measure the number of ""hops"", you run into the effect of things like the initial HashMap size, the order of key insertion, the effect of resizing and so on."
9245359,1,0,0,java.util.HashMap,Counting The Subset of Java HashMap.
9251425,1,0,0,java.util.HashMap,"I have simple collection of string objects might be around 10 elements ,  but i use this collection in production environment such that the we search for a given string in that collection millions of tiimes ,  what is the best collection or data structure we can use to get the best results so that seach operation can be performed in 0(1) time we can use HashMap here but the order of search there is in constant time not 0(1) i want to make sure that search is 0(1)."
9251454,2,0,1,java.util.HashMap,HashMap is fine.
9251822,2,0,0,java.util.HashMap,"If you can't use HashSet/HashMap as previously suggested, you could write a Radix Tree implementation."
9252856,1,0,1,java.util.HashMap,"Java HashMap Create, edit and delete."
9252856,1,0,1,java.util.HashMap,"I am trying to update a HashMap use it directly in the next method, but it isn't working."
9254741,1,0,1,java.util.HashMap,Java HashMap searching.
9264382,1,0,5,java.util.HashMap,So I can't use getParameterMap() to get this parameters (because HashMap contain only unique keys).
9271491,2,0,3,java.util.HashMap,"In case you may have to handle totally arbitrary exponents and pre-allocation of an array is infeasible, use a HashMap where the key is the exponent, and value is the coefficient."
9271540,1,0,2,java.util.HashMap,How to restrict a key and its value in a HashMap using generics?
9271905,2,1,0,java.util.HashMap,"I would suggest:  Parse file into HashMap<String, Integer> Iterate through HashMap, and add elements to a TreeMap<Integer, Set<String> > (see below)."
9273700,1,0,2,java.util.HashMap,"In this case in JConsole the value is displaying Unavailable, but when I tried with HashMap with String objects it worked?"
9274943,1,0,1,java.util.HashMap,"Then it returns a my.other.HashMap but I want to change this Map in my java.util.HashMap<String, MyClass>, also for this, how can I do?"
9276601,1,0,1,java.util.HashMap,I use a HashMap to store some key/value pairs.
9276601,1,0,1,java.util.HashMap,I am creating a HashMap like this code.
9276601,1,0,1,java.util.HashMap,"But since the ordering is not maintained in HashMap, I want to use a TreeMap/SortedMap."
9277593,1,0,6,java.util.HashMap,The naive approach is to use a HashMap in a singleton object to store the data.
9277593,1,0,6,java.util.HashMap,For supporting caching I add a Cache interface and two Cache implementations (one for HTML5 localStorage and one for HashMap): code.
9277593,1,0,6,java.util.HashMap,So in order to support both HTML5 localstorage and normal JS HashMap storage I created two implementations of my Cache interface: JS HashMap storage: code.
9278655,2,0,1,java.util.HashMap,Use a HashMap.
9278655,2,0,1,java.util.HashMap,"Before adding an object, get its class (using reflection) and check whether it is already a key in the HashMap."
25520613,2,0,0,java.util.HashMap,"You can remove the curly brackets with .replaceAll() in a line with square brackets String newString = originalString.replaceAll(""[{}]"", ""X"")  eg: newString = ""ARG:token_name"" if you want to further separate newString to key and value, you can use .split() String[] arrayString = newString.split("":"") With arrayString, you can use it for your HashMap with .put(),  arrayString[0] and arrayString[1]"
9286359,1,0,3,java.util.HashMap,I have an Android app in which I use a HashMap to store container objects.
9286785,1,0,0,java.util.HashMap,in codehaus Jackson @JsonProperty how can i get an HashMap object out of it?
9298000,2,1,1,java.util.HashMap,Result will indeed be a HashMap if the field type is that (which it is).
9287549,1,0,1,java.util.HashMap,Java HashMap of HashMap vs HashMap of String.
9287627,2,1,3,java.util.HashMap,"If these 2 considerations don't bother you, using a concatenated key for 1-level HashMap is fine."
9291343,1,0,0,java.util.HashMap,How to get jpa(hibernate) query resultlist as HashMap?
9291343,1,0,0,java.util.HashMap,I also want to return HashMap (docId and privilege) via overriden method.
9293283,2,0,0,java.util.HashMap,Now suppose the exact type is in fact TreeMap: it makes sense that you cannot put an HashMap into this list.
9292791,2,0,2,java.util.HashMap,Now you've added a TreeMap to your ArrayList of HashMap.
9292754,1,0,2,java.util.HashMap,"However, I'm trying to transport HashMap's from java to .net (and back, although I know .net doesn't have HashMap's, so I'll probably use Dictionary or some sort)."
9294893,1,0,2,java.util.HashMap,What is a Map or HashMap (and why when a Map is declared are they creating a HashMap?).
9295155,2,1,3,java.util.HashMap,HashMap) implements logic to support the interface.
9294923,2,0,5,java.util.HashMap,HashMap is the implementation.
9294923,2,0,5,java.util.HashMap,"With that in mind, read these two documents http://docs.oracle.com/javase/6/docs/api/java/util/Map.html http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html An ArrayList is another kind of collection (it conforms to the interface List)."
9294982,2,0,1,java.util.HashMap,"The Map used in the declaration is the interface for this type of collection, it only defines what any given Map should export to it's users, while the HashMap is an implementation of that Map interface which uses a Hash Table as the backing data structure."
9294982,2,0,1,java.util.HashMap,I suggest you read the docs for Map interface and HashMap implementation and also on the Hash Table concept on wikipedia.
9294985,2,0,1,java.util.HashMap,Your colleague can assign a HashMap to a variable typed Map because HashMap implements the Map interface ( http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html).
9294985,2,0,1,java.util.HashMap,A reason why he might be doing this is to implicitly state that he is only using Methods declared in Map and does not depend on methods only implemented by HashMap
9296427,1,0,2,java.util.HashMap,"Inside this JSON are the attributes for the User and Profile listed and as you can see, Profile and User got both a HashMap called List."
9296427,1,0,2,java.util.HashMap,//Dirty Hack Solution: An ArrayList instead of the HashMap was no problem.
9296427,1,0,2,java.util.HashMap,"However I decided to parse this part of the Json ""by hand"" to insert the Objects into my HashMap.. code."
9296427,1,0,2,java.util.HashMap,And can i use a HashMap like this with GSON?
9300597,1,0,2,java.util.HashMap,Java - Iteration over HashMap replacing ArrayList.
9300597,1,0,2,java.util.HashMap,I have since replaced the ArrayList with a HashMap where the objects are stored and use the username string of an individual as the key.
9300597,1,0,2,java.util.HashMap,"Unfortunately, the HashMapName.iterable(); seems to raise issues, so how do I go about this behaviour with a HashMap?"
9300792,2,0,1,java.util.HashMap,You can iterate over the entrySet of the HashMap.
9300792,2,0,1,java.util.HashMap,"Your off-question: Object is a type parameter for the HashMap, which says that the Iterable contains Objects."
9300792,2,0,1,java.util.HashMap,"If your HashMap is only supposed to contain TelephoneRecords objects, replace code."
9301833,2,1,0,java.util.HashMap,It seems you cannot iterate directly over a HashMap but you can iterate over the values (objects) within it.
9301833,2,1,0,java.util.HashMap,"Furthermore, the issue of getting and printing the contents of the HashMap, I solved through the following code."
9300681,2,0,0,java.util.HashMap,"In a HashMap, you can iterate over keys (map.keySet()), values (map.values()) or key-value pairs (map.entrySet())."
9301079,1,0,0,java.util.HashMap,Running time of HashTable Operations vs HashMap operations?
9301079,1,0,0,java.util.HashMap,"What are running times (Big O notaton) for the common operations (get, put, size) on HashTable and HashMap, is there a difference?"
9301119,2,1,4,java.util.HashMap,"There is not a difference between the asymptotics of Hashtable and HashMap, and they are the predictable expected amortized O(1) for put and expected O(1) for get, assuming that you have a good hash function."
9303220,1,0,0,java.util.HashMap,"When i use the new Java 7 syntax for defining a HashMap, it works fine."
9304198,1,0,0,java.util.HashMap,My data is in a HashMap inside hashMap it is like code.
9305624,2,0,0,java.util.HashMap,"You can use a HashMap to store the first set of results , and then iterate through the second list , during iteration check if that value exists in the HashMap , if it exists , push it into another List C , at the end of the iteration , List C will have the common elements"
9305953,1,0,6,java.util.HashMap,"Why is it that, the more '1' bits in my Key, the longer it takes to place in the HashMap?"
9305953,1,0,6,java.util.HashMap,"My first thought was to use a HashMap to store the matrix elements, and only store the elements which are non-zero, in order to avoid using huge quantities of memory."
9305953,1,0,6,java.util.HashMap,"I wanted to make a key for the HashMap which would represent both the row and column number of the element in a way that, when I accessed that entry in the map, I could re-extract both values."
9305953,1,0,6,java.util.HashMap,"[EDIT: I'd also like to note that my HashMap is initialized with a specific initial size which exactly represents the number of values I store in it, which is never exceeded.]"
9305953,1,0,6,java.util.HashMap,"After selective commenting-out of methods, I have concluded that the bulk of this 7 second timespan is spent storing my values in the HashMap."
9305953,1,0,6,java.util.HashMap,"Am I chasing a red herring, or is this fairly dramatic difference in performance the result of something internal in the HashMap.put method?"
9306133,2,1,5,java.util.HashMap,"This means that your key gets stuffed back into 32 bits; all the lower bits are cancelling each other out quite often, resulting in a lot of collisions which requires the HashMap to spend extra time looking for a free slot in a bucket."
9306072,2,0,3,java.util.HashMap,"Here's from the HashMap Java documentation (emphasis mine):   This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets  Side note: you'll find even greater performance gains by tuning the initial capacity and load factor - check the HashMap documentation for more information."
9307730,1,0,1,java.util.HashMap,"HashMap (I am relatively new to HashMap, they say that the positions of the collection may change over time, if i am just iterating through with no modifications, will the positions change?)"
9309011,2,1,1,java.util.HashMap,You can use Java's HashMap.
9319354,1,0,6,java.util.HashMap,"A MultiValueMap<String, Integer> is nothing else then a HashMap/TreeMap<String, <ArrayList<Integer>>."
9319354,1,0,6,java.util.HashMap,Both HashMap and TreeMap have quite a lot of memory Overhead.
9320008,2,0,5,java.util.HashMap,"which will make a ListMultimap that uses a HashMap to map to List values backed by int[] arrays, which should be memory-efficient, though you'll pay a small speed penalty because of boxing."
9324079,1,0,0,java.util.HashMap,Can I use JSONObject instead of HashMap in Java?
9324079,1,0,0,java.util.HashMap,Generally I fetch the data and put it into an HashMap and pass it to the JSP page.
9324079,1,0,0,java.util.HashMap,"Here my doubt is instead of having data in different objects(HashMap and JSONObject), can I use the JSONObject for both purposes?."
9324079,1,0,0,java.util.HashMap,Will there be any performance implications when I use JSONObject instead of HashMap?.
9328297,2,0,1,java.util.HashMap,"Your concurrency concerns are important, but making the HashMap volatile will not solve the problem, for handling the concurrency issues, you already use ConcurrentHashMap."
9328627,2,0,3,java.util.HashMap,Use ArrayList and HashMap instead.
9330429,1,0,1,java.util.HashMap,Sum operator and HashMap object as the result.
9330429,1,0,1,java.util.HashMap,"I try to use Vector because for me it's not important if I retrieve these values using HashMap.get(""field name"") or Vector.get(position) so if your solution consist to retrieve a Vector for me it is the same thing."
9333292,2,1,1,java.util.HashMap,"Off the top of my head, I'm wondering if a HashMap<Float, Integer> would work for you."
9407394,2,1,1,java.util.HashMap,"Though after deserialization you will get ArrayList<HashMap<Integer,String>> and not JSONArray back."
9338339,2,0,0,java.util.HashMap,I created a small project in Eclipse for that but you can also run this from the command line using supplied wobly-generator.jar This step will inject serialization code into your source file which will include read and write methods Gotcha: this didn't work for smart-json JSONObject or JSONArray or for HashMap.
9335169,1,0,20,java.util.HashMap,Following is the source code for a hash function in java.util.HashMap.
9335932,1,0,0,java.util.HashMap,"I know that this could be implemented using a HashMap or ArrayList, but those seem overkill."
9335976,2,0,1,java.util.HashMap,"You don't have just ArrayList and HashMap, JDK comes with a good variety of classes, in which you can find also what you are looking for: sets."
9336005,2,0,0,java.util.HashMap,"I know that this could be implemented using a HashMap or ArrayList, but those seem overkill."
9336005,2,0,0,java.util.HashMap,Because that's what HashMap is.
9336005,2,0,0,java.util.HashMap,"HashSet would be a bit more basic in its interface (not mapped values), but it's actually implements by having a HashMap with null values."
9336577,2,0,0,java.util.HashMap,"HashMap, String, etc already do."
9337126,1,0,3,java.util.HashMap,"The key is an object (not shown) with one instance variable, a HashMap."
9337126,1,0,3,java.util.HashMap,"I don't see why this is necessary, since our hashCode() method and Java's hashCode() for HashMap are, AFAIK, insensitive to the iteration order of the hash."
9450336,2,1,1,java.util.HashMap,"The answer (thanks, Dimitri) is that the HashMap doesn't guarantee its serialization ordering, so serialized-hash->deserialize->object-hash->serialize->serialized-hash may result in the second serialized hash being a different byte stream than the first."
9450336,2,1,1,java.util.HashMap,"Since the internal implementation of a HashMap is a typical in-memory hash, with N buckets, each holding (probably via a linked list) a set of entries whose hash corresponds to the bucket, the order in which entries are put into the hash determines (in a non-specified way) the order in which the keyset iteration will return them."
9337536,1,0,0,java.util.HashMap,Iterate recursively through deep HashMap.
9337536,1,0,0,java.util.HashMap,"I do a JSON parse of this string, and that turns all objects into HashMaps and all arrays into HashMap[]s. My problem is I need a single recursive function to iterate through all nodes of this JSON structure in Java."
9337993,1,0,2,java.util.HashMap,"Check if Object is instance of String, HashMap, or HashMap[ ]."
9337993,1,0,2,java.util.HashMap,"Is there a way to check if an object is an instance of a String, HashMap, or HashMap[ ] before actually casting it to those objects?"
9338077,2,0,2,java.util.HashMap,"You're checking to see if you have a String, a HashMap, or a HashMap array?"
9338645,1,0,2,java.util.HashMap,I have a function to traverse a complex deep HashMap structure.
9343554,2,1,2,java.util.HashMap,"To delete, you need to do it explicitly by using the HashMap.remove() method"
9340020,2,0,0,java.util.HashMap,"If you allow the HashMap or Hashtable to grow naturally, its capacity will be proportional to the number of entries."
9340493,1,0,0,java.util.HashMap,Another method not allowing me to access HashMap values.
9340512,2,1,6,java.util.HashMap,"Your HashMap is untyped, so invoking the get method on it returns instances of type Object."
9340512,2,1,6,java.util.HashMap,You should declare and pass around your HashMap with an appropriate parametized type.
9342073,2,1,2,java.util.HashMap,"I think the best solution is to store the properties for each country in a HashMap or something similar, which then determines which address lines apply for each country."
9342073,2,1,2,java.util.HashMap,"For simplicity, each Address might contain a HashMap<String,String>, i.e. with Strings for both the keys (address line names) and values (address data)."
9345665,2,1,4,java.util.HashMap,"From the JavaDocs:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
27862192,2,0,0,java.util.HashMap,A TypedProperty is nothing but a Wrapper to HashMap.
9352694,2,0,0,java.util.HashMap,"I would consider using a HashMap of <Note, MidiNote> where Note is your class that holds both relative note and octave and has decent equals and hashcode methods, and MidiNote is your class to represent a Midi note."
9353418,2,0,0,java.util.HashMap,"HashMap is not thread-safe, but ConcurrentHashMap is."
9353447,1,0,1,java.util.HashMap,But FlexJson sees an object as the data attribute and then tries to cast a HashMap to my Data string.
9353447,1,0,1,java.util.HashMap,How do I go about telling FlexJson to not try to make a HashMap out of the Data attribute and just take it as a String (even if it is a JSON object)?
9368164,2,1,2,java.util.HashMap,So it's already parsed into a HashMap before it starts interrogating the object for what types it should use.
9358589,1,0,0,java.util.HashMap,"In the client, I store the data in a HashMap and when it receives ""Done sending File"" it writes all the strings to the file."
9363964,1,0,3,java.util.HashMap,Why Java doesn't use ArrayList class to implement Hashtable/HashMap class?
9364068,2,0,0,java.util.HashMap,"Resizing an ArrayList would be like resizing an HashMap, since they both work with a static underlying array but you'll need to rehash all the elements of the map in any case so there's really no need to use it."
9364777,2,0,0,java.util.HashMap,The java.util.HashMap implementation performs some additional bit swapping on the hash value before indexing to protect against excessive collisions in some cases.
9364329,2,0,12,java.util.HashMap,"The reason every hashCode is hashed again, is to further prevent of a collision (see comments above) HashMap also uses a method to determine the index of a hash code (since length is always a power of 2, you can use & instead of %): code."
9365663,2,1,43,java.util.HashMap,"When a key is added to or requested from a HashMap in OpenJDK, the flow of execution is the following:  The key is transformed into a 32-bit value using the developer-defined hashCode() method."
9365663,2,1,43,java.util.HashMap,This second hash function is provided by the implementation of HashMap and cannot be overridden by the developer.
9371690,2,0,0,java.util.HashMap,HashMap.
9375413,2,1,2,java.util.HashMap,"If it's guarantteed that the name of each DataWise is unique in the list, use a HashMap<String, DataWise>, where the String key is the name of the DataWise."
9379768,1,0,2,java.util.HashMap,"When looking into BasicHttpParams I see that there is a HashMap inside, but no way of accessing it directly."
9380021,2,0,2,java.util.HashMap,"If you know there's a HashMap inside, and you really need to get those params, you can always force your way in using reflection."
9380807,2,0,2,java.util.HashMap,Note that Hashtable is more or less outdated and was replaced by HashMap.
9383323,2,0,0,java.util.HashMap,Caching works by building a lookup table in a fashion similar to a HashMap for the sake of this discussion.
9383201,1,0,0,java.util.HashMap,I'm trying to have the user have the ability to select items printed in a HashMap within the console.
23556292,2,0,0,java.util.HashMap,"If doing the location lookup was fast (i.e. also a HashMap) I think my version COULD be better in the situation where there are a ton of travel alerts, and possibly more than one ""best match"", since you will not have to traverse the first list."
9427779,2,0,1,java.util.HashMap,Your choose : Enum - EnumMaps - HashMap depends on the dynamics of your data.
9384347,2,1,7,java.util.HashMap,"How about creating a HashMap<String, Mammal>?"
9384619,1,0,3,java.util.HashMap,"Here mUsers is a List of HashMap<String,String> with users' data, including Base64-encoded photo, sum of strings sizes in this list is about 500Kb Call to startActivityForResult hangs for several minutes with black screen and then I get ANR error."
9385826,2,0,2,java.util.HashMap,See the JAXB - HashMap thread for a possible solution.
9385996,1,0,0,java.util.HashMap,JPA 1.0 Hibernate & Derby HashMap with an Enum key usage.
9385996,1,0,0,java.util.HashMap,"I am looking for help in mapping a HashMap, using JPA, which is built like so..  <NflTeam, Integer>."
9385996,1,0,0,java.util.HashMap,In the sample above I have removed any attempts I have tried for the mapping of the HashMap.
9386353,2,0,4,java.util.HashMap,"Consider using a HashMap<String, Color> to link the actionCommand String with its associated color."
9388010,2,0,0,java.util.HashMap,A HashMap would work very well here.
15071150,2,0,0,java.util.HashMap,Then take a look at the read method of whatever class is shown - if its not populating the result HashMap (as with the BasicDB implementation) then there wont be anything for you to read
9392898,2,0,0,java.util.HashMap,It starts getting interesting if the public interface of your type exposes a Map vs. a HashMap.
9392854,2,1,1,java.util.HashMap,"Because mymap can be instantiated somewhere else with a different implementation of Map, you should not rely on it being an instance of  HashMap in the code using it."
9392871,2,0,3,java.util.HashMap,"The second option limits you to always use HashMap, even if some day TreeMap would be more useful."
9394251,1,0,11,java.util.HashMap,Anyone know if Guava has an equivalent version to Functionaljava's HashMap?
9396837,1,0,1,java.util.HashMap,"I tried using a LinkedList, List, and HashMap too, same problem."
9400773,1,0,0,java.util.HashMap,"I'm writing a class that is the transcript of a student, and i created a helper instance method that will add course, I implemented the transcript class through a HashMap, course name being the key and the grade is its value."
9407760,2,1,2,java.util.HashMap,"So you have to register a channel future listener after calling bootstrap.connect() and write your code in the listener to initialize the HashMap, then it will be visible to the handler."
9404066,1,0,2,java.util.HashMap,Java HashMap sometimes returning wrong value in some threads.
9404066,1,0,2,java.util.HashMap,We are not using one HashMap across threads (yes that is bad for many reasons).
9404066,1,0,2,java.util.HashMap,Each thread has its own HashMap.
9404066,1,0,2,java.util.HashMap,"In Thread.run() we create a HashMap, set a key/value pair in it, and pass that HashMap to a method."
9404066,1,0,2,java.util.HashMap,"That method retrieves the value from the HashMap, inserts it into a string, and returns the string."
9404066,1,0,2,java.util.HashMap,The ProcessTxt is what pulls the value from the HashMap and puts it in the string.
9409651,2,0,0,java.util.HashMap,This cause HashMap to degenerate into a linkedlist.
9409824,1,0,1,java.util.HashMap,Though we are caching some data from database to HashMap but the heap walker shows me some live objects like Resultset.getString and Statement.getString which should not be there.
9409824,1,0,1,java.util.HashMap,HashMap.put() taking very less memory then above two methods.
9409824,1,0,1,java.util.HashMap,OR I am missing anything and the memory is occupied by HashMap itself and HeapWalker is just showing me methods of JDBC (getString and executeQuery).
9413898,2,1,1,java.util.HashMap,"HashMap.put will not allocate a lot of memory, it just creates small ""Entry"" objects that are are used to store key-value pairs."
9413966,1,0,19,java.util.HashMap,Why initialCapacity of Hashtable is 11 while the DEFAULT_INITIAL_CAPACITY in HashMap is 16 and requires a power of 2.
9413966,1,0,19,java.util.HashMap,"Comparison of HashMap and Hashtable source code in jdk 1.6, I saw below codes inside HashMap code."
9414219,2,0,6,java.util.HashMap,HashMap uses a power of 2 as the bit wise and is faster than using modulus.
9414219,2,0,6,java.util.HashMap,"Ironically, a modulus of a power of 2 means a good hashCode() is needed as the top bits would be ignored so HashMap has a method to rearrange the hashCode you get to avoid this issue meaning it can actually be slower."
9414080,2,1,19,java.util.HashMap,The following article addresses this question in some detail: HashMap requires a better hashCode() - JDK 1.4 Part II.
9422152,2,0,2,java.util.HashMap,"Disclaimer: You do not mention why you need to order those entries, but if it is only for ID matching purposes, you should probably redesign your application to use something along the lines of a HashMap or TreeMap from the beginning."
9422033,2,1,3,java.util.HashMap,"I'd put all objects in a HashMap using their ID as key, then run over second ID list and create new list of objects using ID and map."
9423188,1,0,4,java.util.HashMap,Why can I use Strings as keys in a HashMap?
9423188,1,0,4,java.util.HashMap,"If two Strings that are the same are not actually identical, then why can I use strings as keys in a HashMap without using the same String object?"
9423188,1,0,4,java.util.HashMap,Does HashMap have some special behavior for String objects?
9423205,2,1,10,java.util.HashMap,HashMap compares objects by calling equals() and hashCode().
9423209,2,0,1,java.util.HashMap,"When the HashMap compares the key internally, it uses the equals() method, not ==."
9423211,2,0,4,java.util.HashMap,"In general, you can use String objects because HashMap uses equals() and not == to test for key equality."
9424389,1,0,3,java.util.HashMap,Is it thread-safe to iterate a HashMap object concurrently?
9424389,1,0,3,java.util.HashMap,"If multiple threads concurrently iterate a HashMap object, without modifying it, is there a chance for race conditions?"
9424413,2,1,4,java.util.HashMap,"No race, if you can guarantee that no other thread would modify this HashMap while it is being iterated."
9434527,2,0,1,java.util.HashMap,"But if any of the threads add or remove an item, this will throw exception in any other threads that are just iterating HashMap (any collection in fact)"
9424594,2,0,1,java.util.HashMap,"The HashMap (java.util.HashMap<K,V>) uses it for example."
9424599,2,1,3,java.util.HashMap,A good example of K and V is a HashMap!
9430325,2,1,1,java.util.HashMap,"and so on JXL will allow you to read all this into your java program, store this information in a Map (java.util.HashMap) , so at this point you have the names of columns in your program and their data types."
9433287,1,0,0,java.util.HashMap,"I'm implementing some kind of AdressBook and wanna save all the contacts in some kind of DB implemented by myself as a singleton HashMap<String, Contact> contactsDB."
9436190,2,0,0,java.util.HashMap,"If you were using the enums (only) in a HashSet or as a key in a HashMap, well you should instead be using the optimised EnumSet or EnumMap."
9437120,1,0,6,java.util.HashMap,"Where allMatches is a HashMap<String, Integer>"
9437932,1,0,2,java.util.HashMap,Source code of HashMap.java.
9437932,1,0,2,java.util.HashMap,I need to look at the source code of HashMap.java of JDK version 1.6.0_19.
9437964,2,0,2,java.util.HashMap,http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java
18117934,2,0,0,java.util.HashMap,"Agree to the ""download jdk"", if you want to see it in your eclipse, you can edit it as the source of the jdk, then when you type HashMap, press F3, you will go to the HashMap.java."
9437951,2,0,0,java.util.HashMap,http://www.docjar.com/html/api/java/util/HashMap.java.html
9440282,2,0,2,java.util.HashMap,"Notice that the example uses the following: ArrayList< HashMap < String, String > > mylist = new ArrayList < HashMap < String, String > > (); And you have an integer and a string to add to the structure so you could simply turn that ID into a String and problem solved."
9440238,1,0,1,java.util.HashMap,Fast way to Serialize a HashMap.
9440428,2,0,5,java.util.HashMap,"In order to be used as a HashMap key the class has to implement these two methods to reflect ""equality"" of two objects."
9440428,2,0,5,java.util.HashMap,"and expect them to be equal and work in a HashMap, you have to override hashCode() so that it returns the same value in both instances, and equals() returns true when comparing them."
9443295,1,0,0,java.util.HashMap,"A solution would be to have a cache with a single entry, which is a HashMap of the real entries."
9443507,2,0,0,java.util.HashMap,"Sounds like you need to override HashMap.get() and add an if that has a timer for resetting, and code that loads if necessary."
9445664,1,0,1,java.util.HashMap,Java HashMap.Entry class not found.
9445664,1,0,1,java.util.HashMap,Anybody knows how can I create class to store HashMap.Entry?
29522476,2,0,1,java.util.HashMap,HashMap.Entry doesn't seem to be an inner class of Java 8 anymore
9445735,2,0,4,java.util.HashMap,"HashMap.Entry isn't public, although it does exist."
9445735,2,0,4,java.util.HashMap,You should be able to fetch it (as java.util.HashMap$Entry) but as it's not a public type you probably shouldn't be using it.
9446098,1,0,0,java.util.HashMap,I am trying to put a HashMap on to the ServletContext object so that i can access it from a war file that is on a different context.
9446225,1,0,1,java.util.HashMap,I am trying to write a simple program where i can put a HashMap on an application scoped session and get two applications/contexts deployed as two war files access the HashMap.
9446393,2,1,4,java.util.HashMap,HashSet objects use a HashMap internally which then uses a HashMap.Entry object of each entry.
9446393,2,1,4,java.util.HashMap,"With the typical HashMap load factor of 0.75, you should add another 10 or bytes for the HashMap array references."
9448103,2,0,2,java.util.HashMap,HashMap)
9453522,1,0,1,java.util.HashMap,Initialize HashMap with an array of items?
9453522,1,0,1,java.util.HashMap,I don't want to pass it directly to a HashMap and do some more computation.
9453522,1,0,1,java.util.HashMap,Is there a way to initialize a new HashMap by passing these values?
9453546,2,0,1,java.util.HashMap,the only way to initialize a HashMap with values is by using the put() method multiple times after you create the object.
9453546,2,0,1,java.util.HashMap,This is because the the HashMap needs to do the hashing mechanism to properly order the objects in the map to achieve the performance that it guarantees.
9459094,2,0,1,java.util.HashMap,"You basically looking for String.split(...), BufferedReader, FileReader, Map (HashMap) classes."
9459551,2,0,1,java.util.HashMap,"Or, if you have so many different file types that a linear search through the switch cases would be expensive, then you can initialize a HashMap which would allow constant-time lookups."
9462680,1,0,1,java.util.HashMap,Memory Leakage due to HashMap.
9462680,1,0,1,java.util.HashMap,I am facing memory leakage because of HashMap in my code.
9462680,1,0,1,java.util.HashMap,When I first login to the application this HashMap populate and I use this Map to cache some data.
9463268,1,0,6,java.util.HashMap,"What are the differences between java.util.Properties Vs java.util.HashMap<String, String>?"
9463311,2,0,2,java.util.HashMap,HashMap is not synchronized by default.
9463311,2,0,2,java.util.HashMap,HashMap is part of Joshua Bloch's newer collections API.
9463323,2,0,0,java.util.HashMap,"java.util.Properties is a Hashtable<Object,Object> therefore you can see it as a synchronized  form of java.util.HashMap<String, String> Properties is nice to handle... properties : ) If you use it for other purposes, then your choice will depend on the concurrency management in your program"
9463357,2,0,1,java.util.HashMap,"If you want to store it to disk and use that format then use a Properties, otherwise use a HashMap or Hashtable."
9463388,2,0,11,java.util.HashMap,"Map, or in your case, HashMap is general purpose storage object where you have unique key, and values to which they point."
9463388,2,0,11,java.util.HashMap,HashMap can have any object type as their key and any object type as their values.
9463388,2,0,11,java.util.HashMap,"And places where you want to have lookup values stored off some logic, you go with HashMap<String, String>."
9463388,2,0,11,java.util.HashMap,"There is no hard and fast rule, you can use HashMap<String, String> and Properties interchangeably."
9667025,2,0,1,java.util.HashMap,"I am not absolutely sure that this IS the way object references in the heap are managed, but I suspect that the object references that Java VM hands out to our programs are NOT the actual memory addresses but the internal JVM references that point to the actual address in JVM (HashMap or similar structure)."
9667025,2,0,1,java.util.HashMap,"I.e. all objects that refer to objectA will have references [NOT address] to objectA, when GC occurs JVM does NOT need to update the references in all these objects, just the actual changed address in it's own HashMap."
9468737,1,0,0,java.util.HashMap,"These request threads are tracked in a synchronized Map (created with Collections.synchronizedMap(new HashMap<Long, RequestThread>()))."
9473964,2,1,4,java.util.HashMap,This is already possible using java.util.HashMap.
9473964,2,1,4,java.util.HashMap,From java.util.MapJavaDoc (implemented by HashMap).
9473978,2,0,0,java.util.HashMap,You can use a Map (HashMap is OK) with a List.
9474479,1,0,0,java.util.HashMap,HashMap into DefaultListModel.
9474768,1,0,1,java.util.HashMap,Where report is a path to a pigscript and params is a HashMap of params to replace.
9482305,1,0,0,java.util.HashMap,How to put image in HashMap by giving a specific url.
9482509,1,0,2,java.util.HashMap,How to get a limited number of values from a HashMap or LinkedHashMap?
9488648,2,1,2,java.util.HashMap,"This would work for a HashMap as well, however HashMap being backed by a HashSet there's not guarantee that you will get the first 100 values that were entered; it would work on other types, with similar limitations."
9482561,2,0,4,java.util.HashMap,"Well to start with, doing this for HashMap as per your title, doesn't make much sense - HashMap has no particular order, and the order may change between calls."
9482988,1,0,8,java.util.HashMap,Find The Closest Answer in HashMap.
9483019,2,0,0,java.util.HashMap,"Hashes (including HashMap) have no ordering (implement 'Comparable'), they just work with the implementations of equals() and hashCode()."
9483134,2,1,7,java.util.HashMap,You cannot do it with HashMap without iterating over all of its keys.
9599843,2,1,1,java.util.HashMap,with @Persist) you could put a HashMap in it to easily get the object back for a concaternated client key; Since your Composite key is serializeable you could serialize it in toClient and deserialize it in toValue.
9493247,2,1,0,java.util.HashMap,Cycling through the HashMap can be done like this: code.
9494350,1,0,3,java.util.HashMap,"Caching Data in HashMap (Connection, ResultSet, and Statement is opened after getting Data from it and put in the Map)."
9494350,1,0,3,java.util.HashMap,In my application I need to cache data in HashMap or TreeMap it saves a lot of time because it is very time consuming task to fetch the records every time from DB server and process it.
9495900,1,0,2,java.util.HashMap,"And at some point in time I need to ""snapshot"" the object and essentially put than on a HashMap."
9495953,1,0,0,java.util.HashMap,I hope somenoe can help: I want to create a HashMap which maps one undefined Object to another one.
9496116,2,0,1,java.util.HashMap,Read your own sentence again:  I want to create a HashMap which maps one undefined Object to   another one.
9496116,2,0,1,java.util.HashMap,"To be honest, I do not know what you want to achieve with the code you posted, but If you want to use a HashMap, you can do it like this: code."
9496116,2,0,1,java.util.HashMap,"In this case you do not have to cast the values, because the HashMap has String keys and Integer values."
9499744,2,0,1,java.util.HashMap,"If you're trying to use the array as a generic HashMap key, that's not going to work."
9499744,2,0,1,java.util.HashMap,"Objects of this wrapper class will work fine as a key for your HashMap<MyByteArray, OtherType> and will allow for clean use of equals(...) and hashCode(...) methods."
9499615,2,0,0,java.util.HashMap,"Edit: if, as per your comment, the issue is using a byte array as a HashMap key then see this question."
9500337,1,0,2,java.util.HashMap,"At one point in my application, I need to ask a cache (a HashMap, i.e.) for a value."
9510855,1,0,0,java.util.HashMap,Dynamic HashMap in Android for search.
9510855,1,0,0,java.util.HashMap,I was going to use HashMap for this purpose.
9511263,2,1,0,java.util.HashMap,"Now, if you want to dump the hash map to a file, that's a different story, since HashMap implements Serializable, you can dump the object bytes to a file before the app exits, and load it back in when it starts back up."
9512526,1,0,16,java.util.HashMap,"I watched the Oracle OTN Virtual Event: Java SE and JavaFX 2.0 (28 Feb 2012) and while talking about the new diamond operator (that Map<String, List<String>> myMap = new HashMap<>(); thing) the speaker mentioned that it was not as simpleto implement than one might think, as it is not a simple token replacement."
9527812,2,1,1,java.util.HashMap,"The [CAMEL-JDBC] result is returned in the OUT body as an ArrayList[HashMap[String,Object]]   The List object contains the list of rows and the Map   objects contain each row with the String key as the column name."
9519782,2,0,1,java.util.HashMap,Java's HashMap offers random access.
9522566,1,0,1,java.util.HashMap,Correct HashMap Synchronization.
9522566,1,0,1,java.util.HashMap,Let's say I have a HashMap declared as follows: code.
9526095,2,1,2,java.util.HashMap,(The keys to the HashMap are your people's names)
9526291,1,0,2,java.util.HashMap,Variables are stored in  a HashMap.
9527599,2,0,6,java.util.HashMap,Not in HashMap but google-guava has a BiMap and you could do it like below pseudo-code code.
9528902,1,0,0,java.util.HashMap,Possible Duplicate: Java - HashMap vs Map objects   What's the difference between :  code.
9528928,2,0,2,java.util.HashMap,Difference is: when you use Map as a type you can switch implemenation (HashMap) to other!
9529038,2,1,4,java.util.HashMap,"In the first case, the interface is HashMap<String, Object>, whereas in the second it's Map<String, Object>."
9529038,2,1,4,java.util.HashMap,"If you declare it as HashMap<String, Object>, you have to change your contract if you want to change the underlying implementation...  Also Map is the static type of map, while HashMap is the dynamic type of map."
9529038,2,1,4,java.util.HashMap,"A good rule of thumb is to remain as abstract as possible on the API level: If for instance a method you are programming must work on maps, then it's sufficient to declare a parameter as Map instead of the stricter (because less abstract) HashMap type."
9529062,2,0,2,java.util.HashMap,Declaring the variable as a Map prevents you from using the clone() method provided by the HashMap class.
9530042,2,1,1,java.util.HashMap,"The Factory has a HashMap<String, Class> so it can instantiate the correct type based on <driverId> with this code code."
9531587,2,0,4,java.util.HashMap,"Transform your second list into a HashMap<String, List<String>> (the key being the ID, and the value being a list of messages containing this ID)."
9532504,1,0,0,java.util.HashMap,"Eclipse Debugger: Variable view when using nested Java HashMap, ArrayList."
9532504,1,0,0,java.util.HashMap,I know what a HashMap is and i dont care about the order.
9532504,1,0,0,java.util.HashMap,"The problem is, that put(""list"", list) will not create a new HashMap entry, it overwrites an old one."
9532565,2,0,1,java.util.HashMap,The keys of a HashMap don't have a predictable order.
9532569,2,0,1,java.util.HashMap,"For HashMap the iteration order is not specified and is likely to be quite random (which of course it really isn’t, you just can not easily see the order at first glance because it depends on the objects’ hash values); if you need a guaranteed order, use a SortedMap such as TreeMap."
9532612,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html Sounds like you are new to Java.
9534714,1,0,4,java.util.HashMap,HashMap synchronization for Map with value-incrementation.
9534714,1,0,4,java.util.HashMap,I have a questions regarding synchronization of HashMap.
9534714,1,0,4,java.util.HashMap,The mechanism I have in mind at the moment is pretty simple: I would just track this for the whole day and clear() the HashMap at midnight or something like that.
9534714,1,0,4,java.util.HashMap,Or maybe even just a normal HashMap?
9534810,2,0,1,java.util.HashMap,Using a synchronized HashMap or a ConcurrentHashMap is only necessary if your monitoring application is multi-threaded.
9534810,2,0,1,java.util.HashMap,It's not just a matter of losing a few increments - the internal structure of the HashMap itself could be corrupted.
9536077,1,0,11,java.util.HashMap,When should I use a Hashtable versus a HashMap.
9536077,1,0,11,java.util.HashMap,This is not a question about the differences between Hashtable and HashMap.
9536077,1,0,11,java.util.HashMap,"I understand that a Hashtable object cannot accept null values for either key or value entries, that it is synchronized collection, and that it uses slightly less memory than a HashMap."
9536077,1,0,11,java.util.HashMap,I'm wondering about the scenarios where it would be more appropriate to use a Hashtable instead of a HashMap.
9536119,2,1,17,java.util.HashMap,This is not a question about the differences between Hashtable and HashMap  Well it is really...
9536119,2,1,17,java.util.HashMap,I'm wondering about the scenarios where it would be more appropriate to use a Hashtable instead of a HashMap.
9536119,2,1,17,java.util.HashMap,"Precisely when you want the differences between the two:  When you want to run on Java 1.1 When you want each operation to be synchronized (getting you a form of thread safety, so long as you never iterate over it) - and for some reason don't want to use Collections.synchronizedMap over a HashMap When you don't want to be able to store null values When the memory difference is actually significant (only after you've proved this is the case) - I wasn't even aware of this difference, personally..."
9536138,2,0,6,java.util.HashMap,You can get a synchronized version of HashMap by using Collections.synchronizedMap.
9536149,2,0,9,java.util.HashMap,If you are running on a single thread then the un-synchronized HashMap is a better choice.
9540608,2,0,0,java.util.HashMap,"Its implementation is based on HashMap<K,V>, where each element is a value, and keys are just Object, exactly what you need."
9540493,2,1,5,java.util.HashMap,"The HashSet<T> implementation is O(1) and internally does just what you propose: It's a HashMap<T,V> where the value for each key is the same internal Object instance."
9541403,1,0,1,java.util.HashMap,I understand that all mapX usages would be strongly typed but what can possibly be achieved by java generics insisting on providing HashMap paramaterized type (other than adding noise to the code)?
9541467,2,1,5,java.util.HashMap,"[In your case] the   compiler generates an unchecked conversion warning   because the HashMap() constructor refers to the HashMap raw type, not   the [parameterized Map] type."
9544013,2,0,3,java.util.HashMap,java.util.HashMap does not allow you to map multiple values to a single key.
9544786,2,0,0,java.util.HashMap,"Maps will handle multiple keys to one value since only the keys need be unique: Map(key, value) However one key to multiple values requires s multimap of a map strict of : Map(key, list(values)) Also, whatever you use as a key really should implement a good hadhCode() function if you decide to use a HashMap and/or HashSet Edit: had to use() instead of <> because my mobile or sof's mobile site editor clobbered the <> symbols....odd"
9549991,1,0,1,java.util.HashMap,"Where Layer 1 has 1 value (i.e. a central node) and from there there can be arbitrary amounts of values (or Guys) in each subsequent layer, and some of the ""branches"" can be longer than others (for example it could go OldestGuy -> OldGuy1 -> Guy1 & Guy2...Guyn   whilst at the same time another branch is just OldestGuy -> OldGuy4) With this ind mind I am trying to add values to a TreeMap in specific locations of specific branches whilst making specific connections but all I seem to be getting is the same results as a HashMap."
9550900,2,1,3,java.util.HashMap,"((HashMap<String, String>)l.getItemAtPosition(position) will give you your HashMap."
9550900,2,1,3,java.util.HashMap,"Or, if you still have results2 held somewhere, results2.get(position) will also return to you your HashMap."
9553888,1,0,1,java.util.HashMap,"So given the following code, where Map, HashMap, and Set are the Java implementations, and Key and Value are some arbitrary Objects: code."
9557773,2,0,1,java.util.HashMap,Or possibly a HashMap from int to char.
9558286,1,0,0,java.util.HashMap,Getting HashMap from ((HashLiteral.SequenceHash) (args.get(1))).keyMap.
9558857,1,0,2,java.util.HashMap,"I have a stemming algorithm in Java which requires a static final HashMap<String, String> pre-filled with about 30 000 records."
9558872,2,1,4,java.util.HashMap,a) A HashMap doesn't preserve insertion order.
9560623,1,0,2,java.util.HashMap,"I have in mind a HashMap and ArrayList, but am confused how to actually begin with the implementation."
9560969,2,0,0,java.util.HashMap,"Differences: HashMap has constant-time get() and remove() operations, where TreeMap has O(log(n)) performance for those operations."
9562241,2,0,1,java.util.HashMap,I wonder if you could simplify things by using Set and HashMap?
9562315,1,0,8,java.util.HashMap,"I'm using a HashMap<Int, Int> in Kotlin and when I get out of it the return type is Int?."
9563896,2,0,3,java.util.HashMap,"In addition to checking for the presence of the key, you will also need to ensure that the returned value is not null as java.util.HashMap allows null values."
9564647,1,0,4,java.util.HashMap,"These are contained in a HashMap(ID,someData) each class A has."
9564647,1,0,4,java.util.HashMap,"EDIT:To be more clear,in my case, it is not desireable to share the HashMap(ID,someData) for all my objects as for example let's say A is a Course class,Or Catalogue, or Bank etc."
9564730,2,0,0,java.util.HashMap,"To achieve your purpose, you can make the HashMap a static variable, instead of an instance variable."
9565197,1,0,1,java.util.HashMap,"Storing it in a HashMap where every row header is the key is a waste of space, because the  row headers are exactly the same for each row."
9574310,1,0,1,java.util.HashMap,java HashMap containsKey is returning false though key is present.
9574310,1,0,1,java.util.HashMap,"I am using a HashMap data structure to store a SqMatrix (square matrix), where the key is of type MatrixIndex (which contains row and col) and the value is of type Integer."
9574310,1,0,1,java.util.HashMap,"But when I am getting false as output of ""if (mat.containsKey(key))"" though the HashMap has the corresponding key in it."
9574310,1,0,1,java.util.HashMap,Do anybody have an idea on why the containsKey is returning false though it is present in the HashMap?
9575269,2,0,2,java.util.HashMap,"What you want to do is use a HashMap<Object, Long>."
9577518,2,1,1,java.util.HashMap,Try using a static HashMap which maps the semester to the number of courses in that semester.
9577897,2,0,0,java.util.HashMap,"Basically, the HashMap is a list of items which are indexed by a unique key."
9577897,2,0,0,java.util.HashMap,"With the HashMap, there isn't such ordering, and so you can't reference the items by an index."
9577897,2,0,0,java.util.HashMap,"When you add an item to a HashMap, you provide a key, which can be any Object, and the value, which can be any Object."
9582995,1,0,0,java.util.HashMap,I am storing a double value inside the a HashMap as shown  code.
9582995,1,0,0,java.util.HashMap,"i am getting an error as  java.lang.Double cannot be cast to java.lang.String  I am confused here ,  This is my actual HashMap and i am setting the values in it as shown  code."
9582995,1,0,0,java.util.HashMap,"Could anybody please tell me , how the structure of the HashMap should be ?"
9583046,2,0,0,java.util.HashMap,"First of all, make a HashMap with Class Types defined , like : HashMap<String,Double>  Secondly , this should work :  code."
9583705,2,1,7,java.util.HashMap,"To address recent edit to your question: it is not part of the contract, in fact LinkedHashMap does not even implement keySet() and values() but uses base classes's (HashMap) version."
9589039,2,0,0,java.util.HashMap,The problem with using a hash value is that duplicates are not allowed in the garden-variery HashMap and TreeMap classes.
9588959,1,0,8,java.util.HashMap,Difference between HashMap and Map in Java..?
9588959,1,0,8,java.util.HashMap,Possible Duplicate: Java - HashMap vs Map objects   I want to know the difference between HashMap and Map in java..?
9588993,2,1,12,java.util.HashMap,"In the first case, the interface is HashMap<String, Object>, whereas in the second it's Map<String, Object>."
9588993,2,1,12,java.util.HashMap,"If you declare it as HashMap<String, Object>, you have to change your contract if you want to change the underlying implementation... Also Map is the static type of map, while HashMap is the dynamic type of map."
9588993,2,1,12,java.util.HashMap,"A good rule of thumb is to remain as abstract as possible on the API level: If for instance a method you are programming must work on maps, then it's sufficient to declare a parameter as Map instead of the stricter (because less abstract) HashMap type."
9589000,2,0,0,java.util.HashMap,"Map<K,V> is an interface, HashMap<K,V> implements Map you can do code."
9589000,2,0,0,java.util.HashMap,Map HashMap
9588976,2,0,12,java.util.HashMap,HashMap is an implementation of that interface.
9588984,2,0,1,java.util.HashMap,And HashMap is an implementation of that interface (i.e. provides all of the methods specified in the interface).
9588990,2,0,1,java.util.HashMap,Map is an interface; HashMap is a particular implementation of that interface.
9588990,2,0,1,java.util.HashMap,HashMap uses a collection of hashed key values to do its lookup.
9594202,2,0,1,java.util.HashMap,"Try using a HashMap<Integer,Integer> to store previously-seen values as you iterate through the array (key is the number that you've seen, value is the number of times you've seen it)."
9594236,1,0,1,java.util.HashMap,"In Java HashMap, how to enforce a generic type to be a subclass."
9597641,2,0,0,java.util.HashMap,You could go ahead with HashTable or HashMap that comes with JDK.
9597641,2,0,0,java.util.HashMap,"Choosing between the two, goes down to this,  access to the Hashtable is synchronized on the table while  HashMap isn't."
9597641,2,0,0,java.util.HashMap,Iterator in the HashMap is fail-safe while the enumerator for the Hashtable isn't.
9597641,2,0,0,java.util.HashMap,"HashMap permits null values in it, while Hashtable doesn't."
9597641,2,0,0,java.util.HashMap,HashMap is part of the new collections framework (since JDK 1.2) If you have millions of entries go for a database.
9597641,2,0,0,java.util.HashMap,"Similar question here HashMap in Java, 100 Million entries"
9597946,2,0,7,java.util.HashMap,"IF the HashMap contained n buckets, after a clear it will still contain n empty buckets, with performance consequences (positive or negative depending on your usage of the map) -if you use clear you are not throwing away the object, thus it will not be managed through next GC, with impact (positive) on GC time if this happens a lot."
9603024,1,0,6,java.util.HashMap,How does Java HashMap store entries internally.
9603024,1,0,6,java.util.HashMap,"So as far as a HashMap is concerned, keyOriginal, keyCopy and keyClone are indistinguishable."
9603024,1,0,6,java.util.HashMap,"Now if you put an entry into the HashMap using keyOriginal, you can retrieve it back using keyCopy or keyClone, ie code."
9603024,1,0,6,java.util.HashMap,"How does the HashMap class know what are the complete list of keys, values and entries stored in the map?"
9603024,1,0,6,java.util.HashMap,(docjar.com/html/api/java/util/HashMap.java.html).
9603505,2,0,1,java.util.HashMap,"Simply put, the HashMap is an object in your computer's memory that contains keys and values."
9603505,2,0,1,java.util.HashMap,"When you changed your key, there is no way to get a value for it because you never added an item to your HashMap with the mutated key."
9603067,2,1,7,java.util.HashMap,"HashMap maintains a table of entries, with references to the associated keys and values, organized according to their hash code."
9603067,2,1,7,java.util.HashMap,"If you mutate a key, then the hash code will change, but the entry in HashMap is still placed in the hash table according to the original hash code."
9624464,2,1,0,java.util.HashMap,"The method accepts a firstName, lastName and ExamplesTable parameters using the matcher: ""the first name is $firstnamecriteria and the last name is $lastnamecriteria the results should be: $resultsTable"" What I do is I throw the results table into a HashMap key'd by firstName/lastName, I then execute my search function on my service with those same firstName/lastName parameters and throw the results from the service call into another HashMap."
9624464,2,1,0,java.util.HashMap,"In my @Then method, I compare the two HashMap results to see if the expected results from the story match the actual results obtained by the service."
9607705,2,1,2,java.util.HashMap,So you could for example use a Hashtable (or if you don't need synchronized access use a faster HashMap instead) for your purpose like this: code.
9613817,1,0,1,java.util.HashMap,accessing HashMap data from a nested HashMap.
9613817,1,0,1,java.util.HashMap,I am building a board game and I have a board declared that is of HashMap code.
9613817,1,0,1,java.util.HashMap,"There are multiple layers on this board, and this is why this HashMap must take other HashMaps."
9613856,2,1,3,java.util.HashMap,Tell the system that the value is a HashMap object and you should able to call it code.
15796987,2,0,3,java.util.HashMap,"how about making a HashMap<String,Object> containing your options and passing it to Persistence.createEntityManagerFactory(""unitName"",map)?"
9615171,1,0,0,java.util.HashMap,Storing different types of arguments in HashMap.
9615171,1,0,0,java.util.HashMap,Please tell me how can i store these values as HashMap.
9616195,1,0,7,java.util.HashMap,"I was recently writing a concurrent program in Java and came across the dollowing dilemma: suppose you have a global data structure, which is partof regular non-synchronized, non-concurrent lib such as HashMap."
9616254,2,0,4,java.util.HashMap,"There is also Hashtable, which has the  same interface as HashMap, but is synchronized, although it's use is not advised currently (deprecated), since it's performance suffers when the number of elements becomes larger (compared to ConcurrentHashMap which doesn't need to lock the entire Collection)."
24188059,2,0,0,java.util.HashMap,Pls refer Java HashMap: How to get the first key's value?
9621116,2,0,2,java.util.HashMap,"2) If I needed to do multiple searches, then I would build a HashMap where the key was the attribute value."
9619767,2,0,2,java.util.HashMap,"Assuming that's the case, how about replacing your HashMap<String, ArrayList<String>> with a HashMap<Integer, ArrayList<Integer>>?"
9619358,1,0,0,java.util.HashMap,i need to serialize data from a static HashMap.
9619737,2,0,1,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode, which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
9621519,1,0,2,java.util.HashMap,How can I use a HashMap as a way to access and copy items from a list?
9621519,1,0,2,java.util.HashMap,"We could also set it up so that instead of accessing the items in the HashMap with an int, which would basically just make it an ArrayList, we could access them with Strings."
9621519,1,0,2,java.util.HashMap,and adding them to the HashMap.
9621519,1,0,2,java.util.HashMap,"I just need a way to use a HashMap to create something of an ""Item database"" that I can use to access an indefinite amount of an item in the list."
9621588,2,0,5,java.util.HashMap,How about having a HashMap that has a value of a set (or a list depending on if the same item can exist more than once)?
9621654,2,0,0,java.util.HashMap,"If I'm understanding this correctly, you should have a list of all the items inside each of the HashMap to access multiple items under an item type."
9621654,2,0,0,java.util.HashMap,"To do this just make a HashMap<String, ArrayList<Item>>."
9621654,2,0,0,java.util.HashMap,"However, HashMap isn't quite that efficient for this."
9621654,2,0,0,java.util.HashMap,"Your call on which implementation you want to use, the HashMap wrote is simpler and less code to write with the trade-off of less performance and increased memory use."
9623341,2,1,3,java.util.HashMap,Now you want to replace this with one HashMap instead - that means we already use up 8 extra bytes for that.
9623341,2,1,3,java.util.HashMap,"Also the HashMap is always initialized so we get the overhead of: 2 words header + reference + 3 ints + float + 1 array (2 words overhead, 4byte size, 16 references by default) which takes up 182 bytes of memory."
9624409,2,0,5,java.util.HashMap,Each addition also uses an overriden HashMap class with an instance initializer.
9624869,1,0,2,java.util.HashMap,Why does the Java HashMap copy constructor affect floating point precision?
9624869,1,0,2,java.util.HashMap,"Using that to ""copy"" a HashMap results in the same floating point precision issues."
9625130,2,0,4,java.util.HashMap,"If you use LinkedHashMap instead of HashMap to ensure preserved iteration order, you should get the exact same results each time."
9626170,2,0,0,java.util.HashMap,"As HashMap doesn't guarantee any order so copying a HashMap can result in a different order, meaning the sum of values will be different."
9625053,2,0,3,java.util.HashMap,"HashMap, as well as Guava's hash-based utilities, use the following method on hashCode() results to improve bit distributions and defend against weaker hash functions:  code."
9625442,2,0,1,java.util.HashMap,If you need to initialize a HashMap (HashTable is obsolete) you can use an static initialization block.
9627270,1,0,1,java.util.HashMap,"I tried doing a HashMap with the 1st filter as the key, and the value is a list that contains all the other (using split("" "") for breaking up the filters.."
9627406,1,0,0,java.util.HashMap,Storing Multiple classes in a HashMap.
9627406,1,0,0,java.util.HashMap,I have several classes in common that all implement the same interface that I would like to manage via a single HashMap.
9627573,2,0,0,java.util.HashMap,I assume you're talking about using these classes in a HashMap or a HashSet.
9627577,2,0,0,java.util.HashMap,"Otherwise, the worst that could happen is an increased rate of hash collisions when the objects in question are used as HashMap keys - this, however, would only affect the performance of your code and not its correctness..."
9627925,2,0,0,java.util.HashMap,You could use either an ArrayList of an ArrayList or a HashMap ArrayList: code.
9627925,2,0,0,java.util.HashMap,HashMap: code.
9627903,1,0,0,java.util.HashMap,Java - Displaying contents of a HashMap using (Abstract)ListModel.
9627903,1,0,0,java.util.HashMap,I have tried storing the objects in an AbstractListModel rather than a HashMap but get errors.
9627943,2,0,4,java.util.HashMap,"Rather than using an AbstractListModel in place of your HashMap, consider creating a class that extends AbstractListModel and that holds the TelephoneDirectory class with its HashMap as the nucleus of the AbstractListModel's data."
9627943,2,0,4,java.util.HashMap,Edit: Also consider using a TreeMap rather than a HashMap so as to be able to retrieve your names and telephone records in name order.
9627923,1,0,0,java.util.HashMap,How to initialize Key Class in HashMap in Java.
9627923,1,0,0,java.util.HashMap,I have a question related to Key Type initialization in HashMap.
9627923,1,0,0,java.util.HashMap,Now I am building a HashMap with key as type Node as follows: code.
9627923,1,0,0,java.util.HashMap,"As you can possibly figure out, I am trying to generate a graph adjacency list with the node class as HashMap."
9627923,1,0,0,java.util.HashMap,"Now, my question is when I call AdjList() constructor where I create a new HashMap with some maxSize, will it initialize the Node() class as key type?"
9627989,2,1,1,java.util.HashMap,"when I call AdjList() constructor where I create a new HashMap with some maxSize, will it initialize the Node() class as key type?"
9630588,2,0,1,java.util.HashMap,"Note that the typical choices for a Set is a HashSet, Map is HashMap and List is ArrayList."
9632371,1,0,3,java.util.HashMap,RMI server side has a HashMap which contains user information that the web app side needs to control.
9632371,1,0,3,java.util.HashMap,Then I just remove the item in the HashMap.
9632371,1,0,3,java.util.HashMap,Now I realize the GC will not collect the object I removed in HashMap because maybe other thread is still using it and the object also contains some subobjects such as user contacts.
9633313,1,0,1,java.util.HashMap,Android - Java HashMap keySet suddenly returns null.
9633313,1,0,1,java.util.HashMap,"I have two methods: The first one iterates over a HashMap<String, String> (""mWidgetStartConfig"") to set the values of spinner widgets in a fragment."
9633313,1,0,1,java.util.HashMap,"The second method implements the onItemSelectedcallback method of the OnItemSelectedListener and updates the values in another HashMap<String, String> (""mWidgetCurrentConfig"") according to which spinner item was selected."
9633313,1,0,1,java.util.HashMap,I've also tried different ways to iterate over the HashMap - same result.
9639950,1,0,0,java.util.HashMap,"That's why I want to use these values in the HashMap, if I don't have the value of the given date as a Key, I would open the csv file and search it."
9642908,1,0,1,java.util.HashMap,"I wanted to use HashMap<Person, CreditHistory>, but the java API says I should be wary about using HashMaps to track mutable objects (like credit history, in my program)."
9642908,1,0,1,java.util.HashMap,http://docs.oracle.com/javase/1.5.0/docs/api/java/util/HashMap.html Is there a better structure for this?
9644101,1,0,1,java.util.HashMap,import java.util.ArrayList; import java.util.Arrays; import java.util.HashMap; import java.util.Iterator; import java.util.List; import java.util.Map; import java.util.Map.Entry; public class findVariables { code. }
9645106,2,1,2,java.util.HashMap,"If I'm on to you, then: since - at least, in your current code - you'll be running through all of the solutions anyway, you might want to look at instead generating the list of HashMaps close to your suggested HashMap, then just checking all of them."
9644210,2,0,1,java.util.HashMap,"References are not compared; the equals method is used (unless null, which is permitted in HashMap but not Hashtable)."
9644219,2,0,3,java.util.HashMap,HashMap and HashSet depend on the keys' hashCode and equals method.
9644219,2,0,3,java.util.HashMap,"So, you can use two Strings that have the same characters but are != reference-wise and they will hash to the same value in a HashMap."
9650665,2,1,3,java.util.HashMap,"Hashtable is useful when you need to have synchronized access to the elements in a Map, if that's not the case HashMap is preferred."
9650671,2,0,0,java.util.HashMap,"References to the wrapper can be stored and accessed, and will change the contents of the HashMap as well."
9650727,2,0,0,java.util.HashMap,"If you want something like DB.getName(5), I'd suggest a HashMap<Integer,Player> member, that way lookup by id will be fast."
9651660,2,1,4,java.util.HashMap,HashMap's rely on proper implementation of both equals and hashCode method in order to operate correctly.
9652367,1,0,2,java.util.HashMap,How to create a new HashMap whenever a duplicate key is found?
9652547,2,0,0,java.util.HashMap,HashMap provides fast retrieval of value for a particular key.Here each key is mapped to a particular value.Thus you cannot have multiple keys with the same value.
9653154,2,1,2,java.util.HashMap,"It's a list of HashMap objects, but it's still a list code."
9656026,1,0,1,java.util.HashMap,"When look into the source codes of Java HashMap,I see some codes below: while (capacity < initialCapacity)      capacity <<= 1; But I can't find the document about operator <<= via Google.I know operator << in Java."
9657512,2,1,4,java.util.HashMap,"No, but you can keep your Players in a HashMap: code."
9659015,1,0,6,java.util.HashMap,The reason I ask this is the HashMap ( and other non concurrent maps documentation ) have this comment:  Note that this implementation is not synchronized.
9659059,2,0,2,java.util.HashMap,Putting something in a HashMap is not an atomic operation: code.
9659059,2,0,2,java.util.HashMap,It may be worthwhile to wrap your HashMap with Collections#synchronizedMap.
9659123,1,0,1,java.util.HashMap,Store HashMap Cookie Repository in Servlet Across Requests.
9659474,2,1,3,java.util.HashMap,"You could keep references to each node of the tree in a HashMap [1], to get O(1) access to each node instead of the O(log(n)) which is typical of trees."
9659474,2,1,3,java.util.HashMap,"That would make it possible to build the tree in O(n) time, because that HashMap lets you jump directly to a node instead of traversing there from the tree's root node."
9659423,1,0,3,java.util.HashMap,"I then have a HashMap<String, Paper> to store multiple papers."
9662606,1,0,0,java.util.HashMap,Populating HashMaps of HashMap of Objects.
9662606,1,0,0,java.util.HashMap,"I have code I am working on, but I am having issues populating the HashMap of HashMaps."
9662650,2,1,3,java.util.HashMap,"UPDATE: Since Games and Store are both used as keys to a HashMap, I would recommand that you add the hashCode and equals methods: Games: code."
9663884,1,0,1,java.util.HashMap,I have two questions on Java HashMap: 1) Is it possible in any implementation of Java HashMap to get corresponding Key from the value ?
9663884,1,0,1,java.util.HashMap,2) Is it possible in any implementation of Java HashMap to get Key position in the HashMap ?
9664125,2,0,0,java.util.HashMap,"HashMap is unordered, and Collections.sort() works only on Lists."
9664125,2,0,0,java.util.HashMap,"You might want to use a TreeMap instead of a HashMap here, but it is sorted according to keys [and not values!]"
9664197,2,0,0,java.util.HashMap,"A HashMap is unordered, so you can't keep one sorted."
9664197,2,0,0,java.util.HashMap,"But assuming you just want to extract the keys from your HashMap in a sorted order, use Collection.sort(yourMap.keys(), new MyComparator()) where MyComparator compares both the values you want to sort on."
9664491,2,0,0,java.util.HashMap,Instead of HashMap you should use TreeMap with your custom comparator like this: code.
9665215,1,0,0,java.util.HashMap,How to iterate over a HashMap while avoiding ConcurrentModificationException.
9665215,1,0,0,java.util.HashMap,"I have a HashMap, its of the type HashMap<String,HashMap<String,int>> now i need to iterate over this HashMap and delete the inner HashMaps that have a value of 0 for any key."
9665215,1,0,0,java.util.HashMap,If such a removal makes the inner HashMap empty then the inner HashMap's corresponding key is removed from the outer HashMap.
9665275,2,0,2,java.util.HashMap,Collections.synchronizedMap(new HashMap()) or take a look at ConcurrentHashMap
9938205,2,0,1,java.util.HashMap,This allows using mutable numbers in sets like ArrayList and HashMap to work with high performance.
9666935,1,0,0,java.util.HashMap,"Is there another possibilty to realise it, maybe a HashMap or something?"
9670121,1,0,0,java.util.HashMap,I want to read these all rows to memory and cached to HashMap by using mFromId as key.
9673182,1,0,1,java.util.HashMap,Add entries to ArrayList in HashMap.
9673182,1,0,1,java.util.HashMap,"I have an ArrayList with some entries as a value in a HashMap, how to add new values to it?"
9673258,2,0,1,java.util.HashMap,Depends on exactly what values you want to add from your HashMap.
9673258,2,0,1,java.util.HashMap,"The example below gets the entries from the map, using entrySet() method in HashMap."
9678690,2,0,1,java.util.HashMap,Here is an array of HashMaps used to demo how a HashMap works.
9678629,2,0,1,java.util.HashMap,"You will need to create a Map object using subclasses which implement the Map interface e.g, HashMap, TreeMap, etc."
9683530,2,1,3,java.util.HashMap,That will be neater than implementing the String to int mapping using a pre-populated HashMap or something.
9686173,2,0,1,java.util.HashMap,You could maintain a HashMap which stores this information.
9690552,2,1,4,java.util.HashMap,From the documentation:  [...] This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
9693063,2,0,0,java.util.HashMap,Do you have allCountries = new HashMap(); in your static initializer block?
9702087,1,0,2,java.util.HashMap,"So, as first attempt, I create a HashMap with the page and the list of nodes of the page."
9702087,1,0,2,java.util.HashMap,"So I was wondering if is something faster than a HashMap, maybe a List of Lists or something."
9702196,2,0,2,java.util.HashMap,"HashMap<K, V> is supposed to have constant time complexity in accessing the value, provided the key."
9702196,2,0,2,java.util.HashMap,And HashMap should be fast enough.
9702196,2,0,2,java.util.HashMap,"I don't know too much about JSF, but I think - if the data structure and access pattern is the one that a Map is designed for - the problem is not the HashMap itself."
9706652,2,1,7,java.util.HashMap,Use a LinkedHashMap instead of a regular HashMap.
9708093,1,0,0,java.util.HashMap,I want to write a regex expression so I can extract the key-value pairs and put them in a HashMap.
9711150,1,0,1,java.util.HashMap,"So, what is the reason to use the interface Map instead the class HashMap on object declaration?"
9711193,2,0,2,java.util.HashMap,In principle you might want to replace the HashMap with -say- a TreeMap later and if the rest of the program only assumes that it is a Map then this replacement is trivial.
9711198,2,0,1,java.util.HashMap,If the programmer declared map as HashMap then the programmer may inadvertently use som HashMap specific methods or fields.
9711198,2,0,1,java.util.HashMap,Then the programmer would be stuck with using a HashMap.
9711198,2,0,1,java.util.HashMap,"As it is, the programmer can easily change it from a HashMap to any other kind of Map."
9711263,2,0,0,java.util.HashMap,"@Mathias and @emory are correct as to the reason it's usually done this way with Map = new HashMap, whatever class creates the actual map used is free to implement it with a TreeMap, HashMap, BidiMap or whatever."
9714592,2,0,0,java.util.HashMap,Then you would want to look into the HashMap of HashTable classes to get the lookup functionality you want:  http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html http://docs.oracle.com/javase/7/docs/api/java/util/Hashtable.html
9719394,2,0,2,java.util.HashMap,"If you don't use it, a ConcurrentHashMap behaves as if not synchronized - like a normal Map eg HashMap."
9720201,1,0,2,java.util.HashMap,"I have a JAVA Object that is populated from my internal Class..It is actually a HashMap<String,Object>."
9720201,1,0,2,java.util.HashMap,"Object can be anything..another HashMap, OR List etc ..Now i have to convert it into JSON (and removing all those keys that have value as NULL).."
9720201,1,0,2,java.util.HashMap,"But in one of my JAVA Object , i have a HashMap<Integer,String> and since in JSON Object , Integer cannot be keys, net.sf.json library is giving an Exception : code."
9730526,2,0,0,java.util.HashMap,"This is from the JDK 7 JavaDoc for HashSet:  Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
9730231,2,0,1,java.util.HashMap,"sounds like what you want is something like a HashMap<String, Integer> so your event could be the String key and that would map to an Integer object."
9731509,1,0,0,java.util.HashMap,And then putting that to HashMap with there counts.
9735117,2,0,0,java.util.HashMap,You can also try with HashMap.
9743036,1,0,0,java.util.HashMap,JSF - cannot display data from HashMap.
9750444,1,0,0,java.util.HashMap,It is indeed storing a java.util.HashMap-
9753413,2,0,2,java.util.HashMap,"A HashMap is an unordered collection, so it does not define an ordering over it's keys."
9762272,2,0,1,java.util.HashMap,The HashMap is a dynamic structure; you can exceed the initial capacity which is what the loadfactor is used for - to know when to expand.
9766976,2,0,0,java.util.HashMap,"though for the third question, you would be better off with using a HashMap (or a TreeMap if you want to keep the keys automatically sorted)."
9767106,2,0,0,java.util.HashMap,"I would do your task in this way  Create two HashMap one for each file(oldFile, newFile), your ids will be the keys of the map  Build new arraylists: common, toBeAdded, toBeDeleted loop on oldKeysHashMap keys: for each key check whether the key exists in the newHasMap."
9767106,2,0,0,java.util.HashMap,"This is not that case of HashMap, SortedHashMap could be the right one."
9766867,2,0,0,java.util.HashMap,"If your files are not too large, maybe you can do the following steps  Create a HashMap For every entry in old file, add it with value 'Old' For every entry in new file,   Check if it is in the HashMap  If so, then set value 'Both' (Additionally, you could add it to a HashMap of common elements) If not, add it with value 'New'    This should hopefully address question 2."
9769848,2,1,13,java.util.HashMap,We are expected to use HashMap and other implementations of Map interface introduced in Java 1.2.
9769853,2,0,3,java.util.HashMap,"But you shouldn't use either because they have been superceded by the Map interface and the implementing classes, of which HashMap is the most popular."
9769887,2,0,1,java.util.HashMap,You should prefer the Map interface and its more modern implementations: HashMap and TreeMap.
9770181,2,0,8,java.util.HashMap,"As for Hashtable, the advantage it had over other maps such as HashMap was thread safety, but with the introduction of ConcurrentHashMap since Java 1.5, there is no real reason to use it any longer - see javadoc  As of the Java 2 platform v1.2, this class was retrofitted to implement the Map interface, making it a member of the Java Collections Framework."
9770181,2,0,8,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
9770181,2,0,8,java.util.HashMap,"In summary: Don't use Dictionary or Hashtable, unless you really have to for compatibility reasons, use either HashMap if you don't need thread safety, or ConcurrentHashMap if your map is used in a concurrent environment."
9774097,2,0,0,java.util.HashMap,"Using a general HashMap as a backing map, build a class that puts objects in the HashMap."
9774097,2,0,0,java.util.HashMap,"So you would need to use both a HashMap and a prioQueue, or maybe a Tree of some kind."
9774097,2,0,0,java.util.HashMap,"That way, you don't have the nlogn sorting cost each time you try to re-do the HashMap, but rather have a logn cost."
9773733,1,0,10,java.util.HashMap,"Compilation error:   error: cannot infer type arguments for HashMap;           Map map2 = new HashMap<>() {     reason: cannot use '<>' with anonymous inner classes     where K,V are type-variables:       K extends Object declared in class HashMap       V extends Object declared in class HashMap  Code: code."
9773812,2,1,6,java.util.HashMap,Basically you create a new anonymous subclass of HashMap and define the instance intializer block here.
9773812,2,1,6,java.util.HashMap,"Btw, this only works since HashMap is not final."
9773812,2,1,6,java.util.HashMap,"Since you'll get an anonymous subclass of HashMap the diamond operator doesn't work here, since the subclass would then be compiled as if you wrote ... extends HashMap<Object, Object> and this clearly isn't compatible to Map<String, String>."
9773846,1,0,4,java.util.HashMap,Can i have HashSets as the keys in a HashMap?
9773974,2,0,3,java.util.HashMap,"You can, but once you have added a HashSet as a key to a HashMap you shouldn't modify it again, as the HashSet.hashCode() might change and you'll never find your HashSet again."
9787094,2,1,2,java.util.HashMap,"Create a HashMap<Pair,Integer>, and maintain it [as a histogram] while iterating the list."
9785015,2,0,1,java.util.HashMap,If you're using a HashMap: code.
9785295,2,0,0,java.util.HashMap,"If you are inserting different value for same key, then HashMap will override with newly value."
9789247,1,0,3,java.util.HashMap,: I know HashMap isn't thread safe.
9789566,2,0,0,java.util.HashMap,"First, subsequent access to the map also needs to be synchronized, unless new HashMap() is replaced with new java.util.ConcurrentHashMap()."
9789566,2,0,0,java.util.HashMap,getMap() should return variable map rather than new HashMap().
9792522,1,0,1,java.util.HashMap,"new HashMap<Integer, new java.util.ArrayList<Long>()>();  Thanks"
9799750,2,0,0,java.util.HashMap,HashMap won't allow you to store values with duplicate keys(your value null in this case).
9799817,2,1,5,java.util.HashMap,"But later, the HashMap implemented a different behaviour (allows null values)."
9869543,2,1,0,java.util.HashMap,"I use internal files (fileGetInput and fileGetOutput), I then create a HashMap<Integer, char[][]> and write it to the file using writeObject."
9810026,2,0,1,java.util.HashMap,Try using a HashMap to map each word to the position of that word in a vector.
9813589,2,1,3,java.util.HashMap,I suggest using a HashMap or something to keep track of which slot the item came from.
9813358,1,0,6,java.util.HashMap,I can handle most of this pretty well; I simply keep a HashMap on the backend.
9813358,1,0,6,java.util.HashMap,"The problem here is that the returned entry set will not be modified if I make changes to the HashMap, unless I'm misunderstanding something... Let me know if this makes sense, or if I'm convoluting a simple situation."
9813538,2,0,1,java.util.HashMap,"One way is to inherit from HashMap<String, V>, then call methods in the base class after calling toUpperCase() on the key(s)."
9813538,2,0,1,java.util.HashMap,"However, it is much easier to just override the hashCode() method in MyClass (or whatever classes you'll use), and then use the standard HashMap<K, V> class, without implementing your own."
9815329,1,0,5,java.util.HashMap,"I know it's actually incredibly complicated, especially for things like HashMaps, but I'm looking for something really rough, like: Memory(HashMap) = fixedOverhead + variableOverhead * tableSize + A*numKeys + B*numValues + Memory(allKeys) + Memory(allValues)  of course it'll vary a lot depending on this and that, but even a rough within-a-factor-of-2 estimate would be immensely useful."
9819933,2,0,0,java.util.HashMap,"Since a HashMap stores 2 Ints per element, it could start with roughly the double size of List/Array/Vector."
9816087,2,0,7,java.util.HashMap,Let's take HashMap as an example:  Garbage is created when you remove an entry.
9816087,2,0,7,java.util.HashMap,This can be avoided in a couple of ways:  You can give a 'capacity' argument in the HashMap constructor to set the size of the initial hash array large enough that you never need to resize it.
9816087,2,0,7,java.util.HashMap,(But that potentially wastes space ... especially if you can't accurately predict how big the HashMap is going to grow.)
9816087,2,0,7,java.util.HashMap,You can supply a ridiculous value for the 'load factor' argument to cause the HashMap to never resize itself.
9816087,2,0,7,java.util.HashMap,"(But that results in a HashMap whose hash chains are unbounded, and you end up with O(N) behaviour for lookup, insertion, deletion, etc."
9816087,2,0,7,java.util.HashMap,"And of course, that's why HashMap and similar general purpose data structure classes don't do any object pooling."
9816087,2,0,7,java.util.HashMap,"Finally, there is an easy way to tune a HashMap so that an add immediately followed by a remove of the same key produces no garbage (guaranteed)."
9816087,2,0,7,java.util.HashMap,"Wrap it in a Map class that caches the last entry ""added"", and only does the put on the real HashMap when the next entry is added."
9815856,2,1,0,java.util.HashMap,One option is to try to fix the HashMap implementation to use a pool of entries.
9826385,2,0,4,java.util.HashMap,"I guess you need a version of HashMap that uses open addressing, and you'll want something better than linear probing."
9816514,1,0,1,java.util.HashMap,"Or would I be better off by simply using a hashmap and sort it by value as described in, for example, Java sort HashMap by value"
9817136,1,0,1,java.util.HashMap,String in HashMap equality.
9817136,1,0,1,java.util.HashMap,"So, I've created a HashMap(Resource being my own creation), which each key is the filepath for each resource."
9817136,1,0,1,java.util.HashMap,"Now, let's say I have a Resource with a filepath ""mat\10wdim3.mat"" in the HashMap, trying to retrieve it will fail because both hashcodes are not equal."
9817227,2,1,2,java.util.HashMap,"The problem is that you did not escape letter '\' to '\\'; ""mat\10wdim3.mat"".hashCode(); //-2128683668 but if you escape letter '\',you will get the follow ouput: ""mat\\10wdim3.mat"".hashCode(); // -347056295 So，just escape the filePath String ,when you fetch the resource from HashMap!"
9889597,2,1,7,java.util.HashMap,The trick I used is to register all Java derived instances of GameObject in a HashMap automatically at creation time.
9889597,2,1,7,java.util.HashMap,Then when dispatching the director call it's just a question of looking it up in the HashMap.
9889597,2,1,7,java.util.HashMap,Note that since all Java instances are being stored in a HashMap we need to use a WeakReference to be sure that we aren't prolonging their lives and preventing garbage collection from happening.
9820547,2,0,2,java.util.HashMap,Initializing a HashMap Retrieving values from a Map Storing values in a Map
9821418,1,0,2,java.util.HashMap,I want to split this ArrayList into several ArrayLists ad put them into a HashMap grouped by the day.
9821418,1,0,2,java.util.HashMap,"Now iterate over the Timestamps and if getDay() is not within currentDay + 24 hours, assign currentDay = getDay() (at 00:00AM), create a new key in the HashMap and put all the following Timestamps in it until we come to a Timestamp where again getDay() is not within currentDay + 24 hours, then just repeat."
9823915,1,0,4,java.util.HashMap,HashMap doesn't provide values in the order in which added them.
9823915,1,0,4,java.util.HashMap,I am putting values in HashMap.
9823915,1,0,4,java.util.HashMap,But when I am reading values from that HashMap; I am NOT getting those values in the ORDER in which I have added them.
9823946,2,0,0,java.util.HashMap,"This is stated in the javadocs for HashMap http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
9823952,2,1,6,java.util.HashMap,HashMap doesn't guarantee that the insertion-order is preserved.
9823952,2,1,6,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
9823954,2,0,1,java.util.HashMap,HashMap doesn't guarantee the order in which items are returned.
9824579,2,0,2,java.util.HashMap,"I think you mean hashcode, not hascode... That being said, the hashcode is used to construct structures such as Maps (HashMap, etc)."
9824508,2,1,10,java.util.HashMap,The hashCode method is used internally by for instance HashSet or HashMap etc.
9831883,2,1,1,java.util.HashMap,You could memorise the form in the HashMap.
9831883,2,1,1,java.util.HashMap,You can review the values by the pacing through the HashMap.
9830807,1,0,0,java.util.HashMap,"I'm guessing a HashMap, mapping usernames to User objects, but I wondered if there was something else that I didn't know about which would be better."
9830834,2,1,6,java.util.HashMap,"If you don't need to store them in a database (which is the usual scenario),  a HashMap<String, User> would work fine - it has O(1) complexity for lookup."
9831859,2,0,0,java.util.HashMap,In which case there would be a lot of collisions causing the HashMap to be loaded unevenly and therefore slowing down the lookups.
9831859,2,0,0,java.util.HashMap,"in summary if you have a large data set, a good/suitable hashing algorithm and you have the space to hold it all in memory then HashMap can provide a relatively fast lookup I think given your last post on the ArrayList and it's scalabilty I would take Bozho's suggestion and go for a purpose build cache such as EhCache."
9831512,2,0,5,java.util.HashMap,"Your problem is that in your field, you're just using HashMap."
9831512,2,0,5,java.util.HashMap,"Otherwise, HashMap just holds Objects."
9831512,2,0,5,java.util.HashMap,"I'm going to use the fancy well-typed stuff (HashMap<String, String[]>), but like I said - it's your code, cast if you want to!"
9831512,2,0,5,java.util.HashMap,"By declaring that field dict as a HashMap<String, String[]>, now BeginM() knows what kind of objects it holds and you won't get that error any more."
9833434,2,1,1,java.util.HashMap,"I typically use something like a HashMap for this, where the integer key is a unique ID for each game object."
9834570,2,0,2,java.util.HashMap,"The dramatic performance gain may be a side effect of not useing a HashMap correctly ;) I see, that you iterate through the entire set instead of using the contains method."
9837889,2,0,1,java.util.HashMap,"You forgot to instantiate your map ShoppingCart = new HashMap<String, Purchase>()."
9839758,1,0,2,java.util.HashMap,"The is the interface that is implemented by the composite functions in the tree has the following methods:      Function[] child();     void addChild(Function chld);     double evaluate(HashMap subMap);     String toLatex();     int precedence();     Function derivative(); The implementations I coded so far are: Constant, Variable, Add, Subtract, Multiply, Divide, Power, Sine, Cosine, Ln."
9903405,2,0,2,java.util.HashMap,"In the case of HashMap, there is ConcurrentHashMap, which is a thread safe version with a few additional atomic operations (putIfAbsent etc."
9841029,2,0,2,java.util.HashMap,"I personally prefer using the actual object that needs synchronization (like your HashMap) because it conveys more clearly that I'm synchronizing it, and another object instance (with possible messy variables) isn't needed."
9847420,2,1,5,java.util.HashMap,"HashMap's EntrySet does not support addAll, full stop."
9848392,2,0,4,java.util.HashMap,"Assuming I've read your question correctly (there's some ambiguity about ""multiple keys"") what you want is to define a class for the key itself that contains the multiple fields and implements equals() and hashCode() in such a way that the objects can be used as HashMap keys."
9848948,2,1,2,java.util.HashMap,A class per 'table' that you can store in  a collection and fetch with a key/value pair says HashMap to me.
9848912,2,0,2,java.util.HashMap,"Rather than implementing this feature as every object having a private Monitor monitor field, think of it as being implemented as the JVM having a global HashMap monitors."
9848892,1,0,2,java.util.HashMap,...or creating a HashMap for each user (key) and adding variables (values) as need be.
9849786,2,1,2,java.util.HashMap,"Since you are considering a HashMap anyway, the benefit here is that the locking that occurs is limited to the individual hash rows--two items that hash to different regions do not block one another."
9851581,2,0,2,java.util.HashMap,EDIT: If you want to use the HashMultiMap i would recommend the one bellow   Implementation of the MultiMap interface that uses a HashMap for the   map and HashSets for automatically created sets.
9854185,2,0,0,java.util.HashMap,You will only need to create a Java Bean that represents your data(your 2D array could be a HashMap).
9857673,1,0,2,java.util.HashMap,Casting HashMap Key Iterator to List Iterator.
9857673,1,0,2,java.util.HashMap,I need to access the HashMap key elements much like a linked list with prev and curr pointers to do some comparisons.
9857673,1,0,2,java.util.HashMap,I typecasted the HashMap Key Iterator to List Iterator to access current as well as previous key elements.
9857673,1,0,2,java.util.HashMap,Is there some way that I can typecast a HashMap Key Iterator to List Iterator to solve my purpose.
9857910,2,0,0,java.util.HashMap,These are not possible to implement efficiently using the current HashMap data structures.
9857910,2,0,0,java.util.HashMap,(HashMap chains are implemented as a singly linked list.
9860025,1,0,1,java.util.HashMap,"I am making a basic little game in Java and I want to have it so that I can use Hashmaps for binding keys.. e.g.- it would be like HashMap and then I would do:     hashmap.add(Keys.up, VK_UP); but this is where I get to my problem, How do i access the hashmap and choose which keys are pressed when the KeyListener returns a pressed key?"
9861206,2,1,8,java.util.HashMap,"There's HashMultimap, which is analogous to a HashMap<K, HashSet<V>> and TreeMultimap, which is analogous to a TreeMap<K, TreeSet<V>>."
9862294,1,0,3,java.util.HashMap,"Basically, is there a type of data that can return multiple answers, sort of like a HashMap and List combined?"
9882647,2,1,2,java.util.HashMap,Step 2: You can make a HashMap for each group.
9882647,2,1,2,java.util.HashMap,Let says Group 3 has a HashMap like this: code.
9866263,2,0,1,java.util.HashMap,"When you create your various instances of the above JFrame, you can keep track of the created instances, may be store them within a HashMap, then you can pick the right JFrame instance basing on its designated name and bring it to the front."
9872090,1,0,1,java.util.HashMap,I also have a HashMap for which commands i want to receive.
9873845,1,0,18,java.util.HashMap,"EDIT: Another use case based on a File object, as requested in coments: import java.io.File; import java.io.UnsupportedEncodingException; import java.net.URI; import java.nio.file.FileSystems; import java.util.HashMap; import java.util.Map; import java.util.logging.Level; import java.util.logging.Logger; code."
9876244,1,0,0,java.util.HashMap,I've seen lots of examples on the web for marshal/unmarshal of HashMap but these all assume a different XML format and I can't see how to change them to suit mine.
9885077,2,0,1,java.util.HashMap,I recommend you to get all the results and store them into a HashMap.
10974693,2,0,0,java.util.HashMap,You can use a HashMap from Java where you load all the names in the names.txt to a HashMap and then search in it.
9895446,1,0,1,java.util.HashMap,"Why HashMap internal work helper variables are int, which can be byte datatype."
9895446,1,0,1,java.util.HashMap,HashMap internally has its own static final variables for its working.
9895782,2,0,1,java.util.HashMap,"And if you want to ""count"" duplicates, I would use HashMap code."
9926410,2,1,1,java.util.HashMap,If we take scalability and persistence out of equation - it can be implemented in single java process using HashMap for randomly accessible data and TreeMap for data we want to store sorted  Now let see how it can be mapped into NoSQL technologies to gain scalability and performance we need.
9898749,1,0,1,java.util.HashMap,"Using String Array in HashMap, Java."
9898803,2,0,4,java.util.HashMap,"i.e., we would prefer to declare private static Map<String, String[]> subjects; over HashMap when there's no reason it needs to be a specific kind of Map"
9899319,2,0,1,java.util.HashMap,"EDIT: As stated above, a HashMap would be a good option, but if you don't want to change your code too much: If you are storing all the strings in a list or a vector or some such data structure, then the simple option (without changing too much of your code hopefully) would be to use the indexOf() method to get the index of the min value of the vector and use this to find the string using a  elementAt() method assuming your Strings are also stored in a vector."
9908487,1,0,0,java.util.HashMap,Zuul Remake in Java HashMap Issue.
9912600,1,0,4,java.util.HashMap,Java - Reasons for Allowing null as a HashMap Key?
9912600,1,0,4,java.util.HashMap,Why Java decided to allow 'null' as a key in HashMap?
9912600,1,0,4,java.util.HashMap,Is there any design consideration for this decision to allow null key in HashMap which is not there in Hashtable(Other than considering as a default value)?
9912908,2,1,6,java.util.HashMap,From the JDK 1.2 Java Collections API Change Summary (not sure where to find the official version on Oracle's website):  Added null-key support to HashMap.
9916220,1,0,0,java.util.HashMap,I have a Java HashMap containing 5 entries.
9916780,1,0,1,java.util.HashMap,Types.AdjList is a HashMap code.
9918338,2,0,0,java.util.HashMap,And it is worth pointing out that it doesn't make any sense to sort a HashMap or a ConcurrentHashMap because these maps will not preserve the order into which you sort the elements.
9919815,2,0,3,java.util.HashMap,This question should be of help to you Is there a way to get the value of a HashMap randomly in Java?
9919815,2,0,3,java.util.HashMap,and this one also Picking a random element from a set because HashMap is backed by a HashSet.
9920074,2,0,0,java.util.HashMap,"Either your HashMap is empty, or the original string doesn't contain anything corresponding to the keys in the map, or you wrote two asterisks where you meant one, or you didn't escape it/them when you needed to, or ..."
9923461,2,1,1,java.util.HashMap,Take one HashMap of Integer and jCheckBox like this outside for loop as intance variable: code.
9923616,1,0,4,java.util.HashMap,How to fetch first 10 key value pairs in HashMap.
9923686,2,1,8,java.util.HashMap,How to fetch first 10 key value pairs in HashMap  HashMap is unordered.
9923906,2,0,0,java.util.HashMap,Create a HashMap model - and pass it along with the response to view.
9929307,2,0,0,java.util.HashMap,That class object can be stored in the HashMap.
9929675,2,0,5,java.util.HashMap,There is no way to impose any sort of order on HashMap.
9949372,2,0,2,java.util.HashMap,JDBM3 is a very fast on-disk HashMap/TreeMap (B+Tree) library and is claimed to be 4x faster than berkeley db.
12245338,2,1,0,java.util.HashMap,Entry in facesConfig.xml registers a HashMap called   componentMap which is used to store the input ids.
9945422,2,0,0,java.util.HashMap,"When you create a class, you want to override both hashCode() and equals() method, in order to be able to compare your objects, and do other cool stuff (putting them in a HashMap, for example)."
9945571,1,0,2,java.util.HashMap,Value removed from HashMap during iteration.
9945571,1,0,2,java.util.HashMap,I have a HashMap with the addresses and the names of the clients that are assigned on a server.When a user signs off everybody receives a message about his departure and then I remove him from the HashMap.
9945571,1,0,2,java.util.HashMap,"The problem is when I iterate the HashMap in order to send to everyone the message I use a thread and as a result the users is removed before iteration happens, thus he don't receives the message."
9945680,2,1,1,java.util.HashMap,"To do so, you will need to pass the HashMap to the thread."
9947363,1,0,0,java.util.HashMap,My assignment is to implement a contact list in a HashMap.
9947363,1,0,0,java.util.HashMap,"the HashMap method put(K key, V value) isnt accepting the defined parameters String, List."
9951761,2,0,2,java.util.HashMap,Unless you mean that you want a guarantee that the elements will be shuffled (your regular HashMap is deterministic in what it does after all).
9952961,2,1,0,java.util.HashMap,"With the Collections API (of which the ArrayList is part), the best-practice is to declare your variables using the generic interfaces: List, Set, Map, rather than their concrete implementations such as ArrayList, HashSet and HashMap."
9952997,1,0,2,java.util.HashMap,"One solution I tried was to create a static HashMap inside each of the Book, Customer, and Order classes in order to keep track of all retrieved objects but it leads to data duplication since we already have a List structure of the retrieved objects in the table model of each view."
9958878,1,0,0,java.util.HashMap,I'm new to Java and need help for sorting using HashMap or TreeMap.I need to display the count of total no.
9958878,1,0,0,java.util.HashMap,of disconnects should be in descending order.I tried doing with HashMap but didnt get the desired output.Please edit my code or show me how can I get a consolidated count while reading through multiple files.Thanks a lot in advance.
9960370,2,1,3,java.util.HashMap,"If you use a HashMap, this will get you O(n) average case algorithm for it - be sure you override equals() and hashCode() for your T elements."
9961707,2,0,2,java.util.HashMap,"I mean, do you really need a ArrayList or a HashMap would be better?"
9964572,2,1,5,java.util.HashMap,in a HashMap.
9967495,1,0,0,java.util.HashMap,What is a fast alternative to HashMap for mapping to primitive types?
9967495,1,0,0,java.util.HashMap,First of all let me tell you that i have read the following questions that has been asked before Java HashMap performance optimization / alternative and i have a similar question.
20822293,2,0,0,java.util.HashMap,An HashMap has an overloaded constructor which takes initial capacity as input.
20822293,2,0,0,java.util.HashMap,The scale off you see is because of rehashing during which the HashMap will virtually not be usable.
20822293,2,0,0,java.util.HashMap,To prevent frequent rehashing you need to start with a HashMap of greater initial capacity.
20822293,2,0,0,java.util.HashMap,public HashMap(int initialCapacity).
20822293,2,0,0,java.util.HashMap,Pass the initial capacity to the HashMap during object construction.
9970087,2,0,2,java.util.HashMap,Just add static HashMap containing the mapping.
9970569,2,1,3,java.util.HashMap,In the second case HashSet/HashMap don't allow removing elements while iterating through them.
9971476,1,0,0,java.util.HashMap,HashMap holding older value.
9971759,2,0,1,java.util.HashMap,A more accurate version of your title would be 'Old HashMap holding old value'.
9974205,1,0,1,java.util.HashMap,I need to split it so that I would have HashMap:  key->value1 key2->value2 key3->(inner HashMap with parsed {'innerKey1'=>'innerValue1'...}) ...
9976414,2,1,4,java.util.HashMap,"It would only come up if you had a HashSet<Map.Entry<T,T>> or a HashMap<Map.Entry<T,T>,V>, which is not commonly done."
9976414,2,1,4,java.util.HashMap,"(Edited to add: Or, as Joachim Sauer points out below, a HashSet<Map<T,T>> or a HashMap<Map<T,T>,V> — also not commonly done.)"
9976414,2,1,4,java.util.HashMap,"Note that HashMap<K,V> does not use Map.Entry<K,V>.hashCode(), because it looks up entries by their keys only, so it just uses K.hashCode()."
9976291,1,0,0,java.util.HashMap,HashMap vs ArrayList (160 entrys).
9976291,1,0,0,java.util.HashMap,"Possible Duplicate: Memory overhead of Java HashMap compared to ArrayList   I try to search on google but didnt found an answer, I need to store 160 entrys on a collection, and I dont want to iterate over them, I want to get the value by one entry, a point 2D, what is the best?"
9976324,2,0,5,java.util.HashMap,Use whichever API is better for this – probably the HashMap.
9976569,2,1,2,java.util.HashMap,HashMap probably gives faster access.
9976645,1,0,0,java.util.HashMap,Does List.retainAll() use HashMap internally?
9976645,1,0,0,java.util.HashMap,"I am purposefully violating the hashCode contract that says that if we override equals() in our class, we must override hashCode() as well, and I am making sure that no Hash related data structures (like HashMap, HashSet, etc) are using it."
9986594,2,1,6,java.util.HashMap,"For reference look at the Java collection interfaces (Map<K,V> for instance) and its implementations (HashMap, TreeMap, etc)."
9986852,1,0,0,java.util.HashMap,Right now I am leaning towards creating a two-dimensional HashMap: code.
9986875,2,0,0,java.util.HashMap,"This syntax new HashMap<String, new HashMap<String, Integer>> is not correct."
9988874,1,0,7,java.util.HashMap,Which is more efficient : using removeAll() or using the following HashMap technique to retain only changed records in an ArrayList.
9993466,1,0,1,java.util.HashMap,How to obtain values from a multilevel HashMap stored in an ArrayList?
9993466,1,0,1,java.util.HashMap,So it's HashMap in HashMap and then in the ArrayList.
9995733,2,0,0,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
9996647,1,0,4,java.util.HashMap,How can you cast a nested HashMap in an ArrayList.
9996647,1,0,4,java.util.HashMap,"It's easy to get the value from the parent HashMap, but when I try to get the value from the nested HashMap (child), I get ClassCastException."
9997371,2,1,0,java.util.HashMap,"On server, you can use HashMap which will contain pair {current event, last sent event} as values and event's recepients (clients) as keys."
9999035,1,0,2,java.util.HashMap,Serialize HashMap as root element with Simple.
9999035,1,0,2,java.util.HashMap,I want to serialize an element that extends HashMap with Simple.
12162411,2,1,1,java.util.HashMap,"... i get the following exception:  org.simpleframework.xml.transform.TransformException: Transform of class java.util.HashMap not supported   Now, here is what i did to get your class serialized: I've written a Converter which is used for transforming Settings."
10001672,1,0,2,java.util.HashMap,About the implementation of Java HashMap.
10004542,2,0,0,java.util.HashMap,ConcurrentHashMap scales much better than synchronized HashMap: http://www.javamex.com/tutorials/concurrenthashmap_scalability.shtml
10009367,1,0,1,java.util.HashMap,Thread safety on HashMap.toString() method.
10009534,2,0,0,java.util.HashMap,"Nothing in HashMap is thread-safe, and the Javadoc says so: ""If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. """
10017175,2,0,1,java.util.HashMap,"I'm not sure what the stats look like, but it might be better to use a HashMap which has Key/value pairs instead, but I could be wrong."
10019000,1,0,1,java.util.HashMap,"Since I have no guarantees about ID sequence, I'm keeping them in a HashMap<Long, Thingy> for random access."
10019000,1,0,1,java.util.HashMap,"However, in Android, they have this very nice class called SparseArray which they claim is faster than my HashMap for how I'm using it."
10019000,1,0,1,java.util.HashMap,Is that casting from long to int plus SparseArray optimizations are going to be cheaper than autoboxing long to Long for my HashMap operations?
10020403,1,0,0,java.util.HashMap,"I thought I could have a HashMap<String,Integer> which stores the initial row,column and the size of the sub matrix."
10021412,2,1,2,java.util.HashMap,"Consider private HashMap <String, Room> myNeighbors = new HashMap<String,Room>();."
10026017,2,0,0,java.util.HashMap,"You can shorten your code for example that way: Create a HashMap<Integer, String> (probably static) that links the R.id."
10030356,2,0,9,java.util.HashMap,(I'm skating over the fact that a PHP array is more like a Java HashMap than a Java array.
10029951,2,0,0,java.util.HashMap,That should create a HashMap which is a key-value collection.
10031833,1,0,3,java.util.HashMap,Weird serialisation behavior with HashMap.
10031833,1,0,3,java.util.HashMap,"EDIT There is a good summary of what is potentially in play for this issue: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4957674  The problem is that HashMap's readObject() implementation , in order   to re-hash the map, invokes the hashCode() method of some of its keys,   regardless of whether those keys have been fully deserialized."
10031833,1,0,3,java.util.HashMap,Deserialize the HashMap (which was directly or indirectly pointed to by the key)             2a-1.
10031833,1,0,3,java.util.HashMap,Instantiate the HashMap             2a-2.
10031833,1,0,3,java.util.HashMap,"Now that does not explain fully why the issue can be fixed if the HashMap from Wrapper is removed, or move to the EntityTransformer class."
10032053,1,0,0,java.util.HashMap,Efficiency of HashTable and Collections.synchronized(HashMap).
10032053,1,0,0,java.util.HashMap,I came up with HashTable and Collections.synchronized(HashMap).
10032394,2,0,0,java.util.HashMap,So you should use HashMap but you have to manage all thread-safety yourself.
10032154,2,1,2,java.util.HashMap,"ConcurrentHashMap is much more scaleable: http://www.javamex.com/tutorials/concurrenthashmap_scalability.shtml HashTable and Collections.synchronized(HashMap) provide with the same performance, but they are conditionally thread-safe (i.e. they are not fully thread-safe) If there are a lot read operations, I would recommend to wrap it with read-write locks: code."
10032174,2,0,0,java.util.HashMap,"HashTable and the synchronized wrapper (Collections.synchronized(HashMap)) use one lock whereas ConcurrentHashMap partitions the map in 16 segments by default, each having its own lock, which gives much better concurrent access."
10033206,2,0,1,java.util.HashMap,A HashMap should help.
10033336,1,0,0,java.util.HashMap,HashMap with key and value equal the values of two other hashmaps using Java.
10033519,2,0,1,java.util.HashMap,is always going to return the same entry of the keywords HashMap.
10033450,2,0,1,java.util.HashMap,"If you want to store objects by key, use an implementation of interface Map (for example HashMap) instead of a List."
10034977,2,0,0,java.util.HashMap,Another thing to note is that there's a good chance that the hash you provide won't even be the one the HashMap eventually uses.
10034977,2,0,0,java.util.HashMap,"If you take a look at the OpenJDK HashMap code, for instance, you'll see that your keys' hashCodes are put through a private hash method (line 264 in that link) which re-hashes them."
10035383,1,0,2,java.util.HashMap,The user can optionally set the environment variables via a HashMap named environment: code.
10038748,2,1,0,java.util.HashMap,"Normally, these are used for lists and arrays, such as ArrayList or HashMap."
10041410,1,0,60,java.util.HashMap,"The first one, as you can guess :), is used on beans that connect to production DB and second one annotates beans that use some fake DB (HashMap or whatever)- to make development faster."
10048664,1,0,3,java.util.HashMap,Java HashMap find best matching key.
10048664,1,0,3,java.util.HashMap,I have a Java HashMap with Float keys and String values.
10048664,1,0,3,java.util.HashMap,"now given a Float which is not in the HashMap, how can i find the key which ist most similar to the given Float?"
10048687,2,0,1,java.util.HashMap,To use floats as keys in a HashMap is a very bad idea!
10050205,1,0,0,java.util.HashMap,Here are things i'm MOST worried about:  effect on performance - replication could cause network latency data quality - want to avoid working with stale data  impact on memory - once the data is loaded in HashMap/Cache it should not expire.
10053285,2,0,1,java.util.HashMap,"Your method is declared to return HashMap<String, Vector<String>> (which is odd to start with - usually you'd use List rather than Vector if you're using the Java 2 collections)."
10053285,2,0,1,java.util.HashMap,"That's clearly not returning a HashMap<String, Vector<String>>, is it?"
10053285,2,0,1,java.util.HashMap,"which would return a null reference as a HashMap<String, Vector<String>>."
10053760,2,0,0,java.util.HashMap,just parse your XML and  put your values in a HashMap keyed by the name attributes of  Contestant elements suggestion for parsing XML Xom
10056357,2,0,0,java.util.HashMap,"If i understand your question right, how about: http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html If you really want the key to be the indexes, not the Button itself, then you need to create an extra class (e.g."
10056135,1,0,3,java.util.HashMap,"From here, I found that Colt's OpenIntIntHashMap and Trove's TIntIntHashMap give better performance and memory uses than Java's built in HashMap or Guava's HashMultimap."
10062924,1,0,3,java.util.HashMap,How do I add and remove items from a multivalue HashMap?
10062924,1,0,3,java.util.HashMap,I am trying to add values to a multivalue HashMap which is of the following structure: code.
10062924,1,0,3,java.util.HashMap,"), so the Integer value of the HashMap will contain the items ID which is unique, the List of Floats will contain the items X coordinate values."
10062924,1,0,3,java.util.HashMap,"To be more clear my HashMap will contain the following data {1,{200, 400.5, 500.6 ...}}, where 1 is the key and the rest are Float values for Item with ID 1."
10062924,1,0,3,java.util.HashMap,"I would have to create 100 List's for 100 items which is not feasible, not knowing the number of ID's.. Is there a better approach to solve this issue...  Also I wanted to find a way to delete a specific value of a particular key from the HashMap"
10063375,2,0,7,java.util.HashMap,"[have a look on List, and HashMap]  Map allows association of the key [Integer] to the value [String or List]."
10064063,2,1,5,java.util.HashMap,"You could create your own combobox model by extending AbstractListModel<E>, implementing  ComboBoxModel<E>, ListModel<E>, MutableComboBoxModel<E>, and using  a TreeMap<T, E> as the nucleus of the model class (TreeMap instead of HashMap since the combobox model's data must be maintained in a certain order)."
10064063,2,1,5,java.util.HashMap,Just be sure to fire the proper data change methods whenever data is added or removed from your HashMap.
10064086,2,0,0,java.util.HashMap,extends HashMap to implement Observable interface just put Observor update function in  add method of HashMap and listen for update in your jComboBox
10064091,1,0,1,java.util.HashMap,How iteration ordering in LinkHashMap/LinkedHashSet leads to a bit low performance than HashMap.
10064143,2,0,0,java.util.HashMap,"LinkedHashMap/Set contains two data structures: hash table and linked list, so that insertion and deleting operations cause modification of two data structures, while the same operations on simple HashMap touch only one data structure (hash table)."
15351348,2,0,1,java.util.HashMap,So if you're more concerned with the performance of building your map/set then you should choose a HashMap or HashSet but if you're more concerned with iterating over that map/set choose a LinkedHashMap or LinkedHashSet.
10066644,2,0,0,java.util.HashMap,"Use a HashMap, fill it with String, Integer."
10069985,1,0,1,java.util.HashMap,SeqentialMap above extends HashMap .
10069985,1,0,1,java.util.HashMap,"Also while debugging i could not find any buildCache method in HashMap class,so does it mean weblogic JDK is some different version og implementation."
10070792,2,0,0,java.util.HashMap,If you create an ArrayList<Object> or HashMap<Object> you can put inside them whatever you want.
10070792,2,0,0,java.util.HashMap,"In this case you can store every kind of object into your list/map, which is derived from BASE, or implements it (in case of interface): ArrayList<BASE>, HashMap<BASE>."
10072900,2,0,3,java.util.HashMap,"You could also use an implementation of a Map, like HashMap to associate a String with an object."
10075634,1,0,4,java.util.HashMap,"Additional Details  The DelegatedMap used in the sample code does not extend java.util.HashMap, it just wraps an instance of one and implements the Map interface."
10079266,1,0,23,java.util.HashMap,"Added: OK I left something out explaining this.MyObjectsList does not contain the HashMap, it is derived from a class MyBaseOjbectsList which has the HashMap member and MyObjectsList extends MyBaseOjbectsList."
10079365,2,0,3,java.util.HashMap,So anything you do to A you do to B and vice versa use new HashMap() if you want two different objects And you can use Map.putAll(...) to copy data between two Maps
10079457,2,0,58,java.util.HashMap,if you want a copy of the HashMap you need to construct a new one with code.
10080342,1,0,0,java.util.HashMap,I was working with ObjectInputStream and was trying to load a HashMap that I had stored in the file.
10081463,1,0,2,java.util.HashMap,I am looking for a way to create a HashMap that maps to mixed types.
10081463,1,0,2,java.util.HashMap,"For example, the following would work in Python (note that a Python dict is similar to a Java HashMap): code."
10081463,1,0,2,java.util.HashMap,"In Java, I could go with a HashMap<String, Object>, but I don't really have a way to immediately tell what type each Object is."
10085287,1,0,4,java.util.HashMap,I would except that a HashMap is used with the destination ip/port as key and the socket as value.
10086851,2,1,2,java.util.HashMap,I would except that a HashMap is used   with the destination ip/port as key and the socket as value.
10085457,1,0,11,java.util.HashMap,"and I want HashMap<Class<?>, ""question""> where I would store (key: class, value: method) pairs like this ( class ""type"" is associated with method ) code."
10085457,1,0,11,java.util.HashMap,"and I want to know how to add method references to HashMap (replace ""question"")."
10092193,2,0,0,java.util.HashMap,"I would do something similar to Eric's solution, but instead of storing the actual strings in the HashMap, I'd just store line numbers."
10091981,2,1,3,java.util.HashMap,A HashMap will be your best bet.
10091981,2,1,3,java.util.HashMap,A few points:  The initialCapaticy parameter for the HashMap is important.
10091879,2,0,2,java.util.HashMap,"For example, from HashMap:  This implementation provides constant-time performance for the basic operations (get and put) ..."
10105004,2,0,0,java.util.HashMap,In a java HashMap these would all map to the same bucket and effectively turn the map into a linked list.
10104021,2,1,4,java.util.HashMap,"Default is a linked HashMap, keeping the registration order."
10110675,2,0,1,java.util.HashMap,"LinkedHashMap extends HashMap and hence linking is irrelevant for get, so on adding linkage they should not have made LinkedHashMap less efficient on get - as get does not need that linkage."
10110700,2,0,1,java.util.HashMap,LinkedHashMap extends HashMap and its get method calls HashMap's getEntry method.
10110700,2,0,1,java.util.HashMap,"HashMap's implementation stores each bucket in a separate array, so it would not need to loop over the whole dataset, only on the data within that bucket."
10110700,2,0,1,java.util.HashMap,"EDIT e.next is defined in HashMap.Entry and is within the same bucket, as opposed to e.after and e.before defined in LinkedHasMap.Entry which can be in different buckets."
10114401,1,0,0,java.util.HashMap,I account for a number of things like preventing a random number from being used more than once and this check is done against a HashMap of the possible lottery numbers.
10115466,2,1,0,java.util.HashMap,"You're generating more random numbers than necessary, since you're just checking for dupes when they occur, and you're not creating a new random number after you pick a ball, so you're requiring a minimum of one HashMap.get(int) per pick."
10118066,2,0,1,java.util.HashMap,"You would be better of using HashMap as a container, at least the merging operation would perform faster."
10120546,2,0,4,java.util.HashMap,Look at the code for HashMap#toString() and AbstractMap#toString() in the OpenJDK sources: code.
10120959,1,0,0,java.util.HashMap,Get value of a serialized java.util.HashMap.
10120959,1,0,0,java.util.HashMap,"One of my methods (server side) returns java.util.HashMap<String, String>."
10120959,1,0,0,java.util.HashMap,I've noticed that after generating client web service that AXIS have created a class called : public class HashMap  extends mypack.ws.AbstractMap  implements java.io.Serializable.
10121053,2,0,5,java.util.HashMap,"a HashMap<String,Integer> where you put your words as key and the count as integer."
10127851,2,0,0,java.util.HashMap,"Hashtable is obsolete; HashMap<Integer,Integer> should be preferred in most circumstances."
10128426,1,0,1,java.util.HashMap,ClassCastException: java.util.HashMap with android SimpleExpandableListAdapter.
10129360,2,1,5,java.util.HashMap,": e.g private static Map<User, HttpSession> usersSessions= new HashMap<User, HttpSession>();  Then make User class implemets HttpSessionBindingListener."
10131367,1,0,1,java.util.HashMap,"I though of a List or a HashMap, but I cannot figure out what to use as a key."
10182815,2,1,0,java.util.HashMap,"Assign each object an id, and store every object in an ArrayList (or assign each object a unique ID based on type and store the object in its type's ArrayList which is itself stored in a HashMap)."
10140312,1,0,0,java.util.HashMap,"A HashMap's traverse, I get NullPointerException."
10140312,1,0,0,java.util.HashMap,"Possible Duplicate: When traverse a HashMap, I get NullPointerException   This is my code: code."
10140404,2,0,0,java.util.HashMap,HashMap allows null in values.
10140404,2,0,0,java.util.HashMap,"So in your HashMap if the HashSet is null, you will get NullPointerException."
10141115,1,0,2,java.util.HashMap,Blaze DS uses reflection to convert the JPA entity into an ObjectProxy (effectively a HashMap) by calling all getter methods on the entity.
10142142,2,0,1,java.util.HashMap,"What you can do, if you have many cases is too trasform your ""switch"" approach in an HashMap approach."
10145840,2,1,1,java.util.HashMap,"Useful classes could be will be HashMap, TreeMap, List, Collections (has sort methods)."
10153083,2,0,1,java.util.HashMap,"By calling v.setK(), you aren't changing the key in the HashMap."
10153628,1,0,4,java.util.HashMap,How to retrive a List objects from HashMap and iterate in free marker template?
10153628,1,0,4,java.util.HashMap,"after populating the HashMap, I put it in Freemarker context along with List of org.w3c.dom.Element."
10159902,2,0,0,java.util.HashMap,"So the next idea is to generate a HashMap, and use Collections.sort, but it doesn't take a Map, just Lists for sorting."
10160804,1,0,0,java.util.HashMap,"Now, I want to get the argument names: aa and bb to build a HashMap: code."
10161923,1,0,0,java.util.HashMap,HashMap printing just the last entry.
10162004,2,0,1,java.util.HashMap,"Also, if you want the entries in ascending order, HashMap gives you the wrong order as it is ordered based on the hash code of the keys (String in this case)."
10164659,2,0,2,java.util.HashMap,"Additionally, the method eclipse generates results in a more irregular hashcode, which in theory means there is a lower likelihood of hashtables degenerating and having poor performance, but in practice that probably won't matter since java.util.HashMap uses an auxiallary hash function to scramble the hashcode before using it."
10165061,2,0,0,java.util.HashMap,"When you have two objects o1 and o2 that ""mean"" the same thing (have the same data): If you comment out hashCode(), you (almost always) will be able to add both to the same HashSet, even if equals() says that the two objects are the same (or as keys to the same HashMap)."
10167278,1,0,0,java.util.HashMap,Java sorting and HashMap.
10167278,1,0,0,java.util.HashMap,I have a HashMap How can I sort this data structure and keep the key-value mappings?
10167278,1,0,0,java.util.HashMap,Or is there a better associative data-structure that I could have used instead of the HashMap?
10167290,2,0,2,java.util.HashMap,"Beware though, some actions will be way slower than with a HashMap, things such as searching..."
10167556,1,0,1,java.util.HashMap,Why is HashMap size different than the number of lines in the file?
10167556,1,0,1,java.util.HashMap,"The file has 40000 lines, however the size of the HashMap is 38490."
10167629,2,0,0,java.util.HashMap,"You can make your own using the type HashMap<String, Set<String>> (each key maps to a set of values)."
10167792,2,0,1,java.util.HashMap,"Also, since the items are this big, I would suggest the use of a LinkedHashMap along with the HashMap to do some caching."
10167795,2,0,1,java.util.HashMap,HashSet or HashMap rather than a list?
10173463,2,0,2,java.util.HashMap,Excerpt from java.util.HashMap code code.
10177233,2,0,0,java.util.HashMap,Create a HashMap object with int as the key type and your class as the value type.
10178403,2,1,11,java.util.HashMap,I suspect your first subclass simply doesn't import java.util.HashMap.
10180481,2,1,10,java.util.HashMap,"First, a HashMap containing all of your nodes, the node label for your node can be the key, the node itself is the value."
10180214,1,0,5,java.util.HashMap,extracting values from HashMap.
10180214,1,0,5,java.util.HashMap,I was trying to learn and make understanding out of the working of a HashMap.
10181214,1,0,0,java.util.HashMap,"In the other class the following code is present, here mGraph is a HashMap."
10182168,1,0,0,java.util.HashMap,Getting data from a HashMap into SQLite database.
10182168,1,0,0,java.util.HashMap,I'm storing the results in a HashMap and I'd like to be able to put those results into my app's SQLite database.
10182168,1,0,0,java.util.HashMap,Here's the code for the HashMap code.
10182168,1,0,0,java.util.HashMap,What's the best way to get my values from the HashMap to my NewRecord function?
10182613,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/1.5.0/docs/api/java/util/HashMap.html code.
10188639,2,0,3,java.util.HashMap,The most efficient way is to use a lookup table implemented as either an array or a HashMap.
10190010,2,0,0,java.util.HashMap,"When a HashMap is used, the keys in it are unique."
10189547,2,0,0,java.util.HashMap,Storing the value to HashMap depends on the hashcode() and equals() method.Please find the more reference from here.
10189547,2,0,0,java.util.HashMap,HashMap - hashcode() Example More information of  HashMap get() retrieval of values.Here
10191952,1,0,4,java.util.HashMap,what I want to achieve here is that It's up to the subclass to decide whether they want to pass java.lang.String or java.util.HashMap as parameter to query() method.
10191952,1,0,4,java.util.HashMap,I think the problem is that the interface contract doesn't know the query should be expecting String or HashMap.
10192909,1,0,1,java.util.HashMap,Restful service endpoint to produce XML response for ResponseEntity< HashMap>.
10192909,1,0,1,java.util.HashMap,The return entity for this service call is a HashMap which has the data for the output to be generated.
10194864,2,0,5,java.util.HashMap,"No, you can't have that with a standard HashMap."
10194917,2,0,0,java.util.HashMap,"However, you could subclass HashMap and write some logic into the put method which will do this for you: code."
10199731,2,0,0,java.util.HashMap,"You are using a HashMap<K, V>, which implies you want the association and key lookup behavior of a Map-type."
10199731,2,0,0,java.util.HashMap,"HashMap itself does not care about ordering - whenever you insert a key-value pair, the key's hashCode() method is called and the map stores the pairing using that hash code."
10199731,2,0,0,java.util.HashMap,"Of course, when it comes to retrieving or iterating over your HashMap, you will get things in a pretty much random order because the hash map stores items by the hash code, and ordering can change every time you add/remove an object."
10199731,2,0,0,java.util.HashMap,Sticking with your HashMap example: code.
10199731,2,0,0,java.util.HashMap,"Example of using a SortedSet:  java.util.SortedSet<String> keys = new java.util.TreeSet<String>(map.keySet()); As an aside, there is a java.util.concurrent.ConcurrentHashMap class as well, which is the Java Concurrency version of java.util.HashMap and works very well in multi-threaded environments where concurrent access will occur."
10199731,2,0,0,java.util.HashMap,"For example, if there is multithreaded access to your HashMap, then you need synchronization mechanisms which HashMap by itself doesn't have."
10199731,2,0,0,java.util.HashMap,"If you need the insertion performance of HashMap, which is amortized O(1), then you probably need to be using HashMap and sorting the ""on demand"" way, or keeping a separate data structure to order your keys."
10199731,2,0,0,java.util.HashMap,"In my examples I use the interface as my variable's type, rather than the concrete class (in your code, you have HashMap<...> map = new HashMap<...>();."
10195401,2,0,4,java.util.HashMap,"If you want it to be sorted by (string) keys, then simply use java.util.TreeMap instead of a HashMap."
10196089,2,0,3,java.util.HashMap,You declared the variable temp as an array (by writing HashMap temp[]).
10196090,2,1,6,java.util.HashMap,"You've just assigned a null value to the temp variable (which would more typically have a declaration of HashMap<String, String>[] temp) - so of course you'll get a NullPointerException when you then try to access temp[i] on the very next statement."
10196096,2,0,3,java.util.HashMap,"You don't need an array of HashMap, just a single HashMap, since list is an ArrayList<HashMap>: code."
10196502,1,0,3,java.util.HashMap,So my typical solution to this situation is to stop using a HashMap and to instead modify the key to have strong references to all the values that it needs.
10199826,2,0,1,java.util.HashMap,"The above implementation of containsAll will be at least O(n) where n is the number of items in the Collection parameter you pass in, plus whatever time contains takes:  For a HashSet/HashMap this might be O(1) (best case, no collisions), so the overall runtime of containsAll would still be O(n) For an ArrayList, contains will take O(m) where m is the number items in the list (not the parameter), so the overall time for containsAll would be O(n*m)"
10203221,1,0,1,java.util.HashMap,Java traverse a large HashMap like a graph.
10203221,1,0,1,java.util.HashMap,"I have a large HashMap<String,Set<String>>, say like this:  code."
10205135,1,0,0,java.util.HashMap,What I'm trying to do is as follows: I have a HashMap: code.
10206188,1,0,1,java.util.HashMap,Question Edited : HashSet and HashMap are fail-fast(but that is not gauranteed) as mentioned in code : code.
10206188,1,0,1,java.util.HashMap,"Now, i want the example and the collections which are fail-safe as much as i know: ConcurrentHashMap,CopyOnWriteArrayList are fail-safe..but how to code it to show that they are fail-safe Edit and Undestanding of what I want and how I achieved it : if we use HashMap code."
10206268,2,1,1,java.util.HashMap,"The API Javadoc (both for HashSet and HashMap) only makes a soft guarantee to fail-safety:   Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification."
10206268,2,1,1,java.util.HashMap,The identical behaviour is explained by the fact that HashSet is implemented on top of a HashMap internally.
10206316,2,0,2,java.util.HashMap,HashMap is not guarenteed to be fail safe.
10206316,2,0,2,java.util.HashMap,You can still modify a HashMap in a different thread and have another thread not notice.
10206316,2,0,2,java.util.HashMap,The OpenJDK version of HashMap uses a non-volatile modcount field to identify concurrent modifications.
10212375,2,0,0,java.util.HashMap,"I am not sure to understand the question: Your JAVA code is like this: IlrSessionFactory factory = new IlrJ2SESessionFactory(); IlrStatelessSession session = factory.createStatelessSession(); IlrSessionRequest sessionRequest = factory.createRequest(); sessionRequest.setRulesetPath(“/RuleAppName/rulesetName”); sessionRequest.setTraceEnabled(true); sessionRequest.getTraceFilter().setInfoAllFilters(true); Map inputParameters = new HashMap (); Report in_report = new Report(); // no-arg constructor // ... populate the Object ... inputParameters.put(""report"", in_report); sessionRequest.setInputParameters(inputParameters); IlrSessionResponse sessionResponse = session.execute(sessionRequest); Report out_report = (Report)sessionResponse.getOutputParameters().get(""report“);  And then you play with your ""out"" parameters... As you would do with any JAVA object If you want to see them at debug time, I would say: 1/ (not tested) Have a look on the ""working memory tab"" in the debugger perspective I am not sure but this is the easiest way to find them if it is visible here 2/ (tested) in the initial action of the starting point of your ruleflow, add: context.insert(the technical name of your parameter); Not the ""business name""."
10209089,2,0,2,java.util.HashMap,"Another concern is that if the ""code"" field changes while the object is in a HashMap or HashSet, then the object or the entry is likely to be lost."
10211204,1,0,1,java.util.HashMap,"HashMap, similarly like above i add available id's and remove not used, but not sure how to sort this hashMap???"
10213759,2,0,1,java.util.HashMap,"Or you can always keep a simple HashMap or whatever to maintain parallel item associations, and then construct a SortedMap (Treemap or ConcurrentSkipListMap) as needed by providing an appropriate Comparator."
10214159,2,0,1,java.util.HashMap,Clarification: You say you want to sort the HashMap by values -- that isn't going to happen.
10214159,2,0,1,java.util.HashMap,A HashMap is an unsorted implementation of a Map.
10214243,2,0,1,java.util.HashMap,You can't sort HashMap.
10214281,2,0,0,java.util.HashMap,Consider for example that MyObject is a HashMap.
10219724,1,0,3,java.util.HashMap,Infinite loop in java.util.HashMap.
10219782,2,1,6,java.util.HashMap,"Based on where it it in the code, the only explanation I can think of is that there are multiple threads accessing and updating that HashMap without synchronizing properly."
10219782,2,1,6,java.util.HashMap,I can't think of any other reason why java.util.HashMap.getEntry would block.
10236562,2,0,3,java.util.HashMap,So what you are actually seeing here is a thread going into an infinite loop evaluating e = e.next In essence e.next == e This occurs when you are putting into a HashMap by multiple threads during a table restructure.
10221358,1,0,2,java.util.HashMap,Then it takes a second file which consists of two columns and for each row see if the right-hand term matches one of the terms from the HashMap.
10221358,1,0,2,java.util.HashMap,"Here's a code snippet, this is where it compares the second file to the HashMap terms: code."
10221838,2,0,2,java.util.HashMap,The suggestion to use HashMap instead of LinkedHashMap is a good one.
10221729,2,1,4,java.util.HashMap,Oh and use a HashMap instead of a LinkedHashMap as  @Doug Ayers says in the above comments :) And @ MДΓΓ БДLL's suggestion of profiling your code is bang on.
10222498,1,0,0,java.util.HashMap,Initially I used a HashMap in order to hash each password I had generated so far and use as a check each time I created a new one before returning.
10222498,1,0,0,java.util.HashMap,"However, Java HashMap objects are limited in size and eventually the Map would become too saturated to maintain acceptable retrieval time."
10223647,1,0,5,java.util.HashMap,Java: compare HashMap if value might be an Object[].
10223647,1,0,5,java.util.HashMap,I have the following HashMap with properties keys and values: code.
10223647,1,0,5,java.util.HashMap,"So, my previous expression always returned false on such HashMap with any Object[] value."
10223647,1,0,5,java.util.HashMap,"is there some better way to compare HashMap<String, Object>, if values can be an Object[] ?"
10229046,2,0,0,java.util.HashMap,I redeclared your HashMap.
10228977,2,0,0,java.util.HashMap,Right now it looks like you are trying to remove and put a String object from/to your HashMap when the value type of the HashMap is a String array.
10231430,1,0,3,java.util.HashMap,Issues with retrieving objects from a HashMap of HashMaps.
10231430,1,0,3,java.util.HashMap,I am writing code that iterates recursively through an XML file and populates a HashMap of HashMaps.
10232900,1,0,0,java.util.HashMap,I can pre-load all the cases (26 + 10 over all) into a HashMap and use that.
10233267,2,1,1,java.util.HashMap,"HashMap would be the simplest way to do what you want Because you are working with a static set of mappings, you might want to consider implementing your lookup table as a new class."
10235405,1,0,2,java.util.HashMap,I though about having a HashMap and doing some kind of reflection but I don't really know what to do tbh.
10239223,2,1,10,java.util.HashMap,"SImilarly, with HashMap the difference between regular and presized is a factor of ~7 for storing."
10239223,2,1,10,java.util.HashMap,"However, looking at the reading side, both Hashtable and Hashmap have roughly the same timings for tm.get in both cases (10 ms vs 9 ms for Hashtable, and 5 ms vs 4 ms for HashMap)."
10241373,2,0,2,java.util.HashMap,The above code will allow you to load the HashMap once in your application.
10241373,2,0,2,java.util.HashMap,"If you want to store the HashMap between application usages, you can store it to disk, just make sure that the elements making up the HashMap implement the Serializable interface."
10244553,1,0,4,java.util.HashMap,Can I store class instance as HashMap
10244843,1,0,1,java.util.HashMap,What HashMap-like collection should I use for this case?
10244843,1,0,1,java.util.HashMap,To store references to these objects I am currently using a HashMap with a custom immutable Point class as key.
10244843,1,0,1,java.util.HashMap,"My understanding of how java's HashMap works is basic, but considering that I can guarantee a unique hash for each object, it seems like I could be using a much more memory efficient version which:  Doesn't use buckets which can contain multiple objects Can put and get objects by using the hash instead of using a key  Does such a HashMap-like collection exist?"
10244907,2,0,2,java.util.HashMap,"You have 2^32 different possible codes, but a HashMap is likely to have only (for example) 100 buckets or so."
10249019,2,0,0,java.util.HashMap,"An HttpSessionListener will always be recreated, therefore your HashMap gets newly instantiated and the information is lost."
10248824,1,0,5,java.util.HashMap,"In java's system, you have something like a HashMap, where every localized string has a ""Key"" and the translated string then is the ""Value""."
10251227,1,0,0,java.util.HashMap,"When the Dialog is instantiated it gets passed an Array for the column headlines which are then created dynamically (this works already), it also gets passed a java.util.HashMap containing value pairs."
10256547,2,1,1,java.util.HashMap,"You can get the Id within cursor data fetch loop, use any HashMap<id,String> collection for it and store id along with data (text)."
10258123,2,0,1,java.util.HashMap,UPDATE: 30-40K: Number of records is irrelevant for the Object vs HashMap comparison because they're going to be handled in a loop (disclaimer: irrelevant in terms of design not in terms of performance).
10258123,2,0,1,java.util.HashMap,If this is just a data migration or data transfer exercise then I'd go with the HashMap approach.
10260448,1,0,1,java.util.HashMap,HashMap different hashcodes return different values?
10266804,1,0,2,java.util.HashMap,Java StackOverflowError after putting ArrayList to HashMap.
10266871,2,0,1,java.util.HashMap,"But as far as I know, will HashMap ask the key (in your case the list) for its HashCode."
10266871,2,0,1,java.util.HashMap,HashMap stores this HashCode in a table to find the elements faster.
10266871,2,0,1,java.util.HashMap,That's why it is called HashMap.
10266871,2,0,1,java.util.HashMap,1) Take a look at the put method of HashMap: http://www.docjar.com/html/api/java/util/HashMap.java.html 2) Then take a look at the hashCode() method of AbstractList (the super class of ArrayList): http://www.docjar.com/html/api/java/util/AbstractList.java.html
10271867,2,1,1,java.util.HashMap,You should use either a HashTable if you can not use generics (you are in an old jdk for some reason) or use a HashMap using types to enforce type safety.
10271667,2,0,1,java.util.HashMap,"If you're looking for speed, then you could maintain a HashMap<Integer, ArrayList<Object[]>>, where the keys are the integers you store in move[1], and the value is a list of all the moves that have that key, so retrieving that list can be done in O(1)"
10271692,1,0,1,java.util.HashMap,"I'm working with a very large grid-based world that has around 50-90% of its grid spaces empty at any given time, therefore I chose to use a HashMap over an array."
10276645,2,1,1,java.util.HashMap,"Popular options would be:  Ehcache Guava Caches If you don't mind cleaning old sessions manually on time, a plain old HashMap could do."
10277409,2,0,3,java.util.HashMap,See for yourself:  http://hg.openjdk.java.net/jdk6/jdk6-gate/jdk/file/tip/src/share/classes/java/util/HashMap.java
10277422,2,0,1,java.util.HashMap,See the code here http://www.docjar.com/html/api/java/util/HashMap.java.html code.
10277499,2,0,1,java.util.HashMap,It uses the hashCode() for the comparison - http://www.docjar.com/html/api/java/util/HashMap.java.html
10305420,2,0,2,java.util.HashMap,"If you do not require the performance benefits of ConcurrentHashMap, consider using a regular HashMap instead and synchronize all access to it."
10288048,1,0,1,java.util.HashMap,Doing this in Java i have a HashMap with the input rectangles.
10289659,1,0,4,java.util.HashMap,But I have to store objects with an id (SHA 512) in a HashMap and need a hash function without many collisions.
10289682,1,0,2,java.util.HashMap,I have two questions: First: I have a function which returns a HashMap.
10289682,1,0,2,java.util.HashMap,"I wanted to know if in this way the returned value is copied into hs, or I should write a deep copy for it or I should write it like this:          HashSet hs=new HashSet(my_func());         HashMap hm=new HashMap(my_func2()); Second quesion: I make a matrix by calling make_matrix_funciton."
10289746,2,1,6,java.util.HashMap,"Java always passes Objects by reference, so if you return a HashMap-Object from a function, the reference will be passed to the hs variable in your example."
10289771,2,0,2,java.util.HashMap,"In the first part, your object will be a reference to a HashMap - i.e., whatever object you've returned from the function In the second part, you are passing a reference to an int[][], it is not pass by value when it's an array of primitives."
10290649,1,0,4,java.util.HashMap,"Tree<String> tree = new Tree<String>() The tree class should implement the tree structure using an adjacency list and be defined in the following way: Map<Node<T>, List<Node<T>>> tree = new HashMap<Node<T>, List<Node<T>>();  The node class should also be parameterized to handle a generic type T and expose several methods... Now i have written my Node class which works fine... and to be honest, i was sure that i have written a Node class which is creating a Tree."
10292338,1,0,4,java.util.HashMap,Using a HashMap to add the underscore prefix and the @4 suffix didn't work either: code.
10293611,2,0,1,java.util.HashMap,The key of the Object you want to insert in a HashMap is generated thanks to the hashcode() method.
10294972,1,0,0,java.util.HashMap,Transferring ResultSet values into HashMap then adding them.
10294972,1,0,0,java.util.HashMap,"I want to transfer ResultSet values into HashMap then adding them, so I initially did this code: code."
10299560,1,0,1,java.util.HashMap,"JAVA HashMap 2D, cant get the right approach to make a 2D HashMap, i mean a HashMap into another HashMap."
10299560,1,0,1,java.util.HashMap,"No ""HashMap"" will be seen.. and Arrays aren't allowed"
10303047,1,0,1,java.util.HashMap,"Each record in stored in Vector for displaying in JTable, whereas other statisics are stored in HashMap, TreeMap and summary data in JavaBean class."
10308667,1,0,0,java.util.HashMap,"I'm using a HashMap for saving an ""TwoColors"" object and a boolean."
10323274,2,0,2,java.util.HashMap,Based on your comments and edited question I think you can extend a HashMap for your use like this: code.
10313556,1,0,5,java.util.HashMap,concurrent HashMap: checking size.
10314551,1,0,2,java.util.HashMap,Access Values from HashMap without index values?
10314808,2,0,0,java.util.HashMap,From the JSP page you can access your HashMap through the following way:   code.
10314699,2,0,0,java.util.HashMap,"If you are working in JSP, and you have objMap HashMap inside your jsp then you can simply access it using this scriplet in your javascript: <%=obMap.get(1)%>"
10315850,1,0,3,java.util.HashMap,"Ex ""label"" (ref1) -> value1 ""label"" (ref2) -> value2 You can implement equals so that two distinct Label instances are not equals -> i think it works for HashMap."
10316334,2,1,0,java.util.HashMap,"Initialize the map with: this.data = new HashMap<String, T>();  This works for me (I typed your Map value with T and removed the unncesary Class parameter of addData)."
10317115,2,0,0,java.util.HashMap,Using a HashMap for sorting will not work because its not a list.
10316990,2,0,5,java.util.HashMap,HashMap is intrinsically unordered.
10317047,2,0,1,java.util.HashMap,"When you put them into the HashMap they will not retain their order, as a HashMap is not an ordered map."
10317434,1,0,2,java.util.HashMap,"List<byte[]> or HashMap<String,byte[]> For me key doesnt matter."
10317752,2,0,0,java.util.HashMap,HashMap: Is a map and may search vertically and horizontally by the key:   Iterators are used to search and are slow in adding(to check unique key if applies here) deleting is fast search is fast
10318266,1,0,1,java.util.HashMap,I'm using a HashMap in which I use an ArrayList as a value.
10319224,1,0,3,java.util.HashMap,I didn't find 1.4 source code of HashMap except downloading entire jdk .
10319281,2,1,4,java.util.HashMap,"The iteration order of elements in HashMap was never guaranteed, so implementations were free to change it."
10319286,2,0,2,java.util.HashMap,The order of iteration in HashMap is undefined.
10319286,2,0,2,java.util.HashMap,LinkedHashMap exists specifically as a HashMap alternative with a predictable iteration order.
10319308,2,0,0,java.util.HashMap,I suppose the implementation of HashMap has changed.
10319308,2,0,0,java.util.HashMap,"HashMap doesn't guarantee any order, so you shouldn't rely on that, because the could change it with new releases without any notice."
10324619,2,1,1,java.util.HashMap,"Parse all the user id's and put it in a HashMap> For each userid, check if it is already there in the hashmap, if it is already there, then get the corresponding Set and add it to the end of the list."
10327355,1,0,0,java.util.HashMap,How to access HashMap values in java script method?
10328682,2,0,0,java.util.HashMap,"Hazelcast, which will function like a global HashMap, which all cluster nodes have access to."
10330864,2,0,0,java.util.HashMap,Map userMap = new HashMap(); code.
10344677,2,0,2,java.util.HashMap,"StringBuffer instead of StringBuilder, Vector instead of LinkedList, Hashtable instead of HashMap, and so on... You can also consider compiling with the -deprecated flag for javac."
10335620,2,0,0,java.util.HashMap,"As a alternative you can also create a HashMap<String,String> map  and in that map put values like map.put(name,id); so when user will select value from Spinner you will have the name selected.And then use the map to get corresponding id code."
10334220,1,0,1,java.util.HashMap,"Assume dict is a HashMap, reader is a FileInputStream and fos is a FileOutputStream."
10338470,2,0,1,java.util.HashMap,You could have a class with a public static final HashMap.
10338470,2,0,1,java.util.HashMap,Populate that HashMap with the contents of the properties file.
10338932,2,1,5,java.util.HashMap,"If you know before program execution the strings used to locate the items in the structure, consider using a HashMap."
10342716,2,0,1,java.util.HashMap,"Look into using a HashMap for itemsHeld, using item.GetName() as the key."
10342749,2,0,0,java.util.HashMap,A simple HashMap containing your items will work.
10342859,1,0,22,java.util.HashMap,So I read about HashMap.
10342859,1,0,22,java.util.HashMap,"At one point it was noted:  ""Immutability also allows caching the hashcode of different keys which makes the overall retrieval process very fast and suggest that String and various wrapper classes (e.g., Integer) provided by Java Collection API are very good HashMap keys."""
10342956,2,0,8,java.util.HashMap,Quoting the linked blog entry:  final object with proper equals () and hashcode () implementation would act as perfect Java HashMap keys and improve performance of Java hashMap by reducing collision.
10342956,2,0,8,java.util.HashMap,Immutability also allows caching there hashcode of different keys which makes overall retrieval process very fast and suggest that String and various wrapper classes e.g Integer provided by Java Collection API are very good HashMap keys.
10342956,2,0,8,java.util.HashMap,"I see two possible interpretations of this sentence, both of which are wrong:  HashMap caches hash codes of immutable objects."
10342956,2,0,8,java.util.HashMap,"Example So if we are really crazy and actually decide to use a List as a key for a HashMap and make the hash value dependent on the contents, rather than the identity of the list, we could just decide to invalidate the cached hash value on every modification, thus limiting the number of hash computations to the number of modifications to the list."
10345393,2,0,0,java.util.HashMap,"You could generate a random number, store it in an Array/HashMap/Whatever and return it."
10347223,1,0,2,java.util.HashMap,"I need to pass HashMap, Strings and it must return me a list of beans."
10354103,1,0,8,java.util.HashMap,Java - Extending HashMap - Object vs. generics behaviour.
10354103,1,0,8,java.util.HashMap,"I'm writing a simple HashMap-based Cache that works as follows:  If the requested key is in cache, return its value."
10354103,1,0,8,java.util.HashMap,"One solution would be to switch from ""is a"" to ""has a"" HashMap relationship which is much nicer and clean, but then Cache can't implement Map which would be nice for several reasons."
10354398,1,0,3,java.util.HashMap,The data structure I am using to back this is a Map (new HashMap()) where Item is a POJ whose details are of no consequence.
10362902,2,0,0,java.util.HashMap,"One option would be to use your Listview and feeding it with a list you can retrive from the map like Arrays.asList(HashMap#values#toArray) Generally I prefer the Loop to Reapeat stuff, because you just provide an Integer Model like AbstractReadOnlyModel to define the number of iterations."
10357823,1,0,4,java.util.HashMap,Volatile HashMap vs ConcurrentHashMap.
10357823,1,0,4,java.util.HashMap,I have a cache class which contains a volatile HashMap<T> to store cache items.
10357823,1,0,4,java.util.HashMap,I'm curious what would be the consequences of changing volatile HashMap to ConcurrentHashMap?
10357823,1,0,4,java.util.HashMap,just HashMap?
10357895,2,1,19,java.util.HashMap,"It has nothing to do with thread-safety in regard to accessing the HashMap Given that, and the fact that you say the HashMap is read-only ... you certainly don't need to use anything that provides thread-safety including a ConcurrentHashMap  Edit to add: Your last edit you now say ""The cache is being populated on a interval"" That's not read-only then, is it?"
10357895,2,1,19,java.util.HashMap,"If you're going to have threads reading from it while you are writing (updating the existing HashMap) then you should use a ConcurrentHashMap, yes."
10357895,2,1,19,java.util.HashMap,"If you are populating an entirely new HashMap then assigning it to the existing variable, then you use volatile"
10361839,1,0,3,java.util.HashMap,"I have application that calculates 9 statistictics that are stored in complex data structures as HashMap<String, TreeMap<String, Integer>> or even more complex."
10364795,1,0,1,java.util.HashMap,"Each object is currently stored in a single HashMap<String, Object> data structure."
10364795,1,0,1,java.util.HashMap,Each such HashMap corresponds to a single category (group).
10364795,1,0,1,java.util.HashMap,Each database record is built from the information in all the objects contained in all categories (HashMap data structures).
10364795,1,0,1,java.util.HashMap,"A requirement has appeared for checking whether subsequent records are ""equivalent"" in the number and type of columns, where equivalence must be verified across all maps by comparing the name (HashMap key) and the type (actual class) of each stored object."
10364795,1,0,1,java.util.HashMap,"An idea would be to just sort the keys (e.g., by replacing each HashMap with a TreeMap) and then walk over all maps."
10364909,2,0,2,java.util.HashMap,One soln is to keep both category based HashMap and combined TreeMap.
10364909,2,0,2,java.util.HashMap,So whenever you are adding/removing to HashMap you will do the same operation in the TreeMap too.
10367830,2,0,0,java.util.HashMap,"But for b it runs always through the whole Array,  If you sort b by value, you could do a binary lookup in b.  I guess a HashMap is not allowed from the rules, since you're given two Arrays."
10367830,2,0,0,java.util.HashMap,Else a HashMap is faster.
10368811,2,0,2,java.util.HashMap,Maybe you could scan the classpath at startup and build a HashMap of types that implement an interface.
10368457,1,0,3,java.util.HashMap,HashMap.put causing an infinite loop in Java.
10368457,1,0,3,java.util.HashMap,"Inside of MainControl I have a few things that have to be loaded, one of which being a function that populates the HashMap with the key set to the keybind (int) and the values set to a class that holds the information of the specific keybinds function (KeyDetails)."
10370897,1,0,1,java.util.HashMap,Should I just use HashMap (or maybe Set (since there are few categories))?
10370975,2,1,3,java.util.HashMap,"If I understand you correctly, then HashMap sounds like exactly what you want."
10370975,2,1,3,java.util.HashMap,"With a HashMap, pulling a value (your category) from a key (your keyword) happens more or less immediately, in constant time."
10371272,1,0,4,java.util.HashMap,- I am planning to use HashMap as I understood is easier to work with.
10371272,1,0,4,java.util.HashMap,"After more digging, I guess that I need to override the ""equals"" method from Hashtable, so no HashMap."
10371285,2,0,2,java.util.HashMap,"You can't use HashMap or HashTable or any other existing class that I'm aware of ... because they all deal the collisions, etc, for you."
10371285,2,0,2,java.util.HashMap,"After more digging, I guess that I need to override the ""equals"" method from Hashtable, so no HashMap."
10371285,2,0,2,java.util.HashMap,The equals method of Hashtable / HashMap has nothing to do with collision handling for hash table entries.
10371285,2,0,2,java.util.HashMap,"The collision detection logic in a Hashtable / HashMap is in private methods, so you cannot override it directly."
10372544,2,0,2,java.util.HashMap,"A simple solution is to have a Map such as a HashMap -- HashMap<JInternalFrame, MyJPanel> -- that would allow you to easily associated the MyJPanel with the internal frame that holds it."
10375892,2,0,4,java.util.HashMap,"Use a HashMap, like: code."
10379433,1,0,2,java.util.HashMap,"In the HashMap documentation, it is mentioned that:  the initial capacity is simply the capacity at the time the hash table is created   the capacity is the number of buckets in the hash table."
10379535,2,0,2,java.util.HashMap,Looking at the source code of HashMap we see the following: code.
10382816,2,0,0,java.util.HashMap,create a HashMap with keys as the landline number and value as the whole contact object.
10387318,2,1,13,java.util.HashMap,HashMap implementations in general are un-ordered for Iteration.
10387318,2,1,13,java.util.HashMap,The KeySet that contains the keys does not guarantee order as well because of the hashing algorithms used for placement in the backing data structure of the inherited HashMap.
10387318,2,1,13,java.util.HashMap,"Solution What it sounds like you want is original insertion order index positions, you would have to mirror the keys in the KeySet in something like an ArrayList, keep it in sync with updates to the HashMap and use it for finding position."
10387318,2,1,13,java.util.HashMap,"Creating a sub-class of HashMap, say IndexedHashMap and adding this ArrayList internally and adding a .getKeyIndex(<K> key) that delegates to the internal ArrayList .indexOf() is probably the best way to go about this."
26300874,2,0,1,java.util.HashMap,I think the Best and Simple way to do this would be using HashMap something like this when you are filling your JComboBox with ResultSet code.
10389274,1,0,0,java.util.HashMap,"Please tell me why it is sub-optimal :)  Create a HashMap<Date, ArrayList<Conference>>."
10389274,1,0,0,java.util.HashMap,Iterate over each ArrayList member of the HashMap and use a standard sorting procedure to sort the ArrayList by date.
10390420,1,0,1,java.util.HashMap,"The actual data retrieved is not really important, these are just names and numbers, everything is put in a HashMap."
10392711,1,0,3,java.util.HashMap,Java's java.util.Hashtable has the same functionality as java.util.HashMap.
10392711,1,0,3,java.util.HashMap,Their main difference is that Hashtable is thread-safe and synchronized while HashMap is not.
10394511,1,0,3,java.util.HashMap,Recursively traverse HashMap?
10394511,1,0,3,java.util.HashMap,Is there a way to recursively traverse a HashMap so that value1 of key1 is actually the new key2 which returns value2 that again will be the next key3 and so on ... till it returns null?
10396633,2,0,2,java.util.HashMap,"You will need to ensure you have a unique key for each user; if you do you can just use this key as input to a HashMap Also, to make your SessionCache less dependent on the inner details of your ActiveSessionsObj you should make your addCache method take one of the ActiveSessionsObjs."
10397057,1,0,0,java.util.HashMap,HashMap Implementation Concept.
10397057,1,0,0,java.util.HashMap,HashMap is said as a Array of Arraylists.
10397112,2,0,0,java.util.HashMap,"The only reason for that size to be more than one is if the hash code computed for two object added to the HashMap collide (nb, this is probably not the same as the value returned by hashCode(), but produced from it in relation to the capacity of/number of buckets in the map)."
10397405,2,0,0,java.util.HashMap,"For example, a Java HashMap is implemented as an array of linked lists."
10397094,2,0,3,java.util.HashMap,"Now, once you have the union - all is left is to create a histogram (in how many lists each term appear, can be implemented as HashMap<Term,Integer>) - and print the keys of these histogram in descending value order."
10399756,1,0,0,java.util.HashMap,List is value in HashMap.
16629473,2,0,5,java.util.HashMap,Code above will construct a HashMap inside a HashMap with a constructor that looks like this: code.
10401086,2,1,1,java.util.HashMap,"But instead of content.clear(); if you make it content = new HashMap<String, String>(); You will see that mainCont has all the values since now content points to a different object."
10404119,2,1,8,java.util.HashMap,If you want something better you could use the regNumber as a key in a hash table (HashMap or whatever) and have a reference to the original Member object as value.
10415845,2,0,2,java.util.HashMap,"Let say, ""subjects"" is your HashMap code."
10416945,2,0,1,java.util.HashMap,I'd imagine a HashMap is what your after.
10416945,2,0,1,java.util.HashMap,HashMap hash = new HashMap(); Read this for more information: http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html
10416790,2,1,2,java.util.HashMap,"I recommend using java.util.HashMap, it allows you to create a Key, Value pairs."
10418624,1,0,2,java.util.HashMap,Is there any good way to make sure I access HashMap for both the if statements correctly?
10419027,1,0,0,java.util.HashMap,EDIT I have thought about both a HashMap and Trie.
10419339,2,0,1,java.util.HashMap,1) Store the dictionary words in a HashMap.
10419339,2,0,1,java.util.HashMap,"3) For each of these words, test if that word is present in the HashMap."
10419094,2,0,0,java.util.HashMap,HashMap is the way to go.
10419094,2,0,0,java.util.HashMap,Just store all the words in a HashMap and then look up the map to see if your word exists.
10419094,2,0,0,java.util.HashMap,A more practical solution is to write the HashMap to disk and load it into memory the next time you run your application.
10426808,2,0,1,java.util.HashMap,"You could use a HashMap, as follows: code."
10437449,2,0,0,java.util.HashMap,"List implementation - ArrayList, LinkedList Map implementation - HashMap, TreeMap In comparison HashMap to ArrayList -  A hash map is the fastest data structure if you want to get all nodes for a page."
10426226,2,0,1,java.util.HashMap,HashMap is hash table implementation of map interface it is same as HashTable except that it is unsynchronized and allow null values.
10426054,2,0,1,java.util.HashMap,for more reading try wikipedia's HashMap and linked list
10429345,2,1,2,java.util.HashMap,"You are extending HashMap<AbstractKey, Object> and so your class is inheriting the method Object put(AbstractKey k, Object v)."
10429345,2,1,2,java.util.HashMap,So it compiles that code as a call to HashMap.put.
10442523,2,1,3,java.util.HashMap,"note, if you look at the source code of HashMap (b/c a HashSet is implemented as a HashMap that maps the entries you insert to a dummy object) you can see that the size is only updated when you add and remove variables, and that even when the table is rehashed to increase the capacity, there are no equality checks, so your duplicate objects will stay in that set that you just broke by doing what you shouldn't have been doing in the first place."
10442775,1,0,4,java.util.HashMap,"Performance of TreeMap, HashMap and LinkedHashMap?"
10442775,1,0,4,java.util.HashMap,"In TreeMap - Elements are sorted In HashMap - Elements are not sorted So, if I consider get, put and remove methods which map should I use for performance?"
10442903,2,1,4,java.util.HashMap,Use a HashMap unless you have some need for ordering.
10442903,2,1,4,java.util.HashMap,HashMap is faster.
10445274,1,0,21,java.util.HashMap,EnumMap or HashMap if lookup key is a String.
10445274,1,0,21,java.util.HashMap,I'm trying to weigh the pros and cons of using an EnumMap over a HashMap.
10445274,1,0,21,java.util.HashMap,"Since, I will always be looking up using a String, it seems that a HashMap with a String key would be the right choice."
10453715,1,0,1,java.util.HashMap,KeyStroke class as a key in HashMap.
10453715,1,0,1,java.util.HashMap,Several answers regarding overriding equals() and hashCode() describe the need for both and the application of using them as keys in a HashMap in Java.
10453715,1,0,1,java.util.HashMap,"My question is, is the Java KeyStroke class safe to put as a key in a HashMap?"
10453741,2,0,2,java.util.HashMap,"Best if a HashMap key overrides equals and hashCode and is immutable, and if you check the API, KeyStroke is."
10455000,1,0,3,java.util.HashMap,Thread 1 goes on its merry way placing more data in the HashMap as it comes in to be transferred to Thread 2 later.
10455042,2,1,2,java.util.HashMap,So if you are accessing this data HashMap from multiple threads then you will have to have a synchronized block on every access.
10455042,2,1,2,java.util.HashMap,If you want to have concurrent usage of HashMap without having to synchronize around each usage then you should be using a ConcurrentHashMap.
10455042,2,1,2,java.util.HashMap,"Taking into account the cautions I mentioned above, if you want to take a snapshot of a HashMap so you can work with the contents in a specific thread then the pattern you mention is fine and is often used."
10456089,2,0,0,java.util.HashMap,"An ArrayList, HashMap, etc... there are plenty of things that can fit your needs."
10459732,1,0,1,java.util.HashMap,"Why we use, Map abc = new HashMap(20); instead of  HashMap abc = new HashMap(20); please help me to find out the differnce between these two."
10459751,2,1,5,java.util.HashMap,"In the first case, the abc variable is of type HashMap, which is an implementation of the Map interface."
10459751,2,1,5,java.util.HashMap,"If you change your mind later and want to use a TreeMap for instance, you will have to change many references to HashMap in your code, and is is possible you used peculiarities of HashMap where the generic Map operations are enough."
10462819,1,0,31,java.util.HashMap,Get keys from HashMap in Java.
30922814,2,0,1,java.util.HashMap,"If you only have one item in your HashMap, you're good, but if you have more than that, it's best to loop over the map, as other answers have done."
10462838,2,1,72,java.util.HashMap,A HashMap contains more then one key.
10462854,2,0,10,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Assuming that you have a different value for each key, you can do something like this: code."
10464087,2,0,1,java.util.HashMap,The textbook example is extending HashMap in java.
10464087,2,0,1,java.util.HashMap,"Instead of extends, one can implement Map and just have a composed HashMap that does the actual logic."
10466889,2,1,2,java.util.HashMap,"The problem is not in HashMap, nor HashMap$Entry."
10470023,1,0,0,java.util.HashMap,Retrieving objects from HashMap in Java?
10470023,1,0,0,java.util.HashMap,"I have a HashMap which holds studentIds as key and student objects as values,   code."
10470199,2,0,2,java.util.HashMap,"This repository should hold 2 collections: Map (either HashMap or TreeMap of locations: Map<Integer, Location> where key is the location ID."
10477079,2,0,0,java.util.HashMap,"HashMap, HashSet etc."
10477079,2,0,0,java.util.HashMap,Code snippet from the java.util.HashMap: code.
10477858,2,0,2,java.util.HashMap,For Multi-Dimensional array I'm using HashMap and for One-Dimensional array I'm using ArrayList.
10481317,1,0,0,java.util.HashMap,"im not allowed to create classes in my TrueString2D.. i just need to copy perhaps the Keys of the centralMap in a list, and those of the nestedMap in another List, and then create a new map HashMap>(); (same as my centralMap) and copy the list of old keys of the nestedMap in the NEW created map (for ex."
10481761,2,1,0,java.util.HashMap,"Why don't you use HashMap<String, Map<String, String>>() instead of TrueStringMap2D code."
10484575,1,0,1,java.util.HashMap,I would like to know how can I iterate in a 2Dimensional HashMap?
10487264,1,0,1,java.util.HashMap,Next thought was a HashMap: code.
10496971,2,0,1,java.util.HashMap,"A HashMap<String, HashSet<String>> looks  just fine to me for holding the type of data you've shown."
10496971,2,0,1,java.util.HashMap,"If you use such a HashMap everywhere in your code, when adding values into the sets you will have to remember everywhere to do two steps: (1) creating an empty set only if no value is in the dictionary for some given key, and (2) adding the new value to the set of a given key."
10498342,2,0,1,java.util.HashMap,"Create instance of HashMap, where keys are fruits names and values are fruits occurrence."
10498342,2,0,1,java.util.HashMap,"Then iterate over HashMap, and build your String"
10499919,1,0,3,java.util.HashMap,Printing HashMap values (those values are Arrays) error.
10499919,1,0,3,java.util.HashMap,"This method is to print out all the keys and values of a HashMap<String, int[]> ratingmap."
10500015,2,0,1,java.util.HashMap,"The simplest solution is to use HashMap<String, List<Integer>> as this will print as you might expect."
10509471,1,0,2,java.util.HashMap,HashMap with multiple valued keys.
10509471,1,0,2,java.util.HashMap,Is it possible to create a HashMap whose key is an array of integers?
10509471,1,0,2,java.util.HashMap,In my job I need to create a HashMap with keys like: code.
10509471,1,0,2,java.util.HashMap,"I tried using ArrayList, Objects inside the map, nested HashMap and so on but none worked (in python it´s very easy, I´d just write dict[(5,2)] = 1, so I imagine in Java there´s something simple like that)."
10510150,2,1,3,java.util.HashMap,"Given that a HashMap contains an array, plus a bunch of housekeeping items (size, threshold, load factor), a String[] array is going to be smaller (and thus, by one measure, more efficient) than a HashMap."
10510156,2,0,1,java.util.HashMap,A HashMap would be good if you needed to add/remove data dynamically but that doesn't apply in this case.
10513338,2,1,4,java.util.HashMap,This can mess things up if you put these tables in a HashMap or HashSet.
10513338,2,1,4,java.util.HashMap,"To populate orderIndex from the property value, you need to:  Get the comma-separated list using getProperty() as you mentioned Split that value on comma (I recommend using Guava's Splitter, but String.split or others will work too) Initialize a new HashMap<String, Integer> and an int index = 0 Iterate through the split tokens, map the current token to index and increment index  Note the implicit assumption that none of the table names have a comma in it."
10514639,2,0,0,java.util.HashMap,"If you simply need to map each element in your list to a key so you can later retrieve the element with the key, you should perhaps consider using a HashMap."
10514639,2,0,0,java.util.HashMap,"In short,   If you simply want to store and retrieve by your own key / incremented key -> use a HashMap."
10514473,1,0,5,java.util.HashMap,String to HashMap JAVA.
10514473,1,0,5,java.util.HashMap,I need to create a HashMap from above string.
10514473,1,0,5,java.util.HashMap,"SALES,SALE_PRODUCTS,EXPENSES,EXPENSES_ITEMS should be KEY of HashMap  and 0,1,2,3, should be VALUEs of KEYs."
30941175,2,0,0,java.util.HashMap,You can also use JSONObject class from json.org to this will convert your HashMap to JSON string which is well formatted Example: code.
10517042,2,0,0,java.util.HashMap,"HashMap is a collection which is usually a good thing to know about, besides the usual List and Set."
10518152,1,0,0,java.util.HashMap,"I have a HashMap<Long, ClientProperties> that I'm putting on the ServletContext at startup."
10518152,1,0,0,java.util.HashMap,Basicly I need to get the correct POJO (by HashMap-key) and access its properties in my jsp.
10518152,1,0,0,java.util.HashMap,The HashMap-key to use should be extracted from the User-object stored in the session.
10518946,1,0,0,java.util.HashMap,I am using the following code to extract the timestamp from a HashMap and display it in the Log: code.
10521378,2,0,0,java.util.HashMap,But if this is something that is done often you may want to consider creating a HashMap or similar instead (from achievementId to achievement).
10531861,1,0,2,java.util.HashMap,"Cannot instantiate the type HashMap<String,?"
10531906,2,0,6,java.util.HashMap,This is because you need to specify the type of the values that the HashMap should contain.
10532779,1,0,0,java.util.HashMap,"centralMap = new HashMap<String, Map<String,String>>."
14234608,2,0,1,java.util.HashMap,"Parsing your .csv file and filling the HashMap accordingly will solve your issue, as a previous comment pointed out."
10561366,2,0,1,java.util.HashMap,"For the counting itself, you can use a HashMap for simplicity."
10561394,2,0,1,java.util.HashMap,"EDIT: I have to agree with @Bananeweizen that HashMap is also a good solution, if you need exact matches."
10561394,2,0,1,java.util.HashMap,So read word by word and put in HashMap.
10571000,1,0,1,java.util.HashMap,I have a HashMap of JButtons which represents pictures.
10571712,1,0,1,java.util.HashMap,Shuffling values in HashMap.
10571712,1,0,1,java.util.HashMap,I would like to shuffle values in an HashMap.
10571712,1,0,1,java.util.HashMap,I have following type of HashMap code.
10572025,1,0,0,java.util.HashMap,HashMap iteration/removal getting java.util.ConcurrentModificationException.
10572025,1,0,0,java.util.HashMap,i have a HashMap of ClientSocket and Client Object.
10572025,1,0,0,java.util.HashMap,i've tried to make a new copy of my HashMap before the iteration starts but yet - i still got the error.
10572433,2,1,0,java.util.HashMap,"i've duplicated my HashMap and iterated it on the copy, and before each iterating process, i'm blocking it to other threads (using the  synchronized title) so it won't be interrupted during the copying"
10572201,1,0,3,java.util.HashMap,"by long timeInMillis , so HashMap is not really an option, since I do not want to overwrite equals and hashcode of CounterBag (i need them both)."
10579802,1,0,0,java.util.HashMap,"so that's how my HashMap looks like, which is kind of superfluous to know, since the JTabel does not depend on pre-defined size-data."
10579861,2,1,1,java.util.HashMap,But creating your TableModel would be rather straight-forward with this data structure as soon as you find a mechanism to determine the column order as a HashMap as no ordering.
10581322,2,1,1,java.util.HashMap,"But to me (and also seeing your previous questions), it seems that you are abusing the usage of HashMap instead of using appropriate new objects."
10581322,2,1,1,java.util.HashMap,"I don't know what else is in your HashMap, let's say that you have 3 keys: ""vraag"", ""answer"", ""grade"", you could create the following class: code."
10581322,2,1,1,java.util.HashMap,And have a List<MyClass> instead of List<HashMap>.
10580916,2,0,0,java.util.HashMap,I don't see why you want to use a HashMap for your Strings.
10581955,1,0,3,java.util.HashMap,Optimal way of creating a SortedSet from a number of HashMap objects.
10581955,1,0,3,java.util.HashMap,"I have a number of HashMap data structures containing hundreds of Comparable objects (say, of type MyClass) and need to put all the values (not the keys) in a single data structure, and then sort it."
10583808,2,0,1,java.util.HashMap,Example algorithm:  Open file Create a list of maps of charcaters to integers (ArrayList>) Read all lines; for each line:  Create a map char -> int for that line (HashMap) For each character c in the line:  update the count in the map  Store the map for one line in the list of maps
10584584,1,0,2,java.util.HashMap,"Assume an application producing a number of HashMap<String, MyClass> data structures, each containing dozens to hundreds of Comparable objects of type MyClass, which need to end up in a single and sorted Collection."
10585126,1,0,4,java.util.HashMap,How to call Scala's HashMap.toArray() from Java?
10587178,2,1,18,java.util.HashMap,Actual changes can be detected by doing a set difference using the entry set as HashMap.Entry implements equals() using both key and value.
10592199,2,0,1,java.util.HashMap,Sorting hashmap by values http://www.coderanch.com/t/382750/java/java/Sorting-HashMap-values You can also extend ConcurrentHashMap to override entrySet and keySet methods to return entries/keys in the order of your values.
10596150,2,0,26,java.util.HashMap,best approach to acheive iteration of hashmap in reverse order  HashMap does not define any particular ordering of its element.
10596165,2,0,3,java.util.HashMap,"You can't iterate over a HashMap in reverse because of this:  This class makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time."
10596165,2,0,3,java.util.HashMap,What you should use is a LinkedHashMap:  This implementation differs from HashMap in that it maintains a   doubly-linked list running through all of its entries.
10596173,2,0,6,java.util.HashMap,A HashMap doesn't maintain eny order between keys.
10599710,1,0,5,java.util.HashMap,And will it be vice-versa in case of HashMap?
10599765,2,0,6,java.util.HashMap,And will it be vice-versa in case of HashMap?
17380525,2,1,3,java.util.HashMap,I ran the sample code to understand the difference between HashMap and WeakHashMap code.
27924214,2,0,1,java.util.HashMap,"In other Map implementations like a HashMap, the keys are strongly reachable."
27924214,2,0,1,java.util.HashMap,"For example, if a HashMap has keys as Person class as shown below and if Person object is set to null, even after this if we will do map.get(Person) we will get the value from the memory since the keys are strongly referenced in a HashMap."
27924214,2,0,1,java.util.HashMap,"Output : Hash Map :{test.Person@12dacd1=John} Compared to HashMap, WeakHashMap is the one which will remove its enteries as soon as the keys have no reference in the memory."
10600409,2,0,2,java.util.HashMap,"Suppose you used Number interface from standard library, which allows you to call doubleValue() on you object and calculate based on that, you could use a definition such as as private HashMap<Integer, T extends Number >, in which case you will be able to access Number's methods from T. You could also make your own classes based on a custom interface with methods such as add(), mul() etc."
10600292,1,0,3,java.util.HashMap,private HashMap selectedIds = new HashMap<>(); I suspect that this hashmap is correct.
10602880,1,0,1,java.util.HashMap,Is it possible to use the values method for a HashMap if the values are ArrayLists?
10602880,1,0,1,java.util.HashMap,"I have a HashMap<Integer, ArrayList<Object>> called sharedLocks and I want to check whether a certain value can be found in any ArrayList in the HashMap."
10602880,1,0,1,java.util.HashMap,Is there a way for me to check every ArrayList in the HashMap for a certain value?
10602911,2,0,0,java.util.HashMap,One more thing to consider is if multiple threads can modify this HashMap.
10602911,2,0,0,java.util.HashMap,"In this case, you will want to synchronize this line of code to the HashMap and make sure all modifications are also synchronized."
10602914,2,0,1,java.util.HashMap,"A HashMap is a bit special, in that it doesn't really have an index to go by at all... What you want to do, is turn the HashMap into a collection first, and then iterate through the collection with an iterator."
10602914,2,0,1,java.util.HashMap,"Whenever you get hold of an ArrayList in the HashMap, you cycle through every element in the arrayList, and then you jump out if you find it :)"
10602989,2,1,2,java.util.HashMap,HashMap.values() returns a Collection.
10609943,2,0,0,java.util.HashMap,"The original code uses a HashMap, which is not suitable for this; you're going to have to refactor that to use a pair of Lists in some form, one containing the list of match patterns and the other the corresponding list of replacement strings."
10607287,1,0,0,java.util.HashMap,Getting value from Nested HashMap into another Map.
10608853,1,0,2,java.util.HashMap,I tried loading a HashMap into the memory for fast access to those numbers but it resulted in OOM Exception.
10608853,1,0,2,java.util.HashMap,I also tried writing those id's to a RandomAccessFile and storing their offsets on the file to another HashMap but it was way too slow.
10608853,1,0,2,java.util.HashMap,"Also, the new HashMap that only stores the offsets is still occupying a large memory."
10613039,2,0,3,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
10613885,1,0,0,java.util.HashMap,"I am using HashMap<String, ResultSet> to cache the results."
10614277,2,0,2,java.util.HashMap,"You may try using a HashMap<String, Record> where the String is fieldToUse."
10647745,2,0,0,java.util.HashMap,Someone tries to use a Java HashMap as CORBA Object which won't work.
10620484,1,0,0,java.util.HashMap,"So far I thought of using multiple ArrayList,or multiple HashMap but the problem with the latter would be that I need to perform partial String match, (beginsWith), so HashMap would be pretty useless I think.."
10625959,2,0,3,java.util.HashMap,"In contrast, the second approach requires you to synchronize access to the HashMap if your server application is multi-threaded."
10625238,1,0,5,java.util.HashMap,HashMap Deserialization Issues in Android.
10625238,1,0,5,java.util.HashMap,I am serializing a HashMap on my PC application using the following code: code.
10625337,2,1,3,java.util.HashMap,"1) What is the size for the ""normal"" HashMap in  VM size?"
10625337,2,1,3,java.util.HashMap,"If you like to colaborate what are you trying to solve we can propose technics that make the job faster Update You can try initializing your Map at init time ,as you suggested , with a large capacity if you know the size   HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>(SIZE*2); for the  2. from here  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor."
10625347,2,0,4,java.util.HashMap,Have you tried serializing the HashMap to a JSON object?
10629803,1,0,3,java.util.HashMap,"So in summary, short of manually inserting null into the elements in-between, is there any way to satisfy these two requirements:  Insert elements into position larger than current size Push existing elements to the right when I insert elements in the middle of the list  I've looked at Java ArrayList add item outside current size, as well as HashMap, but HashMap doesn't satisfy my second criteria."
10629925,2,1,5,java.util.HashMap,"If you must have stable positions, use a TreeMap or HashMap."
10631764,2,1,1,java.util.HashMap,"So user logs in, you add him and his session to this attribute (usually a Map/HashMap with user as a key and session as value)."
10632506,1,0,3,java.util.HashMap,"significance of ""power of 2"" in java.util.HashMap implementation."
10632506,1,0,3,java.util.HashMap,Possible Duplicate: Java HashMap Default Initial Capacity   I was reading the implementation of HashMap in java.util.HashMap.
10632506,1,0,3,java.util.HashMap,Parts of declaration copied from java.util.HashMap code.
10633409,2,0,3,java.util.HashMap,"Apart from having the performance characteristics of Red-Black trees ( O(log(n)) time for most common operations), they otherwise behave in pretty much the same way as HashSet and HashMap - in most cases you can use them interchangeably."
10634483,1,0,1,java.util.HashMap,Why is Java HashMap slowing down?
10634483,1,0,1,java.util.HashMap,I try to find to reason with two System.out.println() clauses to judge the preformance of BufferedReader and HashMap instead of a Java profiler.
10634483,1,0,1,java.util.HashMap,the BufferedReader for a big file or HashMap for a big map?
10634926,2,0,1,java.util.HashMap,"Roughly estimated, a HashMap<Integer, List<Integer>> needs at least 3*16 bytes per entry."
10634926,2,0,1,java.util.HashMap,A Java collections HashMap consists of many objects.
10634926,2,0,1,java.util.HashMap,So a single entry in the HashMap will probably need some 16 (entry) + 16 (Integer key) + 32 (yet empty LinkedList) bytes of memory that all need to be considered for garbage collection.
10637614,2,1,29,java.util.HashMap,It's the default way to create the simple HashMap/ArrayList that is probably the most common used multimap.
10682434,2,0,2,java.util.HashMap,"To answer the original type inference problem, though, you can also specify the generic types on a static method using Maps.<Key, Collection<Value>>newHashMap(), but it's certainly not more concise than new HashMap<Key, Collection<Value>>() (it may be more consistent)."
10642004,1,0,0,java.util.HashMap,Java HashMap Did Not Return Expected Result.
10642298,1,0,1,java.util.HashMap,"I've tried to put the first one in a HashMap to compare it with the second one, but the result (as expected) is a very high memory cosumption."
10642623,1,0,1,java.util.HashMap,Java HashMap with arraylist.
10645501,2,1,4,java.util.HashMap,"If you wrote this.hashMap = new HashMap(); instead, then the compiler should complain (and generally throw a warning)."
10647135,2,0,3,java.util.HashMap,An (in-memory) hash table is (you probably should use HashMap) is going to be faster.
10660056,2,0,0,java.util.HashMap,HashMap has a terrible impl.
10652429,2,0,3,java.util.HashMap,"and then select HashMap implementation and look for only those students whose name matches somehow, For example code."
25211146,2,0,2,java.util.HashMap,If there are really large no of elements going to be stored in the hashmap then it is always good to create HashMap with sufficient capacity; this is more efficient than letting it to perform automatic rehashing.
28811708,2,0,2,java.util.HashMap,This happens because HashMap doesn't append the new element at the tail instead it appends the new element at the head.
28811708,2,0,2,java.util.HashMap,But HashMap would be more efficient if order of keys doesn't matter.
10658508,2,0,9,java.util.HashMap,You will need to make this a synchronized collection either by using the ConcurrentHashMap class or wrapping your HashMap using the Collections.synchronizedMap(map) method.
10659134,1,0,1,java.util.HashMap,The problem I am facing now is that the HashMap's entries aren't ordered anymore if the index is greater than 16.
10659150,2,1,5,java.util.HashMap,A HashMap is not ordered or sorted.
10659167,2,0,4,java.util.HashMap,You should use either a TreeMap or a LinkedHashMap instead of a HashMap depending on if you want elements sorted by their natural order or insertion order respectively.
10659167,2,0,4,java.util.HashMap,A HashMap makes no guarantees about the ordering of keys.
10659169,2,0,3,java.util.HashMap,Instead of HashMap.
10785955,2,0,1,java.util.HashMap,I think the problem you are facing is because of the default size of HashMap.
18188615,2,0,0,java.util.HashMap,"If you want a cache that provides a Java HashMap interface and can easily support gigabytes of cache data, with no expiry, then check out Oracle Coherence."
11028986,2,0,0,java.util.HashMap,Note that this SynchronizedSet uses the same mutex which SynchronizedMap returned by  Collections.synchronizedMap(new HashMap()); is using.
11028986,2,0,0,java.util.HashMap,"This can be seen from following points: a)All operations in Map (SynchronizedMap) returned by  Collections.synchronizedMap(new HashMap()); are synchronized on returned map iteslf as mutex as apparent from following code lines as apparent from lines 2004,2010,2035. : code."
10662906,2,1,5,java.util.HashMap,"Remember it is part of the specification of HashMap that if another thread, for example does an m.put(""foo"", ""bar"");  in between two of your calls to i.next(), then next() will throw ConcurrentModificationException."
10668207,1,0,0,java.util.HashMap,"I trying to store a list of songs that I query from Android Media Store but I am not sure how to save multiple columns (i.e. song name, track path, duration, etc..) I currently use a HashMap and ArrayList to display the song Name and Duration in a list view but I'd like to store more information from my query."
10668492,2,0,2,java.util.HashMap,"With that said, if you really do need to use the name as a property name, then consider deserializing the JSON to a HashMap instead of a List."
10674146,2,1,1,java.util.HashMap,I would use Collections.synchronizedMap(new HashMap<...>()) instead.
10673646,2,1,1,java.util.HashMap,It's effectively a HashMap<String>.
10678679,2,1,3,java.util.HashMap,There are two Maps in Java you could use - HashMap and TreeMap - these are compared below: HashMap vs. TreeMap You can skip the detailed explanation a jump straight to the summary if you wish.
10678679,2,1,3,java.util.HashMap,A HashMap is a Map which stores key-value pairs in an array.
10678679,2,1,3,java.util.HashMap,"Worst case, all keys get stored at the same location and the HashMap becomes an unindexed list."
10678679,2,1,3,java.util.HashMap,"As the HashMap gains more entries, the likelihood of these clashes increase, and the efficiency of the structure decreases."
10678679,2,1,3,java.util.HashMap,"This problem can be overcome if you can pre-allocate the HashMap at an appropriate size before you begin, eg map = new HashMap(input.size()*1.5)."
10678679,2,1,3,java.util.HashMap,"Because the keys are essentially randomly positioned in the HashMap, the key iterator will iterate over them in a random order."
10678679,2,1,3,java.util.HashMap,"Performance for a HashMap:  Given the correct size and good distribution of hashes, lookup is constant-time."
10678679,2,1,3,java.util.HashMap,"Insert is dependent on the depth of the tree (log(tree.size()), but is predictable - unlike HashMap, there are no hiatuses, and no edge conditions where performance drops."
10678679,2,1,3,java.util.HashMap,Each insert and lookup is more expensive given a well-distributed HashMap.
10678679,2,1,3,java.util.HashMap,"If yes: The HashMap can be pre-allocated, and so memory churn eliminated."
10678679,2,1,3,java.util.HashMap,If yes: A TreeMap provides much better predictability with no stalls If no: A HashMap probably provides better overall performance for the whole computation    One final point if there is not an overwhelming point from above:  Is a sorted list of keys of value?
10678679,2,1,3,java.util.HashMap,"If yes (eg to print a histogram): A TreeMap has already sorted the keys, and so is convenient   However, if performance is important, the only way to decide would be to implement to the Map interface, then profile both the HashMap and the TreeMap to see which is actually better in your situation."
10681360,1,0,0,java.util.HashMap,I wrote HashMap and LinkedHashMap instead of HashSet and LinkedHashSet.
10681437,2,1,1,java.util.HashMap,The LinkedHashMap is an HashMap with a doubly-linked list implementation added.
10681481,2,0,0,java.util.HashMap,As you said the difference between the two data structures is that the LinkedHashMap is an HashMap that preserve the insertion order of pairs.
10681481,2,0,0,java.util.HashMap,"So the Linked one is intended to used as an HashMap via standard methods of the HashMap and the only method added is removeEldestEntry(), useful if you want to deal with the ""list"" part of the data structure."
10690139,2,0,2,java.util.HashMap,": If you like this question, you might also like: Java = Directly initialize a HashMap (in a literal way)?"
10702259,1,0,0,java.util.HashMap,HashMap with override equals and hashCode not working.
10702259,1,0,0,java.util.HashMap,"UPDATE2- ANSWER HashMap's key(class->HashCode, equlas) would be called."
10702362,2,0,3,java.util.HashMap,HashMap uses equals/hashCode of the Key value (in your case Integer).
10702368,2,0,3,java.util.HashMap,"HashMap uses the keys as index, not the values."
10702397,2,0,0,java.util.HashMap,"You are using a HashMap<Integer, Employee>, it looks like, so the Integers will be hashed."
10702397,2,0,0,java.util.HashMap,"Since the keys are 1,2,3,4,5, the size of your HashMap should be 5."
10704521,2,0,2,java.util.HashMap,"You can put the elements of the ArrayList into a Map<String, Integer> (implemented by a HashMap<String, Integer>), where the key of an entry is String element from the ArrayList and the value is Integer representing the position."
10706182,2,0,0,java.util.HashMap,"To expand a little on Thomas's answer... Map is an interface, and must be instantiated through one of the associated concrete implementations (HashMap, TreeMap, or LinkedHashMap)."
10707683,1,0,1,java.util.HashMap,"I have created a HashMap whose data structure is HashMap<String, HashMap<String, Integer>> which corresponds to HashMap<eachUserDescriptionWords, HashMap<TweetWord, Tweet_Word_Frequency>>."
10707683,1,0,1,java.util.HashMap,The method addValues checks to see if wordCount has words that is already in the giant HashMap wordsCorr.
10707683,1,0,1,java.util.HashMap,"If it does, it increases the count of the word in the original HashMap wordsCorr."
10710338,2,0,1,java.util.HashMap,You should allocate the HashMap with a very large initial capacity to avoid all the resizing that is bound to happen.
10707956,2,0,2,java.util.HashMap,See an example over here: Java HashMap performance optimization / alternative
10710127,2,0,1,java.util.HashMap,"HashMap) already apply a supplemental ""rehash"" method to help with poor hashcode algorithms."
10710127,2,0,1,java.util.HashMap,browse the cource code for HashMap.hash().
10710127,2,0,1,java.util.HashMap,"If you really really care, copy the source code from HashMap into your own class, edit it so you can get access to the entries (in the Java 6 source code I'm looking at, that would be transient Entry[] table, YMMV), and add methods to count collisions."
10710256,2,0,0,java.util.HashMap,However there are two problems with this approach:  HashMap doesn't allow you to specify a custom hash function.
10710256,2,0,0,java.util.HashMap,So either you'll have to implement you own HashMap or you use a wrapper object.
10710256,2,0,0,java.util.HashMap,HashMap uses a bitwise and instead of a modulo operation to find the bucket.
10710256,2,0,0,java.util.HashMap,java.util.HashMap.hash(int) tries to compensate for this but I have seen claims that this is not very successful.
10710256,2,0,0,java.util.HashMap,Again we're back to implementing your own HashMap.
10710256,2,0,0,java.util.HashMap,Now that this point since you're using the integer value as a hash function why not use the integer value as a key in the HashMap instead of the string?
10709929,1,0,3,java.util.HashMap,"Best Practice - HashMap instead of list of parameters, good idea ?"
10709994,2,0,2,java.util.HashMap,"You could define a new class to hold/handle your set of parameters, so you get a bit more control than a HashMap would give you."
10709998,2,0,2,java.util.HashMap,Then you will just be passing this object down and can use getters to get the data out which should be easier to read and maintain than needing to know all the keys for the HashMap on multiple layers.
10710193,1,0,144,java.util.HashMap,How to preserve insertion order in HashMap?
10710193,1,0,144,java.util.HashMap,I'm using a HashMap.
10710205,2,1,329,java.util.HashMap,"It is exactly like HashMap, except that when you iterate over it, it presents the items in the insertion order."
10710241,2,0,20,java.util.HashMap,"HashMap is unordered per the second line of the documentation:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
10711413,1,0,0,java.util.HashMap,Sort java HashMap by values using O(n log n) complexity.
10714550,2,0,0,java.util.HashMap,Most classes (especially if you are going to use it in any of the Collection API) specially in hashcontainer(HashSet and HashMap) should implement their own HashCode (and by contract their own equals method).
10714579,2,0,1,java.util.HashMap,You can put the reference of each session in AppContext (for ex HashMap in AppContext storing userid and session) and from there you can access all session.
10716992,1,0,5,java.util.HashMap,I need to retrieve elements both by numeric index (like in Vector) and by hash (like in HashMap).
10717051,2,0,1,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
10720117,1,0,1,java.util.HashMap,"Please bear in mind that this is contrived version so may have oversimplified it, in my actuall code I am using a 'builder' and then passing the information to the 'finalised' class, and then a bunch of these classes are held within a third object that has the HashMap of ComplexObjects."
10725862,1,0,0,java.util.HashMap,I have a program that needs to merge two HashMap.
10726023,2,1,1,java.util.HashMap,Considering HashMap allows null as value another place in your code which is prone to NPE is  code.
10731149,2,0,1,java.util.HashMap,You need to get the keySet from the HashMap.
10731149,2,0,1,java.util.HashMap,And then Iterate over the keySet and fetch the values from the HashMap.
10731691,1,0,4,java.util.HashMap,I have one HashMap and I store times time range.
10853216,2,1,1,java.util.HashMap,"Ok, it seemed to be a problem with TreeMap and Android... using HashMap now, works OK :)"
10737501,1,0,0,java.util.HashMap,Best solution I came up with is to use HashMap code.
10739243,1,0,4,java.util.HashMap,How to effectively replace Java HashMap with boolean values.
10739279,2,0,4,java.util.HashMap,HashMap put method code.
10739348,2,1,8,java.util.HashMap,"Note that whenever HashMap.put() is called, a key look up occurs in the internal Hashtable."
10739394,1,0,2,java.util.HashMap,I originally get the data back from the database via a HashMap.
10739394,1,0,2,java.util.HashMap,"If I populated both objects, the original and copy, from the HashMap get(), would the two objects still share the same references to the data, resulting in the situation that changing the data in one object will also change it in the copy?"
10739394,1,0,2,java.util.HashMap,What if I used the HashMap to populate the original object and then made a copy by calling all of the getters on the orignal in all of the setters on the copy?
10740008,2,1,1,java.util.HashMap,"HashMap stores the references, hence any update done is done on the original object."
10742370,2,0,0,java.util.HashMap,"Use Maps (TreeMap or HashMap) to keep track of what you read, so you can find ""station"" objects that have already been read and placed in your structure and add connections to them."
10742370,2,0,0,java.util.HashMap,"(This is my predjudice, many people would use a HashMap.)"
10743013,1,0,0,java.util.HashMap,Sort Object HashMap (not by key).
10743013,1,0,0,java.util.HashMap,"So I have several objects in a HashMap: private HashMap <String,Object> hmap; what I want to do is sort this objects through a variable of the objects (a double)."
10747716,1,0,0,java.util.HashMap,"Java, How to assign key to bitmap using HashMap?"
10747716,1,0,0,java.util.HashMap,"In global definition i have declared: private HashMap<String, Bitmap> map = new HashMap<String, Bitmap>();  In other part of my code, i connect to server and get my required info."
10747785,1,0,4,java.util.HashMap,"I am using as a data structure for represent a graph,a HashMap - HashMap (one for the locality and one inside the locality in order to represent the destinations) , i had inserted 20 000 localities."
10747814,2,1,2,java.util.HashMap,This probably has nothing to do with copying the HashMap; that would cause an OutOfMemoryError.
10748084,2,0,0,java.util.HashMap,"If you want to go the other way, I recommend a HashMap<Character, Integer>."
10748481,1,0,0,java.util.HashMap,hashCode() for an array of objects for use in HashMap.
10748481,1,0,0,java.util.HashMap,I Have the following two classes and want to use Foo1 as keys in a HashMap.
10750565,2,0,2,java.util.HashMap,"Create a HashMap<String, List<String[]>> For Each Row:  Look if the Map Contains the Key (split[1])  If there is no List at that key, create one add split[1], split to the correct list   Iterate through your map and order each List Output the data"
10752902,2,0,2,java.util.HashMap,"Obviously we can optimize this by creating a HashMap<Byte, Operation> (you can initialize that in a static block or in the single constructors) but for your usual enum the following should do: code."
10754492,1,0,1,java.util.HashMap,"In such a case, is the HashMap an appropriate structure?"
10754699,2,1,2,java.util.HashMap,This assumes that Maps.newHashMap() returns a HashMap and not a ConcurrentHashMap class.
10754699,2,1,2,java.util.HashMap,The problem is that the HashMap would be updated by another thread while the current thread is reading from it -- this can easily cause problems because of race conditions.
10754675,1,0,2,java.util.HashMap,I'm wondering if the size() method invoked on ConcurrentHashMap is of the same complexity as the size() method for usual HashMap.
10754726,2,1,4,java.util.HashMap,"In my version of the JDK, HashMap.size() has O(1) complexity, whereas ConcurrentHashMap.size() in the best case has to iterate over the segments."
22996395,2,0,3,java.util.HashMap,"In effect, the complexity of ConcurrentHashMap.size() is almost constant (""O(1)"" in nerd language) and the real time cost as compared with HashMap.size() is negligible."
10754732,2,0,4,java.util.HashMap,"The complexity of size() on HashMap is O(1), because the size is stored in a field."
10754732,2,0,4,java.util.HashMap,"If we look at the implementation of size() on ConcurrentHashMap, we see, that it is bigger (> O(1)) Reference (openjdk-6)  HashMap#size() ConcurrentHashMap#size()"
10754759,2,0,0,java.util.HashMap,HashMap is an O(1) operation.
10754841,2,0,2,java.util.HashMap,In your example in the end marked.size() will have the size you are looking for but I'd suggest you to directly use a HashMap so that you won't care about searching for existing elements in linear time and then convert it to an array.
10755921,2,0,5,java.util.HashMap,"Have the HashMap as a class variable, and have the mapping initialized in onCreate or something."
10765201,2,0,0,java.util.HashMap,"stringString not mocked, so still a HashMap without a value for ""foo"", so get will return null."
10765201,2,0,0,java.util.HashMap,The {} response to the stringInteger variable means it has been initialized (in the class) with an actual (empty) HashMap.
10756664,1,0,3,java.util.HashMap,Reading from Properties file v/s HashMap lookup.
10756664,1,0,3,java.util.HashMap,"Which is a more efficient way of accessing (key,value) pairs in terms of both memory and computation: reading from a properties file using properties.getProperty(""key"") or loading the entire properties file into a HashMap in the beginning of the program and then looking up for the key in HashMap?"
10756739,2,1,11,java.util.HashMap,"Of course accessing a member variable is slightly faster than accessing a value from a key in a HashMap, but I doubt that this is where you'll gain anything significant in performance."
10756739,2,1,11,java.util.HashMap,"a HashMap lookup is O(1), and is damn fast."
10756829,2,0,1,java.util.HashMap,"The Properties class extends HashTable<Object,Object>, so sou are unlikely to gain much performance by explicitly using a HashMap instead."
10756829,2,0,1,java.util.HashMap,"HashTable/HashMap lookup and variable access may both be O(1), but HashTable lookup definitely has a much larger constant factor."
10757598,1,0,2,java.util.HashMap,"I'm using the following code to read a map of type HashMap<String, String> from a Parcel: code."
10759253,1,0,0,java.util.HashMap,How to get Strings of list without repetition using HashMap.
10759498,2,0,1,java.util.HashMap,"Note that I'm using the Map interface to represent the map, but you can create a HashMap directly."
10759355,2,1,4,java.util.HashMap,You don't need a HashMap for that.
10759355,2,1,4,java.util.HashMap,A HashMap stores the items in key value pairs.
10759355,2,1,4,java.util.HashMap,Create  HashMap with key as a String (for the nom) and value - the Personne itself: code.
10765042,1,0,3,java.util.HashMap,Converting HashMap into Array.
10765042,1,0,3,java.util.HashMap,I have a HashMap which I want to convert into a array.
23436686,2,0,0,java.util.HashMap,The hashCode and equals method should both be overrided when you want to use the object of your class as key in HashMap.
23436686,2,0,0,java.util.HashMap,HashMap uses a structure of array + linkedList.
10767631,1,0,6,java.util.HashMap,"Before displaying anything in the field of the score, when two pairs are selected, their attached Bitmap are sent to a HashMap that verify if those two Bitmaps already have an attached score, in which case it simply return it."
10771092,1,0,1,java.util.HashMap,"if I have a class that has, for instance a HashMap that is initialized in the constructor like so... code."
10772659,1,0,0,java.util.HashMap,How do i add these two instances in a HashMap using generics?
10773494,1,0,1,java.util.HashMap,Can Spring Automagically Bind Values From A HashMap To A Data Holder?
10773494,1,0,1,java.util.HashMap,I have a record with a large amount of fields coming out of my data layer via a HashMap.
10773494,1,0,1,java.util.HashMap,The HashMap keys match the database field names which also match the setters of my data holder object.
10773494,1,0,1,java.util.HashMap,Is there someway Spring can automagically bind the values from the HashMap into the data holder  object or will I still have to do that myself?
10773597,2,1,0,java.util.HashMap,"The simple HashMap bindings you are looking for sound like something that could be realized through MyBatis (but I don't know MyBatis, so I'm not sure about that)."
10774941,2,0,0,java.util.HashMap,"You can use Hashmap, if you can create combined key based on records key/int pair and value as object then you can store it in HashMap and delete values from hashMap in constant time operation."
10774749,2,1,1,java.util.HashMap,Edit: If you don't have db access you should store the data in a HashMap so you have O(1) lookup rather than O(n) each time.
10778532,1,0,2,java.util.HashMap,"The problem I ran into is that since this class contains pointers, this address is used when hashing if I use a HashMap (See my code below)."
10778540,2,1,9,java.util.HashMap,In order to use instances of a class as keys in a HashMap you need to override its hashCode and equals methods.
10779067,2,0,1,java.util.HashMap,Note that LinkedHashSet extends HashSet which simply wraps a HashMap that only cares about its keys.
10779067,2,0,1,java.util.HashMap,So what we're really talking about here is the behavior of HashMap.
10779067,2,0,1,java.util.HashMap,HashMap simply holds references to its keys and is not responsible for tracking when changes are made to those objects.
10779067,2,0,1,java.util.HashMap,The only time it computes hashes of the keys are when they are put or when the HashMap resizes itself.
10779067,2,0,1,java.util.HashMap,"Theoretically a custom HashMap implementation that tracked changes to its keys would be possible, but this would be contingent on the keys implementing an interface that fired notifications when their properties were changed."
10779067,2,0,1,java.util.HashMap,The fact that this custom HashMap could only be used with a specific type of key would make it very specialized.
10779666,2,1,2,java.util.HashMap,"The HashMap's description of its serialised data is:  The capacity of the HashMap (the length of the   bucket array) is emitted (int), followed by the   size (an int, the number of key-value   mappings), followed by the key (Object) and value (Object)   for each key-value mapping."
10780111,1,0,10,java.util.HashMap,Converting HashMap to ArrayList.
10782548,1,0,3,java.util.HashMap,"When I change the above snippet as follows, then also I got the same exception even java.util.HashMap implements Serializable."
10782735,2,1,4,java.util.HashMap,"Solution I now think of require that you create a new hashmap specifically for params and copy all the parameters there and save that HashMap to session, eg: code."
10786218,1,0,1,java.util.HashMap,"I've thought of having Component, Model and Function as simple POJOs and to keep track of references between them with multiple HashMaps (HashMap<Component, Model>, Hashmap<Model, Component>, HashMap<Model, Function>, HashMap<Function, Model>) but this seems inefficient to me."
10791799,2,0,1,java.util.HashMap,"I would say, that if one has not more than 1000 entities with not so many relationships - search in HashMap<String, Function> will be quite fast and shouldn't be a bottleneck."
10787026,2,0,0,java.util.HashMap,"If you want the garbage collector to clean the images, use WeakReferences instead, and store the images on a HashMap."
10789029,2,1,0,java.util.HashMap,Alternatively use HashMap over List that allows to store a key against a BitMap being stored.
10789029,2,1,0,java.util.HashMap,And you can process your requirement based on the key and use it whenever required to remove a BitMap from the HashMap table.
10794833,1,0,0,java.util.HashMap,"I would like to store the values in a HashMap, something like  code."
10794890,1,0,15,java.util.HashMap,"I also checked HashMap's initial capacity, and it's 16 which makes sense."
10794951,2,0,4,java.util.HashMap,"It makes sense in a HashMap, because of how the hashing works."
10806643,2,1,6,java.util.HashMap,Other times you might prefer to store the items in a HashMap.
10809442,2,1,4,java.util.HashMap,"So what your stream contains is basically:  HashMap A with contents {1:1} pointer: ""HashMap A again""  You need to use a fresh HashMap instance in your case."
10809688,1,0,1,java.util.HashMap,Custom objects not found in HashMap?
10809688,1,0,1,java.util.HashMap,I have two doubts : 1) I thought HashMap will contain one entry as hascode of the two objects (ob1 and ob2) are same.
10809688,1,0,1,java.util.HashMap,could any one explain why there are two entries in the HashMap?
10809699,2,1,7,java.util.HashMap,"Your equals() method is wrong, and this breaks the HashMap."
10809699,2,1,7,java.util.HashMap,You need to define both of these methods correctly to get HashMap to work.
10811205,2,0,2,java.util.HashMap,"underscore.js treats Objects and Arrays both as iterable collections, there exist HashMap implementations for storing values by non-string-keys etc etc."
10811573,2,0,9,java.util.HashMap,"Make sure if you are using HashMap implementation then you need to provide sensible version of hashcode() and equals() for your custom type you add to Map If you have fixed set of property then you should go with class and create one, if not then use map"
10811577,2,0,2,java.util.HashMap,you can use Java HashMap.
10811843,1,0,0,java.util.HashMap,How we can pass HashMap parameter in UrlEncodedFormEntity..?
10811843,1,0,0,java.util.HashMap,How we can pass HashMap argument in UrlEncodedFormEntity?
10811923,2,0,3,java.util.HashMap,Edit #2: If your HashMap holds arbitrary values remember to do this instead: code.
10821873,2,0,5,java.util.HashMap,I think that your best bet will be a HashMap: code.
10824312,1,0,0,java.util.HashMap,I used a HashMap in which the keys are 'Total Royalty A' from 'Total Royalty B'.
10834502,2,0,0,java.util.HashMap,You can use a simple SoftReference HashMap based cache.
10843393,1,0,2,java.util.HashMap,HashMap Alternatives for Android Application.
10843393,1,0,2,java.util.HashMap,I am having OOM issues with java.util HashMap so I am looking for memory friendly HashMap alternatives to standard Java Hashmap.
10843393,1,0,2,java.util.HashMap,File-based HashMap implementations are also fine as long as they are working offline.
10847160,1,0,1,java.util.HashMap,EDIT: For example java.util.HashMap.
10847761,1,0,2,java.util.HashMap,Inserting HashMap Values to a table using ibatis.
10848141,2,0,0,java.util.HashMap,Have a look at HashMap http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
16794929,2,0,1,java.util.HashMap,HashMap is declared to have a String key and you're trying to put an int key.
10851672,2,0,7,java.util.HashMap,"Since the HashMap is declared to have a String key and you're trying to put an int key in, it's not complaining about the value but the key."
10854554,2,0,0,java.util.HashMap,Data is accessed just like you would access a HashMap (for JSONObject) or ArrayList (for JSONArray).
10856397,1,0,7,java.util.HashMap,"I've read quesions here which basically all suggested to use a HashMap, like this Q: Java associative-array However, I don't think the solutions mentioned will solve my problem."
10856397,1,0,7,java.util.HashMap,"So, the question is, how do I store and fetch arrays in arrays in a HashMap?"
10856397,1,0,7,java.util.HashMap,"I understand I am pretty much stuck with the ugly HashMap solution, but I still can't see how this will let me store arrays, I'm sure I'm overlooking something simple."
10856397,1,0,7,java.util.HashMap,"And this is flexible, I can easily just get a country name based on country code, a language, or I can get the country_data HashMap when I need it, or all country names, etcetera."
10856462,2,1,7,java.util.HashMap,You can store arrays as values of a HashMap: code.
10856442,2,0,12,java.util.HashMap,"Maybe I'm misunderstanding your issue, but why not create your own object to hold the data, then store those in the HashMap?"
10856443,2,0,11,java.util.HashMap,The correct thing to use in java is a HashMap.
10856443,2,0,11,java.util.HashMap,"So HashMap<String, HashMap<String, Object> or Hashmap<String, List<Object>> might help you."
10859740,2,0,0,java.util.HashMap,"You want something that implements the SortedMap interface -- instead of HashMap, use TreeMap?"
10859884,1,0,0,java.util.HashMap,I'm still unsure about various capabilities of ArrayList or HashMap or Tree Map.
10861838,2,0,7,java.util.HashMap,See http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#keySet%28%29.
10863803,2,1,1,java.util.HashMap,You can try the following  Create a HashMap and set the required properties in it  code.
10863519,2,0,0,java.util.HashMap,You could use a HashSet or HashMap to make sure you only use a single String instance whenever your data contains the same sequence of characters.
10864678,2,0,6,java.util.HashMap,"Make an actual HashMap instead of a HashSet as above, use the PK as the key and the row as the value."
10865304,2,1,7,java.util.HashMap,Maps HashMap Growing Entry[] table field holding so called buckets.
10865304,2,1,7,java.util.HashMap,ConcurrentHashMap Similar to HashMap but access to each bucket (called segment) is synchronized by an independent lock.
10865304,2,1,7,java.util.HashMap,HashSet Uses HashMap underneath (!)
10865441,1,0,3,java.util.HashMap,I'm taking a java class and the instructor has had us build a HashMap like this:  code.
10867556,2,1,0,java.util.HashMap,"Build a HashMap<Color,Collection<Glasses>> in addition to your other data structures."
10866986,2,1,6,java.util.HashMap,"I'll hint you toward two solutions:  you can use an array (but you will have to find a way to map character a-z to indices 0-25, which is somehow trivial is you reason about ASCII encoding) you can use a HashMap<Character, Integer> which is an associative container that, in this situation, allows you to have numbers mapped to specific characters so it perfectly fits your needs"
10866988,2,0,4,java.util.HashMap,You can use HashMap of Character key and Integer value.
13315759,2,0,1,java.util.HashMap,I am using a HashMap for the solution.
10869113,2,0,4,java.util.HashMap,Use a dictionary (HashMap) where the words are the keys and the values are the number of occurrences.
10869113,2,0,4,java.util.HashMap,"If the HashSet fits into memory, HashMap should as well."
10870319,1,0,8,java.util.HashMap,"As a side note, I know how a HashMap works underneath in Java."
10870319,1,0,8,java.util.HashMap,To summarize the part that is confusing to me is the following: The LinkedHashMap delegates all the calls to its parent HashMap.
10870319,1,0,8,java.util.HashMap,Internally it overrides the HashMap.Entry to implement the various recordAccess and recordRemoval methods which seem to implement the logic of the LinkedHashMap But the actual Entries are inside the table of the base class i.e. the HashMap which instantiates a table of HashMap.Entry and not of LinkedHashMap.Entry.
10870319,1,0,8,java.util.HashMap,Am I correct to think that somehow the LinkedHashedMap.Entry is the type of table created by the HashMap?
10870319,1,0,8,java.util.HashMap,My experiment on this using a derived version of HashMap failed for the reason of Shengyuan Lu (+1) - My bad there    UPDATE: The following which I tried is the same (I think) as what the LinkedHashMap is doing:   code.
10870611,2,0,1,java.util.HashMap,"(The calls are in HashMap.put, HashMap.putForNullKey and LinkedHashMap.get.)"
10870611,2,0,1,java.util.HashMap,Similarly recordRemoval is called from HashMap.removeEntryForKey and HashMap.removeMapping.
10870396,2,1,3,java.util.HashMap,"If you define MyLinkedHashMap under package java.util, it will compile;) Because HashMap.HashEntry is package visibility."
10870396,2,1,3,java.util.HashMap,PLUS: I think the major thing puzzled you is LinkedHashMap.Entry vs HashMap.Entry.
10870396,2,1,3,java.util.HashMap,The point is LinkedHashMap.Entry is-a HashMap.Entry.
10870396,2,1,3,java.util.HashMap,Actually HashMap.table stores LinkedHashMap.Entry in LinkedHashMap.
10870396,2,1,3,java.util.HashMap,"Regarding to recordAccess and recordRemoval, they both override HashMap.Entry versions."
10870396,2,1,3,java.util.HashMap,You could find out the references both in LinkedHashMap and HashMap.
10872157,2,1,1,java.util.HashMap,"If you want the Server to be able to Contact the client when it wants, then whenever the server get the client Socket object using the accept() method, store it in a HashMap or ArrayList depending on your necessity."
10872914,1,0,1,java.util.HashMap,Is there any data structure similar to HashMap where I can add duplicate keys.
10872914,1,0,1,java.util.HashMap,"HashMap roleRightsID = new  HashMap(); is there any data structure similar to HashMap where I can add duplicated keys For Example  USA, New York USA, Los Angeles USA, Chicago Pakistan, Lahore Pakistan, Karachi etc"
10872937,2,0,3,java.util.HashMap,"You can use HashMap<String,List<String>> if you need to keep few values in one key."
10879302,1,0,24,java.util.HashMap,HashMap implementation in Java.
10879302,1,0,24,java.util.HashMap,I am looking at the implementation of HashMap in Java and am stuck at one point.
10879475,2,0,47,java.util.HashMap,"Given the internal property of HashMap that the underlying array always has number of buckets equal to 2^n, the Sun's engineers could use the idea of h & (length-1), it does a bitwise AND with a number consisting of all 1's, practically reading only the n lowest bits of the hash (which is the same as doing h mod 2^n, only much faster)."
10882477,2,0,1,java.util.HashMap,"The provided solution will work, BUT: I think a HashMap<String, Item> list1 will be a better datatype."
10887209,1,0,5,java.util.HashMap,Understanding HashMap.
10887529,2,0,0,java.util.HashMap,"At least one of these ""lists"" should actually be stored in a HashSet/HashMap, whose contains() method is efficient."
10887529,2,0,0,java.util.HashMap,The trick is to make the check efficient to have one of the tables' row representations stored in a HashSet/HashMap.
18715010,2,0,0,java.util.HashMap,@OneToMany(cascade = CascadeType.ALL) @LazyCollection(LazyCollectionOption.FALSE) private Map associatedProjects = new HashMap(); how about to add this.
18715010,2,0,0,java.util.HashMap,"@OneToMany(cascade = CascadeType.ALL) *@JoinColumn(name="""")*  @LazyCollection(LazyCollectionOption.FALSE) private Map associatedProjects = new HashMap();"
10892980,2,1,0,java.util.HashMap,"(In the back, save this parameter against some timeout and user information for eg, in a HashMap) 2->While the login happens from second app, send the parameter with the request."
11492229,2,0,0,java.util.HashMap,and in Java you need a HashMap that will have an ArrayList of all of your department beans.
10894558,1,0,6,java.util.HashMap,How HashTable and HashMap key-value are stored in the memory?
10894592,2,0,2,java.util.HashMap,As default implementation  hashCode function in Object class return the  memory address as the hash which is used as key in HashTable & HashMap.
10894641,2,0,3,java.util.HashMap,How HashMap works in Java  This is somewhat more clearer explanation of How HashMap works?
10895054,2,1,11,java.util.HashMap,The basic idea of HashMap is this:  A HashMap is really an array of special objects that hold both Key and Value.
10895054,2,1,11,java.util.HashMap,"This is most likely the most expensive operation on HashMap, so you want to tell your Maps how many buckets you'll use if you know it in before."
10899522,1,0,1,java.util.HashMap,Modeling DFA and NFA using HashMap Implementation.
19426871,2,0,16,java.util.HashMap,Default initial capacity of the HashMap takes is 16 and load factor is 0.75f (i.e 75% of current map size).
19426871,2,0,16,java.util.HashMap,The load factor represents at what level the HashMap capacity should be doubled.
19426871,2,0,16,java.util.HashMap,"This represents that after storing the 12th key – value pair into the HashMap , its capacity becomes 32."
10901821,2,1,82,java.util.HashMap,The documentation explains it pretty well:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
10901821,2,1,82,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
10906826,2,0,1,java.util.HashMap,"( http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html#put%28java.lang.Object,%20java.lang.Object%29) You can rewrite the code as follows to resolve the issue."
10912914,1,0,0,java.util.HashMap,A lot of BookEntry objects make up a HashMap that represents a phonebook.
10912914,1,0,0,java.util.HashMap,or is it that the internal mechanics of the HashMap<> requires me to include equals() method to compare two keys?
10913128,2,0,1,java.util.HashMap,"HashMap uses equals() and not compareTo(), so you have to implement it."
10912964,2,1,1,java.util.HashMap,"compareTo() method  is used in sorting,  This method's implementation will determine who is greater(lesser, same) between two person, also at what degree while equals() & hashcode() will be used in Hash based data structure (HashMap) in your case  user-defined class as a key of HashMap   yes you need to implement hashcode() and equals() properly Also See  overriding-equals-and-hashcode-in-java"
10913020,2,0,2,java.util.HashMap,Some data structures will use compareTo (for example a TreeMap) and some will use equals (for example a HashMap).
10914584,1,0,1,java.util.HashMap,And every Hashmap is related to file .and this file with its property(in HashMap) will send to external repository.
10915394,2,0,1,java.util.HashMap,"Because hashcodes are used in data structures like HashSet, HashMap etc., you want to minimize the # of objects that could potentially share the same hash code to optimize lookup times on those collections."
10919941,1,0,2,java.util.HashMap,HashMap Not Calling Object.equals?
10919941,1,0,2,java.util.HashMap,"When I put an instance of the object in a HashMap as the key, and then call get(Object) on the map with a new but identical object as the key, it returns null."
10919941,1,0,2,java.util.HashMap,"But if you use a String key in a HashMap and then pass a new instance with identical characters to get(Object), it returns the value successfully."
10919941,1,0,2,java.util.HashMap,What do I have to do to have HashMap test keys based on MY equals method?
10919975,2,1,8,java.util.HashMap,"Take a look at the link, as it specifies that hashcode() and equals() have a contract to ensure proper functionality in HashTable's, HashMap's, and HashSet's."
10919975,2,1,8,java.util.HashMap,"In a HashMap, values are stored in buckets, which are reached by the hashcode of the key."
10919991,2,0,1,java.util.HashMap,You should also override hashCode otherwise it won't work as HashMap (as the name suggests) equates equality based on a collection of hashes.
10923039,1,0,0,java.util.HashMap,"Moreover, removing myTemp.add(ss) from the addToMap() method prints out an empty HashMap in the main method, why is this?"
10923173,2,0,1,java.util.HashMap,"From a best practice point of view, calling a HashMap ""mylist"" is problematic in a number of ways."
10925914,2,0,0,java.util.HashMap,HashMap[] map = list.toArray(new HashMap[0]);
10927618,2,0,2,java.util.HashMap,"Firstly, a Hashtable is basically a HashMap, so... You have:  a HashMap Multiple threads using the HashMap concurrently  What need is a HashMap that is coded for concurrent access."
10940305,2,0,0,java.util.HashMap,In both manager classes I have a HashMap  You can have a method to stop/start/create/destory/remove B objects in class A or C which takes the 'name' ob object B and initiate corresponding operation on object B.
10940305,2,0,0,java.util.HashMap,"And as a best practice, in your SessionContextListener always make sure to call the stop/remove operation to remove the objects that are added in this HashMap."
10940295,2,0,1,java.util.HashMap,You just take a HashMap that maps a specific class that's a subtype of IFoo to some converter interface.
10944274,2,0,0,java.util.HashMap,Let's simplify this to only one level of HashMap.
10944274,2,0,0,java.util.HashMap,What happens is that the second HashMap (map2) will contain the same instances of Dates that map1 contains.
10944274,2,0,0,java.util.HashMap,This happens when you put another HashMap into a HashMap.
10944274,2,0,0,java.util.HashMap,From the second iteration you will modify the same HashMap over and over.
10944159,2,0,2,java.util.HashMap,The HashMap is an object that is passed by reference (You should read up on this).
10944159,2,0,2,java.util.HashMap,"Otherwise, modifications that you make to map2 will reflect across all the HashMap instances."
10944159,2,0,2,java.util.HashMap,Read here to find out more: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#clone%28%29 Deep clone of HashMap: code.
10944159,2,0,2,java.util.HashMap,"You should ensure that the HashMap is typesafe, and that the key and the value have a deep clone implementation of Object.clone()"
10944224,2,0,0,java.util.HashMap,"Simple cloning does not help - it clones only HashMap, not it's keys and objects."
10948372,2,0,10,java.util.HashMap,One of the best ways is HashMap: Use this sample: code.
10948372,2,0,10,java.util.HashMap,Look at this link: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
10948408,2,0,2,java.util.HashMap,The most commonly used Map implementation for a dictionary-like map should be HashMap.
10950073,2,1,0,java.util.HashMap,"However, if you DO need to get the values of key1 and key2 from a specific Task object, you can instead use a HashMap<TaskKey,Task> instead of a Task[][] to store your data."
10953562,2,0,0,java.util.HashMap,Generates a hex : #486f6d Similarly generate hex for all the Strings you want and keep adding them up to a HashMap as a key-value pair.
10964029,2,0,0,java.util.HashMap,"its really helpfull your both posts, thank you very very much i got the solution on both of your answers here it is my map is Map<String,List<String> myMenu = new HashMap<String, List<String>>(); code."
10963345,1,0,0,java.util.HashMap,"new to the hashing concept, I have read that HashMap, HashTable etc use hashing, and we need to specify a key while storing a value with it But, since every object has a hashCode() method, doest java internally use hashCode for a object via a particular field while managing it (other than the lists)"
10963376,2,0,2,java.util.HashMap,"And the hashCode is not used by the JVM, but by hash-based collections (Hashtable, HashMap, HashSet, ...)"
10966895,2,1,2,java.util.HashMap,"If this is for a shopping-like program, you would probably be best to store all the information for each product in a new class, and then store the class in the HashMap."
10966895,2,1,2,java.util.HashMap,"You will then be able to query the HashMap for ""Cheese"" and you'll get the Product and and all the information for it... code."
10969589,2,1,18,java.util.HashMap,"HashMultimap is basically a HashMap to HashSets, LinkedHashMultimap is a LinkedHashMap to LinkedHashSets, ArrayListMultimap is a HashMap to ArrayLists, LinkedListMultimap is a LinkedHashMap to LinkedLists (performance-wise, if not technically true), TreeMultimap is a TreeMap to TreeSets, ImmutableSetMultimap is an ImmutableMap to ImmutableSets, ImmutableListMultimap is an ImmutableMap to ImmutableLists."
10972970,1,0,3,java.util.HashMap,Is there a HashMap join elements.
10973490,2,0,0,java.util.HashMap,"You have to filter your ArrayList<HashMap<String, String>> data first, then call notifyDataSetChanged() in your adapter"
10973539,1,0,4,java.util.HashMap,What is the main benefit of using HashMap in java?
10973539,1,0,4,java.util.HashMap,Possible Duplicate: Differences between HashMap and Hashtable?
10973539,1,0,4,java.util.HashMap,"In this Java project I'm looking at, I keep seeing code with HashMap, like so code."
10973696,2,0,1,java.util.HashMap,Main benefit of using HashMap in java?
10973553,2,1,12,java.util.HashMap,"HashMap is part of the new Collections Framework, added with Java 2, v1.2."
10973553,2,1,12,java.util.HashMap,The key difference between the two is that access to the Hashtable is synchronized on the table while access to the HashMap isn't.
10973553,2,1,12,java.util.HashMap,Another difference is that iterator in the HashMap is fail-safe while the enumerator for the Hashtable isn't.
10973553,2,1,12,java.util.HashMap,"And, a third difference is that HashMap permits null values in it, while Hashtable doesn't."
10973970,1,0,3,java.util.HashMap,"From others suggests, how can I use a HashMap to give the same expected result as the example given above?"
10973970,1,0,3,java.util.HashMap,"I was told to use fetchContactNumbers() and fetchContactNames() in the Hashmap then use the HashMap to compare with newList, but I cant find any source to achieve this."
10973970,1,0,3,java.util.HashMap,"UPDATE: Here is the working code for my HashMap, but the results are still the same as above: code."
10974610,1,0,0,java.util.HashMap,HashMap where the order of keys is important.
10974610,1,0,0,java.util.HashMap,"I use HashMaps for storing sets of  pairs, but I also have to be sure from the first json serialization (from a Php client) and to the Java HashMap set browsing, the order of keys will be the same code."
10974642,2,0,0,java.util.HashMap,You can check out this question on SO: How does Java order items in a HashMap or a HashTable?
10976549,1,0,15,java.util.HashMap,"charList is a HashMap where I store letters with their last appearing index so when I have 6 elements starting with letter ""A"", the value for key ""A"" is 5 and so on."
10977616,2,0,3,java.util.HashMap,That way you don't have to worry about dealing with Objects when you use .get(); you know the HashMap will map a String value to an Integer value.
10977616,2,0,3,java.util.HashMap,"Fourth, your kannadahash HashMap appears to be backwards."
10977116,1,0,0,java.util.HashMap,"It seems that using PreparedStatements while retaining one connection object keeps a HashMap of all PreparedStatements ever run over this connection inside it, therefor adding all data ever selected to it."
10981502,2,1,2,java.util.HashMap,"Your class can have a static container (like a HashMap), and the constructor adds the constructed class to the HashMap."
10992183,2,0,3,java.util.HashMap,"You can see that you are accessing the key set of a HashMap, not a list."
10985217,2,0,1,java.util.HashMap,"Let us use both solutions to build a single solution for you: First, you create a HashMap with all your keys: code."
10993403,1,0,6,java.util.HashMap,How to replace HashMap Values while iterating over them in Java.
10994529,2,0,0,java.util.HashMap,Also if you want to reduce memory usage you are better off not creating an extra HashMap just to remove 1 or more entries.
10997290,2,0,0,java.util.HashMap,"Doing this way, when you ask the HashMap to retrieve you the object corresponding to the field that you want, the map would return you an ArrayList cointaing all of the elements which has that field."
11005829,2,0,1,java.util.HashMap,I think the simplest way would be with a HashMap.
11007037,1,0,2,java.util.HashMap,The employees are stored in a HashMap in the class Employees.
11007037,1,0,2,java.util.HashMap,"The button's ActionListener calls the method changeName(), which replaces the old name with the new name in the HashMap and updates the data file."
11007037,1,0,2,java.util.HashMap,and here is the code from the class Employees that changes the HashMap: code.
11007860,1,0,4,java.util.HashMap,"How can I dump the contents of a Java HashMap(or any other), for example to STDOUT ?"
11007860,1,0,4,java.util.HashMap,"As an example, suppose that I have a complex HashMap of the following structure : code."
11007871,2,1,8,java.util.HashMap,Use HashMap.toString() (docs here): code.
11008083,1,0,2,java.util.HashMap,Creating complex HashMap in Java.
11008083,1,0,2,java.util.HashMap,What is the easiest way to create a HashMap like this : code.
11008083,1,0,2,java.util.HashMap,"I do it that way because, record.get(""student1"") is a HashMap object, so I assume a put on that should work, and so on."
11008112,2,0,0,java.util.HashMap,"Why are you creating a complex set of HashMaps, you can create a Java Object instead, and then use it in for a HashMap."
11008112,2,0,0,java.util.HashMap,"So in your case, you can create a class called ScoreInfo which will have HashMap score, place and rank and then use that as a value of HashMap."
11008115,2,0,1,java.util.HashMap,You can do it by type casting the Object to Map or HashMap.
11009576,1,0,2,java.util.HashMap,I have an ArrayList of HashMap like this: code.
11009576,1,0,2,java.util.HashMap,Now i want to Get Album and songs of a specific Artist and song count from HashMap-array-list(playListSongs) to bind it to the list view.
11018005,2,0,0,java.util.HashMap,Just define your own StrangeHashMap by extending HashMap.
11017774,2,0,4,java.util.HashMap,This first copies the English HashMap.
14729277,2,0,0,java.util.HashMap,"You can use hashmap for putting all of your clients there HashMap<String, DataOutputStream> clients = new HashMap<String, DataOutputStream>(); code."
11029775,2,0,2,java.util.HashMap,"Of course, whether a HashMap structure is helpful depends on what you want to do."
11029775,2,0,2,java.util.HashMap,"If, for example, you want to search events based on some kind of identifier, then a HashMap is ideal."
11031769,1,0,0,java.util.HashMap,"I am able to pull data from the domain objects, but I need to be able to generate a report from a HashMap of key value pairs and I need some way of using this as the datasource for my report."
11039427,1,0,2,java.util.HashMap,"Unlike HashMap, order matters in LinkedHashMap."
11039871,1,0,0,java.util.HashMap,"hm is a HashMap and it reads a txt file where each line is something like ""San Francisco -> New York"" code."
11040652,2,0,8,java.util.HashMap,"Okay, there are a worryingly number of either wrong answers or answers that use HashMap or HashSet for this very simple iteration problem, so here is a correct solution."
11042221,1,0,2,java.util.HashMap,Android OutOfMemoryError with HashMap and ArrayList.
11046184,2,0,3,java.util.HashMap,"deserialize your solutions using HashMap<String, String>[] : code."
11048783,1,0,6,java.util.HashMap,Java HashMap key value storage and retrieval.
11048783,1,0,6,java.util.HashMap,I want to store values and retrieve them from a Java HashMap.
11048783,1,0,6,java.util.HashMap,I want to retrieve all Keys and Values from the HashMap as a Java Collection or utility set (for example LinkedList).
11050539,1,0,0,java.util.HashMap,Using HashMap in multithreaded environment.
11050539,1,0,0,java.util.HashMap,I was going through an interview question in this site   http://javarevisited.blogspot.in/2011/04/top-20-core-java-interview-questions.html  and I was struck with this question:  What’s wrong using HashMap in multithreaded environment?
11050539,1,0,0,java.util.HashMap,"According to my opinion, it's not a problem to use HashMap inside a multi-threaded environemnt, as long as our application is not creating threads which are modifying the created HashMap, rather than simply accessing the HashMap So in my understanding, it's not a problem as long as in the application we are just accessing the HashMap in a multi-threaded environment?"
11050613,2,1,7,java.util.HashMap,What’s wrong using HashMap in multithreaded environment?
11050613,2,1,7,java.util.HashMap,Certain if each thread had their own HashMap instance then this is not an issue.
11050613,2,1,7,java.util.HashMap,"It is a problem if multiple threads, for example, are adding to the same HashMap instance without it being synchronized."
11050613,2,1,7,java.util.HashMap,"If you need to use the same hash table object in multiple threads then you should consider using ConcurrentHashMap, to wrap each of the accesses to the HashMap in a synchronized {} block, or to make use of the Collections.synchronizedMap(new HashMap<...>()) construct."
11050613,2,1,7,java.util.HashMap,"So in my understanding, it's not a problem as long as in the application we are just accessing the HashMap in a multi-threaded environment?"
11050613,2,1,7,java.util.HashMap,You must make sure:  all of the updates to the HashMap are completed before the threads are instantiated the threads are only using the HashMap in read-only mode (gets or iteration) there are no other threads updating the map  If any of these conditions are not true then you will need to use a synchronized map instead.
11050634,2,0,0,java.util.HashMap,I guess that they meant to access to a shared copy of HashMap.
11051889,2,0,5,java.util.HashMap,However HashMap style initialization in this manner may be problematic.
11052917,1,0,1,java.util.HashMap,"I'm trying to figure out the best way to store an ArrayList<HashMap<String, String>> item so that it's accessible across activities."
11052917,1,0,1,java.util.HashMap,"In one activity, I store it like by adding a series of HashMap<String, String> items to the ArrayList."
11052917,1,0,1,java.util.HashMap,"Edit: I'm storing XML in the HashMap in the form of of tag, value"
11053748,2,0,6,java.util.HashMap,You could use a HashMap to store the result.
11056063,1,0,0,java.util.HashMap,ListAdapter from a HashMap.
11058374,1,0,0,java.util.HashMap,iPhone to Android NSMutableDictionary NSArray to HashMap ArrayList.
11058769,2,0,0,java.util.HashMap,"You can  split String into array defining separator like ""jony,john"".split("","") will give you array {""jony"",""john""} sort data in arrays by Arrays.sort(arrayToSort) compare if arrays are equal (contain same values with same order) by Arrays.equals(array1, array2) or by comparing its String representation using Arrays.toString(array) use Maps (like HashMap) to hold pairs [key -> value]  With these you can solve your problem."
11059189,1,0,2,java.util.HashMap,The map inside init() is not initialized with the new HashMap.
11060505,2,0,2,java.util.HashMap,"You could also use a HashMap, which would allow to quickly search for your employees by name."
11061813,2,0,0,java.util.HashMap,"In cases where the hashCode is used for identifying objects (eg in HashMap), it needs to be paired with an implementation of equals() to resolve collisions."
11066153,2,1,5,java.util.HashMap,What a linked hash map does guarantee is that iterating over its contents (be it: the keys or the entries) will occur in the same order in which the elements were inserted in the map; from the documentation:  This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
11066453,2,0,1,java.util.HashMap,I myself never use the vanilla HashMap as in its current impl.
11066453,2,0,1,java.util.HashMap,"Java8 (or 9) perhaps may finally fix HashMap, hopefully Doug Lea will push his impl."
11066668,1,0,0,java.util.HashMap,HashMap key udpate vs double entries.
11068445,1,0,0,java.util.HashMap,"EDIT: Now returns a HashMap with the row number and values separated by ','."
11068511,1,0,2,java.util.HashMap,"Solution #1 To resolve this issue, I was thinking about using a HashMap keyed to the session."
11069786,2,0,0,java.util.HashMap,Do you have some HashMap which stores objects by their names?
11073224,1,0,0,java.util.HashMap,I tried with the HashMap for storing the user and the thread but I cannot get access to the method sendToClient(String message) code. }
11073387,2,0,2,java.util.HashMap,"Store the Client objects in a HashMap, UserName (which will be unique) as the Key, and the thread associated with it as the Value...`"
11075318,2,0,0,java.util.HashMap,Here's an example test against the HashMap class which has no main method.
11080979,1,0,0,java.util.HashMap,"This is my hashmap  :  Map<String,String> unsortMap = new HashMap<String,String>() this map contains values like follows  code."
11081010,2,0,4,java.util.HashMap,Since HashMap is unordered.
11081010,2,0,4,java.util.HashMap,You should use TreeMap instead of HashMap.
11086107,2,1,8,java.util.HashMap,This suggests that it stores its content in an HashMap.
11086107,2,1,8,java.util.HashMap,"(Again, as I do not know ResounrceBundle, this is a hunch) HashMap keys (and values) are unordered as they are stored on such a way that the value can be easily found for a given key."
11086306,2,0,2,java.util.HashMap,"Most likely you are getting back a PropertyResourceBundle, which internally uses a HashMap for storage."
11086307,2,0,7,java.util.HashMap,However to unit test them I just pass in an HashMap instance.
11086913,1,0,0,java.util.HashMap,I was thinking of putting all the tasks in a HashMap and then sort the map by the sequence number.
11088016,2,0,0,java.util.HashMap,"One option would be to create a HashMap that used the value as the key, and a collection of indexes for the value."
11088016,2,0,0,java.util.HashMap,"As you scan the array, if the value isn't in the HashMap, add it w/ a new collection of the index."
11088016,2,0,0,java.util.HashMap,"Once that's complete, iterate the HashMap, any entry who has a value with size() > 1 has duplicates."
11094139,1,0,5,java.util.HashMap,fail fast behaviour of java HashMap.
11094139,1,0,5,java.util.HashMap,I played around with java.util.HashMap to learn what the fail-fast behaviour is.
11094277,2,1,6,java.util.HashMap,"Since 13 is the last key-value pair, when you Iterate through your HashMap and then finally remove the key-value corresponding to stark 13, that stops the Iteration just after the HashMap has been modified, hence, it doesn't iterate anymore."
11094796,1,0,0,java.util.HashMap,HashMap with ArrayList functionality.
11094796,1,0,0,java.util.HashMap,So I want to know how to iterate key value in HashMap?
11096310,1,0,3,java.util.HashMap,I am using the above class in order to have the same instance of the HashMap for all the threads of the web service.
11096310,1,0,3,java.util.HashMap,"Do you think I need the Singleton properties, or could I just use a static HashMap for all the threads?"
11096310,1,0,3,java.util.HashMap,"If I use a static HashMap, is it going to be garbage collected in case no thread is active?"
11096581,2,0,2,java.util.HashMap,"See this blog post: http://weblogs.java.net/blog/jitu/archive/2010/02/19/jax-ws-cdi-java-ee-6-0 (but don't use @SessionScoped, use @Singleton) Some other points:  HashMap isn't thread-safe, you need ConcurrentHashMap."
11096654,2,1,4,java.util.HashMap,"There are a lot of way to do this, but I will give an idea: Use a ConcurrentHashMap instead of a HashMap."
11096462,1,0,0,java.util.HashMap,"The thing is now, I want to get all items from Hygiene header (top) which are Shampoo, Soap, Deodorant, Toothpaste, Brush (and put them in let's say HashMap> for now)."
11098294,2,0,0,java.util.HashMap,If you are using Hashtable or HashMap the order is not guarantied at all.
11103216,1,0,8,java.util.HashMap,"Does somebody know what is the memory overhead of a ConcurrentHashMap (compared to a ""classical"" HashMap) ?"
11105152,2,0,3,java.util.HashMap,"ConcurrentHashMap doesn't use significantly more memory than HashMap, both at construction and at insertion."
11105152,2,0,3,java.util.HashMap,"At Intialization ConcurrentHashMap uses almost the same amount of memory as a HashMap, may be slightly more for couple of extra book-keeping variables and locks."
11105152,2,0,3,java.util.HashMap,"During initialization, ConcurrentHashMap creates 16 Segments to store key-values, each Segment is equivalent to a HashMap."
11105152,2,0,3,java.util.HashMap,"So in essence, ConcurrentHashMap creates 16 small HashMaps equivalent to one HashMap."
11105152,2,0,3,java.util.HashMap,The policy to increase the size is same as the HashMap.
11105152,2,0,3,java.util.HashMap,"Once again, memory overhead is almost same as HashMap."
11105152,2,0,3,java.util.HashMap,"Overall, ConcurrentHashMap doesn't use significantly more memory than HashMap, but its really hard to measure each and every extra byte used by ConcurrentHashMap."
11104620,2,0,0,java.util.HashMap,So those values never get added to the backing HashMap.
11104620,2,0,0,java.util.HashMap,"Properties.getProperty() doesn't find ""material"" in the backing HashMap so it can look in the defaults."
11104620,2,0,0,java.util.HashMap,But the inherited HashMap.get() only looks in the backing HashMap and not in the defaults that you passed into the constructor.
11106777,2,0,0,java.util.HashMap,Take for example a HashMap with a capacity of say 1024.
11106728,2,0,5,java.util.HashMap,"You can substring the last 4 characters: String ext = image.substring(image.length - 4, image.length); and then use a HashMap or some other search implementation to see if it is in your list of approved file extensions."
11107433,1,0,4,java.util.HashMap,Is it Possible to create a Queue for HashMap set?
11107433,1,0,4,java.util.HashMap,"Then each combination and its hash is put into the HashMap<String,String>."
11107433,1,0,4,java.util.HashMap,I have the HashMap but dont know how to 'make' or cast it as a Queue.
11107502,2,0,3,java.util.HashMap,"The LinkedHashMap type is like a combination of a HashMap and a Queue - it stores key/value pairs, but also remembers the order in which they were inserted."
11107815,2,1,3,java.util.HashMap,You should not use a HashMap without handling the thread-safety of your code.
31715490,2,0,0,java.util.HashMap,It should be added in HashMap ?
31715490,2,0,0,java.util.HashMap,"Because before inserting/putting value in HashMap, it internally checks and compare hashCode value of str1, str2."
31715490,2,0,0,java.util.HashMap,"Sun Microsystem wanted the programmer to allow adding 2 different String kind of Values in Hashtable or any other Hash Collections likes (HashSet,HashMap…),that’s the reason hashCode() and equals() were not overridden intentionally in StringBuffer,StringBuilder class."
11112620,2,1,21,java.util.HashMap,"It is not generally useful to override hashCode() for mutable objects, since modifying such an object that is used as a key in a HashMap could cause the stored value to be ""lost."""
11114693,1,0,16,java.util.HashMap,"Then I realized that the HashSet is implemented as a HashMap and in the map, the hashCode of the object is used as the key."
14029460,2,0,0,java.util.HashMap,Create one HashMap and store the key with server address as value.
14029460,2,0,0,java.util.HashMap,"Now next time if the same key needs to get then instead of searching, you will get the server address directly from the HashMap and you needs to fetch value from there only."
11116513,2,1,0,java.util.HashMap,"You should probably assign a new HashMap<String, String>() to sub every time you increment movieIndex."
11119050,2,0,0,java.util.HashMap,But the bigger problem was that clojure lib didn't want to return java.util.HashMap as an object.
11118168,1,0,1,java.util.HashMap,Java HashMap content seems to change without changing it.
11118168,1,0,1,java.util.HashMap,I have a problem concerning a HashMap in Java.
11118168,1,0,1,java.util.HashMap,"Then, i make a copy of the HashMap called gapsFused (i don't know if this has something to do with my problem)."
11118168,1,0,1,java.util.HashMap,"Now comes the interesting part: In the class GenerateGeneLists, i don't do a thing with the remindGaps HashMap."
11118168,1,0,1,java.util.HashMap,"What I tested is, whether remindGaps changes if i manually change gapsFused (the made copy of the first HashMap)."
11118168,1,0,1,java.util.HashMap,"This is not the case, so i don't think that the copying process went wrong (for example only points to the other HashMap or references it)."
11122277,1,0,0,java.util.HashMap,In other hand i have also an HashMap containing one unique list of rules and it's value like this: code.
11122277,1,0,0,java.util.HashMap,I need to compare every rule of every email too see if it exists on the HashMap.
11124432,1,0,0,java.util.HashMap,Each event is a HashMap saved in an ArrayList (of events).
11125494,1,0,1,java.util.HashMap,Why are classes such as ArrayList and HashMap not synchronized?
11125494,1,0,1,java.util.HashMap,"I've done some research, and it seems that the newer counterparts of these objects - ArrayList and HashMap - are basically the same, just not synchonized."
11125672,2,0,1,java.util.HashMap,"I've typically found that I want to do the synchronization myself rather than rely on the built-in stuff (be it Vector/Hashtable, or Collections.synchronizedList(new ArrayList())/Collections.synchronizedMap(new HashMap()))."
11125720,2,0,0,java.util.HashMap,"Since the myMap is being modified, and because the HashMap class is not thread-safe, you have to make it thread-safe."
11129672,2,1,4,java.util.HashMap,To fix this just make your HashMap static.
11129851,2,0,1,java.util.HashMap,"Test test = new Test(); a new HashMap and assign it the value of getHM(), e.g."
11129851,2,0,1,java.util.HashMap,"HashMap<String, Double> hm = test.getHM();  and this would be your class Test code."
11129851,2,0,1,java.util.HashMap,Using the static keyword allows you to retrieve the HashMap without having to create an instance of any object.
11131319,1,0,4,java.util.HashMap,"jsonobject IllegalAccessException can not access a member of class java.util.HashMap with modifiers ""private""."
11132746,1,0,0,java.util.HashMap,How do I make a static recursive method return a HashMap?
11132746,1,0,0,java.util.HashMap,I am in the proces of creating a helper method that will allow me to traverse an XML document and put each element in a data HashMap and then return it.
11132746,1,0,0,java.util.HashMap,but the HashMap returned is empty.
11132794,2,0,0,java.util.HashMap,I would say keep HashMap outside the method and pass it as an argument - code.
11133089,2,0,8,java.util.HashMap,"(You almost certainly didn't want Hashtable in the first place, but HashMap.)"
11133089,2,0,8,java.util.HashMap,"To add from the documentation about ordering of elements in a HashMap:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
11137585,1,0,2,java.util.HashMap,it draws line only for the last pair in the HashMap and the test line that i added.
11138090,1,0,4,java.util.HashMap,"I have the HashMap, if i want to create string array of hashmap.values(), we can create it as code."
11138090,1,0,4,java.util.HashMap,Facing issue in creating dynamic HashMap.
11138124,2,0,16,java.util.HashMap,List<String> myList = new ArrayList<String>(); No matter what the size is of your HashMap you can easily work with your ArrayList.
11139887,2,0,1,java.util.HashMap,HashMap hm => Depends on your program.
11141064,1,0,0,java.util.HashMap,In webservice i have declared it as the above but its not taking the generics hashmap and its picking up List  instead of HashMap[] dataList.
11534127,2,0,0,java.util.HashMap,Use Map rather than HashMap.
11145931,1,0,0,java.util.HashMap,"I want to put an ArrayList<HashMap<String, Object>> into another ArrayList<HashMap<String, Object>>."
11149879,1,0,1,java.util.HashMap,"some processing is done and this is stored into a HashMap<String,Object> , so the HashMap contains code."
11150126,1,0,0,java.util.HashMap,Java - HashMap and HashSet not backed by Object.hashCode()?
11150126,1,0,0,java.util.HashMap,"So I'm trying to write a server, which tracks its clients by a uniquely-generated ID using a HashMap<ClientID,Client>."
11150126,1,0,0,java.util.HashMap,"I assumed this would work because I figured that a HashMap was probably backed by internal use of the hashCode() method inherited from Object, and I designed the ClientID class in a way that would support the necessary lookup operations, assuming that's true."
11150126,1,0,0,java.util.HashMap,"But apparently, it's not true - two keys with the same hashcodes are evidently not considered to be the same key in a HashMap (or HashSet)."
11150216,2,0,2,java.util.HashMap,"HashSet (and HashMap) use the Object.hashCode method to determine which hash bucket the object should go into, but not whether that object is equal to another object also in that bucket."
28787354,2,0,0,java.util.HashMap,"End Code -reason being is HashSet remove method uses HashMap and it identifies keys by hashCode, while AbstarctSet's hashCode is dynamic and depends upon the mutable properties of itself."
11151442,2,1,2,java.util.HashMap,It adds HashTable as a BasicDBObject(HashMap format) into the DB.
11151442,2,1,2,java.util.HashMap,"So, in order to retrieve data you should first get HashTable as a HashMap and then convert it manually to HashTable.Here is the example shows how you can retrieve data as HashTable format.I tried it with the HashTable<String,String>."
11151455,2,0,0,java.util.HashMap,"If you're not to strict on the format, and just want to print the HashMap contents in a human readable way, I would suggest you to use JSon serializing - the output if quite human readable."
11162843,1,0,4,java.util.HashMap,"Mapping a function A->B (many-to-one) is basically what HashMap(A,B) does."
11162843,1,0,4,java.util.HashMap,"HashMap(A,B) has contains(A) and contains(B) both in O(1), so that's not even what I meant, sorry for the confusion."
11162909,2,0,2,java.util.HashMap,"My initial thought is just use a standard map, if you have a perfect hash function you can use a HashMap as a one-to-one mapping."
11163032,2,1,6,java.util.HashMap,"I don't know of an existing class that does O(1) for both containsKey and containsValue, but you can do it by extending HashMap so that on insert, you add each value to an internal HashSet."
11163032,2,1,6,java.util.HashMap,"The standard HashMap has O(1) containsKey, but O(n) containsValue."
11171282,2,0,1,java.util.HashMap,"The problem is, I want arrays with the same contents map to different location in the HashMap if they have different memory locations."
11171282,2,0,1,java.util.HashMap,"If it's the former, you can probably use an IdentityHashMap instead of a normal HashMap."
11171601,2,1,2,java.util.HashMap,"You can use unordered_map in place of HashMap, and replace the Class<C> with type_info."
11172670,1,0,0,java.util.HashMap,How to make a remove method for a HashMap.
11172708,2,1,1,java.util.HashMap,Your EmployeeStore uses a HashMap to store the employees.
11172712,2,0,0,java.util.HashMap,Why not use the remove method of HashMap to solve this issue?
11173336,1,0,1,java.util.HashMap,"I understand why HashMap<K, V> is necessary since the function returns a HashMap with generic types K and V as keys and values respectively."
11173479,2,0,1,java.util.HashMap,"Yes in the example situation - static HashMap<K,V>newInstance(){return new HashMap<>();} is obviously short for static < K extends Object , V extends Object > HashMap<K,V>newInstance()return new HashMap<K,V>();}."
11173479,2,0,1,java.util.HashMap,"class X { HashMap<K,V>newInstance(){return new HashMap<>();}} could be type-inferred as one of the following:  class X <K extends Object , V extends Object> { HashMap<K,V>newInstance(){return new HashMap<>();}} class X <K extends Object > { < V extends Object > HashMap<K,V>newInstance(){return new HashMap<>();}} class X <V extends Object> { < K extends Object > HashMap<K,V>newInstance(){return new HashMap<>();}} class X { <K extends Object , V extends Object> HashMap<K,V>newInstance(){return new HashMap<>();}}  In addition, if type parameters were inferred then what is the order."
11173347,2,0,1,java.util.HashMap,"Because the function newInstance is generic as well, with generic types K and V which are forwarded to HashMap."
11175058,1,0,8,java.util.HashMap,Why does HashMap implement Map if it extends AbstractMap?
11175058,1,0,8,java.util.HashMap,Possible Duplicate: Java.util.HashMap — why HashMap extends AbstractMap and implement Map?
11175058,1,0,8,java.util.HashMap,"In java to implement HashMap<K,V> we need to implement Map<K,V>."
11175058,1,0,8,java.util.HashMap,However when I debugged more in java classes it seems that.... java defines HashMap class as following.
11175058,1,0,8,java.util.HashMap,"public class HashMap<K,V>     extends AbstractMap<K,V>     implements Map<K,V>, Cloneable, Serializable At the same time i saw public abstract class AbstractMap<K,V> implements Map<K,V> it also implements the interface Map<K,V>."
11175058,1,0,8,java.util.HashMap,"If abstract class implements the interface then, what is the reason behind implementing Map<K,V> at HashMap class level?"
11175058,1,0,8,java.util.HashMap,As per my understanding HashMap class have all the methods inherited from AbstractMap which can be overridden by HashMap as per the requirement.
11175170,2,0,3,java.util.HashMap,"The ""implements Map"" is optional and is usually there to help people reading the code that HashMap implements Map's interface methods as well as AbstractMap's abstract methods."
11175196,2,1,0,java.util.HashMap,Thus I believe in order to be explicit about HashMap implementing the methods not implemented by the abstract class it is shown to implement the interface Map whereas it is completely optional to do so because any implementation of the abstract class needs to implement all the methods either in the abstract class or the derived base class..
11175162,2,0,5,java.util.HashMap,You can basically directly see from the code of that single class that HashMap implements the Map interface.
11178243,1,0,5,java.util.HashMap,"If making a specialist dictionary/Map kind of class, should one subclass from Python's dict, or from Java's HashMap or TreeMap, etc.?"
11183078,2,0,1,java.util.HashMap,You have this problem because you use a HashMap for storing your values.
11183078,2,0,1,java.util.HashMap,You can replace your HashMap with a List in order to see all the found paths.
11184041,1,0,4,java.util.HashMap,"Since HashMap and HashSet allows null objects, what would be the hash value of these 'null' objects?"
11184091,2,1,6,java.util.HashMap,The HashMap built into openJDK just puts the null reference into the first bucket in the array that it uses to hold entries code.
11184093,2,0,2,java.util.HashMap,"For HashMap for example, it is just a special case."
11185473,2,0,1,java.util.HashMap,"Also, notice that a HashMap will not use equals for comparison, but rather hashCode, and that a TreeSet, for instance, will use the Comparable interface methods."
11190578,2,0,0,java.util.HashMap,"For Hastable or HashMap to work as expected it's not only a equal hashcode, but also the equals method must return true."
11190578,2,0,0,java.util.HashMap,The Google guava library is planning to offer a RangeSet and Map: guava RangeSet For reasonable small ranges an easy approach would be to specialize HashMap by putting and getting the indivual values of the intervals.
11194131,2,0,2,java.util.HashMap,You could see it (conceptually) as a kind of HashMap<Thread><V> which would always be accessed with Thread.currentThread() as key.
11195027,1,0,11,java.util.HashMap,How would this be handled when adding or retrieving from a HashMap java?
16974971,2,0,3,java.util.HashMap,"In HashMap, keys along with their associative values are stored in a linked list node in the bucket and the keys are essentially compared in hashmap using equals() method not by hashcode."
29943720,2,0,0,java.util.HashMap,"Java's HashMap will grow as needed, but you can give it a starting capacity and load factor if you want."
29943720,2,0,0,java.util.HashMap,Reference : http://www.coderanch.com/t/540275/java/java/objects-hashcode-HashMap-retrieve-objects
11196624,2,1,8,java.util.HashMap,"Looking under the hood of ArrayList (line 111), and HashMap (line 149), we see that the implementation is just a few methods surrounding an array of objects."
11201893,1,0,0,java.util.HashMap,Java HashMap key comparison against string fails.
11201893,1,0,0,java.util.HashMap,I have a HashMap in Java with keys as strings.
11201893,1,0,0,java.util.HashMap,"Such a string is compared using ""=="" against HashMap key all right."
11202344,2,0,0,java.util.HashMap,"The others have stated why your code won't work, however: 1) If you're using a HashMap, you should use map.get(key) to retreive the value, not an interator of entries; that's the whole point of the Hash Map."
11203137,1,0,0,java.util.HashMap,What could be the logic I have to use.I dont want to use any HashMap concept.
11204830,1,0,0,java.util.HashMap,"The same thing happens for extended classes (for example declare HashMap, pass in LinkedHashMap)."
11204830,1,0,0,java.util.HashMap,"At the moment I'm getting around it by changing the method signature to accept a HashMap, but it seems odd that I wouldn't be able to use interfaces (or extended classes) in my MBeans."
11208730,2,0,0,java.util.HashMap,"I think you need a custom HaspMap that will maintain multiple values with same key, So, create an simple class that extends HashMap and put values into it."
11212614,2,0,0,java.util.HashMap,I also recommend reading the beginnings of java.util.map and java.util.HashMap.
11217440,2,0,1,java.util.HashMap,"Its better to follow some object oriented approach to store the results, instead of using loosely coupled arrays or key value pairs in a HashMap."
11224620,2,1,1,java.util.HashMap,Breakdown:   java.awt.image.BufferedImage#156 7.056.378 java.awt.image.BufferedImage#415 6.639.738 sun.misc.Launcher$AppClassLoader#1 3.386.545 class com.ces.core.gui.help.WelcomeTab 627.256 (static image data here) class com.ces.util.resources.Translator 408.146 (basically all text displayed in the  UI) sun.awt.AppContext#1 389.760 java.awt.image.BufferedImage#161 326.120  About half looks like cached images (big background images :)) I left out the int[]/Object[]/HashMap.Entry[] which refers to the same data) If you want to see the breakdown for you example app -> VisualVM -> Monitor -> Heap dump -> Find x biggest objects by retained size.
11221537,1,0,1,java.util.HashMap,HashMap to JSONArray and handling the response in jquery.
11221537,1,0,1,java.util.HashMap,"I have this HashMap< String,Employee>() object and I convert it to JSONArray as below code."
26192349,2,0,0,java.util.HashMap,"null) currently_closest HashMap< word, index >  (replacing word and index by appropriate types, initially all special value e.g."
11228049,2,1,2,java.util.HashMap,"You'll need to fetch the Employee object from the HashMap, then modify the object."
11228122,2,0,0,java.util.HashMap,A HashMap stores references to objects.
11228122,2,0,0,java.util.HashMap,"That means when you read (""get"") an object from a HashMap and make changes to its attributes, the changes will be carried over without you having to write it back to the HashMap."
11228122,2,0,0,java.util.HashMap,Note that you can not change the key of the HashMap that way.
11229041,2,1,1,java.util.HashMap,"or, you can even pass the reqMap as a constructor argument to new HashMap<String, String>(reqMap);"
11230374,2,1,3,java.util.HashMap,"Just by looking at your code, multiple HashMap instances in a List might be a memory overkill, depending on the size of your stored data."
11231073,2,0,1,java.util.HashMap,"HashMap needs to be handled on its synchronization part, as its lacking thread safety ConcurrentHashMap is better at concurrency, ConcurrentHashMap will not lock the Map while one is reading , neither will it lock the entire Map when writing to it."
11230665,2,0,5,java.util.HashMap,HashMap is not thread safe so you need to introduce some form of synchronization if you need to share a HashMap accross threads.
11231654,2,0,2,java.util.HashMap,"WeakHashMap works exactly like HashMap, except that the keys (not the values!)"
11231654,2,0,2,java.util.HashMap,This avoids the pitfalls I described and requires no changes other than the switch from HashMap to a WeakHashMap.
11232053,2,0,0,java.util.HashMap,You can't print HashMap like this code.
11231950,2,0,1,java.util.HashMap,What you were getting was the default toString for a HashMap.
11239911,2,1,3,java.util.HashMap,A good way to reduce loading times is to store data in a HashMap.
11241215,1,0,0,java.util.HashMap,using hashMap as a key object in my HashMap.
11241215,1,0,0,java.util.HashMap,"Eventually, after further reading of the docs, and noting that HashMap does already implement an equals() and hashcode() method I decided I would be good to go with using a HashMap as a key in my code."
11241215,1,0,0,java.util.HashMap,"I've come to testing, and I've build an object of the following type     HashMap< HashMap, Object> it is in fact built from info in a database."
11241215,1,0,0,java.util.HashMap,"Object itself contains a member of type HashMap so I loop over my Object member, and print the result... code."
11241215,1,0,0,java.util.HashMap,"I'm a bit lost, is it a bug in HashMap^?"
11241215,1,0,0,java.util.HashMap,"If I implement my own personal keyObject, that then has a HashMap member, and implment equals() and hashCode() with respect to the values in the HashMap member will I still have the same problem?"
11246661,2,0,0,java.util.HashMap,"Since HashMap has no ordering, the simplest solution is probably best."
11246420,2,0,1,java.util.HashMap,What you can do here is just sort your HashMap and pick the first or last keys to get max or min values.
11246016,2,0,0,java.util.HashMap,"So long as you commit to the map being of type HashMap, you will not do better than iterating over all the key/value pairs in the map, looking for the maximum value."
11247534,2,1,2,java.util.HashMap,EDIT: You cannot store hundreds of thousands of triples in memory using HashMap or similar datastructure.
11246771,1,0,4,java.util.HashMap,Unable to cast a HashMap to a Interface extending Map.
11246812,2,1,10,java.util.HashMap,"HashMap does not implement your interface IParams, so you cannot cast a HashMap to an IParams."
11246812,2,1,10,java.util.HashMap,"IParams and HashMap are ""siblings"", in the sense that both implement or extend Map."
11246812,2,1,10,java.util.HashMap,But that doesn't mean you can treat a HashMap as if it is an IParams.
11246812,2,1,10,java.util.HashMap,"Ofcourse, someMethod doesn't exist in HashMap."
11246812,2,1,10,java.util.HashMap,"If casting a HashMap to IParams would work, what would you expect to happen if you'd attempt to call the method?"
11246812,2,1,10,java.util.HashMap,"With regard to your comment:  The intention is to create an interface which hides the generics, and also to hold (not shown in the example) map key string definitions  What you could do is create a class that implements IParams and extends HashMap: code."
11246828,2,0,3,java.util.HashMap,"HashMap implemented Map interface but not implemented your Interface IParams even though you interface derived from Map, you can not cast it to IParams as it is not a type of IParams"
11248592,1,0,0,java.util.HashMap,But when i pass the same in a HashMap as Parameter it returns only 1 page with the first computer number.
11249224,1,0,0,java.util.HashMap,"When we add objects to a collection like HashSet or HashMap, how the the objects internally stored?"
11249254,2,0,6,java.util.HashMap,"HashMap does allow for both null keys and values, for example."
11254591,2,1,4,java.util.HashMap,"You override equals - you should never override equals unless you also override hashCode - otherwise you'll have tons of problems if you put the objects of this class into a HashSet, HashMap or other collection which uses hash."
11255471,1,0,6,java.util.HashMap,Why does java native HashMap in clojure run slowly?
11257465,2,0,0,java.util.HashMap,You can also increase Java code speed  with declaring HashMap size in declaration  code.
11255966,2,0,0,java.util.HashMap,"Use Map to map from String to App: Map<String, App> for all single entitlement apps (you can use HashMap or TreeMap - your choice)."
11259027,2,0,1,java.util.HashMap,According to this thread : Java: iterate through HashMap you have to use HashMap.entrySet() method.
11259027,2,0,1,java.util.HashMap,You can take a look here too : http://developer.android.com/reference/java/util/HashMap.html
11267000,2,0,0,java.util.HashMap,"I would simply use a HashMap<Code, CodeMark> to eliminate duplicate codes, then put all the values inside a List<CodeMark>, and sort this list by mark in descending order."
11267067,2,0,0,java.util.HashMap,"You can use HashMap<Integer,Integer> simply and then sort that according to their values: code."
11268762,1,0,2,java.util.HashMap,"And there can be any number of these children, which I want to read into a HashMap of ""name"", ""value""."
11271722,1,0,1,java.util.HashMap,"100% Accurate key,value HashMap."
11271767,2,0,3,java.util.HashMap,"HashMap will be ""Always Accurate""."
11274882,2,0,1,java.util.HashMap,"The algorithm shouldn't be tricky: Go through your array, split on "","" for each String, and put it in the HashMap you describe."
11274868,1,0,0,java.util.HashMap,Using HashMap.
11274868,1,0,0,java.util.HashMap,I am doing this using a HashMap.
11275722,2,0,2,java.util.HashMap,You should use HashMap or Map for faster search capability!
11276255,1,0,0,java.util.HashMap,Search Method on a HashMap.
11277236,2,0,2,java.util.HashMap,You should store your shelves in a HashMap (the key should be the name of the shelve).
11277246,2,0,1,java.util.HashMap,Using a HashMap instead of a Set would make looking for a named shelf trivial: code.
11281166,1,0,5,java.util.HashMap,Using HashMap with custom key.
11281166,1,0,5,java.util.HashMap,"Quick Question: If I want to use HashMap with a custom class as the key, must I override the hashCode function?"
11281179,2,0,3,java.util.HashMap,"If you override equals but not hashCode, HashMap behavior will be undefined (read: it won't make any sense at all, and will be totally corrupted)."
11281191,2,0,2,java.util.HashMap,Also make sure to implement equals(): some classes like ArrayList will only use equals while others like HashMap will check on both hashCode() and equals().
11284626,1,0,0,java.util.HashMap,And in my implementation I have a few ArrayLists and HashMap to track which participants has committed or aborted transaction.
11284626,1,0,0,java.util.HashMap,"Every time I do join/commit/abort operations, my ArrayLists and HashMap are empty (no previous participants) and HashCode of my TransactionManager is always different."
11285092,1,0,1,java.util.HashMap,I am thinking of loading the table into a HashMap but I am not sure how to define the MapKey.
11285150,2,0,2,java.util.HashMap,"Then define a Map as follows (not sure what type the ""entity"" is, so we will just pretend there is a class called Entity: Map<Key, Entity> lookup = new HashMap<Key, Entity>();"
11286967,1,0,2,java.util.HashMap,about HashMap.get(key) function.
11286967,1,0,2,java.util.HashMap,"If I pull out an object out of my HashMap, and then modify it."
11286967,1,0,2,java.util.HashMap,Will it modify inside the HashMap also?
11286967,1,0,2,java.util.HashMap,"Or, do I need to set it back again to the HashMap after modifying it?"
11292247,1,0,0,java.util.HashMap,"However,recently I understood that HashMap's may  have been a better choice."
11292290,2,0,8,java.util.HashMap,"From the documentation:  http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html For HashMap:  This implementation provides constant-time performance for the basic   operations (get and put), assuming the hash function disperses the   elements properly among the buckets."
11292290,2,0,8,java.util.HashMap,"Iteration over collection views   requires time proportional to the ""capacity"" of the HashMap instance   (the number of buckets) plus its size (the number of key-value   mappings)."
11292290,2,0,8,java.util.HashMap,From the documentation: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
11292311,2,0,1,java.util.HashMap,"As for HashMap, it will be O(1) for all three."
11292683,1,0,3,java.util.HashMap,Do I need to worry about concurrent access and use the ConcurrentHashMap instead of HashMap in this case?
11292776,2,0,2,java.util.HashMap,It is safe to pass the HashMap if all the threads are reading it.
11294187,1,0,0,java.util.HashMap,SearchByEmail method for EmployeeStore (HashMap).
11294568,1,0,0,java.util.HashMap,I have a map like HashMap in a factory where I would add all the concrete implementations with a key of my choice.
11305008,2,0,0,java.util.HashMap,Where MyFactory is a factory that has a HashMap as internal field  This way the programmer that extends MyAbstractClass is forced to provide a CTOR that by calling to the super class CTOR will add the object of the class to the factory.
11296718,2,0,0,java.util.HashMap,"In the case of maps, assuming map1 and map2 are of type HashMap<KeyType,ValueType>, if you want one map to be a shallow copy of another (meaning, a distinct HashMap object but with shared keys and values), you do this: code."
11296718,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
11309873,2,0,1,java.util.HashMap,"Yes, java.util.HashMap will handle hash collisions, If you look at the source code of HashMap, it stores each value in a LinkedList."
11309550,2,0,4,java.util.HashMap,"Internally, a HashMap stores the key/value pairs in buckets that are defined based on the hashcode of the key (hence the name: hashmap)."
11311912,2,1,1,java.util.HashMap,You can use the put method of java's HashMap for this as well.
11311912,2,1,1,java.util.HashMap,"From the API for HashMap's put method:  If the map previously contained a mapping for this key, the old value is replaced."
11312553,1,0,3,java.util.HashMap,Java Project: Make HashMap (including Load-Store) Performance Better.
11312553,1,0,3,java.util.HashMap,"For 100 millions, what we did is following: 1) Building a HashMap using parallel array whose key are URL's one part (represented as LONG) and values are URL's other part (represented as INT) - key can have multiple values."
11312553,1,0,3,java.util.HashMap,2) Then search the HashMap to find how many time URL accessed.
11413957,2,0,0,java.util.HashMap,"If your application has to run locally without the usage of any external computing power, there is no solution which can be more performant then direct-memory access: the only data structure which can provides you better performances then an HashMap is an array, where the access at every element is O(1)."
11413957,2,0,0,java.util.HashMap,You can refer to java.util.HashMap javadoc but also to Wikipedia  http://en.wikipedia.org/wiki/Hash_table to understand the following:  How expensive is it to compute it?
11413957,2,0,0,java.util.HashMap,How often will you need to resize your HashMap before you get to have it full contained all data?
11413957,2,0,0,java.util.HashMap,"If your performance degradates when building your HashMap, which I actually believe it's a ConcurrentHashMap (if you build it parallely it has to be thread safe), you might want to investigate why it happens."
11413957,2,0,0,java.util.HashMap,"A simple, but easy beginning will be to replace your HashMap with a TreeMap, whose performances are a deterministic function of its size, and compare the two performances."
11313228,1,0,0,java.util.HashMap,Comparing keys of a multi-dimensional HashMap.
11313228,1,0,0,java.util.HashMap,"I have a Map.Entry<String,HashMap<String, Integer>> object called chromosome, where each value is called a marker."
11313228,1,0,0,java.util.HashMap,"I also have a custom object called IndividualList individuals which extends HashMap<Integer,Individual> where each Individual has a method Genotype getGenotype() which returns the non-static variable genotype."
11313228,1,0,0,java.util.HashMap,"Genotype extends HashMap<String,String[]> I want to look at each the key for all my marker objects and check whether each of them are present as a key in any Individual's genotype."
11313228,1,0,0,java.util.HashMap,"The problem I am facing is which Individual to test, as because it is a HashMap I cannot simply just arbitrarily choose the first element, so what I am doing at the moment is taking the values of individuals as a Collection then converting these to an ArrayList<Individual> then taking the first of these elements (which is just an arbitrary one as HashMap is unordered) to get an Individual then taking this Individual's genotype and comparing marker.getKey() with the keys in the genotype."
11313418,2,1,0,java.util.HashMap,Why can you not arbitrarily choose the first element of a HashMap?
11314675,2,0,3,java.util.HashMap,"Your code is really difficult to read clearly, but I suspect you're just trying to set bits in the BitSet that are keys from your HashMap?"
11317040,2,0,0,java.util.HashMap,"You can use a normal java.util.HashMap<String, Logger> along with a synchronized block in the same way you're using the log manager."
11322545,2,0,1,java.util.HashMap,"Store the package name of the class and its name and its scope Store a HashMap of all declared variables, their values and their scope Discover the methods in the source file and store their names, in + out parameters and scope  You can do a lot more too and to detect these constructs you'd have to write your own (or find something on the net) parser and use regular expressions to detect these."
11326694,2,0,0,java.util.HashMap,"quite obviously, as new HashMap() is not known to retain data from a previous instance code."
11328000,2,0,1,java.util.HashMap,use a java.util.Map implementation (HashMap).
11328783,2,0,0,java.util.HashMap,Create a Class and put a code which will read this file from within jar and create a Map (or HashMap)of these name value pair.
11328783,2,0,0,java.util.HashMap,Put this code in a static block so that the HashMap is initialized the moment class is loaded.
11328025,2,0,2,java.util.HashMap,"You can add as many accessors (static or not, they could for example use a static HashMap to find by message) as you need."
11329941,1,0,2,java.util.HashMap,I am using a HashMap to cache some important data when my application starts.
11330079,2,0,2,java.util.HashMap,but doing it for something as complex as a HashMap with content (the real size  size is dependent of its history and hash factor and the hascode of all its elements modulo the hash factor) is near impossible.
11330019,2,0,6,java.util.HashMap,"There is a good tool for this purpose: ClassMexer You can estimate the memory of the HashMap, including referenced objects by: long noBytes = MemoryUtil.deepMemoryUsageOf(myCacheMap);"
11331690,2,0,0,java.util.HashMap,What you can do is use a BigInteger to encode the 400 dimensions as an integer and use this as a key to a HashMap or TreeMap.
11333620,2,1,4,java.util.HashMap,The best Java equivalent is a Map implementation specifically HashMap.
11339798,2,0,0,java.util.HashMap,"Another way is to use words as key in a Map: HashMap<(String) word ,Set<(String) codeLanguage>> and, as Peter Lawrey sed, in this same Map code."
11340505,1,0,2,java.util.HashMap,No i have to convert it into HashMap object .
11345172,2,0,2,java.util.HashMap,"That is to say that, if you have a final HashMap<String,String> a, you will only be able to set it once, and you won't be able to do this.a=new HashMap<String,String>(); again, but nothing keeps you from doing this.a.put(""a"",""b""),s since that doesn't modify the reference, only the content of the object."
11346859,2,0,0,java.util.HashMap,Maybe you should switch from using a Hashtable and use a HashMap
11347541,1,0,1,java.util.HashMap,HashMap keySet changes not reflected in map.
11347541,1,0,1,java.util.HashMap,"I am trying to iterate on HashMap and rewrite some of the elements to the other map, but I have following problem: code."
11347708,2,0,0,java.util.HashMap,"And so when you call anotherMap.put(i, map.get(i)); you are really calling anotherMap.put(i, null); The purpose of the HashMap is to perform lookups in O(1) time."
11347708,2,0,0,java.util.HashMap,"Your suggestion would require a lazy HashMap, but that would take O(n) time and defeat the purpose."
11350058,2,1,5,java.util.HashMap,You can use JSTL foreach to iterate over the HashMap.
11350020,1,0,1,java.util.HashMap,"Vocabulary which uses HashMap<Language, ArrayList<String>> meanings to save all meanings in all languages (so e.g."
11350300,1,0,1,java.util.HashMap,Missing items from synchronized HashMap in a threaded environment.
11352439,2,0,11,java.util.HashMap,"And finally, if your HashMap is a static field of your class, you can perform the initialization inside a static block: code."
11353790,1,0,6,java.util.HashMap,What I need is some kind of magic serializer for *HashMap*s in Jersey and I cannot seem to interpret the docs well enough to understand how to write one or work around this problem while still maintaining the flexibility of my interface.
11354654,1,0,1,java.util.HashMap,Instead I have a simple HashMap that of key/value pairs that I want to convert into a row in a DB table and I want to return database queries results as lists of maps.
11354654,1,0,1,java.util.HashMap,"I've looked a little bit at DataNucleus and iBatis, but couldn't seem to find a HashMap type mode."
11355465,2,0,2,java.util.HashMap,Why not just use spring's JDBC features (or straight jdbc even) and write a RowMapper that transforms any row into a HashMap?
11361548,2,0,0,java.util.HashMap,"Printers and Clients are unique, so take a Set(no duplicate Id) or HashMap and manage something like this : code."
11368291,1,0,0,java.util.HashMap,Different hashcode but HashMap not working.
11368291,1,0,0,java.util.HashMap,I have a class myDemoClass to store name and a class to put in a HashMap.
11368291,1,0,0,java.util.HashMap,"While experimenting with overriding hashCode() method, the HashMap is returning null even if hashcodes are different."
11368580,2,0,1,java.util.HashMap,"Since the objects aren't keeping track of their personal hash code and refer to the same static field every time, your objects never return the same hash code, and your HashMap will always return a null value."
11376075,2,1,1,java.util.HashMap,"I eventually found a workaround, which allows me to get a reference of the @Stateful bean: I created a @Named @Singleton @Startup bean SessionController which holds a local HashMap<String, UserSession> sessionMap with the references of my @Stateful beans: code. }"
12051674,2,1,2,java.util.HashMap,"I suggest you try to use a HashMap, if you provide a good hash function for Vector3 the lookup time will be nearly the same for any amount of chunks (theoretically O(1), but that's just the best case ... )."
11378016,2,1,9,java.util.HashMap,"Just because two objects have the same hash code doesn't mean HashMap assumes they're the same -- indeed, if that was the case, that would be really, really bad."
11378016,2,1,9,java.util.HashMap,"If you want two A objects to be treated as equal by HashMap, you must override equals(Object) in A to define one A as equal to another."
11380743,1,0,0,java.util.HashMap,"The Framework has a routing mechanism that automatically sets a number Request attributes, which are then available in the JSPs (One of the attributes being a ""Model"" of the requested resource; which is basically just a HashMap)."
11380743,1,0,0,java.util.HashMap,"A few things to note:   Within the system im working in, the Model (the data pull from the database) is provided but the Framework (the previously mentioned HashMap); I could create my own Model wrappers around this data, but it's probably unnecessary."
11382140,2,0,1,java.util.HashMap,"You are using a generic type (Map<K, V> and HashMap<K, V>) but K isn't declared or known as a type."
11384192,2,0,1,java.util.HashMap,This is O(n) Actually duplicates are not allowed in HashSet so you can have a HashMap with key as the number and value as count.
11384192,2,0,1,java.util.HashMap,Everytime a number of B is found in HashMap decrement count.
11384192,2,0,1,java.util.HashMap,If in the end HashMap is empty then they are equal.
11384306,1,0,0,java.util.HashMap,"For example, I tried to create a sample class HashEx which statically returns same hash value (100) for all the instances of the class and then tried to use HashEx in HashSet/HashMap with different operations: code."
11384357,2,1,0,java.util.HashMap,"But when you get a large number of those objects in your HashSet (or as keys in a HashMap), then you will start seeing very poor performance."
11390133,1,0,2,java.util.HashMap,Memory consumed by EHCache same as HashMap.
11390133,1,0,2,java.util.HashMap,"If I put a 500,000 entries into a HashMap, the memory consumed is about 114MB."
11390133,1,0,2,java.util.HashMap,Here are the programs I running.. HashMap Program.. code.
11390133,1,0,2,java.util.HashMap,The bottom line is EhCahe is using the same amount of memory as a HashMap!
11390326,1,0,1,java.util.HashMap,HashMap in Java does not work?
11390478,2,1,7,java.util.HashMap,"If that's the case, then the key is in the wrong ""bucket"" in the HashMap and the get() method (or containsKey() method) will never find it (but iterating over the keys and/or entries will find it!)."
11390478,2,1,7,java.util.HashMap,"The following code would ""break"" the HashMap: code."
11392630,1,0,0,java.util.HashMap,"A hash based collection i.e HashMap looks appropriate, I would be accessing it concurrently and can think of following scenario's  A slave requesting job file."
11396398,2,0,1,java.util.HashMap,"Use Map<String, Double> map = new HashMap<String, Double>();  Thanks to autoboxing you can use it like  code."
11398569,1,0,0,java.util.HashMap,The Collection is in fact a HashMap.values().
11398569,1,0,0,java.util.HashMap,I have a hunch that it's because a HashMap is not synchronized or something of that sort.
11398762,1,0,2,java.util.HashMap,Custom HashMap Code Issue.
11398762,1,0,2,java.util.HashMap,"I have following code, where I used HashMap (using two parallel arrays) for storing key-value pairs (key can have multiple values)."
11403479,2,1,2,java.util.HashMap,"So even if it was all heap and stored only this custom HashMap, it will not fit."
11402483,1,0,0,java.util.HashMap,I'm working with a HashMap and I'm trying to reference it from a different module.
11402879,2,1,4,java.util.HashMap,"Rather than executing  DEFINE MYSCHEMA='TESTSCHEMA', your application would need to maintain, say, a HashMap that maps a variable like myschema to a value like TESTSCHEMA."
11402879,2,1,4,java.util.HashMap,"Your application would then have to parse the individual SQL statements looking for text like &&MYSCHEMA, replace that with the value from its local HashMap, and then send the resulting SQL string to the database server."
11404828,1,0,1,java.util.HashMap,Powermockito: argument matching for HashMap.
11405361,2,1,2,java.util.HashMap,which should match any instance of the class you specify (which is HashMap in this example)
11405983,2,1,1,java.util.HashMap,"If being human readable is not a requirement, you could gasp resort to just making sure your data implements the Serializable interface and serializing the HashMap using an ObjectOutputStream."
11405983,2,1,1,java.util.HashMap,"Let's assume you have a HashMap, you could write it like this: code."
11407924,2,0,3,java.util.HashMap,Similary each state will be associated with its cities using HashMap.
11409934,2,0,0,java.util.HashMap,"The trouble is the compiled bytecode doesn't have any generic information because of type erasure problem (which is there to ensure backwards compatibility) so, as far as the JVM is concerned, a HashMap<anything,anything> extends Map<anythingelse,anythingelse>."
11422970,2,0,0,java.util.HashMap,"For performance improvement, I would cache each word locally in a HashMap once it's been looked up."
11412480,1,0,0,java.util.HashMap,However I should note that both HashMap and TreeMap point to the same HashCode() method in the AbstractMap parent.
11412480,1,0,0,java.util.HashMap,"My first thought was to convert my TreeMap to a HashMap, but this seemed a bit soppy!"
11412480,1,0,0,java.util.HashMap,"For me the hashcode should be different as the key values are different, I can't find details on the implementation difference of the hashCode() method between HashMap and TreeMap."
11412480,1,0,0,java.util.HashMap,changing the Keys only to HashMap  doesn't stop the ClassCastException error.
11412480,1,0,0,java.util.HashMap,Changing all the maps to a HashMap does.
11412480,1,0,0,java.util.HashMap,"The section where I get the hashCode of the first and second map objects always produces the same output (no matter if I use a Hash or Tree map here) However the if(english.ContainsKey(second)) doesn't print any message when HashMaps are used, so there is obviously something in the HashMap implementation that is different for the compareTo() method."
11412480,1,0,0,java.util.HashMap,"From my understanding I should be able to do a drop in replacement of TreeMap for HashMap, or have I stumbled upon a fringe scenario?"
11412811,2,0,2,java.util.HashMap,Your TreeMap is not Comparable so you can't add it to a SortedMap and its not immutable so you can't add it to a HashMap.
11416182,2,0,0,java.util.HashMap,"The best thing to manage  your IDs : use a HashMap<Integer,Student>."
11418761,2,0,1,java.util.HashMap,Enums and HashMap could let you do this:  code.
11419547,2,0,1,java.util.HashMap,"If you want the quickest among the Map, then go for HashMap."
11419375,2,1,0,java.util.HashMap,"Use Composition.... A a = A.getInstance(); // I am assuming getInstance() is the method to return the Singleton reference of class A. a.myHash.getKey(); // Call any method you want.... B b = new B(); // As B is not singleton, we can use ""new"" Now fill the table in B with the data in HashMap"
11420920,1,0,4,java.util.HashMap,Search a HashMap in an ArrayList of HashMap.
11420920,1,0,4,java.util.HashMap,I have an ArrayList of HashMap.
11420920,1,0,4,java.util.HashMap,I want to search a HashMap  in it but unable to find a way to achieve this.
14019148,2,0,1,java.util.HashMap,Try below improved code for searching the key in a list of HashMap.
17211260,2,0,0,java.util.HashMap,"if you have an ArrayList like this one: ArrayList<HashMap<String, String>> and you want to compare one of the values inside the HashMap try this code."
11421063,2,0,2,java.util.HashMap,According to the HashMap#put documentation:  Associates the specified value with the specified key in this map.
11421063,2,0,2,java.util.HashMap,This also applies to LinkedHashMap because it inherits the put method from HashMap.
11422165,1,0,0,java.util.HashMap,"Now, in one of the methods, I am defining a HashMap like this:  code."
11428647,2,0,0,java.util.HashMap,"Since your Map is a HashMap, It is able to tell if it contains a key in constant time O(1), so I guess a straight answer to your question would be: Yes, there are other -naive- ways for checking if a key is already in your map, like looping over the keySet and comparing, however what you are doing is the best option."
11428647,2,0,0,java.util.HashMap,"The following is from the HashMap documentation for Java6  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
11428647,2,0,0,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
11429001,1,0,2,java.util.HashMap,The List type is <ArrayList<ArrayList<HashMap>>> Eg.
11430670,1,0,2,java.util.HashMap,"To save the state of the checkboxes I'm using a HashMap<String, Boolean>, String continig the name of the directory and boolean - the checkbox state."
11431686,2,1,6,java.util.HashMap,"But here are some examples:  LinkedList - class ListItr implements ListIterator<E> ArrayList - class ListItr extends Itr implements ListIterator<E> HashSet - actually backed by HashMap.keySet()  Becasue Iterator is an interface, you can do fancy things with it, like wrapping and decorating it, without paying attention to the actual implementation."
11432107,1,0,0,java.util.HashMap,I need to pass a HashMap object from backing bean (JSF) to JavaScript and iterate it.
11432107,1,0,0,java.util.HashMap,"or, How can I convert my HashMap object to normal JavaScript object that can be iterated with jQuery?"
11439974,2,0,0,java.util.HashMap,"I would think something like a Map<String, Double> flowers = new HashMap<String, Double>();, and then could quite easily check with flowers.get(index) to get it's value."
11439974,2,0,0,java.util.HashMap,Documentation for HashMap The Map page in the tutorial
11440024,2,0,0,java.util.HashMap,You probably may want to use a map instead of 2 arrays: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html With a map you can access the flower price using the flower name as the key.
11440024,2,0,0,java.util.HashMap,"Just declare a Map<String, Double> prices = new HashMap<String, Double>();"
11444628,1,0,0,java.util.HashMap,If I use HashMap> in Java.
11444628,1,0,0,java.util.HashMap,"I use HashMap<String, ArrayList<String>> in Java."
11444628,1,0,0,java.util.HashMap,"I want to enter value [1, [""stack"", ""flow""]], [2, ""over""] in HashMap."
11444628,1,0,0,java.util.HashMap,"So, HashMap was overwrite."
11447492,1,0,0,java.util.HashMap,Store Cursor in HashMap: is it good to store cursor in hashmap further if needed in that app.
11448514,2,0,1,java.util.HashMap,"What I would suggest , Make your class Comparable by implementing Comparable  interface.Then in comparetTo() based on name and time  compare them if object time is recent return 1 else 0(if equal) or -1 .Once you got this functionality you can extend HashMap  class and override the put method like."
11448285,2,0,4,java.util.HashMap,Extend HashMap and override put method to put only if new object is more recent than the existing one.
11448285,2,0,4,java.util.HashMap,"Or, you can create your own dedicated container which will be backed by a HashMap, just like some implementations of Stack are backed by LinkedList  This is a mock code: code."
11448818,2,1,1,java.util.HashMap,"However, since a Set is not supposed to be accessed to ""get back an element after removal"", you will need to back your set with an HashMap: code."
11460622,2,0,1,java.util.HashMap,"When I needed to put a subreport inside my main report I just passed the jasper file as a parameter inside my HashMap, like this: code."
11457403,1,0,1,java.util.HashMap,"Despite the mock, the call to methodA() enters it, and since I am passing any(HashMap.class), a null value is passed."
11458755,2,0,0,java.util.HashMap,"Your createChildList needs to return a List<ArrayList<HashMap<String, String>>>."
11463443,1,0,0,java.util.HashMap,"HashMap, maybe atomic when get, and the key is guaranteed already put completely."
11463466,2,0,2,java.util.HashMap,"No, the HashMap class is not thread safe."
11466362,2,0,0,java.util.HashMap,"You can build a dependency grap this way, so you can have a HashMap where kewords are keys, and values are Sets of sentences referencing that keyword."
11468648,2,1,8,java.util.HashMap,"More information about these parameters can be found in the documentation for HashMap:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
11468648,2,1,8,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
11468648,2,1,8,java.util.HashMap,An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
11468648,2,1,8,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
11469046,2,0,0,java.util.HashMap,Here is an implementation that just wraps a normal HashMap and delegates the method calls to it.
11472412,2,0,1,java.util.HashMap,If your cache class has private HashMap and you have three methods and all are public synchronized and not static and if you don't have any other public instance variable then i think your cache is thread-safe.
11474905,2,1,4,java.util.HashMap,Use a HashMap with a durable key.
11474905,2,1,4,java.util.HashMap,"Make sure anyone deleting this object (and thereby removing it from the HashMap) does so only when this fragment does not exist, or notifies this fragment so it knows how to handle this scenario."
11483152,1,0,1,java.util.HashMap,The context can be a simple 'HashMap'.
11483152,1,0,1,java.util.HashMap,"pros:   flexibility (easily extendable further (HashMap))  cons:  typeless values are casted all over the place   It is also a viable approach to declare everything as a field in the 'context', but this way the easily extendability is sacrificed (i can live with that)  But...the situation is a bit more complicated because these transformator elements are scattered all over the application's packages: code."
11483152,1,0,1,java.util.HashMap,"So there are parts where pkg_A does some work, then there are places where pkg_B parts process the context --> that's why i would like to mix the two methods  I've come up with the following ideas: option 1  say i've named the basic HashMap containing context E create subclasses of E where some entries are presented in field for which  getters/setters are availibe in every processing function cast the incoming argument into the required class type  pro:  relatively easy to implement  con:  should syncronize the HashMap content w/ the field more than one way to access a value can cause confusion  option 2  create some 'tool' classes which do the casting  pro:  no runtime casting for a subclass at every function  con:  access is always translated down to HashMap access there is a casting every time a field is read  option 3 i'm entirely wrong, i should address the problem in a different way UPDATE: with ""how to promote a context class?"""
11483772,1,0,2,java.util.HashMap,Cannot cast HashMap returned object to Arraylist.
11484567,2,1,2,java.util.HashMap,"According to ws-xmlrpc XMLRPC Data-Types a HashMap<String, ArrayList<String>>is not a directly supported parameter type."
11484567,2,1,2,java.util.HashMap,"From the exception stacktrace you posted one can see that a HashMap<String, Object> made it along the wire to your XMLRPC server."
11484567,2,1,2,java.util.HashMap,"Doing that, a exception would occur if the parameter is not a HashMap at least."
11484567,2,1,2,java.util.HashMap,"There is a invisible type check at runtime when retrieving and assigning an element from HashMap<String, ArrayList<String>>, and that check fails with the exception you have."
11484675,2,0,1,java.util.HashMap,"Create a class SetOfIntegers Implement a hashCode() method that will generate reasonably unique hash values  Use HashMap to store your elements like put(hashValue,instance) Use containsKey(hashValue) to check if the same hashValue already present  This way you will avoid sorting and conversion/formatting of your sets."
11484726,2,0,2,java.util.HashMap,"Just use a java.util.BitSet for each set, adding integers to the set with the set(int bitIndex) method, you don't have to sort anything, and check a HashMap for already existing BitSet before adding a new BitSet to it, it will be really very fast."
11484488,1,0,3,java.util.HashMap,"I want to store an Integer or a Double, both extending from Number, into a HashMap, and retrieve them without casting."
11487618,1,0,0,java.util.HashMap,into an ArrayList with HashMap parameter something like  ArrayList < HashMap < ?>> The class I'm using has the following method /** Function to read all mp3 files from sdcard and store the details in ArrayList * */ code.
11487849,2,0,0,java.util.HashMap,Why use HashMap.
11487939,2,0,0,java.util.HashMap,Despite using the HashMap like this try implementing this for your code to be much more concrete to future changes.
11487939,2,0,0,java.util.HashMap,"And you then have this object: ArrayList<HashMap<int, Song>>; In that way you have all the song details in one object, you are making different playlists the way you want and in HashMap you have a ID for each song so you can access them easily."
11490240,1,0,11,java.util.HashMap,But for the other objects like a HashMap and LinkedList I am not sure what to do.
11490313,2,0,1,java.util.HashMap,"And for LinkedList and HashMap, I don't think there is a practical alternative that will avoid any allocation."
11490318,2,1,13,java.util.HashMap,For HashMap you can grab the underlying sets using entrySet() and then call toArray(Object[]) and pass a pre-allocated array big enough to hold all the values.
11496054,1,0,1,java.util.HashMap,"This creates the ImageObject from the given file, and stores it into a HashMap with the given key."
11496054,1,0,1,java.util.HashMap,): I thought about creating another HashMap that reads some kind of configFile and maps the in-code-resource-names to the resource-paths in a HashMap.
11496054,1,0,1,java.util.HashMap,This could result in one giant String to String HashMap which I'd have to store in the ResourceManager aswell.
11496139,2,1,3,java.util.HashMap,"Instead of populating a HashMap, though, consider using ResourceBundle or PropertyResourceBundle."
11498129,2,0,3,java.util.HashMap,If you don't want a HashMap as the super class then change it to whatever concrete class you want.
11503049,1,0,0,java.util.HashMap,For the first point where the index of the array is the Achievement ID and the HashMap contains the Statistic/TargetValue pairs.
11503980,1,0,1,java.util.HashMap,What's the best approach to parcel/unparcel a HashMap of custom objects?
11503980,1,0,1,java.util.HashMap,I have an Event class that defines a private HashMap like this: code.
11503980,1,0,1,java.util.HashMap,This HashMap can contain any object instance which is referenced by a key.
11503980,1,0,1,java.util.HashMap,But I don't know what Object subclasses the HashMap will have...
11503980,1,0,1,java.util.HashMap,The problem is that I cannot get a way to obtain the byte[] representing the object since it's inside the HashMap.
11503980,1,0,1,java.util.HashMap,Pass some extra information so I can know what classes are on the HashMap.
11504116,2,0,0,java.util.HashMap,"By doing that you will not really utilize the typesafety that java provides for you, and you will also get extra overhead from the HashMap."
11504632,1,0,1,java.util.HashMap,"I have situation where there is a HashMap as Map<Integer,ArrayList> key = new HashMap<Integer,ArrayList>(); The array list has [rankOfCard,suitOfCard] I want to sort this Map in such a way that If the value is  code."
11505860,2,1,10,java.util.HashMap,You only need to keep in mind that a HashMap is by nature unordered.
11507426,1,0,1,java.util.HashMap,"I've a requirement where, based on the content of a HashMap<String, String>, I've to add/remove columns from my table."
11508305,2,1,1,java.util.HashMap,"How do I easily get the value at say row 3, column 2 from a HashMap?"
11509732,1,0,2,java.util.HashMap,"I store the points in a SpareArray (basically the same than a HashMap, but faster)."
11510863,1,0,2,java.util.HashMap,"I was hoping to take however many pairs of EditTexts, and push it into a key/value HashMap or something."
11511495,2,0,2,java.util.HashMap,"If so, java.util.HashMap Do you need a lookup and an ordered iteration?"
11513979,2,0,0,java.util.HashMap,"Now, note a tonne of work is done for you if you change this:     private Products stock = new Products();     private Products basket = new Products(); To this:     private Map stock = new HashMap();     private Map basket = new HashMap(); In this case your call to increment-or-add would look like this: code."
11517748,1,0,5,java.util.HashMap,This is what I am trying to achieve:-  My structure(read as HashMap/ArrayList) contains data that needs to be passed to the report so that the same is shown in report.
11517748,1,0,5,java.util.HashMap,I am unable to pass the collection(read as HashMap/ArrayList) to subreport to populate it with the data from my code.
11519118,2,1,1,java.util.HashMap,Note that HashMap is not immutable like NSDictionary.
11519883,1,0,0,java.util.HashMap,"But if the function getOrCreateDatabase accessed the second time, the internal databases HashMap is still empty."
11526167,1,0,0,java.util.HashMap,"Except, here in Eclipse, HashMap is red underlined with the error ""Cannot instantiate the type HashMap"" Where I try to add my panes and strings as keys and values, like so: code."
11526293,2,1,1,java.util.HashMap,You can't create a HashMap using generics wild cards.
11526293,2,1,1,java.util.HashMap,"However, the actual instance which you create when calling new HashMap<...>() needs to know whether any JPanel or only MyPanel instances are allowed, hence you need to use new HashMap<JPanel, String>() here."
11529531,2,1,4,java.util.HashMap,";) You could pass a collection of entries (like a HashMap<String, String>) and iterate over them to populate your aliases... like this: code."
11528659,1,0,0,java.util.HashMap,As the only thing I have to know about objects stored in this HashMap is that they have method code.
11530726,2,1,1,java.util.HashMap,"The documentation of Object says: ""maintain the general contract for the hashCode() method, which states that equal objects must have equal hash codes"" As you noticed, if you change the state of an object you keep in a HashSet, the object can not longer be accessed by the remove method or found by the contains method of the HashMap."
11530867,2,0,0,java.util.HashMap,"Dictionary was ""replaced"" by Map and HashTable by a HashMap."
11530867,2,0,0,java.util.HashMap,A HashTable is slow since it is synchronized so HashMap is the norm choice.
11530867,2,0,0,java.util.HashMap,"I am not sure why you worry that you use a ""legacy"" datastructure since if you must use a JSlider you have to use the HashMap."
11530711,2,0,3,java.util.HashMap,It is obsolete because it has been replaced with java.util.HashMap.
11530711,2,0,3,java.util.HashMap,"The primary differences are that methods on HashTable are synchronized, and HashMap allows use of the null pointer as a key."
11533429,2,1,5,java.util.HashMap,The typical approach for this would be to have an auxiliary HashMap that maps from the object to the position in the list.
11535543,1,0,2,java.util.HashMap,Necessary to synchronize a concurrent HashMap when calling values()?
11535610,2,0,1,java.util.HashMap,"But even with ConcurrentHashMap, the Collection of values() is not a snapshot, it works just like for the normal HashMap."
11536648,2,0,1,java.util.HashMap,"For example, hashCode is used by HashMap to store and retrieve the keys efficiently."
11536648,2,0,1,java.util.HashMap,"if the hashCode of an object used in a HashMap was not the same during a run of your application, the HashMap would not be able to retrieve the key consistently."
11537082,2,1,1,java.util.HashMap,If so you can use HashMap instead with key as URL and value as xpath so that duplicate keys will be overridden.
11537692,2,0,1,java.util.HashMap,"I would just use a HashMap<String, NameScore> (where the key is the name and the value is the name-score pair)."
11540498,1,0,3,java.util.HashMap,Possible Duplicate: clone utility for HashMap in java   I have an one to one map as: code.
11543808,1,0,1,java.util.HashMap,"With the first approach, some things I've thought of in regard to the HashMap approach:  I would avoid unecessary conditionals (non-trivial when thousands of entities are having their update() called); Read access time is O(1) on average (the only time you're likely to not get that is on a hash collision); HashMap.entrySet() must be called to iterate over the collection using for-each syntax."
11543808,1,0,1,java.util.HashMap,"However this does not tell me if HashMap is internally creating the set, each time entrySet() is called."
11544127,2,1,1,java.util.HashMap,This has a couple of advantages:  You can avoid the allocation of an Iterator object (which would happen if you used HashMap or ArrayList) You can avoid some unnecessary castings by specialising on the Component type
11543961,2,0,2,java.util.HashMap,"However this does not tell me if HashMap is internally creating the set, each time entrySet() is called."
11550354,1,0,2,java.util.HashMap,"I'm getting the error javax.el.PropertyNotFoundException: /member/apps/cms/edit.xhtml @228,49 value=""#{props.key}"": Property 'key' not found on type java.util.HashMap$Values when trying to display the datatable below."
11550503,2,0,1,java.util.HashMap,"Here's a good link showing how to do it:  Display HashMap Content in JSF Page  Of course, I won't recommend you to add logic in the getter/setter, instead use 2 different attributes and keep the getter and setter the cleanest possible way."
11554528,2,1,2,java.util.HashMap,"There's really no reason for them to ask you for the Class type of your Map except to give you back an exact match to the implementation (e.g., if you stick in a HashMap, then you will get back a HashMap, and if you stick in a TreeMap, then you will get back a TreeMap)."
11559193,2,0,1,java.util.HashMap,"If you're willing to change your data structures, you could use a Map<Integer, Player> instead of a list - something like a HashMap would then allow efficient access."
11559954,1,0,3,java.util.HashMap,Internals of how the HashMap put() and get() methods work (basic logic only ).
11559954,1,0,3,java.util.HashMap,"When we put a key instance say ""key"" and a Value instance say ""value"" in  a HashMap class using put() method , what does the HashMap class do internally ."
11565554,1,0,3,java.util.HashMap,Calculating HashMap overhead in Java.
11565554,1,0,3,java.util.HashMap,I'm assuming a fixed implementation of HashMap across the same version of Java.
11577247,2,0,0,java.util.HashMap,"The overhead of 1000 objects in a HashMap isn't even worth worrying about in any event: if they are 256mb each in total, even less so."
11565786,2,0,0,java.util.HashMap,Then store them in a HashMap.
11565786,2,0,0,java.util.HashMap,"Subtract the first measured memory to the second used memory, and you have the overhead of the HashMap."
11566039,1,0,0,java.util.HashMap,Getting the key when we know the value in HashMap.
11566039,1,0,0,java.util.HashMap,I know that a HashMap contains a particular integer variable as value.
11568170,2,0,3,java.util.HashMap,A good answer to the question as to what is the difference between Hashtable and HashMap is provided here.
11568231,2,0,3,java.util.HashMap,PS: I would also recommend using a HashMap instead of HashTable.
11576639,2,1,3,java.util.HashMap,"And if you want to just send all the lists in a single request attribute then @KaipaMSarma's suggestion is good to have a HashMap<String, ArrayList>, so your servlet code might look something like this: code."
11579024,2,0,3,java.util.HashMap,Put your data into a HashMap where MSISDN is key and count is value.
11579016,2,0,0,java.util.HashMap,Therefore the hashCode method is used on the key Object when storing items in for example a HashMap.
11579032,2,1,3,java.util.HashMap,"Assuming your objects are going to be stored into a HashMap (or Set... doesn't matter, we'll use HashMap here for simplicity), you want your hashCode method to return a result in a way that distributes the objects as evenly as possible."
11579032,2,1,3,java.util.HashMap,"Each time two different objects have the same hashCode, they're mapped to the same position in the HashMap (aka, they collide)."
11579032,2,1,3,java.util.HashMap,"This means that the HashMap implementation has to handle this collision, which is much more complex than simply storing and retrieving an entry."
11580113,2,0,0,java.util.HashMap,The HashMap class's major data structure is this: code.
11580113,2,0,0,java.util.HashMap,"Once you find the bucket, a linear search is done inside of that bucket for the exact key (if you don't believe me, look at the HashMap code)."
11583699,1,0,1,java.util.HashMap,This code splits up a comma delimited string into substrings and populates a HashMap value using the resulting substrings.
11583699,1,0,1,java.util.HashMap,"Some substring values look funny in the resulting HashMap, looks like it's due to the presence of commas in the token."
11583699,1,0,1,java.util.HashMap,"For instance ,""LONDON,UNITED KINGDOM"", in the string appears in the HashMap like Key = key, Value = ""LONDON I thought that String split(), will not break up substrings containing the delimiter if they are enclosed in double quotes?"
11583699,1,0,1,java.util.HashMap,"I've also tried escaping the embedded comma like ,""LONDON\,UNITED KINGDOM"", but the string in the HashMap looks like Key = key, Value = ""LONDON\ Am I missing something, or is there any way around this problem?"
11589399,2,0,1,java.util.HashMap,"Something like a HashMap<Set<Class>,CollisionHandler>, except last I checked Java didn't support generic generics (and Sets probably aren't that efficient)."
11589399,2,0,1,java.util.HashMap,"The most efficient solution along these lines is to populate a HashMap<ClassPair,CollisionHandlerFunctor> via reflection (making sure you get both ClassPair(Player.class,Snowflake.class) and ClassPair(Snowflake.class,Player.class), but even then it doesn't seem like it can be very efficient."
11590430,1,0,0,java.util.HashMap,I have an HashMap as: code.
11591014,2,1,1,java.util.HashMap,Use a HashMap to translate characters.
11592499,1,0,0,java.util.HashMap,May data structure is HashMap.
11592586,2,0,2,java.util.HashMap,Or you could block on the HashMap Object when adding/remove entries.
11601482,2,0,1,java.util.HashMap,"If all you want is a few stats, you can keep track of this information in a HashMap and write it every 10 minutes to the database from another thread."
11606448,2,1,1,java.util.HashMap,Or you iterate through the HashMap a thousand times if you have thousands of these rows.
11607391,2,0,0,java.util.HashMap,"I understood your question in this way.. you have following things..   class A {static HashMap hash, getter and setter}   ThreadA {HashMap hash, ThreadA(HashMap hash){this.hash = hash}} ThreadB .. so on ThreadC {... some where setting hash of class A} and its not reflecting in ThreadA and ThreadB..   if this is your problem, it is because ThreadA and B already got the hash reference through the constructor and working on it, setting the hash of class A in ThreadC will not affect the already set hash of ThreadA and B.  consider you followed these steps  Created a hash - let assume it is referring to address 1001 passed to threadA and threadB so that they have hash with reference 1001 created another hash in threadC - let assume it is referring to 2001 set hash created by ThreadC to class A. ie, now class A hash have reference 2001, still ThreadA and ThreadB  hold hash with reference 1001, thats it  consider this for solution first, in class A remove static key word and make the 'hash' instance variable instead of class variable (am not sure why you made that) and pass class A object to threadA and threadB instead of hash  class A {HashMap hash, getter and setter}   ThreadA {A obj,  ThreadA(A obj)  {this.obj = obj}.. // access hash by using getter of classAobj.getHash() and proceed your processing with hash map } ThreadB .. so on"
11606749,2,0,1,java.util.HashMap,"Both ThreadA anf ThreadB receive a HashMap in their constructor, not an object of class A."
11606749,2,0,1,java.util.HashMap,"Even if you later change the hash attribute of an object of class A, this does not change the HashMap reference already received and stored by both threads."
11606749,2,0,1,java.util.HashMap,"If you want to make sure that both threads can access a new HashMap, either you must provide the new reference to both of them (so you need to create a setter method in ThreadA as well, and store somewhere a reference to the ThreadA object so you can later invoke the setter), or otherwise pass directly an object of class A."
11607210,2,0,0,java.util.HashMap,"Well it doesn't have to be a ""dynamic"" bean, you can just use a Map variant, like HashMap."
21480495,2,0,0,java.util.HashMap,"Create a HashMap and put new Entry in the map with key,value where value is Integer."
11608757,2,0,2,java.util.HashMap,"Use a HashMap<Integer>,<integer> ht to manage your counts code."
11608757,2,0,2,java.util.HashMap,Corrected HashTable in HashMap and ++ before get(..)
11609839,1,0,0,java.util.HashMap,"I am putting the data into the HashMap of type <String, Object>."
11611462,1,0,0,java.util.HashMap,I have stored some class names in a HashMap.
11612467,1,0,2,java.util.HashMap,Had it been written for HashMap then it would be OK as HashMap allow nulls in keys and values but why it is using it for Hashtable?
11612860,1,0,3,java.util.HashMap,HashMap returns value in non sequential order.
11612860,1,0,3,java.util.HashMap,I am inserting four values with different keys in a HashMap.
11612972,2,0,12,java.util.HashMap,"You can use a LinkedHashMap instead, which will keep the insertion order:  This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries."
11613449,2,0,0,java.util.HashMap,Map.containsKey() considering that you are using a HashMap since searching in HashMap is done in O(1).
11613722,2,0,3,java.util.HashMap,"But if you use the most current implementations (LinkedList or ArrayList for List, and HashMap for Map), the contains() method must, in the worst case, go through the entire list, and compare your element with each entry."
11613722,2,0,3,java.util.HashMap,"If you use an HashMap, the implementation is radically different : the HashMap contains an array with more entries than elements in it (in practice, you have an array size of between 4n/3 an 3n/2 for n elements in the map)."
11613722,2,0,3,java.util.HashMap,"Also, if you don't need the key-value thing, you can use a HashSet (which is internally the same as an HashMap)."
11615725,2,1,3,java.util.HashMap,"Unless you've overridden equals and hashCode in Employee, it won't consider that new Employee object to be equal to the existing one within the HashMap."
11619485,1,0,1,java.util.HashMap,"Exists some way to declare a fully generic HashMap that can accept my values, and passed to the ""someMethod"" method ?"
11620518,2,0,2,java.util.HashMap,"I would simply use a counter and HashMap<Keyword, Integer>."
11621916,2,0,0,java.util.HashMap,"Since the Java HashSet implementation uses internally a HashMap, it should be really easy to copy/modify the code so that it uses Guavas CacheBuilder."
11621916,2,0,0,java.util.HashMap,This will lose no more efficiency than the Java HashSet implementation loses by using an underlying HashMap.
11623065,2,1,3,java.util.HashMap,You can use a HashMap to simulate this.
11623157,1,0,26,java.util.HashMap,"I do not know if it is actually possible to do this since I'm not the best at java-hacking, but here is what I do know:  Camera.unlock() is a native method, so I can't really see the mechanism behind the way it locks me out Camera.Parameter has a HashMap that contains all of its parameters Camera.setParameters(Parameters) takes the HashMap, converts it to a string, and passes it to a native method I can eliminate all the parameters but TORCH-MODE from the HashMap and the Camera will still accept it  So, I can still access the Camera, but it won't listen to anything I tell it."
11624679,1,0,3,java.util.HashMap,How can I get the Duplicate key value pair of an HashMap?
11624724,2,0,1,java.util.HashMap,"Ok, here's some code to essentially reverse your HashMap: code."
11624816,2,1,6,java.util.HashMap,This method will return key/value pairs for all the duplicate values in the input HashMap.
11628863,2,0,1,java.util.HashMap,"But without proper implementations for equals() and hashCode(), you cannot make proper use of a HashMap."
11638912,2,1,2,java.util.HashMap,"E.g Map args = new HashMap(); args.put(""x-ha-policy"", ""all""); channel.queueDeclare(""myqueue"", false, false, false, args);"
11633794,2,0,4,java.util.HashMap,It is a good practice since this is a required condition if your objects are meant to be used in hash based data structures like HashMap/HashSet etc.
11633842,2,0,9,java.util.HashMap,"Because a HashMap uses the following algorithm to find keys quickly:  get the hashCode() of the key in argument deduce the bucket from this hash code compare every key in the bucket with the key in argument (using equals()) to find the right one  If two equal objects didn't have the same hash code, the first two steps of the algorithm wouldn't work."
11633842,2,0,9,java.util.HashMap,And it's those two first steps that make a HashMap very fast (O(1)).
11633860,2,1,1,java.util.HashMap,In particular if you put a bunch of these objects into a HashMap or HashSet the map/set will use the hashCode() method to determine whether the objects may be duplicates - so you can have a situation where a collection will store 2 objects you've defined as equals (which should never happen)  because they're each returning different hashCodes.
11638431,2,0,6,java.util.HashMap,That is the reason why it is recommended for high performance situations over Collections.synchronizedMap(new HashMap<...>()).
11640655,2,0,2,java.util.HashMap,"First of all, to make this class thread-safe, you should use a thread-safe hash map implementation, like java.util.concurrent.ConcurrentHashMap rather than plain old java.util.HashMap."
11645733,1,0,1,java.util.HashMap,"I have a HashMap, which contains another HashMap."
11645733,1,0,1,java.util.HashMap,I want to iterate over the first HashMap and use the Key values from that.
11645733,1,0,1,java.util.HashMap,"Then, as I iterate over the first HashMap I want to start an inner loop iterating over the second HashMap, getting all the values."
11645769,2,0,1,java.util.HashMap,You can iterate over entries using entrySet().iterator() on the first HashMap or get the keys and iterate over them:  Instead of subitems.values().iterator() use subitems.keys().iterator() and use the next key to get the inner hashmap.
11648577,1,0,5,java.util.HashMap,I want to send send HashMap object to the applet that requested it.
11648577,1,0,5,java.util.HashMap,A servlet has that HashMap object.
11648577,1,0,5,java.util.HashMap,"I have made a connection to the servlet and my servlet also has the HashMap object,but I don't know how to send it to the applet and I wonder if it can be sent !"
11961864,2,1,1,java.util.HashMap,So you already have the HashMap in your Servlet and want to send it to the Applet: code.
11648872,1,0,1,java.util.HashMap,I have a HashMap.
11649370,2,0,5,java.util.HashMap,A HashMap is not sorted.
11649372,2,1,2,java.util.HashMap,"From http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html  To maintain insertion order, you should use a LinkedHashMap."
11649372,2,1,2,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
11649453,2,0,0,java.util.HashMap,HashMap is a class which do Not implement Sorted Map Interface.
11649512,2,0,0,java.util.HashMap,"First, as everybody else said, HashMap is not sorted."
11652074,2,1,2,java.util.HashMap,"Your Hashmap is declared as HashMap<String, Employee> map."
11652074,2,1,2,java.util.HashMap,There is no need to check if the HashMap contains the key before removing it.
11656422,2,1,1,java.util.HashMap,"Each time you recreate the contactList..  ArrayList<HashMap<String, String>> contactList = new ArrayList<HashMap<String, String>>(); and then you call... code."
11661115,2,1,0,java.util.HashMap,"Shonna, you can achieve what you want using a HashMap, a Scanner, and some simple string parsing."
11661115,2,1,0,java.util.HashMap,"After this is done, it pairs the id with the parent in a HashMap."
11662970,2,1,0,java.util.HashMap,"I would use a ""ready to use"" implementation like a HashMap."
11663229,2,0,1,java.util.HashMap,You can use HashMap like code.
11678869,2,0,0,java.util.HashMap,"of the type HashMap<String, List<Record>>): one keyed by buildings, one keyed by city and one keyed by district."
11663676,2,0,0,java.util.HashMap,Load that into something like a HashMap and start running.
11671853,2,1,14,java.util.HashMap,"Lastly, if most of the operations on the map need to be in a synchronized block anyway, you might as well not pay for the synchronizedMap and just use a HashMap always inside of synchronized blocks."
11673360,2,0,0,java.util.HashMap,Ref:  http://www.coderanch.com/t/232685/threads/java/Concurrent-access-HashMap http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReadWriteLock.html http://tutorials.jenkov.com/java-concurrency/read-write-locks.html
11676557,1,0,5,java.util.HashMap,"As described in the answer to Double in HashMap, Doubles shouldn't be used in HashMaps because they are difficult to compare for equality."
11680751,1,0,0,java.util.HashMap,Are there problems of implementing HashSet using HashMap?
11680751,1,0,0,java.util.HashMap,In java HashSet is implemented using a HashMap.
11686077,1,0,2,java.util.HashMap,Problem is application currently has a lot of deep in-memory structures vital for whole business that need to be replicated (like domain objects inside of list inside of HashMap inside of ConcurrentHashMap inside of another ConcurrentHashMap).
11687505,1,0,1,java.util.HashMap,Edit method for EmployeeStore (HashMap).
11689741,1,0,4,java.util.HashMap,Sending HashMap parameter to Web Service from PHP.
11689741,1,0,4,java.util.HashMap,"However, I had no problem implementing one that receives a HashMap, and filling that parameter from PHP with nuSoap."
11689741,1,0,4,java.util.HashMap,"I have a ParameterBean class with this members (plus getters and setters of course), which includes a HashMap."
11731728,2,1,1,java.util.HashMap,A HashMap is a pretty dang standard data type and should present no problems when used in a web service.
11702009,2,0,3,java.util.HashMap,"And ArrayList is a container of the family of Lists that stores a sequence of objects such as ""car1"", ""car2"", etc... A HashMap is a container of the type Map which maps keys to values, such as ""car1 => red"", ""car2=>blue"", etc..."
11703813,2,1,4,java.util.HashMap,"in Python a dict, in Perl a %hash, in Java a Dictionary or HashMap."
11704005,2,0,2,java.util.HashMap,"Something like Map<String,Map> allMaps = new HashMap<String,Map>() Once you have this map , populate it with all your filenames and the corresponding maps monkey."
11704005,2,0,2,java.util.HashMap,"allMaps .put(""monkey"", monkey) If a string filename corresponds to not a map but to a set , then you need to declare something more general Map<String,Object> allMaps = new HashMap<String,Object>()."
11704589,1,0,0,java.util.HashMap,"I'm playing with a horrifying data structure which basically is a tree, and each node stores references to its children in a HashMap object."
11710817,2,0,2,java.util.HashMap,"Use a HashMap, or, if you need thread safety, which you didn't mention, ConcurrentHashMap."
11714554,2,0,1,java.util.HashMap,The quick way of putting entries in a Map just created is the following (let me use a HashMap 'cause I like them): code.
11714554,2,0,1,java.util.HashMap,"While it's true that in Java7 you can generally use the diamond operator and write something like this Map<String,String> temp = new HashMap<String,String>();, this does not work when putting elements in the Map inline."
11715566,2,0,0,java.util.HashMap,"Consider it like this... HashMap<String, TileType>"
11723159,1,0,0,java.util.HashMap,I am getting java.util.ConcurrentModificationException thrown while using HashMap.
11723159,1,0,0,java.util.HashMap,How do i remove the key value pair in the code below comparing with elements in HashMap?
11727811,1,0,0,java.util.HashMap,HashMap Java example to avoid collision.
11727811,1,0,0,java.util.HashMap,"I am using HashMap in java to store key and Object <Key,Object>."
11727907,2,0,1,java.util.HashMap,"If you want to store more than one object by key, you should create a HashMap of list This is a simple example: code."
11727862,2,0,4,java.util.HashMap,The Java HashMap already handles collisions for you in this way.
11727862,2,0,4,java.util.HashMap,The only way to avoid (or rather minimize) collisions is to create a hash function that creates the best possible distribution of values throughout the HashMap.
11727862,2,0,4,java.util.HashMap,"Depending on the density of your HashMap and the quality of your hash code, collisions are almost inevitable, hence the need to override the two methods."
11732304,2,0,0,java.util.HashMap,import java.util.HashMap; code.
11732427,2,0,0,java.util.HashMap,Here is a complete solution using a HashMap: code.
11734056,1,0,0,java.util.HashMap,Reversing a HashMap  to different Sets and/or Lists.
11734056,1,0,0,java.util.HashMap,UPDATE:  Well here is what I found for my own question : Map> returnValue = new HashMap>(); HashSet reasonSet = new HashSet(); code.
11735645,2,1,1,java.util.HashMap,"Extend HashMap, overriding the get() method so that it checks     the date, returns null if the date is too old, and returns the object stored     otherwise."
11735485,1,0,0,java.util.HashMap,"I am thinking of creating a HashMap<String, Object> type, where String places the id of the object(Widget) and then I will call hashMap.getKey(id) which will return me a reference to the object(Widget)."
20010727,2,0,0,java.util.HashMap,This works because the HashMap class has a constructor that will return a clone of whatever HashMap is passed into it.
11736821,2,1,10,java.util.HashMap,"would create a new class derived from HashMap (note the following braces, in which you can put methods, members etc.)"
11741128,1,0,3,java.util.HashMap,So lets say we have this code and say that the HashMap somehashMap has a longer life time than foo .
11741128,1,0,3,java.util.HashMap,Now going by the logic of the answer in the post that I linked to we are actually passing a copy of the reference of foo to the method put() right ?In that case putting the foo into the HashMap shouldn't prevent it from getting garbage collected .
11741224,2,0,1,java.util.HashMap,"As long as foo is in the HashMap it can not be garbage collected, because Java does not know you will never use it again."
11742593,1,0,7,java.util.HashMap,I'm using objects of class Point as keys in a HashMap and as elements in a HashSet.
11752144,2,1,3,java.util.HashMap,HashMap will maintain only a single unique key.
11758285,1,0,3,java.util.HashMap,"Could somebody explain me how exactly the above works and how it is different from Map<String, String> map = new HashMap<String, String>(); map.put(""a"", ""b""); ?"
11758470,2,0,2,java.util.HashMap,"In fact, it is extending java.util.HashMap."
11758470,2,0,2,java.util.HashMap,"Pay attention to the name of such anonymous class, and that this class extends java.util.HashMap."
11760058,1,0,0,java.util.HashMap,"I want to map the item elements to a HashMap, the string is Item.key I wrote an adapter that unmarshals a list from the xml and marshals a map to a list."
11760511,2,0,0,java.util.HashMap,You should switch HashMap and LinkedList in your adapter: code.
11765517,1,0,4,java.util.HashMap,2) Building a HashMap using parallel array whose key are URL's one part (represented as LONG) and values are URL's other part (represented as INT) - key can have multiple values.
11765517,1,0,4,java.util.HashMap,3) Then search the HashMap for some other URLs (millions of URLs saved in one day) per day at the beginning when system starts.
11768862,2,1,2,java.util.HashMap,Is mutating the object already in the HashMap.
11768862,2,1,2,java.util.HashMap,"Thus, for a key to be found in a hash table (such as a HashMap) it must be such that: code."
11771053,1,0,0,java.util.HashMap,Can i use HashMap for this.
11775159,2,0,2,java.util.HashMap,"You could then use a HashMap<MyKey, MyObject>, and get the object in constant time by calling: code."
11778410,2,0,3,java.util.HashMap,"You could use a regular HashMap<K,V>, but the order of iteration will be arbitrary."
11780913,1,0,0,java.util.HashMap,"Actually I want to see the value of HashMap when the breakpoint stopped at the System.out.println...not just wordcount  HashMap<K,V>  (id=16), but with its content."
11781455,2,1,1,java.util.HashMap,"A HashMap has no fields ""key"" and ""value"", so your code does not really make sense."
11781455,2,1,1,java.util.HashMap,I guess that you confused the detail formatter with some local variables (in a method like HashMap.put()) during another debug session.
11781455,2,1,1,java.util.HashMap,"To get some correctly working code, it might be the most easy way to first set a breakpoint inside of a HashMap method like put(), and to implement the detail formatter when you hit the breakpoint."
11781420,2,0,2,java.util.HashMap,"I think I'd create a HashMap<String, Trade>, using tradeName+quote+source as a key, then add each trade from the list to the appropriate item in the map."
11781792,2,1,1,java.util.HashMap,"HashMap's have the advantage of nearly instant (O(1)) checks to see if an element already exists, and ensures that elements in it are unique (as a hashmap is a Set, and a set can not have duplicate elements)."
11781792,2,1,1,java.util.HashMap,"The code would look pretty similar, except we could take advantage of HashMap's containsKey method, rather than indexOf."
11782719,1,0,0,java.util.HashMap,I want to iterate over the HashMap list and retrieve the key and the values (value 1 and value2).
11791193,1,0,4,java.util.HashMap,Concurrent HashMap iterator:How safe is it for Threading?
11793067,1,0,18,java.util.HashMap,I'm assuming that I use synchronizedCollection(Collection<T> c) on a HashMap.
11793067,1,0,18,java.util.HashMap,I know that in general a synchronized collection is essentially just a decorator for my HashMap so it is obvious that a ConcurrentHashMap has something different in its internals.
11793484,2,0,11,java.util.HashMap,"This is the article that helped me understand it Why ConcurrentHashMap is better than Hashtable and just as good as a HashMap  Hashtable’s offer concurrent access to their entries, with a small caveat, the entire map is locked to perform any sort of operation."
11793484,2,0,11,java.util.HashMap,They offer all the features   of Hashtable with a performance almost as good as a HashMap.
11796026,2,0,0,java.util.HashMap,If your values are guaranteed to be unique use Guava BiMap (the HashMap counterpart is called HashBiMap.
11799194,1,0,0,java.util.HashMap,"I want to put values in HashMap like below, code."
11799313,2,0,0,java.util.HashMap,Iterate over that set and use the elements as keys in your other HashMap.
11799352,2,0,0,java.util.HashMap,Then create a HashMap of Pair - String pairs: code.
11799649,2,1,7,java.util.HashMap,"The line jdbcTemplate.queryForList(""select * from user_group""); is returning a list of HashMap, not a list of Group items (your IDE is probably showing a warning on that line)."
11802205,1,0,0,java.util.HashMap,where FormatCache would do the ThreadLocal caching with a HashMap keyed on the format pattern?
11805606,2,0,1,java.util.HashMap,"You can also store (key, value) properties in a data structure such as a HashMap, mapping Strings to objects."
11810394,1,0,4,java.util.HashMap,Regarding HashMap implementation in java.
11810931,2,0,0,java.util.HashMap,That means each your object with that class will have the same hashCode and therefore will be saved in the same bucket in HashMap.
11811286,2,1,1,java.util.HashMap,The most interesting fact about a Java HashMap is that it always has 2^n buckets.
11811286,2,1,1,java.util.HashMap,"The next important thing in HashMap is the resizing, so if the actual size of the map is above over a threshold (determined by the current number of buckets and the loadfactor, in our case 16*0.75=12) it will resize the backing array."
11811286,2,1,1,java.util.HashMap,"This is quite costly, so if you know how many items there are, you should initialize the HashMap with that count so it does not have to resize the whole time."
11820535,2,0,0,java.util.HashMap,"HashMap works internally by using Object.hashCode to map objects to buckets, and then uses a collision resolution mechanism (the OpenJDK implementation uses separate-chaining) with Object.equals."
11815735,2,0,0,java.util.HashMap,"HashMap< Integer,String > // where Integer will be the Ques, and String will be the Activity Name"
11816794,1,0,2,java.util.HashMap,"Inside ElementType there is a HashMap<TypeType, ArrayList<ElementType>> mapping all the ElementType's to their corresponding TypeType values."
11816794,1,0,2,java.util.HashMap,The typeMapping is the HashMap mentioned above.
11817532,2,0,0,java.util.HashMap,If you use a standard map data structure (HashMap for instance) in which you store the entered_number(key) and the number of occurrences(value) you will end up with a complexity of O(n) given by the iterations at the end when you have to discover the maximum number of occurrences first and then retrieve all the entered numbers having that frequency.
11818121,2,0,2,java.util.HashMap,"HashMap is a class, when you say new HashMap() you create a new object of this class."
11818121,2,0,2,java.util.HashMap,"You can just use the methods of HashMap, there's no other (simple) way."
11818121,2,0,2,java.util.HashMap,"Of course, HashMap is programmed with some ""core Java""."
11818121,2,0,2,java.util.HashMap,"If you are interested in how that looks like, take a look at the source code java.util.HashMap."
11817915,2,0,1,java.util.HashMap,The array of Map.Entrys that you want to retrieve is private to the HashMap and cannot be directly accessed.
11817915,2,0,1,java.util.HashMap,After you edit : Why do you want to avoid using the api that HashMap provides to retrieve the values given a key ?
11818184,2,0,0,java.util.HashMap,Just derive from HashMap and override its toString method
11818188,2,1,3,java.util.HashMap,"This works for any sort of Map, including HashMap and TreeMap."
11818232,1,0,1,java.util.HashMap,"This question I am asking on the basis of my research as I was going through the source code of hashmap in decomplier , please advise Can I also create my own custom HashMap as the java HashMap is , Please advise how Can I create my own custom HashMap named MyMap..!1"
11818328,2,0,6,java.util.HashMap,"If you want to write your own implementation of HashMap, simply implements the Map interface and implement its methods the way you want: code."
11818461,2,0,1,java.util.HashMap,you can see the source code for HashMap  in java and write of your own.
11822552,1,0,0,java.util.HashMap,Chaining in HashMap.
11822602,2,0,0,java.util.HashMap,You will have to make your HashMap as follows code.
11822711,2,0,1,java.util.HashMap,Internally a HashMap is nothing but an array with indices.
11822711,2,0,1,java.util.HashMap,"As the hashValue is the index of an element in the array, it has to be less than the size of the HashMap itself.The HashMap's hashing algorithm converts the key's hashcode into the hashValue."
11822711,2,0,1,java.util.HashMap,"Now, the HashMap checks for the equality between the new key and the key that exists in that index's Entry."
11822711,2,0,1,java.util.HashMap,"If both the keys are same it means replacement, else it's collision and the HashMap uses the appropriate collision technique."
11822711,2,0,1,java.util.HashMap,"Now, if you want the list of all the values that you put for a particular key, consider using a composite map HashMap<String, List<String>>."
11822826,2,0,0,java.util.HashMap,Both the keys you tried to put in the HashMap has the same HashCode.
11822826,2,0,0,java.util.HashMap,Thus the first value gets overwritten an you will end up having only one value in the HashMap.
11822826,2,0,0,java.util.HashMap,You can put Two similar objects in the same HashMap by overriding thier hashCode() Method.
11824258,1,0,4,java.util.HashMap,"The method needs to return the value of type ArrayList<HashMap<String,Object>> where each HashMap is 1 row, and the ArrayList contains all rows of result."
11921569,2,0,0,java.util.HashMap,But I solved it by changing the collection to a LinkedHashMap instead of a HashMap.
11921569,2,0,0,java.util.HashMap,So the above code works fine when you change the HashMap to a LinkedHashMap.
11826745,1,0,0,java.util.HashMap,Facing Issue in Comparing two HashMap in synchronized method/function.
11826745,1,0,0,java.util.HashMap,"Sometimes both the HashMap gets compared and sometimes only the first value of hashmap gets compared, something weird is happening two Hashmap contains the values which needs to be compared on the basis of particular condition."
11830809,2,0,2,java.util.HashMap,Edit: I've added a check for Cloneable objects to handle cases like the HashMap in your example.
11832604,1,0,3,java.util.HashMap,Speedup HashSet and HashMap performance.
11832710,2,0,6,java.util.HashMap,"HashMap initialization parameters If you have such a big amount of data to process, it would probably payoff to analyze it's distribution and adjust these settings first."
11832831,2,0,6,java.util.HashMap,"One such part could be populateMap(), a method that created the HashMap and added the values."
11836546,1,0,6,java.util.HashMap,"Looking at ""Thinking in Java"", there is an idea of creating custom HashMap with int[] as keys."
24282133,2,0,3,java.util.HashMap,"A java.util.HashSet<Integer> uses a java.util.HashMap<Integer, Integer> internally."
24282133,2,0,3,java.util.HashMap,"In a HashMap, each object is contained in an Entry<Integer, Integer>."
11840542,2,0,1,java.util.HashMap,"Your method (correctly) returns Map<String, Integer>, but you are assigning it to a HashMap<String, Integer> - there are multiple types of Map, the compiler has no way of knowing your implementation returns a HsshMap."
11840542,2,0,1,java.util.HashMap,Changes are to make the parameter a Map (not a HashMap) and List<?> (not List<?
11841667,2,0,0,java.util.HashMap,"Yes, a LinkedHashMap provides O(1) membership checks  Like HashMap, it provides constant-time performance for the basic operations (add, contains and remove) assuming the hash function disperses elements properly among the buckets."
11841667,2,0,0,java.util.HashMap,"Note also  Performance is likely to be just slightly below that of HashMap, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a LinkedHashMap requires time proportional to the size of the map, regardless of its capacity."
11841667,2,0,0,java.util.HashMap,"Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity."
11841667,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html If you don't need predictable ordering, a HashMap will be slightly faster on insertion/modification because it does not need to maintain the linked list to preserve ordering."
11841778,2,0,0,java.util.HashMap,"What you seem to want is an insertion-order Set with average-case performance comparable to HashMap.contains, so I suggest you look at LinkedHashSet."
11844203,1,0,3,java.util.HashMap,"So I store this data like so: Foo extends HashMap<Name, Pair<Bar, Bar>> where Pair<A, B> is my own class which just stores 2 values and provides some methods (equals, hashcode etc)."
11854122,2,0,0,java.util.HashMap,"Before the for-loop, declare a Map<Integer,Boolean> numEntries = new HashMap<Integer,Boolean>(); This map will contain a true value if some number a has key entries."
11850684,1,0,0,java.util.HashMap,"An obvious solution is to write generic wrappers for all main classes - ArrayList, HashMap, HashSet and create generic interfaces Map, etc."
11851121,2,0,0,java.util.HashMap,HashSet uses HashMap as internal representation of data.
11851603,1,0,0,java.util.HashMap,HashMap code.
11853123,2,0,1,java.util.HashMap,I don't catch : HashMap is Serializable so should be able to be used between client and server?
11870400,2,1,1,java.util.HashMap,"If I change the IdentityHashMap to HashMap, each Entry that is returned is different, so e1.getKey() doesn't change."
11858359,1,0,0,java.util.HashMap,Place pieces of a file into a HashMap - Java.
11858359,1,0,0,java.util.HashMap,"I am reading in a file and want to store the file up until certain words, in this example 'yes' into a HashMap of < Integer, document >."
11858359,1,0,0,java.util.HashMap,"But I am stuck with the HashMap, this is my train of thoughts."
11858359,1,0,0,java.util.HashMap,How can I add my text until 'yes' into the HashMap?
11858518,2,0,0,java.util.HashMap,I do not really understand what you want to store in the HashMap actually.
11858409,2,0,1,java.util.HashMap,"You use HashMap to store key,value pairs with unique keys."
11862499,2,0,0,java.util.HashMap,You can also use HashMap instead of simple class if you just want to store fields constants or like product setting that rarely change.
11862874,1,0,1,java.util.HashMap,"HashMap value change after ""get""."
11864224,1,0,1,java.util.HashMap,"I need to add all the column name of all the table in one collection, say HashMap."
11864224,1,0,1,java.util.HashMap,Is there any way to implement this without using multiple HashMap or any other collection?
11866827,2,0,0,java.util.HashMap,"A Map with the URL as a key, and the count as a value is certainly the simplest approach (e.g., HashMap<String, Integer>)."
11870181,2,0,0,java.util.HashMap,They're very handy when you are manipulating a HashMap along with an Array or ArrayList or similar collections.
11870181,2,0,0,java.util.HashMap,Here i list a simple Java EE example that retrieves a Cookie[] array from a request then store the maps the cookies to a HashMap :  code.
11870181,2,0,0,java.util.HashMap,"Anyway that was just a little example of HashMap and iteration in action, important is the possiblity to tweak maps and makes it possible to cycle through them like other collections, means bringing them to a more common and easy to manipulate state programmers use."
11870808,1,0,0,java.util.HashMap,Parse HTTP-style key-value pairs into java.util.HashMap.
11870808,1,0,0,java.util.HashMap,I want to parse them into a HashMap.
11876303,2,0,1,java.util.HashMap,I'm not sure why you're working in this manner :)  Wouldn't it be easier for the other class to accept a HashMap and handle it in the same way?
11876544,2,0,0,java.util.HashMap,"I think what you might want is something like this: public Map values = new HashMap(); values.add(""text01"", 2012); System.out.println(values.get(""text01""));"
11879796,1,0,1,java.util.HashMap,"Index: ArrayList which represent the columns: Column 1 | Column 2 | Column 3 | Column 4 Each element the arraylist contains a HasMap which represent the index: key -> the data String value -> the value represent which rows contains this index inside a TreeSet Example: Name Column: Emma  John Doe Emma Walker Emma Doe HashMap(Emma) -> 0, 3, 5 code."
11892121,1,0,4,java.util.HashMap,Checking for a variable of a Key of HashMap.
11892121,1,0,4,java.util.HashMap,My problem is I have a HashMap where the key is an object and I need it to be one of the variables in said object.
11892121,1,0,4,java.util.HashMap,"Currently, the HashMap.get() only looks at the myNums Objects but I need a way to get the value of num1 as thats the ""real key""."
11892121,1,0,4,java.util.HashMap,I coud loop through each item in the HashMap to check but I'd prefer not to do that.
11895535,2,0,0,java.util.HashMap,"Or, you can use a HashMap as others have suggested."
11897593,1,0,0,java.util.HashMap,Java - HashMap saving with ObjectOutputStream (bukkit mod).
11897593,1,0,0,java.util.HashMap,"I think the main problem is Player and Location are not serializable types, but what should I do to write this HashMap?"
11897686,2,0,0,java.util.HashMap,"I think you are writing HashMap<Player,Location> to file."
11897686,2,0,0,java.util.HashMap,HashMap is already serializable.
11897689,2,1,1,java.util.HashMap,HashMap is already Serializable.
11899798,2,0,1,java.util.HashMap,"Here, if you use the same HashMap with multiple threads you will surely get errors (such as if one thread itterates the Map entries while another one tries to modify it you'll get a concurrent modification exception) or if not errors at least a huge performance bottle neck, as the Map will do a lot of re-hashig as a consequence of having multiple writes sent from multiple threads."
11903007,1,0,2,java.util.HashMap,"In MongoDB, objects are added to the database as BasicDBObjects, which extend HashMap, so I can write something like this in Groovy: code."
11903007,1,0,2,java.util.HashMap,While I don't know where the BasicDBOBject cast is coming from (is it built-in because BasicDBObject already inherits from HashMap?
11903077,1,0,0,java.util.HashMap,Big-O: Getting all of the keys in a Java HashMap.
11903077,1,0,0,java.util.HashMap,Anyone know what the amortized analysis is of keySet in Java HashMap?
11903357,2,1,6,java.util.HashMap,"ps: it is similar to what the javadoc of HashSet says:  Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
11903167,1,0,3,java.util.HashMap,Convert java.util.HashMap to scala.collection.immutable.Map in java.
11911614,2,1,2,java.util.HashMap,Does your code need to know that the Map is a HashMap or a TreeMap ?
11911614,2,1,2,java.util.HashMap,"Or does it just care that it's got a key/value structure of some kind It also means that when I'm building my implementation code, if I expose a method that returns Map, I can change the implementation over time without effecting any code that relies on it (hence the reason why it's a bad idea to try and cast these types of values) The other is that it becomes easier to move these structures around the code, such that any method that can accept a Map is going to be easier to deal with then one that relies on a HashMap for instance The convention (that I follow) is basically to use the lowest functional interface that meets the need of the API."
13647838,2,0,0,java.util.HashMap,"Not necessarily a List, a HashMap would work as well."
11918553,2,0,3,java.util.HashMap,"However, I don't see that an ArrayList will give you an advantage over a HashMap."
11925854,1,0,1,java.util.HashMap,I'd like to access a static HashMap object on one of my classes.
11928744,1,0,2,java.util.HashMap,Different Syntax for creating HashMap and TreeMap objects.
11928744,1,0,2,java.util.HashMap,but declaring a HashMap object and TreeMap follow a different syntax like this.
11928928,2,0,1,java.util.HashMap,Map is an interface that is implemented by HashMap (and TreeMap).
11928811,2,1,5,java.util.HashMap,but declaring a HashMap object and TreeMap follow a different syntax like this.
11928811,2,1,5,java.util.HashMap,The fact that it happens to be a HashMap (or ArrayList etc) under the covers is an implementation detail.
11929625,2,1,29,java.util.HashMap,"Why not use a TreeMap instead of HashMap, then you could specify a Comparator with a case insensitive order (String.CASE_INSENSITIVE_ORDER): code."
11932514,2,0,1,java.util.HashMap,"HashMap uses the key's equals(Object) method  (in combination with hashCode()), and String.equals() is case-sensitive."
11933142,1,0,0,java.util.HashMap,Caching using HashMap of data that differs session to session.
11933142,1,0,0,java.util.HashMap,HashMap data is at application level or session level?
11933142,1,0,0,java.util.HashMap,Is HashMap is good approach?
11933245,2,0,1,java.util.HashMap,HashMap is just a collection.
11935785,2,0,0,java.util.HashMap,"How about implementing a ""VERY ROUGH"" lexer that reads the lines and maps them into a HashMap."
11938626,2,0,2,java.util.HashMap,Please look at the Javadoc for the entrySet() in HashMap.java and you will find out why!
11940157,2,0,5,java.util.HashMap,"As an aside, if you know the names will be unique, you can use a Map (specifically, a HashMap) to store and lookup mappings like names to numbers efficiently."
11940163,1,0,0,java.util.HashMap,Concurrent modification exception in ArrayList and Concurrent HashMap.
11944418,2,0,2,java.util.HashMap,"You'll also notice I changed the variable to Map instead of HashMap - it's good practice to program to interfaces instead of implementations, like winged's answer mentions."
11945816,2,0,1,java.util.HashMap,"If you're using a HashMap because you're worried about performance, then you'll fix that once you put the database backend in that you've mentioned."
11945609,2,0,2,java.util.HashMap,"While you're prototyping (pre database), for example, is there any reason you need to use a HashMap?"
11951437,2,1,5,java.util.HashMap,"Hashable32 provides a method hash32() String implements Hashable32 and hash32() method HashMap et al recognize String and invoke hash32() rather than hashCode()   The revisions of the code:  Murmur3 : https://code.google.com/p/smhasher/wiki/MurmurHash3 althashing ""7"" webrev : http://cr.openjdk.java.net/~mduigou/althashing7/8/webrev/ althashing ""8"" webrev : http://cr.openjdk.java.net/~mduigou/althashing8/8/webrev/"
25197310,2,0,5,java.util.HashMap,The hash(Object key) function in the HashMap has been revised to follows with no special treatment to String objects: code.
11953064,1,0,1,java.util.HashMap,Casting HashMap of subtypes to HashMap of supertypes.
11953064,1,0,1,java.util.HashMap,"My problem is I cannot find a way to cast a HashMap<String, Person> to a HashMap<Object, MultilineWritable>, even if String extends Object and Person extends MultilineWritable."
11953064,1,0,1,java.util.HashMap,"Same for the casting of a HashMap<Integer, Contract>... consequently I cannot call my generic function."
11954429,2,1,2,java.util.HashMap,"KISS - just use a HashMap<String, byte[]>."
11961566,2,1,0,java.util.HashMap,"The answer was to create a HashMap <String, Method> object."
11960780,1,0,0,java.util.HashMap,"I am trying to solve it by creating a HashMap <String, Method>, but every time I try to run Method.invoke (this, args), where args is an array of Objects corresponding to the parameters of Method, I get a NullPointerException."
11960780,1,0,0,java.util.HashMap,"I declare the Methods in my HashMap as follows: mypackage.MyClass.class.getMethod (""methodName"", args), where args is an array of Class object corresponding to the parameters of methodName."
11965839,2,0,1,java.util.HashMap,HashMap).
11967371,2,0,1,java.util.HashMap,I would use a HashMap and implement the sorting in an additional method which copies the entrySet into a list.
11967480,2,1,1,java.util.HashMap,"Some time ago I encountered a similar situation; I used a couple of maps in parallel:  A HashMap<K, P> M, where P is the pair type, to be able to find pairs by their key."
11967480,2,1,1,java.util.HashMap,The average complexity of the core operations is:  Add: O(logn) (TreeMap) Get: O(1) (HashMap) Remove: O(logn) (TreeMap)
11972341,2,1,0,java.util.HashMap,"I implemented my solution by creating new nested classes for the values of P and F already calculated, then used a HashMap to store the results."
11972341,2,1,0,java.util.HashMap,"The HashMap is then queried for the result before computation takes place; if it is present it just returns the result, if it is not it computes the result and adds it to the HashMap."
11970711,2,0,1,java.util.HashMap,"However, if you do not need a List and would like to be able to retrieve your Object by a known key a HashMap would be a better choice."
11974727,2,1,2,java.util.HashMap,But my recommendation is that you consider a simple HashMap in place of the WeakHashMap you're currently using.
11979387,1,0,1,java.util.HashMap,In Java form it's a HashMap>.
11981365,1,0,1,java.util.HashMap,but the IDE does not even accept it: cannot convert from HashMap to Integer.
11981612,2,0,0,java.util.HashMap,"First, it would be better to use a specific HashMap code."
11981612,2,0,0,java.util.HashMap,"However, that depends on what you want to do if the value is not contained in the HashMap."
11981370,1,0,0,java.util.HashMap,I have a map I've populated (say it's a HashMap).
11981493,2,0,2,java.util.HashMap,"If its HashMap, i don't think there is a better option than iterating, but if you can use TreeMap use this... map.headMap(key).clear(); Eg: code."
11981743,1,0,0,java.util.HashMap,HashMap or ConcurrentHashMap at Java Controllers?
11981804,2,0,0,java.util.HashMap,You can do that by using an object that has this already implemented like the ConcurrentHashMap or write your own synchronization code and use a plain HashMap.
11981823,2,1,1,java.util.HashMap,"If you never change the map after initialization, a regular HashMap is sufficient."
11981852,1,0,15,java.util.HashMap,HashMap allows one null key and any number of null values.
11981897,2,1,15,java.util.HashMap,"Perhaps they saw the need for a null key, and more importantly - null values, and added it in the HashMap implementation."
11981897,2,1,15,java.util.HashMap,"HashMap is newer, and has more advanced capabilities, which are basically just an improvement on the Hashtable functionality."
11981897,2,1,15,java.util.HashMap,"When HashMap was created, it was specifically designed to handle null values as keys and handles them as a special case."
11981975,2,0,4,java.util.HashMap,While in HashMap if it's null he will compute a key according to the value.
31861751,2,0,0,java.util.HashMap,"However, the use of Hashtable IS NOT discouraged in favor of HashMap in every scenario."
31861751,2,0,0,java.util.HashMap,HashMap is not.
31861751,2,0,0,java.util.HashMap,HashMap and ConcurrentHashMap do.
31861751,2,0,0,java.util.HashMap,"HashMap is a better replacement for single threaded applications or any time synchronization is not a requirement, because of the performance impact synchronization introduces."
31861751,2,0,0,java.util.HashMap,Sources:  Hashtable HashMap ConcurrentHashMap
11984659,1,0,0,java.util.HashMap,I am looking to achieve the following structure:  ArrayList  HashMap  ArrayList  HashMap HashMap   HashMap  ArrayList  HashMap HashMap HashMap     How do I add an ArrayList to a HashMap?
11987224,1,0,0,java.util.HashMap,"The enumConstantDirectory() method, every time invoked, returns a new HashMap, created from a copy of the values() array."
11987471,2,0,1,java.util.HashMap,It uses the passed in enumType to create an internal HashMap with the constants and the code is not sychronized.
11987471,2,0,1,java.util.HashMap,"There seems a subtle issue here: T result = enumType.enumConstantDirectory().get(name); The enumConstantDirectory() does a check for enumConstantDirectory == null but it is not synchronized, in order to create the HashMap."
11991636,2,1,5,java.util.HashMap,"For example, HashMap does that to improve performance when an object's hashCode is not well distributed."
11991662,2,0,0,java.util.HashMap,"This default hashCode is not very useful, since to look up an Object in a HashMap, you need the exact same key Object by which the key/value pair was originally filed."
11991663,2,0,0,java.util.HashMap,"And in HashMap implementation, it hashes the result again and take only the lower bits to make it in the range of 0 to size-1."
12003447,1,0,10,java.util.HashMap,"Some Message class is able to return a tag name based on tag number Since this class is instanciated many times, I am a bit reluctant to create a HashMap for each instance: code."
12003447,1,0,10,java.util.HashMap,"When you put everything in the mix ( Memory, Performance, GC, ...) Is there any reason to stick to HashMap?"
12003875,1,0,2,java.util.HashMap,Java (Concurrent)HashMap Performance for Frequent Modifications.
12004530,2,1,0,java.util.HashMap,"I Would like you to go through HashMap, it is the Best Example for your Type."
12007539,1,0,0,java.util.HashMap,"I am wondering for those dictionary-like data structure (Hashtable, HashMap, LinkedHashMap, TreeMap, ConncurrentHashMap, SortedMap and so on) need to do rehashing operation when its size reaches the threshold ?"
12008043,2,0,0,java.util.HashMap,No escape from re-hashing unless you implement your own HashMap.
12008043,2,0,0,java.util.HashMap,"A few other facts: Rehashing happens only on HashRelated data structures i.e HashMap, HashTable so on."
12011771,1,0,1,java.util.HashMap,Extracting entry from a Java HashMap based on equality of a field in the key type.
12011771,1,0,1,java.util.HashMap,"I have a Java HashMap of type <MyType,Double>."
12011771,1,0,1,java.util.HashMap,An external function works on it and creates a HashMap called myMap which calculates and associates a quantity of type Double with each object in the set.
12011975,2,1,0,java.util.HashMap,"and have HashMap<MyType,Holder> instead."
12014662,2,0,4,java.util.HashMap,"You could just do it explicitly, by declaring HashMap<Integer, MyHashObject>."
30661206,2,0,0,java.util.HashMap,"You can HashMap<MyHashObject,MyHashObject> instead of HashSet<MyHashObject>."
12023474,2,0,0,java.util.HashMap,Just use a HashMap and override the entrySet() method: code.
12018555,1,0,0,java.util.HashMap,java.util.HashMap$Entry cannot be cast to Person.
12019211,2,0,1,java.util.HashMap,Use a java.util.HashMap() instead!
12019212,2,1,3,java.util.HashMap,"Also take a look at this: SortedMap, maybe it helps you  http://docs.oracle.com/javase/1.4.2/docs/api/java/util/SortedMap.html Javadoc api here: http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html"
12019223,2,0,1,java.util.HashMap,Just use a HashMap: code.
12019287,1,0,1,java.util.HashMap,"I have a HashMap which have strings as key and value,  code."
12019287,1,0,1,java.util.HashMap,"I want to print it as the order it is inserted into the HashMap, So the output should be like, code."
12019303,2,1,6,java.util.HashMap,You can't do what you ask for with a standard HashMap.
12019303,2,1,6,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
12019434,1,0,11,java.util.HashMap,"Most of the basic hash based data structures like HashSet,HashMap in Java primarily use chaining technique."
12020017,2,1,5,java.util.HashMap,"I am currently discussing memory-compact reimplementations of HashMap and HashSet with, among others, Doug Lea."
12020017,2,1,5,java.util.HashMap,"LinkedHashMap is written as a subclass of HashMap, and borrows most of the implementation details; it's somewhat easier to implement the linked list of entries when the entries are discrete objects -- and at that point, you're already most of the way to a chained implementation."
12020337,2,1,3,java.util.HashMap,"For example, if you then decided to use a TreeMap instead of a HashMap, you could just change the instantiation step, and the rest of your code would still work just fine."
12021684,1,0,0,java.util.HashMap,"How to ""search"" a HashMap then loop the result?"
12021684,1,0,0,java.util.HashMap,"And want to search a HashMap then loop the result, this is my hashmap: code."
12021748,2,0,2,java.util.HashMap,If I understand correctly you want to iterate through the keys of a HashMap.
12021748,2,0,2,java.util.HashMap,"In particular, you need to look at the docs for HashMap and Map."
12024578,1,0,0,java.util.HashMap,"Two points here: 1. for performance, use HashMap or ConcurrentHashMap?"
12052573,2,0,0,java.util.HashMap,"for performance, use HashMap or ConcurrentHashMap?"
12052573,2,0,0,java.util.HashMap,"Obviously, ConcurrentHashMap is the concurrent version of HashMap."
12052573,2,0,0,java.util.HashMap,"Like Hashtable but unlike HashMap, this class does not allow null to be used as a key or value."
12024905,1,0,5,java.util.HashMap,How to declare HashMap with different types?
12024924,2,1,3,java.util.HashMap,"First of all rely on Map interface, not on concrete HashMap implementation."
12026465,2,0,1,java.util.HashMap,"First of all, you shouldn't insist on a HashMap in your signature."
12026465,2,0,1,java.util.HashMap,"Now you can call it with any of HashMap<String, Integer>, TreeMap<String, String> or SortedMap<String, Comparable<?>>."
12025362,1,0,0,java.util.HashMap,I have two threads that need to access a HashMap.
12029200,2,0,0,java.util.HashMap,"Example: In your code you should do:   Map<SomeKeyObj,SomeValueObj> myMap = new HashMap<SomeKeyObj,SomeValueObj>(); Here you instantiate a concrete class, but you use the inteface (in other case the base class) as a ""handler"" in your code."
12029200,2,0,0,java.util.HashMap,Suppose now that after profiling or due to a new requirement you need to replace the HashMap with a TreeMap or a ConcurrentHashMap or any kind of concrete implementation that adheres to the Map interface.
12029804,1,0,2,java.util.HashMap,Is good solution is to use HashMap?
12029840,2,1,2,java.util.HashMap,Is good solution is to use HashMap?
12030396,2,0,0,java.util.HashMap,Seems to me that you should be using a HashMap instead of Lists in the first place
12030298,2,1,10,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
12031697,2,1,3,java.util.HashMap,"Why not simply read the file in once, and then store the information in a HashMap<String, String>?"
12037564,2,0,1,java.util.HashMap,A Map will then be able to use this to match the key object passed in a get(key) request to find the value without needing to have the correct instance of the key (a HashMap actually uses hashCode to do this).
12037489,1,0,8,java.util.HashMap,"Cant access to java.util.HashMap$Entry with modifiers ""public final""."
12037489,1,0,8,java.util.HashMap,Whole problem is that i'm iterate looking through HashMap in JSTL.
12037489,1,0,8,java.util.HashMap,Where element.getPreparedParameters() returns HashMap.
12038265,2,1,11,java.util.HashMap,"Namely, Map.Entry is a public interface, but the implementing class in HashMap is private."
12044300,2,0,0,java.util.HashMap,Replace the HashMap with a ConcurrentHashMap.
12044408,2,1,3,java.util.HashMap,"BTW, Hashtable is not used now for hashed collections, has been superceded by HashMap :)"
12048844,2,0,1,java.util.HashMap,"You can create a Map of JButton's Name to the JButton Object Map<String, JButton> mbutt = new HashMap<String, JButton>(); And you can access the String and JButton by iterating over it like this."
12051876,2,1,3,java.util.HashMap,"one way to do it would be to create a new instance of HashMap ubermap, iterate over the ArrayList<HashMap> and call putAll() method of ubermap, one map at a time."
12051879,2,0,0,java.util.HashMap,You can use for-each loop and add maps one by one from list in one hashmap using HashMap.putAll()
12052076,1,0,2,java.util.HashMap,I am thinking of using HashMap or H2 database.
12052262,2,0,0,java.util.HashMap,The problem with using a HashMap for storing objects is that you would run into issues when your site becomes too big for one server and would need to be clustered in order to scale with demand.
12052262,2,0,0,java.util.HashMap,Then you would face problems with how to synchronise the HashMap instances on different servers.
12052137,2,0,1,java.util.HashMap,"So don't use a database, simply store them in a ligth memory structure (HashMap for example)."
12052137,2,0,1,java.util.HashMap,You may need to implement a way to clean your HashMap if you don't want to keep sessions in memory when the user left from a long time.
12675923,2,0,0,java.util.HashMap,"Depending on the cache ttl or its state (warm, cold) I would render either the actual content from within the cache tag or its cached version which could be stored in a HashMap."
12061520,2,0,2,java.util.HashMap,HashMap.class is the only information available to objectMapper at runtime.
12061520,2,0,2,java.util.HashMap,"Better yet, map your JSON into actual model classes, not a HashMap."
12067475,1,0,0,java.util.HashMap,Okay I want to have custom user defined objects as keys in my HashMap instead of say String.
12067530,2,1,5,java.util.HashMap,"If you have a mutable key in a HashMap, then it will end up in the wrong bucket, which totally breaks the Map."
12069877,1,0,6,java.util.HashMap,"Iterating over this set   requires time proportional to the sum of the HashSet instance's size   (the number of elements) plus the ""capacity"" of the backing HashMap   instance (the number of buckets)."
12069954,2,1,11,java.util.HashMap,HashSet is imlemented using a HashMap where the elements are the map keys.
12070062,2,0,0,java.util.HashMap,The elements are dispersed inside the underlying HashMap which is backed by an array.
12071655,1,0,7,java.util.HashMap,Sending File and HashMap to server in GWT.
12071826,1,0,5,java.util.HashMap,Can you please explain this code snippet from HashMap constructor specifically the line    capacity <<= 1:  code.
12074759,1,0,1,java.util.HashMap,How to display the values of a model that contains a HashMap of objects?
12081376,2,0,2,java.util.HashMap,You can also use a Map (HashMap) with your id as keys and a custom object Translation as value that contains all your line data.
12081376,2,0,2,java.util.HashMap,HashMap already implements Serializable.
12082312,1,0,0,java.util.HashMap,The ObjectOutputStreams these siblings use are taken from a visible HashMap of the siblings.
12085122,2,0,1,java.util.HashMap,"So, if you do not understand the HashSet solution proposed above (or doning the same with a HashMap), think about doing something like this: Create a new ArrayList Take an element and check to see if it exists in the new ArrayList If it is present in the new ArrayList, do nothing."
12091460,2,1,6,java.util.HashMap,This can be accomplished using a separate HashMap that aggregates all enum members.
12098923,2,1,1,java.util.HashMap,"If these are just dummy objects for holding dynamic fields of data, I would be tempted to use a HashMap."
12099900,2,1,5,java.util.HashMap,"Otherwise, if you stick with the HashMap<String, Object> you used in your original code, you'll need to cast it before you call the method: code."
12100202,2,1,6,java.util.HashMap,"Remember that new HashMap<String,Integer>(); is not really a constructor invocation in the same sense of a method invocation: it is the specification of the type to instantiate + constructor arguments."
12101619,1,0,2,java.util.HashMap,"Now, I'm currently using a regular HashMap for this implementation."
12104975,1,0,2,java.util.HashMap,Issues with Java HashMap and key Object I rolled myself.
12104975,1,0,2,java.util.HashMap,"So, I'm trying to use a HashMap to map my own Object to a String value."
12104975,1,0,2,java.util.HashMap,"Later on, based on (independent) user input, I try to query the HashMap using a RouteHeadsignPair Object."
12104975,1,0,2,java.util.HashMap,"If the hashCode() is the same for newKey and foundKey and foundKey.equals(newKey) returns true, shouldn't HashMap.get(key) return a value and containsKey() return true?"
12109185,1,0,6,java.util.HashMap,"Java Gurus,  Currently we have a HashMap<String,SomeApplicationObject> which is being read frequently and modified occasionally and we are having issues that during the modification/reloading, Read operation returns null which is not acceptable."
12120525,1,0,3,java.util.HashMap,"In particular my question regards the type of object sent between client and server with InputObjecStream/OutputObjectStream I had 2 ideas:  Using a  ""generic message"" object, with 2 attributes: a task identifier and an HashMap without generics,  able to carry various type of parameters requested for executing the task."
12121816,1,0,5,java.util.HashMap,Why would a higher load factor in HashMap increase lookup cost?
12121816,1,0,5,java.util.HashMap,"From JavaDoc of HashMap :  As a general rule, the default load factor (.75) offers a good   tradeoff between time and space costs."
12121816,1,0,5,java.util.HashMap,"Higher values decrease the   space overhead but increase the lookup cost (reflected in most of the   operations of the HashMap class, including get and put)."
12124083,2,0,11,java.util.HashMap,However change students to HashMap and things go bad: code.
12124083,2,0,11,java.util.HashMap,"Because HashMap uses equals()/hashCode() to compare instances, fetching value by new Student(22) key fails and returns null!"
12125623,2,1,1,java.util.HashMap,Use HashMap: code.
12128430,2,1,7,java.util.HashMap,"Here is a quote from the HashMap java docs:  The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations."
12128430,2,1,7,java.util.HashMap,"If many mappings are to be stored in a HashMap instance, creating it with a sufficiently large capacity will allow the mappings to be stored more efficiently than letting it perform automatic rehashing as needed to grow the table."
12128569,2,0,0,java.util.HashMap,You can then put each line into a HashMap with the country as key.
12132880,1,0,9,java.util.HashMap,"Object in Java has hashCode method, however, it is being used only in associative containers like HashSet or HashMap."
12133455,1,0,0,java.util.HashMap,Maybe HashMap is the wrong type to use.
12133663,2,1,2,java.util.HashMap,HashMap): code.
12133876,1,0,2,java.util.HashMap,But I'm thinking maybe it is better to create a service in Android that instantiates a class that store a HashMap of contacts and leave it in memory for watching it constantly updating.
12134687,1,0,1,java.util.HashMap,How to add element into ArrayList in HashMap.
12134687,1,0,1,java.util.HashMap,How to add element into ArrayList in HashMap?
12136863,1,0,6,java.util.HashMap,Could not understand implementation of clear method  of HashMap in java.
12136972,2,1,4,java.util.HashMap,The HashMap class provides readObject and writeObject which renders the transient modifier moot.)
12136956,2,0,2,java.util.HashMap,"It may be because the table field is declared as transient, so that it's not part of the persistent state of the HashMap object."
12137518,1,0,3,java.util.HashMap,"I'm saving details of product in a map and adding in  ArrayList< HashMap< String,String >> and setting in to a custom list adapter."
12137750,2,0,5,java.util.HashMap,"You can implement a Comparator<Map<String, String>> or Comparator<HashMap<String, String>>  How sort an ArrayList of HashMaps holding several key-value pairs each?"
12141713,2,1,9,java.util.HashMap,"Even the simplest HashMap is threadsafe for concurrent reads, given the map is not mutated anymore."
12142317,2,0,1,java.util.HashMap,You can use HashMap and AtomicInteger.
12142317,2,0,1,java.util.HashMap,"Results:  The result value should be 5000000,actually is5000000  Or HashMap and synchronized, but much slower than the former code."
12143500,1,0,2,java.util.HashMap,"I have a HashMap<String, Object> that looks like this when I call .toString() on it: code."
12143500,1,0,2,java.util.HashMap,"Is there a common convention used to isolate a ""nested"" HashMap and use it as its own one-dimensional map?"
12154840,2,1,1,java.util.HashMap,where titleMap is a HashMap that is loaded from a DB in the Filter's init() method.
12146726,1,0,1,java.util.HashMap,Java storage and lookup of HashMap in HashSet.
12146726,1,0,1,java.util.HashMap,I am having trouble removing a HashMap entry.
12148107,1,0,0,java.util.HashMap,In my code I use a HashMap that has a key:value pair in which I update a JSONArray to be the new video type.
12148227,2,0,3,java.util.HashMap,Instead of HashMap use LinkedHashMap which preserves the insertion order.
12148192,2,1,1,java.util.HashMap,"unfortunately, the JSONObject does not preserve the order of the internal elements (it uses a HashMap internally)."
12151580,1,0,3,java.util.HashMap,This is the HashMap structure code.
12151816,2,1,3,java.util.HashMap,"Additionally, you can have your keys sorted by using a TreeMap as opposed to a HashMap, merely by doing TreeMap.keySet..."
12158447,1,0,5,java.util.HashMap,Why doesn't the  ConcurrentSkipListMap constructors allow us to set the initial capacity like HashMap does ?
12158559,2,1,6,java.util.HashMap,The HashMap is backed by an array (contiguous memory space) for which it makes sense to set an initial capacity because going over the initial size of this table cause the HashMap to reallocate a new table with an increased size which is very costly.
12160827,2,1,1,java.util.HashMap,You can override the hashCode and equals of HashMap.
12160827,2,1,1,java.util.HashMap,"Since HashMap has no order, this is very dangerous but you can do it if you want."
12160827,2,1,1,java.util.HashMap,"BTW: To get an idea of how many different orders you can have for a keys of a HashMap, this blog post gives you an idea using HashSet (which uses the same code) http://vanillajava.blogspot.co.uk/2011/09/order-of-elements-in-hash-collection.html"
12161255,1,0,0,java.util.HashMap,Ideally I could has used a HashMap as I could have grouped my data and stored the data of each group under a key in the map but I can't reference HashMap items by a simple position as I can with an ArrayList; it's only logical.
12166122,2,0,1,java.util.HashMap,The efficient way is to maintain a HashMap with uniqueList as keys and subtr as values.
12170215,2,1,3,java.util.HashMap,"Create a HashMap<Int,Boolean> that marks which keys are currently pressed/depressed."
12171745,1,0,0,java.util.HashMap,I have exposed an api of EJB3 bean as a WebService and it takes HashMap of java as a parameter but while getting value in WebService Bean from hashMap I am getting null value.
12177043,2,0,1,java.util.HashMap,"Also, change the type of input parameter from HashMap to HashMap<String,String>."
12172505,1,0,2,java.util.HashMap,Count number of invocations of HashMap/HashTable.
12172505,1,0,2,java.util.HashMap,I have a java progam in which there are a lot of HashMap/HashTable being used for mapping key-value pairs.
12172505,1,0,2,java.util.HashMap,The approach which I was taking is that I extend the Java HashMap/HashTable classes and introduce a member called count and in the get() and the put() methods increment the count everytime the method gets invoked.
12172505,1,0,2,java.util.HashMap,This would involve a lot of refactoring as I would have to go and remove all the instantiations of the HashMap/HashTables to instead instantiate my extended class.
12172634,2,0,0,java.util.HashMap,The idea would be to override the java.util.HashMap class.
12176031,1,0,1,java.util.HashMap,Hash method in HashMap.
12176031,1,0,1,java.util.HashMap,Possible Duplicate: Explanation of HashMap#hash(int) method   code.
12176324,2,0,0,java.util.HashMap,"Again, this is technically valid according to the hashcode() and equals() contract, but not very proper in a Hashtable-like structure (like HashMap) ""buckets"" are used to place instances inside the map according to their hashcode."
12176324,2,0,0,java.util.HashMap,In an extreme situation a HashMap can be transformed into a linked list like this.
12176280,1,0,0,java.util.HashMap,"I encountered it in this question, Hash method in HashMap."
12177054,2,0,0,java.util.HashMap,"Put your variable set into a HashMap as (key,value) pairs and just retrieve the value for the particular key when user inputs the key."
12178003,2,1,9,java.util.HashMap,Similar discussed in the question Java: iterate through HashMap
12181689,1,0,3,java.util.HashMap,All actions in my program are store in a HashMap.
12182153,1,0,1,java.util.HashMap,"When I iterate over the list and write to the HashMap, Property and Value always get overwritten, so my result looks like this: code."
12183178,2,0,0,java.util.HashMap,"Instead of using HashMap, you should use a LinkedHashMap because it preserves the order you add the elements."
12183191,2,0,2,java.util.HashMap,HashMap is not a sorted or sortable collection.
12183600,2,0,1,java.util.HashMap,"If you are looking for a modern, concurrent version of HashMap then you should be using ConcurrentHashMap which was added in Java 5."
12183873,2,1,1,java.util.HashMap,LinkedHashMap instead HashMap may help if the content is already sorted and in the order you want to display.
12184542,1,0,0,java.util.HashMap,Then can we use HashMap in Jasper to save the trouble of sub report and still keep everything dynamic ?
12188887,1,0,1,java.util.HashMap,I can implement an adjacency list Graph data structure using a Map (HashMap to be specific).
12188887,1,0,1,java.util.HashMap,But I was wondering if anyone can see any drawbacks that a student such as I might have missed in using a HashMap for this?
12189373,2,0,2,java.util.HashMap,"In general, assuming your graph isn't very complex or ""big"" (in the sense of millions of nodes), a HashMap where the key is the node ID and the value is a Set or some other collection of node ID's indicating neighbors of the key node is fine, I've done this for 400,000+ node graphs on an 8gb machine."
12189373,2,0,2,java.util.HashMap,A HashMap based implementation will probably be easiest to implement.
12189181,1,0,1,java.util.HashMap,I am using a HashMap and I add each unique character to the HashMap as the key and the value is the number of repetitions.
12189206,2,0,0,java.util.HashMap,"Also, use char rather than strings for each individual character (as char/Character is the best class for characters, strings for a series of chars)    then do name.charAt(i) rather than name.substring(i, i+1) and change your hashmap to HashMap<Character, Integer>"
12189243,2,0,1,java.util.HashMap,"Use a HashMap<Character,Integer>."
12189243,2,0,1,java.util.HashMap,"thousands of characters or more), consider using an int[] array to count the individual characters rather than a HashMap, with the character's ASCII value used as an index into the array."
12191578,2,1,3,java.util.HashMap,"This can be seen in the source code of the HashSet#contains method, which ultimately calls the following code in HashMap: code."
12191578,2,1,3,java.util.HashMap,"See also this question for more information about a HashMap (which is used internally by a HashSet) Last piece of advise: if you have performance problems, use a profiler to see where the actual bottleneck is located."
12192829,2,1,1,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
12193639,1,0,0,java.util.HashMap,I thought to implement the same using HashMap but was not sure on how to do it.
12194252,2,0,3,java.util.HashMap,In all such cases nothing can replace explicit locks in your code and it is nothing but waste to use this implementation instead of the basic HashMap.
12196517,1,0,1,java.util.HashMap,"HashMap Here is a ""working"" example, which shows what I want to do: code."
12197025,2,1,1,java.util.HashMap,You must create javax.xml.bind.annotation.adapters.XmlAdapter for HashMap.
12201875,1,0,0,java.util.HashMap,HashMap to JsonSting?
12201875,1,0,0,java.util.HashMap,"I want to convert a hashMap to JSON String and send it to GWT server My HashMap is like HashMap<String, CustomProperties) CustomProperties is the class with different parameters."
12201875,1,0,0,java.util.HashMap,This HashMap is property of file .
12203579,2,0,0,java.util.HashMap,"However, there is a related and a long ago answered question: GWT HashMap to/from JSON for details."
12207499,1,0,0,java.util.HashMap,"I'm mapping each pair of types SOURCE -> TARGET using a HashMap: HashMap , HashMap < Class< ?"
12207499,1,0,0,java.util.HashMap,My problem is that I need put in that HashMap a key to java.util.Collections$UnmodifiableMap.
12207499,1,0,0,java.util.HashMap,Is impossible to put a key java.util.Collections$UnmodifiableMap.class on the adapters HashMap :(  Someone can help me?
12207898,2,0,1,java.util.HashMap,I put the index to source on HashMap adapters using: java.util.Collections.unmodifiableMap(new HashMap<>()).getClass().
12207559,2,1,1,java.util.HashMap,Would it help to wrap the UnmodifiableMap in a HashMap?
12209857,2,0,1,java.util.HashMap,"So for example if o is a HashMap the cast will fail immediately, but if it's a List<Integer> it won't fail... until some later time when you try to treat an element of lst like a String."
12211785,2,0,1,java.util.HashMap,"I would use a HashMap instead of an array, because it is better suited for this kind of key/value structures: code."
12212617,2,1,2,java.util.HashMap,"I would loop through the attributes, split key and value and build a HashMap for each array."
12214831,2,1,1,java.util.HashMap,Then you can have a TreeMap (if you want order by prefix) or a HashMap (if you prefer to find the longest prefix first and keep trying with one char less each time).
12215930,2,0,3,java.util.HashMap,"As a small improvement I'd suggest that you explicitly specify map type parameters, and use Map instead of HashMap for the TypeToken."
12222981,1,0,0,java.util.HashMap,Sending HashMap to SQL DB.
12226130,1,0,6,java.util.HashMap,Count how many HashMap entries have a given value.
12226196,2,0,11,java.util.HashMap,"I'd just use the Collections.frequency() method on the HashMap values, like this."
12228279,2,0,3,java.util.HashMap,"Update: Since indexOf could take some time if the list is unsorted, and since this method would be called very often, it may be better to first store the indices of the objects in a Map, i.e. create a HashMap {item: list1.indexOf(item)} and use this map in the compare method."
12229577,1,0,1,java.util.HashMap,java HashMap sorting  .
12229577,1,0,1,java.util.HashMap,"In my project, I have taken a HashMap like this  HashMap degree = new HashMap();  Suppose I have: code."
12229577,1,0,1,java.util.HashMap,"Now I have to Sort this list according to given Integer values  Sorted HashMap Should be :  {a=5, f=5, c=4, e=4, b=4, d=2}  How I can do this ?"
12229603,2,0,9,java.util.HashMap,A HashMap is an unordered collection.
12229603,2,0,9,java.util.HashMap,"If you want to prepare a sorted list by the sort order of the values, you'll have to create an appropriate object, such as an ArrayList<Map.Entry<String,Integer>>, iterate over your HashMap and insert all the entries, and then call Collections.sort with a collation function."
12229625,2,0,3,java.util.HashMap,"If you want sorted map, HashMap isn't the best approach."
12230504,2,0,2,java.util.HashMap,"Notice above I didn't have to type HashMap<Integer, List<WordValues>>; instead, I merely typed HashMap<>, taking advantage of the new diamond operator."
12232217,2,0,5,java.util.HashMap,you could use a HashMap - see here for more info!
12232227,2,0,2,java.util.HashMap,"In Java, in practice, every class that implements Map can be used as an associative container, since they can map keys to values (TreeMap<K,V>, HashMap<K,V>, and so on)"
12232232,2,1,3,java.util.HashMap,"Java doesn't support associative arrays, but you could use a HashMap: code."
12233197,2,0,1,java.util.HashMap,"Also, It'd probably be better to use something like a HashMap to store questions + answers."
12233391,1,0,0,java.util.HashMap,How to iterate HashMap>.
12233391,1,0,0,java.util.HashMap,How to print ArrayList from HashMap?
12238743,2,0,0,java.util.HashMap,You're looking for a String... You'd better use a HashMap I think...
12238734,2,1,7,java.util.HashMap,"Similarly, TreeSet and HashMap are particular implementations of sets and maps, respectively."
12239487,1,0,0,java.util.HashMap,Is a HashMap a proper data structure.
12239487,1,0,0,java.util.HashMap,I store in a HashMap 3 types of object.
12239487,1,0,0,java.util.HashMap,"The HashMap string key keeps the type of object (a subclass of Car), the second element stores in array the objects that have e.g."
12239487,1,0,0,java.util.HashMap,The four main things I have to do are:  Check if certain ID exist in HashMap when there is no information provided about its type Print elements of certain ID given the type.
12239487,1,0,0,java.util.HashMap,"""true"";  Is the HashMap the proper structure?"
12239606,2,0,0,java.util.HashMap,"A HashMap is the right data structure for the job, but in your case you might consider using two HashMaps: One holding the relation 'Car Type' -> 'Cars of that Type', and a second one for the relation 'ID' -> 'Car with that ID'."
12240904,1,0,0,java.util.HashMap,Adding Integers to HashMap.
12240904,1,0,0,java.util.HashMap,I have a HashMap to which I am adding integers from an array.
12240904,1,0,0,java.util.HashMap,When I iterate through the HashMap to get the keys in the HashMap they seem to be in random order.
12240916,2,1,4,java.util.HashMap,"Indeed, HashMap returns entries in a nondeterministic (unpredictable/unreliable) order."
12240919,2,0,2,java.util.HashMap,"From the JavaDocs  This class (HashMap) makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time  You can use a SortedMap if you'd like them in ""natural order""."
12241081,1,0,0,java.util.HashMap,Possible Duplicate: Is a HashMap a proper data structure   I have to do 2 things and I don't know how without iterating throughout whole collection which doesn't seem right.
12241081,1,0,0,java.util.HashMap,"I have to find out if in ArrayList of a specific HashMap key (the first String in the HashMap) sits objects with a value of color ""red""."
12241081,1,0,0,java.util.HashMap,The same thing for the whole HashMap (without information of HashMap key.)
12242688,1,0,0,java.util.HashMap,"So, when I retrieve a element from HashMap<String,?>, String#equaqls is invoked."
12242688,1,0,0,java.util.HashMap,LogUtils break line(Example: key1=value1\tkey2=value2\t...kn=valuen) like it into a HashMap.
12247434,2,0,1,java.util.HashMap,"But for a real production project I would make 3 changes:  in data base and any resource code add a finally block and close each connection (you have only 1) in  separate try-catches or you will get con leaks in Data base: use a shared connection pool in the Product getById if products are doing to be reused cache them in a HashMap, if already loaded then return that instead if making a new object every time."
12247806,1,0,5,java.util.HashMap,JSTL get value of a HashMap by key (Integer).
12247806,1,0,5,java.util.HashMap,I have this HashMap: code.
12248555,2,0,1,java.util.HashMap,"Thus, HashMap<int,Object[]> or    Hashtable<int,Object[]> may be useful for your purpose."
12248555,2,0,1,java.util.HashMap,You can see differences between HashMap and HashTable here.
12248916,1,0,0,java.util.HashMap,Android: Merging JSON and HashMap data.
12249321,2,0,5,java.util.HashMap,Here's the relevant part of the code that is used by HashSet#contains() (note that HashSet is backed by a HashMap): code.
12249334,2,1,10,java.util.HashMap,"If this invariant is not respected, then HashMap, HashSet and Hashtable will not work properly."
12251337,1,0,0,java.util.HashMap,"I am using java.util.HashMap for association between a contact Name and a list of phone numbers associated with the contact so it is of type String, List<String>."
12251493,2,0,0,java.util.HashMap,"If you created a degenerate class that simply returns 1 for hashCode(), HashMap will still work to spec, it will just perform terribly and turn in to a simple list."
12251375,2,1,3,java.util.HashMap,"In a standard HashMap, if you put another value with the same key, it replaces the first one."
12251375,2,1,3,java.util.HashMap,Regarding your question in edit : This is a feature of HashMap that the first value with a given key is erased by the new one.
12251375,2,1,3,java.util.HashMap,"So ""Mexico"" is removed from the HashMap when you add ""New Mexico""."
12251375,2,1,3,java.util.HashMap,"If you want to have more than one value for a given key, use a MultiMap (or simply use a HashMap<Integer, List<String>> but the put operation is a little more tedious)."
12251424,1,0,4,java.util.HashMap,I'm trying to test a class that stores objects class types in a HashMap to a particular method to be used later.
12253582,2,0,0,java.util.HashMap,"According to the reference, only equivalents for ArrayList and HashMap are provided."
12255929,2,1,1,java.util.HashMap,"ArrayList and HashMap are most likely supported because they're the closest to any implementations in native JavaScript, namely Arrays and Objects."
12256199,2,1,8,java.util.HashMap,"Also, I'd recommend programming to interface by using the Map type in your public declarations rather than HashMap specifically."
12256199,2,1,8,java.util.HashMap,Only reference the implementation type (HashMap in this case) when it's instantiated: code.
12259201,2,0,0,java.util.HashMap,"If it was for singletons you could initialize an HashMap ""xml""=>generateXML singleton After second though, you may modify your String attribute for  differents Type classes MyTypeXML, MyTypeJSON, ... and then use method with the same name but different type."
12273964,2,0,1,java.util.HashMap,Memory  BasicDynaBean uses a  HashMap to store keys/values.
12273964,2,0,1,java.util.HashMap,"Speed  To access the different fields, it invokes get/put methods on HashMap."
12263781,2,1,3,java.util.HashMap,It basically saves all the Listeners you add in a HashMap and removes them when you call removeAllListeners.
12263781,2,1,3,java.util.HashMap,"In this case, the old Listener will be replaced in the HashMap, but not removed from the StyledText."
12272598,2,0,0,java.util.HashMap,"I don't think HashMap is really the right data structure, perhaps consider making a class of players that contain a collection of 'Buffs', your Game could either maintain multiple lists of infected players but it may be simpler to find that player in a single list."
12274548,1,0,0,java.util.HashMap,"I am working on small android application,I want to display newly added items on list view .I am fetching the items from database storing in ArrayList<HashMap<String,String>>() because I used SimpleAdapter .I am getting the newly added elements into  ArrayList<HashMap<String,String>>() but not displaying on listview even though I used notifyDataSetChanged() to update listview.Please help me to solve this problem."
12276324,1,0,2,java.util.HashMap,javax.xml.ws.WebServiceException: class do not have a property of the name return when returning HashMap in web service.
12276324,1,0,2,java.util.HashMap,I have simple web service in glassfish 3.2.2 which only creates a file based on random UUID and saves it in the docroot folder then return result inside HashMap: code.
12276324,1,0,2,java.util.HashMap,"I have to mention that when I return int instead of HashMap<String, String> it works fine and I can run the web service without any error."
16886136,2,1,1,java.util.HashMap,"You can't return HashMap, you need to create a wrapper for it."
12284620,2,1,3,java.util.HashMap,"Let's refer to it as a ""map entry"" HashMap.table is an internal array of the HashMap Map implementation, storing lists of ""map entries"" with colliding hashCode modulo values."
12284620,2,1,3,java.util.HashMap,"While a HashMap grows, it may choose to enlarge its internal ""hashmap table"", in order to optimise the distribution of ""map entries"" across its ""hashmap table""."
12286986,1,0,4,java.util.HashMap,"If not, are there any guarantees in for example java.util.HashMap?"
12287026,2,1,13,java.util.HashMap,"Since you ask about HashMap, note also that any changes to the map will potentially change iteration order, as a result of the mapbeing rehashed."
12288407,1,0,0,java.util.HashMap,One solution ofcourse  is to wrap  ‘HashMap’ in one class.
12293248,1,0,1,java.util.HashMap,"But since there is a do-while inside the loop, I wasn't sure if the complexity would change since random() could be called multiple times if the value is contained in the HashMap."
12299731,1,0,2,java.util.HashMap,They are defined precisely as for   HashMap.
12299731,1,0,2,java.util.HashMap,"Note, however, that the penalty for choosing an excessively   high value for initial capacity is less severe for this class than for   HashMap, as iteration times for this class are unaffected by capacity."
12299731,1,0,2,java.util.HashMap,So iteration doesn't depend on capacity .What other operations depend on initial capacity for a LinkedHashMap or HashMap in general ?Also is there any concurrent version of the LinkedHashMap in recent JDK versions ?
12300837,2,0,0,java.util.HashMap,"If you look at the HashMap javadoc it states that:  The capacity is the number of buckets in the hash table, and the initial capacity is simply the capacity at the time the hash table is created."
12299832,2,0,4,java.util.HashMap,"Since you're using Player instances as keys of the HashMap, it should implement hashCode() and equals() consistently, so that two Player instances are considered to represent the same player when their playerId's are equal."
12299832,2,0,4,java.util.HashMap,"Also, given the nature of the Map implementation you've chosen, HashMap, the check for existing keys in the Map will be associated to their hashCode, so it is necessary to also implement hashCode to reflect that two Player instances are equal if their playerId's are."
12299832,2,0,4,java.util.HashMap,The following question might be useful to you: Understanding the workings of equals and hashCode in a HashMap.
12299841,2,0,1,java.util.HashMap,"These are two different references, thus the HashMap can't find the player (you just created) and returns null Create & populate HasMap  code."
12306288,2,1,9,java.util.HashMap,I would do the initialisation while setting up the HashMap For example code.
12310284,2,0,2,java.util.HashMap,Here is a small code snippet utilizing a HashMap.
12310284,2,0,2,java.util.HashMap,"The problem you describe asks that you use a HashMap as the basis for a dictionary that fulfills three requirements:  Adding a word to the dictionary Removing a word from the dictionary Checking if a word is in the dictionary  It seems counter-intuitive to use a map, which stores a key and a value, since all you really want to is store just a key (or just a value)."
12310284,2,0,2,java.util.HashMap,"However, as I described above, a HashMap makes it extremely quick to find the value associated with a key."
12310284,2,0,2,java.util.HashMap,"Similarly, it makes it extremely quick to see if the HashMap knows about a key at all."
12310284,2,0,2,java.util.HashMap,"We can leverage this quality by storing each of the dictionary words as a key in the HashMap, and associating it with a garbage value (since we don't care about it), such as null."
12310284,2,0,2,java.util.HashMap,"(In fact, if this weren't a homework assignment explicitly instructing you to use a HashMap, I'd recommend you instead use a HashSet.)"
12314710,1,0,3,java.util.HashMap,First I thought I might use a HashMap to get fast access.
12315291,2,0,3,java.util.HashMap,"You probably want to use a HashMap (or, as the others wrote, an enum, depending on how static your requirements are)."
12322868,2,0,0,java.util.HashMap,Similar to what others have suggested you could instead use a HashMap type construct as such: code.
12327611,1,0,1,java.util.HashMap,Accuracy of a Set with a HashMap backing's contains() method?
12327611,1,0,1,java.util.HashMap,Hi I'm using a Set backed by a HashMap to keep track of what edges I have already traversed in a graph.
12327627,2,0,1,java.util.HashMap,"As it sounds like you're almost building your own data structure / collection, you'll need to consider doing this the same way that the 'Hash' collections do - use a HashMap to store buckets of your hashes - the hash value as the key, and then a collection of whatever as the value to compare against."
12327642,2,1,6,java.util.HashMap,Be aware that Java's HashSet is simply a wrapper for a HashMap where the values are ignored.
12327642,2,1,6,java.util.HashMap,HashMap.containsKey uses the same lookup as get.
12335165,1,0,3,java.util.HashMap,"Following a previous question, which was solved, I can fill multiple comboboxes with a SwingWorker using one HashMap."
12343447,1,0,1,java.util.HashMap,How do you fill a Java HashMap with multiple instances of related subclasses?
12343447,1,0,1,java.util.HashMap,How would I store instances of those subclasses in a HashMap?
12346321,2,1,4,java.util.HashMap,That is because you're adding the same botInfo HashMap to your List.
12346321,2,1,4,java.util.HashMap,"What you would want to do is create a new HashMap inside your while loop, add elements to it and finally add this map to your list."
12346324,2,0,2,java.util.HashMap,You need a new HashMap for botInfo for every record.
12347309,2,0,3,java.util.HashMap,"there no restrictions, bug in the code, for better help sooner post an SSCCE, demonstraded your issue(s) (don't reinvent the wheel) create a DefaultListModel that hold value for JList all updates to the ListModel must be done on Event Dispatch Thread for most complex output to the GUI or array is based on java.util.List, Map, HashMap, then to use JTable with one column based on AbstractTableModel, because JList has implemented reduced methods or features in compare with JTable"
12348375,2,0,1,java.util.HashMap,It's useful to use a synchronized HashMap offered by java collections.
12348741,1,0,1,java.util.HashMap,So how big should the capacity of my HashMap be ?
12349269,2,0,0,java.util.HashMap,"which creates an anonymous class derived from your HashMap, and calls it from a static initialiser."
12365509,2,1,3,java.util.HashMap,"The issue stems from the fact that a Map (being an interface) does not have a default constructor, and while Morphia was correctly assigning the constructor for the concrete HashMap on the outer Map it was failing to resolve a constructor for the inner Map."
12365509,2,1,3,java.util.HashMap,and Declare the maps using the concrete HashMap and not use the Map interface code.
12365509,2,1,3,java.util.HashMap,For those of you who are wondering... specifying the concrete class in either the @Property or @Embedded annotation did nothing to help resolve the constructor for the inner HashMap.
12350816,2,0,3,java.util.HashMap,You can use a plain HashMap or LinkedHashMap with synchronized or ReentrantReadWriteLock.
12351621,1,0,0,java.util.HashMap,"I have HashMap<Employee,Employee> where 1st Employee working under 2nd Employee And 2nd Employee is E+1 of 1st."
12356004,2,1,4,java.util.HashMap,The point of the <T> is if the array desired is of a base class of E. For example if E is HashMap but the desired array was Map[].
12356571,2,0,0,java.util.HashMap,"Even with a HashMap and a very elaborate key structure, you are still looking at O(n)."
12376648,2,1,1,java.util.HashMap,"Just create simple HashMap, and put there references to geo_code nodes with values of ext_id as keys."
12376648,2,1,1,java.util.HashMap,Version with HashMap will take O(n) time and will require only single pass through both xml files.
12356776,1,0,1,java.util.HashMap,"But I want to get the values from a HashMap, and idealy something like this... code."
12378716,2,0,0,java.util.HashMap,I'd suggest using a HashMap that would serve as a probability function (discrete distribution function).
12361893,1,0,0,java.util.HashMap,"Update ArrayListI am trying to update a listview with the content in an ArrayList<HashMap<String, String>>."
12361893,1,0,0,java.util.HashMap,"I dont understand why I am getting the following error:  The constructor SimpleAdapter(Main.getResults, ArrayList<HashMap<String,String>>, int, String[]) is undefined code."
12362245,2,0,3,java.util.HashMap,"Alternatively (assuming they're all strings), you could basically put these values into a map of some sort (eg, HashMap) and just keep a list of the key names for that list."
12362520,2,0,2,java.util.HashMap,"I'm not familiar with Redis, but the Python example appears to be hashing keys, so I'm assuming we're talking about some sort of HashMap implementation."
12365169,1,0,1,java.util.HashMap,"A HashMap can't have duplicate or same key, right?"
12365229,2,0,4,java.util.HashMap,Having those two methods implemented is a prerequisite to being useful as a key in a HashMap.
12371454,1,0,5,java.util.HashMap,HashMap: containsKey() Not true when it should be?
12371454,1,0,5,java.util.HashMap,I am trying to make the program read a file and then create a new file that replaces each letter in the file with some a corresponding value that I pull from a HashMap.
12371454,1,0,5,java.util.HashMap,"The code is in a pastebin below, the key parts to look at is the class constructor, the method encrypt, and the method initDictionary, also can someone tell me why HashMap<char, String> is invalid, is it because I have to use an object?"
12371509,2,0,6,java.util.HashMap,"To make use of a HashMap, you need to override both of these methods in a sensible way, which you can't as array classes are final."
12371666,2,0,0,java.util.HashMap,"You are using a HashMap<char [], String>."
12373282,2,0,0,java.util.HashMap,Can you consider to use a HashSet or HashMap to access quickly your string value (with .contains(string))?
12373148,1,0,1,java.util.HashMap,Is the HashMap going to be reinitialized every time I need a value from it?
12373734,1,0,0,java.util.HashMap,Design implementation about the way of using HashMap.
12373734,1,0,0,java.util.HashMap,I am trying to save the primary to secondary accounts information in the HashMap.
12374181,2,0,2,java.util.HashMap,"Then, perhaps you will not even need HashMap."
12374181,2,0,2,java.util.HashMap,"However, you may still want to maintain a Hashmap for quick look up of Accounts: HashMap<Integer,PrimaryAccoount> , where you will store account id and primary account."
12374676,2,1,3,java.util.HashMap,"There are other ways of creating defensive copies as well, including clone() and the HashMap(Map) constructor."
12382457,2,0,1,java.util.HashMap,"As for the data structures, there is nothing wrong with organizing it as an ArrayList<ArrayList<String>> or ArrayList<HashMap<String, Integer>>, as the event IDs are strings."
12378635,1,0,0,java.util.HashMap,"Toggle's with HashMap, How can it be better?"
12378635,1,0,0,java.util.HashMap,"I use a HashMap to accomplish it, but i never use the Boolean."
12380022,1,0,1,java.util.HashMap,Sorting HashMap using absolute values of doubles.
12383606,2,1,3,java.util.HashMap,"An other SO post that describes this, though, in Hibernate: How to persist a HashMap with hibernate"
12385284,1,0,2,java.util.HashMap,How to select a random key from a HashMap in Java?
12385284,1,0,2,java.util.HashMap,"I'm working with a large ArrayList<HashMap<A,B>>, and I would repeatedly need to select a random key from a random HashMap (and do some stuff with it)."
12385284,1,0,2,java.util.HashMap,"Selecting the random HashMap is trivial, but how should I select a random key from within this HashMap?"
12385284,1,0,2,java.util.HashMap,"Similarly, converting the HashMap to an array or ArrayList on every random pick is really not an option."
12385284,1,0,2,java.util.HashMap,"Technically I feel that this should be possible, since the HashMap stores its keys in an Entry[] internally, and selecting at random from an array is easy, but I can't figure out how to access this Entry[]."
12386342,2,0,0,java.util.HashMap,"If you absolutely need to access the Entry array in HashMap, you can use reflection."
12386342,2,0,0,java.util.HashMap,But then your program will be dependent on that concrete implementation of HashMap.
12385633,2,0,1,java.util.HashMap,I'm assuming you are using HashMap as you need to look something up at a later date?
12385633,2,0,1,java.util.HashMap,"If not the case, then just change your HashMap to an Array/ArrayList."
12385633,2,0,1,java.util.HashMap,"Alternatively, could you use a TreeMap instead of HashMap?"
12395363,2,0,0,java.util.HashMap,How about wrapping HashMap in another implementation of Map?
12386664,2,1,1,java.util.HashMap,The operations needed are adding/removing elements in constant time (to keep it up-to-date with the HashMap) and a procedure to select the random element.
12392129,1,0,7,java.util.HashMap,"Disk based HashMap  and vote to close this one if they answer my question and still up to date Update2:  This is not an exact duplicate, I'm looking for a database backed persistence, the other questions are wider (any disk based implementation) Duplicates are not always a bad thing, please read this post by Jeff Atwood before voting to close"
12394643,1,0,0,java.util.HashMap,Adding an element to an a HashMap in an ArrayList of HashMap in Java.
12394643,1,0,0,java.util.HashMap,I have a source HashMap in Java: code.
12394643,1,0,0,java.util.HashMap,I want to traverse this HashMap and work out the lengths of the ngrams stored in the String part of the map which defines the text of each keyword.
12394643,1,0,0,java.util.HashMap,Traversing the source HashMap is easy enough: code.
12394643,1,0,0,java.util.HashMap,But adding the element to the target ArrayList of HashMap is confusing me.
12394643,1,0,0,java.util.HashMap,"m should be an element of a HashMap, not a HashMap in itself."
12394643,1,0,0,java.util.HashMap,"Ideally, I would like to traverse the source HashMap keyWordFrequencies once, and the keywordNgrams ArrayList is initialised to the largest possible ngram size to start with."
12394783,2,0,1,java.util.HashMap,"Since you're dealing with an ArrayList of size 5, I would suggest that when you initialize your ArrayList, do so by adding a new instance of a HashMap at each index."
12394783,2,0,1,java.util.HashMap,"In order to add elements in your ArrayList, here's what you've to do:  Access the specific HashMap for a specified 'n'-gram."
12394783,2,0,1,java.util.HashMap,"This you can do using get(int index) on the ArrayList You would then add the element your returned HashMap and then again do a set(int index, E element) of the same HashMap to your keywordNgrams ArrayList."
12395154,1,0,0,java.util.HashMap,Object in the HashMap are overwritten - java.
12395154,1,0,0,java.util.HashMap,I would like to create an HashMap where the key is a string and the value is a List.
12395154,1,0,0,java.util.HashMap,"The problem is that I have an HashMap where the key is the right one while the value is not the right one, because it is overwritten."
12395154,1,0,0,java.util.HashMap,"You can find an example of the content of the HashMap below: key: p000000383 content: [t0000000000000019231, t0000000000000019232, t0000000000000019233] key: p000000384 content: [t0000000000000019231, t0000000000000019232, t0000000000000019233] The values that are in ""content"" are in the last rows in Mysql table for the same key."
12395237,2,1,5,java.util.HashMap,Putting the list in the HashMap does not make a copy of the list.
12399582,2,0,0,java.util.HashMap,I'd suggest that you split this strcture by new line and with a few simple rules to create a data structure of HashMap-s .
12401499,1,0,1,java.util.HashMap,My question is if java claims HashMap is unordered then why this records are printing in order .
12401744,2,0,0,java.util.HashMap,Of course HashMap can have some internal ordering.
12401744,2,0,0,java.util.HashMap,"The only thing the documentation claim is that you should not rely on order of items in a HashMap, and if you do (based on the result of experiment similar to yours) - well, you have been warned."
12401600,2,0,0,java.util.HashMap,Note that the document says that no specific guarantee regarding maintaining insertions order can be guaranteed in a HashMap.
12401600,2,0,0,java.util.HashMap,This in most cases has to do with when the HashMap internally has be resized.
12401600,2,0,0,java.util.HashMap,"Try playing with the initialCapacity and loadFactor by using this constructor for HashMap(int initialCapacity, float loadFactor) to replicate internal resizing."
12404250,2,1,2,java.util.HashMap,It looks like we're using a static HashMap without any synchronization!
12407809,1,0,1,java.util.HashMap,Their names and numbers are in a HashMap called contacts (number = key) I'm iterating through them and I'm looking to create a list of them for the user to see.
12407966,1,0,1,java.util.HashMap,Each button has an id string so I had hoped to be able to create the listeners when I initialize the scene and store them in a HashMap.
12407966,1,0,1,java.util.HashMap,"I suspected some problems in my HashMap so I created a class variable ocl2 identical to the one above, initialized it in the constructor and tried using it like this: code."
12411961,1,0,3,java.util.HashMap,"I am developing a server for my game, and to communicate between the client and server you need to send packets (obviously), so I did some tests which Collection (or array) I could use best to handle them, HashMap, ArrayList and a PacketHandler array."
12412010,2,0,4,java.util.HashMap,prints for array HashMap ArrayList code.
12414805,2,0,1,java.util.HashMap,"Using a HashMap you will have to iterate over all keys and as soon as a key matches your pattern, then collect that value and keep going until you are done."
12417259,2,0,3,java.util.HashMap,"Create a HashMap<String, MyCustomObject> where the MyCustomObject holds a String and whatever other fields that are needed."
12417275,2,0,0,java.util.HashMap,"Your question isn't very clear, but it sounds like you want to store several data items with a single key in a HashMap?"
12417275,2,0,0,java.util.HashMap,The simple answer is that HashMap isn't designed to do that.
24874224,2,0,0,java.util.HashMap,"In my case I had a method that returned HashMap, which is not supported by JAX-WS."
12423629,1,0,0,java.util.HashMap,"If I define a Map<K,V> map = new HashMap<K, V>() why can't I do something like:    map.put(new MyKey<CustomObject>(), new SomeOtherObject<CustomObject>());  But if I do it via another method it works i.e.:   code."
12423660,2,1,3,java.util.HashMap,"So you need to create a specific map for those types: Map<MyKey,SomeOtherObject> map = new HashMap<MyKey, SomeOtherObject>();."
12426734,1,0,5,java.util.HashMap,Why is my HashMap allowing duplicate keys?
12426734,1,0,5,java.util.HashMap,Hey I'm using a HashMap to keep track of services and service-requests on a BulletinBoard.
12429997,1,0,4,java.util.HashMap,Extending HashMap and synchronizing only puts.
12429997,1,0,4,java.util.HashMap,I recently encountered a class on our code base that extends HashMap and synchronizes the put method.
12429997,1,0,4,java.util.HashMap,"Aside from it being less efficient than using ConcurrentHashMap, what sort of problems may arise with extending HashMap and synchronizing only put(K,V)?"
12429997,1,0,4,java.util.HashMap,"As far as I know, HashMap does its re-size with the put method and since the put is synchronized at the map instance level, the problems encountered during concurrent re-sizing will(probably) not be encountered."
12430103,2,0,5,java.util.HashMap,putAll especially since multiple threads can try and resize your HashMap.
12430400,2,0,2,java.util.HashMap,"In fact, if thread A is attempting to iterate over the HashMap's contents, and thread B calls synchronized put(key, value), the iterator in Thread A will still fail fast and throw a ConcurrentModificationException rather than do something non-deterministic."
12430624,2,1,1,java.util.HashMap,Store it in a HashMap and the keys in a ArrayList Now create a PreparedStatement using the keys from the ArrayList as the columnNames.
12430624,2,1,1,java.util.HashMap,"I guess that would not be hard to do Now given your data in the array, the fact that you know what SQL type they're from the HashMap, you can easily use this information to map the values that you get from your array in the ?"
12431581,1,0,2,java.util.HashMap,"I am wondering why do HashSet uses HashMap, TreeSet uses TreeMap, and LinkedHashSet uses LinkedHashMap internally behind the scene ?"
12431581,1,0,2,java.util.HashMap,The Entry inner class that HashMap has is the following code.
12435764,1,0,0,java.util.HashMap,I have a set of values stored in Map/HashMap.
12440137,1,0,0,java.util.HashMap,"While writing test automation, i was required to leverage the api's provided by the developers and these api accepts HashMap as arguments."
12442935,1,0,15,java.util.HashMap,"I was implementing a Bitmap cache using a HashMap<Integer, Bitmap> and received the following warning in Eclipse:  Use new SparseArray(...) instead for better performance."
12442983,2,0,1,java.util.HashMap,It is intended to be more efficient than using a HashMap to map Integers to Objects.
12444042,1,0,2,java.util.HashMap,HashMap: safe for multithreaded access for multiple readers and one single writer?
12444042,1,0,2,java.util.HashMap,"I'm reading the docs for java.util.HashMap, and it says:  If multiple threads access this map concurrently, and at least one of   the threads modifies the map structurally, it must be synchronized   externally."
12444111,2,0,0,java.util.HashMap,HashMap is not thread safe.
12445332,2,1,2,java.util.HashMap,"Similarly, if you store a thread-unsafe object in the session (like a HashMap for example), and two threads use this HashMap concurrently, you could see erratic behavior."
12445200,1,0,0,java.util.HashMap,Grouping elements in HashMap into certain groups.
12445200,1,0,0,java.util.HashMap,I have a set of elements stored in HashMap.
12446808,2,0,0,java.util.HashMap,"The only thing you can do is to use A map interface' implementation, for example a HashMap."
12574220,2,1,0,java.util.HashMap,I updated this layer so that now every fetched entity is stored in a HashMap by its key.
12574220,2,1,0,java.util.HashMap,"This HashMap is used as a simple cache - when one entity is demanded more than once, it is fetched only in the first case, after that cached value is used."
12574220,2,1,0,java.util.HashMap,This HashMap is cleared when the request is finished.
12450402,1,0,8,java.util.HashMap,"Based on the sample above , the problem can appear when adding / deleting values from the hashmap by multiple threads in the same time, since HashMap is not thread-safe."
12450402,1,0,8,java.util.HashMap,"So my question is if I make the HashMap a ConcurrentHashMap which is thread safe, will the synchronized block stop other threads from accessing locks.get(name) ?"
12452537,1,0,2,java.util.HashMap,How to specify a java.util.HashMap (key ==> value) in wsdl.
12452537,1,0,2,java.util.HashMap,In this example the searchParameter is used as an java.util.HashMap on my client.
12452537,1,0,2,java.util.HashMap,The full WSDL looks like this (at the end I like to replace the xsd:struct by an java.util.HashMap): code.
12452537,1,0,2,java.util.HashMap,Could somebody show me how specify a java.util.HashMap for this kind of use?
12458894,1,0,1,java.util.HashMap,Java - Retrieving objects from HashMap.
12459831,2,1,0,java.util.HashMap,"First, create HashMap<String, ArrayList<String>> map to collect all the data from the file."
15834224,2,0,0,java.util.HashMap,You get an ArrayList<HashMap> when you call SimpleBookmark.getBookmark(reader); (do the cast if you need it).
12469120,2,1,2,java.util.HashMap,"If you're searching, and you can identify a single key on which to search, I'd recommend the HashMap, because it's O(1) for access if you have a key."
26249420,2,0,0,java.util.HashMap,"Constructor: mTags = new HashMap (); Copy constructor: mTags = p.mTags; In PacketParserUtils.ParseMessage(), added code."
12478176,1,0,2,java.util.HashMap,i'm trying to serialize a HashMap on serverside(Tomcat 6.0.29) and to deserealize it on a client-side android application.
12478176,1,0,2,java.util.HashMap,outerTable is a HashMap wich is created exactly before this code-block and it has always correct values.
12482026,1,0,2,java.util.HashMap,ConcurrentHashMap to HashMap.
12482026,1,0,2,java.util.HashMap,I am just wondering... How to cast ConcurrentHashMap to HashMap in an optimal way?
12482258,2,0,4,java.util.HashMap,"A ConcurrentHashMap is not a HashMap (in the strict class inheritance sense), so you cannot perform this cast."
12482258,2,0,4,java.util.HashMap,"If you really want to turn a ConcurrentHashMap into a HashMap, use the constructor HashMap(Map), but this requires creating & populating a whole new Map."
12482258,2,0,4,java.util.HashMap,The usual way you'd write code (unless you really need features unique to HashMap or ConcurrentHashMap is like this: code.
12482258,2,0,4,java.util.HashMap,"The advantage of keeping things general and defining the variable myMap as being a Map instead of a HashMap is that it lets you change the implementation you use, worry-free."
13119343,2,0,1,java.util.HashMap,Use normal HashMap and synchronized block.
12486896,1,0,0,java.util.HashMap,HashMap One key associated to a list.
12486896,1,0,0,java.util.HashMap,I realized that the best way to do this would be HashMap where K is Batch number and V is a List.
12524592,2,1,0,java.util.HashMap,**Note my data is in a HashMap for reasons not explained here but it could have easily been in a simple List.
12495284,1,0,0,java.util.HashMap,Retrieve HashMap after restart of device.
12495284,1,0,0,java.util.HashMap,"I have a HashMap with Integer+Object pairs, but once the device is powered off and on, the list is gone and I need to be able to retrieve the data after, otherwise my HashMap is pointless."
12495284,1,0,0,java.util.HashMap,"I've tried Bundles, extending Serializable with the HashMap and the object that I'm putting in."
12496700,1,0,8,java.util.HashMap,I also try to add the html code as a string in a HashMap but the problem is the same.
12502865,2,0,3,java.util.HashMap,"It's a bit like using a HashMap<Foo, AtomicInteger>."
12504374,2,0,0,java.util.HashMap,If I understand you correctly you just want to only have 1 variable to store all the elements and their masses in which case I would recommend a HashMap.
12506776,2,0,1,java.util.HashMap,"Although this question has no technical value, I have to admit, I've asked myself this a couple of times :) My version is that unlike List (ArrayList), Set (HashSet) , Map (Tree/HashMap) table is not a data structure."
12507446,1,0,3,java.util.HashMap,Sharing HashMap across a JSP app in a clustered environment.
12507446,1,0,3,java.util.HashMap,"For that, the data that was earlier written to the DB is now maintained in a HashMap."
12507446,1,0,3,java.util.HashMap,"However, the HashMap is stored in the ServletContext object."
12507446,1,0,3,java.util.HashMap,"For acquiring a lock for a new user, the HashMap is acquired from the ServletContext object and any operations are then done on it."
12507446,1,0,3,java.util.HashMap,"So if I have a HashMap that is changed in say, node-1 when user-1 acquired lock to object-1, and user-2 logs in, tries to acquire a lock to object-1 but the request hits node-2, I guess, the logic would fail, right?"
12507446,1,0,3,java.util.HashMap,Because node-2 won't have the updated HashMap.
12509701,1,0,0,java.util.HashMap,Java: Last access of 2D HashMap.
12509701,1,0,0,java.util.HashMap,"I have the following structure:  HashMap< String, HashMap< String, String>>  Now i want to know the last accessed element in the 2nd dimension."
12509701,1,0,0,java.util.HashMap,How can I keep track of a 2D HashMap ordering?
12509907,2,1,1,java.util.HashMap,"But you can extends HashMap, override the get to store the key of the get in a list, and then add a method like removeLastGetElemet(), that just get the last element of the list and call a remove(key)"
12516682,1,0,1,java.util.HashMap,HashMap How to replace 1 value of the Object?
12517144,2,0,0,java.util.HashMap,"Create HashMap<Class<Y>, Class<?>>."
12519272,1,0,1,java.util.HashMap,Does Apache CXF support HashMap?
12519276,1,0,1,java.util.HashMap,I have a HashMap that needs to be a Collection from a database that I'd like to send to a view via a Spring Controller.
12519276,1,0,1,java.util.HashMap,I don't want to put this HashMap in the model.addAttribute() because the Spring Model object returns a Map and my JSP needs the collection to be a Collection<Object>.
12519276,1,0,1,java.util.HashMap,"If I set my HashMap.values() in a request.setAttribute, how do I go about dispatching that request variable to the view if my method is returning a String?"
12527710,1,0,1,java.util.HashMap,Can i use HashMap to check for collisions?
12530934,1,0,0,java.util.HashMap,Shared HashMap in Jetty.
12530934,1,0,0,java.util.HashMap,"Currently I'm defining the HashMap as a static ConcurrentHashMap in my resource class, which works fine so far."
12530934,1,0,0,java.util.HashMap,"However, I plan to make the HashMap accessible for potential other resources and servlets."
12536002,2,0,3,java.util.HashMap,If you use HashMap your implementation becomes specific to HashMap but if you use Map you can change it to any Map Implementation in future.
12536032,2,0,1,java.util.HashMap,But if map was of type HashMap then it would alwasy have to be a HashMap (or it's subclass if you subclass it).
12536683,1,0,0,java.util.HashMap,Multiple values for a key in HashMap in Java.
12536683,1,0,0,java.util.HashMap,Is it possible to keep multiple values corresponding to a key in a HashMap?
12536741,2,0,0,java.util.HashMap,"Why not write a domain-specific class that wraps the HashMap, and makes it easier for you to check for existence of a value, number of items per key, etc?"
12538995,1,0,0,java.util.HashMap,"Iterate over HashMap and get ""Lowest"" Integer of the value in the Object."
12554647,1,0,1,java.util.HashMap,ConcurrentModificationException when more then one users is operating on HashMap.
12554647,1,0,1,java.util.HashMap,I have a HashMap which stores ID and Name pair.
12554647,1,0,1,java.util.HashMap,"For each entry of this map, conditionally, I am going to put it in another HashMap."
12554675,2,0,2,java.util.HashMap,"From the java doc of java.util.HashMap:  The iterators returned by all of this class's ""collection view methods"" are fail-fast: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException."
12561091,2,1,6,java.util.HashMap,"You can use a HashMap<String,MyDataObject> - it will be fastest and simplest to use."
12561091,2,1,6,java.util.HashMap,"You can also try and use a trie or a radix tree, but make sure you want to give the time for it by profiling the HashMap solution before you start working on it."
12561098,2,0,1,java.util.HashMap,"Use HashTable or HashMap your structure should look something like this HashMap<String,Bookcontent> where BookContent is a class with attributes word meaning and origin"
12561114,2,0,2,java.util.HashMap,"The obvious answer is ""use a HashMap"", but it is not without caveats."
12563168,2,0,2,java.util.HashMap,Concurent version of HashMap doesn't magically solve all problems with thread-safety as it may seem.
12564464,1,0,1,java.util.HashMap,Iterating HashMap in Android and replacing values.
12564464,1,0,1,java.util.HashMap,"Hi I have a HashMap with {key,value} as {var1:10},{var2:20} etc."
12564870,2,1,2,java.util.HashMap,"Assuming that your first map is of type HashMap<String, Integer> and your second map is of type HashMap<String, String> you could iterate over both maps and perform string replacement: code."
12565117,2,1,3,java.util.HashMap,"If you think a new class is too much then you could just make a HashMap of Objects and store the extra fields as whatever object you like and then add these to the HashMap, making sure the keys match the name of the extra fields and making sure your List is also in the HashMap."
12565117,2,1,3,java.util.HashMap,Deserializing this class or HashMap should return the output you mentioned.
13678141,2,0,0,java.util.HashMap,Then you can set these values to your HashMap.
12574147,1,0,5,java.util.HashMap,Priority Queue for HashMap Object in Java.
12574147,1,0,5,java.util.HashMap,I have created a HashMap object which stores a String as key and corresponding value as int.
12574147,1,0,5,java.util.HashMap,Now I want to have  a Priority Queue which have all the String present in HashMap object with value as reference for assigning priorities.
12577250,1,0,0,java.util.HashMap,How to get the number of occurrences of a key in HashMap?
12577250,1,0,0,java.util.HashMap,"I am trying to do every time before adding a value, I want to check number of occurrences of a key present in the HashMap."
12577333,2,0,0,java.util.HashMap,It is not possible duplicate key in HashMap.
12582967,1,0,0,java.util.HashMap,I have this list of TCP/UDP port numbers and their string description:   http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers now this is in the form of an HashMap with portnumber as the key and string description as the value.
12583025,2,1,2,java.util.HashMap,The HashMap has a guaranteed O(1) access time for get operations.
12583029,2,0,3,java.util.HashMap,A lookup of a HashMap typically takes about 50 ns.
12587084,2,0,1,java.util.HashMap,Perhaps use a HashMap with key of Integer (your id) and a value of DocProperites which consists of text and anotherProperites.
12587084,2,0,1,java.util.HashMap,Then when you are ready to set anotherProperties you can retrieve the object from the HashMap and then set it.
12587084,2,0,1,java.util.HashMap,If you wanted something more dynamic then you could use another HashMap instead of DocProperties.
12587084,2,0,1,java.util.HashMap,The HashMap could then have keys added and removed as you parse.
12587896,1,0,0,java.util.HashMap,Customizing the get method in HashMap.
12587896,1,0,0,java.util.HashMap,Possible Duplicate: Case insensitive string as HashMap key   I have a Hashmap with a String as the key and an integer as the value.
12587943,2,0,1,java.util.HashMap,You can create a wrapper class that will wrap the HashMap and implement the get and put methods.
12588397,2,0,1,java.util.HashMap,"Here is a snippet from the source of HashMap<K,V>: code."
12588802,1,0,4,java.util.HashMap,How does HashMap make sure the index calculated using hashcode of key is within the available range?
12588802,1,0,4,java.util.HashMap,I went through source code of HashMap and have a few questions.
12588802,1,0,4,java.util.HashMap,"Example:   Creating a HashMap with size 10. call put(k,v) three times and assume these 3 occupies bucket loc 7 ,8 and 9 call put 4th K,V pair and following happens   hash() is called with key.hashcode() and hash calculated indexFor is calculated based on hash   Question:  What if the calculated bucket location for the 4th k,v is out of the existing bounds?"
12588866,2,1,2,java.util.HashMap,I don't think HashMap reallocates everything unless it needs to.
12588871,2,0,1,java.util.HashMap,What happens when there is a collision depends on the implementation (not sure for Java's HashMap).
12588871,2,0,1,java.util.HashMap,My guess would be that HashMap uses the list bucket approach.
12589199,1,0,1,java.util.HashMap,How to display Generic HashMap entries.
12592517,2,0,0,java.util.HashMap,"And yet another possible implementation (similar to some of the other solutions, but with a HashMap)."
12593091,2,1,1,java.util.HashMap,"If you want to avoid dupplicates, you can use HashMap instade of ArrayList as follows: code."
12593091,2,1,1,java.util.HashMap,"If you have dupplicate carriers with same name but different values, only the last one will be kept in the HashMap."
12593783,2,0,0,java.util.HashMap,"You can use a HashMap instead of a Vector to store the links and their levels (since you need to recursively get all links down to level 4) Also , it would be something like this(just giving an overall hint) : code."
12594049,1,0,0,java.util.HashMap,How do I get the list of possible values in a HashMap?
12594049,1,0,0,java.util.HashMap,"I've used a HashMap to map each string to the number of times it appears in the array, and my idea after that was to use a for loop to iterate through each number of appearances, however I'm unable to find a command that returns the number of unique values in a Hashmap."
12595097,1,0,1,java.util.HashMap,java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Comparable.
12595097,1,0,1,java.util.HashMap,But I am facing error :java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Comparable
12595204,2,0,0,java.util.HashMap,HashMap is not Comparable.
12595204,2,0,0,java.util.HashMap,You can extend HashMap and implement Comparable interface.
12595206,2,1,4,java.util.HashMap,This list contains list HashMap And HashMap does not implements Comparable.
12595206,2,1,4,java.util.HashMap,that is why it populate java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Comparable
12595256,2,0,1,java.util.HashMap,"Yes, Because  java.util.Collections.sort(arList); arList contains the HashMap hashList = new HashMap(); unfortunately hashMap did not implement the Comparable or Comparator interface."
12595163,2,0,1,java.util.HashMap,"First of all, your code seems weird, you are adding a newly created HashMap object into your list in each iteration of the loop."
12595163,2,0,1,java.util.HashMap,Maybe you should specify your ArrayList like this: ArrayList<HashMap> But that is not enough.
12595163,2,0,1,java.util.HashMap,"If you have a list of a specific type and wanna sort them, then your type (in this case HashMap) should implement Comparable interface."
12595163,2,0,1,java.util.HashMap,HashMap doesn't implement Comparable interface.
12595163,2,0,1,java.util.HashMap,"Read the API: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html You should implement your own Comparator as a solution, I guess."
12595169,2,0,1,java.util.HashMap,"If you want to sort List<HashMap>, you need to have a Comparator to sort.. You cannot sort it using natural ordering.. Because your HashMap does not implement Comparable interface.. You can only compare two instances if they are comparable.. *EDIT: - Well, I think you will need two Comparators here.. One for your List and one for your HashMap inside the List.."
12595175,2,0,1,java.util.HashMap,"In your case you are trying to sort an ArrayList that contains a HashMap, which does not implements Comparable interface."
12595177,2,0,1,java.util.HashMap,HashMap does not implement the Comparable interface (http://docs.oracle.com/javase/6/docs/api/).
12595192,2,0,1,java.util.HashMap,"For something to be sorted, it must implement the Comparable interface, which is something which the HashMap does not."
12595192,2,0,1,java.util.HashMap,"If you really need to be able to compare HashMaps, you could create your own HashMap, something like so: code."
12596453,1,0,1,java.util.HashMap,How to update a value for a key in HashMap?
12596453,1,0,1,java.util.HashMap,"I am having HashMap like this, code."
12597967,1,0,0,java.util.HashMap,Removing a key-value pair from HashMap is giving an error during for loop.
12597967,1,0,0,java.util.HashMap,I have a set of data stored in a HashMap.
12598970,2,0,0,java.util.HashMap,Notice that this way you are iterating over a map with n keys :- n * n times You would rather want to find a better way than using a HashMap for what you want to do..
12598098,1,0,1,java.util.HashMap,How do I get object from HashMap respectively?
12598098,1,0,1,java.util.HashMap,"I make the personal profiles database,and I use HashMap to collect profile."
12598098,1,0,1,java.util.HashMap,"private HashMap<String, Profile> database; but I want to write profile data to text files code."
12598098,1,0,1,java.util.HashMap,But I don't know how to get list of key to looping  How can I get data from HashMap respectively with another ways?
12598512,1,0,0,java.util.HashMap,I want to acquire images from a scanner and place them in a HashMap with names in a certain order of sequence  performed by SwingWorker Class called ScanningService.
12602576,2,0,1,java.util.HashMap,You can also use HashMap instead of array list.
12602576,2,0,1,java.util.HashMap,"You'll have to just check whether you have a start(eg ""audi"") in a HashMap,if not you can add it to the Graph and also the HashMap,if it is already there in HashMap you can skip adding it both."
12599676,1,0,1,java.util.HashMap,But it comes back with : 09-26 11:15:27.813: E/AndroidRuntime(20434): java.lang.ClassCastException: java.util.HashMap cannot be cast to java.util.List Any ideas?
12599817,2,0,0,java.util.HashMap,For HashMap you can't predict the order in which keys will be returned.
12599720,2,0,1,java.util.HashMap,java.util.HashMap does not implement java.util.List
12601648,2,0,2,java.util.HashMap,There's no order for keys in HashMap.
12607001,2,1,3,java.util.HashMap,A HashMap of WeakReferences to Objects You can also use a HashMap of WeakReferences to Objects with Long   keys.
12610911,1,0,2,java.util.HashMap,I thought that CardLayout uses a HashMap to store its pairs (panels and associated string identifiers) but looking through the CardLayout class I noticed that it actually uses a Vector.
12612438,2,1,2,java.util.HashMap,Also note that a HashMap wouldn't be appropriate for a CardLayout as it needs to preserve the order of the cards so that you can use first/next/previous etc.
12611693,2,0,2,java.util.HashMap,OR  You could use a HashMap of factory method(s) if you want to stick with the explicit route.
12612986,2,1,1,java.util.HashMap,"Otherwise, if you have access to createGraphics() source code, two choices:  If some method clients need indexes as returned object whereas other clients need RGB values as returned, you could build a HashMap<Integer, RGB> as return."
12612888,1,0,9,java.util.HashMap,All HashMap type values erased in generic class?
12612888,1,0,9,java.util.HashMap,"I understand type erasure, but m is a HashMap<Integer,Integer>, it should not depend on the type <T> at all."
12613101,2,1,6,java.util.HashMap,"I don't have an explanation why, but the behavior does seem to be correct-by-definition.§4.8 ""Raw Types"" of the Java Language Specification explicitly states that:  The type of a constructor (§8.8), instance method (§8.4, §9.4), or non-static field (§8.3) M of a raw type C that is not inherited from its superclasses or superinterfaces is the raw type that corresponds to the erasure of its type in the generic declaration corresponding to C.  In your example, the raw type C is Test (as opposed to Test<Object> or Test<Integer> or whatnot) and the non-static field M is m. As a result of the above rule, the type of t.m is the raw type HashMap, rather than HashMap<Integer, Integer>, so the return-type of t.m.get(Object) is Object rather than Integer."
12613820,2,1,0,java.util.HashMap,"But, in any case HashMap is not a proper choice for you."
12623418,2,1,3,java.util.HashMap,"So if you have Map<Category, List<Person>> categoryLookup = new HashMap<Category, ArrayList<Person>>(); you can do List<Person> values = myCategoryLookup.get(someCategory); and then iterate over the values."
12626135,1,0,6,java.util.HashMap,"Uses less memory than HashMap<Integer,T> (as this autoboxes the keys and probably does not take advantage of the scalar key type)."
12626634,2,0,0,java.util.HashMap,The results:  HashMap size: 1017504 TIntObjectMap size: 853216 IntHashMap size: 846984 OpenIntObjectHashMap size: 760472
12628741,2,1,6,java.util.HashMap,"If you want to have all read and write actions to your HashMap synchronized, you need to put the synchronize on all methods accessing the HashMap; it is not enough to block just one method."
12628685,2,0,9,java.util.HashMap,"Secondly, Collections.synchronizedMap It's just simple HashMap with synchronized methods - I'd call it deprecated dute to CHM"
12633190,2,0,0,java.util.HashMap,ArrayList- Oracle(Java) docs HashMap- Oracle(Java) docs  You can see the official documentation for those two classes there.
12634918,1,0,0,java.util.HashMap,what should be used HashMap or HashSet?
12634918,1,0,0,java.util.HashMap,Then which collection would be preferable for use between HashMap and HashSet  and why?
12634974,2,0,1,java.util.HashMap,A HashSet is in itself an implementation of the HashMap so in the end it does not really make much of a difference.
12634974,2,0,1,java.util.HashMap,"Assuming that each user has a unique ID, you could use a HashMap with ID's as a key and the entire User object as value."
12635247,2,0,1,java.util.HashMap,HashMap and HahSet use diffrent data structure to store objects.
12635247,2,0,1,java.util.HashMap,In a HashMap you store objects in key-value pairs In a HashSet you store only the keys as objects.
12635247,2,0,1,java.util.HashMap,HashMap is the implementation of Map interface.
12635247,2,0,1,java.util.HashMap,HashMap Stores data in form of key value pair.
12635247,2,0,1,java.util.HashMap,HashSet does not allow duplicate values/objects HashMap allows duplicate value/objects but would not allow duplicate key.
12635247,2,0,1,java.util.HashMap,"HashMap is faster than hashset because the values are associated to unique key In HashSet, member object is used for calculating hashcode value which can be same for two objects so equal () method is used to check for equality if it returns false that means two objects are different.In HashMap, hashcode value is calculated using key object."
12634990,1,0,2,java.util.HashMap,Howto Store 2 combined unique key in a HashMap?
12636223,2,0,0,java.util.HashMap,"Yes, just replace HashMap with Dictionary."
12636239,2,0,0,java.util.HashMap,"Yes, You can do the conversion using a Dictionary instead of HashMap."
12636261,2,0,0,java.util.HashMap,"Note HashMap will accept null key values, where as Dictionary will not."
12636261,2,0,0,java.util.HashMap,"If you really want to support null key values, I'd like to see you reasoning before attempting a perfect .Net HashMap implementation."
12637408,1,0,0,java.util.HashMap,jre1.6.0_27 HashMap values() sourcecode.
12637408,1,0,0,java.util.HashMap,"Today, I opened jre1.6.0_27 HashMap values() method sourcecode code."
12637664,2,0,0,java.util.HashMap,You have to look at the source code of the inner classes KeySet and Values inside HashMap to understand how these work.
12637664,2,0,0,java.util.HashMap,It's an implementation of Set that gets its data from the HashMap.
12646438,2,1,27,java.util.HashMap,HashMap is the best thing to use in a single threaded application.
12650713,2,0,0,java.util.HashMap,"A more general way is to prepopulate a hash map and look up values using the parameter  as the key: Map<String, String> tableNameMap=new HashMap<String, String>(); tableNameMap.put(""param1"",""table1""); tableNameMap.put(""param2"",""table2""); String paramValue=request.getParameter(""test""); String tableName=tableNameMap.get(paramValue);"
12658215,1,0,0,java.util.HashMap,byte array in HashMap of Strings.
12658215,1,0,0,java.util.HashMap,"I am retrieving a map of user date, which dataMap of type HashMap<String, String>, and it has this key value pair, String, and byte[] of size 6."
12658547,2,0,2,java.util.HashMap,The code for HashMap.putAll doesn't know what the parameter types should be ... due to type erasure.
12658316,2,0,0,java.util.HashMap,"While the declaration HashMap<String, String> states that the HashMap is expected to be String->String, the static type checking in the compiler is not airtight (given that it's kind of a kluge tacked onto the previously-existing language)."
12658316,2,0,0,java.util.HashMap,"And there is no dynamic type checking to assure that (A) the HashMap you have really is a HashMap<String, String>, and (B) someone hasn't inserted an array into a HashMap<String, String>."
12658316,2,0,0,java.util.HashMap,"This is because in reality what you have is a HashMap<Object, Object>, so there's no way to implement either dynamic check."
12658595,2,1,4,java.util.HashMap,"A good example of this is the static class Entry<K,V> implements Map.Entry<K,V> used in places like the HashMap class."
12658595,2,1,4,java.util.HashMap,The existence of the Entry class is closely related to the functioning of how HashMap stores/retrieves key/value pair stored as its content.
12658595,2,1,4,java.util.HashMap,"As you can see the Entry class provides functionality only to the HashMap implementation, even though its behaviorally equivalent to a top-level class."
12658595,2,1,4,java.util.HashMap,So it does make sense to package it as part of the HashMap definition itself.
12660570,1,0,0,java.util.HashMap,"In my Google App Engine servlet I have static HashMap that holding all the users profiles objects, currenty 1500 and this number will increase as more users register."
12660590,2,0,1,java.util.HashMap,I would not store this data in the HashMap as it does not really scale if you run on multiple instances and furthermore you use a lot of memory.
12660610,2,0,0,java.util.HashMap,Storing all users in one huge HashMap won't scale (sooner or later you'll have to cluster your application).
12662957,2,0,1,java.util.HashMap,Consider using a HashMap.
12662917,1,0,2,java.util.HashMap,Java HashMap when duplicate keys are inserted.
12662917,1,0,2,java.util.HashMap,I had a very basic doubt with respect to Java HashMap when duplicate keys are being inserted.
12662997,2,1,2,java.util.HashMap,"For instance, if you used a HashSet rather than a HashMap you would get much more peculiar behavior and there'd be no way to fix it."
12663889,1,0,3,java.util.HashMap,HashMap : How to put Object itself as in place of String.
12663925,2,0,0,java.util.HashMap,"If you want to make any object as a key in your HashMap, then that object has to be immutable.. Because, you don't want anyone to change your key, after you add them to your HashMap..  Just imagine, if your keys are changed after insertion, you won't ever be able to find your inserted value.."
12663925,2,0,0,java.util.HashMap,"But if your key is immutable, then if anyone tries to change your keys, he will actually create a new one for himself, but you will still have yours.. That is what happens in case you use String as your key in HashMap(They can't be changed).."
12841702,2,0,2,java.util.HashMap,"From this point now this is simple, for example create a HashMap with key=alias name and value=real existing file path."
12669450,1,0,0,java.util.HashMap,Is there any way to do it using HashMap or anything??
12669601,2,0,0,java.util.HashMap,"Just replace new HashMap<Integer, Object>() with new EnumMap<MyEnum, Object>(MyEnum.class)."
12670328,2,0,2,java.util.HashMap,"If HashMap with id's as keys wouldn't work, then I'd use a HashMap with your object both as key and value."
12672217,1,0,1,java.util.HashMap,Replace ConcurrentHashMap with plain HashMap and it becomes fail-fast.
12680967,2,0,1,java.util.HashMap,I would use a HashMap (it's also a KeyValue-List).
12681168,1,0,0,java.util.HashMap,I tried to use a HashMap but found it was no good because when I rerun my testing code there is a new hashmap each time.
12681168,1,0,0,java.util.HashMap,"FYI: The reason this doesn't work for me is that I want to be able to wrap it in an ""if"" statement; to tell the computer that if the variable called ""GroupName"" already exists then don't do it again.. however every time I run the script I make a call to the function [HashMap idTable = new HashMap();] and I don't know how to NOT make that call because the HashMap isn't saved anywhere.. it is created new each time."
12681168,1,0,0,java.util.HashMap,"HashMap idTable;      try{         ObjectInputStream is = new ObjectInputStream(         new FileInputStream(""C:\Documents and Settings\My Documents\Selenium local\hashmap.dat""));         idTable = (HashMap) is.readObject();     }     catch(Exception e){         idTable = new HashMap();     } AND then:      try{     ObjectOutputStream os = new ObjectOutputStream (         new FileOutputStream(""C:\Documents and Settings\My Documents\Selenium local\hashmap.dat""));         os.writeObject(idTable);         os.close();     }     catch (Exception e){     }   It works."
12681659,2,0,2,java.util.HashMap,"It is a Map, like HashMap but has load and store methods for reading/writing its contents to a file."
12681215,2,1,0,java.util.HashMap,"Two good options to do this are  Using SQL database, research this more via google if you want Via files, simply writing your HashMap database to a file at the end of your program (Do Runtime.addShutdownHook, and pass it a thread whcih stores your hashmap to the file), and have it read from the file at the begining of the code (if the file is nonexistant, make a new one, and store an empty hashmap to it)"
12683749,1,0,11,java.util.HashMap,Method 4 We can use Method 3 with HashMap if we want to remove the constraint of range of integers but then it will need more memory.
12683897,1,0,0,java.util.HashMap,I am trying to get 2D array data from a Java properties file and store these data into a HashMap object.The thing that makes me puzzled is that Eclipse only retrieves only some of the data from the 2D array.
12685386,2,0,0,java.util.HashMap,Use HashMap for any kind of mapping you want.. code.
12686020,2,1,1,java.util.HashMap,HashMap provides the kind of API you are looking for.. You can have a mapping from your item to their type..
12686036,2,0,0,java.util.HashMap,"Use Collection..... - Using Map will be appropriate at this stage... Eg: Map<String, ArrayList<String>>  map = new HashMap<String,ArrayList<String>>(); Or Map<String, String>  map = new HashMap<String,String>();"
12692046,1,0,1,java.util.HashMap,"For now I save parameters' indexes and values into HashMap, but after it I can't make injection into sql query string."
12704721,2,1,1,java.util.HashMap,This is adding the same HashMap each time to the ArrayList: code.
12704721,2,1,1,java.util.HashMap,Create a new HashMap each time within the for and add it: code.
12707769,1,0,1,java.util.HashMap,(please note that I may need to look for those in other age ranges as well so I prefer not to use two different lists for the sake of simplicity of code) In short: My goal is to find a way to search for elements with specific values in HashMap Sample list is  code.
12707838,2,0,0,java.util.HashMap,"You cannot sort a HashMap, it has no order."
12707838,2,0,0,java.util.HashMap,"If you want an ordered HashMap, use LinkedHashMap."
12708601,2,0,2,java.util.HashMap,"By the looks of it you have to obtain the entire string and call a JSONParse#parse() on it, but your code is filling up a HashMap (JSONObject's parent class) with each of the lines of the JSON."
12708668,1,0,0,java.util.HashMap,how to look for an element in HashMap.
12708668,1,0,0,java.util.HashMap,(please note that I may need to look for those in other age ranges as well so I prefer not to use two different lists for the sake of simplicity of code) In short: My goal is to find a way to search for elements with specific values in HashMap Sample list is  code.
12708740,2,0,2,java.util.HashMap,"A HashMap provides a search by key only, so you will have to iterate the entire collection and filter the elements you don't want."
12709723,2,0,1,java.util.HashMap,Try moving the new HashMap<...>-line into the for-loop: code.
12709766,2,1,0,java.util.HashMap,"Since you have your ""HashMap"" initialization outside your loop, you are actually overwriting the same hashmap and putting it back to the arraylist.."
12709766,2,1,0,java.util.HashMap,Try to move your HashMap initialization inside for-loop..
12710572,2,0,3,java.util.HashMap,"HashMap computes the hashcode() of the key, not of the values."
12711242,1,0,0,java.util.HashMap,HashMap - key pair value of property_name and property value.
12713206,1,0,0,java.util.HashMap,Other than heap size what would limit the number of elements a HashMap can hold.
12713206,1,0,0,java.util.HashMap,As per the title - what constrains the number of elements a HashMap can hold and what data structure could be used instead.
12713237,2,0,1,java.util.HashMap,"If that's a limit to you, then you could create your own class which wraps a list of HashMap objects or use a LinkedHashMap."
12713267,2,0,2,java.util.HashMap,The fact that hashCode returns an int instead of a long also prevents HashMap from being efficient much beyond 2^32 entries.
12713282,2,0,0,java.util.HashMap,"Secondly, afaik a HashMap uses lists for their keys."
12713319,2,0,0,java.util.HashMap,The HashMap data structure is backed by an array for the hashtable under the hood.
12713331,2,0,0,java.util.HashMap,With the exception of the heap size that you've already mentioned I do not believe there are any hard limits on the number of items you can place into a HashMap.
12713331,2,0,0,java.util.HashMap,"The behaviour I've described above is the implementation of the HashMap class that comes with the Oracle JRE and may differ on other platforms, and so other platforms may have limitations on the number of items that can be placed into them."
12713331,2,0,0,java.util.HashMap,"It is also worth pointing out that if you are putting more than Integer.MAX_VALUE items into a HashMap, the lookup performance will degrade considerably because the HashMap will have to iterate over the list when trying to find the item."
12713260,1,0,3,java.util.HashMap,How does initial capacity impact the performance of a HashMap.
12713260,1,0,3,java.util.HashMap,"The documentation for HashMap contains the following statement:  Thus, it's very important not to set the initial capacity too high (or   the load factor too low) if iteration performance is important."
12713260,1,0,3,java.util.HashMap,I don't see any method for changing or affecting the load factor of a HashMap
12713292,2,0,2,java.util.HashMap,"When you declare your HashMap as part of the constructor argument, you can provide it with both the initial capacity and the load factor: code."
14211018,2,1,4,java.util.HashMap,"You do need to choose unique identifiers for each row though, so if you are aiming to map it with a table (as you do in C#), make sure that the key of the HashMap is the primary key of the table."
12717895,1,0,11,java.util.HashMap,"When I run/debug the application locally and perform some actions that require access through Jpa/Hibernate (ie, I login or request a List from a JpaRepository) and then shutdown the application, I receive the following messages in my debug output from Tomcat:  Oct 03, 2012 2:55:13 PM org.apache.catalina.loader.WebappClassLoader   checkThreadLocalMapForLeaks SEVERE: The web application [/]   created a ThreadLocal with key of type   [org.springframework.core.NamedThreadLocal] (value [Transactional   resources]) and a value of type [java.util.HashMap] (value [{public   abstract java.lang.Object   org.springframework.data.repository.CrudRepository.findOne(java.io.Serializable)=java.lang.Object@842e211}])   but failed to remove it when the web application was stopped."
12717895,1,0,11,java.util.HashMap,"Oct 03, 2012 2:55:13 PM   org.apache.catalina.loader.WebappClassLoader   checkThreadLocalMapForLeaks SEVERE: The web application [/]   created a ThreadLocal with key of type   [org.springframework.core.NamedThreadLocal] (value [Transactional   resources]) and a value of type [java.util.HashMap] (value [{public   abstract java.util.List   org.springframework.data.jpa.repository.JpaRepository.findAll()=java.lang.Object@842e211}])   but failed to remove it when the web application was stopped."
12717895,1,0,11,java.util.HashMap,"Oct 03, 2012 2:55:13 PM   org.apache.catalina.loader.WebappClassLoader   checkThreadLocalMapForLeaks SEVERE: The web application [/]   created a ThreadLocal with key of type   [org.springframework.core.NamedThreadLocal] (value [Transactional   resources]) and a value of type [java.util.HashMap] (value [{public   abstract java.lang.Iterable   org.springframework.data.querydsl.QueryDslPredicateExecutor.findAll(com.mysema.query.types.Predicate)=java.lang.Object@842e211}])   but failed to remove it when the web application was stopped."
12717895,1,0,11,java.util.HashMap,"Oct 03, 2012 2:55:13 PM   org.apache.catalina.loader.WebappClassLoader   checkThreadLocalMapForLeaks SEVERE: The web application [/]   created a ThreadLocal with key of type   [org.springframework.core.NamedThreadLocal] (value [Transactional   resources]) and a value of type [java.util.HashMap] (value [{public   abstract data.domain.UserAccount   UserAccountRepository.findByUserName(java.lang.String)=java.lang.Object@842e211}])   but failed to remove it when the web application was stopped."
22087022,2,0,4,java.util.HashMap,The complexity for remove is O(N) since the complexity for contains is O(N) (in java's priority queue class) One way this can be made O(logN) in your own Priority Queue implementation is to maintain an auxiliary data structure like a HashMap that maintains the mappings from a value in the priority queue to its position in the queue.
12720116,2,0,2,java.util.HashMap,"If you consider the HashSet/HashMap to have operations that are O(1), then they are O(n)."
12720116,2,0,2,java.util.HashMap,"If you know the size of your input, it is a good idea to set the size of the HashSet/HashMap to it: HashMap(int initialCapacity) constructor does this."
12720025,2,0,0,java.util.HashMap,You can create a HashTable or HashMap as well.
12727414,2,0,1,java.util.HashMap,"In your case the solution is trivial: mark your map as final: final Map<Integer, Float> map = new HashMap<>(); You are probably confused with word final."
18341340,2,0,0,java.util.HashMap,"There may be more methods that you want to reimplement to auto cast from int or Integer to IntegerKey, but you should be able to use the rest of the HashMap functionality normally."
12732806,1,0,4,java.util.HashMap,Declare and Put String array in HashMap in one step.
12732806,1,0,4,java.util.HashMap,I am trying to insert static data into a HashMap in Java like this: code.
12732806,1,0,4,java.util.HashMap,"The only way I found to insert that data into the HashMap is to declare the string array separately and then put it into the HashMap, like this code."
12738216,1,0,2,java.util.HashMap,Sort HashMap with duplicate values.
12738216,1,0,2,java.util.HashMap,"Hi I am using following code to sort my HashMap, it sorts the map correctly but does not count the repeated values, code."
12738216,1,0,2,java.util.HashMap,It is a HashMap and need to be sorted by value.
12739180,1,0,0,java.util.HashMap,need a method to find a value in HashMap.
12739180,1,0,0,java.util.HashMap,I have a HashMap as following: code.
12739224,2,0,0,java.util.HashMap,"Else if you are inserting values into the HashMap and have complete control over it, then keep track of the largest value as you insert values into the HashMap."
12739224,2,0,0,java.util.HashMap,EDIT: You will need to use HashMap either way as shown here
12740198,2,0,1,java.util.HashMap,"create an inner class Word that implements Comparable override public int compareTo(Word w) to make it use occurrences create an array of words of the size of your HashMap fill the array iterating through the HashMap call Arrays.sort on the array  Alternatively, since you only need the top 10, you can just iterate through your Words and maintain a top 10 list as you go along."
12743434,2,1,1,java.util.HashMap,The problem is that you only have a single HashMap.
12743434,2,1,1,java.util.HashMap,"Even though you keep changing the data inside the HashMap, the list productItems just contains 10 references to the single HashMap."
12743434,2,1,1,java.util.HashMap,What you want to do is create a new HashMap for each loop iteration.
12743795,2,1,1,java.util.HashMap,"You will then be able to go through all the items of your JSON array, and for each item, add a new HashMap in your arraylist."
12744471,2,1,4,java.util.HashMap,Most straight-forward is to use HashMap: code.
12746226,2,0,2,java.util.HashMap,"You write a custom class to represent the data content of a row, then you read the rows, creating an instance for each one and putting it into the HashMap with an appropriate key."
12748026,2,0,1,java.util.HashMap,Then I would put the array in a HashMap keyed by that sort ID and the POJO as the val.
12747946,1,0,5,java.util.HashMap,How to write and read a file with a HashMap?
12747946,1,0,5,java.util.HashMap,"I've a HashMap with two Strings Map<String, String> ldapContent = new HashMap<String, String>."
12748356,2,0,6,java.util.HashMap,"since HashMap implements Serializable interface, you can simply use ObjectOutputStream class to write whole Map to file, and read it again using ObjectInputStream class    below simple code that explain usage of ObjectOutStream and ObjectInputStream code."
12748356,2,0,6,java.util.HashMap,"or if you want to write data as text to file you can simply iterate through Map and write key and value line by line, and read it again line by line and add to HashMap  code."
12748356,2,0,6,java.util.HashMap,"NOTE: above code may not be the fastest way to doing this task, but i want to show some application of classes See ObjectOutputStream , ObjectInputStream, HashMap, Serializable, StringTokenizer"
12747984,2,1,8,java.util.HashMap,HashMap implements Serializable so you can use normal serialization to write hashmap to file Here is the link for Java - Serialization example
12748393,1,0,1,java.util.HashMap,Java HashMap implementation hashcode issue.
12748393,1,0,1,java.util.HashMap,Looking through the implementation of the Java HashMap here : http://www.docjar.com/html/api/java/util/HashMap.java.html I noticed the following : The internal data structure used is an array which at each index stores the reference to the first entry in a linked list.
12748471,2,1,4,java.util.HashMap,You are missing the following Javadoc from the HashMap source code: code.
12749517,1,0,8,java.util.HashMap,"This makes perfect sense to me except for the first block where I'd expect a HashMap element to be assignable to Map, and I'd expect HashMap to be a subtype of Map."
12750242,2,1,5,java.util.HashMap,"HashMap<String, String> is assignable to Map<String, String> but without the concrete instantiation of the type variables you can't be sure that an arbitrary HashMap<A,B> is assignable to Map<X,Y>."
12750242,2,1,5,java.util.HashMap,"This will give you the type mirror for Map<?,?>, which all HashMap instantiations are assignable to."
12754704,1,0,0,java.util.HashMap,"org.json: I get this when trying to convert a HashMap into JSON:  java.lang.IllegalAccessException: Class org.json.JSONObject can not access a member of class java.util.HashMap with modifiers ""private""   json-simple: It calls the toString on objects."
12759186,2,0,1,java.util.HashMap,Note that 'reading the session' is like reading an HashMap (so has a minimum cost in term of performances).
12761023,2,0,0,java.util.HashMap,"I would suggest using a HashMap In your case could be HashMap<String, String[]>   map; Then you could get your values like: code."
12761599,2,1,3,java.util.HashMap,"If you need to keep the preserver order of the data, use LinkedHashMap instead of HashMap."
12764179,2,1,3,java.util.HashMap,"Change this to use Map, not HashMap."
12764229,2,0,1,java.util.HashMap,because you declared your map as a Map and not as a HashMap you also must declare your data as: code.
12769606,1,0,3,java.util.HashMap,Is there any way how to get the key (or the whole entry) from a HashMap (or another suitable Map) efficiently?
12770093,2,1,3,java.util.HashMap,Nor does HashMap's public interface.
12770093,2,1,3,java.util.HashMap,"But HashMap's package interface does (in the Sun JDK, at least)."
12770199,2,0,3,java.util.HashMap,"But you couldn't use HashMap, you'd need TreeMap or something, which might negate any memory performance benefits (and your keys would need to implement Comparable)."
12770479,1,0,2,java.util.HashMap,My first idea was to use a HashMap with settings name as key and bool as a value but this does not work for the integer parts.
12770479,1,0,2,java.util.HashMap,I would love to just use HashMap with dynamic values.
12771274,2,0,1,java.util.HashMap,"For temporary data store you cat use something like: HashMap<String, TypeAndValuePare> = ...; Where TypeAndValuePare is: class TypeAndValuePare {      int typeId;      Object value; } Or just use HashMap<String, Object> check the type by instanceof."
12770780,1,0,0,java.util.HashMap,java.lang.OutOfMemoryError: Java heap space and HashMap.
12770780,1,0,0,java.util.HashMap,"How do I make sure that my recursion method, printSyra can return the value early if it has encountered an element that I have calculated before using the HashMap."
12771253,2,1,1,java.util.HashMap,"You can declare internalMap as you have tried, but since Map is an interface, you need to instantiate it with a concrete class type (e.g., HashMap, TreeMap, etc.)"
12772565,2,1,0,java.util.HashMap,"You should rather use a HashMap, to store the Characters with their correspondin frequency: -  code."
12772733,1,0,2,java.util.HashMap,"I have a class which I am trying to use to test HashMap and TreeMap, shown below; code. }"
12773925,1,0,2,java.util.HashMap,"What it does is that it takes an image from the path given, calculates its RGB and stored it in a HashMap."
12774723,1,0,5,java.util.HashMap,HashMap code.
12778154,1,0,1,java.util.HashMap,I get a file personHashMap.ser with a HashMap in it.
12778154,1,0,1,java.util.HashMap,Hope you can Help me.. EDIT: The HashMap includes i.e street=Example Street.
12778154,1,0,1,java.util.HashMap,Now i must update the HashMap in the File.
12779122,2,1,2,java.util.HashMap,Firstly HashMap isn't really an appropriate choice.
12779113,1,0,3,java.util.HashMap,(In normal Map   implementations (like HashMap) two keys k1 and k2 are considered equal   if and only if (k1==null ?
12779113,1,0,3,java.util.HashMap,"But this is not the case with HashMap, where the key and value are stored in the same bucket."
12779241,2,1,1,java.util.HashMap,"The regular HashMap defines an Entry class which combines the key with its value in the same object, and stores entries in buckets."
12781152,2,0,0,java.util.HashMap,"So, use a List as a value in your HashMap.."
12781152,2,0,0,java.util.HashMap,"I have assumed type of key to be Integer and type of values to String.. You can use appropriate type.. Or if you have 4-fixed values, that I just saw you have.. You can create your Custom Type.. just have a class containing all those values, and use HashMap<Integer, YourCustomClass> code."
12781152,2,0,0,java.util.HashMap,"Now, use a HashMap<Integer, MyDimension> with your MyDimension object storing all the 4 values.."
12781412,2,0,1,java.util.HashMap,"I suggest you to use HashMap, but as you have 4 values corresponding to a key(faceName)."
12781412,2,0,1,java.util.HashMap,"Map<String, Position> faceMap = new HashMap<String, Position>(); Inside your for loop, code."
12781235,2,0,1,java.util.HashMap,I think using a HashMap would be your best bet.
12782389,2,1,0,java.util.HashMap,"Similar approach can be done for collections -  HashMap, ArrayList and others."
12785033,1,0,1,java.util.HashMap,"What would be wise to save to where, meaning should I create some kind of HashMap or something to store my Future objects and retrieve them via some key and doing cancel(true) on them or how would someone more experienced do this?"
12788001,2,0,11,java.util.HashMap,"HashMap, testing for key equality) won't end up calling your overload - they'll just end up calling the original implementation which gives reference equality."
12788083,2,1,12,java.util.HashMap,"(That code is from the source code of HashMap.put, which is used as the underlying implementation for HashSet.add.)"
28834231,2,0,0,java.util.HashMap,The result is a HashMap withe the elements readed.
12796464,2,0,2,java.util.HashMap,You can use a HashMap to save the number of occurences.
14064425,2,0,0,java.util.HashMap,"LocateRegistry.createRegistry(9999); HashMap env = new HashMap(); SslRMIClientSocketFactory csf = new SslRMIClientSocketFactory(); SslRMIServerSocketFactory ssf = new SslRMIServerSocketFactory();   env.put(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE, csf);   env.put(RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE, ssf);   JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url,env,mbs);"
12803223,1,0,2,java.util.HashMap,Java Set in a HashMap.
12803223,1,0,2,java.util.HashMap,"When I want to put more Set into the HashMap it will override the elements of the Set, that I put into previously."
12804318,2,0,0,java.util.HashMap,This looks like an ideal situation for a HashMap.
12805476,1,0,5,java.util.HashMap,Then I tried java.util.HashMap: code.
12805476,1,0,5,java.util.HashMap,"So for some reason that doesn't seem to work, even though Java's HashMap should be able to map arrays to arrays."
12805476,1,0,5,java.util.HashMap,Why doesn't Java's HashMap work here?
17430287,2,0,0,java.util.HashMap,"If you don't need the vectors to grow dynamically in the HashMap, you can represent the vector as a string and use that as your key/value."
12818453,2,0,1,java.util.HashMap,"I compared containers.Map with char keys (thanks to Andrew Janke) to java.util.HashMap with a wrapper object as key (as in this post, also thanks to Andrew Janke, and thanks to Rasman for pointing it out): code."
12818453,2,0,1,java.util.HashMap,HashMap approach wasn't finished after 5 minutes and caused Matlab to become unresponsive.
12818453,2,0,1,java.util.HashMap,Performance was worse than HashMap.
12805740,2,0,2,java.util.HashMap,"On the other hand, a class such as HashMap<A, B> defines how an object does what the interface declares it does."
12805740,2,0,2,java.util.HashMap,"If you declare it a HashMap<A, B>, it is to be understood that you need that specific version of a map (for whatever reason), and it cannot be replaced for something else."
12805769,2,0,1,java.util.HashMap,"So, your Map can point to a HashMap, LinkedHashMap, or any other object, that is a subclass of Map."
12805769,2,0,1,java.util.HashMap,"Whereas if you use HashMap on LHS, you can only make it point to an object of type HashMap.."
12806772,2,0,0,java.util.HashMap,The default implementation of a HashMap is array based and is O(n).
12806772,2,0,0,java.util.HashMap,"Consequently, if you want a fun exercise, you can sift through the implementation of the HashMap to understand exactly how  it hashes its keys."
12807205,1,0,0,java.util.HashMap,"Internal implementation of InputStream, HashMap and ArrayList?"
12807205,1,0,0,java.util.HashMap,"How InputStream, HashMap and ArrayList are internally implemented inside java?"
12807253,2,1,3,java.util.HashMap,"HashMap and ArrayList are concrete implementations, you can easily find their source code."
12856256,2,0,0,java.util.HashMap,"` Here, the HashMap hash contains the column name and its value."
12812172,1,0,4,java.util.HashMap,I know there are classes like HashMap but they don't allow duplicate keys.
12812182,2,0,0,java.util.HashMap,"HashMap my be the class you are looking for assuming ""string"" going to different for different values."
12812182,2,0,0,java.util.HashMap,Here is  documentation on HashMap Example: code.
12812182,2,0,0,java.util.HashMap,"If you need to add more than one value, you may create HashMap<String, ArrayList> like that."
12815460,1,0,3,java.util.HashMap,HashMap: iterating the key-value pairs in random order.
12815460,1,0,3,java.util.HashMap,I have a HashMap and I'd like to iterate they key-value pairs in a different random order each time i get the iterator.
12835576,2,1,1,java.util.HashMap,You can have a Application LEVEL Data structure(HashMap) that will be updated by each Filter/Listener as it encounters the data from the requests.
12816527,1,0,0,java.util.HashMap,I am using HashSet which has some attributes used for all elements and then adding this Hashset to a HashMap corresponding for each element.
12821115,2,1,1,java.util.HashMap,"Note that Java variables are references to objects, not objects themselves, so when you call map.put(""key"", strings) it is a reference to the underlying HashSet that is passed; hence when you later update the HashSet the HashMap is updated too."
12816998,1,0,0,java.util.HashMap,Whether storing minimum delay from robot.txt from each server(domain) into a HashMap and comparing it to last timing of request made to that particular server will be all right?
12817738,2,0,1,java.util.HashMap,Whether storing minimum delay from robot.txt from each server(domain) into a HashMap and comparing it to last timing of request made to that particular server will be all right?
12817252,1,0,1,java.util.HashMap,I'm creating a HashMap of key value pairs of a Hadoop Vector that is stored inside a SequenceFile.
12817252,1,0,1,java.util.HashMap,For efficiency purposes I want to know how long the Vector of key value pairs is so that I can initialise the HashMap with the proper size.
12819656,2,0,1,java.util.HashMap,You should use Map as value since HashMap equality is based on key value pairs it has..  code.
12819656,2,0,1,java.util.HashMap,Remember you should always use immutable object as key in HashMap.
12824982,2,1,3,java.util.HashMap,"Frankly, the simplest way to do what you want may be to create two parallel structures, like create both a Stack and a HashMap."
12824982,2,1,3,java.util.HashMap,Then you can use the stack to do your pushes and pops and the HashMap to do your contains.
12825013,2,0,2,java.util.HashMap,"I think what you want is something that wraps a LinkedList<T> (for LIFO removal) and a HashMap<T, Integer> (for tracking cardinality)."
12829163,1,0,7,java.util.HashMap,"In the Java API, the implementation of HashSet is using an Object as a value for the inside HashMap,  code."
12829163,1,0,7,java.util.HashMap,but HashMap allows its value is null.
12829208,2,0,3,java.util.HashMap,"but HashMap allows its value is null  Why would that matter, when the value is entirely controlled by HashSet?"
12829208,2,0,3,java.util.HashMap,"Now if you're asking why HashSet is implemented in terms of HashMap rather than being a more efficient implementation which doesn't record a value at all, that's a different question, and one I don't have an answer to."
12829210,2,1,7,java.util.HashMap,"To do this, it uses the wrapped HashMap#remove() which returns the removed value."
12829210,2,1,7,java.util.HashMap,"If you were to store null instead of an object, then the call to HashMap#remove() would return null, which would be indistinguishable from the result of attempting to remove a non-existent object, and the contract of HashSet.remove() could not be fulfilled."
12829222,2,0,0,java.util.HashMap,"In a Java HashMap, a mapping from an object to null is not the same as an object not being present in the map at all."
12829222,2,0,0,java.util.HashMap,"Also, HashMap.put() returns the old value with the key you put, which in your case is null (either because that key wasn't in the map, or its value was null)."
12829242,2,0,0,java.util.HashMap,"With a Map, if you call put(key, null), you can't tell the difference between   the key already existed, mapping to null there was no mapping for that key  Since HashSet's add delegates to HashMap.put, PRESENT is required to fulfil the contract of Set.add, which returns false if the object already existed in the Set: code."
12831370,2,1,1,java.util.HashMap,"I'd suggest that you read each block into a HashMap<String,String> that maps each attribute to its value from the file."
12831628,2,0,1,java.util.HashMap,"(""address"",""<addr>""), (""name"",""<name>"") HashMap is not thread safe.."
12832333,1,0,0,java.util.HashMap,Possible Duplicate: Is there a way to get the value of a HashMap randomly in Java?
12835296,2,0,0,java.util.HashMap,Check out the following code of how you can add an Exception to a HashMap code.
12835296,2,0,0,java.util.HashMap,Then you can extend this class by providing some getter function to get your HashMap object and using this loop (Iterator) you can iterate over it: code.
12835852,1,0,2,java.util.HashMap,"What I'm trying to do is log a complex HashMap<String, Object> with several kinds of objects and I don't know the structure beforehand."
12846201,2,0,1,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
12847591,2,0,1,java.util.HashMap,"HashMap should be the Map implementation you use, since you'll be doing a lot of searching within those maps."
12854186,1,0,3,java.util.HashMap,How can I given the soring on my HashMap studDetails using this scenario.?
12854241,2,0,3,java.util.HashMap,How can I given the soring on my HashMap studDetails using this scenario?
12854241,2,0,3,java.util.HashMap,"You can't, because HashMap is fundamentally unordered (or at least, the ordering is unstable and unhelpful)."
12854250,2,0,4,java.util.HashMap,HashMap is not sorted you should use a SortedMap implementation instead for example TreeMap.
12857425,1,0,5,java.util.HashMap,And a HashMap: code.
12865701,1,0,3,java.util.HashMap,"I currently use new Dictionary<Type, int>(), which is more like new HashMap<Class<?>, Integer>() which is obviously not the same."
12865701,1,0,3,java.util.HashMap,"(Ignore the differences between HashMap and Dictionary) Edit: To clarify, I am not trying to define a new class, simply create an instance of HashMap/Dictionary."
12868800,2,0,0,java.util.HashMap,"I recommend creating a HashMap entry for each 'to' value; the index is either an Integer or a Float (or a double) that corresponds to your 'to' entry, and the value holds an int that you can increment each time that 'to' value is encountered."
12875602,2,0,7,java.util.HashMap,"Hash based [HashMap,HashSet,Hashtable,LinkedHashSet,WeakHashMap] collections will use hashCode() to find/store objects in buckets and then they will call equals()."
12877115,1,0,0,java.util.HashMap,I've tracked the problem to when I fill a HashMap with Tile Objects.
12877115,1,0,0,java.util.HashMap,What seems to be the problem is how the program reads the files from the folder filled with tiles (png files) and place them in the HashMap.
12877115,1,0,0,java.util.HashMap,Here is the code for when I place the Tile Objects in the HashMap: code.
12877115,1,0,0,java.util.HashMap,And here is the Output when I do a toString() on the HashMap: code.
12879814,2,1,1,java.util.HashMap,Store each experiment result in a HashMap which maps fields to values.
12881153,2,1,3,java.util.HashMap,"However, do note that the Hashtable class is obsolete; you should use java.util.HashMap instead."
12881161,2,0,0,java.util.HashMap,"However, I would recommend you to move to something more modern like a HashMap"
12881173,1,0,0,java.util.HashMap,"As you can see (and since I want to perform a group by) there are duplicate codes, so using HashMap would be a problem (duplicate keys)."
12883645,1,0,1,java.util.HashMap,Java HashMap containsKey always false.
12883645,1,0,1,java.util.HashMap,"I have the funny situation, that I store a Coordinate into a HashMap<Coordinate, GUIGameField>."
12887870,1,0,0,java.util.HashMap,Ordering a HashMap.
12887870,1,0,0,java.util.HashMap,"I need to organize an HashMap, and it is something like this: private HashMap < String , Vector < Task > >  tasksOrdered = new HashMap < String , Vector < Task > > (); Each ""Task"" is a made class with 3 attributes:  Name of Person; Hour; Discipline;  I know that with that HashMap i can group Tasks by hours into vectors, just by setting the tasks hours as key, and adding those vectors, or instances if there are existing vectors."
12887913,2,0,0,java.util.HashMap,HashMap doesn't give you any ordering.
12891573,1,0,1,java.util.HashMap,Another option is to use a HashMap but I suppose that  this will decrease performance.
12891906,2,0,0,java.util.HashMap,"The second would be to use a HashMap, and add objects with the syntax: code."
12891906,2,0,0,java.util.HashMap,"I'm not sure what performance issues you're worried about, but adding elements within the range, clearing (out of an array) or removing (out of a HashMap), and finding elements from a given index (or key, for a HashMap) are all O(1) for both structures."
12891751,2,0,0,java.util.HashMap,"I'm not sure how much more expensive a HashMap<Integer, T> would be."
12891751,2,0,0,java.util.HashMap,"Before you do this, make sure that neither an array is sufficient nor HashMap is efficient enough!"
12891800,2,1,2,java.util.HashMap,"By contrast, a HashMap<Integer, Object> would be an expensive alternative."
12899240,2,1,1,java.util.HashMap,"In fact, when you create a HashMap<String,YourObject>, that's exactly what will happen behind the scenes."
12899169,1,0,1,java.util.HashMap,"I observed that it was crashing only when a special case occurred and the name was actually not in the map (Map<String, Integer> dsNameToIdMap = new HashMap<>()) thus it was returning null."
12899224,1,0,3,java.util.HashMap,"A single game is stored as a HashMap[String, Object] against it's game_id  in said SharedObject."
12899224,1,0,3,java.util.HashMap,"A couple of the properties of the HashMap are ArrayLists, specifically players (an ArrayList[Integer] of connected player id's) and votes (another ArrayList[Integer] of players who have submitted a vote) Whenever I make a change to either of these ArrayLists, something, somewhere goes wrong and I can no long write the HashMap to the SharedObject (setAttribute returns false) Creating a new game (server side): code."
12899224,1,0,3,java.util.HashMap,"If a create a new HashMap for the game and copy across each property from the old one but omitting players and votes it is fine, but what ever try, I cannot get it to maintain an array."
12934500,2,0,0,java.util.HashMap,"Since the I'm grabbing a reference of the HashMap (being a complex data type as opposed to primitive) stored in the SharedObject, any changes I make are also reflected in the current value of that slot so that when it is then set again, Red5 fails to spot the difference."
12934500,2,0,0,java.util.HashMap,"if I clone the HashMap before making changes to an ArrayList contained in the HashMap the above statement still evaluates as true since the ArrayList is the same instance as is stored in the current slot and java also considers each object's hashcode when evaluating .equals() (in effect, comparing the contents of both HashMaps) I therefore have to clone both the HashMap and the ArrayList before making changes in order for the changes to be detected and synchronised with the clients."
12934500,2,0,0,java.util.HashMap,"Or alternatively (as I ended up implementing) clone the HashMap, make the changes and additionally update a primitive property, in my case int changeCount It would be great if Red5 had a mechanism to force a sync for such cases (such as using setDirty instead of setProperty in the client side Actionscript)"
12900832,2,1,2,java.util.HashMap,"I don't think that ""this.gamesSO.getMapAttribute(Integer.toString(game_id));"" will return HashMap, I think I can remember that Red5 has its own Map type."
12902746,2,0,0,java.util.HashMap,Java has something called HashMap which may be useful for you.
12902746,2,0,0,java.util.HashMap,Here is documentation for HashMap.
12902902,2,0,5,java.util.HashMap,Use Java's Map interface and HashMap class.
12904861,2,0,0,java.util.HashMap,"Now, a List<String> or String[] would work as a key to a HashMap containing other details."
12909901,2,1,11,java.util.HashMap,Related  HashMap with multiple values under the same key
12911046,2,0,2,java.util.HashMap,Note 1: I used an HashMap to store the menus that are not attached to the root yet.
12913888,1,0,0,java.util.HashMap,I couldn convert Object to List/ArrayList/HashMap.
12916521,1,0,1,java.util.HashMap,"I am not being too formal, but imagine that things can be List, HashMap or similar data structures."
12918150,1,0,0,java.util.HashMap,How effectively implemented HashMap in JavaScript?
12921734,2,1,2,java.util.HashMap,"HashMap, or more interestingly AbstractHashMap."
12918618,2,0,0,java.util.HashMap,"Well in general, if you want to seed your HashMap with the keys from the HashSet, you could do something like: code."
13072257,2,1,0,java.util.HashMap,"In the NodeImporter, the XML source is parsed and represented as a HashMap of HashMaps."
13072257,2,1,0,java.util.HashMap,"The outer HashMap (Key,Value) is (Kind,(HashMap(Key,Value))."
13072257,2,1,0,java.util.HashMap,"The inner HashMap (Key,Value) is (UinqueID,Node) for a final result of (Kind,(UniqueID,Node))."
13072257,2,1,0,java.util.HashMap,It can then get the keys of the outer HashMap to build the first ComboBoxModel.
13072257,2,1,0,java.util.HashMap,It can just as easily get the inner HashMap to be used as the HashMap for the second combo box.
12919659,1,0,3,java.util.HashMap,How do I sort the elements of an HashMap according to their values?
12919659,1,0,3,java.util.HashMap,I have the following HashMap: code.
12919770,2,1,6,java.util.HashMap,"You can't sort a Map by the values, especially not a HashMap, which can't be sorted at all."
12922571,2,0,2,java.util.HashMap,"What you can do is serialize each HashMap (single ArrayList<Map<?, ?>> item) separately."
12925773,2,0,0,java.util.HashMap,This function takes the values that are already defined in the HashMap and tries to calculate the missing parameters.
12929815,2,0,1,java.util.HashMap,I would use a HashMap to convert these txt speak words into real works.
12929815,2,0,1,java.util.HashMap,Your class extending this could then contain the HashMap.
13235446,2,0,2,java.util.HashMap,"Take the HashMap in your code as an example, internally it is composed of several non final member variables size, table, threshold and modCount."
13235446,2,0,2,java.util.HashMap,For HashMap this has to be done within a synchronized block or similar for it to be atomic.
13235446,2,0,2,java.util.HashMap,This is because the OS or JVM could pre-emptively switch threads while the current thread is part way through executing the put or remove method and then switch to another thread that tries to perform some other operation on the same HashMap.
12934779,2,0,0,java.util.HashMap,Is HashMap should have assign?
12937182,1,0,0,java.util.HashMap,Does The size of the Key of a Map have any kind of impact (eg in Performance) in any kind of Map implementation (eg HashMap)?
12937237,2,0,0,java.util.HashMap,"I would suspect that for a HashMap, the hashCode() function will influence performance to some degree."
12945345,2,1,6,java.util.HashMap,JSON-Simple by default probably uses a HashMap under the hood and intentionally does not preserve the order of the keys in the original JSON.
12940344,1,0,2,java.util.HashMap,Difference between two instances of HashMap and an instance of HashMap where Object contains the two Strings.
12940344,1,0,2,java.util.HashMap,"For simplicity's sake, let's say I have two instances of HashMap<String, String> where they share the same keys."
12940344,1,0,2,java.util.HashMap,"What I want to know is there a performance and memory difference between that and representing those two String values in an Object and storing them in HashMap<String, Object>."
12940344,1,0,2,java.util.HashMap,"My actual problem uses an instance of HashMap<String, HashSet<String>> and two instances of HashMap<String, Double> and I was hoping that by consolidating them, I'd save memory somehow, but I wasn't sure if there'd be a performance impact from using self-defined Object versus a native object like HashSet or Double as values."
12940394,2,1,5,java.util.HashMap,"Speed For the speed impact, remember that in a HashMap<String, ?>, the String is what gets hashed."
12940394,2,1,5,java.util.HashMap,"Space For space impact, remember that HashMap uses an inner array that's the size of a power of 2."
12940394,2,1,5,java.util.HashMap,"If you're using just a vanilla HashMap with no special settings like a custom load factor, then you may see a slight space increase because right now you have (roughly, of course, this is just simplified): code."
12940663,1,0,36,java.util.HashMap,Does adding a duplicate value to a HashSet/HashMap replace the previous value.
12940677,2,1,62,java.util.HashMap,"In the case of HashMap, it replaces the old value with the new one."
12940696,2,0,7,java.util.HashMap,"But HashMap.put will replace:  If the map previously contained a mapping for the key, the old value is replaced."
25749152,2,0,0,java.util.HashMap,"You need to check put method in Hash map first as HashSet is backed up by HashMap  When you add duplicate value say a String ""One"" into HashSet, An entry (""one"", PRESENT) will get inserted into Hashmap(for all the values added into set, the value will be ""PRESENT"" which if of type Object) Hashmap adds the entry into Map and returns the value, which is in this case ""PRESENT"" or null if Entry is not there."
12940794,2,0,14,java.util.HashMap,"In HashMap, you can have duplicate values but not duplicate keys."
12940794,2,0,14,java.util.HashMap,"In HashMap, the new entry will replace the old one."
12940794,2,0,14,java.util.HashMap,"ie recent entry will be in HashMap Understanding Link between HashMap and HashSet: Remember, HashMap can not have duplicate keys."
12940794,2,0,14,java.util.HashMap,"Now , Behind the scene, HashSet uses HashMap."
12940794,2,0,14,java.util.HashMap,"When you attempt to add any object in HashSet, this entry is actually stored as key in the HashMap,the same HashMap that is used behind the scene of HashSet."
12940794,2,0,14,java.util.HashMap,"Since , this underlying HashMap needs key-value pair,a dummy value would be generated for us which we would not notice or would not care."
12940794,2,0,14,java.util.HashMap,"Now when you try to insert another duplicate object in the same HashSet, it will again be attempted to be inserted as key in the HashMap lying underneath,however, HashMap does not support /contain duplicate."
12940794,2,0,14,java.util.HashMap,"Summary: HashMap allows duplicate values, but not keys."
12942626,2,0,0,java.util.HashMap,You will also reduce risk of NPE or ArrayOutOfBounds exception See http://docs.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html When adding the object use the item code as the key.
12950535,2,0,0,java.util.HashMap,"Message can be strongly typed like a value object/xml with schema or weakly typed like a HashMap While weakly typed messages can increase the decoupling, it means you and your client will forfeit compile time checking and debugging issues will be cumbersome at runtime"
12945123,2,0,0,java.util.HashMap,"A variation of this is to extract all of the strings from the main Properties object into separate Properties (or HashMap) objects, perhaps based on the prefix of the element names."
12945894,1,0,1,java.util.HashMap,Java - HashMap confusion about collision handling and the get() method.
12945894,1,0,1,java.util.HashMap,I'm using a HashMap and I haven't been able to get a straight answer on how the get() method works in the case of collisions.
12946027,2,0,0,java.util.HashMap,You can implement your own class to handle that or more simple use a HashMap> in where K is your Key Object and V the object value.
12945919,2,0,6,java.util.HashMap,"Note that 'collision' generally refers to the internal working of the HashMap, where two keys have the same hash value, not the use of the same key for two different values."
17410614,2,1,3,java.util.HashMap,"You can try to change ""HashMap"" to ""HashTable"", and register ""MarshalHashtable"" into your envelope."
12947975,2,0,1,java.util.HashMap,Use a HashMap.
12947954,2,0,1,java.util.HashMap,Use a HashMap code.
12948669,1,0,0,java.util.HashMap,I want to create the HashMap object at runtime depending upon the line number.
12952544,1,0,3,java.util.HashMap,"This map is instantiated (as a HashMap) and populated during a setup step with all products from our database and all the values are initially set to ""0""."
12953805,2,0,0,java.util.HashMap,HashMap containsKey() You can use this method code.
12956561,2,1,2,java.util.HashMap,"Why not put your first result set into a HashMap, keyed on idpdt (since that's what you're indexing by) ?"
12956561,2,1,2,java.util.HashMap,"A HashMap will provide O(1) lookups, rather than O(n)."
12960265,1,0,6,java.util.HashMap,Retrieve all values from HashMap keys in an ArrayList Java.
12960265,1,0,6,java.util.HashMap,Have an ArrayList which i populate with a HashMap.
12960265,1,0,6,java.util.HashMap,now i put in my HashMap and arraylist.
12960482,2,0,3,java.util.HashMap,"I am considering the HashMap with key and value of type String, HashMap<String,String> code."
12961095,1,0,0,java.util.HashMap,"I'm trying to make just one HashMap, fill it with specific information and store it into one element of an array."
12961766,2,0,5,java.util.HashMap,Otherwise: HashMap.
12963099,2,0,1,java.util.HashMap,"Why not just create your own Collection class (for the house cleaning tasks) that's backed by a HashMap<String, Date> ?"
12965317,1,0,0,java.util.HashMap,HashMap and classes.
12965317,1,0,0,java.util.HashMap,I am trying to use a HashMap to store some classes.
12965317,1,0,0,java.util.HashMap,"I have the feeling that the HashMap does not create a copy of myClass to store it, but rather looks at its content in memory."
12966069,2,0,1,java.util.HashMap,"Next, either place the collection of such BookInfo objects in a searchable object such as a HashMap (for a single search field), or place them in an array of some sort and build separate HashMaps or whatever to map from search arguments to array index (anchoring all the pieces in a ""Library"" object)."
12966440,1,0,1,java.util.HashMap,"I found a couple of libraries that implemented this just for HashMap, and one that was promising to implement it for LinkedHashMap at some point in the future, but still hasn't."
12969285,1,0,3,java.util.HashMap,"My application has a HashMap, which manages the objects I want to retrieve."
12969285,1,0,3,java.util.HashMap,How can I initialize this HashMap when the service starts in order that the HashMap has some objects I can retrieve?
12969285,1,0,3,java.util.HashMap,"I tried to add some objects into the HashMap in the constructor, but the HashMap is empty when the service starts."
12972083,1,0,1,java.util.HashMap,How to remove duplicate elements in an array using HashMap without using hashset in java...Below code describes removal of duplicates in array.. Now i need to write using hashmap for generating key and value pairs  code.
12972123,2,0,3,java.util.HashMap,A HashSet is implemented in terms of a HashMap anyway.
12972123,2,0,3,java.util.HashMap,"If you specifically want to use a HashMap, use it the same way as HashSet does: use a dummy constant new Object() as the map value everywhere."
12972244,2,1,0,java.util.HashMap,"Well a HashMap will prevent you from entering duplicate keys, the same way as HashSet."
12972244,2,1,0,java.util.HashMap,"Actually, many implementations of HashSet just use a HashMap under the hood."
12972244,2,1,0,java.util.HashMap,Now you can access the key/values just like a HashMap.
12972539,2,0,3,java.util.HashMap,"It's recommended that when you override equals you also override hashCode, so that you can use your object in hashed collections (i.e. HasSet, LinkedHasSet, HashMap)."
13824019,2,0,0,java.util.HashMap,"It sounds like you want to read in the mimetypes file, parse it, and put it into a ""reversed"" HashMap of extension:type (rather than type:extensions)."
13824019,2,0,0,java.util.HashMap,"You could still read it in with Properties, just once you have it, you would then need to parse it into the reversed HashMap."
12983020,2,0,1,java.util.HashMap,"A brief glance shows that a HashMap, when you consider the associated tables, has about 80 bytes of overhead per entry."
12983020,2,0,1,java.util.HashMap,"Without looking, I would guess that a TreeMap would be more than a HashMap -- maybe 100."
12985058,2,1,4,java.util.HashMap,Consider using a HashMap of HashMap<Class<?
12988497,2,0,0,java.util.HashMap,"Store the man and the hero objects in some cache (maybe a singleton based on HashMap) that will let you retrieve objects by id, and this way, given a hero you will be able to obtain its map quite easily."
12991095,1,0,2,java.util.HashMap,HashMap group by (Java).
12991095,1,0,2,java.util.HashMap,Is there a way we can group by Key and add the value in a HashMap in Java code.
12991569,1,0,1,java.util.HashMap,I was thinking of doing this by replacing the two HashSets mentioned above by using one HashMap that maps the neighbors to the edges that connect a node with its neighbors.
12991672,2,0,1,java.util.HashMap,"As AmitD said HashSet and HashMap alredy have constant times for for contains, get and put."
12991672,2,0,1,java.util.HashMap,For HashMap.valueSet().contains(Edge e) case you may try to look at HashBiMap in Google Guava library.
12993893,2,0,3,java.util.HashMap,"Also, consider using a Map such as a HashMap<String, String[]> or HashMap<String, Vector<String>>."
12995228,2,1,4,java.util.HashMap,Use HashMap for storing properties which will be associated with your properties file as I will show below.
12995228,2,1,4,java.util.HashMap,"In your utility class, create a HashMap instance field."
12996446,2,0,0,java.util.HashMap,The map can be a HashMap / LinkedHashMap / TreeMap etc.
12998568,1,0,9,java.util.HashMap,HashMap vs LinkedHashMap performance in iteration over values().
12998568,1,0,9,java.util.HashMap,Is there any performance difference between HashMap and LinkedHashMap for traversal through values() function?
22839050,2,0,8,java.util.HashMap,"Garbage collection NOT done so pollutes the numbers somewhat, however I think LinkedHashMap has the edge over HashMap and I will be using that in future code."
12998712,2,0,2,java.util.HashMap,"Otherwise you just do not need it, so use HashMap."
13001029,2,0,0,java.util.HashMap,"Yes, there will be the same performance difference as you get in all iterations over HashMap versus LinkedHashMap:  HashMap will take time proportional to the number of entries plus the size of the hash table, and LinkedHashMap will just take time proportional to the number of entries."
12998878,2,1,10,java.util.HashMap,The HashMap implementation of values is this : code.
12998878,2,1,10,java.util.HashMap,The LinkedHashMap  extends from HashMap and inherits the same implementation.
12998878,2,1,10,java.util.HashMap,for HashMap it extends from  java.util.HashMap.HashIterator  code.
12998878,2,1,10,java.util.HashMap,"For LinkedHashMap it is just calling e.after where e is the Entry , but for HashMap there is some work involved in traversing the Entry[] array to find the next next."
12998878,2,1,10,java.util.HashMap,UPDATE : Code for nextEntry() in HashMap code.
13001332,2,1,1,java.util.HashMap,One of options is to  use Hashtable or HashMap (just call Collections.synchronizedMap(myMap) in case of Map usage).
13001332,2,1,1,java.util.HashMap,"Now you build 3 Threads and put them to HashMap, like: code."
13001611,2,0,2,java.util.HashMap,"When you put something into a HashMap (or LinkedHashSet in your case), jvm invokes hashCode() on the objects that are being inserted into this structure."
13001707,2,0,1,java.util.HashMap,This is happening when you are attempting to remove an entry from the toVisit HashMap: code.
13006386,1,0,0,java.util.HashMap,"How can I just use a List , ArrayList or HashMap in the the observable list where it uses <Person> and every time a new Person() initialization and same for table column PropertyValueFactory."
13019117,2,1,1,java.util.HashMap,"To populate a TableView from a HashMap, see the TableView tutorial section Adding Maps of Data to the Table."
13007054,2,0,0,java.util.HashMap,If you don't need any specific order of the elements you should use the HashMap and as assylias said - create country elements only when they doesn't exist.
13007778,1,0,0,java.util.HashMap,"I am having a MAP, Map<String, Records> map = new HashMap<String, Records> (); code."
13007812,2,0,0,java.util.HashMap,map.values() gives you a Collection with all the values in your HashMap
13007813,2,0,0,java.util.HashMap,"If you are having HashMap ready with data, then you just need to iterate over hashmap keys."
13007813,2,0,0,java.util.HashMap,Check this: Java: iterate through HashMap
13007816,2,1,0,java.util.HashMap,"You can use Map#entrySet method, if you want to access the keys and values parallely from your HashMap: - code."
13009669,2,0,1,java.util.HashMap,Because HashMap uses equals to compare keys.
13009700,2,1,0,java.util.HashMap,"Because HashMap will first find the correct bucket based on the hashcode of the string object.Once it finds the bucket, after that it will invoke the Equals method to compare the key."
13009701,2,0,0,java.util.HashMap,"Since str1 and str2 both have same contents, it's giving you the value from HashMap."
13009701,2,0,0,java.util.HashMap,HashMap uses equals method to search for the exact key in it.
13009830,2,0,1,java.util.HashMap,HashMap.get() function call the Object.hashCode() method to create the key value.
13009830,2,0,1,java.util.HashMap,And this is HashMap.get() method code.
13011149,2,1,4,java.util.HashMap,There is a Hashtable (not even HashMap) used by the CardLayoutlayout manager but this is only used internally and not exposed externally.
13011149,2,1,4,java.util.HashMap,"Here are 2 possible solutions:  You could keep a separate HashMap<String, JPanel> to account for the panels you have created."
13012547,1,0,0,java.util.HashMap,"HashMap, something wrong."
13012547,1,0,0,java.util.HashMap,I have a HashMap: code.
13012547,1,0,0,java.util.HashMap,I create the HashMap: code.
13012919,2,0,1,java.util.HashMap,"public class obj{ String id; String name;} and then have some thing like  List<obj>, or ArrayList<obj> Map<obj,String> mp=new HashMap<obj, String>();"
13015982,2,0,0,java.util.HashMap,"To traverse the HashMap, code."
13014728,2,0,3,java.util.HashMap,"If it's a sparse index and you still need random access then use a HashMap<Integer, MyPoint>."
13014766,2,0,1,java.util.HashMap,"If the three points are related to each other, consider introducing a type for them, like MyPoints and store them in a map for lookup like this: Map<Integer, MyPoints> myMap = new HashMap<Integer, MyPoints> Remember to override hashCode and equals methods for MyPoints for the map to function as expected, i.e. considering two MyPoint instances with identical content as equal."
13014778,2,0,0,java.util.HashMap,"Note: If you need to find MyPoint with id, then you can use HashMap; code."
13018123,1,0,0,java.util.HashMap,Searching a HashMap> or HashMap>.
13018123,1,0,0,java.util.HashMap,"I need to search through a HashMap that contains a key/value of either String, ArrayList<Users> or String, HashSet<Users> for a given value."
13018997,2,1,0,java.util.HashMap,This assumes that you define your HashMap with a single User type: code.
13023535,1,0,0,java.util.HashMap,Japid: Strange behavior when getting value of a key from HashMap.
13024848,2,0,2,java.util.HashMap,"Split the data (String.split) then iterate over it two at a time, putting the results into a HashMap."
13029185,2,0,0,java.util.HashMap,The file in question is nothing but a Serialized HashMap.
13029185,2,0,0,java.util.HashMap,"If you wanns see it, First Serailizes a HashMap and find it out."
13029662,1,0,1,java.util.HashMap,"The Hot Methods is very helpful but generally the Hot methods are some Java API methods like java.util.HashMap.get(Object) or JVM specific methods like jrockit.vm.ArrayCopy.copy(Object, int, Object, int, int)."
13074375,2,0,0,java.util.HashMap,Step-2 : Define your pojo class( if you does not need pojo you can alter enum to use HashMap) code.
13033028,2,0,0,java.util.HashMap,"Second, if attributes is really a HashMap<String, KWIKattribute>, it's impossible that there are String objects stored in it as values."
13033817,1,0,0,java.util.HashMap,Save/Load HashMap with .bin.
13033817,1,0,0,java.util.HashMap,How can I Save/Load HashMap's.
13036011,2,1,2,java.util.HashMap,"Then, if the key does not exist in the HashMap, you know no words of that length exist in the document."
13036763,1,0,2,java.util.HashMap,How to save and load a HashMap?
13036763,1,0,2,java.util.HashMap,HashMap code.
13036763,1,0,2,java.util.HashMap,How can I save this HashMap?
13036881,2,0,0,java.util.HashMap,"Here is a link to a tutorial on Java serialization: http://www.tutorialspoint.com/java/java_serialization.htm and here is some more detailed info on HashMap serialization: Serializing and deserializing a map with key as string As Bohemian mentioned, implementing Serializable is the standard way to do this."
13036889,2,0,0,java.util.HashMap,"To complete answers, pay attention to the fact that the outcome of keySet() belonging to HashMap (if you need it at any time) is not Serializable."
13036889,2,0,0,java.util.HashMap,"Indeed, keys aren't supposed to be dissociated from values concerning an HashMap."
13040592,1,0,3,java.util.HashMap,How to match a string (phrase) to a HashMap values quickly?
13040592,1,0,3,java.util.HashMap,"I have a HashMap whose key is id and value is text, as follows: code."
13043093,2,0,0,java.util.HashMap,Try to use HashMap for your storage.
13049222,1,0,4,java.util.HashMap,Java HashMap - deep copy.
13049222,1,0,4,java.util.HashMap,I am just trying to find out the best solution how to make a deep copy of HashMap.
13055443,2,1,1,java.util.HashMap,"So I think you should do the following:  Pass in formatedURL as a parameter to the AsyncTask return ArrayList<HashMap<String, String>> from doInBackground() (listOfHM) Use the passed in ArrayList<HashMap<String, String>> in onPostExecute() I would also additionally set the ListAdapter in onCreate, and just update the data backing the ListAdapter onPostExecute()."
13054582,2,0,3,java.util.HashMap,You can wrap this in your own class or write you own HashMap which allows byte[] as a key.
13056157,1,0,0,java.util.HashMap,"Should I use HashSet, HashMap or anything else ?"
13057889,1,0,3,java.util.HashMap,Retrieving HashMap from TreeMap.
13062354,1,0,0,java.util.HashMap,I tried HashMap but it feels very complex.... thanks in advance...
13063694,1,0,0,java.util.HashMap,Retrieving a HashMap's key which is stored in JSONArray.
13063694,1,0,0,java.util.HashMap,I have a HashMap as follows: code.
13063808,1,0,0,java.util.HashMap,An example would be: From A to g there is a distance of 7 From A to c there is a distance of 3 Where A is connected to c and A is connected to g My problem is that if I use HashMap I have some problems finding out whether or not the points are connected because HashMap is not easy to loop through is there an easier way to do this or is there an alternative to HashMap?
13063950,2,0,0,java.util.HashMap,Since you asked about looping through a HashMap: you are supposed to use an iterator to do it for you: code.
13068707,1,0,1,java.util.HashMap,How to declare a custom jsp tag with required HashMap?
13068707,1,0,1,java.util.HashMap,"In my class, I need a HashMap."
13068707,1,0,1,java.util.HashMap,But I want to specify the type of HashMap How is: code.
13069581,2,0,0,java.util.HashMap,"The general approach is to write a Comparator to order a pair of your HashMap objects based on the key, and then pass that as a parameter to the Arrays.sort(T[], Comparator<T>) method."
13074173,1,0,2,java.util.HashMap,I have to access a file (more specifically a jdbm2 HashMap) and search it for a given word.
13076097,1,0,1,java.util.HashMap,Read big text file to HashMap - heap overflow.
13076097,1,0,1,java.util.HashMap,I'm trying to get the data from a text file into a HashMap.
13076097,1,0,1,java.util.HashMap,"The text-file has the following format:  it has something like 7 million lines... (size: 700MB) So what I do is: I read each line, then I take the fields in green and concatenate them into a string which will the HashMap key."
13076097,1,0,1,java.util.HashMap,"everytime I read a line I have to check in the HashMap if there is already an entry with such key, if so, I just update the value summing the value with the red; If not, a new entry is added to the HashMap."
13076097,1,0,1,java.util.HashMap,"But now with the 7 Million line text-file I get a ""java heap space"" issue, like in the image:  Is this due to the HashMap ?"
13077734,2,1,1,java.util.HashMap,EDIT: working sample with HashMap: code.
13079998,2,0,0,java.util.HashMap,"You can use a Maps (HashMap<String, List<String>>)."
13081645,1,0,0,java.util.HashMap,"My structure looks like this : Map<Class<?>, HashMap<Object, Class<?>> mymap; and I have a iterator prepared Iterator< object > iterator; This structure holds about 1,000 objects at a time."
13084153,1,0,2,java.util.HashMap,I'm trying to map a HashMap similar to the one that is specified as example 3 in the JavaDoc for @MapKeyJoinColumn (see http://www.objectdb.com/api/java/jpa/MapKeyJoinColumn): code.
13086476,1,0,1,java.util.HashMap,Retrieve position from HashMap.
13086476,1,0,1,java.util.HashMap,"10 has position 3 in HashMap, 8 has position 2 ..."
13086476,1,0,1,java.util.HashMap,So I have two questions :  how to retreive these positions from HashMap?
13086503,2,1,13,java.util.HashMap,"HashMap is not a sorted or ordered Map implementation, so there isn't a ""position"" here."
13092809,1,0,0,java.util.HashMap,Java: using ArrayList in HashMap with String as key.
13092809,1,0,0,java.util.HashMap,"I want to put these values in a HashMap using the string on the right as the key, and have the value be an ArrayList, so that if I ask for destinations for 'San Jose', it will iterate through the list and return 'San Francisco' and 'Anchorage'."
13095076,1,0,1,java.util.HashMap,"HashMap, Appending ArrayList with new values based on the Key."
13095076,1,0,1,java.util.HashMap,I've been given a test-driven development problem (I need to make it work based on the junit methods provided) based on implementing a HashMap that uses a strings for the keys and ArrayLists for the values.
13096289,2,0,0,java.util.HashMap,"A HashMap is probably the Collection object you're looking for, although there are others that may be more suitable for your needs."
13097644,2,0,0,java.util.HashMap,"For instance, you can extend class ArrayList or HashMap in java, but you cannot change the behavior of those classes."
13097545,2,0,0,java.util.HashMap,You may want to wrap your integer and cost in a Map/HashMap as below: code.
13097545,2,0,0,java.util.HashMap,Now you would be able to create a HashMap object and put you two object in that before putting in the queue.
13097675,2,0,3,java.util.HashMap,You could make a HashMap like this.
13097980,2,0,2,java.util.HashMap,"Wrapper classes like Integer, Float,... and collection classes like ArrayList, HashMap... implement the java.io.Serializable interface."
17007747,2,0,1,java.util.HashMap,"Since you are using java, you can load the labels as a HashMap<String, List<String>>."
15363070,2,0,0,java.util.HashMap,"Now for each word in a document, you look it up in your HashMap, if it doesn't contain an Array of DocTermObjects you create it, else you look at its very LAST element only (this is important due to runtime, think about it)."
13105999,2,0,2,java.util.HashMap,I would suggest HashMap instead of HashTable though.
13106074,2,1,1,java.util.HashMap,"(And if it does, consider a hybrid where you use ArrayList for small relations and HashMap for large ones.)"
13107624,1,0,1,java.util.HashMap,"Actual task is to parse XML, passing required values preferably in HashMap for further processing."
13107624,1,0,1,java.util.HashMap,"(Note: Later I want to put it in a hashmap such as like this HashMap (key, value) where key = name of commenter (justin dolske) and value is (all sentences)) Urgent help will be highly appreciated."
13107795,2,1,1,java.util.HashMap,You can also think of creating a DOM and then extracting data from it and then put it into your HashMap.
13108887,1,0,3,java.util.HashMap,"I am interested to insert items into a HashMap, TreeMap or SortedMap (you may suggest some other api) using a Value Comperator."
13108887,1,0,3,java.util.HashMap,"I Have read many posts including this one, most of the posts suggest to re-insert the HashMap into a SortedMap with a value Comperator after all items have been inserted."
13108942,2,0,2,java.util.HashMap,What I recommend is a custom container that would house both a HashMap and a Priority Queue.
13108942,2,0,2,java.util.HashMap,"So, extend the the Map, Collection, and Iterable interfaces and on add insert into both the HashMap and Priority Queue."
13109979,1,0,2,java.util.HashMap,"I just implement a MapBuilder to build map easy, But when i try to get an instance of HashMap.class,I suddenly found that I can't use HashMap.class to get such an instance."
13110030,2,0,0,java.util.HashMap,First since start takes a class you would have to pass it an unparameterized class such as HashMap.class.
13110232,2,1,1,java.util.HashMap,"for a HashMap, set the load factor, for TreeMap, specify the Comparator) so it's a better alternative anyway."
13110626,2,1,2,java.util.HashMap,"You can get the node from the string by using: map.get(string) You can use a TreeMap (which has O(logn) seek & insertion time and is ordered), and a HashMap (which implements a hash table and has O(1) average case seek & insertion time)  Note: this assumes no duplicates, i.e. no string has two different nodes representing it."
13112012,2,0,2,java.util.HashMap,"use DefaultTableModel instead, sure if isn't there really important issue to use AbstractTableModel for Object[][] data or Vector of Vectors usage of AbstractTableModel make me sence for model based on HashMap or java.util.List e.i."
13121808,2,0,0,java.util.HashMap,"For a concrete implementation, you could use ArrayList<HashMap<String, Object>>."
13122696,1,0,2,java.util.HashMap,"Next, I have kept a HashMap of the which basic blocks are connected to each other."
13122696,1,0,2,java.util.HashMap,"This HashMap is of > for the block number, and the list of block numbers that it is connected to."
13127858,1,0,5,java.util.HashMap,"In order to do this I have to use a collection (ArrayList, HashMap, HashSet)."
13127858,1,0,5,java.util.HashMap,"So far I've used HashMap and have been able to have the user choose a number of ""balls"" of random sizes which place themselves in random positions in the top half of the screen."
13127858,1,0,5,java.util.HashMap,Am I even on the right lines using a HashMap?
13128065,2,0,0,java.util.HashMap,"If continent id is just a sequence and does not add any specific meaning, you might want to consider a HashMap with key as country name and value as Capital."
13128065,2,0,0,java.util.HashMap,The reason for a HashMap and not a list is that membership check on a List gives linear performance as against a constant time access on a HashMap.
13128073,2,0,0,java.util.HashMap,"HashMap<Integer, HashMap<String, String>>();"
13128931,1,0,1,java.util.HashMap,What would be the best data structure( HashMap/linkedlist/Stringbuffer) to use if I wanna keep track of all the changes?
13129402,2,0,0,java.util.HashMap,"HashMap<Integer, ArrayList<ArrayList<Integer>>>."
13130626,2,0,1,java.util.HashMap,"If simply storing keywords and phrases linked in a HashMap isn't enough, I'd suggest going over to using an inverted index of phrases."
13133353,2,0,0,java.util.HashMap,In you first code works on a HashMap or not fill Array.
13134086,2,1,15,java.util.HashMap,"HashMap) so that you can look up a value based on a key which is equal to the original one, rather than having to use a reference to the exact original key object."
13134983,1,0,14,java.util.HashMap,"Also, if I change the ArrayList to List in a HashMap, I get        code."
13135032,2,0,26,java.util.HashMap,"The error when changing the definition of your HashMap is due to the elements later being processed, and that process expects a method that is defined only in ArrayList."
13135054,2,1,11,java.util.HashMap,"First of all, why is the map a HashMap<String, ArrayList<String>> and not a HashMap<String, List<String>>?"
13136257,2,1,1,java.util.HashMap,You should choose the HashMap way.
13138393,2,1,1,java.util.HashMap,"HashMap implements  Serializable so you will not face any problems unless key and value inside HashMap also implements Serializable  Primitives, Arrays, String are Serializable so in second case I see no problem"
13139212,2,0,0,java.util.HashMap,Another possibility would be to use a HashMap.
13163595,2,0,0,java.util.HashMap,Then I was trying to add that path variable to the System properties and according to the java documentation it throws a NullPointerException when we try to add null values to a HashMap.
13141726,2,1,2,java.util.HashMap,"and call it for example with addDictionaryToMap(dict, new HashMap<String, String>())."
13141952,1,0,1,java.util.HashMap,Print HashMap in formatted table format dynamically.
22498058,2,0,0,java.util.HashMap,I have written a small code that will print the HashMap similar (not exactly) to how query results are printed (like sqlplus).
13142191,2,1,1,java.util.HashMap,Another option would be to extend HashMap so that it records the longest key and value as entries are added: code.
13142012,2,0,0,java.util.HashMap,"How print out the contents of a HashMap<String, String> in ascending order based on its values?"
13143651,2,0,0,java.util.HashMap,"You would want to store your data in a HashMap and then use a Collections.synchronizedMap(Map<K,V> m) in order to get your data in a natural order."
13144685,1,0,2,java.util.HashMap,I thought when you define a HashMap it requires the Key and Value.
13145023,2,0,0,java.util.HashMap,"So, HashMap<String, Integer> map = new HashMap<String, Integer>(); becomes of Raw type, HashMap map = new HashMap();"
13144792,2,0,4,java.util.HashMap,"You should take a look on Java generics, if you don't specify the types of the HashMap, both key and value will be Object type."
13144792,2,0,4,java.util.HashMap,"So, if you want a HashMap with Integer keys and String values for instance: code."
13151584,2,0,1,java.util.HashMap,"You can HashMap<Integer,Records> instead of List<Records>."
13151584,2,0,1,java.util.HashMap,HashMap -> Integer - id and Records - corresponding record.
13153609,1,0,6,java.util.HashMap,HashMap returned by Maps.newHashMap vs new HashMap.
13153609,1,0,6,java.util.HashMap,"the compiler gets upset saying  The method getResultAsMap(String, Map<String,Object>) in the type AbstractDataAccessObject is not applicable for the arguments (String, HashMap<String,List<String>>)  Am I doing something wrong or what could be the reason for this complaint?"
13153812,2,1,14,java.util.HashMap,"To answer your question, just use the new HashMap version, since type inference doesn't work for method parameters."
13153644,2,0,0,java.util.HashMap,"What is the exact type of ""Map"" - is it really java.util.Map and the exact type of HashMap - is it really java.util.HashMap?"
13153644,2,0,0,java.util.HashMap,"Original ""answer"": Obviously Maps.newHashMap returns an implementation of the Map interface, which is unknown, however getResultAsMap requires a HashMap (which is an unusual requirement)."
13155399,2,0,1,java.util.HashMap,"Since you allow null as a value, you must use HashMap and not Hashtable."
13155119,2,0,1,java.util.HashMap,"Perhaps what you are looking for is TObjectIntHashMap  This is similar to HashMap<Edge, Integer> except it stores the int as a primitive potentially saving you some memory."
13154617,2,1,6,java.util.HashMap,HashMap is the correct data structure for a basic Map.
13154667,2,0,3,java.util.HashMap,Javadoc excerpt:  An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
13154672,2,0,3,java.util.HashMap,Instead of creating a HashMap code.
13155660,1,0,0,java.util.HashMap,Hibernate - How to persist a HashMap.
13157463,2,0,1,java.util.HashMap,"When you create arrays of objects, the array elements are initially null, so before using mood[0], you need to populate it with an instance of HashMap<String, Person>"
13159809,1,0,5,java.util.HashMap,Now Flexjson doesn't know how to deserialize and I end up with a library.vendorX.getDocument() being a List<HashMap> instead of a List<Document>.
13163430,1,0,3,java.util.HashMap,I want to adapt the XML representation of a HashMap field using XmlAdapter.
13163680,2,0,2,java.util.HashMap,In your XmlAdapter you need to convert the HashMap to an an instance of an object with a List property instead of directly to an ArrayList.
13163547,1,0,4,java.util.HashMap,Using HashMap to count instances.
13163547,1,0,4,java.util.HashMap,The HashMap result is useful to me because I will be indexing it by the string.
13163583,2,1,5,java.util.HashMap,HashMap replaces values if same key is provided.
13163583,2,1,5,java.util.HashMap,From Java doc of HashMap#put  Associates the specified value with the specified key in this map.
13163596,2,0,2,java.util.HashMap,"HashMap don't allow duplicate keys, so there is no way to have more than one SAME key-value pairs in your map."
13171779,2,1,1,java.util.HashMap,Explanation about Map vs Hashtable:  Differences between HashMap and Hashtable?
13171779,2,1,1,java.util.HashMap,Note that both HashMap and Hashtable are implementations of the Map interface.
13171874,2,0,2,java.util.HashMap,"Class instances (=objects) stay in memory, references to the instance are stored in variables and in HashMap values."
13172760,1,0,0,java.util.HashMap,how to write HashMap() in php.
13172760,1,0,0,java.util.HashMap,My basic concern is how to write Java HashMap in php and is there any alternative in php.
13172783,2,0,0,java.util.HashMap,It works like HashMap.
13173865,1,0,2,java.util.HashMap,Java - NullPointerException when referencing an object in a HashMap.
13173898,2,1,3,java.util.HashMap,"When you initialize your array of HashMap here  HashMap<String, Stasjon>[] regionmap = (HashMap<String, Stasjon>[]) new HashMap<?, ?>[6]; all values in the array are null."
13173898,2,1,3,java.util.HashMap,You then try to call the put method of HashMap on a null-reference.
13173938,2,0,0,java.util.HashMap,"- I think you have not initialized the HashMap, and you called put() method."
13173938,2,0,0,java.util.HashMap,"- As HashMap is an Object its default value is null, so you need to initialize it."
13175964,2,0,1,java.util.HashMap,"So you can use HashMap for instance, as @Tomasz Nurkiewicz has adviced."
13177227,2,0,0,java.util.HashMap,The HashSet is backed up by a HashMap.
13177227,2,0,0,java.util.HashMap,"This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
13177489,2,0,11,java.util.HashMap,"(The original question is about a HashSet, but a HashSet is really a HashMap under the covers, so the answer covers this case too.)"
13177489,2,0,11,java.util.HashMap,"It is safe to say that if the keys of either a HashMap or a TreeMap are mutated in a way that affects their respective hashcode() / equals(Object) or compare(...) or compareTo(...) contracts, then the data structure will ""break""."
13177489,2,0,11,java.util.HashMap,The HashMap won't notice that the hashcode of a key has changed.
13177489,2,0,11,java.util.HashMap,"Indeed, you won't even get recomputation of the hashcode when the HashMap resizes."
13177489,2,0,11,java.util.HashMap,What is going on is that you violated the contract set out clearly in the HashMap javadocs.
13180726,2,0,0,java.util.HashMap,When HashMap is getting full it doesn't allocate extra space for just one more object.
13181452,2,0,4,java.util.HashMap,"This is not a problem of HashMap, its a problem of Java Objects in general."
13181452,2,0,4,java.util.HashMap,"Each object has a certain memory overhead, including the arrays and the entries in your HashMap."
13181452,2,0,4,java.util.HashMap,"You might be able to do a little better if you tune your HashMap carefully, or you might use a byte array instead of a String to store your characters (assuming everything is ASCII or one-byte UTF-8)."
13181469,2,0,5,java.util.HashMap,In more details: HashMap's size gets doubled when it reaches (capacity * loadFactor).
13181469,2,0,5,java.util.HashMap,Default load factor for a HashMap is 0.75.
13181419,2,0,0,java.util.HashMap,There are lots of things internal to the implementation of HashMap (and arrays) that need to be stored.
13188436,2,0,5,java.util.HashMap,There's no problem in principle with using Integers as the key to a HashMap.
13190975,2,0,2,java.util.HashMap,"no idea, have to create an HashMap or MutableComboBoxModel, because AutoComplete is strictly based on Array, have to change constructor my curiosity about Bug (I can't be able to simulating this issue), is presented from this code too (disable comboBox.setRenderer(new ItemRenderer());) code."
13196580,2,0,3,java.util.HashMap,"If you observe carefully, in both cases the reference is user and pointing to same object created at HashMap<String, String> user= new HashMap<String, String>();"
13196609,2,0,1,java.util.HashMap,Rather a copy of reference is created in that class pointing to the same HashMap object.
13196609,2,0,1,java.util.HashMap,"So, all the references - user, the one in filterList.setUser and addRequest.setUser are pointing to the same HashMap object."
13197632,2,0,1,java.util.HashMap,"Create a HashMap where the Key is the value itself, and then value is an array of indices where that value is in the array."
13197632,2,0,1,java.util.HashMap,"Loop through your array, updating each array in the HashMap for each value."
13200427,1,0,0,java.util.HashMap,Adding to HashMap gives NPI.
13200427,1,0,0,java.util.HashMap,"In my main class that is run on startup, it tries to put some data into a HashMap."
13200427,1,0,0,java.util.HashMap,"But it's saying that HashMap is null, and that it can't add the data."
13200427,1,0,0,java.util.HashMap,It won't put the data into the HashMap.
13200446,2,1,3,java.util.HashMap,You need to initialize HashMap before using it.
13201210,1,0,0,java.util.HashMap,"A possible solution might be to insert a fake element in a HashMap and then enforce the synchronization with a ""synchronized"" clause on that element."
13201923,2,0,4,java.util.HashMap,"The methods get(K), keySet(), keys(), values(), entries(), and asMap() return collections that are views of the multimap  This article Multimaps - Google Guava gives you complete idea about how to use it and also how to do it with HashMap using List as value."
13201936,2,0,1,java.util.HashMap,"First you take a HashMap, if the key does not exist you put the linkedList in..."
13202495,1,0,1,java.util.HashMap,I don't want to create two HashMap (or double the memory consumption by storing name-id and id-name pair) What is a suitable data structure for it?
13202780,2,0,0,java.util.HashMap,"Currently, its implementation basically just maintains a HashMap in each direction, but the next release will use a custom data structure saving something like ~38% on memory."
13207389,2,0,8,java.util.HashMap,And here's for HashMap : code.
13208108,1,0,4,java.util.HashMap,"In java, when I use a String as a key for Hashmap I get a little different result than when I use the string hashcode as a key in the HashMap."
13208134,2,1,11,java.util.HashMap,when I use the string hashcode as a key in the HashMap.
13208134,2,1,11,java.util.HashMap,"If that's really what your code looks like, just use HashMap<String, String> instead."
13208146,2,0,2,java.util.HashMap,"So, you shouldn't have them as a HashMap key."
13572381,2,0,0,java.util.HashMap,"If there are lots of numbers that are likely to be the same, then maybe a HashMap<String, BigDecimal> 'cache' of BigDecimal values might be faster."
13213521,2,0,0,java.util.HashMap,I think you better use Map/HashMap to hold the region and statistics as below: code.
13213531,2,0,0,java.util.HashMap,"mind you that, if you need insertion order use LinkedHashMap instead of HashMap as HashMap doesnt maintain any order."
13214006,1,0,2,java.util.HashMap,"When I insert several million tuples or entities into these objects (HashMap, TreeMap, etc) their performance, both insertion and look-up slow to a crawl."
13216314,1,0,8,java.util.HashMap,"However, I'm having trouble figuring out why HashMap fails to be able to deal with primitive data types."
13216330,2,1,30,java.util.HashMap,"Try HashMap<Character, Integer> instead."
13216330,2,1,30,java.util.HashMap,"However, I'm having trouble figuring out why HashMap fails to be able to deal with primitive data types."
13216330,2,1,30,java.util.HashMap,"Java didn't have generics from the beginning so a HashMap<Character, Integer> is really a HashMap<Object, Object>."
13216330,2,1,30,java.util.HashMap,"The compiler does a bunch of additional checks and implicit casts to make sure you don't put the wrong type of value in or get the wrong type out, but at runtime there is only one HashMap class and it stores objects."
13216343,2,0,2,java.util.HashMap,"Map<Character , Integer > checkSum = new HashMap<Character, Integer>();"
13216348,2,0,1,java.util.HashMap,"Or define the HashMap using wrapper types, and store the primitive types."
13217123,2,0,1,java.util.HashMap,"Unlike C++ templates, generics don't involve code generatation and there is only one HashMap code regardless of the number of generic types of it you use."
13222631,1,0,1,java.util.HashMap,"Definitions randomally selected (except the right one) Program ends if it runs out of terms to display  Needs to use an ArrayList to hold collections of items, and a HashMap to hold name-value pairs."
13222814,2,0,0,java.util.HashMap,"As for your storage question, I wouldn't use a HashMap at all."
13225125,1,0,0,java.util.HashMap,Possible Duplicate: When to use HashMap over LinkedList or ArrayList and vice-versa   Since coming across Maps in Java i have been using them extensively.
13225125,1,0,0,java.util.HashMap,In particular HashMap is an excellent option for many scenarios.
13225125,1,0,0,java.util.HashMap,"So, my question is: why not use a HashMap all the time provided we have a solid immutable key?"
13225125,1,0,0,java.util.HashMap,"Additionally, is it appropriate to use a something like a HashMap for a very small (<10) number of items or is there some additional overhead I am not considering?"
13225147,2,0,1,java.util.HashMap,"Otherwise, sure, HashMap (or, as you say, LinkedHashMap) are extremely useful data structures."
13225147,2,0,1,java.util.HashMap,"I believe that the default initial size for a HashMap is 16 buckets, so there's a bit of overhead for very small lists."
13225173,2,0,1,java.util.HashMap,"HashMap has a significant amount of overhead compared to an array (or ArrayList):  You need to hash the key to get an index into the backing array, then store the value and the key."
13225173,2,0,1,java.util.HashMap,"When you resize a HashMap, you create a new array, then calculate the hashes all over again (so they'll be spread out through the new array)."
13225173,2,0,1,java.util.HashMap,"HashMap's perform badly when they're full, so they generally leave something like 25% of their space empty."
13225173,2,0,1,java.util.HashMap,"These are all pretty minor, so you could get away with just using HashMaps all the time (in fact, this is what PHP seems to do), but it's wasteful to use a HashMap when you don't really need it."
13225176,1,0,1,java.util.HashMap,HashMap in java cannot hash MyObject.
13225176,1,0,1,java.util.HashMap,I have a HashMap in the 'main' method with SetOb as Key and Integer as value.
13225176,1,0,1,java.util.HashMap,"Now as you can see in the main method, when I feed the HashMap with a SetOb instance and then look for an instance with exactly the same value, it returns 'null'."
13225176,1,0,1,java.util.HashMap,This has happened with me quite a few times before when I use my own defined data structures like SetOb as Key in HashMap.
13225658,2,1,2,java.util.HashMap,"Again when you will try to instantiate elements to add in the listMap, you will need an implementation class of Map interface e.g HashMap as below: code."
13230872,1,0,0,java.util.HashMap,Split the string of text file and store it in HashMap.
13230993,2,0,0,java.util.HashMap,"First, please use types on your HashMap... code."
13233723,2,0,1,java.util.HashMap,"To test, you can still use the HashMap/ArrayList method stated above (only if you implement an equals method in Card as well) and check with the fulldeck.size() if there are 52 cards (which will be all different, because of the HashMap)."
13235503,1,0,2,java.util.HashMap,"How to extends HashMap to allow String, String types."
13239845,2,0,1,java.util.HashMap,HashMap is meant for maintaining and retrieving the values using hash Keys and hence very efficient.
13239721,2,1,5,java.util.HashMap,Your comment was that you have all of these values stored in a HashMap already.
13240599,2,1,1,java.util.HashMap,"If you instead represent your systemData as a HashMap of AbstractSystem by AbstractSystem.getSerial() values, then you just loop through the systemName collection and lookup by systemName.getId()."
13239918,2,0,0,java.util.HashMap,"You can also just write a Map to file through serialization, so once input file is loaded into a HashMap, you can do something like this: code."
13243085,2,0,0,java.util.HashMap,"Also, if I was doing this for real I'd be inclined to have one frequencyTable method that returns a HashMap<String, int> containing ""the frequency table"" - i.e. a map of each distinct word to the number of times it occurs."
13243376,1,0,1,java.util.HashMap,"I'm looking for the equivalent of Map m = new HashMap(); m.putAll(carMap); m.putAll(bikeMap);  Seems like there should be a way to do this in Spring context file, but the Spring 3.0 reference doc section on util:map doesn't cover this use case."
13250160,1,0,0,java.util.HashMap,android get value of HashMap array.
13250222,1,0,0,java.util.HashMap,How to use HashMap as a parameter in Web service.
13251683,1,0,1,java.util.HashMap,"Will everything that was discarded by the clear() (the HashMap objects, the Integer objects, and the LinkedList objects) eventually get garbage-collected, or do I have to iterate all the way down to the lists and call clear() on them before clear()ing the inner maps and then clear()ing the outer map?"
13252133,1,0,3,java.util.HashMap,Out of memory while processing large number of objects in HashMap/Hashtable/ArrayList.
13252133,1,0,3,java.util.HashMap,"I am working on a project, in which need to load thousands of object's data in HashMap/Hashtable/ArrayList."
13256850,2,0,0,java.util.HashMap,If person wants to use HashMap or Hashing related other APIs than only he must override hashCode and equals...
13257713,2,0,3,java.util.HashMap,"A HashMap has a limited number of buckets, and each key is indeed assigned a bucket based on its hash code."
13259535,1,0,12,java.util.HashMap,"Right now I am using HashMap<String, Integer> to do this as the key is overwritten and hence at the end we can get HashMap.getKeySet() which would be unique."
13259563,2,1,22,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
13278702,2,0,1,java.util.HashMap,"You may want to check it out, but actual implementation reads the properties file all at once and backs it in the HashMap."
13264820,2,0,0,java.util.HashMap,In the above adapter mylist is an Arraylist of your HashMap objects.
13269600,1,0,5,java.util.HashMap,how can i get the number of same-value-more-than-once occurrences for a HashMap in Java?
13274144,2,0,1,java.util.HashMap,"The Data structures here used in Java should be efficient, as the HashMap is constructed with a capacity that can handle the largest size of the lists."
13271485,2,0,1,java.util.HashMap,"Also, it should have used HashMap instead of the legacy collection class Hashtable."
13273434,1,0,0,java.util.HashMap,"Java HashMap Object, Integer."
13287646,2,1,2,java.util.HashMap,"You can create a HashMap<String, DefautMutableTreeNode> m, so that m.get(node) will return the corresponding TreeNode."
13278955,1,0,3,java.util.HashMap,"Due to my bad English I have made a scheme to make the problem more clear:  I have tried with HashMap, with a simple array, I have tried to change mPath.rewind(); with reset();, new Path(); etc but nothing."
13281966,2,1,1,java.util.HashMap,"I have chosen to put them into a HashMap, but you could just as easily look at the name part (kv[0]) and choose to do something with it."
13281966,2,1,1,java.util.HashMap,"However, all your fields in LogObject are private and you haven't shown us any methods, so I hope you have some way of setting them from outside... bear in mind you will need to store the pairs in a data structure of some kind (as I have done with a HashMap) if you intend to intialise a LogObject with all the fields rather than setting the fields after a constructor call."
13290709,2,0,0,java.util.HashMap,"If I understand correctly, you want to load the nodes using values from a HashMap."
13292489,1,0,1,java.util.HashMap,"Now, how can I mash these two HashMaps into a third HashMap so that I can have the key IDnumber, and the values name, company, income, and workyears?"
13292562,2,1,2,java.util.HashMap,"Then loop through your map to get the entries, creating new Class3 instance for each and place them in a new HashMap<Integer, Class3>."
13292668,2,0,1,java.util.HashMap,"Create a 3rd (empty) HashMap Now iterate over all elements in the first HashMap you had before For each entry, look up the same key in the 2nd HashMap:  If it is found, combine the information from these 2 entries and add it as a single entry of instance Combined to the 3rd HashMap."
13292668,2,0,1,java.util.HashMap,"If it is not found, then create a Combined instance anyway based on the entry in HashMap one and just set the unavailable information that would have come from a corresponding entry from HashMap two to null."
13292668,2,0,1,java.util.HashMap,Remove the entry from HashMap one.
13292668,2,0,1,java.util.HashMap,Now the 1st HashMap should be empty.
13292668,2,0,1,java.util.HashMap,Iterate HashMap two to find any entries that did not have a corresponding ID in HashMap one.
13292668,2,0,1,java.util.HashMap,Add them to the 3rd HashMap as above.
13292732,2,0,0,java.util.HashMap,You can use an ArrayList to create an HashMap with multiple of values for one key code.
13292732,2,0,0,java.util.HashMap,"But it's not very optimized, if you aren't obliged to have an HashMap at final, use directly a  multiHashMap: http://commons.apache.org/collections/apidocs/org/apache/commons/collections/MultiHashMap.html"
13296297,2,1,4,java.util.HashMap,Test both TreeMap and HashMap to see which works best for you.
13297333,1,0,5,java.util.HashMap,I have one thread which keeps streaming objects into a HashMap.
13297534,2,0,1,java.util.HashMap,"If that is not possible, I use a combination of a normal HashMap and the excellent data structure CopyOnWriteArrayList, and synchronize externally."
13298110,1,0,15,java.util.HashMap,"The interviewer, after I finished explaining the HashMap method, asked if I could think of a method that would be O(n) computationally, but would not use any extra memory."
13298283,2,0,1,java.util.HashMap,One possible answer is similar to the HashMap solution...
13298283,2,0,1,java.util.HashMap,"This is exactly the same as the HashMap solution, except you don't need to be able to account for all possible integers like a HashMap can, which lets you save on space."
13298869,2,0,1,java.util.HashMap,"Specifically, check out HashMap and TreeMap."
13307686,1,0,3,java.util.HashMap,Can I achieve typesafety by Key within a HashMap?
13307686,1,0,3,java.util.HashMap,"I deceided to give a single HashMap a try to store all lists, since the key-value principle sounds familar to my usecase, just that it might need a bit of more complex key, because I need two aspects (in my case the id and the fruits class), to identify the value."
13311279,1,0,1,java.util.HashMap,"how to set adapter to spinner if i have ArrayList<HashMap<String, String>> coursesList that contine information that i will display it what is the correct type of adapter that i should use"
13314948,2,1,3,java.util.HashMap,"Your solution that relies on two hash tables is as good as it gets, unless you are willing to go with third-party libraries (which would hide the two hash tables for you) or re-implement a significant portion of HashMap<K,V>."
13315495,2,0,3,java.util.HashMap,Here's an example where you can save the Customers based on their ids in a HashMap: code.
13315440,1,0,0,java.util.HashMap,My thinking was that I could use a HashMap to store the number of times a word occurs.
13317841,1,0,3,java.util.HashMap,How do I output Java HashMap keys when the 'key' is two integers?
13317841,1,0,3,java.util.HashMap,"Is this an efficient way to use a HashMap to filter unique X,Y points."
13317919,2,1,1,java.util.HashMap,"As for a HashMap, you could have it map from X coordinates to a list of MyPoints with that X coordinate and unique Y coordinates (HashMap)."
13318139,1,0,0,java.util.HashMap,Possible Duplicate: Differences between HashMap and Hashtable?
13318152,2,1,4,java.util.HashMap,"also java.util.Hashtable doesnt allow any null keys, where as java.util.HashMap allows one null key."
13318154,2,0,3,java.util.HashMap,"Hashtable is synchronized, where as HashMap is not."
13318154,2,0,3,java.util.HashMap,"This means if you only have a single thread accessing the data, use a HashMap, otherwise use a Hashtable."
13318337,1,0,2,java.util.HashMap,"I'm mapping x,y values onto a Cartesian plane with a HashMap."
13318479,2,0,0,java.util.HashMap,"You could use a HashSet: it's internally a HashMap with only keys, no values."
13318500,2,0,0,java.util.HashMap,"The HashMap does some rehashing using the hash() method shown below, then takes the bottom X bits."
13318500,2,0,0,java.util.HashMap,"x^y (or x shifted by something ^ y or vice versa), and create the HashMap, and see if there are too many collisions."
13320941,2,0,0,java.util.HashMap,You can get use of a HashMap to determine whether a string is a reversed version of the other strings in the list.
13321760,2,1,1,java.util.HashMap,- You can always create a HashMap to keep tab on Client-Socket to Thread relation.
13324816,1,0,9,java.util.HashMap,"My process:   Load an English wordlist(consist of 109582 words) into a Map<Integer, List<String>> _wordMap = new HashMap();, key will be the word length."
13325502,2,1,5,java.util.HashMap,"This depends on the kind of your map:  Keys of HashMap must provide hashCode and equals Keys of TreeMap need to provide compareTo by implementing Comparable<T> unless the map is constructed with a Comparator, in which case there are no restrictions on the key itself."
13325507,2,0,1,java.util.HashMap,If you are using a HashMap you will need a good hash function.
13326951,2,0,0,java.util.HashMap,"(One note - if your character space is non-contiguous, you can still do a lookup table, but you'll need to use a HashMap<Character,List<Point>> and map.get('h') instead.)"
13328497,2,1,1,java.util.HashMap,You're never calling registerGameServer() so the HashMap is remaining empty and doing get() gives you a null result.
13328497,2,1,1,java.util.HashMap,"No need to create a new HashMap each time, get the same one and make it thread safe by using the concurrent version."
13329819,1,0,1,java.util.HashMap,Why HashMap initial capacity is not properly handled by the library?
13329819,1,0,1,java.util.HashMap,"To create HashMap/HashSet for N elements, we generally donew HashMap((int)(N/0.75F)+1) which is annoying."
13329819,1,0,1,java.util.HashMap,Why the library has not taken care of this in the first place and allows initialization like new HashMap(N)(should not rehash till N elements) taking care of this calculation (int)(N/0.75F)+1?
13329884,2,0,2,java.util.HashMap,"No, there is no such standard API but it seems there is a method Maps.newHashMapWithExpectedSize(int) in guava:  Creates a HashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth."
13329884,2,0,2,java.util.HashMap,"If you create new HashMap from other Map, HashMap calculates capacity first by default: code."
13329884,2,0,2,java.util.HashMap,"The only reason to use HashMap(int initialCapacity, float loadFactor) constructor is when you know from the very beginning how many elements you want to store in the HashMap, thus avoiding resizing and rehashing later (map has correct size from the very beginning)."
13329884,2,0,2,java.util.HashMap,"So if you want your HashMap to have exact capacity as defined, just use powers of two."
13331106,2,0,0,java.util.HashMap,"So, here is how you can define your collection: Map<String, Set<String>> word2people = HashMap>();` Here is how you can add words there: code."
13333111,2,0,1,java.util.HashMap,You can have some HashMap were you will put references to all unique strings.
13333111,2,0,1,java.util.HashMap,And in ArrayList you will just have reference to existing unique strings in HashMap.
13337226,2,1,1,java.util.HashMap,"A plain HashMap is unordered, and cannot be sorted."
13337226,2,1,1,java.util.HashMap,"Alternatively, you could extract the HashMap's value set to a list, and sort that."
13337426,1,0,2,java.util.HashMap,HashMap) ?
13368581,2,0,2,java.util.HashMap,"In particular, changing the hashcode of an object used as key in a HashMap (or contained in HashSet) is likely to result in future lookups on that Map (Set) not finding the object, and adding that object again to the Map (Set) is likely to succeed, even though under ordinary circumstances, a Map may contain at most one mapping for every given key, and a Set contain every object at most once."
13338812,1,0,1,java.util.HashMap,Since the this at index 3 won't be added to the set.The produced min interval would be [0-4] instead of [3-4] So is there a collection which may contain duplicate values and has a containsAll method or Will i have to use a HashMap with indexes of strings as keys?
13342737,2,0,2,java.util.HashMap,"eg: Map<Integer,String>map=new HashMap<Integer,String>(); is a valid statement, but Map<int,String>map=new HashMap<int,String>(); is not a valid statement."
13339973,1,0,0,java.util.HashMap,Consistency of contains method on a HashSet and HashMap.
13339973,1,0,0,java.util.HashMap,Why does containsAll method on a HashSet does not remain consistent if remove is called on the Set whereas a containsValue method on a HashMap remains consistent after a value is removed  After a value is removed from a HashSet containsAll returns false even if all values were present where as in case of HashMap the containsValue method returns correct value code.
13342278,2,1,1,java.util.HashMap,"First of all, you should use ConcurrentHashMap instead of HashMap."
13341448,2,0,2,java.util.HashMap,If you need to search on a string value you should use a HashMap instead of ArrayList.
13341449,2,0,4,java.util.HashMap,HashMap would be better choice.
13345305,2,0,0,java.util.HashMap,"Instead of using a static HashMap, you can define a list of SelectItems: code."
13345305,2,0,0,java.util.HashMap,"it holds key/value pairs just as your HashMap, the only difference is the value/label order: code."
13353085,1,0,0,java.util.HashMap,"In order to determine which element is bigger, I need not only the fields inside the Halfedge class, but also a HashMap that I create in my code."
13356431,2,0,1,java.util.HashMap,HashMap or TreeMap as below: code.
13358231,2,1,2,java.util.HashMap,"So to answer the title of your question, I'd expect a Java HashMap to be more efficient if you're accessing your data from the application."
22023641,2,0,1,java.util.HashMap,"If you just have a view objects that do not change very often and you are up for a simple solution, just serialize the HashMap into the file on every put."
13362463,2,0,2,java.util.HashMap,"I'd prefer a HashMap<String, AtomicInteger> : code."
13374726,1,0,3,java.util.HashMap,Java:Can reading from a HashMap change its state?
13374726,1,0,3,java.util.HashMap,"Concurrent updates to non-synchronized HashMap can obviously cause a livelock or other data corruptions; to avoid this, one should use the concurrent version or implement a synchronization mechanism."
13374726,1,0,3,java.util.HashMap,"Can concurrent calls to HashMap.get() change the state of the HashMap, like rehashing?"
13374726,1,0,3,java.util.HashMap,"If get() does not change the state of the HashMap (and can't cause a livelock for another reaseon), than a single thread can create a HashMap in advance, and then many threads can read from it concurrently."
13374777,2,0,1,java.util.HashMap,HashMap states that get is not an operation that will cause a structural modification.
13374780,2,0,0,java.util.HashMap,"If you what to know what happens inside HashMap.get() (which is a specific implementation of the Map interface), you can read the code of the implementation."
13385862,2,0,1,java.util.HashMap,Since HashMap is Serializable I'll use this way to save it: code.
13385862,2,0,1,java.util.HashMap,And then you just can cast your object returned by this method to a HashMap and continue in the same place.
13396714,2,0,3,java.util.HashMap,"Apart from that, you can facilitate your replacement work by using a HashMap."
13399847,2,0,0,java.util.HashMap,HashMap menthods are not Synchronized.
13399847,2,0,0,java.util.HashMap,use HashMap for better performance.
13400280,2,0,1,java.util.HashMap,A HashMap will not work for mapping ranges to values unless you find a way to generate a hashcode for ranges and single values in there that matches.
13400161,2,1,1,java.util.HashMap,"The Vector class implements a growable array of objects, I think you are looking for map, java.util.Map<key,value>, implementation of map is HashMap<k,v>  code."
13400201,2,0,3,java.util.HashMap,Although semantically it is likely you want a HashMap
13401221,2,1,2,java.util.HashMap,"Since File, HashMap and Boolean all implement Serializable you can write the map to a file using an ObjectOutputStream and read it back with an ObjectInputStream: code."
13410094,2,0,1,java.util.HashMap,"You're suppose to simply split a file into words and insert them into a HashMap<String,Integer> (or a Map with a Hash Table implementation)."
13413729,2,1,21,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
13411843,2,0,2,java.util.HashMap,Use Map/HashMap in place of List as: code.
13412263,2,1,1,java.util.HashMap,"Keep your bitmap in a HashMap<Integer,Bitmap> this way you can identify your Bitmaps uniquely and maintain the hierarchy and positions."
13413117,2,0,0,java.util.HashMap,"You can try HashMap < Bitmap, Integer > for the mapping."
13413117,2,0,0,java.util.HashMap,Just remember to remove your bitmap from the HashMap.
13413117,2,0,0,java.util.HashMap,"Otherwise, create a wrapper class for Bitmap that has the features required to serve as a HashMap key, and use that class in your collections."
13413272,1,0,8,java.util.HashMap,HashMap with weak values.
13413272,1,0,8,java.util.HashMap,"Until now I was using an HashMap<Long,WeakReference<CustomObject> for the implementation."
13413272,1,0,8,java.util.HashMap,The problem is that over the time the HashMap becomes filled of empty WeakReferences.
13413473,2,0,3,java.util.HashMap,"You could poll the ReferenceQueue whenever you access the cache, and hold a HashMap<WeakReference<CustomObject>,Long> to know which entry to remove if a reference is found in the queue."
13414695,1,0,0,java.util.HashMap,A HashMap is used to set properties and the key is a ClassLoader.
13422850,2,0,0,java.util.HashMap,"For this particular problem I'd recommend using the HashMap, simply because it natively checks for duplicate values without you having to do anything."
13423682,2,0,3,java.util.HashMap,The HashMap already resizes itself when the hash table gets too full.
13423708,2,0,0,java.util.HashMap,"Now as already stated, you do not need to resize the HashMap."
13423708,2,0,0,java.util.HashMap,From the JavaDocs:  An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
13425315,1,0,2,java.util.HashMap,I use HashMap to keep explored nodes and to retrace path.
13431315,1,0,2,java.util.HashMap,Convert java.util.HashMap keys to vector in Matlab.
13431315,1,0,2,java.util.HashMap,I have a HashMap object that contains key=>value set which are both integers.
13433671,1,0,3,java.util.HashMap,"On the server side I save in a HashMap the time the client has sent the message , and I use a TimerTask for every client to check every x seconds if I received any message from the client."
13438630,1,0,0,java.util.HashMap,Initialize Empty HashMap.
13438630,1,0,0,java.util.HashMap,"How do I create a new, empty HashMap?"
13440616,2,0,0,java.util.HashMap,This is possible when using a HashMap.
14654384,2,0,0,java.util.HashMap,Same for HashMap.
14654384,2,0,0,java.util.HashMap,If there were serious issues with HashMap we would have found out by now.
13447598,2,0,0,java.util.HashMap,"When put is made, the VALUE is replaced not the KEY from an HashMap."
13448502,2,1,5,java.util.HashMap,It comes in between HashMap and the (): - code.
13448502,2,1,5,java.util.HashMap,"So you should use Map instead of HashMap in declaration, and List instead of ArrayList in your type parameter: - And actually, you don't need to break your declaration and initialization in two lines."
13450296,1,0,1,java.util.HashMap,In my managed bean i have a hashmap :`HashMap > reqLeafData; So for every ReqLeaf i create a list of strings to store some info : code.
13451909,2,0,1,java.util.HashMap,"Also, a HashMap is not suited for concurrent access, so you should either wrap it in Collections.synchronizedMap(): code."
13451465,1,0,18,java.util.HashMap,What is the trick in the hash() method in Java HashMap implementation?
13452252,2,0,4,java.util.HashMap,This function just helps better avoid collisions in HashMap.
13452252,2,0,4,java.util.HashMap,"Example: Assume, size of your HashMap is 20."
13452252,2,0,4,java.util.HashMap,"So, even you have three different hashCodes you get one bucket for all three objects, that means complexity of your HashMap O(n) instead of O(1)."
13452267,2,1,2,java.util.HashMap,"In your class, create a HashMap linking each implementation of the interface to its respective key."
13451881,1,0,4,java.util.HashMap,"""Closed"" HashMap in Java/Scala."
13453217,1,0,1,java.util.HashMap,"Even I tried with HashMap and Hashtable,but the problem still exist."
13460200,1,0,3,java.util.HashMap,"Now I can make json out of it, but, when I try to do this by creating the actual HashMap < String, < Stack < TabInfo > > > then again I run into trouble."
13463329,1,0,0,java.util.HashMap,"I circumvented this problem by specifying/ storing my required application preference values in a HashMap, and  I have a custom SharedPreferences derived class which lazily looks for the default value in the specified HashMaps."
13463329,1,0,0,java.util.HashMap,"I just call say a MyClass.getBoolean(key) or a MyClass.getString(key), and it looks for the default value in the HashMap, returning and storing (.commit()-ing) it if it doesn't exist yet."
13464688,1,0,0,java.util.HashMap,HashMap containsKey method.
13464688,1,0,0,java.util.HashMap,I'm writing an implementation of HashMap in java and I'm running into some issues with locating the correct bucket in the containsKey method code.
13465994,1,0,0,java.util.HashMap,"For instance, how to change ""Map<String,Integer> map = HashMap<String, Integer>()"" to ""Map<Integer,User> map = HashMap<Integer, User>()""?"
13467615,2,1,3,java.util.HashMap,I found that the request I received was a org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest which has a field called multipartParameters which is just a HashMap.
13470637,1,0,0,java.util.HashMap,ArrayBuffer can be convert to java.util.List and HashMap can be convert to java.util.Map.
13478811,2,0,0,java.util.HashMap,"Try using a TreeMap with a suitable Comparator, then putAll entries you have in your HashMap."
13478814,2,0,4,java.util.HashMap,A HashMap is not usually sorted.
13478826,2,0,0,java.util.HashMap,"If you need to start with a HashMap, you can create a new TreeMap(myHashMap)."
13479916,2,1,3,java.util.HashMap,"A HashSet is basically a HashMap, but only considers the set of keys (hence the dummy variable PRESENT, which is just a placeholder)."
13489021,1,0,0,java.util.HashMap,Adding a node into Jackrabbit Repository which has a HashMap Object as a property.
13489021,1,0,0,java.util.HashMap,I want to add a node in jackrabbit Repository which has a property holding a HashMap object.
13495050,2,1,13,java.util.HashMap,Plain HashMap simply isn't safe for concurrent writes.
13495050,2,1,13,java.util.HashMap,"Now if you really really have good evidence that using a ConcurrentHashMap for the rest of your application lifetime causes a problem (and I very much doubt that it does), you could perhaps build a concurrent hash map to start with, the convert it to a HashMap (or even an immutable collection from Guava) in a single thread, making sure there's a happens-before barrier between ""final map is published"" and ""threads read final map""."
13495337,2,0,2,java.util.HashMap,"If this is an option, each thread can have its own HashMap which doesn't need to be thread safe provided it is only used by one thread."
13500321,1,0,1,java.util.HashMap,How can I get a List of the keys from a HashMap?
13500321,1,0,1,java.util.HashMap,"I have a HashMap<String, String> item and I need to get all of the keys from it in an array so I can do this: code."
13500340,2,0,2,java.util.HashMap,You need to use Map#keySet method that gives you a Set of keys in HashMap: -  code.
13500405,2,0,0,java.util.HashMap,As mentioned in comment check out http://developer.android.com/reference/java/util/HashMap.html#keySet() which return the Set of keys.
13501494,2,0,3,java.util.HashMap,"If the maps are HashMap, each of those translations is an O(N) operation, as is the comparison."
13501582,2,0,4,java.util.HashMap,Note 1: In 90% of the cases you should probably use the HashMap class instead of Hashtable.
13501582,2,0,4,java.util.HashMap,MyHashMap by copying over the source code of the HashMap implementation from your Java Development Kit.
13501582,2,0,4,java.util.HashMap,You can find the OpenJDK HashMap implementation here.
13501582,2,0,4,java.util.HashMap,"PS: You could theoretically try accessing the HashMap internals using reflection, but the resulting code would be atrocious and the performance even worse..."
13501631,2,0,0,java.util.HashMap,Extending HashMap or something like that is for your purposes probably not even necessary.
13501802,1,0,3,java.util.HashMap,"It is hooked up to a publisher which gives me a number and a new count and every time I get an update, I'm storing the current count for that number in a HashMap."
13501802,1,0,3,java.util.HashMap,"When a request comes in asking ""how many 7's do we have""  I just return the value in my HashMap."
13502855,1,0,3,java.util.HashMap,How to pass to method TreeSet or HashMap and show it?
13502855,1,0,3,java.util.HashMap,and I would like to pass to it TreeSet or HashMap.
13502855,1,0,3,java.util.HashMap,"Is there a way to show the content of a collection, when I dont know, if user pass a TreeSet or HashMap?"
13503456,2,0,0,java.util.HashMap,"Following more closely object-oriented approach, you can create decorators for classes TreeSet and HashMap."
13503755,1,0,2,java.util.HashMap,How to move values around in a HashMap.
13510924,2,0,0,java.util.HashMap,"The HashMap class is fine for using key-value pairs, but there is no such thing which accepts primitive types."
13510924,2,0,0,java.util.HashMap,"So that means that there is actually an object of type Integer in the HashMap, but it is reflected as an int."
13510850,2,0,0,java.util.HashMap,"Essentially, a HashMap will take the first argument as a key, and the second as the value, exactly as you requested."
13513667,1,0,0,java.util.HashMap,"I read the text file and store in HashMap after that I want to sort in order(by the highest value) but the problem is that because I sort the values in String, I cant compare it."
13513747,2,1,3,java.util.HashMap,"Yes, use HashMap<String,Double> and when putting in the values, convert them to double using Double.parseDouble()."
13513805,2,0,1,java.util.HashMap,"The HashMap does not guarantee order:  This class makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time."
13517805,2,0,4,java.util.HashMap,"Dealing with compare and equals is not always easy, consider using instead of Trees (TreeMap) a HashMap, then you dont have to implement compareTo."
13521235,2,0,2,java.util.HashMap,(In case that hashCode is the same) http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.get%28java.lang.Object%29
13521238,2,1,7,java.util.HashMap,"In HashMap.java, the get method is: code."
13523790,2,1,2,java.util.HashMap,"Then you would maintain a HashMap<K,V> so that you can retrieve elements by K. That means you will have to remember to update both data structures."
13523790,2,1,2,java.util.HashMap,"Also, to simplify the logic, you would wrap the HashMap and ArrayList in an object."
26469170,2,0,0,java.util.HashMap,"You can just create a HashMap to index the layoutEntities (aka nodes) of your graph, when you initially create your list of nodes (LayoutEntity objects)."
13540924,2,1,2,java.util.HashMap,I chose to store the info in HashMap's and ArrayList's because they were easier to deal with later.
13527118,2,0,0,java.util.HashMap,"The HashMap has a series of buckets (lists); when you put data to the HashMap, the hashCode is used to decide in which bucket the item goes, and the item is added to the list."
13527187,2,0,0,java.util.HashMap,If you want to insert entries and not only read them in different threads you have to synchronize them because of the way the HashMap works.
13527002,2,1,4,java.util.HashMap,A ConcurrentHashMap is typically faster that a synchronized HashMap.
13527157,1,0,1,java.util.HashMap,below is the key value-pairs stored in the HashMap   axAttr --> axString   bxs[0].bxAttr --> bxString   bxs[0].cxs[0].cxAttr --> cxString   bxs[0].cxs[0].items[0] --> One   bxs[0].cxs[0].items[1] --> Two   bxs[0].cxs[0].items[2] --> Three    I stored these key values in DB and later retrieve them and want to convert to Java Bean again.
13527157,1,0,1,java.util.HashMap,But for converting the same HashMap to Java object with the help of propertyUtilsbean I am getting NullPointerException.
13527503,1,0,5,java.util.HashMap,HashMap with uniqueness check.
13527503,1,0,5,java.util.HashMap,"Each key (within a list) should be unique, so I use HashMap."
13527503,1,0,5,java.util.HashMap,"When somewhere in the code I add a new item to a list, I am using HashMap's put(K, V)."
13527503,1,0,5,java.util.HashMap,"I thought of extending the HashMap class with my own one, which would perform such a check and throw an exception."
13527503,1,0,5,java.util.HashMap,"However, HashMap's put does not throw exceptions, so I cannot do it either."
13527503,1,0,5,java.util.HashMap,"I am ready to replace HashMap with something better, but I need it to be fast in both adding and retrieving items."
13527814,2,0,1,java.util.HashMap,"Since it is an unchecked exception, you could use composition, wrap a HashMap and throw an IllegalArgumentException on duplicates in the put method."
13527567,2,0,2,java.util.HashMap,Throw an exception that extends RuntimeException in your class that extends HashMap.
13527599,2,0,6,java.util.HashMap,"I wouldn't extend HashMap class, since in this case, it would lead to a violation of Liskov Substitution Principle because you alter behavior of a base class method."
13527599,2,0,6,java.util.HashMap,Instead I would use composition: Create your CustomHashMap class implementing Map interface and HAVING an HashMap field.
13527599,2,0,6,java.util.HashMap,"And redeclare every methods present in HashMap class, adding a delegation to the original HashMap for each except for the put() method => throw an exception if entry already exists."
13527697,2,0,0,java.util.HashMap,You can extend HashMap and throw an Exception that is subclass of RuntimeException or one of the Exception already thrown by the put method.
13529689,2,0,0,java.util.HashMap,"I'd do it this way:  create a HashMap<String, List> parse the XLS file line by line find EmployeeName and (LOP or Half-day) in a row if there is no Integer in the map for the Employee name, create a new pair, add your LOP or Half-Day."
13529827,1,0,0,java.util.HashMap,With this in mind do you still think i should create a class or should i keep the class showed below and then add a HashMap containing the data then iterate over that map to insert the data in my GUI?
13531549,2,0,3,java.util.HashMap,"use JTable instead of bunch of JTextField layed by GridLayout  or  add there putClientProperty and to add identifier Row a Column from GridLayout put JTextField to the HashMap I would be preferring putClientProperty (you can to multiplay number or additional infos.., number of separate putClientProperty isn't somehow reduced) depends of (not clear) desing, you can to add ActionListener to JTextField (accelerator is ENTER key) or DocumentListener  virtual example, code example for JButton and ActionListener, putClientProperty is accesible from all methods or Listeners added to JTextField  in the loop code."
13531444,1,0,0,java.util.HashMap,JSF HashMap wrong output with I am involved in a JSF project and I am trying to make a view for a shopping cart.
13534279,2,0,2,java.util.HashMap,"As the JavaDoc states, null keys and values are allowed in a HashMap Also note, that in your code there is no empty list, there is no list at all."
13535694,1,0,0,java.util.HashMap,reading text file and get Distance value by HashMap.
13535694,1,0,0,java.util.HashMap,"these number are distance for Example distance between A & Z is 75  and I wont to read these  distance and cities like (Z75)(T118)(S140) by java program I think HashMap good for my problem after I created HashMap as you see I wrote         myMap.get(""A""); I wont to give me the result (Z75)(T118)(S140) ."
13535716,2,1,1,java.util.HashMap,Of course you need to populate your HashMap before you can get any data back from it.
13535716,2,1,1,java.util.HashMap,Use Map instead of HashMap.
13537397,2,1,0,java.util.HashMap,"Having a HashMap defined with Node has a key Integer will help in this case, because you can store additional info in the Node instance."
13537397,2,1,0,java.util.HashMap,"But if you want/need to keep your current structure, in order to know how many edges are leading to a given node you'll have to iterate through the various values of the HashMap entrySet (which based on what you said will be lists of edges) and see which edges have the node you're looking for has a destination node, this information would have to be stored in an auxiliary structure though (such has another map)"
13538711,2,0,3,java.util.HashMap,Edit: HashMap code.
13538779,1,0,0,java.util.HashMap,I store the components in a HashMap with a key of the component name and a value of the component.
13538921,1,0,4,java.util.HashMap,"But then when I try to pass this into HashMap, I get an error."
13538921,1,0,4,java.util.HashMap,"So my second question is: If you want to use a structure like this (HashMap(-,TreeMap)), and you want the TreeMap to use a custom comparator, how do you go about doing that?"
13538921,1,0,4,java.util.HashMap,"Anyways, the question of how I can get TreeMap to know how I want it to compare keys in K while inside the HashMap above is really the bigger question I have."
13538958,2,1,3,java.util.HashMap,Your declaration of _buyBook instantiates the HashMap only.
13538958,2,1,3,java.util.HashMap,"You have to create instances of TreeMap<Priority, Order> and put() them into the HashMap."
13539385,2,1,1,java.util.HashMap,"Which implementation you want (HashMap, et."
13543181,1,0,2,java.util.HashMap,"in a HashMap, but before i can do that i need to parse it somehow."
13543486,2,0,2,java.util.HashMap,Use Map interface and an implementation like HashMap
13543523,2,0,64,java.util.HashMap,Classes that implement the Map interface include (but are not limited to):  HashMap LinkedHashMap Hashtable  Each is designed/optimized for certain situations (go to their respective docs for more info).
13543523,2,0,64,java.util.HashMap,HashMap is probably the most common; the go-to default.
13543523,2,0,64,java.util.HashMap,For example (using a HashMap): code.
13546298,2,0,2,java.util.HashMap,"Hashed data structures, such as HashMap and HashSet, may fail to find an object that is actually present if it has a broken hashCode method."
13548249,1,0,1,java.util.HashMap,Adding values to HashMap.
13548249,1,0,1,java.util.HashMap,"I'm currently adding values to a HashMap<String, SpriteSheetAnimation>."
13548349,1,0,0,java.util.HashMap,I want to map few columns to vehicleDocuments HashMap.
13548840,2,0,3,java.util.HashMap,"So as well as implementing hashCode(), you need to implement equals() on an object that is used as the key to a Java Map (HashMap etc)."
13549065,1,0,4,java.util.HashMap,Sorting ArrayList of HashMap based on key value.
13549065,1,0,4,java.util.HashMap,Each HashMap consists of several kay-value pairs and everything comes as a string.
13549166,1,0,5,java.util.HashMap,"I have to store a close list for this I defined a Map - Map<Node, Boolean> closeList = new HashMap<Node, Boolean>()  now for checking whether a node is exist in this map I use - boolean binExists = closeList .containsKey(node) seems that the value-boolean of the map is unnecessary ."
13549166,1,0,5,java.util.HashMap,Have you any better idea for this check using HashMap mode (O(1)) ?
13549175,2,1,11,java.util.HashMap,"Even though using a Set<Node> looks better than using a Map<Node, Boolean>, java.util.HashSet is using a HashMap internally in it's implementation."
13549974,2,0,1,java.util.HashMap,... which delegate's to HashMap.KeySet.iterator().
13549974,2,0,1,java.util.HashMap,"There are a few more links in the chain, but eventually you get to HashMap.HashIterator, which contains this in the constructor: code."
13549974,2,0,1,java.util.HashMap,... where modCount is a field in the enclosing instance of HashMap which keeps track of the number of modifications.
13550332,2,1,0,java.util.HashMap,"Why don't you implement some kind of cache system (maybe with a Java HashMap) where you can put a parent and its children and instead of loading them anyway, load them only if they aren't already in the cache?"
13550448,2,1,6,java.util.HashMap,"From an answer from this post: - With the later approach, if you are regularly accessing the key-value pair, then for each key, the map.get() method is called, which - in the case of a HashMap - requires that the hashCode() and equals() methods of the key object be evaluated in order to find the associated value*."
13550744,2,1,1,java.util.HashMap,Here an example in Java using HashMap code.
13551379,2,1,7,java.util.HashMap,"You need to choose an implementation (HashMap being the most often used one, but there are other implementations, with other characteristics)."
13551382,2,0,1,java.util.HashMap,Please check here: http://docs.oracle.com/javase/6/docs/api/java/util/Map.html You can use a HashMap to instantiate.
13551383,2,0,3,java.util.HashMap,I recommend you to use one of the implementing classes like HashMap.
13551383,2,0,3,java.util.HashMap,"(The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)"
13551383,2,0,3,java.util.HashMap,Your code could be then be functional by simply replacing Map for HashMap as in: code.
13551775,2,1,1,java.util.HashMap,"If so, choose a serializable type, like HashMap."
13551896,1,0,3,java.util.HashMap,Currently I am using the HashMap implementation.
13551965,2,0,3,java.util.HashMap,"It will probably not save you a lot of memory, but it might save you some, and perform a bit better than a normal HashMap."
13721266,2,0,1,java.util.HashMap,so  try to modify the lib's code to using HashMap to hold the nodes.
13552826,1,0,3,java.util.HashMap,"The userid and password are then saved to a HashMap<String, String> with attributes _userid and pwd."
13553026,2,1,7,java.util.HashMap,"Update:   As Maxim pointed out, using HashMap would be a more appropriate choice than Hashtable here."
13553026,2,1,7,java.util.HashMap,"You can use a HashMap to count the occurrences of each unique element in your double array, and that would:  Run in linear O(n) time, and  Require O(n) space  Psuedo code would be something like this:  Iterate through all of the elements of your array once: O(n)  For each element visited, check to see if its key already exists in the HashMap: O(1), amortized If it does not (first time seeing this element), then add it to your HashMap as [key: this element, value: 1]."
13553026,2,1,7,java.util.HashMap,"O(1), amortized  Having finished building your HashMap, iterate through the map and find the key with the highest associated value - and that's the element with the highest occurrence."
13553026,2,1,7,java.util.HashMap,O(n)  A partial code solution to give you an idea how to use HashMap: code.
13553026,2,1,7,java.util.HashMap,"I'll leave as an exercise for how to iterate through the HashMap afterwards to find the key with the highest value; but if you get stuck, just add another comment and I'll get you more hints =)"
13554453,2,0,1,java.util.HashMap,ThreadLocal is essentially a HashMap keyed on the thread ID.
13554592,1,0,1,java.util.HashMap,"I store the actors and movies in a HashMap<String, HashSet<String>>."
13554877,1,0,2,java.util.HashMap,"the equals override just compare them to that both members of the 2nd class  , I think it would be better I use HashMap<K, V> but still I would be glade to know how the hashCode should be looks like in such case  ?"
13555723,1,0,0,java.util.HashMap,"Here, an obvious choice would be a Hashtable but again, operations on Hashtable are synchronized, so I'm trying a HashMap."
13555723,1,0,0,java.util.HashMap,This is a bit of a risk with an unsynchronized HashMap but this flooding would be something that is outside of normal application operation.
13555803,2,0,0,java.util.HashMap,"But in difference to you i would use TreeMap<String, Object>  or HashMap You call that the lockMap."
13566291,2,1,4,java.util.HashMap,"when neither of the arguments to put() are null  You should rather use HashMap, which allows 1 null key, to avoid getting NPE when using put with null key, method which in case of Hashtable throws NPE, because it does not allow null keys, or value."
13566306,2,0,1,java.util.HashMap,Also this post might be useful as to whether you want Hashtable or HashMap
13570743,2,0,0,java.util.HashMap,a HashMap for your purpose.
13567532,2,0,0,java.util.HashMap,"HashMap) and read the files line by line and insert the strings into the map, incrementing the value each time you find an existing entry."
13569079,1,0,4,java.util.HashMap,Can java annotation have complex return type like HashMap.
13569079,1,0,4,java.util.HashMap,"Can annotation have complex return type, such as HashMap."
13570362,2,0,1,java.util.HashMap,"A HashMap can store multiple entries per bucket, and which bucket is chosen depends on the hashcode."
13570362,2,0,1,java.util.HashMap,"The HashMap finds entries for a key by using the hashcode() to identify the bucket, and then equals() to find the matching key within that bucket."
13570381,2,1,6,java.util.HashMap,"This is because, whenever an object is searched let's say in a HashMap or a HashSet, then first it is searched on the basis of hashCode(NOTE : - hashCode() is not used for search in case of ArrayList, or LinkedList."
13570408,1,0,0,java.util.HashMap,Regarding the example in Oracle's java online tutorial that uses HashMap to store anagram.
13570408,1,0,0,java.util.HashMap,I was reading the example in Oracle's online java tutorial that uses HashMap to store anagrams: code. }
13570408,1,0,0,java.util.HashMap,"Since HashMap is implemented with Hash Table, I think that each sorted alphabetized string should have a unique hash code after compression(otherwise the linked list that stores the values in the HashMap will store a value that's not a anagram of the sorted alphabetized string)."
13570408,1,0,0,java.util.HashMap,I am not exactly sure how Java's implementation of HashMap can satisfy this - I assume that they use the hash code of a string (a1*31^n-1 + a2*31^n-2 + ... + an).
13573188,2,1,1,java.util.HashMap,"Never, ever assume that hash codes are unique -- but realize that HashMap already knows that hash codes are non-unique, and deals with them appropriately."
13573188,2,1,1,java.util.HashMap,"In other words, even if a.hashCode() == b.hashCode(), if !a.equals(b), then a HashMap will not mix up the value associated with a and the value associated with b."
13571754,1,0,1,java.util.HashMap,Or should I just store everything in a simple Java HashMap in-memory and have a aggregation background thread and don't use another technology?
13573274,1,0,0,java.util.HashMap,"The information for actors and movies is stored in a HashMap(String, HashSet(String)) - so if you put in an actor as a key, you get the movies they acted in, and if you put in a movie as the key, you get the actors that have acted in it."
13575916,1,0,0,java.util.HashMap,"The two error messages I receive are:  [Too many errors, abort]  and  # A fatal error has been detected by the Java Runtime Environment: # #  SIGSEGV (0xb) at pc=0x00007f096d096942, pid=12102, tid=139678234564352 # # JRE version: 6.0_24-b24 # Java VM: OpenJDK 64-Bit Server VM (20.0-b12 mixed mode linux-amd64 compressed oops) # Derivative: IcedTea6 1.11.5 # Distribution: Ubuntu 12.04 LTS, package 6b24-1.11.5-0ubuntu1~12.04.1 # Problematic frame: # J  java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  I have found a thread pertaining to the second warning, but it seems to suggest a hardware issue."
13578110,2,0,4,java.util.HashMap,This class implements the DBObject and uses a HashMap to store it's properties.
13581409,1,0,2,java.util.HashMap,"How hashcodes for enums are calculated in Java, and combining enum hashCodes for a HashMap's key."
13581409,1,0,2,java.util.HashMap,This class is used as key for a HashMap.
13581572,2,0,0,java.util.HashMap,"So when you serialize the HashMap and read it back in a different VM, you will not be able to look up values there using keys that have been constructed in that VM."
22715732,2,0,1,java.util.HashMap,"it extends HashMap, and as an extending class, it's perfectly fine to bring additional methods that support the idiosyncracies of that class."
13588267,2,0,0,java.util.HashMap,"Otherwise, people generally use HashMap since time is not wasted in making sure only one thread accesses the data structure."
13587229,1,0,1,java.util.HashMap,When the display is first opened all of the existing objects get added in to the HashMap 1 by 1.
13587229,1,0,1,java.util.HashMap,"After that the user can add more, 1 at a time which puts a new object into the HashMap."
13587229,1,0,1,java.util.HashMap,"When I do containsValue it does not find any incorrect matches (it works as it should) but it doesn't help because when i use HashMap.put(K, V) it overrides the one that it would have returned the false positive for containsKey."
13587229,1,0,1,java.util.HashMap,"All the code does is iterate through each object, check if the HashMap contains the key already, if it does it returns the value for the key otherwise it creates a value based off the key passed in to the method and puts it into the hashmap."
13587269,2,0,5,java.util.HashMap,"Note that, if you are using your custom class object as key in your HashMap, make sure that your class overrides both equals and hashCode method, else you would never be able to find the key in the HashMap again."
13587328,2,0,1,java.util.HashMap,I would suggest that you don't use a Custom Object as a key of your HashMap.
13587328,2,0,1,java.util.HashMap,Change the key of the HashMap to this attribute.
13588980,2,0,1,java.util.HashMap,"Create hash table (one of implentations of java.util.Map) and put the parsed results there, so that New York is a key and test1, test5 etc are values stored in list: Map<String, Collection<String>> map = new HashMap<>(); Now you have direct access to this table and can always find mapping of any city."
13590018,2,1,2,java.util.HashMap,You can use HashMap for storing keys and corresponding entries.
13590031,2,0,0,java.util.HashMap,"The ideal solution for your requirement, is to create a HashMap<String, String>, which contains all the rules."
13594400,1,0,2,java.util.HashMap,ArrayList of HashMap elements to Array.
13594400,1,0,2,java.util.HashMap,I have an HashMap with url key on it.
13596127,2,1,3,java.util.HashMap,"urls.get(index).values() will return a Collection view of the values contained in the HashMap at the specified ArrayList index, which will be used to instantiate and populate a new ArrayList."
13594484,1,0,0,java.util.HashMap,Why HashMap instead of my type?
13594484,1,0,0,java.util.HashMap,"The output I'm getting:  {firstName=Anna, lastName=Smith}  Got {employees=[{firstName=John,   lastName=Doe}, {firstName=Anna, lastName=Smith}, {firstName=Peter,   lastName=Jones}]}  But I'm not expecting the elements in my List to be HashMap instances, but Employer objects."
13594612,2,1,4,java.util.HashMap,"I haven't used Jackson, but it seems you're getting what you asked for - a HashMap of String, Object pairs."
13601240,2,0,1,java.util.HashMap,In comparison using HashMap will have the whole overhead of storing boxed primitives in a list of linked lists.
13597476,1,0,0,java.util.HashMap,"-Java- save HashMap properties to a properties file, and load those properties back to the HashMap."
13597476,1,0,0,java.util.HashMap,"So I run into a casting problem with storing HashMap properties to a Properties file because the key of the HashMap is an object that cannot be cast to java.lang.String because properties must be (String, String) and my HashMap is (Object, Long)."
13600874,1,0,1,java.util.HashMap,I have a problem with changing values in an HashMap>.
13600874,1,0,1,java.util.HashMap,"I fill the HashMap with keys from a static array and add a default value of an ArrayList that is filled with 0, 0, 0."
13600874,1,0,1,java.util.HashMap,"What I'm trying to do is take the top 3 placed athletes, and update my HashMap value so the ArrayList will have 3 numbers that represent how many gold, silver and bronze medals every country has won."
13600874,1,0,1,java.util.HashMap,The problem is that when I try to replace the old value with a new ArrayList it replaces all the values in the HashMap with new ArrayList's instead of just the one with the matching key.
13601834,1,0,2,java.util.HashMap,Here is an implementation of HashMap.
13602194,2,0,1,java.util.HashMap,This not the approach HashMap uses in reality.
13602402,1,0,2,java.util.HashMap,to create the DeclaredType-instance for HashMap you would use this method with the typeElement for HashMap and two typeMirrors for String).
13605652,1,0,0,java.util.HashMap,Why this HashMap.get return a null?
13605652,1,0,0,java.util.HashMap,I am inserting the values into HashMap like this code.
13605652,1,0,0,java.util.HashMap,in the below code list2 is ArrayList and it is having the keys of HashMap and i am retrieving the values like the following  code.
13612687,2,0,1,java.util.HashMap,You can use HashMap where key will be stockid and value will be arraylist of the objects which contain date and time.
13612687,2,0,1,java.util.HashMap,"Map<Integer, ArrayList<Price>> anyname = new HashMap<Integer, ArrayList<Price>>();"
13619200,1,0,0,java.util.HashMap,In my Application I build a Cache in the form of HashMap by taking its key-value from Database.
13619994,2,0,0,java.util.HashMap,This is a much better way to implement cache than using HashMap.
13619994,2,0,0,java.util.HashMap,"As when you store a reference to HashMap it stores the Strong Reference to the object and when you set the object to null, it will still not be garbage collected as there is a strong reference to it in the map."
13622992,1,0,1,java.util.HashMap,"Now in Eclipse is new HashMap<String, String> red underlined."
13623013,2,1,2,java.util.HashMap,"Map<String, String> map = new HashMap<String, String>(); With new HashMap, you call the HashMap.java."
13623013,2,1,2,java.util.HashMap,"To initialize the HashMap, you should call the Constructer."
13624060,2,1,1,java.util.HashMap,"You should create a TypeToken<HashMap<K, V>> from the TypeToken<ImmutableMap<K, V>>, but I honestly don't know how you can do that."
13624060,2,1,1,java.util.HashMap,"Instead, you can use an InstanceCreator to trick GSON into building a HashMap when an ImmutableMap is actually required: code."
13625050,1,0,0,java.util.HashMap,e.g person A(id=10) in list_A Similarly person B(id-20) in list_B And then put them in HashMap?
13631521,1,0,3,java.util.HashMap,How to use Java HashMap and IdentityHashMap?
13631521,1,0,3,java.util.HashMap,I am using HashMap.
13631521,1,0,3,java.util.HashMap,My question is: Can I trust that HashMap works in my example?
13631779,2,0,0,java.util.HashMap,This means if you want to use them as keys in a HashMap (or IdentityHashMap) you'll only be able to retrieve them by using the original object.
13631779,2,0,0,java.util.HashMap,"A HashMap still works if you don't override equals() and hashcode() on your objects but it will generally not do what you want - in this case, it becomes equivalent to IdentityHashMap"
13631581,2,0,2,java.util.HashMap,Can I trust that HashMap works in my example?
13631581,2,0,2,java.util.HashMap,"You cannot avoid providing a sensible hashCode and equals methods, it is required for HashMap and other Hash collections to work."
13631671,2,0,1,java.util.HashMap,Can I trust that HashMap works in my example?
13633996,1,0,4,java.util.HashMap,My initial thought is to use a HashMap to store the local variables but that seems inefficient and doesn't handle multiple types.
13638971,1,0,0,java.util.HashMap,I only need to find a way to write a HashMap which associates a Feed with a JTextArea.
13639644,2,0,1,java.util.HashMap,"If yes, you can have a HashMap with key as id and value as JTextArea object."
13639644,2,0,1,java.util.HashMap,"If no, then you can create a custom ID for each feed and use HashMap for associations."
13639744,2,0,3,java.util.HashMap,HashMap provides constant-time performance O(1) for the basic operations (get and put).
13640294,2,1,10,java.util.HashMap,"Having run this program, I think the problem is the following: since you are adding a transition from the node to itself, you end up with a HashMap that maps a character to itself."
13640294,2,1,10,java.util.HashMap,"Since your object extends HashMap, it uses the HashMap code to compute the hash code for your object."
13640294,2,1,10,java.util.HashMap,"To do this, it tries to recursively construct the hash code for all the objects in the HashMap, which includes itself."
13640294,2,1,10,java.util.HashMap,"I'm not sure what the best fix for this is, but I would start by not having this object extend HashMap."
13640294,2,1,10,java.util.HashMap,"Making a HashMap a direct field of the object means that you'll break this cycle because Java will use the default implementation of hashCode, which doesn't try to compute a deep hash code for the object."
13640518,1,0,0,java.util.HashMap,How to get this string and put into String Array or HashMap?
13649074,2,0,0,java.util.HashMap,"Of course your intuition of HashMap is right on the spot, but someone may always present a better solution if you don't get too involved with the specifics."
14036528,2,0,6,java.util.HashMap,Your correct choice will be one which has value true in the HashMap.
13660748,2,0,1,java.util.HashMap,"If you're talking about Java's HashMap (or any Map implementation), you can check if a key is already in the map via Map#containsKey (e.g., prior to adding it, to avoid overwriting the previous entry or whatever)."
13664654,1,0,3,java.util.HashMap,Store HashMap in java webapp session.
13665797,2,0,1,java.util.HashMap,A good place to start would be a HashMap and String.split.
13665797,2,0,1,java.util.HashMap,The put method adds the key/value pair to the HashMap.
13667534,2,0,0,java.util.HashMap,"If I correctly understand what you are trying to do, I must say that you are not making effective use of a HashMap."
13667534,2,0,0,java.util.HashMap,"In this example, you are using a HashMap just as a container to hold ""name"" and ""number"" and hence I don't see a real need for the hashMap at all."
13669390,2,0,3,java.util.HashMap,"For synchronizing a HashMap,you can use  code."
13669373,2,0,1,java.util.HashMap,Use Collections.synchronizedMap(new HashMap());
13670786,2,0,0,java.util.HashMap,Why you don't use a HashMap?
13670786,2,0,0,java.util.HashMap,You can access the value by the get method of the HashMap.
13670150,1,0,0,java.util.HashMap,"When merging the context, I provide values for VAR_A = a1, VAR_B = b1 and for TEMPLATE_ANOTHE, I provide a HashMap with the following entries code."
13677079,2,0,0,java.util.HashMap,I normally use the HashMap class in the util package for storage such as this.
13671200,1,0,1,java.util.HashMap,"I have a preferences (Key = name, value = Car) HashMap  that contains people's names as keys and Car they would like to drive as values."
13671455,2,1,5,java.util.HashMap,You won't get better than that without using a hashing function of some kind (HashSet or HashMap).
13672248,2,0,1,java.util.HashMap,HashMap is a generic class so you can put any object into it.
13672282,2,0,1,java.util.HashMap,A HashMap can only have one value to one key.
13672282,2,0,1,java.util.HashMap,"see HashMap: One Key, multiple Values"
13673409,2,0,1,java.util.HashMap,"public object him; public String a,b; Or, if you have an existing object that you want associated with each pair of strings, which it sounds like you might have, you'll want to use a Map, like HashMap: code."
13673409,2,0,1,java.util.HashMap,See the javadocs for HashMap
13677412,2,1,2,java.util.HashMap,"Another solution is to create a HashMap<String, Integer> that maps the number String with its related int, but I like the first solution better as it seems cleaner to me."
13678148,1,0,0,java.util.HashMap,I am having query which return java.util.HashMap.
13683438,1,0,2,java.util.HashMap,The guy explains that we're actually extends a HashMap inline and then executing the code bellow.
13683454,2,1,12,java.util.HashMap,That is an anonymous subclass of HashMap with an instance initializer block (which is sort of like code shared between all constructors).
13686335,1,0,2,java.util.HashMap,HashMap before passing to convertion: code.
13686552,2,0,0,java.util.HashMap,"Another thing is that the null pointer exception may be caused by any other object, not specifically the HashMap."
13687329,1,0,0,java.util.HashMap,"I would be very grateful if somebody could clarify the following topics: 1) Is the implementation of the methods equals and hashCode absolutely required, in order for a TreeSet and a TreeMap to work properly, as it is in HashMap?"
13687417,2,1,1,java.util.HashMap,"Is the implementation of the methods equals and hashCode absolutely required, in order for a TreeSet and a TreeMap to work properly, as it is in HashMap?"
13687346,1,0,1,java.util.HashMap,Java HashMap get method null pointer exception.
13692625,1,0,1,java.util.HashMap,"Furthermore, if I have a HashMap<Character, Character>, where I always enter the exact same Character object as both key and value, does it take up double the memory of the references in a HashSet<Character> plus the amount of memory for the Characters themselves, even though the same object reference is being used for both key and value each time?"
13692650,2,0,0,java.util.HashMap,"In the current JDK, a HashMap<Character, Character> will take up the same amount of memory as a HashSet<Character> of the same size."
13692655,2,1,0,java.util.HashMap,HashSet is a wrapper for HashMap so it consumes the same amount of memory.
13694181,1,0,2,java.util.HashMap,I have already completed classes implementing an ArrayList and another using a Map/HashMap.
13695832,1,0,16,java.util.HashMap,Explain the timing causing HashMap.put() to execute an infinite loop.
13695832,1,0,16,java.util.HashMap,"As a number of people have noted and encountered HashMap.put can go into an infinite execution loop when used concurrently (see GRIZZLY-1207, JGRP-525, possibly HHH-6414, and this SO answer)."
13695832,1,0,16,java.util.HashMap,HashMap is clearly documented as not thread safe.
13695832,1,0,16,java.util.HashMap,A look inside HashMap.put shows that HashMap.Entry contains a link to the next node (in the bucket?).
13696097,2,1,18,java.util.HashMap,"To the contrary of what many people think, the main issue with multi-threading and HashMaps is not just a duplicate entry or a vanishing one... As you said, an infinite loop might occur when two or multiple Threads concurrently decide to resize the HashMap."
13696097,2,1,18,java.util.HashMap,"If the size of the HashMap passes a given threshold, several threads might end up trying to resize it at the same time, and if we are lucky enough (you deployed the code in production already) they will keep going forever..."
13702684,2,0,2,java.util.HashMap,You could use a HashMap to store the mapping (!)
13714757,2,0,3,java.util.HashMap,You will notice that java.util.HashMap does not actually throw it!
13714806,2,0,2,java.util.HashMap,"A lot of the implementations of Map in the Java do not throw the exception (HashMap, TreeMap, ConcurrentHashMap, etc)."
13716928,1,0,1,java.util.HashMap,Sorting values in a HashMap.
13716928,1,0,1,java.util.HashMap,"I have a HashMap<Character, Integer> and I'd like to place the values into a PriorityQueue in ascending order of the integers."
13717673,2,0,1,java.util.HashMap,"Change private static HashMap thingsToRent = new HashMap(); to private static Map thingsToRent = new HashMap(); Your naming conventions are also a mess, change the class name to something like RentalItems and your get method to getRentableItem Inside that method you need to access the map with the provided key: code."
13720595,1,0,0,java.util.HashMap,HashMap borks my values.
13720854,2,1,1,java.util.HashMap,Since a HashMap can only store unique keys you're forced to go with a list if you want multiple values for one (1) key.
13720854,2,1,1,java.util.HashMap,The HashMap now accepts the List interface and can thusly accept any list-type that implements it.
13724077,2,0,0,java.util.HashMap,"In your case you keep filling the same list (even though you remove it from that HashMap, it still exists as a local variable)."
13726709,1,0,0,java.util.HashMap,Iterate the creation of a HashMap as a value in another HashMap.
13726709,1,0,0,java.util.HashMap,"I have a HashMap with a key as an object of some class, and a value as another HashMap, who's key is a String, and value is a Double: code."
13726709,1,0,0,java.util.HashMap,"I need a loop that will add keys (objects) and values (HashMaps) to this HashMap, but I cannot create a new HashMap variable in the loop as its 'value'."
13726881,1,0,1,java.util.HashMap,How to know when a server updates my HashMap in java.
13726881,1,0,1,java.util.HashMap,Upon receiving the Customer's listener thread should update HashMap at key 1.
13726996,2,0,1,java.util.HashMap,"If it's not a ConcurrentHashMap and you are not using synchronization, there is no guarentee you will ever see a change in a HashMap."
13728098,1,0,1,java.util.HashMap,I cannot use a HashMap as I have to first store the records in an Array or ArrayList and then insert it which defeats the purpose as I have to group the lists by key first anyway.
13728334,2,0,1,java.util.HashMap,You could use HashMap for this easily.
13728344,2,1,0,java.util.HashMap,"However, you'd probably be better off with a HashMap<String, Animal> code."
13732130,1,0,1,java.util.HashMap,"I am getting the below error:  Exception in thread ""main"" java.lang.NullPointerException at   HashMap.CountLetters.tallyPrint(CountLetters.java:12) at   HashMap.CountLetters.main(CountLetters.java:21)  The goal is to get store the occurrences of each letter in a HashMap."
13734888,1,0,0,java.util.HashMap,"to only get keys from a HashMap that contain the letters A, B or E I am not though interested in words such as AAAAAA or EEEEE I need words with at least two different letters (in the best case, three)."
13735031,2,0,4,java.util.HashMap,"You can solve this by redefining your HashMap words as HashMap<string, HashSet<string>> and using the methods on that class; you'll have to change your display method though to print out the elements of the HashSet."
13736873,1,0,0,java.util.HashMap,"Requriement: static synchronized singleton map which will be used by tons of threads for some processing operations UPDATE After going through few articles, found that ConcurrentMap is much preferable than HashMap in multi-thread environment http://java.dzone.com/articles/java-7-hashmap-vs"
13738504,2,1,7,java.util.HashMap,I think you should use a HashMap with int as key and String as value if your int values are going to be unique.
13738538,2,0,1,java.util.HashMap,This will be a good decision if you int values are not unique and so you can not use HashMap
13738840,2,0,1,java.util.HashMap,You can use HashMap for that for example.
13861371,2,1,0,java.util.HashMap,"I ended up writing this code which converts all Long instances to Integer in a Map, HashMap or a JSONObject: code."
13748113,1,0,0,java.util.HashMap,How to handle the exception when a HashMap returns NULL.
13748113,1,0,0,java.util.HashMap,I have a method as follows; It does some computation and then returns a HashMap.
13748181,2,0,1,java.util.HashMap,"No, it will not give null pointer exception because you are just returning HashMap."
13748181,2,0,1,java.util.HashMap,In calling method before doing any operation on returned HashMap make sure to check that returned value is not null.
13750961,2,0,0,java.util.HashMap,If your insertData() is just calling standard methods on HashMap (e.g.
28990212,2,0,0,java.util.HashMap,"The best thing I have experienced to solve it that before you do the deep serialisation you need to put the data like beans, list, map or any data to be serialised in to the HashMap then try to deep serialise that HashMap."
13753663,2,1,0,java.util.HashMap,"Store result in HashMap<key,value> where key is ID and value is Integer which represent number of times ID occurs."
13753843,1,0,0,java.util.HashMap,Adding a Set to HashMap.
13756235,1,0,2,java.util.HashMap,So far I use HashMap to stored my data.
13758164,1,0,5,java.util.HashMap,Collision resolution in HashMap.
13758164,1,0,5,java.util.HashMap,When we put key-value pair in HashMap this could happen the hashcode of two keys could be same then how in this condition storing and retrieval of key-value will be handled.
13760010,2,0,3,java.util.HashMap,"A hashCode() with many collisions, or a HashMap with too few buckets, can make some linked lists long."
13762604,2,0,1,java.util.HashMap,"So it will return true for your 3 cases, however it will also return true for other cases such as HashMap"
13768507,2,0,0,java.util.HashMap,According to your logic it seems HashMap is suitable for this.
27753675,2,0,0,java.util.HashMap,You can collect info about a markers in a HashMap when adding them to a map.
13769415,2,1,2,java.util.HashMap,"So I think you need to create a HashMap, which uses the questionIndex as the key, and answer as the value, to store the user's selections."
13772612,2,0,0,java.util.HashMap,Use a HashMap!
13772686,2,0,1,java.util.HashMap,"If for some reason you want to be able to lookup a host by String name, don't use a List, use a Map (preferably a HashMap)"
13773662,1,0,2,java.util.HashMap,I need to sort the Students in the HashMap based on the Student's first attribute.
13773662,1,0,2,java.util.HashMap,"I need the sort method to happen after I added all of the students in the HashMap, not while it's being added."
13775903,2,0,1,java.util.HashMap,HashMap uses an array which MUST have a size which is a power of 2 (as per the documentation).
13775908,2,0,0,java.util.HashMap,"According to the comment in the source of HashMap, it has to be a power of two."
13775908,2,0,0,java.util.HashMap,"It makes sense in a HashMap, because of how the hashing works."
13776031,2,0,0,java.util.HashMap,"in an array, HashMap etc."
13777147,1,0,0,java.util.HashMap,Java look up closest previous Date in HashMap.
13777147,1,0,0,java.util.HashMap,"They require the system to store previous prices of given products, so I decided to go with a HashMap<Date,Integer>."
13777192,2,0,0,java.util.HashMap,"If so I suggest you to move to TreeMap instead of HashMap and use your custom comparator that implements the logic of ""closest"" date."
13782727,2,1,2,java.util.HashMap,"I would indeed use a HashMap<Integer, Person> to store persons by ID1, and a TreeMap<Integer, Person> to store persons by ID2, sorted by ID2."
13800851,2,0,0,java.util.HashMap,You can use HashMap options = new HashMap(); look at my ldap test connection code.
13782424,1,0,1,java.util.HashMap,Then I try to insert into a HashMap of ArrayLists where initial char is the key and my parsed ArrayList is the item.
13782450,2,0,2,java.util.HashMap,"When you specify HashMap<Character, ArrayList> dependenciesList in your constructor, that is a different map than the class field dependenciesList."
13782452,2,0,3,java.util.HashMap,"Remove the leading type (HashMap<Character, ArrayList>) to make it initialize the instance variable instead."
13782459,2,0,1,java.util.HashMap,"You were creating a new HashMap inside constructor, but your class variable dependenciesList was null"
13787059,2,0,4,java.util.HashMap,Its the same for HashMap return values.
13787059,2,0,4,java.util.HashMap,"So instead, we need a wrapper class for the HashMap code."
13785029,1,0,2,java.util.HashMap,What's the fastest way to sort a HashMap alphanumerically (on a key that's an array of ints)?
13785079,2,0,0,java.util.HashMap,Now you'd make a TreeMap not a HashMap and add SomeClass instances: code.
13785551,1,0,0,java.util.HashMap,How can I make the relationship of keys stronger so that it will be actually tied to the HashMap and contain all its keys.
13786850,1,0,2,java.util.HashMap,Overriding `equals()` method gives unexpected result in `HashMap`.
13793119,1,0,0,java.util.HashMap,"What I tried doing is creating a HashMap using the username as key and HttpSession as the value (my actual setup is a little more involved, but after repeated seemingly inexplicable failures, I boiled it down to this simple test)."
13797177,2,1,0,java.util.HashMap,Or you can implement a HTTP Session listener and keep a HashMap of user sessions that can be accessed and invalidated.
13793761,1,0,4,java.util.HashMap,"Personally, I would've directly initialized PREFIXES as a HashMap and then put the key–value pairs in directly, without creating a dummy, placeholder map or making the field an immutable map."
13799358,1,0,2,java.util.HashMap,"I have a method that returns a HashMap, and is defined as follows; code."
13800640,1,0,0,java.util.HashMap,How to add multiple objects of class for same key value in HashMap in java?
13800640,1,0,0,java.util.HashMap,"I want to store objects of class from arraylist to hashmap, one key may contain multiple objects, how to do that  here is my code, Map<Integer, classObject> hashMap = new HashMap<Integer, classObject>(); code."
13804020,2,0,0,java.util.HashMap,In this case (different hashCodes) the objects are different for the HashMap.
13804607,2,1,2,java.util.HashMap,"equals() and hashCode() are used conjunctively in certain collections, such as HashSet and HashMap, so you have to make sure that if you use these collections, you override hashCode according to the contract."
13804607,2,1,2,java.util.HashMap,"If you don't override hashCode at all, then you'll have problems with HashSet and HashMap."
13804607,2,1,2,java.util.HashMap,"All your entries for HashSet and HashMap will be put into the same bucket, and you'll lose the O(1) performance and have O(n) instead."
13804634,2,0,4,java.util.HashMap,Think of a hash based structure such as a HashMap.
13804648,1,0,0,java.util.HashMap,"I have a TreeMap containing Airline , HashMap(String,Plane); I want the airline to print out planes belonging to it."
13807695,2,0,0,java.util.HashMap,This new HashMap<>() bit is Java 7 code which I thought might be fun to try.
13807695,2,0,0,java.util.HashMap,"Use HashMap<String, List<Book>> for previous versions."
13807494,2,0,0,java.util.HashMap,"What you need to do is instantiate the first dependenciesList instead of creating a new one  (I'm not a pro at java, but something like dependenciesList = new HashMap....() instead of HashMap<..> dependenciesList = new HashMap...() )"
13808200,2,1,4,java.util.HashMap,HashMap is a data structure in which you are able to store key-value pairs.
13819258,2,1,2,java.util.HashMap,Don't extend HashMap as you're doing.
13819258,2,1,2,java.util.HashMap,Use a HashMap and delegate to it: code.
13819258,2,1,2,java.util.HashMap,"At the moment, Repository is a HashMap, but you don't store anything in it: you store the values in another HashMap contained in Repository."
13819350,2,0,0,java.util.HashMap,"Rather then extending HashMap<Apartment, ArrayList<Expense>>  because its unusual you just create a variable like you already creating in your class."
13823884,2,0,1,java.util.HashMap,I suggest you use a Map (HashMap implementation) instead of an ArrayList.
13827972,2,0,0,java.util.HashMap,"Try to cache as big a part of the users as possible in a simple HashMap ""in front"" of the index, or use BatchInserterIndex#setCacheCapacity"
13825946,2,1,6,java.util.HashMap,I would look at the code for String and HashMap as these have a low collision rate and don't use % and handle negative numbers.
13825946,2,1,6,java.util.HashMap,From the source for HashMap code.
13825946,2,1,6,java.util.HashMap,As the HashMap is always a power of 2 in size you can use code.
13826720,1,0,4,java.util.HashMap,Java HashMap implementation has 'next' member in Entry class.
13826720,1,0,4,java.util.HashMap,Java HashMap implementation  has 'next' member in Entry private class.
13827069,2,1,3,java.util.HashMap,Alternatives: As alternatives to the TreeMap - you might be interested in other data structures (each with its advantages and disadvantages):  hash table - implemented as HashMap in java.
13832605,2,0,4,java.util.HashMap,"If you must associate an object with a String, a clean way to do this is by using a Map such as a HashMap<String, MyType> or HashMap<MyType, String> depending on which you desire to use as the key, but again don't put too much reliance on variable names since non-final variables can change references at the drop of a hat, and objects can be referred to by more than one variable."
13839743,2,0,1,java.util.HashMap,"Note: In HashMap, an Entry object is created whether it is chained or not, not there is no saving there."
13843084,1,0,1,java.util.HashMap,"Currently i'm using HashMap, but here both name and number will be key, which wont be good."
13843336,2,0,0,java.util.HashMap,"You still can use HashMap K=Number V=Name, since search speed logically is more important, and you can use iterator to delete by name, something like code."
13848867,2,0,0,java.util.HashMap,"From the clues you gave, I believe a HashMap (pairs of key, value) can be considered as an approach."
13849686,1,0,2,java.util.HashMap,HashMap used to Call Methods - Minimizing If Else Statements.
13849979,2,0,1,java.util.HashMap,"However, if you are after a general solution for the second part of your question, namely how to call a function based on a string that you want to look up in a HashMap, what you probably want to do is store function objects in that HashMap, and then call that function object after the lookup (you may also find this discussion helpful)."
13849753,2,0,0,java.util.HashMap,"I wouldn't use a HashMap here, I would use an EnumMap Then, in the code of your enum, you could put all the implementations as methods of the various enum subclasses."
13850975,2,1,2,java.util.HashMap,"Since HashMap is unordered, you have two ways of going about sorting your planes:  Put them into a sorted container, or Put them into an ArrayList<Plane> or an array Plane[], and sort that list or array  The first approach can be achieved with a TreeSet<Plane>: put your planes into the set, and iterate them in the ""natural"" order (i.e. the order consistent with their compareTo method)."
13851111,2,1,0,java.util.HashMap,"Perhaps the best way to search by name would be to put this same collection of Students into a Map<String, Student> such as a HashMap<String, Student> so that  you could find the Student using his/her name as key."
13852901,1,0,4,java.util.HashMap,"Storing a Tuple as the key, like you could do in a non-weak HashMap, doesn't work (the Tuple gets GCed almost immediately, with nobody pointing to it)."
13852934,1,0,1,java.util.HashMap,ConcurentModificationException in Java HashMap.
13852934,1,0,1,java.util.HashMap,writeToMap is a method to write something in hashmap and processKey() is used to do sth based on the keySet of HashMap.
13853828,2,1,3,java.util.HashMap,The copy constructor of HashMap performs a (hidden) iteration on the map that is being copied (originalMap).
13856321,1,0,1,java.util.HashMap,"I want to create a HashMap<String, HashMap<String, Long>> I know in guava we have HashMultimap which is HashMap<String, HashSet<String> but do we have some support for HashMap<String, HashMap<String, Long>> as well??"
13861575,2,0,3,java.util.HashMap,"Another option would be to create a HashMap<String, Enum>, and use that to approximate the functionality, but it would be difficult to use because it would be difficult to cast to the right subclass."
15372497,2,0,0,java.util.HashMap,"In that case you can actually use TAG rules to file when you hit a start tag, so you can do some logic like creating a new record in your HashMap for the soon-to-be-parsed new article."
13863506,1,0,27,java.util.HashMap,HashSet is backed by a HashMap so getting an object from it should be pretty straightforward.
13863506,1,0,27,java.util.HashMap,"I could just use HashMap but I have no need for a key:value pair, I just need a Set."
24842622,2,0,0,java.util.HashMap,HashSet is a little bit simplier than HashMap.
24842622,2,0,0,java.util.HashMap,"If you don't need the features of HashMap, why use it?"
25426306,2,0,14,java.util.HashMap,"1-2) If order is not important, HashMap  2) If it stores only values, the choice is a collection."
13866039,1,0,1,java.util.HashMap,Across the Internet I saw people use Map<> or HashMap<> for this.
13868887,1,0,1,java.util.HashMap,Print Message if HashMap name is Emply.
13868887,1,0,1,java.util.HashMap,"I have a program that when you type   Circle name  in the Terminal, ""name"" goes into the HashMap then later I can type   name visible  and the circle will appear on a canvas, or   name invisible  and will then disappear."
13868887,1,0,1,java.util.HashMap,"I also created a statement called forget so When I type in   name forget  it will remove ""name"" out of the HashMap then make the circle invisible if the circle is visible."
13868887,1,0,1,java.util.HashMap,"If I use   name forget  It will remove name from the HashMap I need it to print a message when ""name"" is not in the HashMap if you type something ""name visible"", I need a message that print something like ""not in HashMap"" ."
13869187,2,0,2,java.util.HashMap,public boolean containsKey(Object key) more info here: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#containsKey(java.lang.Object) Use this anytime a user requests a action to be done to an object they think is on the canvas.
13869044,2,0,1,java.util.HashMap,Check it out: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
13870423,2,1,1,java.util.HashMap,Also note that HashMap is not thread safe - unless you add some form of synchronization when accessing the map from your threads it could yield surprising results.
13871368,2,0,4,java.util.HashMap,"The map should be passed as a Map, not a HashMap unless HashMap is explicitly needed (which for the case of HashMap is not going to be the case)."
13883287,1,0,2,java.util.HashMap,Why would enum be more useful than a HashMap in this situation?
13883287,1,0,2,java.util.HashMap,"I was about to suggest simply using a HashMap and read the answers to see if the Enum  ( http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html ) was ,in fact, a better answer."
13883396,2,0,3,java.util.HashMap,"HashMap would let you insert a lot of non valid values, with effort they can be detected at runtime, but of course it will compile anyway."
13883706,1,0,0,java.util.HashMap,How to check a HashMap for unique variables?
13883706,1,0,0,java.util.HashMap,I have written code to find unique variables in a HashMap but it doesn't appear to work?
13888628,2,0,0,java.util.HashMap,You cannot iterate directly over a HashMap.
13883889,2,0,0,java.util.HashMap,Assuming you have already got a populated HashMap named sausagesEaten higher up in your code.
13884743,2,0,0,java.util.HashMap,"Based on your original code, but placing integers into the HashMap values instead of strings, and incrementing the current value for a key whenever a new order is added for that type of paper."
13892352,1,0,0,java.util.HashMap,I tried creating a temp HashMap to store the array index and String relation.
13893794,1,0,2,java.util.HashMap,Iterating HashMap on order it has been set.
13893794,1,0,2,java.util.HashMap,I've set a HashMap on certain order but it is iterated on a strange order!
13893802,2,0,8,java.util.HashMap,That's how HashMap works internally.
13893802,2,0,8,java.util.HashMap,Replace HashMap with LinkedHashMap which additionally remembers the order of insertion: code.
13896568,2,0,0,java.util.HashMap,"it's explained here Took another look on your code Well i took another look on your code and the problem is, that your HashMap is empty at the start of the Test."
13898045,2,0,0,java.util.HashMap,Take a look at containsKey and containsValue methods in HashMap API.
13898943,2,1,4,java.util.HashMap,You're using HashMap which is not ordered.
13898977,2,0,2,java.util.HashMap,You are using a HashMap that doesn't gaurante the ordering of elements.
13898977,2,0,2,java.util.HashMap,"This what the API docs for java.util.HashMap says :   This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
13899559,1,0,1,java.util.HashMap,"So I am planning to store the PreparedStatement cache in a HashMap <String, SoftReference<PreparedStatement>> But this does not allow me to close the Statements before they are GC'd."
13903995,1,0,1,java.util.HashMap,I have a HashMap that looks like this: code.
13903995,1,0,1,java.util.HashMap,"I feed my GUI class this HashMap, which has two JComboBoxes (Cause Categories + Cause Descriptions)."
13904173,1,0,0,java.util.HashMap,1) Create a HashMap on this way: code.
13904173,1,0,0,java.util.HashMap,2) Create a HashMap on this way: code.
13904173,1,0,0,java.util.HashMap,The HashMap will have about 20000 entries.
13904218,2,0,0,java.util.HashMap,This employs an anonymous subclass of HashMap that has an instance block that loads the values.
13904236,2,0,0,java.util.HashMap,"Firstly, Hashtable<String, String> is not a subtype of HashMap<String,String>."
13904236,2,0,0,java.util.HashMap,"your HashMap expects a HashMap<String, String> as a value."
13910553,2,0,0,java.util.HashMap,"There is, for instance, no way that a HashMap will be as efficient as a simple array lookup, no matter how much Hotspot optimizes it."
13910646,2,0,2,java.util.HashMap,"This includes ArrayList, HashMap/Set, StringBuilder."
13916242,2,0,1,java.util.HashMap,"Create a HashMap<Integer,List<StringLocation>>."
13915754,1,0,0,java.util.HashMap,one key multiple values in HashMap using object.
13915754,1,0,0,java.util.HashMap,Question: What's the best ways to implement this HashMap ?
13921819,2,0,2,java.util.HashMap,Also worth noting is that in the code snippet about you never set the value for the PRINT_FOR parameter in your java code and you are not using a generic HashMap.
13916945,2,1,1,java.util.HashMap,"You can then create a HashMap (or object, your call) that would satisfy some level of consistency for your design."
13917308,2,1,7,java.util.HashMap,"The standard general-purpose implementation of ConcurrentMap is ConcurrentHashMap, which is a concurrent analog of HashMap."
13922163,2,1,2,java.util.HashMap,Or at least not modify any of the fields used to implement equals() and hashCode() (in the case of a HashMap) or compareTo()/compare() (in the case of a SortedMap).
13922881,2,0,2,java.util.HashMap,"To avoid duplication of rows, the HashMap will already save you from that problem."
13923632,2,0,3,java.util.HashMap,More reading on Maps:   Map interface: http://docs.oracle.com/javase/6/docs/api/java/util/Map.html HashMap implementation: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
13924875,2,1,7,java.util.HashMap,If you want to only do this when it is not already a HashMap: code.
13924917,2,0,0,java.util.HashMap,You should not cast to HashMap!
13924917,2,0,0,java.util.HashMap,"If you really have a reason for your question, then, you have to create a new HashMap in case Map is not an instance of Map."
13924943,2,0,1,java.util.HashMap,Here any kind of Map object will be assigned to HashMap into your field of the class.
13924954,2,0,0,java.util.HashMap,"If you're going to always assume that it's a HashMap<String, String>, why not just do this?"
13924955,2,0,2,java.util.HashMap,"In general, you cannot typecast a Map to a HashMap without risk of a class-cast exception."
13924955,2,0,2,java.util.HashMap,"You can avoid the exception by making using instanceof to check the type before you cast, but if the test says ""not a HashMap"" you are stuck."
13924955,2,0,2,java.util.HashMap,"The practical solutions are:   declare hMap as a Map not a HashMap, copy the Map entries into a newly created HashMap, or (yuck) create a custom HashMap subclass that wraps the real map."
13928970,2,1,5,java.util.HashMap,"Also note that, since array1.equals(array2) compares the addresses of two arrays, your HashMap will behave in ways you'll probably find surprising."
13929387,1,0,2,java.util.HashMap,"I have Map<Integer, Integer> pickupMap = new HashMap<Integer, Integer>(); Map like this."
13933314,1,0,3,java.util.HashMap,Again I am calling the unmarshalling twice to get all ids in PASS 1 and use the gathered results from the lookup HashMap created in PASS2.
13939983,2,0,1,java.util.HashMap,"At first I was thinking ""you need a HashMap"" then I thought that you probably don't need a HashMap."
13939983,2,0,1,java.util.HashMap,"Now I realize that yes, you probably want a HashMap to store the number of animals of each type."
13945648,1,0,1,java.util.HashMap,"and i need to know a java collection type(ArrayList,HashMap etc) where i could store hospital ID and a Doctor object in a suitable java collection type (ArrayList,HashMap etc)."
13945648,1,0,1,java.util.HashMap,"So what is the java collection type (ArrayList,HashMap etc) where i can use for this scenario ?"
13945648,1,0,1,java.util.HashMap,Note: i can't use a HashMap - because it takes unique IDs.
13945718,2,1,3,java.util.HashMap,You can have an ArrayList of Doctor objects and then create a HashMap that stores the HospitalID as the key and ArrayList of doctors as the value: code.
13946506,1,0,9,java.util.HashMap,"My question is: Can Hibernate be used to store data whose structure is represented in some other way than an annotated Java class file, such as a HashMap with some configuration object that describes its structure?"
13948182,2,0,4,java.util.HashMap,"You should have new HashMap<Integer,ArrayList<Integer>>(); on the RHS."
13948182,2,0,4,java.util.HashMap,"Now, this will return null, if the key is not in the HashMap, else it will return the corresponding ArrayList."
13950618,2,0,0,java.util.HashMap,Java HashMap class has an internal data structure Entry.
13952579,1,0,4,java.util.HashMap,"Or depends it on the actual implementation, like HashMap?"
13952845,2,0,6,java.util.HashMap,"Q2: - Depends it on the actual implementation, like HashMap?"
13952845,2,0,6,java.util.HashMap,"HashMap use two things to allocate their objects First - is Object#hashCode(), that is used to calculate index."
13952605,2,1,4,java.util.HashMap,"As long as o1.equals(o2) is false, the two objects are considered two different keys by HashMap."
13952605,2,1,4,java.util.HashMap,"What is guaranteed is therefore that in HashMap and HashSet, the method equals() is used to tell objects apart, and in TreeMap, the method compareTo()."
23237760,2,0,0,java.util.HashMap,When putting an item inside a HashMap (and HashSet by extension) hashCode is used (transformed by a simple linear function) to determine where the item should be placed inside it's internal collection.
13952702,2,0,0,java.util.HashMap,"When HashMap compares two keys, first it takes hashcode() of that object and then call equals method on this object and the key having same hashcode value."
13958867,2,0,0,java.util.HashMap,"Or if you want to name the index, you could use a HashMap."
13958867,2,0,0,java.util.HashMap,"Obviously you would have to modify the code to use either ArrayList or HashMap, but I think this would be a better solution than using Enums."
13958469,2,0,1,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
13961895,1,0,1,java.util.HashMap,How to save contents of large .txt file in a HashMap but only display one line (randomly).
13961895,1,0,1,java.util.HashMap,"I need to load data from a text file ""boards.txt"" and possibly store it in a HashMap in order to query it."
13961895,1,0,1,java.util.HashMap,I think saving the data to a HashMap will make it easier to search through for picking a random board layout.
13961895,1,0,1,java.util.HashMap,"OK so my main issue is, how do I either save the entire .txt file to a HashMap and only display one line of 100 characters at a time."
13961895,1,0,1,java.util.HashMap,"I thought of using a String, Integer HashMap and somehow have a index value for each line but I'm not sure how I would do that."
13961949,2,0,0,java.util.HashMap,Why are you using a HashMap with the key and value the same?
13968831,2,0,2,java.util.HashMap,"Using a HashMap<String, List<String>> to keep all versions of an anagram, you'd iterate over the words to link them to their key."
14043302,2,0,0,java.util.HashMap,Try adding the following to your MyClass extends HashMap: public Object get(Object key) {   return get((String)key); } I fear Velocity may be recognizing that it is a Map and trying a shortcut that doesn't acknowledge the generics and thus is calling the wrong get() method.
13974115,1,0,7,java.util.HashMap,Usually I use HashMap like: code.
13974115,1,0,7,java.util.HashMap,I want to know if I can continue blindly using of the HashMap or there are any important differences between those Map implementations.
13974162,2,1,12,java.util.HashMap,"Never bother with Hashtable, it's a relic from Java 1.0; HashMap is the universal default due to O(1) lookup and reliance only on equals and hashCode, guaranteed to be implemented for all Java objects;  TreeMap gives you sorted iteration over the map entries (plus a lot more—see NavigableMap), but requires a comparison strategy and has slower insertion and lookup – O(logN) – than HashMap; LinkedHashMap preserves insertion/access order when iterating over the entries."
13974203,2,0,1,java.util.HashMap,If you recall a HashMap becomes pretty useless (see inefficient) when you have a poor hashing function in place.
13974203,2,0,1,java.util.HashMap,"The LinkedHashMap is a HashMap that is backed by a doubly linked list, so you can iterate over it."
13974238,2,0,2,java.util.HashMap,HashMap use it almost all the time.
13974238,2,0,2,java.util.HashMap,LinkedHashMap the same as HashMap but saves insertion order.
13974241,2,0,2,java.util.HashMap,"Hashtable is the thread safe version of HashMap, you shouldn't use it anymore."
13974241,2,0,2,java.util.HashMap,ConcurrentSkipListMap is used if you need a thread safe SortedMap LinkedHashMap is used when you want to iterate on keys in the insertion order  I mostly use HashMap or ConcurrentHashMap if I need it to be thread safe
13976414,1,0,1,java.util.HashMap,I want to create a HashMap with RGB colors as keys.
13976468,2,0,1,java.util.HashMap,"HashMap is based on hashCode() and Integer.hashCode() is as fast as you can get (it's an identity function):  a hash code value for this object, equal to the primitive int value represented by this Integer object."
13978271,2,0,3,java.util.HashMap,I believe the problem you are having is that a HashMap is completely unordered.
13978271,2,0,3,java.util.HashMap,"If you want to add order to the data in a HashMap, the classic solution is to use a TreeMap."
13978271,2,0,3,java.util.HashMap,"If so, you will want to convert your HashMap to a TreeMap: code."
13978271,2,0,3,java.util.HashMap,"The resulting TreeMap will be ordered based upon the ""keys"" of your HashMap."
13978271,2,0,3,java.util.HashMap,"If you want to sort an ArrayList of HashMaps using values inside your each HashMap, all you need to do is create a TreeMap and place it into a TreeList."
13978271,2,0,3,java.util.HashMap,"If you want to sort your ArrayList by something other than the keys of the original HashMap, you have a problem and will need to rethink your choice of data structure."
13978572,2,0,2,java.util.HashMap,"(where list is the name of your variable of type ArrayList<HashMap<String,String>>)."
13979955,1,0,0,java.util.HashMap,"How HashMap handles the updated ,if value itself is a Hashmap?"
13979955,1,0,0,java.util.HashMap,"when we put a <key,value> in a HashMap,if the key is already present in the HashMap then the value gets replaced."
13979955,1,0,0,java.util.HashMap,But if for a key the value is itself a HashMap then would it get replaced with the HashMap?
13980478,2,0,0,java.util.HashMap,"The wording in your question is a bit opaque, but a HashMap<HashMap, Object> is perfectly valid (if somewhat strange)."
13979998,2,0,8,java.util.HashMap,"You put a reference to a HashMap in a map, and the map keeps a reference to this HashMap."
13979998,2,0,8,java.util.HashMap,"If you put a reference to another HashMap using the same key, the reference to the first put HashMap is replaced by the reference to the new HashMap."
13982317,2,0,1,java.util.HashMap,"What makes this a bit confusing is whether you're referring to the index based on the order the item is added, or based on the natural ordering of the key (eg: alphabetical) You can obtain the list of may keys using map.keySet() but there's no guarantee the key set will be in the order which you add it in You can use TreeMap instead of HashMap if you want to keep your data in some kind of ordering (eg: alphabetical ordering)."
13984101,1,0,1,java.util.HashMap,Printing only one object from a HashMap.
13984387,2,1,3,java.util.HashMap,Why not use HashMap?
13984405,2,0,1,java.util.HashMap,Have you considering using a HashMap?
13984405,2,0,1,java.util.HashMap,"A HashMap is an extremely fast, lightweight, and standard data structure."
13984985,2,1,3,java.util.HashMap,You can have following HashMap code.
13989559,1,0,1,java.util.HashMap,"On initiation (triggered by the first call to do a replacement) it builds a HashMap<Character, String>, and fills it like this:   code."
13993920,2,1,0,java.util.HashMap,"less tham 1~2M) you can just use an HashMap.If there's a greater amount you can try with the interesting count min sketch algorithm, there's an implementation but personally I've never used it and don't know how good it is."
14072662,2,0,6,java.util.HashMap,"Here's what your indexer should do:  Read the entire dictionary into a simple structure like a SortedSet or String[] Create an empty HashMap<String,List<String>> (probably the same size, for performance) for storing the results Iterate through the dictionary alphabetically (really any order will work, just make sure you hit all entries)  Sort the letters in the word Look-up the sorted-letters in your storage collection If the lookup succeeds, add the current word to the list ; otherwise, create a new list containing the word and put it into the storage Map  If you need this map later, store the map on the disk; otherwise, keep it in memory Discard the dictionary  Here's what your lookup process should do:  Sort the letters in the sample word Look-up the sorted-letters in your storage collection Print the List that comes back from the lookup (or null), taking care to omit the sample word from the output  If you want to save heap space, consider using a DAWG."
14001564,2,0,1,java.util.HashMap,You can use HashMap.
14001913,2,0,2,java.util.HashMap,"As long as you are interested in sets of only two objects, using HashMap, HashSet (which, incidentally, uses a HashMap internally anyway) or any other class designed for sets of arbitrary cardinality is a waste of resources and adds unneeded complexity."
14002027,1,0,0,java.util.HashMap,Duplicated keys in HashMap.
14002027,1,0,0,java.util.HashMap,While iterating through the keySet() of the HashMap I've got duplicated values.
14002027,1,0,0,java.util.HashMap,Here is my HashMap implementation: code.
14002027,1,0,0,java.util.HashMap,While reading lines from a CSV file I'm filling a HashMap with values.
14002027,1,0,0,java.util.HashMap,"I'm splitting a line by comma, trimming values and filling HashMap with data: code."
14002027,1,0,0,java.util.HashMap,I've got something like:  JustAStreet AnotherStreet AnotherStreet JustAStreet JustAStreet  When I try to access data with .get(key) method during iteration through HashMap sometimes I get null.
14002027,1,0,0,java.util.HashMap,:( My question is: how can it be real having a duplicated key in a HashMap?
14002311,2,1,3,java.util.HashMap,how can it be real having a duplicated key in a HashMap?
14002264,1,0,0,java.util.HashMap,Possible Duplicate: Java - HashMap vs Map objects   whats the different between  code.
14002285,2,0,0,java.util.HashMap,"Ultimately, the first statement creates a variable of type Map that is an instance of HashMap."
14002285,2,0,0,java.util.HashMap,The second creates a variable of type HashMap that is also an instance of HashMap.
14002305,2,0,1,java.util.HashMap,"In the first case it can refer to any object that implements Map; in the second, only HashMap objects are acceptable."
14002305,2,0,1,java.util.HashMap,"The other consequence is that in the first case you can only call methods of HashMap that are declared in the Map interface, whereas in the second case you can call any additional methods specific to the HashMap implementation."
14004391,1,0,2,java.util.HashMap,From the processing website http://processing.org/reference/HashMap.html I know that iterator can be used to traverse hashmap.
14009007,1,0,1,java.util.HashMap,Hard limit/upper bound on number of keys in HashMap java.
14009007,1,0,1,java.util.HashMap,Possible Duplicate: Limiting the max size of a HashMap in Java   How do you make sure HashMap in java doesn't get rehashed when number of keys exceeds capacity.
14010740,2,1,4,java.util.HashMap,See HashMap.get() code.
14010906,1,0,81,java.util.HashMap,I discovered to my horror that HashMap has been modifed between JDK1.6 and JDK1.7.
14010906,1,0,81,java.util.HashMap,"So I seem to have some options:  Rewrite my code so that I don't use HashMap, but use something similar Somehow mess around with the rt.jar, and replace the hashmap inside it Mess with the class path somehow, so each thread gets its own version of HashMap  Before I start down any of these paths (all look very time consuming and potentially high impact), I wondered if I have missed an obvious trick."
14176542,2,0,3,java.util.HashMap,There are lots of apps out there that create a transient HashMap per record in big data applications.
14012576,2,0,30,java.util.HashMap,"--- Edit --- FWIW, the following change to HashMap would eliminate the thread contention when alt hashing is disabled: code."
14012004,1,0,0,java.util.HashMap,and one HashMap that contains all user inputs from text fields that I have on form.
14012783,2,0,1,java.util.HashMap,Otherwise a regular HashMap is fine.
14013136,1,0,0,java.util.HashMap,"I have tried HashMap, but apparently it cant store objects without equals() method"
14016326,2,0,0,java.util.HashMap,And here is the usage of this class with HashMap code.
14013155,2,0,2,java.util.HashMap,"I have tried HashMap, but apparently it cant store objects without   equals() method  More precisely, you can't use an object as key of your Map, without satisfying either of the below two conditions: -  Override both equals and hashcode, or Override none of them."
14014692,2,0,1,java.util.HashMap,"If two values with the same key are put in to a HashMap, the first is overwritten by the second."
14014965,2,0,1,java.util.HashMap,You're just updating the same HashMap (map2) over and over and adding it to the list.
14014965,2,0,1,java.util.HashMap,"Since you're using the same HashMap, you'll just update the same object over and over, ending with N (the number of matches) references to the same ""person""."
14015693,2,0,0,java.util.HashMap,"An insertion in a HashMap, or LinkedHashMap, can cause a rehash because it increases the ratio between the size and the number of buckets."
14016652,1,0,0,java.util.HashMap,I also set up a HashMap using the items in i and j within the for loops in order to define the object's keys.
14016652,1,0,0,java.util.HashMap,Below is the constructor code on how I am creating the first two items (creating double array and HashMap): code.
14017836,1,0,0,java.util.HashMap,"I'm using HashMap<String, String> o = (HashMap<String, String>) to get some values which i will be passing to another activity with intent."
14021995,1,0,0,java.util.HashMap,How to convert HashMap> to ArrayList in java?
14021995,1,0,0,java.util.HashMap,"I have googled but did not come accross converting HashMap<String, ArrayList<Class>> to ArrayList<Class>."
14024707,2,0,2,java.util.HashMap,"Items is also a class with one attribute, a HashMap  So Items has a HashMap, or contains a HashMap."
14024707,2,0,2,java.util.HashMap,Items is not a HashMap.
14026255,1,0,2,java.util.HashMap,I am reading the HashMap.java.
14026267,2,1,5,java.util.HashMap,"It's in the HashMap's parent class, AbstractMap: code."
14034028,1,0,0,java.util.HashMap,The 100 objects I'm going to be storing in the HashMap have bad hashcode function which always return the same value for every object.
14034028,1,0,0,java.util.HashMap,"When I'm done storing 100 objects, they will all map of the same HashMap bucket and I eventually end up with LinkedList performance."
14034028,1,0,0,java.util.HashMap,The HashMap will never be resized (no use anyways) as the LF will never be triggered.
14034028,1,0,0,java.util.HashMap,Is there a way in HashMap to prevent this or at least get some warning from the structure itself?
14034130,2,1,4,java.util.HashMap,A HashMap will always calculate which bucket to use based on the key's hash code.
14045037,1,0,1,java.util.HashMap,storing huge HashMap in database.
14045037,1,0,1,java.util.HashMap,I will have more 250000000 keys in HashMap and each key representing huge list of data (say list size may be around 1000).
14051960,1,0,0,java.util.HashMap,ColumnMap is object contain a attributes as HashMap: code.
14051960,1,0,0,java.util.HashMap,"UPDATE Okey i add this: this.columnMap = new HashMap<Column, String>(); in FEature class constructor."
14052569,1,0,1,java.util.HashMap,In the following program I'm inserting  files[i].lastModified() value in allFiles HashMap in RThread class  when I tried to retrive the value of lastModified from allFiles HashMap in the main class the value is coming as null.
14053073,1,0,1,java.util.HashMap,Why HashMap space gets expanded if all entries got stored in linked fashion under same index.
14053073,1,0,1,java.util.HashMap,From java HashMap's source code it is clear that its space is expanded twice when the space threshold is reached.
14053073,1,0,1,java.util.HashMap,The HashMap(size 10) with threshold 7(10*.75) gets expanded when the 7th element arrives.
14053105,2,1,2,java.util.HashMap,"You say there's no need to resize, since the HashMap can hold these entries."
14053105,2,1,2,java.util.HashMap,However a HashMap ideally should be providing constant access time (O(1)).
14053105,2,1,2,java.util.HashMap,"The HashMap is using the indexFor() method to identify the bucket, and then it will iterate through the buckets to find a matching key."
14053105,2,1,2,java.util.HashMap,"1), but then you can see the HashMap can't do anything but dump all entries in one bucket, and performance is consequently impacted."
14053477,2,1,8,java.util.HashMap,The worst case for HashMap is O(N^2) For non-collections n has no meaning.
14056684,2,0,1,java.util.HashMap,"If your map is parametrized as HashMap<K,V> then values() will return a collection of type V."
14057192,1,0,2,java.util.HashMap,"If I can figure out this, then I can keep large HashMap in RAM without using database."
14057265,2,0,0,java.util.HashMap,"""I can keep large HashMap in RAM without using database"" just need to deal with persistentce: serialization and deserialization, and as Object stream it is be to much."
14135352,2,0,0,java.util.HashMap,Say when using a HashMap -  code.
14135352,2,0,0,java.util.HashMap,"The entry must be removed from being referenced from the HashMap first, in this scenario."
14059260,1,0,0,java.util.HashMap,Make obj and obj.clone() as same key in HashMap.
14060970,2,0,2,java.util.HashMap,Use a HashMap and use the account number as the key  code.
14060982,2,0,1,java.util.HashMap,"If you want to add that way, you probably need a HashMap: - code."
14062286,1,0,1,java.util.HashMap,Possible Duplicate: Java.util.HashMap — why HashMap extends AbstractMap and implement Map?
14068613,2,0,3,java.util.HashMap,so keySet is supposed to have all keys from HashMap which are mentioned in the list
14075232,2,0,2,java.util.HashMap,"While a HashMap is still a better option (with constant amortized time), you can do better than linear time with arrays if you rearrange them so that postalCode is sorted."
14074095,2,0,5,java.util.HashMap,I would seriously consider using a HashMap for this instead of 2 Arrays.
14076738,1,0,0,java.util.HashMap,I have a game engine that tries to load resources efficiently by storing Images in a HashMap.
14076738,1,0,0,java.util.HashMap,"I would still like to also keep my HashMap if possible, as I think it would really increase the efficiency of my game."
14076738,1,0,0,java.util.HashMap,"This is my ""ImageBank"": public HashMap images = new HashMap(30); code."
14091538,1,0,0,java.util.HashMap,So I thought of creating a HashMap which associates the subclasses to its property and hand this HashMap to the GUI.
14091538,1,0,0,java.util.HashMap,"HashMap<Car, String> is no solution because I do not want to create objects of cars just to store the representation."
14091821,2,0,1,java.util.HashMap,And suppose you wanna display properties of many cars in a tabular form then you can pass a Collection object (ArrayList<CarPropertyPOJO>  or a HashMap).
14092533,2,0,0,java.util.HashMap,"Standard ways to access values by name or number are :  an array declared as Creature[] f = new Creature[generations]; : you access f[i] a map declared as Map<int, Creature> = new HashMap<>(); : you access f.get(i)  Note that I changed creature to Creature : Java best practice is to start class name with an Uppercase."
14094028,2,0,2,java.util.HashMap,"Well, if your key is componentstatsid, then just store the retrieved listDatacentersObj objects in a HashMap as in: code."
14097515,1,0,0,java.util.HashMap,I want convert this string to a HashMap: key a with value 0PN5J17HBGZHT7JJ3X82 key b with value frJIUN8DYpKDtOLCwo/yzg= Is there a convenient way?
14097558,2,1,6,java.util.HashMap,"Probably you don't care that it's a HashMap, just a Map, so this will do it, since Properties implements Map: code."
14097558,2,1,6,java.util.HashMap,"If you absolutely need a HashMap, you can construct one with the Properties object as input: new HashMap(properties)."
14097970,2,1,2,java.util.HashMap,"as you can see getKey, getValue, and setValue work only with Entry's fields and do not need access to HashMap itself."
14097970,2,1,2,java.util.HashMap,"But HashMap of course needs access to its entries, so it holds them in a field as an array code."
14098004,2,0,0,java.util.HashMap,Entry has access to its own fields but not to other entries in the hashmap i.e. entry can provide getters and setters to its own contained fields and doesn't have any access to HashMap.
14104143,2,0,4,java.util.HashMap,"Most implementations will likely use a HashMap to map column names to an index, but not necessarily."
14104143,2,0,4,java.util.HashMap,"Also, some drivers may build the HashMap lazily which means the first row will be the slowest to access by column name."
14104143,2,0,4,java.util.HashMap,"JTDS, as an example, does a linear search for columns not yet in its HashMap."
14104897,1,0,3,java.util.HashMap,NegativeArraySizeException on a HashMap.
14104999,2,1,6,java.util.HashMap,"Without more information about your code, I would consider unprotected multi-threaded accesses to the HashMap object to be the prime suspect."
14104999,2,1,6,java.util.HashMap,"HashMap, contrary to Hashtable, is not synchronized and needs explicit locks to work in a multi-threaded environment, either directly or through the sets returned via keySet() or entrySet()."
14104999,2,1,6,java.util.HashMap,Failing to do that can create a lot of interesting side-effects due to the HashMap being in a inconsistent internal state.
14107758,1,0,0,java.util.HashMap,"I then create a HashMap and iterate through the previously created ArrayList, adding the objects to the HashMap."
14107758,1,0,0,java.util.HashMap,"When I add the objects from the ArrayList, to the HashMap, I assume I am just creating another collection of ‘pointers’, since I’m not using the ‘new’ keyword."
14107758,1,0,0,java.util.HashMap,"Therefore no new memory is consumed, except for the HashMap itself (the objects are not duplicated)."
14107758,1,0,0,java.util.HashMap,"If I change the value of ‘name’, in an object in the HashMap, would the same change be seen, if I were to iterate over the ArrayList, after making the change."
14131796,2,0,0,java.util.HashMap,When you add objects to a HashMap the objects are not duplicated.
14131796,2,0,0,java.util.HashMap,The inner structure of a map consists of HashMap.Entry objects that contain a linked list with all values that map to the same hash code.
14131796,2,0,0,java.util.HashMap,I assume you stored the objects in the HashMap using their name as key.
14107770,2,0,3,java.util.HashMap,Q1: The HashMap is created and the references to the objects are created.
14107794,2,0,0,java.util.HashMap,"A1 : Yes, other than the references and HashMap, nothing new will be created."
14107794,2,0,0,java.util.HashMap,"(Assuming you are not creating a new set of keys for for the HashMap) A2 : Yes, the change will reflect on the ArrayList."
14112929,2,1,23,java.util.HashMap,"Or they make it mutable, and modify their value once stored i a HashSet or HashMap they pollute the schema."
14114102,2,0,1,java.util.HashMap,"Also, override hashCode() which is used by HashMap for example."
15228487,2,0,0,java.util.HashMap,"So here is what you need to do :  ArrayList letters = new ArrayList(); // is the list where you need to add elements //Assuming that you want to maintain a Map implementation to keep track of duplicates as : Map  dupLetters = new HashMap(); //So write your own add method as follows : public void addLetter(String letter) {    int count = Collections.frequency(letters,letter); if(count >0) { code. }"
14117353,2,1,1,java.util.HashMap,For that method used Map map =  new HashMap(defaults); consturctor in combination with putAll method.
14117835,2,0,5,java.util.HashMap,"It isn't as performant in the general case - if you have a medium/large number of possibilities to test for, you are probably better checking against a HashMap or HashSet which is O(1) as opposed to O(n) for scanning a concatenated String."
14120445,2,1,1,java.util.HashMap,You need a HashMap with database ID as keys and full objects as values.
14124275,1,0,1,java.util.HashMap,My question is how do I map my username and password into a HashMap with my password corresponds to my username if I have more lines in my .txt file.
14125772,2,0,0,java.util.HashMap,You could use guava mutlimap (or) change your value to one of List implementation instead of String and better to use HashMap than HashTable.
14125787,2,0,0,java.util.HashMap,"Don't use Hashtable, use a HashMap."
14138927,1,0,1,java.util.HashMap,I am using HashMap to store data in list view and I am having two TextView in ListView.
14139013,2,0,0,java.util.HashMap,A HashMap requires objects for its keys and values.
14142116,1,0,3,java.util.HashMap,"Also, it is hard to predict since the ordering of pairs when looping through the entrySet() of a HashMap is not predictable."
14142271,2,0,0,java.util.HashMap,"First, use a LinkedHashMap instead of a regular HashMap."
14148331,1,0,3,java.util.HashMap,How to get a HashMap value with three values.
14148331,1,0,3,java.util.HashMap,"If I have a HashMap with a such key: [pubDate, title, link] and such value(example): code."
14148446,2,0,2,java.util.HashMap,Then you can define your map like: HashMap and use DateAndTitle object to index your map.
14148501,2,0,1,java.util.HashMap,"You could also try to use a nested hashmap, of the type  HashMap<String, HashMap<String, HashMap<String, String>>>, where you would then formulate your query as map.get(date).get(title).get(link) The best solution would then be to encapsulate this nested hashmap in your own class as such: code."
14149984,1,0,4,java.util.HashMap,For each loop on Java HashMap.
14149984,1,0,4,java.util.HashMap,I store all of the key words and special functions in a HashMap.
14150020,2,0,0,java.util.HashMap,which takes advantage of the fact that HashMap returns null if the key isn't contained in the Map.
14155539,2,0,0,java.util.HashMap,"To answer the question in the title, a hash table (either Hashtable or HashMap) gives good lookup performance (O(1)), but consumes a significant amount of memory."
14153674,1,0,0,java.util.HashMap,"How can I convert ArrayList<HashMap<String, Object>> to string or any ways to change my code?"
14154037,2,1,2,java.util.HashMap,"if you want to keep the ArrayList<HashMap<String, Object>> you have to create a new String[] this way: code."
14154037,2,1,2,java.util.HashMap,I think that if you want to use the Universal Image Loader you'll maybe no longer need to store each Bitmap in the HashMap
14154633,2,0,1,java.util.HashMap,"An HashMap does not have any name nor id fields, instead it have keys and values fields."
14155246,1,0,1,java.util.HashMap,"I have an ArrayList<HashMap<Contact, Name>> and I want to populate a ListView with it."
14155316,2,0,2,java.util.HashMap,"You should follow @Tomislav Novoselec's suggestion in the comments, and create a List<String> from the HashMap values."
14156223,2,0,4,java.util.HashMap,You mention you use a HashMap for storing the data of your TableModel.
14156223,2,0,4,java.util.HashMap,Problem with a HashMap is that it hasn't any ordering.
14166402,2,0,0,java.util.HashMap,"Then store them inside an HashMap<String, Arena> if you need to access them by name or ArrayList<Arena> if random access is enough."
14166409,2,0,2,java.util.HashMap,"The programming concept you're after is known as an Associative Array, the one most commonly used in Java is java.util.HashMap."
14166758,2,0,0,java.util.HashMap,It is better to do the lookup using a HashMap; e.g.
14171847,2,0,1,java.util.HashMap,Use HashMap#containsKey .
14171847,2,0,1,java.util.HashMap,Javadoc for java.util.HashMap code.
14172593,2,0,1,java.util.HashMap,"if you want a whole bunch... then make a Collection (Map, HashMap, List etc.)"
14173827,2,0,2,java.util.HashMap,"Use a Map, a HashMap: code."
14173848,2,0,0,java.util.HashMap,It sounds like you should be using either a HashMap or a Multimap (found in Google's Guava library) depending on whether you want unique or multiple values for each input you are looking for.
14174690,1,0,0,java.util.HashMap,"I have an object that contains several fields (ints, Strings, etc) but also a HashMap and an ArrayList."
14179320,2,0,3,java.util.HashMap,"For more information, check: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html"
14183648,2,0,1,java.util.HashMap,You can use HashMap code.
14186013,2,1,1,java.util.HashMap,You can pass the HashMap around in your app and then just add things from it to the JComboBox as above.
14189202,1,0,3,java.util.HashMap,"Using Java, how can I compare every entry in HashMap to every other entry in the same HashMap without duplicating comparisons?"
14189202,1,0,3,java.util.HashMap,"Additional information: To be more specific and hopefully answer your questions, the HashMap I have is storing file names (the keys) and file contents (the values) - just text files."
14189202,1,0,3,java.util.HashMap,The HashMap has been populated by traversing a directory that contains the files I will want to compare.
14189300,2,0,0,java.util.HashMap,Note that there is no sense comparing keys in a HashMap they are always not equal.
14193607,1,0,0,java.util.HashMap,Unable to retrieve all the key for a Map(HashMap)?
14201177,2,0,1,java.util.HashMap,"2) equals() and hashCode are two significant important methods, which you have to override when you need special behavior for HashSet/HashMap, which functioning depends on those methods implementation."
14203870,2,1,1,java.util.HashMap,Use  HashMap or LinkedHashMap or ConcurrentHashMap instead.
14218405,2,1,0,java.util.HashMap,"Yes, because HashMap's deserialization will immediately require the secondary object to be deserialized, which will fail."
14207470,1,0,1,java.util.HashMap,Checking whether a key in a HashMap exists in a sentence.
14207470,1,0,1,java.util.HashMap,"I have a HashMap that stores <city, state> pairs where city is key and state is value."
14207470,1,0,1,java.util.HashMap,One approach is go on scanning the HashMap and check for each of the key whether it is present in sentence.
14207470,1,0,1,java.util.HashMap,But if the HashMap is of millions of entries it is going to be an very inefficient approach.
14209793,1,0,0,java.util.HashMap,"static HashMap is causing the memory leak,but how to rectify it?"
14209793,1,0,0,java.util.HashMap,"private static Map<interface,class> m =new HashMap<interface,class>;  is an instance variable of a class."
14219760,1,0,2,java.util.HashMap,All that it's in strong black (between**)with his href value into a HashMap.
14219803,2,0,4,java.util.HashMap,"From there, you should be able to extract the text of the element and the value of the href attribute to create your HashMap."
14221939,2,0,0,java.util.HashMap,"In any way You could create such cache manually (using HashMap), and then now use cached value object in System.identityHashCode()"
14534900,2,0,0,java.util.HashMap,The read time from memory cache is about the HashMap access time.
14225442,2,0,2,java.util.HashMap,You can use HashMap impl to count occurences and select only onces that occur once.
14227183,1,0,0,java.util.HashMap,JsonSerialize with HashMap.
14227183,1,0,0,java.util.HashMap,I tried using JsonSerialize but it seems not to be working with HashMap.
14227362,2,1,2,java.util.HashMap,java.util.HashMap is your best bet.
14227362,2,1,2,java.util.HashMap,Key lookups are O(1) (amortised) and it's a very good general purpose HashMap.
14227362,2,1,2,java.util.HashMap,But a regular HashMap is definitely the place to start - you can always optimise later.
14227417,2,0,5,java.util.HashMap,"The standard Java HashMap is pretty good and already available to you, but if you want the screamingly fastest map in Java use Trove ( http://trove4j.sourceforge.net/html/overview.html ) which is filled with data structures that are optimized for performance."
14328538,2,0,3,java.util.HashMap,"Not only is it independent of the number of searched positions, but it will also be faster than a HashMap, which is a lot more complicated inside."
14228974,1,0,1,java.util.HashMap,"I was reading differences between HashMap, Collenctions.synchonizedMap and ConcurrentHashMap."
14228974,1,0,1,java.util.HashMap,"It uses segments to achieve the results, so it offers a similar performance as that of HashMap."
14229049,2,0,3,java.util.HashMap,"Leaving performance apart, the choice of a data structure also serves as a documentation as to how the code is expected to be used (HashMap--> single thread)."
14229824,2,0,0,java.util.HashMap,"If thread-safety is not your concern, you should rewrite the class by replacing HashTable with HashMap and Vector with ArrayList."
14229737,1,0,7,java.util.HashMap,"For example, if I do, new HashMap()/toString , is the output from OpenJDK expected to be the same with IBM jrockit."
14234502,1,0,1,java.util.HashMap,This class downloads many different companies and when downloaded they are put in a HashMap corresponding to their category.
14234502,1,0,1,java.util.HashMap,When finished downloading this class return a HashMap which contains multiple Hashmaps(categories) and in these Hashmaps the downloaded data.
14236753,2,1,6,java.util.HashMap,"Depending on the number of conditional inputs, you might be able to use a look-up table, or even a HashMap, by encoding all inputs or even some relatively simple complex conditions in a single value: code."
14240022,2,0,0,java.util.HashMap,The simple way to do a combination of terms and counts is to use a HashMap with the word as the key and the number of occurrences as the value.
14240022,2,0,0,java.util.HashMap,That way you end up with a HashMap of all unique words and a count of appearances for each one.
14241205,2,1,3,java.util.HashMap,"If I understand the requierements correctly then we can take a HashMap<String, Integer> and put all words from list1 in it as keys, thus we avoid duplicates code."
14242899,1,0,16,java.util.HashMap,java HashMap collision.
14256798,2,0,3,java.util.HashMap,"Working of put method: HashMap  works on principle of hashing, we have put() and get() method for storing and retrieving object form HashMap."
14256798,2,0,3,java.util.HashMap,"When we pass an both key and value to put() method to store on HashMap , it uses key object hashcode() method to calculate hashcode and they by applying hashing on that hashcode it identifies bucket location for storing value object."
14256798,2,0,3,java.util.HashMap,HashMap  uses linked list in case of collision and object will be stored in next node of linked list.
14256798,2,0,3,java.util.HashMap,"Also HashMap  stores both key+value tuple in every node of linked list Working of get method: When we pass Key and Value object  to put() method on Java HashMap, HashMap implementation calls hashCode method on Key object and applies returned hashcode into its own hashing function to find a bucket location for storing Entry object, important point to mention is that HashMap in Java stores both key and value object as Map.Entry in bucket."
14243022,2,0,2,java.util.HashMap,The Java HashMap has taken advantage of 50 years of research on such things to be a good fit to the general case of general data going into a hashed map.
14248047,1,0,1,java.util.HashMap,"Currently, I'd avoid using Generics, since apparently I can't use HashMap with the generic class."
14251292,1,0,2,java.util.HashMap,Time complexity for Java HashMap resizing.
14251292,1,0,2,java.util.HashMap,I am wondering what would be the time complexity on Java HashMap resizing when the load factor exceeds the threshold ?
14251292,1,0,2,java.util.HashMap,"As far as I understand for HashMap the table size is always power of 2 an even number, so whenever we resize the table we don't necessary need to rehash all the keys (correct me if i am wrong), all we need to do is to allocate additional spaces without and copy over all the entries from the old table (I am not quite sure how does JVM deal with that internally), correct ?"
14251292,1,0,2,java.util.HashMap,So my question is does it still take O(n) linear time for resizing on HashMap ?
14251372,2,0,4,java.util.HashMap,So my question is does it still take O(n) linear time for resizing on HashMap.
14251372,2,0,4,java.util.HashMap,"However, in the current generation of HashMap implementations (derived from the Sun/Oracle codebases), the hashcode values are cached in the chained entry objects, so that the hashcode for a key doesn't ever need to be recomputed."
14251454,2,0,0,java.util.HashMap,"The amortized cost of any operation on a HashMap (assuming the uniform hashing assumption) is O(1), but yes, the worst case cost of a single insertion operation is O(n)."
14257980,1,0,0,java.util.HashMap,Handling complex HashMap display in JSP.
14257980,1,0,0,java.util.HashMap,"I have a Hashmap object allList in the form with type HashMap<String,ArrayList<Item>>."
14258564,1,0,0,java.util.HashMap,I used to do it with Json HashMap.
14269966,2,0,0,java.util.HashMap,I would maintain the count in a HashMap.
14263406,2,0,3,java.util.HashMap,A HashSet is just a wrapper for a HashMap so using a map instead should be much more expensive.
14272711,2,0,7,java.util.HashMap,"Example of classes: HashSet, HashMap, ArrayList, LinkedList, TreeSet and TreeMap."
14275780,2,1,1,java.util.HashMap,"If you don't waht to use an external library, you only have 2 options:  use a plain HashMap and you will need to iterate over the keys use 2 hashmaps, one relating keys to values, and one relating values to keys (which in essence is what a bidirectional map does)."
14279733,2,0,0,java.util.HashMap,"Then you have to decide if you use a HashMap, or if you really want a tree (TreeMap)."
14283734,2,0,2,java.util.HashMap,To make sure key exists you should use HashMap#containsKey(key) function.
14283734,2,0,2,java.util.HashMap,Once key exists you may use HashMap#get(key) to get the value and compare it to null.
14287243,2,0,3,java.util.HashMap,"DefaultTableModel (extends AbstractTableModel), by default all notifiers (DataModelEvents) are implemented and correctly, by default to have to override only editable (for TableCellEditor and if needed) and Column Class (not required in most cases)  AbstractTableModel, have to override all required methods, otherwise they don't work in compare with DefaultTableModel, and work only how these methods are implemented, by default all notifiers (DataModelEvents) is required to override too, otherwise JTables view doesn't shows proper or expected value DefaultTableModel is based on premature Arrays (even I saw HashMap in DefaultTableModel, no issue), AbstractTableModel allows to implements various arrays types without any restrictions (implemented in concrete arrays API) by using DefaultTableModel is everything allowed, everything is accessible (methods implemented in API), in compare with AbstractTableModel, AbstractTableModel is about restictions, modifying, add or override methods,  for JTable without any definitions for XxxTableModel is used  DefaultTableModel"
14294796,1,0,6,java.util.HashMap,ThreadLocal HashMap vs ConcurrentHashMap for thread-safe unbound caches.
14294796,1,0,6,java.util.HashMap,ThreadLocal HashMap: code.
14849676,2,1,1,java.util.HashMap,Using other generic classes with two type parameters (like @ApiParam() HashMap) works fine.
14295645,2,0,0,java.util.HashMap,It is possible to use HashMap.
14298512,2,0,0,java.util.HashMap,You can pass a variable amount of parameters via an array or variables with a HashMap which contains the name as key and the variable as value.
14300477,2,0,0,java.util.HashMap,Another way can be to use a HashMap with file name as key and file object as value.
14301478,2,0,3,java.util.HashMap,"You're looking for HashMap.size() for the total count and HashMap.values() for all of the values in the map, or HashMap.entries() for each pair of key and value."
14304087,2,0,1,java.util.HashMap,"(A HashMap is a rather ""memory hungry"" data structure.)"
14315123,2,0,1,java.util.HashMap,You have declared your HashMap as: - code.
14315123,2,0,1,java.util.HashMap,"This is because, you cannot have duplicate keys in a HashMap."
14315123,2,0,1,java.util.HashMap,"So, probably you got it now, that you can at max have only 2 mappings in your map, one for true and other for false(In fact you can have a 3rd one too, as you can have a mapping for a null key too in your HashMap)."
14315123,2,0,1,java.util.HashMap,Probably you have build your HashMap wrongly.
14317868,2,0,1,java.util.HashMap,"Then you can define a method calculate(HashMap<String, Integer> values) in all of your classes, where values is just the definition of all the variables that might occur in your calculation."
14323653,1,0,2,java.util.HashMap,I'm storing tons of Java UUID into a HashMap as row using UUID.toString().
14324142,2,0,5,java.util.HashMap,I'm storing tons of Java UUID into a HashMap as row using UUID.toString().
14324142,2,0,5,java.util.HashMap,"So by this you mean HashMap<String, MyObject>?"
14324142,2,0,5,java.util.HashMap,"Storing UUID itself via HashMap<UUID, MyObject> will conserve space compared to HashMap<String, MyObject>."
14324142,2,0,5,java.util.HashMap,If the ID only needs to be unique for a single process (are you saving the HashMap to disk or sharing it between Java processes?
14324142,2,0,5,java.util.HashMap,"), then you can just use int since a HashMap can't be any bigger than Integer.MAX_VALUE anyway."
14324142,2,0,5,java.util.HashMap,"So instead of HashMap<UUID, MyObject>, you'd have HashMap<Integer, MyObject>."
14323885,1,0,1,java.util.HashMap,Defining types on object creation like HashMap.
14325280,2,0,0,java.util.HashMap,"Java Method: Java has a class called HashMap, which automatically hashes the key."
14332864,1,0,0,java.util.HashMap,I have the following class: class Node{     Integer n;     Integer wt;     String v; }  and use this mapping: Map map = new HashMap(); This piece of code does not work as intended :     ` code.
14332899,2,0,3,java.util.HashMap,"Be sure to implement hashCode and equals if you are working with HashMap, otherwise each new object is a new and different object, no matter the values it is made of."
14333312,2,0,1,java.util.HashMap,"If you handle checks in some verry uniform way, it may help to put JChekBoxes into HashMap, mapping them into some structure (maybe data source or some processing object) that helps to process the event easier."
14333377,1,0,1,java.util.HashMap,"I was thinking something like a HashMap<String,Object> but doesn't this degrade performance with all the string comparisons?"
14334682,1,0,1,java.util.HashMap,"org.codehaus.jackson.map.JsonMappingException: No serializer found for class $Proxy57 and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationConfig.Feature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: java.util.HashMap[""exception""]->org.springframework.core.convert.ConversionFailedException[""targetType""]->org.springframework.core.convert.TypeDescriptor[""annotations""]) code."
14336631,2,1,1,java.util.HashMap,Looks like you're looking for HashMap Something like that: code.
14338824,2,0,5,java.util.HashMap,EDIT 2: I made it verify uniqueness of lines by using a HashMap.
14338658,1,0,2,java.util.HashMap,"As you see in the line   Object[] request = {orderIncrementId, new HashMap()};  i try sending a hashMap that actually should contain the order item id and quantity."
14340397,2,0,2,java.util.HashMap,"You might want to try a HashMap<String, String> as this will remain fast as the map grows."
14349431,2,1,2,java.util.HashMap,"In your case the queryForList method try to instanciate a java.util.HashMap instead of this, it should use the dataMap mapping you defined above."
14349146,1,0,0,java.util.HashMap,Why does the HashMap value returns null and string values when executed several times?
14351825,1,0,1,java.util.HashMap,How can I get the Key for a specific Value in a HashMap?
14351895,2,0,2,java.util.HashMap,"To get such a method as getKey you need a bi directional Hash map which supports lookup from Value to key, as discussed in Does Java have a HashMap with reverse lookup?."
14351859,2,1,3,java.util.HashMap,"You can return key from HashMap by using ""KeySet()"" method."
14424431,2,0,0,java.util.HashMap,"But this approach can have a good performance (well, it may result in using HashMap instead of JS object and so on)."
14358898,2,1,24,java.util.HashMap,"This gson.fromJson(br, HashMap.class); tells to Gson that you want to deserialize to a Map of unknown value type."
14361197,1,0,1,java.util.HashMap,Static java HashMap concurrency in unit test issue.
14363123,1,0,14,java.util.HashMap,HashMap and visibility.
14363123,1,0,14,java.util.HashMap,"HashMap's javadoc states:  if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException."
14363705,2,0,5,java.util.HashMap,the effects of modifying a shared HashMap across multiple threads (without correct synchronization) are guaranteed to be broken regardless of the use of iterators or anything else.
14363705,2,0,5,java.util.HashMap,"for example, this test could throw NPE or some other ""impossible"" exception due to the HashMap internals being in an inconsistent state when viewed cross thread."
14363501,2,1,9,java.util.HashMap,If we will look into HashMap sources and compare them between Java 6 and Java 7 we will see such interesting difference: transient volatile int modCount; in Java6 and just transient int modCount; in Java7.
14363501,2,1,9,java.util.HashMap,"My test was: 1) I have created HashMap2 class, which is absolutely copy of HashMap from Java 6."
14364583,2,0,1,java.util.HashMap,"Some flaws with this theory:  the theory should predict MAX i=1 on java 7 before main() is executed, HashMap was probably iterated by other code, so the mentioned classes were probably loaded already."
14363268,1,0,4,java.util.HashMap,"For all the mappings that don't contain wildcards, I can compute hashCode() for my stored mapping and for the user-provided one and do a HashMap lookup which is extremely fast (3-4 parameters to match, 100000 mappings, in 0 milliseconds, it's a hash after all)."
14363394,2,1,4,java.util.HashMap,"If you use a TreeMap instead of a HashMap, you can do a prefix search to reduce the number of items you have to iterate through."
29097027,2,0,0,java.util.HashMap,"Now write code on following liens in your controller while  handing the service @RequestMapping(value = ""students"", method = RequestMethod.POST, headers = ""Accept=application/json"", consumes = ""application/json"") public HashMap postStudentForm(             @RequestBody Student student, HttpServletResponse response) do not miss any of the annotations."
14366410,1,0,4,java.util.HashMap,"It just stores them in a HashMap<String, Object> and then casts to the requested object's class (like getString() or getInt()) using a ClassLoader."
14366410,1,0,4,java.util.HashMap,"What I decided on was a single HashMap<String, Integer> that contains key-index mappings for an assortment of Lists for each class I want to store."
14366792,1,0,1,java.util.HashMap,"update#4: Just added  Map mp=new HashMap();                 mp.put(DecodeHintType.CHARACTER_SET, ""ISO-8859-1"");           in the decoder, still throwing out exception."
14367081,1,0,6,java.util.HashMap,HashMap is there a best practice concerning the keys passed in the map?I mean it is recommended that the key must be an immutable object but I was wondering if there are other recommendations.
14368808,2,0,1,java.util.HashMap,"The best performing key for an HashMap is probably an Integer, where hashCode() and equals() are implemented as: code."
14368808,2,0,1,java.util.HashMap,"Said that, the purpose of an HashMap is to map some object (value) to some others (key)."
14368808,2,0,1,java.util.HashMap,The key word in HashMap is Map.
14369763,2,0,0,java.util.HashMap,"When I looked into the HashMap() and the Hashtable() implementation, I found that the implementation is quite similar (with one exception)."
14369245,1,0,1,java.util.HashMap,"For example: I have a HashMap of 50,000,000 elements."
14369245,1,0,1,java.util.HashMap,"So, if I save HashMap to Bundle - it freezes the rotation of device for a very loooooong time."
14369245,1,0,1,java.util.HashMap,(save the pointer to HashMap for example?)
14376264,2,0,3,java.util.HashMap,"HashMap is not ordered or sorted, use LinkedHashMap if you care about insertion order, or use TreeMap if you care about natural order."
14376265,2,0,1,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
14376351,1,0,0,java.util.HashMap,HashMap normally replace it value with latest one.
14376527,2,1,2,java.util.HashMap,This is the Entry class what HashMap uses to store the keys and values: code.
14376527,2,1,2,java.util.HashMap,How HashMap works in details: see my answer on this question: Best practices on what should be key in a hashtable
14376617,2,0,0,java.util.HashMap,You can probably find solutions for your problem here: HashMap with multiple values under the same key
14379677,2,0,0,java.util.HashMap,The data can be stored in a HashMap or some other collections.
14382554,1,0,2,java.util.HashMap,Quadtree with HashMap.
14382554,1,0,2,java.util.HashMap,I am considering using a HashMap as the backing structure for a QuadTree.
14382554,1,0,2,java.util.HashMap,Does anyone know if that is too many elements for a HashMap?
14382554,1,0,2,java.util.HashMap,I could always write up a QuadTree using a Tree but I thought that I could get better performance with a HashMap.
14382742,2,0,1,java.util.HashMap,Actually implementing such a big database in a HashMap is a bad idea anyways.
14382742,2,0,1,java.util.HashMap,"Because if you have a lot of collisions, the performance of a HashMap decreases badly."
14382742,2,0,1,java.util.HashMap,"In that case, a HashMap is totally redundant."
14382742,2,0,1,java.util.HashMap,A HashMap is meant for when you do not know how much data there is.
14382742,2,0,1,java.util.HashMap,So why even bother using a HashMap.?
14387159,2,0,1,java.util.HashMap,HashMap and when you create the map put as key the first part of the string and as value the second so that you can retrieve the second part when you need fast.
14394882,2,0,5,java.util.HashMap,"Consider this example, this is java.util.HashMap implementation code."
14396529,1,0,3,java.util.HashMap,Warning Avoid using implementation types like 'HashMap'; use the interface instead.
14396544,2,1,8,java.util.HashMap,This way anything using the map variable will treat it as type Map rather than HashMap.
14396544,2,1,8,java.util.HashMap,"You are no longer tied to HashMap Read through this question: What does it mean to ""program to an interface""?"
14397333,1,0,0,java.util.HashMap,I have read its better to have immutable object as key in HashMap because it cache the hashcode generated.
14397379,2,0,0,java.util.HashMap,This means that the HashMap does not need to recalculate hashcodes when looking up objects with this key.
14397405,2,0,0,java.util.HashMap,"For mutable objects the hashCode() might be dependent on values that could change, if this happens you are no longer able to find the key (and its value) in the HashMap."
14401106,1,0,0,java.util.HashMap,1 to 1 mapping in HashMap.
14401106,1,0,0,java.util.HashMap,I am across situation where I will be changing key based on value in HashMap.
14401106,1,0,0,java.util.HashMap,My HashMap is: code.
14401106,1,0,0,java.util.HashMap,Initially I am creating Keys for each directory Path and putting these entries in HashMap.
14401106,1,0,0,java.util.HashMap,"When doing processing, I will take Path based on Key from HashMap and process them."
14401106,1,0,0,java.util.HashMap,I want to keep unique Keys for unique Paths and update Entry in HashMap with either one.
14401106,1,0,0,java.util.HashMap,So I want to perform reverse of HashMap to update Key.
14401125,2,0,3,java.util.HashMap,Add another HashMap to do the reverse mapping.
14401211,2,0,0,java.util.HashMap,where hm is your HashMap.
14401211,2,0,0,java.util.HashMap,"Note that if you could possibly have two Paths with the same Key, then you'll have to reverse your HashMap to <Path, Key>, since one Key would overwrite the other."
14403367,1,0,1,java.util.HashMap,"Its always said its better to use a collection object as below 1) List st = new LinkedList(); 2) Map mp = new HashMap(); Than  3) LinkedList st = new LinkedList(); 4) HashMap mp = new HashMap(); I agree by defining as above (1,2) I can reassign the same variable (st,mp) to other objects of List, Map interface But Here I cant use the methods that are defined only in LinkedList, Hashmap which is correct as those are not visible for List, Map ."
14403367,1,0,1,java.util.HashMap,"(Please correct me if am worng) But if am defining a object of HashMap or LinkedList, I want to use it for some special functionality from these."
14403429,2,0,3,java.util.HashMap,"But if am defining a object of HashMap or LinkedList, I want to use it for some special functionality from these."
14403447,2,0,1,java.util.HashMap,"But if am defining a object of HashMap or LinkedList, I want to use it   for some special functionality from these."
14405025,2,1,5,java.util.HashMap,"If you're going to have a lot of them, you can use a HashMap<Integer, Action>: code."
14405025,2,1,5,java.util.HashMap,This is useful if you're going to have a large number of Action values since the HashMap lookup is O(1).
14405541,2,0,0,java.util.HashMap,"When that happens, you can use a HashMap or a lookup loop."
14407262,2,0,2,java.util.HashMap,"Use the <jsp:useBean class=""java.util.HashMap""> trick."
14407262,2,0,2,java.util.HashMap,This basically creates a HashMap in the page scope and puts the given variables as map keys.
14408750,1,0,1,java.util.HashMap,I guess it would be using a HashMap but (I might be wrong) it doesn't seem to have a litteral notation.
14408750,1,0,1,java.util.HashMap,Is there any easy way to build an HashMap of   pairs ?
14416504,1,0,1,java.util.HashMap,custom HashMap-Key (Java) slows down performance extremely.
14416504,1,0,1,java.util.HashMap,My Problem: I tried to improve my backtracking-algorithm by adding a HashMap to store the already processed results.
14416504,1,0,1,java.util.HashMap,For this i created a own class for the key of that HashMap.
14416504,1,0,1,java.util.HashMap,"To solve that problem, i changed the HashMap-Key to String and addded a .toString()-method to my key-class."
14416504,1,0,1,java.util.HashMap,I tried to find a answer to that question on my own and the only thin i found was to change .hashCode() or playing with the parameters of the HashMap-Constructor.
14416703,2,0,3,java.util.HashMap,"For example, with just HashMap<BigInteger,YourValueType> or with some libs like BigMemory and alternatives http://terracotta.org/products/bigmemory"
14528525,2,1,0,java.util.HashMap,"No matter whether mutable or not, the element equality and hashCode methods in HashMap are inherited from HashTable and HashTable.Utils and are protected, meaning any subclass can override it easily."
14423256,2,0,0,java.util.HashMap,The right way to go is to take ispiration from the HashMap inside Scala library: code.
14423256,2,0,0,java.util.HashMap,"You have to be sure that you all  the public methods behave correctly, including par (you need to implement a parallel hash map that uses your special hasher) and merge, as well as the empty, which should not return HashMap.empty[A,B] but CustomHashMap.empty[A,B]"
14425590,1,0,0,java.util.HashMap,how  can I iterate the HashMap and store it into my database?
14429218,2,0,0,java.util.HashMap,"Has not taken into account that each object is a reference and also use memory, and more ""hidden things""... we must also take into account also the alignment... byte is not always a byte ;-)  Java Objects Memory Structure How much memory is used by Java  To see how much memory is really in use, you can use a profiler:  visualvm  If you are using standard HashMap (or similar from JDK), each ""long"" (boxing/unboxing) really are more than 8bytes), you can use this as a base... (use less memory)  NativeIntHashMap"
14433398,1,0,2,java.util.HashMap,The role of equals in Java's HashMap.
14433398,1,0,2,java.util.HashMap,I have a question about HashMap performance concerning the use of equals.
14433398,1,0,2,java.util.HashMap,"So, to create the HashMap - I just wonder - what kinds of element compared to the elements in the HashMap."
14433435,2,0,5,java.util.HashMap,With that said - objects stored in a HashMap can be compared however the HashMap wants to compare them.
14433435,2,0,5,java.util.HashMap,"This is typically done during insertions, deletions, and lookups so that the HashMap knows whether two objects are equal, but it could be done during a rehash (as objects are redistributed through the HashMap) as well."
14433435,2,0,5,java.util.HashMap,"You really can't assume much, since part of the contract of the HashMap is that equals must work for your objects."
14435156,2,0,2,java.util.HashMap,"I suggest you this scenario:  Create thread pool, probably some of fix size with Executors.newFixedThreadPool Create some structure (probably it would be a HashMap) which holds one Semaphore for each state machine."
14435557,1,0,19,java.util.HashMap,From the source for HashMap code.
14443483,2,1,3,java.util.HashMap,I suggest you use a HashMap that maps a property name to its value and interactively modify that map.
14447002,2,1,1,java.util.HashMap,"So you have for a Map the choice of HashMap, TreeMap, LinkedHashMap and so on."
14448156,1,0,1,java.util.HashMap,"Ok, so I use Bukkit's ItemStack in a HashMap that is stored in a file and reloaded from it, but I found out that org.bukkit.craftbukkit.v1_4_6.inventory.CraftMetaItem which is used in the hash map created by ItemStack.serialize() is not implementing Serializable."
14448900,1,0,1,java.util.HashMap,"HashMap, ArrayList, Set etc) for columns and rows I should use for my problem in java."
14449107,2,1,3,java.util.HashMap,"the LinkedHashMap will retain the order elements (LinkedHashMap is ordered, TreeMap is sorted, HashMap is none)."
14452911,2,0,1,java.util.HashMap,So you can switch implementation (maybe you realized that you need synchronized map here and not just HashMap) and your code will work.
14453163,1,0,6,java.util.HashMap,Can anybody explain how java design HashMap's hash() function?
14453163,1,0,6,java.util.HashMap,"after I read JDK's source code ,I find HashMap's hash() function seems fun."
14453163,1,0,6,java.util.HashMap,Parameter h is the hashCode from Objects which was put into HashMap.
14479945,2,1,5,java.util.HashMap,"HashMap uses a 'power of two'-approach, meaning the sizes are a power of two."
14479945,2,1,5,java.util.HashMap,The modulus performed against the size to get the (bucket/slot) index is simply calculated by: hash & (size-1) (which is exactly what's used in HashMap to get the index!).
14479945,2,1,5,java.util.HashMap,"16, the default value of HashMap, only the last bits are used and hence, hash values with the same lower bits will result in the same (bucket) index."
14459510,1,0,0,java.util.HashMap,using HashMap with subclasses.
14459510,1,0,0,java.util.HashMap,"error: no suitable method found for put(String,Wolf)             playerRolesMap.put(listOfPlayers.get(0), new Wolf(listOfPlayers.get(0)));     method HashMap.put(String,Role) is not applicable       (actual argument Wolf cannot be converted to Role by method invocation conversion) Where Wolf is a subclass of Role I'm trying to write a program where I need to access methods that are written into a subclass, however this does not compile as the subclass cannot be cast back into the superclass, with the compiler saying: actual argument subclassA cannot be converted to Superclass by method invocation conversion) At the moment I can't see another way to implement my code to be able to dynamically retrieve the objects."
14462133,2,1,1,java.util.HashMap,"Then you should split these sentences to words, you should split now --) String[] words=split(\\s+) so finding for whitespaces \\s+ represent you all the whitespaces (\t \r \n and so on) And finally you should iterate through your words array  with a for loop, and find matching with your members in your two or more group (adaption, fault) (with indexOf() or equals() string methods)... Obviously if you have exact matches in the words, you can use HashMap and like this Group1.get(""the word you present itareted""), this can fast your app so much;)  I can write the source also for you, but i think better just to give you some hint, how to do it."
14463069,1,0,0,java.util.HashMap,"how to store 25 thousand objects in Android Collection (HashMap, LinkedHashMap, ArrayList, Map)."
14463069,1,0,0,java.util.HashMap,"Actually I am getting 25 thousand of JSON objects from a web service and i am using Jackson to parse them and when i am trying to have that in collection(HashMap, LinkedHashMap, Array List, Map) and unfortunately using all of them i am running into ""Out Of memory Exception in Android"".. Can someone experimented this before with huge objects for my case it may go upto 50 thousand objects at maximum."
14463438,2,0,0,java.util.HashMap,java.util.HashMap supports null as key also value.
14470964,2,0,1,java.util.HashMap,"As for which implementation you should use, it seems to me that a HashMap would suffice, although if you want to keep your integer keys in order you might want to also consider a TreeMap."
14470975,2,0,1,java.util.HashMap,"If you know exactly how many elements you plan to insert, you might want to investigate the constructor parameters to implementations such as HashMap, which let you tune the size of the underlying storage toward less space vs less collisions."
14470996,2,0,0,java.util.HashMap,Using a HashMap or similar implementation will guarantee that you always have sufficient capacity in your mapping object.
14471348,2,1,0,java.util.HashMap,whether you use the fastest possibility (array) or a HashMap depends on your application.
14471428,2,1,0,java.util.HashMap,"Plus instead of HashTable , you can use the HashMap if you are not aware of it"
14474208,2,0,1,java.util.HashMap,"You will need to iterate over the HashMap, pull out the List object, then iterate over it and if you find the search value, you remove the HashMap entry that has the corresponding key."
14476098,2,0,1,java.util.HashMap,If you want to store result along with operation /line number; will suggest you to use HashMap.
14476489,1,0,1,java.util.HashMap,I have a HashMap of type: code.
14476489,1,0,1,java.util.HashMap,This HashMap has values like code.
14476826,2,0,1,java.util.HashMap,Does the second HashMap have to be a HashMap?
14476826,2,0,1,java.util.HashMap,Can you convert the second HashMap into a class specifically for this?
14476826,2,0,1,java.util.HashMap,"Then you can say HashMap<String, TaskList> and access the number of tasks directly and sort them accordingly."
14476826,2,0,1,java.util.HashMap,Even then I don't think HashMap is right for this.
14476835,2,1,1,java.util.HashMap,"You can't sort a HashMap, but you can get a sorted Array (or a List) of the keys."
14477162,2,0,2,java.util.HashMap,"In order to create a Set with these characteristics, you would need to use this factory method from java.util.Collections: newSetFromMap(LinkedHashMap(initialCapacity, loadFactor, accessOrder)) Keep in mind that the accessOrder property is responsible for all interactions with given element - if you'd call get on HashMap it will do reordering as well (that shouldn't affect you anyway because the Set interface does not expose a get method on a wrapped HashMap, just saying)."
14487168,2,0,1,java.util.HashMap,Some documentation:  Simple XML Framework  Website Tutorials (see especially Dealing with map objects) Examples Serialize HashMap as root element with Simple   and ...  JAXB  Reference Implementierung Tutorial
14478397,1,0,1,java.util.HashMap,I am looking to implement a HashMap with its contents in the bytecode.
14478626,2,0,0,java.util.HashMap,You can save your HashMap as byte array using Java Serialization mechanizm code.
14484705,1,0,2,java.util.HashMap,"I am implementing hashcode() and equals(), so that I can use the Courses in a HashMap."
14494577,2,0,5,java.util.HashMap,"These can help you : JPA Map<String,String> mapping How to add a HashMap<String,Object> in an entity class?"
14500922,1,0,0,java.util.HashMap,"If I use HashMap, just for retrieving few values (5 records) from the list, I have to store 2000 records to the map."
14504013,2,1,3,java.util.HashMap,"You would have better code, and less to type, if you encapsulated the HashMap and entries in well-defined classes, though."
14510451,1,0,1,java.util.HashMap,Is it possible/required to speed up HashMap operations on same entry?
14510451,1,0,1,java.util.HashMap,Suppose I wish to check HashMap entry and then replace it: code.
14510451,1,0,1,java.util.HashMap,this will cause search procedure inside HashMap to run two times: once while get and another one while put.
14510451,1,0,1,java.util.HashMap,May be HashMap remembers last search to improve repeated one?
14510481,2,0,3,java.util.HashMap,"EDIT: I've just discovered that you can modify the entry, via Map.Entry.setValue (and the HashMap implementation is mutable)."
14510481,2,0,3,java.util.HashMap,"There's one evil way of doing it - declare your own subclass of HashMap within the java.util package, and create a public method which just delegates to the package-private existing method: code."
14510835,2,0,2,java.util.HashMap,"Iteration over collection views   requires time proportional to the ""capacity"" of the HashMap instance   (the number of buckets) plus its size (the number of key-value   mappings)."
14512925,2,1,1,java.util.HashMap,HashMap example in Java Here is complete pseudo code for you.
14512156,2,0,0,java.util.HashMap,"Keep them in a HashMap<String, PreparedStatement>"
14514005,1,0,0,java.util.HashMap,Suppose that I have a HashMap() defined and allocated like this: code.
14514005,1,0,0,java.util.HashMap,"I am always ""building"" the HashMap with keys and values before accessing it, for example I am storing 15 Integers on it as keys with their corresponding values I want."
14514024,2,1,4,java.util.HashMap,"The HashMap implementation makes no guarantees about the order the items are returned, I would suggest using a LinkedHashMap which retains order."
14514056,2,0,1,java.util.HashMap,"The ""plain"" HashMap returns entries as it finds them in its ""hash buckets""."
14519740,2,1,4,java.util.HashMap,HashMap does not sort its elements into any order.
14522824,1,0,1,java.util.HashMap,Double iteration on HashMap with symmetric result (skip redundant cases).
14528367,2,0,0,java.util.HashMap,More information: Java HashMap duplicate elements
14528380,2,1,3,java.util.HashMap,Consider using a HashMap<String><Integer> to keep track of the order ids and totals.
14536665,1,0,5,java.util.HashMap,They are likely (though not guaranteed) to be faster than their   HashMap counterparts.
14536745,2,0,4,java.util.HashMap,"You need an associative container for addressing items using a string name - for example, a HashMap<String,String>."
14536745,2,0,4,java.util.HashMap,"Add pairs {""e1"", ""apple""}, {""e2"", ""mango""}, and so on to a HashMap, and then use map.get(fruit) to retrieve the value by key."
14537663,2,0,1,java.util.HashMap,for a) You could use HashMap where key is country code.
14540062,1,0,0,java.util.HashMap,"Class Test is my separate class which has two field of String and Float type, I am using this class with List Collections which will be finally populated as values into HashMap."
14543119,1,0,0,java.util.HashMap,"So, what I would like is some input on how to create a HashMap with the correct values in it, ie a deserialized Equipment as Key and an Int as value."
14547946,1,0,0,java.util.HashMap,Optimizing onDraw for many LinearGradient shaders using composite key in HashMap.
14547946,1,0,0,java.util.HashMap,"I run into problems when trying to define the key structure for the HashMap, which I figured was the best structure for a cache."
14547946,1,0,0,java.util.HashMap,This led me to try to create a composite key for the HashMap.
14547946,1,0,0,java.util.HashMap,Should I use the code as a HashMap key and clear the cache every time the size changes?
14547946,1,0,0,java.util.HashMap,Do I need to write my own replacement for HashMap that can accept a series of value types as a key without allocating heap memory?
14553115,1,0,1,java.util.HashMap,Java: HashMap.get returns null.
14553115,1,0,1,java.util.HashMap,I have some problems with strange behaviour of HashMap.get(byte[]).
14553115,1,0,1,java.util.HashMap,The server will generate a random session token as byte[] with 8 entries and adds the token to the HashMap.
14553115,1,0,1,java.util.HashMap,This is the code for adding the client to the HashMap: code.
14553154,2,1,8,java.util.HashMap,A HashMap uses hashCode() and equals() to find the entry from a given key.
14554241,2,1,5,java.util.HashMap,"Keys are unique once added to the HashMap, but you can know if the next one you are going to add is already present by querying the hash map with containsKey(..) or get(..) method."
14557387,2,0,3,java.util.HashMap,"But it could be better to put the objects in a HashMap<Long,Employee> where long is the id, and Employee is the employee belonging to that id."
14557740,2,1,5,java.util.HashMap,"It will lead to unexpected behavior in hash based data structure for example: HashMap, Read how HashTable works"
14557745,2,0,4,java.util.HashMap,"To give a specific example, if o1.equals(o2) but o1.hashCode() != o2.hashCode(), you'll likely be able to insert both objects into a HashMap (which is meant to store unique objects)."
14557825,2,0,4,java.util.HashMap,"HashMap/HashTable/HashSet/etc will put your object into one of several buckets based on its hashCode, and then check to see if any other objects already in that bucket are equal."
14557825,2,0,4,java.util.HashMap,"If two objects are equal but have different hash codes, they could end up in different buckets, in which case the HashMap/Table/Set/etc won't have a chance to compare them."
14568631,1,0,4,java.util.HashMap,Questions about implementing my own HashMap in Java.
14568631,1,0,4,java.util.HashMap,I am working on an assignment where I have to implement my own HashMap.
14568631,1,0,4,java.util.HashMap,Also I have found this implementation of a HashMap in Java: code.
14568631,1,0,4,java.util.HashMap,"Edit So now I have tried implementing the HashMap myself via a Node class, which just  constructs a node with a key and a corresponding value, it has also got a getHashCode method, where I just concatenate the two values on each other."
14573298,2,0,2,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
14579854,2,0,0,java.util.HashMap,"This will somehow fill the requirement,you can also use parameters of the type in the constructors of HashMap."
14582596,1,0,0,java.util.HashMap,How to put/get values into/from Nested HashMap.
14582596,1,0,0,java.util.HashMap,I want to create a nested HashMap that will take two keys of type float and give out value of type Integer.
14582596,1,0,0,java.util.HashMap,Is there a simple method of putting/getting the values like an ordinary HashMap i.e. code.
14586498,2,0,0,java.util.HashMap,I want to create a nested HashMap that will take two keys of type float and give out value of type Integer.
14582721,2,0,0,java.util.HashMap,For example it would make easier to refactor HashMap into ConcurrentHashMap if the need arises.
14582704,2,1,5,java.util.HashMap,"When you want a simple key/value table, then the HashMap might be what you are looking for."
14589976,1,0,3,java.util.HashMap,"HashMap get value of object that is ""equal"" but different hash?"
14589976,1,0,3,java.util.HashMap,"I've got a HashMap<Point, T> data structure which holds several points that are mapped to other instances of the class T. This map is given some default values when my class is instantiated like this: code."
14589976,1,0,3,java.util.HashMap,"I guess I could use toString() or some other mapping like HashMap<String, T> or perhaps I would extend the Point class and Override the hashCode() method to suit my purposes."
19044187,2,0,4,java.util.HashMap,If you use a HashMap like: code.
14600108,2,0,7,java.util.HashMap,"If you have your own Data class then then you can design your map as follows Map<Integer, YourClassName> map=new HashMap<Integer, YourClassName>();  code."
14601074,2,1,62,java.util.HashMap,"Some Map implementations are allowed to have null values, eg HashMap, in this case if get(key) returns null it does not guarantee that there is no entry in the map associated with this key."
14601133,1,0,0,java.util.HashMap,I am getting error like Unable to find a MessageBodyReader for HashMap...
14605204,1,0,2,java.util.HashMap,My question is - if I am just storing strings / searching for strings would a custom Array or HashMap be sufficient or would search times make it inefficient meaning that SQLite would be more ideal for this situation.
14608743,2,1,9,java.util.HashMap,"Some collections, like HashSet, HashMap or HashTable use the hash code to store its data and to retrieve it."
14608795,2,0,0,java.util.HashMap,"Failure   to do so will result in a violation of the general contract for   Object.hashCode, which will prevent your class from functioning   properly in conjunction with all hash-based collections, including   HashMap, HashSet, and Hashtable."
14609674,2,1,2,java.util.HashMap,"I'd also suggest that instead of an array you use a HashMap so you can name, add and delete queues at will."
14609674,2,1,2,java.util.HashMap,"Note response to comments: A HashMap can generally replace an array, it's lookup is nearly as quick but it uses anything for an index instead of numbers--Strings, enums, Objects, whatever you want (as long as it has the hash and equals methods overriden), but usually strings."
14612226,2,1,8,java.util.HashMap,"You'd also be better off using HashMap instead of Hashtable, as then you could just use an enhanced for loop..."
14612210,2,0,6,java.util.HashMap,Why are you using Hashtable and not HashMap?
14613538,1,0,3,java.util.HashMap,Loop through HashSet and HashMap in JSP and print the result.
14613538,1,0,3,java.util.HashMap,I want to do the below thing in JSP starting from for loop- I just want to loop HashSet and HashMap and print the result code.
14613585,2,1,4,java.util.HashMap,You don't need to make use of keySet to access the values in the HashMap.
14613585,2,1,4,java.util.HashMap,"When you iterate over HashMap using <c:forEach..>, you get back the EntrySet, for which you can use: - EntrySet#getKey() and EntrySet#getValue() directly: - code."
14614072,2,0,2,java.util.HashMap,"In your first example you create a HashMap<String,Integer> but the second part iterates the map values which in this case are MyObject."
14617077,1,0,0,java.util.HashMap,I am trying to measure the performance of our service by putting the data in a HashMap like- X number of calls came back in Y ms. Below is my code which is very simple.
14617448,1,0,0,java.util.HashMap,I wrote a program that was making the call to my service and measuring the performance by putting the numbers in a HashMap- code.
14620625,2,0,0,java.util.HashMap,"Actually by using comparator, you can sort your HashMap, TreeMap into ascending as well descending order."
14623379,1,0,3,java.util.HashMap,This is not basically how to sort the HashMap based on keys.
14623379,1,0,3,java.util.HashMap,"I want to sort the HashMap based on keys and additional to this I need ""Not Categorized"" to be the last one to retrieve."
14623379,1,0,3,java.util.HashMap,"Thought of going for HashMap while creating and at the end add [""Not Categorized"" : ""pqrs""] but HashMap does not guarantee the order :) Any other pointers for the solution?"
14630971,2,0,0,java.util.HashMap,"When a new element is inserted into a HashSet or a new pair is put into a HashMap, it is placed in the hash space according to its hash code."
14623575,2,1,5,java.util.HashMap,If TreeMap is definitely out I would extend HashMap and make it look like there is always one more entry but that is certainly not a trivial piece of work.
14623444,2,0,3,java.util.HashMap,"Difference between HashMap, LinkedHashMap and SortedMap in java  Or just a create a custom class which holds a different key than the value."
14624455,1,0,2,java.util.HashMap,"I have written error detection code to secure inputs however I find myself with a very strange result:  when the field is non-null but the value is incorrect (say, an hour located outside the 00:00-23:59 range), it does return the proper error, along with the error message, stored in a HashMap, and I can access it in my JSP."
14624455,1,0,2,java.util.HashMap,"However, when the field is null, it returns the message, probably stores it in the HashMap as well (I know this because the ${!empty errors.dataErrors} test returns true and the error field is displayed in my JSP) but there's no way to access the values of the errors  I have searched through my code but still can't find where the error comes from."
14624455,1,0,2,java.util.HashMap,"the map is a field in the NewBookingForm class, declared and initialized outside the registerBooking method like this private Map<String,String> dataErrors = new HashMap<String,String>(); and it has a private setter (for access within the class) and a public getter (for access in the Servlet and in the JSP) inside the form class, I use this function to get the field values: code."
14625834,2,1,3,java.util.HashMap,"You can store the color for each path and inside onDraw you have to set the color before drawing the path Edit Here is the outline for a quick solution, night not be the most elegant one:  A HashMap with the path as key and the Color as value In onClickPenColorButton save the color to an instance say currentColor In touch_start you can push the path object with the currentColor into the HashMap Modify onDraw to get the color for each path."
14629496,1,0,3,java.util.HashMap,How to split an HashMap in Java.
14629496,1,0,3,java.util.HashMap,I was wondering if it is possible to split a HashMap into smaller sub-maps.
14629496,1,0,3,java.util.HashMap,"In my case I have a HashMap of 100 elements and I would like to create 2 (or more) smaller HashMaps from the original one, the first containing the Entries from 0 to 49, the second containing the Entries from 50 to 99. code."
14629566,2,0,1,java.util.HashMap,"As the HashMap is unordered (entries may come in any order), it makes no sense to exactly split it."
14629585,2,1,6,java.util.HashMap,Do you have to use HashMap?
14631372,2,0,0,java.util.HashMap,"For sure, it's a good idea to have a real class and not just the HashMap."
14631450,1,0,4,java.util.HashMap,"If I just add key1 and keyN alone, key1 remains in the map -- the intervening 500 entries are somehow important If I remove one or two arbitrary keys from 2..(N-1), key1 is still booted out when keyN is added If I remove a large range of keys from 2..(N-1), key1 remains when keyN is added, but falls out when (say) keyQ is added, ~300 keys further down the line Unfortunately the size of the map when keyN kicks out key1 is not the same as the size of the map when keyQ kicks out key1, so it's probably not a limited-size issue If I use a HashMap instead, key1 remains in the map Custom key class MyKey uses the same logic for Comparable, equals, and hashCode."
14631450,1,0,4,java.util.HashMap,"HashMap will be a fine alternative, but it's still alarming to see TreeMap behave this way -- anyone have thoughts on what's going on here?"
14634399,1,0,1,java.util.HashMap,Creating pointers out of HashMap objects in an object array.
14634399,1,0,1,java.util.HashMap,I am having a hard time creating a method that will point to other objects  in my Carinfo HashMap.
14635664,2,0,2,java.util.HashMap,"BufferedReader, String.split(...) and HashMap are what you want."
14655939,2,0,1,java.util.HashMap,"Finish index: "" + finish_index);          todolist.add(Executors.callable(new Runnable() {             @Override             public void run() {                 final Map<Integer, Integer> localStore = new HashMap<Integer, Integer>();                 for (int i = start_index; i < finish_index; i++) {                     final Integer loopKey = mybigarray[i];                     Integer loopValue = localStore.get(loopKey);                     if (loopValue == null) {                         localStore.put(loopKey, 1);                     } else {                         localStore.put(loopKey, loopValue + 1);                     }                 }                 for (Integer loopKey : localStore.keySet()) {                     final Integer loopValue = localStore.get(loopKey);                     rs.updateScore(loopKey, loopValue);                 }             }         }));      }     try {         //invoke all will not return until all the tasks are completed         es.invokeAll(todolist);     } catch (Exception e) {         System.out.println(""Error in the Service executor "" + e);     }      return rs.getMode(); }"
14639644,2,0,1,java.util.HashMap,"So the keySet being used to back the LinkedHashSet is in fact coming from the implementation of LinkedHashMap, not a regular HashMap like a regular HashSet."
14639608,2,0,1,java.util.HashMap,(And the implementation of HashSet is really all in HashMap.
14639773,2,0,1,java.util.HashMap,A hashcode is required in many circumstances inside the JDK just because some data structures use it and its properties to work as desired (specifically HashMap and HashSet).
14640369,2,0,0,java.util.HashMap,This method is supported for the benefit of hash tables such as those provided by HashMap.
14645525,1,0,10,java.util.HashMap,"I have some code with Map<String, Map<String, String>> objects, which works (it is instantiated as a HashMap of HashMaps), but I wonder whether there is a better way to represent this data structure in Guava."
14648963,1,0,1,java.util.HashMap,In IReport: parameter name: PA_CHING parameter class type: java.util.HashMap Default value expression: i don't know what to put here.
14650586,1,0,0,java.util.HashMap,"Updated I understood my fault, I had to fill my TreeMap with data from HashMap."
14666226,2,1,1,java.util.HashMap,"You're testing the distribution if HashMap's hash() method, which uses the key's hashCode, and has been designed to try getting a uniform distribution for its capacity, which MUST be a power of 2."
14665930,1,0,1,java.util.HashMap,The class creates a HashMap of String and I want to be able to pass that to the callable procedure but I can't figure it out :S code.
14671164,1,0,1,java.util.HashMap,"Java HashMap ""put"" method in a for loop."
14671164,1,0,1,java.util.HashMap,I am facing an issue while using HashMap in a for loop.
14672550,1,0,1,java.util.HashMap,"Spring Batch Admin Console - com.thoughtworks.xstream.mapper.CannotResolveClassException ""class : java.util.HashMap""."
14672550,1,0,1,java.util.HashMap,"""HTTP Status 500 - Request processing failed; nested exception is com.thoughtworks.xstream.converters.ConversionException: id : id : id : id ---- Debugging information ---- message : id : id cause-exception : com.thoughtworks.xstream.mapper.CannotResolveClassException cause-message : id : id class : java.util.HashMap required-type : java.util.HashMap path : /map/entry[3]/masterdata.analyzer.metadata.Metadata/hubCodeTables/masterdata.analyzer.metadata.MHubCodeTable/codeValueMap/entry[7]/id line number : -1 ------------------------------- "" I thought the exception may occured because my application is able to use the class java.util.Hashmap from JAVA_HOME whereas the SpringBatch-Admin-War inside tomcat is not able to use the same."
14672550,1,0,1,java.util.HashMap,So I even created a jar file with all the Java class files (including java.util.HashMap) and included inside the LIB folder of this SpringBatch-Admin-Console but I still got the same error.
14673440,2,0,0,java.util.HashMap,"You can use HashMap(an implemenation of Map interface), like this: code."
14673402,2,0,1,java.util.HashMap,"This is a concern that usually is done by using a Map; often times a HashMap<T,S> will be applicable."
14673402,2,0,1,java.util.HashMap,"For your concern, you could use a HashMap<Integer, String>."
14676423,1,0,0,java.util.HashMap,Parsing XML into HashMap using DOM.
14676423,1,0,0,java.util.HashMap,I want to parse it to HashMap where keys and values should be something like that (node names through a period as a keys and values of these nodes as a values in map): K: users.user.1.login V: james.bond K: users.user.1.password V: 12345 etc... On the very moment I have: code.
14677993,1,0,34,java.util.HashMap,"How to create a HashMap with two keys (Key-Pair, Value)?"
14677993,1,0,34,java.util.HashMap,I want them to be put into a HashMap.
14677993,1,0,34,java.util.HashMap,But I want to access the elements from the HashMap based on Array Index.
14678039,2,0,0,java.util.HashMap,Use a Pair as keys for the HashMap.
14678043,2,0,5,java.util.HashMap,"Then have your HashMap<Index, Value> to get your result."
14678908,2,0,0,java.util.HashMap,then you put it in your HashMap (say yourMap) by code.
14681953,2,0,0,java.util.HashMap,"In a HashMap, each distinct key has one associated value - and since t1 and t3 equals each other - you have only 2 distinct keys."
14682079,1,0,1,java.util.HashMap,java arraylist HashMap how to sort?
14683149,2,1,2,java.util.HashMap,"I would keep it simple and just use a HashMap<String, Handler> until you can prove that this is a serious bottleneck."
14683149,2,1,2,java.util.HashMap,"EnumMap won't be any faster if you're starting from a String key as you first have to use valueOf to get the enum value corresponding to the string, and this is itself implemented as a lookup in a HashMap..."
14684570,1,0,0,java.util.HashMap,transform HashMap.
14687406,1,0,4,java.util.HashMap,Why HashMap does not guarantee that the order of the map will remain constant over time.
14687406,1,0,4,java.util.HashMap,"HashMap does not guarantee that the order of the map will remain constant over time."""
14687677,2,0,3,java.util.HashMap,"When a HashMap or Hashtable grows, the number of buckets changes and the keys/elements are placed in another pseudo random manner."
14687456,2,1,4,java.util.HashMap,A HashMap has no order - at any time.
14687458,2,0,1,java.util.HashMap,A HashMap has number of buckets (implemented as an array) in which to store entries.
14687458,2,0,1,java.util.HashMap,"When an item is added to the map, it is assigned to a buckets based on a value derived of its hashCode and the bucket size of the HashMap."
14687458,2,0,1,java.util.HashMap,Why HashMap does not guarantee that the order of the map will remain constant over time
14688007,1,0,4,java.util.HashMap,How to create a simple HashMap with Integers?
14688007,1,0,4,java.util.HashMap,Approach 2: Create a HashMap and use put in a for loop to put each element to the map.
14688338,2,0,0,java.util.HashMap,An alternative to a HashMap that you may want to consider is just using an ArrayList of your strings with a Collections.binarySearch to get the integer value.
14688338,2,0,0,java.util.HashMap,Depending on how many elements you plan on having this may perform on par with a HashMap approach.
14688764,2,0,1,java.util.HashMap,"(And since you recurse on files too ...) A HashMap is probably a poor choice for representing a ""song""."
14694115,1,0,3,java.util.HashMap,So it's almost as if Mockito is returning a new HashMap every time newWidget is being called.
14694751,2,0,0,java.util.HashMap,"so that the test uses a real HashMap that behaves like one, since that is the thing you want to test."
14694751,2,0,0,java.util.HashMap,"If you're going to mock all the HashMap operations yourself, chances are you are making some kind of mistake (like forgetting to mock a method)."
14694312,2,1,2,java.util.HashMap,You have to remember that you mocked HashMap.
14694312,2,1,2,java.util.HashMap,"So, mockito is not giving you a new map everytime, it just don't know how to behave because you mocked the HashMap."
14694312,2,1,2,java.util.HashMap,"With that, HashMap will return that ""contains"" the key at the second call of containsKey with the given name."
14694312,2,1,2,java.util.HashMap,"You can read its documentation here Another thing you could do is to give to it a real implementation of HashMap, but I prefer the ""mock"" way :) EDIT I gave the link to BDDMockito, but it works the same way with when->thenReturn."
14695770,1,0,2,java.util.HashMap,In this loop I create some Strings and put them in a HashMap.
14702165,1,0,1,java.util.HashMap,I want to access java.util.HashMap without considering case of the key.
14702165,1,0,1,java.util.HashMap,"By this, I mean, if I add following entry to my HashMap: code."
14702357,2,0,0,java.util.HashMap,"If you don't want to repeatedly use ""toLowerCase"" whenever you're using your map, you could create your own subclass of HashMap for this purpose."
14702217,2,0,0,java.util.HashMap,HashMap generate indexes by its hashing algorithm which internally use hashcode of key object.
14702243,2,0,4,java.util.HashMap,"Subclass the HashMap to use your own ""MyIgnoreCaseHashMap"": code."
14702870,1,0,2,java.util.HashMap,================================================================================= Here are few question which I need clarification  The code is compiling even if I pass a long as the parameter to the get method of the HashMap which is declared to have only Integer as the keys.
14702870,1,0,2,java.util.HashMap,When I pass the long variable containing the error code as the parameter to the get method of the HashMap() the map returns null.
14702870,1,0,2,java.util.HashMap,"I suspect the below line in the HashMap.get() method if (e.hash == hash && ((k = e.key) == key || key.equals(k))) I am not sure whether int == long will fail or their corresponding wrappers will fail., i even added a check in the main method to verify the equality of the int and long variables."
14702940,2,0,8,java.util.HashMap,The code is compiling even if I pass a long as the parameter to the get method of the HashMap which is declared to have only Integer as the keys.
14702940,2,0,8,java.util.HashMap,When I pass the long variable containing the error code as the parameter to the get method of the HashMap() the map returns null.
14703081,2,0,0,java.util.HashMap,The code is compiling even if I pass a long as the parameter to the get method of the HashMap which is declared to have only Integer   as the keys.
14703081,2,0,0,java.util.HashMap,When I pass the long variable containing the error code as the parameter to the get method of the HashMap() the map returns null.
14703753,2,0,2,java.util.HashMap,Using HashMap Key-Value pair.. (Only Pseudo code) code.
14704652,1,0,0,java.util.HashMap,"Hibernate class design, persisting List and HashMap."
14709505,1,0,0,java.util.HashMap,I am trying to convert a TCL keyed list to a Java HashMap and need to use regular expressions to break pieces of the text out.
14710886,2,1,3,java.util.HashMap,"If the movies are uniquely identifiable by their name, you can put them in a HashMap with the name of the movie as the key and the Movie object as the value."
14710956,2,0,1,java.util.HashMap,I think HashMap or HashTable will be enough for your specification.
14715485,2,0,0,java.util.HashMap,"Apart from creating a raw type (you should use new HashMap<String, Level>(); instead), you code needs no changes to work as I think you intended."
14715485,2,0,0,java.util.HashMap,"Although the HashMap and Level objects created both vanish once the method ends, because they go out of scope."
14719226,1,0,2,java.util.HashMap,"If I would do this process for more couples (username, clubname), for example saved in an HashMap how could I use the addBatch() method of preparedStatement Inteface??"
14721496,1,0,0,java.util.HashMap,"So the problem is that I want to show name when it prints the Student object, but when two different student with the same name (different gpa) will cause me an issue if I store them all in a HashMap."
14721548,2,0,1,java.util.HashMap,"Given your tags, you seem to talk about hash collision in HashMap?"
14721548,2,0,1,java.util.HashMap,toString() has nothing to do with the behaviour of HashMap.
14721548,2,0,1,java.util.HashMap,The only two important methods for objects that would be keys in a HashMap are equals(Object) and hashcode().
14721548,2,0,1,java.util.HashMap,"Also, HashMap is collision-safe, so you don't need to care about hash collisions."
14766179,2,0,0,java.util.HashMap,HashMap is internally stored in a table.
14721763,2,0,0,java.util.HashMap,"You should override and implement hashCode and equals correctly if you want to use your class in hashtable based collections like HashMap, HashSet etc."
14721763,2,0,0,java.util.HashMap,toString has nothing to do with HashMap.
14727093,1,0,1,java.util.HashMap,The issue here is that there are plenty of examples for using display tag with ArrayList but none with HashMap.
14735277,2,0,2,java.util.HashMap,"The idea is that if you've got something like a HashMap, you want to find a matching key quickly when you do a lookup."
14741378,2,0,0,java.util.HashMap,"Not using ""Object"" containers is one of them, implementing the Comparable interface is another (a third one is to use generics on containers like ArrayList, HashMap, etc, so that Java knows what you're putting in them, rather than the catch-all ""Object"")"
14746528,2,0,3,java.util.HashMap,"All unique words probably fit in memory so I'd use this approach:  Create a dictionary (HashMap<string, int>)."
14748688,1,0,0,java.util.HashMap,"I'll study each one with care, for the time being I say I don't get those involving HashMap: out of my knowledge yet (hence thanks again for the insight:o) )"
14748864,2,0,0,java.util.HashMap,you can use HashMap for easy grouping.
14749092,1,0,1,java.util.HashMap,"Assume I have a HashMap, which stores actual File Objects as the key and the value being it's last modified date."
14749092,1,0,1,java.util.HashMap,"If the File (test.log) exists in my HashMap (I've added it), but the file (test.log) is modified or changed later; when I issue a replace, will it find the existing matching Object, or will the STATE change of the File, which will change the nature of the Object."
14749217,2,0,0,java.util.HashMap,"HashMap uses hashCode() and equals() methods of class instances of which is used as keys, i.e."
14749171,2,0,0,java.util.HashMap,HashMap uses the hashCode() method of its keys.
14752155,2,1,2,java.util.HashMap,"Assuming you have sufficient memory, I would probably use a HashMap<AccountIdentifier, CustomerRecord>."
14753578,2,1,4,java.util.HashMap,The correct should be convert the json string into a HashMap<>.
14754985,1,0,1,java.util.HashMap,Json String to HashMap.
14754985,1,0,1,java.util.HashMap,I am trying to convert a Json String to a HashMap but it is not working.
14756868,1,0,1,java.util.HashMap,"Iterate through ArrayList, check HashMap key and value against the value to insert, and insert if not exist."
14756868,1,0,1,java.util.HashMap,"To delete: Iterate through ArrayList, check HashMap key and value against the value to delete, and delete if exist."
14757093,2,0,0,java.util.HashMap,"Instead of HashMap, use a class called Pair with two fields {group,child} which will implement Comparable interface."
14757974,2,1,1,java.util.HashMap,"Instead of populating snippet() with ""Simulate"", populate it with some unique identifier of your Ship, such that you can look up the Ship in the Dock or Wharf or Shipyard or OnePercenterYachtClub or HashMap<String,Ship> or wherever you store your Ship instances."
14759880,1,0,2,java.util.HashMap,"HashMap how to find out ""extra"" keys and remove them."
14764307,2,1,1,java.util.HashMap,You may get better results by using the millisecond value from your stopwatch as your HashMap key.
14766114,2,0,0,java.util.HashMap,Check HashMap.
14766677,1,0,3,java.util.HashMap,Does HashMap.clear() resize inner hash table to the original size?
14766677,1,0,3,java.util.HashMap,What happens to the HashMap after this code execution?
14766706,2,0,2,java.util.HashMap,http://www.docjar.com/html/api/java/util/HashMap.java.html#621 So the OpenJDK 7 implementation does not restore the original size.
14772404,2,1,4,java.util.HashMap,"Because it's not ""just"" a HashMap or so."
14773425,1,0,0,java.util.HashMap,How to add HashMap values into an ArrayList.
14773425,1,0,0,java.util.HashMap,I have a HashMap and I am iterating like this: code.
14781667,2,0,1,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode, which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
14782163,1,0,3,java.util.HashMap,HashMap : Adding values with common keys and printing them out.
14782163,1,0,3,java.util.HashMap,"and in the output I should have summed up all count values based on key so for our example output would be  ""Reggy, 19"" ""Jenny, 25"" Here is my approach:  Read each line and for each line get key and count using scanner and having , as delimiter  Now see if key is already present before if then just add currentValues to previousValues if not then take currentValue as value of HashMap."
14782163,1,0,3,java.util.HashMap,Part I am not clear about is how to divide key/value pair while reading them in and creating HashMap based on that.
14782251,2,1,7,java.util.HashMap,"Create a HashMap<String,Integer>."
14783026,2,0,0,java.util.HashMap,I would recommend you to use HashMap keeping integer/count pairs and scan each other list and narrow down your map.
14784174,2,0,2,java.util.HashMap,"The type for a graph represented with adjacency lists is something like ArrayList<HashMap<Integer, Integer>> adjacencies."
14788434,1,0,5,java.util.HashMap,Check the existence of a HashMap key.
14788434,1,0,5,java.util.HashMap,"In Java, having a HashMap fully filled in with data of such form: code."
14788461,2,0,4,java.util.HashMap,If you look in java.util.HashMap source code you can find next containsKey realization: code.
14789418,2,0,6,java.util.HashMap,You can't sort a HashMap.
14789418,2,0,6,java.util.HashMap,But not a HashMap.
14789464,2,1,5,java.util.HashMap,"If you need to have your Map items sorted, consider using a TreeMap instead of HashMap."
14793519,2,0,1,java.util.HashMap,"Now, your data structure will be HashMap<string, ArrayList<Person>> Have a string for the name of the list you are currently populating, ListName."
14796665,2,0,1,java.util.HashMap,Using HashMap will be a good option for you here.
14797422,2,0,1,java.util.HashMap,I think you can do this with HashMap code.
14797587,1,0,0,java.util.HashMap,"I do not want to store the objects in db, and I do not want to use a HashMap or thelike."
14798079,2,0,4,java.util.HashMap,"All you'd need is to store your strings in a HashMap<String,String> like so:  code."
14800562,1,0,0,java.util.HashMap,"We can simulate this behaviour with a simple static generic method, which could be added to the collections API: Code of the method for HashMap: code."
14800572,1,0,0,java.util.HashMap,How to union correctly Hashmap> and HashMap.
14800572,1,0,0,java.util.HashMap,"I want add HashMap<String,Object> currentItem; to my storage  HashMap<String, ArrayList<Object>> storage; by the following way: Add all Object of currentItem to ArrayList<Object> of storage according to the keys (they all are the same)."
14805251,1,0,0,java.util.HashMap,"IDocumentFilter using a HashMap as a dictionary Menu , to validate on a JTextField."
14805783,1,0,0,java.util.HashMap,Working with HashMap it shown an error?
14805783,1,0,0,java.util.HashMap,"I am working with hash map and it shows an error:- The method add(HashMap<String,String>) in the type ArrayList<HashMap<String,String>> is not applicable for the arguments (String) on this line: code."
14805797,2,0,0,java.util.HashMap,HashMap is a generic.
14812489,2,0,0,java.util.HashMap,I do not know anything about your application but I would suspect the memory leak can be traced back to a HashMap.
14812668,1,0,0,java.util.HashMap,Return HashMap added to List.
14812668,1,0,0,java.util.HashMap,I have a problem in JAVA when i'm trying to return a HashMap that I have added to a list of type: List<Object>.
14812668,1,0,0,java.util.HashMap,"I have added my hashmap to my listOfObject, but how do I get the HashMap from the listOfObject such that I can use the HashMap-commands."
14812812,2,1,0,java.util.HashMap,so first cast it to HashMap type and then get the value from map please notice the following code code.
14821782,2,0,1,java.util.HashMap,If docObjs is a HashMap of (value IdObj) you can iterate with: code.
14823262,2,0,0,java.util.HashMap,"You are returning ArrayList<HashMap<String, String>> leaguesList; which seems very limiting, why would you not return JSONArray itself or ArrayList<HashMap<String,JSONObject>> where the map has ID as the key and all the elements in JSONObject that you could later use, unless ID is the only thing you are interested in?"
14823010,1,0,1,java.util.HashMap,Need to use HashMap or any ideas?
14825906,1,0,2,java.util.HashMap,"HashMap of ArrayList, String is not working properly?"
14826505,2,1,2,java.util.HashMap,"HashMap is based on hashing algorithm, which pretty much scrambles string's contents."
14827518,2,0,3,java.util.HashMap,"If you're talking about plain HashMap though - no, you mustn't rely on the ordering."
14830449,1,0,1,java.util.HashMap,"Which will be efficient for working with a list of attributes, HashMap or Modal class Array?"
14830449,1,0,1,java.util.HashMap,Which will be better of the following for performance and space : Method 1(HashMap): code.
14830527,2,0,1,java.util.HashMap,Go for HashMap.
14831045,1,0,7,java.util.HashMap,Find the Biggest number in HashSet/HashMap java.
14831045,1,0,7,java.util.HashMap,I would like to find the biggest number in HashSet and HashMap.
14831045,1,0,7,java.util.HashMap,and Same thing for the HashMap as well.
14831080,2,1,24,java.util.HashMap,"Similarly, for a HashMap, you can use the same method on its keySet() or values(), depending upon whether you want maximum key, or maximum value."
14831087,2,0,4,java.util.HashMap,"If you are forced to use a HashSet/HashMap, then you have to scan the whole HashSet/HashMap in order to find the maximum."
14833666,1,0,0,java.util.HashMap,Is it possible to change them directly without parsing the JSON to a HashMap or something?
14836920,2,0,4,java.util.HashMap,"Given your requirement, it seems like you need to use a HashMap, rather than a List of some custom type storing your attribute."
14836973,2,0,3,java.util.HashMap,"It sounds like you should be using a Map for this, for instance java.util.HashMap<String, Item>."
14839698,1,0,1,java.util.HashMap,Is there any way to cast the value of a Java HashMap to an Object at runtime like this: code.
14843374,2,0,1,java.util.HashMap,"You could use a scanner, or more preferably a List, or even a HashMap to store the information about the player in."
14846920,1,0,107,java.util.HashMap,Collections.emptyMap() vs new HashMap().
14846943,2,0,30,java.util.HashMap,"If you have a query that doesn't take any parameters, it's certainly a bit wasteful to create a HashMap, which involves allocating an array, when you could just pass in the 'Empty Map' which is effectively a constant, the way it's implemented in java.util.Collections."
14846964,2,0,5,java.util.HashMap,"A new HashMap() etc will require an allocated object, and possibly some extra elements to hold the data, but you only need one copy of an immutable empty collection (list, set, map, or any other such)."
30656392,2,0,0,java.util.HashMap,"The ones that worked best were: Approach 1: Time consuming if N is large 1: define a temporary double array of length N 2: define a LinkHashSet or other HashMap to collect the temporary arrays 3: generate successive random numbers between 0 and 1 and populated the temporary array created in step 1 and insert into successive elements of the array making sure that each successive weight (x) meets the condition  x(i) < (1-sum(x(0,....i-1)) and sum(x(0,....i)<1 4: where the array elements sum up to 1 (i.e. sum(x(0,....i)=1) add the array to the LinkHashSet/HashMap defined in step 2 with some indexing key int making sure to check that no other array already exists in the LinkHashSet with the same permutation of values in its elements 5: repeat till a large enough number of sets of weights have been generated Approach 2:less accurate population size but faster than Approach 1 1: set to be divisible by 3 or 4 and define a LinkHashSet/HashMap to store the weights and ArrayList for convenience when generating the weights 2: define the weights for 3 or 4 assets."
30656392,2,0,0,java.util.HashMap,This is fairly straight forward for an average human brain to get around store in the ArrayList 3: now treat each of the 4 computed weights as a class of asset with weight x computed in step 2 and generate another set of 3 or 4 weights and multiply each new weight by the weight in step 2 and add to or update the ArrayList as appropriate 4: repeat till step 3 for each element of the ArrayList using the updated weights in the ArrayList from the previous round of step 3 till the size of the ArrayList is N 5: store the ArrayList in a LinkHashSet/HashMap with an indexing key for easy recall
14851661,2,0,1,java.util.HashMap,In such case you should better use Synchronized HashMap.
14856565,1,0,2,java.util.HashMap,HashMap overrides the nextvalue Java.
14856565,1,0,2,java.util.HashMap,"Lets say I have hashmap store  and it contains for example-(11,name1) (11,name2) and i call HashMap.get(11), it only shows name2 which means it overrides the first input for 11."
14856565,1,0,2,java.util.HashMap,How can i store both name1 and name2 with ID 11 using hashmap?I know i can use both HashMap and HashSet but i dont want to create every HashSet for HashMap.
14856735,2,0,1,java.util.HashMap,"To store multiple values for a single key, use a HashMap that contains a list as a value."
14856735,2,0,1,java.util.HashMap,HashMap's implementation overrides values for existing keys.
14856593,2,0,6,java.util.HashMap,In HashMap you must put a value with every key.
14856593,2,0,6,java.util.HashMap,"And you should also change storeR type to be HashMap<Integer, List<String>> MultiMap is also a similar solution."
14856607,2,0,1,java.util.HashMap,You will have to either have a HashMap where the value of each key is another collection (list or set) or concatenate the string values together (e.g.
14861702,1,0,0,java.util.HashMap,I am writing a program in Java where I would like to use HashSet (and HashMap).
14862658,2,0,0,java.util.HashMap,"If you don't have any parameters, instantiate your parameter HashMap before passing it to Jasper."
14869672,2,0,2,java.util.HashMap,Use HashMap code.
14871181,1,0,2,java.util.HashMap,"In the past I have solved similar problems using HashMap<Entity, Value>."
14871181,1,0,2,java.util.HashMap,I have temporarily fixed the problem by mapping each HashMap to a different table.
14872905,2,1,0,java.util.HashMap,"Still not completely satisfied with the solution (both database and ORM provider dependant), but better than having one table for each HashMap."
14875498,1,0,4,java.util.HashMap,"They told me I should have used HashMap<String,List<Widget>>, because its more efficient and easier to work with."
14875498,1,0,4,java.util.HashMap,"So I ask: Is ArrayList<ArrayList<Widget>> the right choice, HashMap<String,List<Widget>>, or something else...and why?"
14875648,2,1,3,java.util.HashMap,"So I ask: Is ArrayList<ArrayList<Widget>> the right choice, HashMap<String,List<Widget>>, or something else...and why?"
14875648,2,1,3,java.util.HashMap,"An HashMap is more expensive than an ArrayList, and if you don't need to access the data via a key, the ArrayList is more probably the best choice."
14875648,2,1,3,java.util.HashMap,"BTW, having ArrayList<ArrayList<Widget>> or HashMap<String,List<Widget>> smells a little bit."
14875695,2,0,0,java.util.HashMap,"Question arises how will changing your data structure from ArrayList<ArrayList<Widget>> to HashMap<String,List<Widget>> affect above two activities."
14878399,2,1,1,java.util.HashMap,Create a HashMap of properties code.
14878753,1,0,5,java.util.HashMap,say a HashMap like this: code.
14878753,1,0,5,java.util.HashMap,"I have to use: ... new HashMap<String, String>() {{.... in order the code to compile."
14878801,2,1,2,java.util.HashMap,It actually creates a subclass of HashMap I don't like this because you dirty up your classes with a bunch of subclasses.
14880639,2,0,0,java.util.HashMap,"Or forget that all, and use a HashSet , HashMap."
14886109,1,0,0,java.util.HashMap,"Variables:  c = GregorianCalendar s = String h = HashMap-array - String, Date oldGoods1, 2, and 3 = HashMaps - String, Date  Code: code."
14886572,2,0,0,java.util.HashMap,The HashMap purposely only allows you to add new mappings by using the put type methods of the actual map.
14886707,1,0,0,java.util.HashMap,Can abstract class be added as subclass to HashMap.
14890732,2,0,1,java.util.HashMap,Don't think you need HashMap for this; List or Set will do the job.
14892917,1,0,1,java.util.HashMap,I will have a HashMap which will store the int as the key and the object as value.
14892917,1,0,1,java.util.HashMap,Every other method of the class will take an int as one parameter & it will retrieve the object from the HashMap and do the required operation on the corresponding object.
14892917,1,0,1,java.util.HashMap,There will be a remove method which will remove it from the HashMap and allow it to be garbage collected.
15023514,2,1,1,java.util.HashMap,"If still you have doubts, you could have a more resilient solution - when a new handle is generated, check first if the HashMap has this key already (it is very fast operation), if it does have, just pick the next integer."
14898891,1,0,2,java.util.HashMap,"going to the db and getting the data is taking 2 ms roundtrip, but getting the data from the HashMap would take a nano second."
14899571,2,1,2,java.util.HashMap,"HashMap doesn't do the job for your case, rather TreeMap can help."
14899964,2,0,0,java.util.HashMap,"While HashMap does not specify the order of elements, TreeMap does."
14906707,1,0,1,java.util.HashMap,I have a HashMap that look something like this- code.
14907460,1,0,0,java.util.HashMap,I have a HashMap that look something like this- code.
14907460,1,0,0,java.util.HashMap,"So Suppose, If I have two values in the above HashMap."
14911100,1,0,0,java.util.HashMap,"Say I have HashMap called HashMap<Integer, List<String>> storeR; and it stores ""11,name1,name2"" and I want to change that 11 to some other number?"
14911534,1,0,0,java.util.HashMap,HashMap Duplicate Key Replacement java.
14911534,1,0,0,java.util.HashMap,"i have this thing to , lets say  HashMap> has <> ""11,name2,name1"" and ""14,name4,name5""...so I'm trying to remove 11 first and all its data name2 and name1 will be transferred to 14."
14912137,1,0,0,java.util.HashMap,Remove data from HashMap java.
14912137,1,0,0,java.util.HashMap,"I have HashMap HashMap<Integer, List<String>> storeR and it stores ""22,name1,name2""..but is there any way to remove name1 from the 22?"
14914062,1,0,0,java.util.HashMap,get multiple random values from ArrayList HashMap.
14914711,1,0,0,java.util.HashMap,HashMap with camel cxf:component POJO dataFormat.
14914750,2,1,1,java.util.HashMap,I am taking about the HashMap.
14922454,1,0,2,java.util.HashMap,HashMap): char -> number of its appearances in the string;  scan the string and test string characters against the map until the value of the character is 1.
14923086,1,0,0,java.util.HashMap,Add dynamic content in ArrayList of String in a HashMap.
14923400,1,0,0,java.util.HashMap,Image content of HashMap won't appear.
14924468,2,0,1,java.util.HashMap,Yes you can loop and put each object at a time to hashmap.. You can use HashMap(int initialCapacity) with some higher value for initialCapacity..since you know there would be 10000 objects...
14925333,2,0,1,java.util.HashMap,"But you could also implement your own multimap as: HashMap<SomeObject, List<YourObject>>() Check example here under multimaps"
14928141,1,0,0,java.util.HashMap,Android HashMap of  or .
14928141,1,0,0,java.util.HashMap,"I have a HashMap <String, String> to store most of my data."
14928141,1,0,0,java.util.HashMap,"My question is: If possible is it better to convert the non string to a string and store it in the current data structure; or would it be better to store a HashMap<String, Object> and cast the data accordingly when it gets used?"
14928141,1,0,0,java.util.HashMap,"In this example would it be better to convert the Double to a String to store in the HashMap<String, String>?"
14928141,1,0,0,java.util.HashMap,"Or, store all the data in a HashMap<String, Object> map and access it by casting data like this?"
14928446,1,0,0,java.util.HashMap,Android java.util.HashMap cannot be cast to java.lang.String.
14928446,1,0,0,java.util.HashMap,"Not sure what is causing this, I found java.lang.String cannot be cast to java.util.HashMap exception and it seems that I'm doing everything right."
14928468,2,1,4,java.util.HashMap,"It means that parentAdapter.getItemAtPosition(position) is returning a HashMap instance, which you're trying to convert to a string with the line  code."
14929743,1,0,1,java.util.HashMap,Having trouble using a HashMap with Strings and ints in Java.
14929743,1,0,1,java.util.HashMap,"I iterate through one String and put the characters that are found into a HashMap, where the key is the letter, and the value is the number of occurrences of that letter, as an int."
14929743,1,0,1,java.util.HashMap,"Once I finish iterating through the first String, I iterate through the second String and decrement the values of each character found in the same HashMap."
14929743,1,0,1,java.util.HashMap,"Once a key reaches zero, I remove the key/value pair altogether from the HashMap."
14929743,1,0,1,java.util.HashMap,"Once I finish iterating through the second String, I then merely check to see if the HashMap is empty."
14937873,1,0,2,java.util.HashMap,How will I achieve the below data structure using Multidimensional Arraylist or HashMap in Java.
14937873,1,0,2,java.util.HashMap,How will I achieve the following data structure using Multidimensional Arraylist or HashMap in Java?
14940850,1,0,0,java.util.HashMap,"Say by dynamically creating a new List, HashMap, and ListAdapter,based on the number of seasons (data which could be passed to activity by previous activity)."
14944631,2,0,0,java.util.HashMap,"If you don't have a specific reason, i suggest you not to include it among the fields of Task, and use it instead as index to access and positioning in your ArrayList, or possibly do it more explicitly with a HashMap <Integer, Task>."
14944419,1,0,23,java.util.HashMap,Gson to HashMap.
14944419,1,0,23,java.util.HashMap,"Is there a way to convert a String containing json to a HashMap, where every key is a json-key and the value is the value of the json-key?"
14944419,1,0,23,java.util.HashMap,resulting HashMap: code.
14946848,1,0,0,java.util.HashMap,I have a HashMap with String as key and List as value.
14946848,1,0,0,java.util.HashMap,Name of the HashMap is pageMap.
14947844,2,0,7,java.util.HashMap,"However, although ConcurrentHashMap is a thread-safe drop-in replacement for HashMap, it is important to realize that if you are doing multiple operations you may have to change your code significantly."
14948035,2,0,0,java.util.HashMap,"HashMap is divided into ""buckets"" based on hashCode."
14950400,2,1,1,java.util.HashMap,"Then, I would use HashMap<Integer, List<Integer>> to store the data."
14950400,2,1,1,java.util.HashMap,"In the HashMap, key is the sum of numerical values of Alphabets and the value becomes the list of numbers that are the prefixes of data."
14955213,1,0,2,java.util.HashMap,Can you input an array object to the put method of a HashMap?
14955213,1,0,2,java.util.HashMap,"Example: Say you have a HashMap: HashMap<Integer, String> map = new HashMap <Integer, String>(); You have an array of integers and an array of strings conveniently given."
14955213,1,0,2,java.util.HashMap,I want the key-value pairs of the HashMap to be: code.
14955213,1,0,2,java.util.HashMap,"I know this doesn't work, you should get an error like ""The method put(Integer, String) in the type HashMap is not applicable for the arguments (int[], String[])""."
14955244,2,0,0,java.util.HashMap,If you need this behavior then you do need to parse each and every element to put them into HashMap.
14955244,2,0,0,java.util.HashMap,You need to touch all the elements to populate HashMap Below code (As mentioned by you) is the only work-around code.
14962156,1,0,2,java.util.HashMap,What I'm looking for is some ordering of these polygons into a HashMap or something so that I can quickly fetch a few polygons that need to be checked for each point instead of complete list of polygons.
14962979,2,0,0,java.util.HashMap,Those records can either be stored in a HashMap or in a SQlite database.
14963770,1,0,0,java.util.HashMap,JSONObject from HashMap - Cast to String failed.
14963770,1,0,0,java.util.HashMap,I need to create a JSONObject from a HashMap of a custom class's toString and a float value.
14963817,2,0,2,java.util.HashMap,"You need to change this: HashMap<MyClass,Float> map = new HashMap<MyClass,Float>(); with HashMap<String,Float> map = new HashMap<String,Float>(); as you said ""HashMap of a custom class's toString and a float value"" You haven't mentioned how are you putting the values into the hashmap."
14964077,2,0,1,java.util.HashMap,"Your MyClass type can't be upcasted to String directly (String is not a superclass of MyClass), that's why the constructor is actually complaining about the map, because it needs a map of the form HashMap<String,Object> (Note that there's no problem with Float and Object)."
14964077,2,0,1,java.util.HashMap,"To fix the issue, you have to define a HashMap<String,Float> where you should store a String representation of your MyClass object either by using toString."
14964040,1,0,0,java.util.HashMap,"the main logic is that we can sort Map, be it HashMap or Hashtable by copying keys into List than sorting List by using Collections.sort() method, here you can use either Comparator or Comparable based upon whether you want to sort on custom order or natural order."
14965956,2,1,1,java.util.HashMap,"For the curious, check this answers revision history for a UniqueOrderedMap which lacks the getKey() and removeKey() methods, but more properly implements the Map interface, and only needs a HashSet, rather than a HashMap, to store the known values."
14969884,1,0,1,java.util.HashMap,Definitive documentation on Java HashSet / HashMap custom object as key?
14969884,1,0,1,java.util.HashMap,I'm trying to find the definitive documentation on how to use a custom object as the key for HashMap or as the object stored in HashSet.
14969884,1,0,1,java.util.HashMap,"However, when I read the Oracle/Sun official Javadocs for HashSet and HashMap, they do not mention overriding these methods at all."
14974051,2,0,0,java.util.HashMap,Usually it is simplest by just keeping them in a HashMap.
14974355,2,0,0,java.util.HashMap,"In fact, when you create a HashMap, that's exactly what will happen behind the scene"
14976142,2,1,12,java.util.HashMap,"So:  ArrayListMultimap uses HashMap for map and ArrayList cor collection, which means that iteration order of such methods as entries(), asMap().keySet() or asMap.entrySet() is undefined."
14977101,1,0,1,java.util.HashMap,"There is a HashMap but the key is overlapping i.e same key is hit by multiple threads simultaneously, thus corrupting HashMap and untimely flushings ..  Helper Class follows -  code."
14977310,2,0,0,java.util.HashMap,You can either synchronize access to it or use ConcurrentHashMap instead of HashMap.
14977264,2,1,0,java.util.HashMap,You should rather use ArrayList<HelperClass> than HashMap.
14978912,2,0,0,java.util.HashMap,"HashMap, synonymous as keys to your one ""HA501225.."" object."
14981412,2,0,3,java.util.HashMap,Try using HashMap with the URL being the key and the return code being the value.
14981412,2,0,3,java.util.HashMap,HashMap uses a HashSet behind the scenes.
14981439,2,0,2,java.util.HashMap,"it seems that the proper data structure for you would be to build a Dictionary \ HashMap (all keys are unique: test1, test2, ..., and values do not have to be unique)."
14985784,2,1,60,java.util.HashMap,"In terms of functional correctness of code generated during a given compile, using HashMap and HashSet would be fine; the iteration order does not matter."
14987407,2,0,1,java.util.HashMap,HashMap does in fact allow null keys.
14987407,2,0,1,java.util.HashMap,"If you wanted to prohibit null keys, you could either use one of these implementations, or your own subclass of HashMap."
14991917,1,0,2,java.util.HashMap,"ArrayList works as a key in a HashMap, but array of X[] doesn't work."
14992092,2,1,0,java.util.HashMap,Consider using HashMap to store records.
14992092,2,1,0,java.util.HashMap,"I would probably make my map a HashMap<Integer, List<Integer>> to support multiple instances of docID"
14993854,1,0,1,java.util.HashMap,"Is Class immutable in Java, also known as, is Class a safe key for HashMap?"
14995057,2,0,2,java.util.HashMap,"2) we can use it in HashMap, Class is a singleton and its hashCode and equals are based on its identity, with a caveat that a class will have different instances in different classloaders, so MyClass.class from classloader1 != MyClass.class from classloader2"
14995422,2,0,0,java.util.HashMap,Create a HashMap as member variable.
15000130,1,0,0,java.util.HashMap,HashMap changes the values references.
15000130,1,0,0,java.util.HashMap,I have a problem with the HashMap.
15000130,1,0,0,java.util.HashMap,I use the HashMap for quicker access to Objects that are otherwise stored in a very hierarchical structure.
15000130,1,0,0,java.util.HashMap,"After adding another pair, the address stored in the HashMap is changed."
15000130,1,0,0,java.util.HashMap,Therefor I cant the original Objects through the HashMap.
15000130,1,0,0,java.util.HashMap,Here is the code how I construct the HashMap.
15004164,2,0,0,java.util.HashMap,"( If you are using HashMap, TreeMap of java.util package will definitely implement Serializable. )"
15004068,2,0,2,java.util.HashMap,"You're trying to serialize the Map check that the Map class you are using is Serializable Note: A HashMap is Serializable, so switch to that if possible."
15009137,2,0,3,java.util.HashMap,"I found out that neither Lists inside Lists, nor Maps inside Maps (and all the interpolations), declared as interface (List, Map), or as their implementations (ArrayList, HashMap, TreeMap) are correctly handled by the XWork Converter."
15012238,1,0,1,java.util.HashMap,Freemarker HashMap loop having pojos.
15012238,1,0,1,java.util.HashMap,"i am having HashMap cars, and pojo Car contains attribute 'engines' which is again HashMap."
15012238,1,0,1,java.util.HashMap,Is there any thing special handling related to HashMap containing pojos and another Map?
15012933,1,0,3,java.util.HashMap,"In Java, at some point in code I want to free memory taken by a huge HashMap<Integer, ArrayList<Integer>> object."
15017197,1,0,0,java.util.HashMap,Android convert String to HashMap.
15017197,1,0,0,java.util.HashMap,I need to convert this to a table/HashMap so that I can fetch values based on the key.
15021902,2,1,4,java.util.HashMap,"If you don't care about the sort order, use HashMap or LinkedHashMap."
15024949,2,0,0,java.util.HashMap,So object; you keep in HashMap/HashSet as well as ArrayList.
15024149,2,0,5,java.util.HashMap,Then have HashMap that maps ID to GraphNode.
15029639,1,0,1,java.util.HashMap,Populating HashMap in objet from request with BeanUtilsBean.
15029639,1,0,1,java.util.HashMap,"It works well for almost any usecase, but I'm still stuck with one, fill HashMap from my request parameters."
15032888,2,0,0,java.util.HashMap,Here's a snippet of some code that will generate five Towers with UUID's - keeping track of each in a HashMap (credit Jack Maney).
15036439,2,0,1,java.util.HashMap,"HashMap uses power of two array sizes, so presumably the largest it could use is 2^31."
15036439,2,0,1,java.util.HashMap,HashMap does a series of shift and xor operations to reduce some sources of collisions before doing a simple bitwise AND to get the bucket index.
15036669,2,1,1,java.util.HashMap,Here is a link to the current source code: http://www.docjar.com/html/api/java/util/HashMap.java.html The answers to your questions are (in part) implementation specific.
15036669,2,1,1,java.util.HashMap,"2)  The size of a HashMap is the number of entries, and that can exceed 2^32!"
15036669,2,1,1,java.util.HashMap,The size of the HashMap's array is theoretically limited to 2^31 - 1 (the largest size for a Java array).
15036669,2,1,1,java.util.HashMap,The HashMap implementations are tuned to work best for normal sized maps.
15036370,2,0,0,java.util.HashMap,"First, you should not use a generic HashMap, because then the compiler can't help you with types."
15036370,2,0,0,java.util.HashMap,"I would not recommend storing a HashMap of differently-valued types, as it just invites programming errors."
15039222,1,0,0,java.util.HashMap,How to make java HashMap work properly with custom Key type?
15039222,1,0,0,java.util.HashMap,What i need is to make a HashMap with a custom Key type like this: code.
15039222,1,0,0,java.util.HashMap,"However I am missing something here, because the HashMap stops working properly."
15039222,1,0,0,java.util.HashMap,"The result from execution is: false true I have debug it and the searcher instance is beeing populated properly, however it seems the HashMap refuse to find it in its KeySet."
15039235,2,1,9,java.util.HashMap,The HashMap uses these methods to differentiate and hash the key class.
15042389,2,0,9,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
18100878,2,0,0,java.util.HashMap,By using more memory (an HashMap of at most N/2 elements)we do not need to sort the strings.
15046155,2,0,0,java.util.HashMap,"It sounds like either a HashMap, or, if you want to use Googles Guava libraries, a MultiSet would suit your needs."
18865161,2,0,0,java.util.HashMap,where TDoubleObjectMap comes from gnu.trove.map and HashMap comes from gnu.trove.map.hash; P.S.
15049872,2,0,0,java.util.HashMap,"In my roguelike Tyrant all game objects have a HashMap of properties, for example."
15050135,2,0,4,java.util.HashMap,A HashMap is not suited in this case since for a specified key you can have a single value.
15050173,2,0,0,java.util.HashMap,A HashMap is not the best way to represent edges since graph traversal is not optimal.
15052883,1,0,3,java.util.HashMap,Is HashMap.put for String keys generally a bottleneck?
15052883,1,0,3,java.util.HashMap,"A HashMap seemed natural (String -> Token object), but when running Xprof it seems like a disproportionate large portion of the processing goes to adding the token to the HashMap."
15052948,2,0,2,java.util.HashMap,"There is not much information in your question to make a proper analysis, but based on what I can see you're simply reading a file and putting the words into a HashMap."
15052948,2,0,2,java.util.HashMap,"Given the fact that that is the only thing the program does, one shouldn't be at all surprised that it spends most of its time reading the file and updating the HashMap."
15052960,2,0,3,java.util.HashMap,"I don't know about Xprof, but you can try profiling with visualvm, and see how many times it calls HashMap.put, how long it takes each time and in total."
15053066,1,0,0,java.util.HashMap,HashMap for storing big Cache.
15053066,1,0,0,java.util.HashMap,How could HashMap contain lot of data but not keep all in memory at one.
15054346,1,0,1,java.util.HashMap,"I don't want HashMap<String, Dict> but HashMap<String, Plant>, HashMap<String, Animal> etc."
15055647,1,0,0,java.util.HashMap,"One solution which I was thinking about was to use HashMap to keep all the variables in, but then I will have to rewrite all classes that uses this one and not sure how it will affect performance, since it will be pretty intensively used all the time."
15057460,2,1,4,java.util.HashMap,"If you have a bunch of objects with names, and you want to grab an object by its name, I suggest you look up the class HashMap."
15057460,2,1,4,java.util.HashMap,"HashMap lets you put in objects under keys, and when you give the hash map a key it returns the object associated with that key."
15058551,2,0,1,java.util.HashMap,"a (mostly) linear time solution would be to use a HashMap<Integer, Integer> and build a histogram of all values appearing in A. code."
15058688,2,0,0,java.util.HashMap,"build a HashMap<MyLine, Integer> Integer is the length of the MyLine."
15059398,1,0,2,java.util.HashMap,How to ensure/force equal distribution in a HashMap?
15059398,1,0,2,java.util.HashMap,A HashMap datastructure distributes keys among its buckets based on the Key's hashcode.
15059398,1,0,2,java.util.HashMap,If i were implementing my own HashMap how would i ( or what should i do) to ensure equal distribution among the buckets?
15061266,2,0,2,java.util.HashMap,"Two possibilities to add to your own Idea HashMap of HashMap - heavier than 2D arrays, but provide ease of use, by city names directly."
15062396,2,0,2,java.util.HashMap,"In TreeSet, the elements are stored in a Red-Black Tree, whereas HashSet, uses a HashMap."
15062470,2,0,2,java.util.HashMap,HashMap lookup the item bucked given its hashCode then test the inserted object and the stored ones by using equals (this is one of the reasons for requiring that a.equals(b) iff b.equals(a)).
15064561,1,0,0,java.util.HashMap,which is the fastest: 3 Arraylist synchronized or a HashMap with custom structure as value.
15070125,1,0,1,java.util.HashMap,For example consider the following static factory method that creates a new HashMap every time it is called : code.
15072245,1,0,2,java.util.HashMap,"My solution went like this:  I created a HashMap<Integer, SortedSet<TestResult> called studentIdToResultSet."
15072245,1,0,2,java.util.HashMap,"Iterated over the HashMap, for each entry I iterate over the first 5 set entries and get the average, put that in another HashMap, which I ultimately return."
15073119,1,0,0,java.util.HashMap,here How to call a method stored in a HashMap?
15075314,2,0,0,java.util.HashMap,"Here's one approach :  Iterate through your string array to create a MultiMap<String, String> (if you're using the Guava library or HashMap<String, List<String>> if you're using the java.util) where the key is the sorted word and the values are legal words for that sorted string."
15075314,2,0,0,java.util.HashMap,"Iterate through the sorted subset, and search the HashMap or MultiMap to get the values for that sortedsubset string."
15075759,1,0,0,java.util.HashMap,I'm trying to extract all input fields from a web page with their Title and element details and to put them in a HashMap for later use in a JUnit test like  This is the example code from the test class: code.
15075973,1,0,0,java.util.HashMap,I have a HashMap that contains a string key paired with a Set value.
15075973,1,0,0,java.util.HashMap,EDIT: I should specify that I don't NEED to use a HashMap to maintain this collection.
15077353,2,0,1,java.util.HashMap,"Actually, there might be a slight performance loss in querying the HashMap each time, but I wouldn't bother with that."
15077353,2,0,1,java.util.HashMap,"Furthermore, I suggest you to replace HashMap in the declaration of points with Map, i.e.: code."
15080791,2,1,3,java.util.HashMap,Side note:  Hashtable is a pretty old Collection and has been replaced by HashMap.
15083860,1,0,0,java.util.HashMap,"I have a HashMap which certain keys like ""crash"" and ""crashes"" which return the same response."
15083860,1,0,0,java.util.HashMap,"I want to create a new HashMap that maps synonyms to a unique key in the responseMap (for example, map ""crash"", ""crashes"" and ""crashed"" to ""crash"" in the synonymMap)."
15090177,2,0,0,java.util.HashMap,"Probably instead of sending objects of unknown type, you better send some well-known data structure that describes the object, i.e. HashMap."
15091148,1,0,10,java.util.HashMap,How do you pass in null values into a HashMap?
21779234,2,0,0,java.util.HashMap,I'm using Struts2 (2.3.3) webapp and use a HashMap for displaying results.
15091517,2,0,23,java.util.HashMap,HashMap supports both null keys and values http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html code.
15095275,2,0,2,java.util.HashMap,"Instead you probably want to either use an array of JLabel (1 dimensional or 2 dimensional) and get the label from the array index or create and use a HashMap<String, JLabel> If you use the HashMap, you will first need to fill it with String/JLabel pairs using its put method, and then you can use the String as a key to extract the JLabel of interest."
15097801,1,0,0,java.util.HashMap,"simple scheme: in the init() method, i reads one point for each vehicle into HashMap (vehicle id = key, location in json = value) ."
15097801,1,0,0,java.util.HashMap,Of course I want to minimize synchronization so i read javadoc : http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html  Note that this implementation is not synchronized.
15165834,2,1,0,java.util.HashMap,"Now I had 2 options, one was to store these result sets into a DefaultMutableTreeNode or to store them in an ArrayList and HaspMap (for example: I could have created a HashMap for Stage IDs as my keys and its Samples in an ArrayList as its values."
15165834,2,1,0,java.util.HashMap,"Then because we can pass in any type of object other than a DefaultMutableTreeNode object to a TreeModel, we can pass in this HashMap object and use a custom TreeModel to handle it."
15101990,2,0,8,java.util.HashMap,"If so, caching the square roots in a HashMap might be faster than computing them."
15104272,1,0,0,java.util.HashMap,HashMap of ArrayList causing nullpointerexception.
15104272,1,0,0,java.util.HashMap,I have a HashMap of ArrayLists for values but the HashMap remains empty when I add the ArrayLists and then throws an NullPointerException when I try to get() the ArrayList.
15109034,1,0,0,java.util.HashMap,"I had a weird and unexpected behaviour on a java HashMap, on a part of code that is solely for testing."
15109248,2,0,1,java.util.HashMap,A HashMap can be null (if not initialized) or empty (if initialized but no object was entered).
15109248,2,0,1,java.util.HashMap,"new statement allocates memory for the object, and create it as an empty HashMap (and not null)"
15109276,2,0,1,java.util.HashMap,You have no HashMap at all.
15109276,2,0,1,java.util.HashMap,You just have an empty pointer (not an empty HashMap).
15109276,2,0,1,java.util.HashMap,"You create a new HashMap using bookings = new HashMap<Integer, Booking>()."
15109276,2,0,1,java.util.HashMap,After that you have an empty HashMap.
15109276,2,0,1,java.util.HashMap,"You acutally have a HashMap, but there is nothing inside it."
15109276,2,0,1,java.util.HashMap,"Also when you remove all the elements from the HashMap, it becomes empty, not null."
15115991,1,0,3,java.util.HashMap,I've been having a hard time trying to think of a way create a HashMap that groups values (into a list) that has the same key.
15116074,2,0,0,java.util.HashMap,"Your actual situation can't work because a HashMap<Integer,Integer> is not able to store two pairs with same key as in 1,10 and 1,11."
15116277,2,0,0,java.util.HashMap,HashMap will only store 1 value for each Integer.
15118806,1,0,1,java.util.HashMap,Regadring program on concurrent HashMap.
15118806,1,0,1,java.util.HashMap,"He said that, in case of a concurrent HashMap update operation, ConcurrentHashMap only locks a portion of the Map instead of the whole Map."
15124823,2,0,2,java.util.HashMap,"Map<String, String> maplet2 = new HashMap<>();"
15124879,2,0,1,java.util.HashMap,"At RUNTIME HashMap<String, String>() and HashMap() are the same represented by HashMap."
15124879,2,0,1,java.util.HashMap,"The process of converting HashMap<String,String> to HashMap (Raw Type) is called Erasure."
15129015,1,0,1,java.util.HashMap,Class A contains a private HashMap that I want to access through a public iterator that iterates this map.
15133960,2,0,0,java.util.HashMap,"You can do a lot with LinkedList, HashMap, HashSet, and we have a dictionary http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Dictionary.html too."
15133992,2,0,0,java.util.HashMap,"Java has all its data structures, including set, list, HashMap, defined in the Java Collections Framework."
15133992,2,0,0,java.util.HashMap,A HashMap is essentially equivalent to a dictionary.
15133996,2,0,0,java.util.HashMap,"As far as data structures, the default ones are ArrayList, HashSet, and HashMap."
15133916,2,1,1,java.util.HashMap,"Sadly there is no native Tuple in Java, most of the time you go with:  List: ArrayList (is a List and a List is a Collection) Set: HashSet (is a Set and a Set is a Collection) Dictionary: HashMap (is a Map, but a Map is not a Collection)  Have a look at Java Collections in general: http://docs.oracle.com/javase/tutorial/collections/index.html For concurrency: http://docs.oracle.com/javase/tutorial/essential/concurrency/collections.html There are a lot of external libraries (Guava, Apache, ...)"
15136750,2,1,1,java.util.HashMap,Extend the HashMap and override the putAll method.
15136750,2,1,1,java.util.HashMap,"Now, create objects of MyMap instead of HashMap."
15138612,2,1,1,java.util.HashMap,"After being told to read up on volatile, I think the accepted answer in this question solves it Volatile HashMap vs ConcurrentHashMap."
15140685,1,0,2,java.util.HashMap,"I thought about perhaps having each class that requires 'setValue()' to have a HashMap that matches a property/field to it's string key, but I'm not sure if that should be achieved through a method such as 'getHashMap()' that returns a hashmap with hashMap.put(""color"", color)... or what."
15150282,2,0,1,java.util.HashMap,"If you would like to know which characters they are, you could insert each character into a HashMap where the key is the character and the value is the number of times it is used."
15152058,1,0,0,java.util.HashMap,I wanted to use Collection for only single threaded environment and I am using a HashMap that is synchronized.
15152083,2,0,0,java.util.HashMap,"For instance, this is how you can generate a synchronized map from a HashMap: code."
15152087,2,0,0,java.util.HashMap,As its a single-threaded environment you can safely use HashMap.
15152090,2,0,3,java.util.HashMap,the standard java HashMap is not synchronized.
15152104,2,0,4,java.util.HashMap,"If you're only using a single thread, you don't need a thread-safe collection - HashMap should be fine."
15152104,2,0,4,java.util.HashMap,"You should be very careful to work out your requirements:  If you're really using a single thread, stick with HashMap (or consider LinkedHashMap) If you're sharing the map, you need to work out what kind of safety you want:  If the map is fully populated before it's used by multiple threads, which just read, then HashMap is still fine."
15152104,2,0,4,java.util.HashMap,"Also note that while HashMap allows null keys and values, ConcurrentHashMap doesn't."
15152286,1,0,0,java.util.HashMap,Using two HashMap I was able to do some till – code.
15152534,1,0,1,java.util.HashMap,"I am using android image gallery,I want to select image tag id by click on gallery item and put that id in to HashMap (param_ids)."
15152741,1,0,1,java.util.HashMap,being  report: a object tipe JasperReport hashMapOfParameter: a HashMap with the parameters I send to the jasper CollectionBeans: a Vector with the diferent fields of the main query  I wanna send 2 more Vectors to fill 2 tables in the report.
15154159,1,0,3,java.util.HashMap,"I have a HashMap<MyClass,ArrayList<WeakReference<MyObject>>> variable."
15154159,1,0,3,java.util.HashMap,"Eventhough weakrefences are cleaned from the hashmap, i also want to be able to manually remove ""MyObject"" from HashMap."
15154973,2,1,0,java.util.HashMap,"See java's HashMap for another example, and wikipedia for a brief introduction on Generics in java."
15155979,1,0,1,java.util.HashMap,JAX-RS converting HashMap with List type as value to XML using Jersey.
15155979,1,0,1,java.util.HashMap,"At the end exception message is like:  Caused by: com.sun.jersey.api.MessageException: A message body writer   for Java class java.util.HashMap, and Java type   java.util.Map<java.lang.String,  java.util.List<java.lang.String>>,   and MIME media type application/xml was not found."
15157552,1,0,0,java.util.HashMap,I am using org.apache.commons.beanutils.BeanUtils.populate() to poulate a Java bean from HashMap.
15159652,1,0,1,java.util.HashMap,"So I have an object (Map, HashMap, LinkedHashMap or whatever associative...) where keys are string commands and values are functions which i want to call by the key."
15164275,1,0,2,java.util.HashMap,May be I can fetch data directly in Java data structures like HashMap<> or something else?
15165372,1,0,1,java.util.HashMap,Lookup Java non-String keyed Java HashMap with string.
15165372,1,0,1,java.util.HashMap,I'm trying to have a HashMap keyed with a CircuitId class.
15165372,1,0,1,java.util.HashMap,But it doesn't work and I think because HashMap uses this evaluation form (key==null ?
15165372,1,0,1,java.util.HashMap,I'm wondering why HashMap didn't do k.equals(key) instead?
15166051,2,0,0,java.util.HashMap,"Use a CircuitId-keyed map, but override the get() method of the HashMap so it works with String objects too: code."
15165806,2,0,0,java.util.HashMap,"If you want to look up entries by String, you should be using a HashMap<String, CircuitID> or something like this."
15166422,2,0,0,java.util.HashMap,How about a HashMap?
15168788,2,1,1,java.util.HashMap,A simple approach is to have a HashMap with the key equal to the command text and the value is an instance of class that handle this command.
15168357,2,0,2,java.util.HashMap,You can use a regular HashMap since you do not modify it.
15171450,1,0,2,java.util.HashMap,I am using a HashMap to using the edges as key and the random edge weight as the value.
15172571,2,0,4,java.util.HashMap,"A HashMap will be very large, cause it will contain Doubles (with a capital D) which are significantly larger than 8 bytes."
15171840,1,0,0,java.util.HashMap,Access to HashMap's elements.
15171840,1,0,0,java.util.HashMap,Can I access HashMap's first and second elements separately?
15171840,1,0,0,java.util.HashMap,I mean if I have a HashMap code.
15171852,2,0,2,java.util.HashMap,HashMap does not maintain order.
15171852,2,0,2,java.util.HashMap,LinkedHashMap  This implementation differs from HashMap in that it maintains a   doubly-linked list running through all of its entries.
15171860,2,0,0,java.util.HashMap,"Maps are not ordered, so there is no such thing as 'the first entry', and that's also why there is no get-by-index method on Map (or HashMap)."
15171878,2,0,0,java.util.HashMap,"Note, that because HashMap does not remember which order elements were added in, ""first element"" does not necessary mean ""first added""."
15176196,2,0,1,java.util.HashMap,"A better approach might be to read the file from disk only once, store the words in a HashSet (a set backed by a HashMap, which is very efficient to search), and then use set.contains(""mystring"")."
15179529,2,1,0,java.util.HashMap,"Since you're working with data that has IDs, I would strongly recommend you use a HashMap anyway so you don't have to worry about your data not being in a perfect sequence."
15181218,1,0,0,java.util.HashMap,HashMap iteration/Deletion.
15181218,1,0,0,java.util.HashMap,I have a HashMap.
15181218,1,0,0,java.util.HashMap,I want to iterate through the entire HashMap and do record the top ten most-appearing books in an array.
15181218,1,0,0,java.util.HashMap,"At the same time, I also want to remove those top ten books from the HashMap."
15181293,2,0,0,java.util.HashMap,Assuming that the HashMap stores books according to their unique identifier (i.e. it gives you no ordering hints about COUNT).
15181293,2,0,0,java.util.HashMap,"For each element e in HashMap:  If O10S is not full yet insert e in O10S  Otherwise, if e has a COUNT higher than the element o in O10S with the minimum COUNT (which should be easily identifiable since O10S is ordered): remove o from O10S, insert e in O10S  For every o in O10S, remove o from HashMap   The algorithm is linear with respect of the elements in HashMap (you only need to traverse the HashMap once)"
15184637,1,0,4,java.util.HashMap,Custom hashcode/equals operation for HashMap.
15184637,1,0,4,java.util.HashMap,Is there a an implementation of the HashMap class (or Map interface) that will allow me to use alternate hashcode and equals operations...
15188307,1,0,2,java.util.HashMap,What is the runtime performance of get() method in TreeMap & HashMap with size of n. Recently a interview question make me feel uncertainty.
15188307,1,0,2,java.util.HashMap,"for get() method in both TreeMap and HashMap, what is its performace?"
15188354,2,0,7,java.util.HashMap,"HashMap  This implementation provides constant-time performance for the basic   operations (get and put), assuming the hash function disperses the   elements properly among the buckets."
15188354,2,0,7,java.util.HashMap,However note that modifying the load factor (default value = 0.75) might have some effect on the cost of some operations in HashMap.
15188354,2,0,7,java.util.HashMap,"Higher values decrease the   space overhead but increase the lookup cost (reflected in most of the   operations of the HashMap class, including get and put)."
15190310,2,0,0,java.util.HashMap,"If it is sparse, and you want large maps with 100 x 100 or 1,000 x 1,000, then you should look at a Point class and a HashMap where the point is the key."
15197559,1,0,3,java.util.HashMap,How to get query param as HashMap.
15197559,1,0,3,java.util.HashMap,"And when I get the query param 'a', it should be parsed as HashMap like so: code."
15198533,2,0,2,java.util.HashMap,I have used Voldemort when we had to replace normal HashMap when large data had to be supported.
15204632,2,0,2,java.util.HashMap,"You should first create Employee class with all relevant fields (name, age, salary etc) Then you can use HashMap: code."
15204892,2,0,0,java.util.HashMap,"If they are you're fine with HashMap<String name, Employee>."
15204892,2,0,0,java.util.HashMap,HashMap is very good in time complexity.
15204716,2,0,0,java.util.HashMap,"I don't know why HashMap doesn't suit your needs, but if you want to be able to iterate all employees (as if it was a collection), you can still use: code."
15204584,2,0,0,java.util.HashMap,So if your purpose is served by HashMap; then will suggest go for it.
15207878,2,1,2,java.util.HashMap,You can think if it more or less as an overblown HashMap.
15214015,2,0,0,java.util.HashMap,but you can just return a HashMap with uername populated.
15214451,2,1,2,java.util.HashMap,Try HashMap code.
15214488,2,0,1,java.util.HashMap,You can use a HashMap or HashTable.
15220143,1,0,3,java.util.HashMap,"Additionally, each word will be passed to a HashMap contained in another function passed as an argument to parse()."
15221843,2,0,0,java.util.HashMap,"No you're not guaranteed a specific order, unless you use a HashMap which implements a custom set that can give you this guarantee."
15221843,2,0,0,java.util.HashMap,"The Set the HashMap gives you back have an Iterator() method which iterates over the elements in ""no particular order""."
15221387,2,0,0,java.util.HashMap,"Unfortunately the docs for HashMap state that keySet() method does not return a SortedSet, it just returns a Set, for which the ordering is not guaranteed."
15221387,2,0,0,java.util.HashMap,"See HashMap.keySet() Read, in particular: It makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time."
15224130,2,0,1,java.util.HashMap,"BTW, the HashSet is implemented using HashMap in a similar way."
15233160,2,1,2,java.util.HashMap,"Edit: As the commenters rightly point out, you should be using HashMap not HashTable, and you really shouldn't be calling your method Hashtable... Edit 2: Well you changed the code sample so this is no longer accurate, but now what's happening is either DeviceID doesn't exist so you get -1 or you keep getting the same device ID."
15234360,2,0,1,java.util.HashMap,"One reason: The first thread could be in the middle of initializing the HashMap, while a second thread comes a long, sees that map is not null, and merrily tries to use the partially-initialized data structure."
15235072,2,0,1,java.util.HashMap,I'd recommed using a HashMap or any other hash table implementation based on your need.
15235072,2,0,1,java.util.HashMap,something like HashMap<Lot> lots= new HashMap<Lot>(); Store all Lot variables into the map and simply apply code.
15240851,1,0,3,java.util.HashMap,"For instance Java's HashMap has the constant time lookup, but I will need to get all keys, sort them and pick the last or the first depending on the algorithm I am implementing."
15241673,2,0,0,java.util.HashMap,"will be the first hashMap keys and <name,ben>,<lastname,tagds>  will be in the internal HashMap."
24354022,2,0,0,java.util.HashMap,I have used HashMap for storing line(line number as key and line content as value) If anything need to be add to this code please post.
15245108,2,0,0,java.util.HashMap,"What you can do is relate several values to a single key, using HashMap<String, List<valueType>> You can use: code."
15247432,2,0,0,java.util.HashMap,"you can Try like this..  HashMap <String, Object> entityList = new HashMap<String, Object>(); LinkedHashMap<String, String> linkedHashmap = new LinkedHashMap<String, String>(); entityList.put(""key1"", updateObject(entityList.get(""key1"", newkey, new value); public LinkedHashMap<   String, String> updateObject(LinkedHashMap<String, String> linkedHashmap,String newKey,String newValue){ linkedHashmap.put(newKey,newValue); return linkedHashmap; }"
15247799,2,1,1,java.util.HashMap,"Edit In response to OP Edit Alternatively, instead of implementing an Array, you can implement a HashMap<String,Player>."
15271803,2,1,1,java.util.HashMap,3. the XML document created by the SAX filter can then be used to create a virtual object (in this case a HashMap) 4. the HashMap can then be used as the input for the FreeMarker template So my smooks-config.xml file looks now like this: code.
15271803,2,1,1,java.util.HashMap,"as explained before: first use the SAX filter, second create a virtual object (HashMap in this case), third: do the templating with free marker"
15252782,1,0,0,java.util.HashMap,"I have the problem that I defined a HashMap as a variable, where I should have used a class for better extendability."
15252782,1,0,0,java.util.HashMap,"How can I accomplish this, considering that the HashMap is used throughout my project?"
15252782,1,0,0,java.util.HashMap,"I would like to have the result to be not a HashMap, but an Object."
31661079,2,0,0,java.util.HashMap,"While Carl Manaster answer is absolutely right, I would recommend a different aproach, extending HashMap itself."
31661079,2,0,0,java.util.HashMap,"So you only need to rewrite the constructor and you override all the HashMap methods, and it's possible to add any other fields or custom methods you would need."
15253653,2,0,0,java.util.HashMap,"Create your class, with its own HashMap field, and somewhere in your code replace the HashMap with YourClass."
15253653,2,0,0,java.util.HashMap,Now you'll see some red underlines where your class doesn't implement the (HashMap) method.
15253653,2,0,0,java.util.HashMap,"You'll see some other underline, say, where you're passing the YourClass to a method that expects a HashMap."
15253908,1,0,0,java.util.HashMap,I have a Map (HashMap) that is serialized to XML from a java app.
15255460,2,0,0,java.util.HashMap,If you want a list with two values HashMap http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html is what you need.
15268849,2,0,0,java.util.HashMap,"I think it's better for you to use HashMap instead of those sets, where you can get object by key directly."
15334814,2,1,0,java.util.HashMap,The cost of getting an Entitys attributes is reduced from parsing all class attributes and creating a new set to hold them to a check-and-retrieve operation on a Map which should be quite small when using a HashMap.
15276925,2,0,1,java.util.HashMap,First some terminology  key: the first parameter in the put value: the second parameter in the put entry: an Object that holds both the key & the value  When you put into a HashMap the map will call hashCode() on the key and work out which hash bucket the entry needs to go into.
15276925,2,0,1,java.util.HashMap,When you get from a HashMap the map will call hashCode() on the key and work out which hash bucket to get the entry from.
15278619,1,0,1,java.util.HashMap,"When trying to execute this piece of code:  public void load(String filename) { FileHandle file =   Gdx.files.external(filename + "".bim"");         Json json = new Json();   String text = file.readString(); datamap.clear(); datamap =   json.fromJson(HashMap.class, text);  I get an error:  Exception in thread ""LWJGL Application""   com.badlogic.gdx.utils.GdxRuntimeException:   com.badlogic.gdx.utils.SerializationException: Class cannot be created   (missing no-arg constructor): com.bvo.easyBim.Model.Cursor    at   com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:113)   Caused by: com.badlogic.gdx.utils.SerializationException: Class cannot   be created (missing no-arg constructor): com.bvo.easyBim.Model.Cursor     at com.badlogic.gdx.utils.Json.newInstance(Json.java:915)   at   com.badlogic.gdx.utils.Json.readValue(Json.java:793)  at   com.badlogic.gdx.utils.Json.readValue(Json.java:803)  at   com.badlogic.gdx.utils.Json.fromJson(Json.java:644)   at   com.bvo.easyBim.View.DataProcessor.load(DataProcessor.java:85)    at   com.bvo.easyBim.View.World.init(World.java:115)   at   com.bvo.easyBim.View.WorldRenderer.buttons(WorldRenderer.java:173)    at   com.bvo.easyBim.View.WorldRenderer.render(WorldRenderer.java:106)     at   com.bvo.easyBim.Screens.AppScreen.render(AppScreen.java:22)   at   com.badlogic.gdx.Game.render(Game.java:46)    at   com.bvo.easyBim.EasyBim.render(EasyBim.java:39)   at   com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:187)     at   com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:110)   Caused by: java.lang.InstantiationException:   com.bvo.easyBim.Model.Cursor  at java.lang.Class.newInstance0(Unknown   Source)   at java.lang.Class.newInstance(Unknown Source)  at   com.badlogic.gdx.utils.Json.newInstance(Json.java:901)    ... 12 more  I am trying to translate the json file back into the datamap after It was correctly saved in another piece of code."
15281410,2,0,3,java.util.HashMap,"What you will need to do is have a HashMap<String, ArrayList<String>> or something of that sort, where the key is the SKU number and the value is a list of all dates which you can then use for further sorting and processing to count the occurrences."
15281458,2,0,0,java.util.HashMap,Implement the hashCode and equals methods so later a HashMap will work properly.
15281872,2,0,0,java.util.HashMap,"What about having a map of Guava Multisets like Map<String,Multiset<String>> itemToDatesSoldMap = new HashMap<>();."
15286833,2,0,0,java.util.HashMap,"HashMap uses an array of Map.Entry: an element in the array is a pair key,value."
15286833,2,0,0,java.util.HashMap,"In order to avoid this problem, HashMap automagically resizes when its current count is greater than some percentage of the internal array capacity (the ""load factor"", which by default is 75%)."
15286833,2,0,0,java.util.HashMap,This means that a 75-element HashMap will be baked by a 100-element array.
15286726,2,0,3,java.util.HashMap,And there you will see that HashMap has an array of buckets: code.
15286756,2,0,0,java.util.HashMap,A lot can be gleaned by even just reading the Javadoc for HashSet and HashMap.
15286756,2,0,0,java.util.HashMap,A HashSet is backed by a HashMap.
15286756,2,0,0,java.util.HashMap,"According to the HashMap Javadoc, it's defined by an initial capacity and load factor."
15294805,2,0,0,java.util.HashMap,"If that Map.put(CustomEntry e) method is all you need, you could simply create a new class that extends HashMap and add that method to it which is an adapter to the regular put(key, val)"
15299105,2,0,0,java.util.HashMap,You can sort the words alphabetically using a TreeMap rather than a HashMap - this may look better for display; depending on what you plan to do with the map.
15305561,1,0,0,java.util.HashMap,I have a HashMap that I would like convert into an XML file.
15306903,2,1,0,java.util.HashMap,"If you're considering HashMap, the keys needs to have .equals() and .hashCode() function, which I suppose ArrayList would have."
15316619,2,1,6,java.util.HashMap,"Or use a HashMap<JButton, SomethingElse>."
15318484,2,0,2,java.util.HashMap,"You (the HashMap) don't know that it has changed, so you don't know to update its location, so the next time someone tries to look up that key, you won't find it."
15322073,2,0,1,java.util.HashMap,"With that in mind, I thought of using a HashMap."
15322073,2,0,1,java.util.HashMap,Example of a HashMap code.
15322073,2,0,1,java.util.HashMap,"With this code, you now have a person in your HashMap collection."
15322073,2,0,1,java.util.HashMap,"Now, when someone walks into your 'attack aura', you can simply get that person's name, and check if a key exists in your HashMap."
15326074,1,0,0,java.util.HashMap,The second option is to use the HashMap.
15327018,1,0,1,java.util.HashMap,"So, I used the Map / HashMap as how to manage cookies with Jsoup, maintain cookies and session with Jsoup, retrieve cookies.., but still 403."
15332055,2,0,0,java.util.HashMap,Perhaps the most efficient way to use it is to change the data structure of Students to be a HashMap.
15336416,2,0,1,java.util.HashMap,Have static getter to read it Not sure about the apache config API but we use a static HashMap and store properties in it.
15336416,2,0,1,java.util.HashMap,if all string: private static Map data = new HashMap (); can expose as properties so you can use anywhere code. }
15336416,2,0,1,java.util.HashMap,If you wanted the objects to be dropped after sometime can use WhirlyCache instead of the HashMap.
15336549,1,0,0,java.util.HashMap,HashMap keys and values.
15336624,2,1,3,java.util.HashMap,"Use String.lastIndeXOf to find the last dot in the URL Use String.substring to get the extension based on that Have a HashSet<String> for a set of supported extensions, or a HashMap<String, Whatever> if you want to map the extension to something else  I would be absolutely shocked to discover that this simple approach turned out to be a performance bottleneck - and indeed I suspect it would be more efficient than the approach you suggested, given that it doesn't require the entire URL to be converted into a byte array... (It's not clear why your approach uses byte arrays anyway instead of forming the hash from char values.)"
15345029,2,0,0,java.util.HashMap,"If so, then you will need to keep a HashMap or HashTable in your mapper or reducer that stores the values of all the keys (users in this case) to compare - but that is not a good setup, IMHO."
15341594,2,0,0,java.util.HashMap,If you are using Java I would recommend using a HashMap http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html This would eliminate using 2 arrays and would be simplier i think This is why I would recommend looking into using a HashMap it would make it simpler  Hope this helps
15341480,2,1,2,java.util.HashMap,I suggest you take a look at them if in doubt:  JSON to HashMap String to JSON array (If your JSON structure is not that complex)
15344687,2,1,2,java.util.HashMap,You could use HashMap for this perpose in following way: code.
15344712,1,0,0,java.util.HashMap,Creating a ordered HashMap sorted by create/update time in Java.
15344712,1,0,0,java.util.HashMap,I created a HashMap on IP to count the number of bytes served for each IP.
15344712,1,0,0,java.util.HashMap,I need to maintain HashMap in sorted order based on their creation/update time.
15344712,1,0,0,java.util.HashMap,Or which libraries I can use to get a HashMap sorted by creation/update time?
15344824,2,0,0,java.util.HashMap,"If you're restricted to LinkedList and HashMap, you'll have to sort the list by the use of, for example, Collections#Sort."
15344824,2,0,0,java.util.HashMap,"In the case of the HashMap, you'll have to sort its Entry Set but since you can't modify it, you'll have to generate a new sorted map this way."
15344824,2,0,0,java.util.HashMap,"Still, a HashMap is a structure that has nothing to do with ordering, so you'll still have some issues when iterating through it."
15346056,1,0,1,java.util.HashMap,"This is my parsing code which after getting URLDecode goes to my Encrypter for decrypt: private void parseQuery(String query, HashMap parameters) throws UnsupportedEncodingException { code. }"
15457540,2,0,1,java.util.HashMap,A couple things to keep in mind:  ConcurrentHashMap is more expensive to resize than a normal HashMap.
15346722,2,1,2,java.util.HashMap,Try using a ConcurrentHashMap instead of a plain HashMap
15347190,1,0,0,java.util.HashMap,How to set a Google Maps Marker Icon based on current map filters and a combination of HashMap strings the marker has.
15347190,1,0,0,java.util.HashMap,"It would be very helpful if anyone has any suggestions on the most efficient approach for implementing code to set a map marker icon based on:   Filters defined by the user dictating what markers to display( boolean ) Keys contained in a HashMap<String, Integer> associated with the marker - in class CrimePoint  Filters Options defined by the user: code."
15348062,2,0,0,java.util.HashMap,You could consider a HashMap if you do want to keep track of duplicate count.
15348062,2,0,0,java.util.HashMap,Iterate through array once to place objects into the HashMap with their respective counts.
15348062,2,0,0,java.util.HashMap,Then iterate through the array again checking against the HashMap.
15351158,1,0,1,java.util.HashMap,Is it better to make a HashMap of type Object and cast when getting?
15351297,2,0,1,java.util.HashMap,"If you're storing values of multiple types and using one set of keys, then you should use one HashMap."
15351182,2,1,2,java.util.HashMap,I would avoid creating a HashMap with a value of object.
15351182,2,1,2,java.util.HashMap,Take advantage of the generic features of HashMap to avoid having casts all over the place in your code.
15351182,2,1,2,java.util.HashMap,"Regarding memory, I would use the HashMap if appropriate an worry about memory when it becomes and issue, addressing it once it rears its head."
15351182,2,1,2,java.util.HashMap,Most normal initializations of HashMap shouldn't create memory issues.
15354992,1,0,0,java.util.HashMap,Fail to retrieve value from HashMap with HttpSession as key.
15354992,1,0,0,java.util.HashMap,I have a HashMap where I am putting HttpSession object as Key and HashSet as Value code.
15355560,1,0,1,java.util.HashMap,I have two vectors represented as a HashMap and I want to measure the similarity between them.
15359409,2,1,0,java.util.HashMap,This can avoided by extending the HashMap and overriding the put method: code.
22634707,2,0,0,java.util.HashMap,"So if you indeed want to keep track of precise Marker positions, you can simply store all added markers in a HashMap<Marker, LatLng>."
15367940,2,0,1,java.util.HashMap,"You should definitely also consider using some of the newer collection classes (like HashMap, for example)."
15368001,2,0,1,java.util.HashMap,"You don't have to switch the implementation of the table to HashMap, but it is advised unless you can't."
15367914,2,0,1,java.util.HashMap,You could use a HashMap instead of the HashTable (which is obsolete) and a for-each loop.
15369820,2,1,6,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
15370455,2,0,2,java.util.HashMap,"I like the HashMap idea best, but if you want to keep the Set, you can iterate over the Set, rather than going through the setup of converting to an array: code."
15371774,2,1,6,java.util.HashMap,"For reference, here is an alternative solution with a HashMap: code."
15372954,1,0,2,java.util.HashMap,HashMap with date ranges.
15372954,1,0,2,java.util.HashMap,HashMap?
15373496,1,0,3,java.util.HashMap,"Hi I have a HashMap<String, Double> and also a function which returns a double value known as answer."
15373496,1,0,3,java.util.HashMap,I want to check which value in the HashMap is the closest to the answer and then grab that value's key and print it.
15373496,1,0,3,java.util.HashMap,"I cant switch around the key and value of the HashMap (as a previous function assigns the values equally to each letter), otherwise it would be better to go through each key and get the value."
15373676,2,0,0,java.util.HashMap,HashMap isn't the best structure to do this.
15373531,2,0,4,java.util.HashMap,"With a HashMap, you have to go through each entry."
15376642,2,0,1,java.util.HashMap,"As defined, Table1 must always be a HashMap, but Table2 could be other maps as well."
15376642,2,0,1,java.util.HashMap,"The last one is probably the most important, because there are a variety of libraries which return Map types that you would have to cast to HashMap for Table1."
15376643,2,0,3,java.util.HashMap,"Map is a interface, which is implemented in Several Implementations like HashMap."
15376643,2,0,3,java.util.HashMap,And HashMap is a complete implementation class.
15376643,2,0,3,java.util.HashMap,An useful answer is here -Difference between HashMap and Map in Java..?
15376592,2,0,1,java.util.HashMap,Map is interface and HashMap is implemented class from Map interface.
15376632,2,0,2,java.util.HashMap,"Map is an interface, and HashMap is an implementation of it."
15376632,2,0,2,java.util.HashMap,"They're interchangeable in only one direction, meaning that anywhere you can use a Map, you can use a HashMap instead."
15376632,2,0,2,java.util.HashMap,"It goes much beyond that, though, because Map expresses all the operations that any kind of ""map"" must provide, whether it's a hash-based map (HashMap), a sorting map (TreeMap), a thread-safe map (ConcurrentMap), or an immutable map (ImmutableMap from Guava)."
15379850,2,1,1,java.util.HashMap,"For example new SomeClass<HashMap>(); Now the compiler will have a constructor which tries to pass Number, to a method that wants an O in this case a HashMap."
15388719,2,0,4,java.util.HashMap,You can't override the equals()/hashcode() methods for arrays - This is an issue because the HashMap won't be able to correctly determine whether it has looked up the right key or not.
15388719,2,0,4,java.util.HashMap,Possible Solution So I'm going to assume the reason why you want to avoid creating a new object every time is because you're going to be calling get(key) on that HashMap a LOT.
15390588,2,0,1,java.util.HashMap,"In general, the addition of a particular key-value pair is constant time (HashMap), and figuring out if you can put a new Integer in the map or not is constant as well."
15389917,2,0,1,java.util.HashMap,"Don't use a HashMap if you are going to have multiple threads, use a ConcurrentHashMap instead (javadoc)."
15390762,2,1,1,java.util.HashMap,"Alternatively, you could build an index-like structure using HashMap or TreeMap, which maps from integer value to its position in the array."
15390762,2,1,1,java.util.HashMap,"In the case of using HashMap, the access time would be around O(1), in the case of the TreeMap it would be O(log n), as with the binary-search approach proposed above."
15397828,2,0,1,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html If you need to store a bunch of strings but associate them with names, then you want a HashMap<String,String>."
15397828,2,0,1,java.util.HashMap,"You can do .add(""username"", ""tom"") and .add(""password"", ""hunter12"") on a HashMap, and to get a value you do .get(""username"") and you get ""tom"" back."
15397828,2,0,1,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
15400375,2,0,1,java.util.HashMap,"maybe you can use hash, in java, it's HashMap(or HashSet?)"
15402321,1,0,4,java.util.HashMap,How to convert HashMap to json Array in android?
15402321,1,0,4,java.util.HashMap,I want to convert HashMap to json array my code is as follow: code.
22912023,2,0,3,java.util.HashMap,"Since androiad API Lvl 19, you can simply do new JSONObject(new HashMap())."
15404581,2,0,0,java.util.HashMap,"Then create an ArrayList of your MyObject, from the HashMap you populated by parsing your XML."
15404595,2,0,1,java.util.HashMap,"Tip:Try to make the code simple and working.So first,in your parsing function instead of adding a HashMap to the ArrayList .. take two arraylists and these ArrayLists should be declared at a class level.Correspondingly,fill both ArrayLists and fetch them at Spinner click.So your Activity code stands: code."
27499466,2,0,0,java.util.HashMap,(Plz consider HashMap or ConcurrentHashMap)
15406558,1,0,3,java.util.HashMap,"There is a module that needs to  Extract data from objects Map data parameters, for example SE -> Sweden [this only applies and is used in this module, for now] Send these new parameters to somewhere (for example via email/xml)  For a small set of data, then i'd use a small HashMap, but the custom table of data that has to be transformed has grown to 3 HashMaps with ~100 elements in some."
15407905,2,1,7,java.util.HashMap,"Also, Hashtable is somewhat obsolete and HashMap is preferred in most situations: code."
15407928,2,0,5,java.util.HashMap,Don't use Hashtable; use HashMap.
15408028,2,0,2,java.util.HashMap,"Use HashMap, not Hashtable."
15408028,2,0,2,java.util.HashMap,: Map model = Collections.synchronizedMap(new HashMap());
15408785,1,0,0,java.util.HashMap,For loop - First argruement of HashMap.
15408785,1,0,0,java.util.HashMap,I have successfully written methods that would allow me to put  new values in the HashMap.
15491898,2,0,1,java.util.HashMap,"Basically, I used ArrayList, Map and HashMap to be able to do this."
15422428,1,0,6,java.util.HashMap,Iterator over HashMap in Java.
15422496,2,1,12,java.util.HashMap,"I personally suggest the following: Map Declaration using Generics and declaration using the Interface Map<K,V> and instance creation using the desired implementation HashMap<K,V> code."
15425943,1,0,0,java.util.HashMap,Adding to a HashMap gives a NullPointerException.
15425943,1,0,0,java.util.HashMap,So I have to use a HashMap in Java and I need to fill it with some value from an ArrayList that is picked randomly.
15425943,1,0,0,java.util.HashMap,"I'm filling the ArrayList properly and the code that I have takes a random number, n which is less than the size of the ArrayList, and I use that random value to access a spot in my ArrayList and store that to the HashMap."
15425943,1,0,0,java.util.HashMap,"So here is my code to add to the HashMap as described above, code."
15425943,1,0,0,java.util.HashMap,"where hash is the name of the HashMap, index is just an int value, strArr is the ArrayList of strings that I'm taking the item from, and n is a random number."
15425943,1,0,0,java.util.HashMap,So it was just because I didn't initialize my HashMap.
15426240,2,0,0,java.util.HashMap,Have you initailized object of ArrayList Class or object of HashMap Class?
15426335,1,0,0,java.util.HashMap,"The problem is if I share an object of built-in datatypes (like HashMap, Integer,...) it is ok, but custom datatype can't be cast."
15436516,1,0,4,java.util.HashMap,I am trying to figure out how could I get the top 10 values from the HashMap.
15437012,1,0,1,java.util.HashMap,Java HashMap mechanism.
15437012,1,0,1,java.util.HashMap,"In Java, if I have HashMap<Integer, int[]> map and want to lookup for a given int key like map.get(key) then the algorithm will compute key.hashCode(), go to the corresponding bucket and search linearly for objects of type int[] and compare them by using equals() ?"
15437105,2,0,2,java.util.HashMap,And this is how this search actually implemented in HashMap code.
15437444,2,0,0,java.util.HashMap,That means HashMap must map multiple hash codes to the same bucket.
15437345,1,0,17,java.util.HashMap,"Java: A ""prime"" number or a ""power of two"" as HashMap size?"
15437345,1,0,17,java.util.HashMap,But Java's HashMap always uses a size that is a power of two.
15437377,2,1,11,java.util.HashMap,"Java's HashMap mitigates this by mistrusting the object's hashCode() implementation and applying a second level of hashing to its result:  Applies a supplemental hash function to a given hashCode, which defends against poor quality hash functions."
15437377,2,1,11,java.util.HashMap,"This is critical because HashMap uses power-of-two length hash tables, that otherwise encounter collisions for hashCodes that do not differ in lower bits."
15437377,2,1,11,java.util.HashMap,"If you have a good hash function, or do something similar to what HashMap does, it does not matter whether you use prime numbers etc as the table size."
15437400,2,0,2,java.util.HashMap,The standard HashMap implementation has a hash method which rehashes your object's hashcode to avoid that pitfall.
15439144,1,0,2,java.util.HashMap,Creating a class that is an extension of the java.util.HashMap class.
15439144,1,0,2,java.util.HashMap,"So I'm trying to create an extension of the HashMap class called UniqueHashMap which has all the properties of a the HashMap class, but instead of not being able to have repeated Keys, Values cannot be repeated."
15439144,1,0,2,java.util.HashMap,"As you see I have all the constructors of the superclass, however it will not resolve the values that it should inheret from the HashMap class (K, V, Hash, Map) Am I doing the extension wrong?"
15439205,2,0,0,java.util.HashMap,"If you want to use the generic form of HashMap, you should do the inheritance this way: code."
15439213,2,0,0,java.util.HashMap,Create a HashMap in the other direction where its keys are the first maps values.
15451165,1,0,0,java.util.HashMap,I have the following class and that provide entity name with key and val of HashMap: code. }
15454812,1,0,1,java.util.HashMap,"In the javadocs for Guava's ImmutableMap it says:  Performance notes: unlike HashMap, ImmutableMap is not optimized for   element types that have slow Object.equals(java.lang.Object) or   Object.hashCode() implementations."
15455311,1,0,1,java.util.HashMap,"the size of the array is 32  I tried this and it compiles : HashMap<Date,int[]> coord_map = new HashMap<Date, int[]>(); but I am not sure how this works since I did not give a size for the array of integers."
15455354,2,0,4,java.util.HashMap,"If the problem requires that you have an array of exactly 32 ints then create a wrapper class IntArray32 and use HashMap<Date, IntArray32>."
15455533,2,0,0,java.util.HashMap,"If I am getting you right, you want the functionality of a HashSet being accomplished by a HashMap."
15455778,2,0,0,java.util.HashMap,You can always change the hashcode() to say how the HashMap arranges your object in Map and improve its performence by implementing an effective hashcode method in your class.
15455778,2,0,0,java.util.HashMap,"How HashMap performs addition and removal from a hashed data is internal to HashMap and changing it would basically mean changing add,remove methods etc."
15457366,2,0,0,java.util.HashMap,HashMap will make the searches more efficient.
15457366,2,0,0,java.util.HashMap,"If you didn't want to use HashMap, then the way I would approach this is to have a separate classes for the StockItem and a ShoppingCart class."
15457270,2,0,0,java.util.HashMap,you should use a HashMap rather than ArrayList.
15457560,1,0,0,java.util.HashMap,Something goes wrong when using HashMap.
15457611,2,1,4,java.util.HashMap,"The first element of splittext is the empty string, which has no mapping in your HashMap and hence NullPointerException on get()."
15459765,1,0,1,java.util.HashMap,free marker template how to use for statement in double HashMap.
15459765,1,0,1,java.util.HashMap,In free marker template i want to print HashMap in HashMap.
15459765,1,0,1,java.util.HashMap,but this not printing HashMapin HashMap.
15460950,2,0,4,java.util.HashMap,"java.util.Hashtable java.util.HashMap  Also, there are some good explanations at SO:  How does Java hashmap work?"
15461239,2,0,1,java.util.HashMap,"The simple solution to your problem is to create an HashMap<String,JInternalFrame>."
15461239,2,0,1,java.util.HashMap,"The key will be the title of that JInternalFrame and value will be the object of that JInternalframe opened currently.Save the (key,value) pair in HashMap when the internal frame is opened first time."
15461239,2,0,1,java.util.HashMap,"Register esc key to each JInternalFrame object , so that when esc button of keyboard is pressed the currently display JInternalFrame is minimized on the DesktopPane.Now When you click on menu item to open that same internal frame, check if the title of that JInternalFrame is existing in that HashMap askey."
15461239,2,0,1,java.util.HashMap,"If the corresponding entry of title doesn't exist in that HashMap , create a new JInternalFrame object, make an entry for same in the HasMap and display it."
15465171,2,1,0,java.util.HashMap,HashMap is very hard to query.
15467067,2,0,0,java.util.HashMap,A heavyweight but clean way of doing this is to use a HashMap.
15467067,2,0,0,java.util.HashMap,"If its new, add it to the HashMap and save the number with it."
15467067,2,0,0,java.util.HashMap,"If however, the letter has been seen before, we find the old value, add it with the new one and overwrite the data inside the HashMap."
15468238,1,0,1,java.util.HashMap,HashMap Object key.
15468238,1,0,1,java.util.HashMap,"which acts as a key in the HashMap<Key, int[]> map."
15468238,1,0,1,java.util.HashMap,"I can not use HashMap<int[], int[]> map because then it is not clear what hashCode will be used for int[]."
15469179,1,0,2,java.util.HashMap,"Changing a particular value of an array, in Java, when it is a value of a HashMap."
15469179,1,0,2,java.util.HashMap,"I have a HashMap where the Key is an integer and the value is an array of double i.e., HashMap<Integer, double[]> map = new HashMap<>(); How do I change the value of a particular index in the double array?"
15472581,1,0,0,java.util.HashMap,I have them all saved in a HashMap code.
15476773,1,0,1,java.util.HashMap,"I need a Map that takes Key-Value pair (probably HashMap<String, Object>) whereas the Key will be a property of the Object itself, like: code."
15480129,1,0,0,java.util.HashMap,"Here is how I am implementing this right now, using HashMap code."
15480129,1,0,0,java.util.HashMap,"I feel like there is a better data structure than a HashMap full of nulls except for where I have been, but I have no clue really."
15480214,2,1,0,java.util.HashMap,"Instead of a HashMap, you should use a HashSet."
15480214,2,1,0,java.util.HashMap,"The performance are equivalent since an HashSetis backed by an HashMap<E,Object>."
15487346,2,0,0,java.util.HashMap,HashMap) or database if you require persistence.
15490803,1,0,0,java.util.HashMap,Java HashMap Hashing function.
15490803,1,0,0,java.util.HashMap,"I was going through Java's HashMap hash() implementation , its like below  code."
15492665,1,0,0,java.util.HashMap,HashMap Java Cannot Display Multiple Values.
15502826,1,0,0,java.util.HashMap,We are using a HashMap to cache the lookup of annotations on methods.
15502826,1,0,0,java.util.HashMap,So is it really necessary to synchronize the access to the HashMap in this case?
15519635,2,0,0,java.util.HashMap,"If you still want to access widgets this, you have 2 choices:   Create a HashMap containing all your TextBoxes (or whatever fields you want to access) and use the fieldname as a key."
15519635,2,0,0,java.util.HashMap,However you have to populate your HashMap yourself.
15508288,2,1,11,java.util.HashMap,"One option is to define a custom JsonDeserializer, however better would be to not use a HashMap (and definitely don't use Hashtable!)"
15513356,1,0,1,java.util.HashMap,"How to store multiple values (more than 2) in a map from a ResultSet, similar to HashMap?"
15513356,1,0,1,java.util.HashMap,"I know that with HashMap you can store two values, key and value, but is it possible to take a ResultSet with more than two values per row and store it in a HashMap or something similar."
15513390,2,1,2,java.util.HashMap,"Then you can use an instance of this class as the value in a HashMap, and have methods to retrieve and/or process the data as you deem fit."
15513412,2,0,0,java.util.HashMap,"Your map would be initalized as Map<String,Customer> cache = new HashMap<String,Customer>();"
15519652,2,0,1,java.util.HashMap,"The hashCode is mainly used to distribute objects nicely in datastructures that use a bucketing system like HashMap, so for the performance of such datastructures it is useful if the hashCodes have a good spread."
15518567,2,1,4,java.util.HashMap,"Specific can be any normal object, like, Dog, Tiger, String, Object, HashMap, File, Integer, Long.... and the list is endless.JLS forces <?> method for not to perform add any irrelevant objects in called <?> method once you have defined (defined in calling method not in called-listAll ) list containing specific type of object."
15522546,1,0,18,java.util.HashMap,why HashMap Values are not cast in List?
15522546,1,0,18,java.util.HashMap,"it throw exception:  Exception in thread ""main"" java.lang.ClassCastException:   java.util.HashMap$Values cannot be cast to java.util.List  But it allow to create list in definition of list like: code."
15522598,2,1,31,java.util.HashMap,"Explanation Because HashMap#values() returns a java.util.Collection<V> and you can't cast a Collection into an ArrayList, thus you get ClassCastException."
15522598,2,1,31,java.util.HashMap,You won't get ClassCastException when you pass the result of HashMap.values() like this: code.
15522598,2,1,31,java.util.HashMap,"Going further into the Java API source code HashMap#values(): Check the return type in the source, and ask yourself, can a java.util.Collection be casted into java.util.ArrayList?"
15522609,2,0,16,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#values%28%29  This works:  code.
15522865,2,0,1,java.util.HashMap,Values is an inner class in HashMap class (see $ symbol in java.util.HashMap$Values).
15522865,2,0,1,java.util.HashMap,HashMap.values() method will return  Values class's object which is not implementing List interface.
15522865,2,0,1,java.util.HashMap,Here is the Values inner private class  in HashMap which is not implementing List interface.
15522865,2,0,1,java.util.HashMap,Answer is Values class which is inside the HashMap class (inner class).
15522611,2,0,5,java.util.HashMap,It's because values() returns Collection which according to source code of HashMap is of type AbstractCollection and thus cannot be cast to List.
15529978,2,0,0,java.util.HashMap,As linkedHashMap and HashMap both allow null keys and values.
15531154,2,0,0,java.util.HashMap,entrySet() returns a Set of all entries of HashMap.
15532728,1,0,4,java.util.HashMap,Background An existing system creates a plethora of HashMap instances via its Generics class: code.
15541777,1,0,2,java.util.HashMap,Sort HashMap basis on Object's member variable from value.
15542058,2,0,2,java.util.HashMap,"You can't sort a HashMap, but you can sort its entries obtained with entrySet()."
15542058,2,0,2,java.util.HashMap,"If you need just an one time sorting, you can use a HashMap with the above code."
15543453,2,0,0,java.util.HashMap,This we use in hashing technique which is use by some classes like HashMap..
15550679,1,0,0,java.util.HashMap,How can we make a HashMap-typed parameter not editable?
15550679,1,0,0,java.util.HashMap,"This is actually from one of my recent JAVA interviews, the interviewer asked me this question: if we have a parameter that is of type HashMap, how can we make sure that in the accepting method, there is no way the user can modify this HashMap (i.e., get() method) I was saying using final during the interview, which the interviewer didn't appreciate at all, and I've searched online for this topic for a while still have no clue."
15551004,2,0,0,java.util.HashMap,There are 2 ways 1) this.map = Collections.unmodifiableMap(map); 2) defensive copying: this.map = new HashMap(map);
15550704,1,0,0,java.util.HashMap,"Inside this application, I read a data from files into some nested classes, which are basically a nut-shell around HashMap."
15550857,2,0,0,java.util.HashMap,"Its bettr, then making synronization around ordinary HashMap."
15558467,2,0,0,java.util.HashMap,This is done in Java by adding the Serializable interface to your class declaration - however you do not need to do this for HashMap as it is already Serializeable.
15558467,2,0,0,java.util.HashMap,(You only have to do this for classes you have written that are stored in the HashMap.)
15560490,2,1,1,java.util.HashMap,"creating an Collection of this class, say, ArrayList<DiabloGoldRow>, or if you want to be able quickly get information based  on the td1 String, a HashMap<String, DiabloGoldRow>."
15560490,2,1,1,java.util.HashMap,"Then using JSoup to isolate the information in the table, and then iterate through it in a for loop, creating instances of DiabloGoldRow objects and putting them into the ArrayList or other collection (i.e., HashMap)."
15568483,2,1,0,java.util.HashMap,You can setup history as a HashMap or separate class to make this easier.
15568483,2,1,0,java.util.HashMap,"Then create a HashMap to quickly fill history, and convert it into a TreeSet to sort: code."
15567221,1,0,0,java.util.HashMap,"If I wrap Key and Value in WeakReference and then add into HashMap, printed size is different than expected."
15569088,1,0,2,java.util.HashMap,Concurrent Modification Exception in HashMap.
15571372,2,0,2,java.util.HashMap,"you can do one more thing if possible, i have download menu that creates runtime so i have add HashMap and in that HashMap added names.get(i) and download link so it looks like  code."
15573661,1,0,1,java.util.HashMap,"To my understanding I am getting all the keys in the HashMap (strings) and then I am doing a for loop over the keys, and deleting them from the hashmap (getting the object back which I will delete)."
15574047,2,1,1,java.util.HashMap,If you want to delete from a HashMap you need to delete with the help of the iterator.
15576009,1,0,3,java.util.HashMap,How to make HashMap work with Arrays as key?
15576009,1,0,3,java.util.HashMap,I am using boolean arrays as keys for a HashMap.
15576009,1,0,3,java.util.HashMap,"But the problem is HashMap fails to get the keys when a different array is passed as key, although the elements are same."
15576009,1,0,3,java.util.HashMap,"Both the arrays a and t contain the same elements, but HashMap doesn't return anything for t.  How do I make it work ?"
15578395,2,1,1,java.util.HashMap,If Zone and Camera are itself class then You could use HashMap as follows: code.
15578305,2,0,1,java.util.HashMap,Use a HashMap where the keys are the Zones and the values are a List of the Cameras.
15578305,2,0,1,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
15578307,2,0,1,java.util.HashMap,"You can create a HashMap of Lists, with the key being Zone."
15578307,2,0,1,java.util.HashMap,"HashMap<Zone, List<Camera>>"
18597696,2,0,5,java.util.HashMap,"For example, ArrayListMultimap<K, V> is backed by HashMap<K, ArrayList<V>> and HashMultimap<K, V> is backed by HashMap<K, HashSet<V>>."
18597696,2,0,5,java.util.HashMap,UnifiedMap uses half the memory of HashMap and UnifiedSet uses a quarter the memory of HashSet.
15579863,1,0,0,java.util.HashMap,Advantages of using a HashSet over HashMap.
15579863,1,0,0,java.util.HashMap,According to JavaDoc API a HashSet is just a wrapper around a HashMap.
15579863,1,0,0,java.util.HashMap,Therefore can there ever be any performance benefit to using a HashSet over a HashMap.
15580045,2,0,1,java.util.HashMap,"About Hashset in API documentation This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
15580045,2,0,1,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
15584513,2,1,2,java.util.HashMap,But in general a better way to do what you want is to use HashMap implementation of multi set for example.
15584513,2,1,2,java.util.HashMap,"Your current solution is O(n^2), while the HashMap one is very close to O(N)."
15585680,1,0,1,java.util.HashMap,populated HashMap created inside a Constructor returns null when instance object is referenced.
15585680,1,0,1,java.util.HashMap,I have one class where I create a HashMap inside of a Constructor (code below): import java.util.HashMap; import java.util.ArrayList; class Hippie extends Customer { code. }
15585680,1,0,1,java.util.HashMap,"Unfortunately, when I create an instance of the ""Hippie"" object above, any reference to the HashMap in the instance object returns null even though the Constructor completes successfully."
15585680,1,0,1,java.util.HashMap,"For example, the above code prints out: null Hippie My ultimate goal is to be able to access the HashMap created by the Hippie constructor."
15585680,1,0,1,java.util.HashMap,Any insights as to why it is returning null instead of HashMap would be greatly appreciated.
15585710,2,0,1,java.util.HashMap,You are creating a local reference to the HashMap As a result.
15588099,2,0,4,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
15591319,1,0,0,java.util.HashMap,"Iterating over a HashMap, two ways: iterating with entry set & iterating with enumeration."
15591319,1,0,0,java.util.HashMap,"So, my main question is - should we iterate over a HashMap by setting a iterator over the entrySet method (please see my iteratorEntrySet function), is this the only right way to do it?"
15592077,2,0,2,java.util.HashMap,The toString() version of the HashMap or any map class creates a string with [] in them.
15594048,1,0,1,java.util.HashMap,While reading the source code for HashMap class I've noticed that they use (line 149)  code.
15594921,1,0,1,java.util.HashMap,"I only did this exercise to learn, I know that HashMap is a better & faster implementation."
15673052,2,0,1,java.util.HashMap,It makes more sense to use a java.util.Map / HashMap in this case.
15601924,1,0,2,java.util.HashMap,I'm actually trying to add an array list to the first Integer in HashMap So I am trying something like: code.
15601976,2,0,5,java.util.HashMap,"only creates the ""outer"" HashMap instance."
15601976,2,0,5,java.util.HashMap,"After this statement you have an empty HashMap that takes Strings as keys and HashMap<Integer, Integer> as value."
15601976,2,0,5,java.util.HashMap,"You can add an instance of HashMap<Integer, Integer> to data with this: code."
15601976,2,0,5,java.util.HashMap,After that you can add Integer values to the second HashMap: code.
15606394,2,1,1,java.util.HashMap,"In your case I would rather use the following data structure that maps a phone number to a list of words HashMap<String, List<String>> phoneNumbersMap = new HashMap<String, List<String>>(); Reference for HashMap is here http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html It will also make retrieving the words much faster if your list grows in the future!"
15606394,2,1,1,java.util.HashMap,To add data to the HashMap you can do: code.
15607964,2,0,1,java.util.HashMap,Instead of creating new HashMap hashItems = new HashMap(); you can use code.
15622204,2,0,0,java.util.HashMap,The data structure that you want is a HashMap.
15622204,2,0,0,java.util.HashMap,It might be better if you made the HashMap static like this code.
15622204,2,0,0,java.util.HashMap,When you declare the variable static this makes it so that you don't have to instantiate an object to access the HashMap.
15622204,2,0,0,java.util.HashMap,"or     AccountClass.accountHash.put(); If you want to add things to your HashMap, you need to use the put method."
15622915,1,0,0,java.util.HashMap,HashMap.put isn't working as expected.
15622915,1,0,0,java.util.HashMap,I'm trying to save a HashMap in another hashmap.
15622915,1,0,0,java.util.HashMap,It's like HashMap doesnt work...
15626280,1,0,4,java.util.HashMap,Java - Initialize a HashMap of HashMaps.
15626280,1,0,4,java.util.HashMap,"I am still new to object instantiation, and wonder what to do to initialize a HashMap of HashMaps."
15626280,1,0,4,java.util.HashMap,"When inserting new observations into the classifier, I can create a new HashMap for an unseen feature name in a given class, but do I need to initialize?"
15626383,2,0,2,java.util.HashMap,Do not declare your variables with HashMap.
15626383,2,0,2,java.util.HashMap,"private Map< String, Integer> classCounts = new HashMap<>(); private Map< String, Map< String, Integer>> classFeatureCounts = new HashMap<>();  The compiler will deduce the types from the <>."
15629663,1,0,0,java.util.HashMap,Using HashMap object in Dynamic Jasper report.
15631050,2,0,1,java.util.HashMap,How about using a HashMap and use long keys and boolean values.
15632405,2,1,3,java.util.HashMap,"If you have performance problem, it's quite unlikely that the issue is due to the HashMap/HashTable."
15632637,1,0,0,java.util.HashMap,My app crashes with the exception if there are spaces in the JSONArray's object this is the Array from a HashMap: code.
15638400,1,0,1,java.util.HashMap,My class Listenable records all Listeners in a HashMap: code.
15639020,2,0,1,java.util.HashMap,"Depending on your specific needs, the outer/inner data structure can be changed to HashMap/HashSet respectively."
15644791,1,0,0,java.util.HashMap,Android - How to save HashMap to a file and load it.
15644791,1,0,0,java.util.HashMap,I want to save a HashMap (I'll call it 'map' or 'hm') to a file on the android device the application is running on.
15644791,1,0,0,java.util.HashMap,"I wanted to write two methods, to save and load the HashMap, and both of the methods should be in the 'util' class."
15644791,1,0,0,java.util.HashMap,"In the main class I wrote several methods to load the HashMap, put something in it, and save it again."
15644791,1,0,0,java.util.HashMap,In summary: I want to save and load a HashMap to / from a file which I want to create on the internal storage.
15646672,2,0,3,java.util.HashMap,"Or if you want to have get return an Integer, then just use a Hashtable<String, Integer>, or even better, use a HashMap<String, Integer>."
15647437,1,0,2,java.util.HashMap,Just trying to get my head around the workings of Java HashMap by looking at the code.
15647703,2,1,2,java.util.HashMap,Java's version is HashMap.
15650520,2,0,0,java.util.HashMap,"HashMap<int, Foo> is not valid, you need to use HashMap<Integer, Foo> Base on the way HashMap work, key should have a meaningful implementation of hashCode() and equals()."
15653183,2,1,5,java.util.HashMap,"UPDATE: I changed _dict to _dict = new HashMap<String, Double>(); So it will have a String key and a Double value."
15660473,1,0,1,java.util.HashMap,Sorting HashMap values in Java not giving back right order.
15660473,1,0,1,java.util.HashMap,"But if I try it with this: Map<String, Integer> scores = ((HashMap<String, Integer>) prefs.get()); I get that wierd order."
15666798,2,0,0,java.util.HashMap,"If your are allowed to have O(m + n) additional space used during computation, you can keep a HashMap for each array."
15740391,2,0,1,java.util.HashMap,For Java you can use a DataStructure like HashMap where you can save the link texts as the Key later you can use Collection.sort to sort this DataStructure with the attribute/ column you want.
15674300,1,0,2,java.util.HashMap,Equate two HashMap based on certain keys only.
15674433,2,0,1,java.util.HashMap,One method I can think of is to store some sort of a 'compressed label' on your HashMap that gets updated everytime a new item is added / existing item is modified / deleted.
15674433,2,0,1,java.util.HashMap,"If all your HashMap items can be transformed intro a String, you can try MD5 hash all the concatenation of the string maybe?"
15674433,2,0,1,java.util.HashMap,Ofcourse doing this has the drawback of added burden of having to calculate the the 'compressed label' each time you modify the HashMap elements.
15677503,1,0,1,java.util.HashMap,I upgraded to 2.5 and I can't no longer pass a HashMap.
15677503,1,0,1,java.util.HashMap,Parameters class extends HashMap code.
15678984,1,0,0,java.util.HashMap,"Should I use a HashMap of locks (HashMap<Long,Object>) ?"
15680450,2,0,0,java.util.HashMap,It's optimized HashMap like class for holding and inserting such values.
15681717,2,0,2,java.util.HashMap,You must override public boolean equals(Object other) (notice Object instead of Point) if you wish the HashMap to use your implementation.
15684381,2,0,0,java.util.HashMap,"So, implementations of the Map interface (HashMap etc.)"
15684822,1,0,5,java.util.HashMap,"With later experimentation, I found that any object (not just HashMap) would be instantiated, but no fields would be filled in."
15685514,1,0,0,java.util.HashMap,Iterate bean stored in HashMap using EL.
15685514,1,0,0,java.util.HashMap,I have a bean which I'm filling and setting in a HashMap in the servlet: code.
15691573,2,1,1,java.util.HashMap,"Can't you create your HashMap outside FileExtensionModel, where it is visible to the FileFilter and pass it to the constructor of `FileExtensionModel?"
15691573,2,1,1,java.util.HashMap,"UPDATE Or you can create a HashMap of FileFilters, with the extension being the key."
15693991,2,0,2,java.util.HashMap,Sounds like you want a HashMap.
15694070,2,0,1,java.util.HashMap,Essentially you instantiate a HashMap that has two parts to it; a Key and a Value (respectively.
15694698,2,0,1,java.util.HashMap,Java has built-in support; please see the HashMap class.
15694731,2,0,0,java.util.HashMap,"(Hint: HashSet, HashMap, Hashtable.)"
15694739,2,0,0,java.util.HashMap,If you need to lookup by key then use HashMap; if you don't and are happy with indexed access then use ArrrayList.
15697959,2,0,2,java.util.HashMap,HashSet internally uses HashMap.
15702725,1,0,0,java.util.HashMap,"In the implementation of HashMap, linked lists are used to represent elements in buckets."
15702942,2,1,2,java.util.HashMap,Entry (internal class of HashMap) is not a part of general-use linked list (as LinkedList is).
15766990,2,0,0,java.util.HashMap,"This by the way will not prevent the user to hack your code altering the hidden values of orePerCommessa.numeroGiorno; if it is important to preserve them from user manipulation, put them in session once read from database, then show them in JSP (with <s:property/>), but do not post them (don't put the <s:hidden />), then while posting back the page, retrieve them from session and match them in some way (for example you could use an HashMap with them as value, and store a counter as keys in the JSP)... that way the user can just mess with the keys, not with the values."
15712883,1,0,1,java.util.HashMap,"I earlier needed to sort a HashMap by its values, and I used the comparator with the collections, like so: code."
15712883,1,0,1,java.util.HashMap,"Now the situation changed, and I needed it to be a HashMap that was sorted."
18674705,2,0,0,java.util.HashMap,"Using an HashMap, you'll count the pairs of words-POS and succeeding POS-POS occuring in the development part."
15716388,2,0,1,java.util.HashMap,"Why don't you use a HashMap<String,String> with morseCode as key and the translation as value?"
15728931,2,0,0,java.util.HashMap,You should use HashMap and ConcurrentHashMap (thread safe) unless you are studying archeology.
15726529,2,0,0,java.util.HashMap,What I could see methods of the Hashtable class are synchronized where as HashMap methods are not.
15726529,2,0,0,java.util.HashMap,For Reference  Hashtable HashMap
15727102,1,0,1,java.util.HashMap,Trying to create a HashMap after reading data from file.
15727102,1,0,1,java.util.HashMap,"I am trying to read from a file to create a HashMap<String, HashMap<String, Integer>>."
15728653,1,0,0,java.util.HashMap,"I've got a HashMap<Integer, String> which at runtime contains 4036 indexed 4-letter words."
15728653,1,0,0,java.util.HashMap,"In the same class, I also have a method random() which will randomly select a word from said HashMap."
15729367,1,0,2,java.util.HashMap,How to make thread-safe HashMap without locking `get()` method?
15729367,1,0,2,java.util.HashMap,I asked on interview a question: how to implement getter and setter for exclusive writing to HashMap and non-exclusive reading.
15732592,2,0,2,java.util.HashMap,You can use a map (HashMap<String>) and initialize it with the values of the high-freq words.
15732749,2,1,1,java.util.HashMap,As for ConcurrentHashMap one of the important additions of the API vs. a standard HashMap are a few atomic methods such as putIfAbsent.
15732749,2,1,1,java.util.HashMap,Another example is how you check if a key is in a HashMap (and you need the return value): code.
15731821,2,0,0,java.util.HashMap,"HashMap is newer, and has more advanced capabilities, which are   basically just an improvement on the Hashtable functionality."
15731821,2,0,0,java.util.HashMap,"As such,   when HashMap was created, it was specifically designed to handle null   values as keys and handles them as a special case."
15734881,2,1,0,java.util.HashMap,"From How to iterate an Arraylist inside a HashMap using jstl?, you're using the wrong syntax to access the current entry values of your map."
15736124,2,1,1,java.util.HashMap,"You right in that List isn't a best fit here, you need HashMap instead, since all you do is adding new clients and searching for clients, and order in which clients are stored in collection isn't important (even if it's important, it's better to use some ordered Map, like TreeMap, to improve performance)."
15736678,2,1,4,java.util.HashMap,"The Map can be a HashMap, and the word category would be the key while the List (an ArrayList in the concrete form) would be the related value."
15737244,1,0,6,java.util.HashMap,"byteCache is a HashMap<String, byte[]> clazz is a Class<?>  byteCache is a HashMap<String, byte[]> and clazz is a Class<?> code."
15737953,2,0,0,java.util.HashMap,"Change ArrayList<HashMap<String, String>> songsList to ArrayList<HashMap<String, List<String>>> songsList and add each value to list and put it to the map."
15738257,2,0,0,java.util.HashMap,Please follow this steps  Create a HashMap object put value in hashmap object add hashmap to arraylist   Perform this steps for each item.
15738705,2,0,1,java.util.HashMap,"Either change your map declaration to HashMap<String, String> or enclose your String into a List<String> and give it to the method."
15741946,1,0,0,java.util.HashMap,"Above B is again class member of class A.  I want to get fields of type String and their's values and if field is class If field is Class again, then get fields and values , for example, map property is of type HashMap class type then I need both key and value properties which are of String type."
15755892,2,0,1,java.util.HashMap,I would use a HashMap.
15748158,2,0,3,java.util.HashMap,"Use a Multiset to replace the HashMap, and you're good to go, following @Perception's suggestion to encapsulate the Multiset in the Function itself and aggregating data as the function is applied."
15748904,2,0,1,java.util.HashMap,String Pool implementation is decided at compile time by the compiler.StringPool is implemented by HashMap .
15751258,2,1,4,java.util.HashMap,If the HashMap is truly immutable/read-only then a volatile Map<...> is the way to go.
15751719,1,0,0,java.util.HashMap,NPE on Putting Key/Value in HashMap.
15751719,1,0,0,java.util.HashMap,"I have a simple Hashmap public HashMap<String,String> StoreDet;."
15751946,1,0,0,java.util.HashMap,"In Java, lets say I have a HashMap of Strings which map to Doubles."
15751946,1,0,0,java.util.HashMap,Is there a way to do exactly this in Java using a HashMap?
15752806,2,1,1,java.util.HashMap,"Yes, you can serialize HashMap objects since the class already implements the Serializable interface."
15752806,2,1,1,java.util.HashMap,"From the HashMap documentation:  public class HashMap extends AbstractMap implements Map, Cloneable, Serializable  Note that your Clan class must implement the Serializable interface in order to be serialized as well."
15752848,2,0,1,java.util.HashMap,"Sure you can, because HashMap is serializable."
15752902,2,0,2,java.util.HashMap,A HashMap itself implements Serializable so you could serialize the entire HashMap if both keys and values are serializable.
15752902,2,0,2,java.util.HashMap,"The key can be any object, but must implement both equals(..) and hashCode() methods so that the key can be identified in the HashMap."
15752902,2,0,2,java.util.HashMap,Creating the HashMap as follows (using Java 1.5 or greater): code.
15753734,2,0,1,java.util.HashMap,Essentially you can't atomically release a lock and remove it from the HashMap without adding a new lock to the system.
15753734,2,0,1,java.util.HashMap,"Alternatively if you had access to the HashMap's internals you could try some tricky bucket lock exposure to your higher level logic, though I would not recommend trying to implement such a thing."
15753734,2,0,1,java.util.HashMap,In this case you actually don't need a HashMap as you could pre-allocate the Integer lock objects into a static const array and request the mod hash directly from the id objects.
15756940,1,0,23,java.util.HashMap,Guava ImmutableMap has noticably slower access than HashMap.
15756940,1,0,23,java.util.HashMap,"Thinking this would be an improvement, I threw it into the mix and was surprised to discover that not only was it slower than HashMap, in a single-threaded environment it appears to be consistently slower even than ConcurrentHashMap!"
15756940,1,0,23,java.util.HashMap,"And running this against a HashMap, a ConcurrentHashMap, and an ImmutableMap, all containing the same values, consistently showed a dramatic slowdown when using ImmutableMap - often upwards of 15% slower."
15844384,2,0,0,java.util.HashMap,"And have a look at the get() implementation of both maps: com.google.common.collect.RegularImmutableMap.get(Object) java.util.HashMap.getEntry(Object) java.util.HashMap tries to compare with ""=="" first."
16303438,2,0,7,java.util.HashMap,I think the main difference is here: HashMap: code.
16303438,2,0,7,java.util.HashMap,"As you can see, to check for collisions, HashMap first check the hashes."
16303438,2,0,7,java.util.HashMap,"Since String doesn't make this check in its equals method, this makes HashMap faster."
15758709,1,0,0,java.util.HashMap,Java: Object as Value in HashMap being overwritten?
15760133,2,0,0,java.util.HashMap,"For my tests, it gave performance results as good as a HashMap In fact any Key Value store can be used."
15764847,1,0,1,java.util.HashMap,How to access a HashMap or ArrayList from any part of the application?
15764847,1,0,1,java.util.HashMap,"Every time I load certain values from database, a HashMap is loaded with certain keys and values from the database, how do I make this HashMap available to all the other classes without having to load the values repeatedly into the HashMap each time it is called: This is the class which contains method where HashMap is loaded: code."
15768695,1,0,8,java.util.HashMap,HashMap uses LinkedList internally.
15768695,1,0,8,java.util.HashMap,"What I knew is, if you want to get a object from HashMap, first of all it searches the hash bucket based on hashcode/hash value and then iterates through the LinkedList in that hashbucket(suppose the diff objects have same hash code, thus in the same hash bucket)."
15774041,2,0,0,java.util.HashMap,"If you were to use this way, I´d suggest having someone inject the HashMap so that Car doesn´t have to depend on the CarActions (just the abstract class), either use a class to that or Guice."
15773922,2,0,0,java.util.HashMap,This look like homework so I'll give some brief pointers  You can split a string into characters with toCharArray You can iterate over an array with for each You can store values in an HashMap
15775164,1,0,1,java.util.HashMap,I have created subclasses of XOM Element and would like to use them with Containers such as Set or HashMap.
16188252,2,1,1,java.util.HashMap,"All XOM nodes have equals methods and hashCode methods, as do all Java objects, use them with Containers such as Set or HashMap."
15777337,2,0,0,java.util.HashMap,"Since Java 5 if you're using collections without type specifiers (e.g., HashMap() instead of HashMap())."
15777350,2,0,0,java.util.HashMap,"In this case, you didn't add the type-checking for your HashMap  Check the link below for how Generics work."
15789954,1,0,2,java.util.HashMap,Samples:  Screenshot PDF in Adobe Reader  Same PDF in Mac Preview This is what I do in code:   Create PDDocument Create HashMap of PDJpegs (for caching purpose):   Create PDJpegs by BufferedImage initialised through ImageIO.read()  Resize PDJpegs by calling setHeight() and setWidth() on PDJpegs Adding PDJpeg to HashMap  Create PDPage and add it to PDDocument  Create PDPageContentStream  Draw some PDJpegs on the PDPage  Close PDPageContentStream  Save PDDocument  Close PDDocument  Method for resizing the PDJpegs:  code.
15790228,2,0,0,java.util.HashMap,To read doubles from a file: Reading double values from a file Then store the values you read in a HashMap of doubles.
15794224,1,0,3,java.util.HashMap,In my Java class I include a  Hashmap variable (class property) and run some Threads which write-only into that HashMap using put(): each time the write happens it  stores a unique key (which is done by design).
15794224,1,0,3,java.util.HashMap,My HashMap is simple and not a ConcurrentHashMap?
15794767,1,0,1,java.util.HashMap,How does HashMap determine where to put things?
15794767,1,0,1,java.util.HashMap,How does the add method in HashMap determine where a key goes in a HashMap?
15794767,1,0,1,java.util.HashMap,"Like, if I was trying to put ""S"",""T"",""A"",""C"",""K"" into the HashMap  of size 10, how does it determine where each letter goes?"
15794876,2,0,4,java.util.HashMap,"Note there is no such thing as a java.util.HashMap of size 10, the size must be a power of 2 so that the bits can be masked to choose a bucket."
15794876,2,0,4,java.util.HashMap,"If you pass 10 to the constructor, you will get a HashMap with 16 buckets back."
15797446,1,0,2,java.util.HashMap,Each set will contain random numbers: 1-9 I need to create a Map (HashMap or TreeMap) that has Strings for keys and sets for the values.
15798030,1,0,0,java.util.HashMap,I'm using a native query for updating a value of a certain key in a HashMap annotated with @ElementCollection.
15798030,1,0,0,java.util.HashMap,After the query is executed the complete entity that contains the HashMap will be retrivied with EntityManager.find(...).
15798030,1,0,0,java.util.HashMap,"The problem is, the HashMap in the retrieved entity still contains the old value."
15798030,1,0,0,java.util.HashMap,How can I get the entity with the updated HashMap?
15808017,1,0,1,java.util.HashMap,I want to pass the dict to py4j and it should be received as HashMap on JAVA side.
15810594,2,1,1,java.util.HashMap,There are two ways to do what you want:  You can create a java.util.HashMap() and use it as a dict on the python side.
15810594,2,1,1,java.util.HashMap,Py4J can automatically convert a python dict to a HashMap when calling a Java method.
15810627,2,0,1,java.util.HashMap,"The HashMap has an internal array of Entry that when no other size is specified, defaults to 16."
15810442,2,0,2,java.util.HashMap,Straight from the javadoc:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
15837991,2,0,0,java.util.HashMap,"I use a Singleton class as suggested by Simon, creating the HashMap and the Set only once."
15817443,1,0,0,java.util.HashMap,And I have a HashMap for storing already visited URLs.
15826649,2,0,0,java.util.HashMap,"Loop through the first ResultSet and Store them in a HashMap<String , Object>  where use column1 as the Key and the put all the remaining columns in a Bean object."
15826649,2,0,0,java.util.HashMap,After that iterare through the second resultSet and check whether column1 exists in the HashMap or not by just doing a lookup.
15830345,1,0,1,java.util.HashMap,"The problem is that I don't know how to access the variables inside the class ""Files"" inside the HashMap ""files""."
15830345,1,0,1,java.util.HashMap,"I know there is: .getKey().getClass() but I still haven't been able to load the multidimensional array with the values of the class ""Files"" inside the HashMap."
15831131,2,0,0,java.util.HashMap,You can get the keys of a HashMap using HashMap.keySet() method.
15831131,2,0,0,java.util.HashMap,"This will return a Set of the key objects, which you have stored in your HashMap."
15831131,2,0,0,java.util.HashMap,NOTE: Its always better to use a class which overrides equals() method & which is immutable  to use as HashMap key.
15831131,2,0,0,java.util.HashMap,"Overriding equals() will avoid keys being overwritten incase of Hash collision, and making a class immutable doesn't make the value associated with the key orphan (since the key will not change once its created) So I suggest using HashMap<String, Files> instead of HashMap<Files,String> if you feel making Files class immutable breaks its purpose."
15831615,1,0,0,java.util.HashMap,"I created an HashMap<String, String> that i populated beforehand."
15831615,1,0,0,java.util.HashMap,"And i want my AutoCompleteTextView to tell me, as i'm typing if it's in the HashMap or not."
15832225,2,1,0,java.util.HashMap,"I've changed it to text = s.toString(); I think it's because i put my HashMap in < String, String > and not CharSequence."
15833987,1,0,6,java.util.HashMap,"Similar declarations can be found on HashMap, LinkedHashMap declarations also."
15833987,1,0,6,java.util.HashMap,"In the declaration of LinkedHashMap, it implements Map interface only and not the other interfaces implemented by its superclass HashMap."
15861053,2,0,2,java.util.HashMap,"Now you can put these values in a HashMap together with index + 1 as the page number if you want to know which physical page corresponds with the page label ""2""."
15837256,2,0,0,java.util.HashMap,"Assuming your JList contains usernames, you could put your usernames in a HashMap  code."
15839598,2,0,2,java.util.HashMap,There is a huge performance overhead related to the HashMap resize.
15839598,2,0,2,java.util.HashMap,"When you create new HashMap with no-arg constructor, its size is by default 16."
15839598,2,0,2,java.util.HashMap,"If you know your HashMap will store a lot of keys, you can create it with size of, for instance, 200,000."
15841754,1,0,4,java.util.HashMap,I have a java program that needs to iterate through a HashMap to get a parameters that are then used to query the MySQL database.
15843811,2,0,0,java.util.HashMap,"Maybe use a HashMap, I am not completely familiar with Java it appears to be the similar to a Dictionary in Python."
15844035,1,0,8,java.util.HashMap,Best HashMap initial capacity while indexing a List.
15844035,1,0,8,java.util.HashMap,"I have a list (List<T> list) and I want to index its objects by their ids using a map (HashMap<Integer, T> map)."
15844035,1,0,8,java.util.HashMap,I always use list.size() as the initial capacity in the HashMap constructor (like in the code below).
15844138,2,0,4,java.util.HashMap,"reference: source From the newHashMapWithExpectedSize documentation:  Creates a HashMap instance, with a high enough ""initial capacity"" that   it should hold expectedSize elements without growth."
15844179,2,0,2,java.util.HashMap,"According to the reference documentation of java.util.HashMap:  The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations."
15844179,2,0,2,java.util.HashMap,"This means, if you know in advance, how many entries the HashMap should store, you can prevent rehashing by choosing an appropriate initial capacity and load factor."
15844179,2,0,2,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
15844186,2,1,11,java.util.HashMap,"If you wish to avoid rehashing the HashMap, and you know that no other elements will be placed into the HashMap, then you must take into account the load factor as well as the initial capacity."
15844186,2,1,11,java.util.HashMap,The load factor for a HashMap defaults to 0.75.
15844186,2,1,11,java.util.HashMap,"EDIT Looking at the HashMap source code, it will rehash if the old size meets or exceeds the threshold, so it won't rehash on the last put."
15844186,2,1,11,java.util.HashMap,Here's the relevant piece of HashMap source code: code.
28708768,2,0,3,java.util.HashMap,"By default the 'load factor' of a HashMap is 0.75, this means that when the  number of entries in a HashMap reaches 75% of the capacity supplied, it will resize the array and rehash."
15845079,1,0,0,java.util.HashMap,How to write HashMap iterator?
15850412,2,0,0,java.util.HashMap,"searching by name is time consuming after all Load all the data into a HashMap<Long, Author> : because it is faster to check the HashMap with all of the Authors in it, than checking the database every time."
15850480,1,0,0,java.util.HashMap,"Yet I am not able to load the variables from the class ""Files"" of HashMap into the JTable."
15859318,2,0,2,java.util.HashMap,Then you can populate the values in a HashMap.
15859581,2,1,3,java.util.HashMap,A quality implementation (Hashtable/HashMap) will resize itself automatically as the number of elements increases.
15860955,2,1,3,java.util.HashMap,What about saving a HashMap that maps a string from the array to the actual object?
15861227,1,0,2,java.util.HashMap,"If  try to compare this with HashMap, then it has a constructor which accepts initialCapacity: code."
15861227,1,0,2,java.util.HashMap,So clearly there is a difference in the way size of internal array is managed in HashMap and IdentityHashMap.
15861642,2,1,1,java.util.HashMap,So clearly there is a difference in the way size of internal array is managed in HashMap and IdentityHashMap.
15861642,2,1,1,java.util.HashMap,"If you look carefully at the respective code for HashMap and IdentityHashMap the initial sizing and resizing code is different, but the logic is basically the same."
15861642,2,1,1,java.util.HashMap,"In the HashMap case, the material had to be there so that the programmer knew what the constructor parameters meant."
15861493,2,0,1,java.util.HashMap,"IdentityHashMap dates from JDK1.4, whereas HashMap dates from JDK1.2."
15866513,2,1,1,java.util.HashMap,"I would recommend you use something like a HashMap<String,Member>, where each member has an identifiable unique key (a username for instance)."
15866513,2,1,1,java.util.HashMap,You can use a HashMap like so: code.
15863054,1,0,0,java.util.HashMap,I have serialized a HashMap into a file using objectstream and fileoutputstream.
15863054,1,0,0,java.util.HashMap,It is a very huge HashMap with around 150 million entries.
15863054,1,0,0,java.util.HashMap,Is there a recommended way to read a serialized HashMap so that it loads quickly from the file?
15867731,2,0,0,java.util.HashMap,This method is supported for   the benefit of hash tables such as those provided by HashMap.
15870014,1,0,0,java.util.HashMap,I am trying to make the method selectVMwareServer return a VMwareServer object when the key is is present in the HashMap.
15873887,2,0,1,java.util.HashMap,-try using memory mapped file in java for faster access to the large file -and instead of ArrayList use a HashMap collection where the key is the actor's name (or the hash code) this will improve a lot the speed since the look-up of a key in a HashMap is very fast
15874677,1,0,3,java.util.HashMap,HashMap return method.
15874677,1,0,3,java.util.HashMap,"I have a method in a class, which initialize a HashMap and put some keys and values inside it, then the method returns the HashMap."
15874677,1,0,3,java.util.HashMap,How can I retrieve the returned HashMap?
15874677,1,0,3,java.util.HashMap,The point is to retrive returned HashMap somehow.
15874904,2,0,4,java.util.HashMap,"Almost as Rich said in his answer, but your method returns a Map which cannot be cast to a HashMap."
15874904,2,0,4,java.util.HashMap,Or alternatively change your getSensorValue method so that it returns a HashMap
15874788,2,0,0,java.util.HashMap,HashMap sensValues = new HashMap();  Set mapSet = (Set) sensValues.entrySet(); Iterator mapIterator = mapSet.iterator(); code.
15878423,1,0,0,java.util.HashMap,"I have a hashMap instance : Map<Marker,Tag> theHashMap = new HashMap<Marker,Tag>(); where tag is a class that holds some simple information about the marker and the marker is a Google map marker."
15878512,2,1,1,java.util.HashMap,EDIT: In HashMap your key is mapper object(custom object).
15878512,2,1,1,java.util.HashMap,As custom object(Mapper object) is key in HashMap we have to override equals and hashcode in Mapper class to fetch exact value.
15883188,2,0,0,java.util.HashMap,"As has been suggested, you probably want to use a HashMap for performance"
15883205,2,0,0,java.util.HashMap,"However, I think you are looking for a map, possibly a HashMap."
15884589,2,1,0,java.util.HashMap,So the in the form class this field will be: private HashMap waypoints; And there is the difference in JSP forEach: code.
15886310,2,0,0,java.util.HashMap,"If so, then create a static HashMap in your main class along with a public static put method."
15886310,2,0,0,java.util.HashMap,"Then whenever you create a thread t1, call Main.putThreadId(t1.getId(), ""some text that identifies the method that's creating the thread""), and when you catch an exception look up the value in the HashMap."
15885891,1,0,2,java.util.HashMap,Is there an easy (and not hardhitting on performance) way to implement a threadsafe HashMap without adding synchronized all over my code (and probably introducing more bugs this way)?
15888185,2,0,0,java.util.HashMap,For example using Jackson JSON you can create HashMap json string like this code.
15888750,2,0,0,java.util.HashMap,"Jersey takes care of the rest, for some reason while you are debugging, most of the entries appear as null in the HashMap"
15892971,1,0,0,java.util.HashMap,This single converter takes in my ENTIRE configuration which is a HashMap at its root and the value of each key is an new instance of VMwareServer class which in turn has a HashMap where the value of key is a new instance of VMwareVirtualMachine class.
15893555,2,0,0,java.util.HashMap,"For each column, make a HashMap<int, int>."
15893555,2,0,0,java.util.HashMap,"If it has not been added yet, add it with value 1 Make an ArrayList<HashMap<int, int>> to contain one of these for each column."
15893555,2,0,0,java.util.HashMap,"You could also keep a HashMap<int, int> that counts how many times an element has appeared globally."
15893555,2,0,0,java.util.HashMap,"That way, if you want to preserve the property that every element has a count for every column, even if its count is 0 for that column, you can use this global HashMap to go through and add the keys in every column's HashMap that don't exist yet."
15893555,2,0,0,java.util.HashMap,"HashMap is a data structure that allows you to associate a value with every key, and you can add as many entries as you like unlike an array, and the entries don't have to have keys that are successive integers."
15893555,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
15894749,2,1,1,java.util.HashMap,"When you use a Multy key map, a single lookup will be done in the underlying HashMap while if you go with using a Map with Map values you will have to perform at least two lookups to find the element you are looking for."
15897263,2,1,1,java.util.HashMap,"put those Items to the one of arrays type implemented in JComboBox API put those arrays to the Tree, util.List or HashMap (depends of tree depth) with logics for gradual changes in linked rest of JComboBox(es)  add ItemListener, ActionListener to all JComboBoxes for example"
15897214,1,0,0,java.util.HashMap,"I have a query String which receive as January, February, March I would like to split the string by comma and would put the String in HashMap, so that when I retrieve I would like to get and do a null check the String as January, February, March  How can I do this?"
15942636,2,0,1,java.util.HashMap,"I would do a command object which contain a version property, an Id property and a HashMap or Hashtable to hold all different types of arguments that you may become."
15901375,1,0,0,java.util.HashMap,"I create a HashMap, with the key being the character and the value being another HashMap."
15904091,1,0,0,java.util.HashMap,How to typecast a HashMap to a WeakHashMap?
15904147,2,0,0,java.util.HashMap,HashMap isn't a WeakHashMap so you cant cast one to the other.
15904147,2,0,0,java.util.HashMap,"However, you can return WeakHashMap in your loadProperties method, or convert the HashMap to a WeakHashMap manually."
15904176,2,1,6,java.util.HashMap,It doesn't work because a HashMap simply is not a WeakHashMap.
15904202,2,0,0,java.util.HashMap,"HashMap and WeakHashMap are different Map implementations, and as such you can't cast one to the other."
15904202,2,0,0,java.util.HashMap,"If you want to turn HashMap into a WeakHashMap then you'll need to create a new WeakHashMap, then iterate through your HashMap and add all of its key-value pairs to the WeakHashMap."
15916508,1,0,1,java.util.HashMap,"This is my 3rd year of Java and I don't know the underlying data structures used in HashMap, nor the Big O notation of either implementation."
15916508,1,0,1,java.util.HashMap,"Perhaps someone who knows the Java standard could describe what kind of data structures or implementations are used in HashMap vs (Primitive data type)[], and what the differences in run times might be in a ONE-TIME-ONLY sort of the structures."
15920170,1,0,1,java.util.HashMap,I have a vector with HashMap elements.
15921795,2,0,0,java.util.HashMap,You really need to override these methods when you try to use these objects as a key for HashMap.
15921829,2,0,2,java.util.HashMap,"Putting objects in a HashMap Testing for equality indirectly, e.g."
15923090,2,0,1,java.util.HashMap,you can get Postion of  ListSelectedItemId  and passed it with Intentand get it in SecondActivity now Here get FirstActivity HashMap with define it static now use foreachloop to get all values from  HashMap   like code.
15932753,1,0,1,java.util.HashMap,"In JAVA, I have a HashMap with ""Player"" objects as Keys, and ""ArrayList"" as values."
15932780,2,0,1,java.util.HashMap,"Since HashMap already has the list, you just get the reference not remove it, so its not required to add it again."
15932781,2,0,1,java.util.HashMap,Any change that you make to an object in the Map is immediately reflected in the Object returned by HashMap#get as they are the same Object.
15932812,2,0,1,java.util.HashMap,"In your case, a is the ArrayList reference retrieved from the HashMap with a get method, and b is the ArrayList reference in the HashMap."
15935110,1,0,0,java.util.HashMap,What type is a HashMap bucket.
15935110,1,0,0,java.util.HashMap,I've been digging into the HashMap implementation in Java.
15935185,2,0,5,java.util.HashMap,"Since it doesn't have to let users access the buckets through the API, HashMap gets reduced memory usage and a simpler implementation by just rolling its own very small linked list implementation internally."
15937327,1,0,0,java.util.HashMap,"For example map looks like this:  key 1 -> value 1    key 2 -> value 2    key 3 -> value 3    key 4 -> value 4  I may need to move i-th pair to j-th position, dependent on user action:  key 1 -> value 1  key 4 -> value 4 [j]   key 3 -> value 3   key 2 -> value 2 [i]  I have an idea to combine LinkedList and HashMap and synchronize insertions and removals between them."
15943309,1,0,3,java.util.HashMap,How to treat keys of HashMap as optional in java.
15948597,1,0,0,java.util.HashMap,HashMap a function which contains ArrayList.
15949887,1,0,2,java.util.HashMap,I can create the gson object without a problem but then when attempting to call gson.toJson(jsonObj) I'm getting the following error:   HTTP JVM: java.lang.SecurityException: not allowed to access members   in class class java.util.HashMap HTTP JVM:  at   lotus.notes.AgentSecurityManager.checkMemberAccess(Unknown Source) HTTP JVM:  at java.lang.Class.checkMemberAccess(Class.java:112) HTTP JVM:  at java.lang.Class.getDeclaredConstructor(Class.java:419)  The code: code.
15954854,1,0,0,java.util.HashMap,"I have tried various other approaches including putting a HashMap in the Customer class, in place of the KeyValuePair class."
15956133,2,0,3,java.util.HashMap,"Consider using a Map from the collections API, such as a HashMap or LinkedHashMap."
16051769,2,1,2,java.util.HashMap,You're using it as if it were a HashMap & not doing any thread group management.
16051769,2,1,2,java.util.HashMap,"If code stays like this, you may replace 'ThreadGroup' with 'HashMap'."
16051769,2,1,2,java.util.HashMap,"However, even the HashMap seems excessive - could simply pass Threads references to other Threads using constructors/setters and avoid HashMap altogether."
15961580,1,0,0,java.util.HashMap,For example: http://localhost:8080/register/<someusername> would add  to an ArrayList/HashMap/etc that can be accessed by http://localhost:8080/list which would list the registered users.
15962851,2,0,1,java.util.HashMap,"Under what circumstances would you have an object that could be an ArrayList<String>, a Vector<Integer> and a LinkedList<HashMap> at different times?"
15965402,2,1,6,java.util.HashMap,See: Differences between HashMap and Hashtable?
15968357,2,0,20,java.util.HashMap,"While the Map on the outer left hand side of the assignment can ""become"" a HashMap as assigned, the same cannot be applied to any types that appear as generic parameters."
15968467,2,0,3,java.util.HashMap,"Map<String, Integer> is not same as HashMap<String, Integer>."
15968467,2,0,3,java.util.HashMap,Actually HashMap implements Map interface.
15969162,1,0,1,java.util.HashMap,Return Value of put() in HashMap: Java.
15969162,1,0,1,java.util.HashMap,I was having trouble understanding the explanation for return value of put() in a HashMap code.
15969725,2,0,11,java.util.HashMap,You can use gson library like this to convert above JSON string to HashMap: code.
15973602,2,1,11,java.util.HashMap,"a HashMap<String, JLabel>)."
15973896,1,0,5,java.util.HashMap,"I am following a tutorial and it basically explains about the cause of race condition which happens when resizing Hashmap in a multithreaded environment:  In Java, if two thread at the same time found that now HashMap needs resizing and they     both try to resizing."
15973896,1,0,5,java.util.HashMap,"on the process of resizing of HashMap in Java , the element in bucket which is stored in linked list get reversed in order during their migration to new bucket because java HashMap  doesn't append the new element at tail instead it append new element at head to avoid tail traversing."
15974194,2,0,0,java.util.HashMap,"HashMap's contract clear states (emphasis theirs):  If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally."
15974215,2,1,1,java.util.HashMap,"Anyway, as I mentioned in my comment by design, it is not supposed to use HashMap in a multithreaded environment."
15977663,2,0,7,java.util.HashMap,"The answer for your first question is in the quoted text:  ""because java HashMap doesn't append the new element at tail instead it append new element at head to avoid tail traversing""  If HashMap would store them in insertion order it had to traverse the list at each insertion or store an extra pointer to the end of the list (and maintain it)."
15976487,1,0,3,java.util.HashMap,Binding HashMap to ComboBox.
15976487,1,0,3,java.util.HashMap,Does anybody have an example of how to binding the keys of a HashMap to a ComboBox so that the changes in the HashMap are instantly reflected to the ComboBox?
15976669,2,1,3,java.util.HashMap,I don't think that you'd want to use a HashMap since the model of a JComboBox needs to be ordered and a HashMap is not ordered.
15978026,1,0,3,java.util.HashMap,"When we create our own classes, I read that we want to override hashCode() so that when we insert them into a hash related collection like HashMap() it will work properly."
15984284,1,0,0,java.util.HashMap,"When I step through the Load function I get to ""temp = (HashMap) ois.readObject();"" Before this line is executed I am able to see the HashMap's data that I've written with oos in the expressions window of Eclipse so I know the data is there, however when this line executes I'm jumped to the IOException catch with an EOF."
15987648,2,1,14,java.util.HashMap,The URL class is unsuitable for use in a HashSet or as keys in a HashMap.
15992563,2,0,2,java.util.HashMap,This will attempt to print out the HashMap object.
15992563,2,0,2,java.util.HashMap,"In the same vain as your Employee class, HashMap does not override it's toString method, so it simply prints out the objects reference in memory."
15994256,1,0,2,java.util.HashMap,Randomization using hash() method in Java HashMap.
15994256,1,0,2,java.util.HashMap,"In the HashMap implementation in Java, after computing the hash value of the key object, I guess that the function, hash(int hashvalue), is used on it to further randomize the hash values generated."
15996164,1,0,0,java.util.HashMap,HashMap value auto increment.
15996164,1,0,0,java.util.HashMap,"when I was coding, one question occurred to me, which is if the value part(Integer) in the HashMap is able to auto-increment in the following scenario?"
15996186,2,0,2,java.util.HashMap,"You can write a custom class AutoIncrementHashMap which internally uses a HashMap, have an auto incrementing variable count and a put(String) method which adds a String member and increments the counter every time."
15996234,2,0,3,java.util.HashMap,"Even if you use mutable counters as the value of the HashMap, the code is still very cumbersome."
15998078,2,0,1,java.util.HashMap,If you want to reserve the original value you can use HashMap or TDoubleDoubleHashMap where the key is the rounded value and the value is the original.
15999406,1,0,0,java.util.HashMap,i got 4 items in HashMap and want to get them stored in an array.
16000214,1,0,0,java.util.HashMap,Thread Server-Client ( HashMap+Sockets+MultiThreads).
16000214,1,0,0,java.util.HashMap,I thoguht I put all Client Thread in HashMap .
16004952,2,0,0,java.util.HashMap,"Failure to do this will cause HashMap, et al, to fail."
16007603,1,0,5,java.util.HashMap,This is how I have implemented  the Trie using HashMap in Java Now please tell me how to write code for printing all words stored in Trie.
16007904,2,0,0,java.util.HashMap,"(Specifically, the value type of HashMap<Character,HashMap> excludes some of the generics you'd rather it used.)"
16007904,2,0,0,java.util.HashMap,"You might try refactoring your code to use the type HashMap<Character,TrieNode> instead."
16007904,2,0,0,java.util.HashMap,"Also, this definitely isn't the most efficient implementation, especially since we create a bunch of HashSet objects in computeWords(HashMap,String), but it should work!"
16007904,2,0,0,java.util.HashMap,EDIT: This code also assumes that you terminate words with an empty HashMap.
16009250,1,0,0,java.util.HashMap,Sorting HashMap with integers as Strings.
16011855,1,0,0,java.util.HashMap,Straightforward way to create and access databases for: (List and HashMap) in java.
16011967,2,0,0,java.util.HashMap,"You could make your own implementation by extending HashMap class and adding the methods you need:  persist() , loads into the db the current records from the HashMap retrieve(int limit) , retrieves from the db the records with a limit  etc."
16013334,2,1,1,java.util.HashMap,"Or else create a custom EL function and call it like ${someTag:format(requestScope.myBean, myMap)} There may be better way but you can do something like this : <jsp:useBean id=""myMap"" class=""java.util.HashMap"" scope=""request""/> <c:set target=""${myMap}"" property=""base_url"" value=""${some_url_value_in_scope}""/>"
16014256,1,0,0,java.util.HashMap,BirtEngineDesktop.java: import java.io.File; import   java.io.FileInputStream; import java.util.HashMap; import   java.util.logging.Level; import   org.eclipse.birt.core.exception.BirtException; import   org.eclipse.birt.core.framework.Platform; import   org.eclipse.birt.report.engine.api.
16016170,2,0,1,java.util.HashMap,"Then have a map using this class: Map<Integer, Row> rows = new HashMap<Integer,Row>()."
16016485,1,0,6,java.util.HashMap,I've seen some Java codes in which the rows in database table are being held in a collections (usually ArrayList or HashMap).
16019692,2,0,0,java.util.HashMap,"For example, you can use HashMap, array of array (or list of lists if you really like list...) I will give an example using list maybe, since you seem using it... (although I think this is a bit odd) Say, you have a list holding the people on the left."
16019692,2,0,0,java.util.HashMap,of the left column (now you may see why an array/HashMap is better...) by doing something like: code.
16026239,2,0,1,java.util.HashMap,Neither HashMap nor FuzzySet is &'ing on a power of 2 precisely - they are using an integer of the form 2^n - 1.
16027421,2,0,3,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
16029395,2,0,0,java.util.HashMap,"If space is not an issue, why not just use a HashMap?"
16031376,2,0,0,java.util.HashMap,In that case use HashSet Or else if you have 2 parallel ArrayList then you can use HashMap
16032437,1,0,1,java.util.HashMap,"Are there generic workarounds (such as wrappers, delegates, subclassing HashMap, etc.)"
16035224,2,1,1,java.util.HashMap,"It is worth reading the javadocs to get a better understanding of how the Map, TreeMap and HashMap APIs work.)"
16036770,2,0,1,java.util.HashMap,If you do you should be using a HashMap (or you could use two ArrayLists if you find that easier).
16035688,1,0,0,java.util.HashMap,"I already tried [the unmashalling Template of Docx4j][1],  which worked fine with the given docx, but then I got the same Problem when I tried it on my own template The Exceptions say, that the HashMap doesnt contain valid keys or values, and therefore it doesnt replace the placeholders."
16036869,1,0,0,java.util.HashMap,"The method below (generateID())it generate a random  ids, And when i store students in the HashMap i want to check if the generated id is not exist in the hashMap value and if its exists I want to generate a new id and then store it, The problem with the method store sometimes it does not store all the student because some student might have the same id and this is not allowed, So what is the best why to check that all ids are uniqe and if there is duplication the method generateid will be called again util all the ids are uniqe and then it will store it, I want to  ensure that the ids values produced by generateId() are all different code."
16037908,1,0,4,java.util.HashMap,How can I instantiate an object of HashMap to this Map?
16043177,1,0,0,java.util.HashMap,Creating a HashMap with ArrayLists.
16043177,1,0,0,java.util.HashMap,"Now, I made the following structure: I'm using the HashMap keys as the name of the CoWorkers and the value is always the CoWorkers ArryList which contains his or her jobs of course."
16043782,1,0,0,java.util.HashMap,"Now I'm starting to work with Java Hibernate and want to know if there is something similar, maybe using a HashMap or another collection."
16047800,2,0,0,java.util.HashMap,You should consider using HashMap instead of Hashtable in non-threaded applications for better performance.
16047958,2,0,0,java.util.HashMap,I think you have the HashMap backwards.
16047958,2,0,0,java.util.HashMap,"So you want HashMap<Integer, String>;"
16051736,2,0,1,java.util.HashMap,NOTE: Its best to avoid Hashtable and Use HashMap instead
16051880,2,0,1,java.util.HashMap,"I'm taking a punt, and guessing that you mean HashMap, and that the reason you don't have a HashMap API is that you are using Java ME."
16051949,2,0,0,java.util.HashMap,"3) Now, to see if a key exists in the HashMap, compute where we would have put it and check that index."
16056215,1,0,1,java.util.HashMap,"I can store each hashmap from List<HashMap<Integer, int[]>> dataArray1 in separate file."
16069140,2,0,1,java.util.HashMap,"For example, imagine that you have a HashMap whose keys are of type Person."
16069140,2,0,1,java.util.HashMap,Some of the collections that use hashCode()  HashSet  LinkedHashSet  HashMap  Have a look at those two classes from apache commons that will allow you to implement equals() and hashCode() easily  EqualsBuilder  HashCodeBuilder
16069727,2,1,3,java.util.HashMap,You can wrap HashMap with your own extension.
16070194,1,0,0,java.util.HashMap,I have an existing HashMap that looks like this: code.
16070194,1,0,0,java.util.HashMap,I need to transform this HashMap into something that will allow me to do this in Mustache: code.
16070194,1,0,0,java.util.HashMap,"I've tried with HashMap, Set, and Tree but it's not coming up."
16070864,2,1,0,java.util.HashMap,"Otherwise, you can sort them on their element names and then do an element-by-element comparison (this is nlog(n) if you use a good sort algorithm), or else put everything in a HashMap with the element name as key and value as value."
16072182,1,0,1,java.util.HashMap,Binding HashMap to MutableTreeNode.
16075069,1,0,1,java.util.HashMap,"That gives me {h1={test1=1}, h2={test2=2}} Thus the big HashMap contains data of both HashMaps."
16075069,1,0,1,java.util.HashMap,"So the question is did it simply copy the data of smaller HashMaps, or do both ""t"" HashMaps stay in JVM memory, and HashMap m simply links me to them?"
16075109,2,0,0,java.util.HashMap,HashMap m will contains object reference of your first created hashmap against h1 and second  hashmap's reference aginst h2.
16075182,2,0,1,java.util.HashMap,Your big HashMap contains a reference to both HashMaps.
16075182,2,0,1,java.util.HashMap,What you've done is changed what HashMap t is pointing too.
16075182,2,0,1,java.util.HashMap,"at this point both t and m have references to the same HashMap, meaning any change to one will appear in the other."
16075182,2,0,1,java.util.HashMap,Now when you go t = new HashMap<>() you are actually reassigning the reference that t points to code.
16075184,2,0,0,java.util.HashMap,Both HashMap will stay in memory.
16079439,1,0,0,java.util.HashMap,In search of some guidance regarding HashMap.
16079439,1,0,0,java.util.HashMap,"HashMap has the correct values in the correct locations when I print it out from inside the insert method in Sudokucontainer, (with a for(int i = 0 i < dim; i++) + for(int j = 0; j < dim; j++)) followed by Square[][] tmp = solutionsHash.get(count) and System.out.println(tmp[i][j].getValue());."
16080869,1,0,2,java.util.HashMap,That's the code trying to get all of the elements and put them in a HashMap: code.
16084157,2,0,6,java.util.HashMap,"No, this is incorrect:  hashmap, which will sort by the value  HashMap does not order by keys."
16084170,2,0,1,java.util.HashMap,HashMap is never sorted.
16084172,2,0,1,java.util.HashMap,"HashMap does not sort anything, It inserts elements into based on hascode and equals method of the elements."
16084199,2,0,1,java.util.HashMap,HashMap does not maintain order.
16086385,1,0,3,java.util.HashMap,Pass a HashMap over SOAP using JAXB.
16086385,1,0,3,java.util.HashMap,And I have created a wrapper class for my HashMap since Hashmap itself cannot be passed over the line.
16086385,1,0,3,java.util.HashMap,Below is the code: Here is my wrapper class for the HashMap code.
16090576,1,0,0,java.util.HashMap,NPE in my own graph class using HashMap.
16090576,1,0,0,java.util.HashMap,We're supposed to write a program handling graphs with the help of a HashMap.
16090576,1,0,0,java.util.HashMap,Since our code structure (the code we started with) has a static size for the HashMap I get a NPE if I make a graph for 5 nodes and only add 3 of them.
16094515,2,1,2,java.util.HashMap,"Or, the best way IMHO, would be to use a HashMap Example: code."
16096342,2,0,1,java.util.HashMap,"HashMap is a popular implementation of ""Map"" in which the map keys (the usernames) have unique hashcodes."
16096838,1,0,0,java.util.HashMap,"I think it is explained in this part  Even if the two instances happen to hash to the same bucket, the get   method will almost certainly return null, as HashMap has an   optimization that caches the hash code associated with each entry and   doesn’t bother checking for object equality if the hash codes don’t   match."
16096838,1,0,0,java.util.HashMap,"Also, I already did my home work, and found a related question Influence of HashMap optimization that caches the hash code associated with each entry to its get method But I'm not that satisfied with the answer accepted, also, the answerer says in the comment that   A hash code can be an arbitrary int, thus each hash code can't have   its own bucket."
16096939,2,0,2,java.util.HashMap,Take a look at how java.util.HashMap calcualates a bucket number for a key by hashCode code.
16096939,2,0,2,java.util.HashMap,"If bucket #0 (table[0]) is empty (null) then the new entry will be placed directly there, otherwise HashMap will find the last entry in the chain and set the last entry's next = new entry"
16102861,2,0,0,java.util.HashMap,"Depending on the size of your list, and the frequency with which this code is executed, the custom-iterate-till-you-find-a-match method you are trying might be ok, but if frequent lookups are expected, you may want to try one if these approaches:  Instead of a list, create a HashMap of customer Id as Key and the corresponding User object as the value."
16102801,1,0,0,java.util.HashMap,I have two beans and one of them has HashMap collection.
16104811,2,0,0,java.util.HashMap,The problem might come from your session HashMap.
16104811,2,0,0,java.util.HashMap,"Since your HashMap is not typed, anything could be inserted as key and your clear() function will not remove it."
16104811,2,0,0,java.util.HashMap,Why not calling clear() on the HashMap?
16104811,2,0,0,java.util.HashMap,I suggest using EnumMap or at least HashMap and make your getClientSessionInstance() function private.
16104612,2,0,1,java.util.HashMap,Here is my solution with Set and HashMap structures.
16107006,2,0,1,java.util.HashMap,"use Map, (HashMap or LinkedHashMap) instead of LinkedList, key is the studentId, value is the studentObject."
16108734,1,0,2,java.util.HashMap,Convert Set> to HashMap.
16108734,1,0,2,java.util.HashMap,"Now I want to recreate the same map form, so I want to convert the HashSet<Map.Entry<K, V>> back into a HashMap<K, V>."
16108889,2,1,8,java.util.HashMap,"There is no inbuilt API in java for direct conversion between HashSet and HashMap, you need to iterate through set and using Entry fill in map."
16108922,2,0,1,java.util.HashMap,"Your getName() method should return a String, not a HashMap; you'll need to concatenate the name and number before returning them, e.g."
16112352,1,0,1,java.util.HashMap,"So I am working on a Java project, and one of my classes uses inner nested classes (the TypesOfQuestions) and when I try to add a question from the inner class to the HashMap, it doesn't let me, and I'm not sure why."
16120501,2,0,1,java.util.HashMap,"Here is a  link for  map, HashMap, ConcurrentHashMAP"
16123348,2,0,3,java.util.HashMap,"That is possible in theory, but only if the HashMap is updated by another thread without proper synchronization."
16123348,2,0,3,java.util.HashMap,"(You would need to do a detailed analysis of the HashMap class to determine if this is actually possible / likely, but if two threads are reading and writing a HashMap simultaneously without proper synchronization, then the hash chains could get corrupted, leading to an infinite loop when the get call tries to search a corrupted chain.)"
16125454,2,0,1,java.util.HashMap,"You can use a HashMap<City, HashSet<City>> structure where the key is a city object and it points to a set of its adjacent cities."
16127785,2,0,1,java.util.HashMap,"For instance, if you use a HashMap with your above example your keys could be the following strings: ""1,1,1"",""2,1,1"",""3,1,1"" This would make a lookup instant and easy."
16126445,2,0,3,java.util.HashMap,Use a HashMap to hold the counts/frequency of individual characters.
16126445,2,0,3,java.util.HashMap,"Traverse through your list and for each element do:  if the element is not present in the HashMap, insert it with the frequency 1 if the element is present in the HashMap, increase the frequency by 1."
16126445,2,0,3,java.util.HashMap,"At the end, printing the key/value pairs of the HashMap will give you the desired output."
16128059,2,0,3,java.util.HashMap,Why don't you use a HashMap?
16128059,2,0,3,java.util.HashMap,This is exactly what HashMap does.
16128059,2,0,3,java.util.HashMap,"A good link to start off: http://tutorialswithexamples.com/java-map-and-hashmap-tutorial-with-examples/ Make your Dog class with dogName, legs, beenFed, other attributes.. Next, define a HashMap<String,Dog> with key being as dogName and Dog being the entire Dog object with all attributes."
16128659,2,0,1,java.util.HashMap,"@trama If you are interested, here is the implementation using HashMap."
16130660,2,1,1,java.util.HashMap,What you need is a HashMap of ArrayLists.
16130660,2,1,1,java.util.HashMap,HashMap creates key-value pairs.
16132984,2,1,0,java.util.HashMap,"Maybe you shoud simple store your objects in an HashMap<key,value>  you put an object in it as value with a key."
16133039,1,0,1,java.util.HashMap,How to display HashMap data in GUI?
16133039,1,0,1,java.util.HashMap,"I have a HashMap<String, String> representing a date (the key), and an amount (the value)."
16133039,1,0,1,java.util.HashMap,I began by using an ArrayList and adding a new JLabel to it for each new key & value that was added to the HashMap.
16133039,1,0,1,java.util.HashMap,Is there a way of displaying information from the HashMap in GUI?
16138886,2,0,1,java.util.HashMap,You do not need to create a HashMap in this case.
16136944,1,0,0,java.util.HashMap,UDP Server HashMap iteration of clients.
16136944,1,0,0,java.util.HashMap,The server stores a record of clients in a HashMap.
16137972,1,0,0,java.util.HashMap,... .SubClass sp; - so I can have an associative HashMap with OpCodes and Comands and just grab the ones that were not confirmed with a success message and re-send them.
16142621,2,0,0,java.util.HashMap,"They are predefined , no need to create any class for that.You can use HashMap,HashTable,etc."
16142431,2,0,5,java.util.HashMap,"You can use a HashMap<String, String> as your flexible object: every key (fieldname) refers to a field value."
16142431,2,0,5,java.util.HashMap,"For every type (Address, Person) add a HashMap, and for keeping trac of the type-hashmaps, well use a HashMap<String, HashMap<String, String>> :) This works a bit like javascript objects which are in effect associative arrays."
16146348,2,0,0,java.util.HashMap,"If you still want to use the arrays then the add() method of HashMap returns true if the value did not exist in the current set so if true then add to the table, if false then don't."
16148575,1,0,41,java.util.HashMap,HashMap and int as key.
16148575,1,0,41,java.util.HashMap,I am trying to build a HashMap which will have integer as keys and objects as values.
16149127,2,0,2,java.util.HashMap,You can't use a primitive because HashMap use object internally for the key.
16149127,2,0,2,java.util.HashMap,That is the function put() in HashMap and as you can see it uses Object for K: code.
16148647,2,0,1,java.util.HashMap,"Please use  HashMap<Integer, myObject> myMap = new HashMap<Integer, myObject>();"
16149160,2,0,2,java.util.HashMap,HashMap does not allow primitive data types as arguments.
16151947,2,0,2,java.util.HashMap,first consider simple HashMap and how locking works with it.
16151947,2,0,2,java.util.HashMap,consider you have HashMap m now you run below loop to insert in that hashmap m code.
16151947,2,0,2,java.util.HashMap,"now at a time only one process can do such operation as only one lock is being used to lock entire map m. now consider concurrentHashMap  cmap instead of HashMap m. cmap has 10 lock and it has been used to lock part of map for example lock1 will lock key entries 1 to 10 and lock2 will lock key entries 11 to 20 now in such case 10 process can do operation at a time if those 10 operation are in different buckets for example process 1 want to do cmap.put(1,OBject2); so during this process is on.. process 2 can do cmap.put(12,Object3); as both process use diff lock lock1 and lock2 and lock1 locks only first bucket (1 to 10),  lock2  lock only second bucket (11,20)"
16152786,2,1,0,java.util.HashMap,"Instead of displaying tag names, you can put them to HashMap and display them after all file is parsed, you'll not get duplicates then."
16152596,1,0,0,java.util.HashMap,http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.putForNullKey%28java.lang.Object%29
16152673,2,1,3,java.util.HashMap,From the Javadoc for HashMap: code.
16152673,2,1,3,java.util.HashMap,"As to why it has the putNullKey, well HashMap relies on the hashCode() of a key to place it, and, since, it can't get the hashCode() from a null value, it has to do it as a special case."
16152712,2,0,1,java.util.HashMap,It's one of the difference between an Hashtable and a HashMap.
16152712,2,0,1,java.util.HashMap,HashMap allows one null key and any number of null values.
16152731,2,0,0,java.util.HashMap,HashMap allows only one null key.
16155313,2,1,9,java.util.HashMap,A HashMap uses hashcode and equals for comparison.
16158194,1,0,0,java.util.HashMap,I'm not sure if it's retrieving the data from the HashMap and inserting into the rows correctly.
16158194,1,0,0,java.util.HashMap,All the System.out.println() work as expected which print out the HashMap.
16162453,1,0,3,java.util.HashMap,"When using a HashMap, how much does the object type matter for element retrieval when it comes to speed?"
16162855,2,0,0,java.util.HashMap,Are you trying to retrieve values from the HashMap via the get method or by iterating over it?
16162855,2,0,0,java.util.HashMap,"If you are iterating over a HashMap via the entrySet method, the type of the keys in your HashMap doesn't matter."
16164949,1,0,4,java.util.HashMap,Debugging HashMap shows a recursive entrySet?
16164949,1,0,4,java.util.HashMap,"I am using an HashMap<String,Serializable> and while debugging I see the following recursively."
16165189,2,0,5,java.util.HashMap,"HashMap$EntrySet is a inner class, it has an explicit reference called this$0 to the HashMap."
16165189,2,0,5,java.util.HashMap,"And the HashMap has a field private transient Set<Map.Entry<K,V>> entrySet which refers to it."
16165079,2,0,5,java.util.HashMap,The HashMap instance has a field entrySet with the type HashMap$EntrySet.
16165079,2,0,5,java.util.HashMap,"Since the EntrySet class is an inner class of HashMap, it has an implicit reference to the containing instance (this$0)."
16165079,2,0,5,java.util.HashMap,This is normal and required for the EntrySet instance to access the containing HashMap instance.
16165375,2,0,0,java.util.HashMap,HashSet internally uses HashMap.
16169097,2,0,0,java.util.HashMap,Maybe you could use a HashMap of HashMap ?
16169097,2,0,0,java.util.HashMap,The first HashMap to use your string keys and the second one to your tuples.
16171271,1,0,0,java.util.HashMap,"How would I replace the arrayList with a HashMap where the keys would be ""relativeStartTime"" and the value would be the next int?"
23758136,2,0,0,java.util.HashMap,Use TreeMap or HashMap.
16174722,1,0,4,java.util.HashMap,"I have a Java HashMap that I have in JRuby, I am trying to convert it to JSON, but its not converting correctly, I think this example shows the problem: code."
16190511,2,1,3,java.util.HashMap,"Currently, it seems you're right and the json gem doesn't support HashMap, so the only way is indeed to convert to ruby: code."
16177308,2,0,1,java.util.HashMap,"This means that if the return type of the method in super class is Map, then the return type of the same method can be HashMap."
16177842,1,0,2,java.util.HashMap,But this switch sits in a piece of code where performance is all-important so I came up with the question of how a HashMap lookup and handler call compares to a switch block execution performance-wise.
16177863,2,0,3,java.util.HashMap,"I'm pretty sure that the internal representation of a switch uses some kind of lookup table that would have similar structure to a HashMap, so my guess is that any differences are negligable."
16177883,1,0,0,java.util.HashMap,I need to take both of these elements and store them in a HashMap (I think??)
16178646,2,1,0,java.util.HashMap,"The problem is, you are using the same HashMap again and again."
16178646,2,1,0,java.util.HashMap,"So when the time you show it on the screen(after onPostExecute), the all views will show the last formalName and userName, because all HashMap added on your list are saving the same last one only(they are actually the one same HashMap)."
16178646,2,1,0,java.util.HashMap,I suggest you to make new HashMap for each time you add it on the fillMaps.
16179870,1,0,0,java.util.HashMap,"Program 1: Step 1 - Read all words from file O(n), n is the size of the wordlist  Step 2 - Loop through the characters of each word and manipulate them (I won't go into details what this does, its just a loop)- O(m) where m is the number of characters in the word  Step 3 - Insert into a HashMap O(1) Total - O(n + m) Program 2: Step 1 - Pass in word to program Step 2 - Look up word in hashmap - O(1) Step 3 - Loop through the characters of each word and manipulate them O(m), where m is the number of characters in the word Step 4 - Enter word into a function - I calculated this to be O(2^m), where m is the number of characters in the word Step 5 - Lookup word again in hashmap O(1) code."
16181179,2,0,2,java.util.HashMap,To avoid this you should use the entrySet() as the implementation is inherited from java.util.HashMap and therefore the iterator doesn't check the modification flags: code.
16183825,1,0,1,java.util.HashMap,I'm trying to create a HashMap for a dataset that has 4400 records and 27000 features.
16185005,1,0,1,java.util.HashMap,"And the data is stored like below in HashMap (as objects, i am mentioning name for explanation) code."
16185091,2,0,0,java.util.HashMap,There is no need of HashMap.You can have User contained in Location class as it suits your requirement perfectly.
16188281,2,1,4,java.util.HashMap,"just use a HashMap<String,Object> ,  you can define all your variables in there, for example: code."
16189285,2,0,1,java.util.HashMap,There are many implementations available for example HashMap.
16189312,2,0,0,java.util.HashMap,"Map has no constructor, its an interface, you can use a HashMap<ClassType1,Object> or TreeMap<ClassType1,Object>"
16189369,2,0,0,java.util.HashMap,"You have to use HashMap, TreeMap or any class who implements the interface."
16191035,2,0,1,java.util.HashMap,It happens because that is the way that HashMap is designed to work.
16191037,2,0,3,java.util.HashMap,LinkedHashMap instead of HashMap is precisely what you're looking for.
16191037,2,0,3,java.util.HashMap,"From the Javadoc: HashMap ""class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."""
16192020,2,0,1,java.util.HashMap,"Then you add this functionality to it:  A private HashMap<String, B> index All mutator methods of ArrayList are overridden to keep this index hash map updated in addition to calling the corresponding super-method."
16191918,2,0,0,java.util.HashMap,Replace the List with a HashMap.
16192176,2,1,5,java.util.HashMap,"If you need both to keep the order (list behaviour) and access individual items using a key, you can use a LinkedHashMap, which essentially joins the behaviour of a LinkedList and a HashMap."
16192594,1,0,0,java.util.HashMap,"Right now I have a nested HashMap that looks something like this: HashMap<String,HashMap<ArrayList<Type>,Object>> Where the first key, String, contains the name of the function."
16195754,1,0,2,java.util.HashMap,Populate class properties from HashMap.
16195754,1,0,2,java.util.HashMap,I want to convert items in a HashMap to properties of a class.
16200955,1,0,0,java.util.HashMap,The getData() used there looks like this:     public HashMap getData() {         return data;     } The class being instantiated is: code.
16200999,2,1,2,java.util.HashMap,But you want a HashMap as parameter: code.
16203026,1,0,1,java.util.HashMap,About Java HashMap sources.
16203026,1,0,1,java.util.HashMap,"So, we have a HashMap, and a transient Entry[] table inside it."
16203918,2,0,1,java.util.HashMap,Use a HashMap to assign an i-relative width to every letter.
16203918,2,0,1,java.util.HashMap,"Then, as you get the message, iterate over every letter, and accumulate values for the consecutive letters from the HashMap."
16204199,2,1,0,java.util.HashMap,HashMap API found here  This would be the start of your code code.
16207391,2,1,0,java.util.HashMap,"While there are several more-or-less minor issues with your code, I suspect the main problem is that your HashMap has keys of type StringBuilder instead of String."
16207391,2,1,0,java.util.HashMap,HashMap uses the hashCode() function of the key object to determine if it is already in the map or not.
16207391,2,1,0,java.util.HashMap,"To fix that, you will want to make the key type of your HashMap be String instead of StringBuilder."
16205603,2,0,0,java.util.HashMap,2) Use HashMap.
16205530,2,0,0,java.util.HashMap,"In other words, iteration over a Hashtable is no safer than iteration over an unsynchronized HashMap."
16211936,2,1,3,java.util.HashMap,"And when you break it down, it is declaring and instantiating an anonymous subclass of HashMap which uses an instance initializer block to populate the new map."
16216638,2,1,1,java.util.HashMap,I suggest using an ordinary HashMap.
16216769,2,0,0,java.util.HashMap,I'd also go with either a HashMap or a TreeMap (depending on whether you need a deterministic Iterator or not).
16216867,1,0,1,java.util.HashMap,Java statically defined dictionary / HashMap.
16216867,1,0,1,java.util.HashMap,I have seen this question: How to give the static value to HashMap?
16219936,1,0,4,java.util.HashMap,Are there any advantages between List and HashMap .
16219936,1,0,4,java.util.HashMap,"(only one of the values will be set per property) Option 2 Use HashMap<String, Object> and parse the type on each case."
16219936,1,0,4,java.util.HashMap,"Have the good thing that you can get the Property by name Option 3 Use HashMap<String, Property> Where the String is the name of the property and you can get the value with the name and no need to parse."
16219936,1,0,4,java.util.HashMap,or if none of them are good i would like to hear other ideas Also is there any performance difference between the List and the HashMap?
16220056,2,0,1,java.util.HashMap,Considering that you are storing properties I am expecting that you would be querying this list quite often which again points in the direction of a HashMap as that would make your lookup very efficient.
16220089,2,0,1,java.util.HashMap,"If you might have to get a particular property, say by name, then a HashMap could help."
16228028,2,0,0,java.util.HashMap,"I'd use a HashMap for example with the name as key and ""something"" as value."
16228805,2,0,0,java.util.HashMap,I'm going to assume that you start with a HashMap that looks like the first example and want to get a second hashmap that looks like the second example.
16228320,2,0,0,java.util.HashMap,HashMap is unordered by definition.
16236164,1,0,1,java.util.HashMap,Here is the stacktrace:  2013-05-07T10:44:32.441+02:00     java.lang.RuntimeException: com.ibm.xsp.FacesExceptionEx: java.lang.OutOfMemoryError     at com.ibm.designer.runtime.domino.adapter.ComponentModule.initModule(ComponentModule.java:433)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.initModule(NSFComponentModule.java:427)     at com.ibm.domino.xsp.module.nsf.NSFService.loadModule(NSFService.java:561)     at com.ibm.domino.xsp.module.nsf.NSFService.doServiceInternal(NSFService.java:521)     at com.ibm.domino.xsp.module.nsf.NSFService.doService(NSFService.java:342)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.doService(LCDEnvironment.java:304)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.service(LCDEnvironment.java:261)     at com.ibm.domino.xsp.bridge.http.engine.XspCmdManager.service(XspCmdManager.java:291)     Caused by: com.ibm.xsp.FacesExceptionEx: java.lang.OutOfMemoryError     at com.ibm.xsp.config.CLBootStrap.initContext(CLBootStrap.java:73)     at com.ibm.xsp.config.BootStrap.init(BootStrap.java:60)     at com.ibm.xsp.config.ConfigureCoreListener.contextInitialized(ConfigureCoreListener.java:58)     at com.ibm.designer.runtime.domino.adapter.ComponentModule.initModule(ComponentModule.java:425)     ... 7 more     Caused by: java.lang.OutOfMemoryError     at java.util.Hashtable.newEntry(Hashtable.java:91)     at java.util.Hashtable.put(Hashtable.java:766)     at java.util.PropertyPermissionCollection.add(PropertyPermissionCollection.java:40)     at java.security.Permissions.add(Permissions.java:98)     at org.apache.harmony.security.fortress.PolicyUtils.toPermissionCollection(PolicyUtils.java:541)     at org.apache.harmony.security.fortress.DefaultPolicy.getPermissions(DefaultPolicy.java:242)     at org.apache.harmony.security.fortress.DefaultPolicy.implies(DefaultPolicy.java:365)     at java.security.ProtectionDomain.implies(ProtectionDomain.java:159)     at java.security.AccessController.checkPermission(AccessController.java:98)     at java.lang.SecurityManager.checkPermission(SecurityManager.java:533)     at org.eclipse.osgi.framework.internal.core.Framework.checkAdminPermission(Framework.java:1299)     at org.eclipse.osgi.framework.internal.core.BundleHost.getResource(BundleHost.java:266)     at com.ibm.domino.xsp.module.nsf.Activator.findResource(Activator.java:84)     at com.ibm.domino.xsp.module.nsf.Activator.findResource(Activator.java:103)     at com.ibm.domino.xsp.module.nsf.Activator.findResource(Activator.java:103)     at com.ibm.domino.xsp.module.nsf.Activator.findResource(Activator.java:67)     at com.ibm.domino.xsp.module.nsf.NotesClientClassLoader.getResource(NotesClientClassLoader.java:130)     at java.lang.ClassLoader.getResource(ClassLoader.java:438)     at com.ibm.domino.xsp.module.nsf.ModuleClassLoader.getResource(ModuleClassLoader.java:117)     at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:503)     at javax.xml.parsers.SecuritySupport$4.run(Unknown Source)     at java.security.AccessController.doPrivileged(AccessController.java:202)     at javax.xml.parsers.SecuritySupport.getResourceAsStream(Unknown Source)     at javax.xml.parsers.FactoryFinder.findJarServiceProvider(Unknown Source)     at javax.xml.parsers.FactoryFinder.find(Unknown Source)     at javax.xml.parsers.SAXParserFactory.newInstance(Unknown Source)     at org.apache.commons.digester.Digester.getFactory(Digester.java:512)     at org.apache.commons.digester.Digester.getParser(Digester.java:686)     at org.apache.commons.digester.Digester.getXMLReader(Digester.java:902)     at org.apache.commons.digester.Digester.parse(Digester.java:1548)     at com.sun.faces.config.ConfigureListener.parse(ConfigureListener.java:1229)     at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:328)     at com.ibm.xsp.config.CLBootStrap.initContext(CLBootStrap.java:65)     ... 10 more     2013-05-07T10:44:33.879+02:00     java.lang.OutOfMemoryError     at java.util.HashMap.newElementArray(HashMap.java:282)     at java.util.HashMap.rehash(HashMap.java:686)     at java.util.HashMap.rehash(HashMap.java:730)     at java.util.HashMap.putImpl(HashMap.java:611)     at java.util.HashMap.put(HashMap.java:605)     at com.ibm.domino.xsp.module.nsf.RuntimeFileSystem.refresh(RuntimeFileSystem.java:269)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.initNSFData(NSFComponentModule.java:565)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.doInitModule(NSFComponentModule.java:439)     at com.ibm.designer.runtime.domino.adapter.ComponentModule.initModule(ComponentModule.java:412)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.initModule(NSFComponentModule.java:427)     at com.ibm.domino.xsp.module.nsf.NSFService.loadModule(NSFService.java:561)     at com.ibm.domino.xsp.module.nsf.NSFService.doServiceInternal(NSFService.java:439)     at com.ibm.domino.xsp.module.nsf.NSFService.doService(NSFService.java:342)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.doService(LCDEnvironment.java:304)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.service(LCDEnvironment.java:261)     at com.ibm.domino.xsp.bridge.http.engine.XspCmdManager.service(XspCmdManager.java:291)     2013-05-07T10:46:17.582+02:00     java.lang.OutOfMemoryError     at java.util.HashMap.newElementArray(HashMap.java:282)     at java.util.HashMap.rehash(HashMap.java:686)     at java.util.HashMap.rehash(HashMap.java:730)     at java.util.HashMap.putImpl(HashMap.java:611)     at java.util.HashMap.put(HashMap.java:605)     at com.ibm.domino.xsp.module.nsf.RuntimeFileSystem.refresh(RuntimeFileSystem.java:269)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.initNSFData(NSFComponentModule.java:565)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.doInitModule(NSFComponentModule.java:439)     at com.ibm.designer.runtime.domino.adapter.ComponentModule.initModule(ComponentModule.java:412)     at com.ibm.domino.xsp.module.nsf.NSFComponentModule.initModule(NSFComponentModule.java:427)     at com.ibm.domino.xsp.module.nsf.NSFService.loadModule(NSFService.java:561)     at com.ibm.domino.xsp.module.nsf.NSFService.doServiceInternal(NSFService.java:439)     at com.ibm.domino.xsp.module.nsf.NSFService.doService(NSFService.java:342)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.doService(LCDEnvironment.java:304)     at com.ibm.designer.runtime.domino.adapter.LCDEnvironment.service(LCDEnvironment.java:261)     at com.ibm.domino.xsp.bridge.http.engine.XspCmdManager.service(XspCmdManager.java:291) 
16236621,2,0,0,java.util.HashMap,"1.Since you need to hold thousands of ids, well HashMap is one ans."
16236621,2,0,0,java.util.HashMap,"Well, i think that  TreeMap is slower than HashMap Edit: Well after reading few articles i came across this one as well.."
16236424,2,0,1,java.util.HashMap,"You can use a TreeSet, javadoc says it ""provides guaranteed log(n) time cost for the basic operations (add, remove and contains)""  and if you need to link something to your id, use a HashMap"
16238254,1,0,0,java.util.HashMap,How to print out HashMap value?
16238929,1,0,0,java.util.HashMap,How to create and push dynamic elements in HashMap.
16238929,1,0,0,java.util.HashMap,"I want to insert the elements inside the HashMap I declared above , the inner most hashmap has values ready which I can use , now I am using it like ,  code."
16241279,2,0,0,java.util.HashMap,Why not to have instance of HashMap.
16241279,2,0,0,java.util.HashMap,You continuously select nested HashMaps according to keys and then insert value to the most inner HashMap.
16243132,2,1,3,java.util.HashMap,"Your HashMap<CourseClass,Integer> won't store another CourseClass object."
16246821,1,0,1,java.util.HashMap,keys from HashMap?
16246821,1,0,1,java.util.HashMap,"HashMap<String, Tab> hash = new HashMap<String,Tab>(); Where: Tab will receive the values, such as: File file, JTextArea container, JTabbedPane tab I have a class called Tab: code."
16246947,2,0,3,java.util.HashMap,Use the GET method of HashMap to get what you want.
16247648,2,0,0,java.util.HashMap,"Use HashMap like: Map<StringVal,int> strCount = new HashMap<StringVal,int>(); Now go on reading and storing string in map."
16252528,1,0,1,java.util.HashMap,"So in the action class, I create a HashMap and put question id (qid) and answered question (eg."
16255740,2,1,2,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html The creation would be in time: n , and you will need to have the sorted set contained in a seperate structure."
16256775,1,0,0,java.util.HashMap,"I have a HashMap set, and I take String input from user using Scanner."
16257141,2,1,2,java.util.HashMap,and then use one of the two methods provided in the FTPFile class UPDATE Try this: Declare a HashMap instance variable code.
16257532,2,0,1,java.util.HashMap,"Instead of HashMap<String, Integer> m = new HashMap<String, Integer>(); you can say HashMap<String, Integer> m = new HashMap<>();."
16314857,2,0,0,java.util.HashMap,"Performance/Resource Usage issues:  Reading and writing to a HashMap during each invocation can be expensive, a concurrent hashmap more so."
16264438,1,0,0,java.util.HashMap,Please tell me whether it is possible with HashMap.
16264926,1,0,0,java.util.HashMap,Code in another function calling HashMap.get().
16264926,1,0,0,java.util.HashMap,Generating the HashMap code.
16265492,2,0,1,java.util.HashMap,You could create a HashMap that uses the name you enter to access the Employee record.
16266459,1,0,0,java.util.HashMap,"Also, here's the entirety of my HashMap class if it helps."
16266619,2,0,0,java.util.HashMap,After that you can use a HashMap to map the numbers to digits like so code.
16267211,2,0,0,java.util.HashMap,Map pairings = new HashMap();
16268072,2,0,1,java.util.HashMap,"Just write you own Comparator<HashMap<String, Object>> and use this version of Collections.sort()."
16272560,2,1,0,java.util.HashMap,"You could just wrap up the two arrays to a HashMap object,then simply use a SimpleAdapter."
16385020,2,0,0,java.util.HashMap,"The Java HashMap implementation provides no guarantee on the ordering of elements stored in it:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
16278995,1,0,7,java.util.HashMap,"HashMap is faster than hashset because the values are associated to unique key In HashSet, member object is used for calculating hashcode value which can be  same for two objects so equal () method is used to check for equality if it returns false that means two objects are different."
16278995,1,0,7,java.util.HashMap,"In HashMap, hashcode value is calculated using key object."
16278995,1,0,7,java.util.HashMap,HashMap can doing something same as hashset and faster.
16279147,2,0,14,java.util.HashMap,"Performance: If you look at the source code of HashSet (at least JDK 6), it uses HashMap internally, so it basically does exactly what you are doing with sample code."
16279147,2,0,14,java.util.HashMap,"So, if you need a Set implementation, you use HashSet, if you need a Map - HashMap."
16279147,2,0,14,java.util.HashMap,Code using HashMap instead of HashSet will have exactly the same performance as using HashSet directly.
16280361,2,0,0,java.util.HashMap,Rather than having a class for tupples you should better declare a HashMap for storing your dictionary keywords and positions.
16282785,1,0,2,java.util.HashMap,"Therefor i want to put them into a HashMap<String, ArrayList<Monster>> monsterAtMap and remove them from there Stages."
16290315,2,0,1,java.util.HashMap,You can create a HashMap using SoftReferences instead of WeakReferences - the garbage collector will be a bit less eager about GCing it.
16290539,2,0,0,java.util.HashMap,"If you want the data to be protected from garbage collection, store it in a regular HashMap."
16290547,1,0,1,java.util.HashMap,Is it safe to concurrently modify entries of a HashMap...
16290547,1,0,1,java.util.HashMap,"I currently have a fixed-size HashMap of linked lists, and I was wondering whether it would be safe to modify the values of two DIFFERENT keys by calling get() and then modifying the contents of that linked list (adding/subtracting nodes and stuff)?"
16290547,1,0,1,java.util.HashMap,"I know it's not safe to modify different keys at the same time due to possible resizing issues, but 1) the size of the hashmap is fixed and the linked lists are all initialized from the beginning (as empty lists) and 2) I suspect in a case like this the HashMap would store pointers to the linked lists thus modifying a list wouldn't actually modify the contents of the HashMap, but I can't be sure."
16295184,1,0,15,java.util.HashMap,"return a String and add the values to return to a Model, or return a HashMap and put my stuff in there?"
16296686,1,0,5,java.util.HashMap,"First I tried populating a HashMap<String, Double>, then using Collections.sort with a custom comparator, just like the Perl version."
16296686,1,0,5,java.util.HashMap,But scoping on the Comparator prevented it from referring to the HashMap to look up the values.
16303481,1,0,2,java.util.HashMap,How to check equality between 2 HashMap?
16303481,1,0,2,java.util.HashMap,"I would like to check equality between 2 HashMap<Number,String>."
16304500,2,0,0,java.util.HashMap,Using a HashMap is far better than iterating over LinkedList to delete stuff.
16304114,2,0,1,java.util.HashMap,"Nevertheless, it may be a better idea to use an HashMap<String, StockItem>() to store the ids of the stock objects and update the price would be more easy for you."
16304114,2,0,1,java.util.HashMap,"And you should store ids as Long instead of String, so this would be an HashMap<Long, StockItem>()"
16306344,1,0,0,java.util.HashMap,New HashMap is pointing to old HashMap.
16306344,1,0,0,java.util.HashMap,"I'm trying to implement a graph algorithm using a HashMap with integer keys, and an ArrayList for the values."
16306344,1,0,0,java.util.HashMap,The TL:DR question is this: how do I created a new identical HashMap without pointing.
16306344,1,0,0,java.util.HashMap,"I understand that I could loop through the HashMap and copy over each entry, but if I'm doing a lot of searches(large searches at that!"
16307080,1,0,0,java.util.HashMap,Given that I have a HashMap in which each String(key) has a String[](object) containing all of that strings neighbours.
16307080,1,0,0,java.util.HashMap,This is just an example of what my HashMap might look like: code.
16310852,2,0,1,java.util.HashMap,"Here is an example of converting a Hashtable<String, String> to a HashMap<String, String> (which is part of Collection) code."
16311889,1,0,0,java.util.HashMap,I am using a HashMap of ArrayLists to store the first input data.
16318940,2,0,1,java.util.HashMap,One example is HashMap.
16318940,2,0,1,java.util.HashMap,The HashMap instance allows you to get elements by using their KEYs e.g.
16318807,1,0,0,java.util.HashMap,Hibernate HashMap mapping.
16318807,1,0,0,java.util.HashMap,In the Arsenal there is a HashMap containing a weaponID and the amount of this weapon.
16318836,1,0,0,java.util.HashMap,Replacing switch statement with HashMap.
16318836,1,0,0,java.util.HashMap,Every packet has different information which is why every packet has a different constructor (creates the packet members from the byte array data) Since every case looks somewhat similar (and there are a lot of them) I thought I should optimize it by using a HashMap: code.
16318931,2,0,1,java.util.HashMap,"That would also allow you to abstract away that size check, which I didn't see in your first HashMap solution, as well as potentially skip the HashMap altogether."
16319749,1,0,1,java.util.HashMap,Should I use HashMap or an ArrayList??
16319749,1,0,1,java.util.HashMap,And how to loop through the HashMap and ArrayList to replace to corresponding string in the 'fastest time'?
16319876,2,0,1,java.util.HashMap,"To be honest, I would advise using a HashMap."
16322070,1,0,1,java.util.HashMap,Why is Map list = new HashMap not permissible?
16322175,1,0,0,java.util.HashMap,My current code previously used to use a HashMap and a ListView However now im trying to change it to just populate the data into the TextViews.
16324094,2,0,1,java.util.HashMap,"I suggest you use a HashMap, for example: code."
16326374,2,0,0,java.util.HashMap,"If you want to be able to look up a Company by ID, I recommend using a HashMap instead of an ArrayList."
16326374,2,0,0,java.util.HashMap,A HashMap allows you to store an Object by associating a lookup key.
16326374,2,0,0,java.util.HashMap,Here's the documentation: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html And some useful commands: code.
16327876,2,0,3,java.util.HashMap,The HashMap lookup executes the following code: code.
16327129,2,0,2,java.util.HashMap,If you know the index there is no reason to use a complex data structure like HashMap instead of a plain array.
16327129,2,0,2,java.util.HashMap,You would want to use a HashMap when your key is unknown and based upon the content of the object.
16327129,2,0,2,java.util.HashMap,"So a more valid example would be to start with the object you want to find and to search the array for it, instead of knowing where it is, because that is what the HashMap does."
16327145,2,0,1,java.util.HashMap,"It's not all that surprising if you understand that under the covers a HashMap is actually a hash table, which scatters your data all over the underlying array, and has to compute an index, look it up in the array and hand it back."
16327160,2,0,1,java.util.HashMap,"get() needs to hash the key, and it also needs to perform an equality comparison on the key (since it's possible that two different keys hashed to the same index in the backing array) - your performance comparison would have been even more lopsided if you'd used more than 10 keys / array elements since this would have increased the average cost of the String#equals method (although you could have avoided this with a HashMap<Integer, Double>) This is what HashMap#get is doing - the for loop is for the case when the table is storing multiple keys that hashed to the same index in the backing array (something that probably didn't happen in your performance test, meaning that the loop only performs one iteration) code."
16331244,1,0,2,java.util.HashMap,Storing a unique list of ordered Strings as the key in a HashMap.
16331244,1,0,2,java.util.HashMap,"I am thinking of using a HashMap, but that is creating some problem."
16331274,2,0,3,java.util.HashMap,"Since its HashMap<List<String>, Float>, you need to provide a list as key."
16331477,2,0,2,java.util.HashMap,Does the key for the HashMap have to specifically be a list of Strings?
16331800,2,0,2,java.util.HashMap,Use a HashMap where the keys are the first k digits of each prefix and the items are linked lists containing the rest of each prefix.
16331802,2,0,1,java.util.HashMap,Your best bet would be to store the prefix in a HashMap and the value should be a linked list.
16332641,1,0,0,java.util.HashMap,"I have my action, which has a variable HashMap<String, MyObject> My Object: code."
16361133,2,1,0,java.util.HashMap,"The problem was that i defined a Hashmap: private HashMap<String, MyObject> datiVersioneQuoteAssegnazione; When i define it as a Map as following, it works: private Map<String, MyObject> datiVersioneQuoteAssegnazione; It seems that Struts doesn't recognize HashMaps...strange."
16333666,1,0,0,java.util.HashMap,"Then, I'd like to add all five of these sets to a HashMap and give them each a unique identifier."
16333666,1,0,0,java.util.HashMap,"Finally, I'd like to be able to search the HashMap not for the sets, but for the objects contained in the sets."
16333666,1,0,0,java.util.HashMap,"Finally, once all ships are placed, I'd like to add them to HashMap."
16333666,1,0,0,java.util.HashMap,"I thought the easiest way was creating five sets instead of just one, then adding them to a HashMap as explained above."
16342531,2,0,0,java.util.HashMap,"Store your list/table into a HashMap...then retrieve from your method, something like: code."
16342637,1,0,5,java.util.HashMap,Populating a HashMap with entries from a properties file.
16342637,1,0,5,java.util.HashMap,I want to populate a HashMap using the Properties class.
16342637,1,0,5,java.util.HashMap,I want to load the entries in the .propeties file and then copy it into the HashMap.
16342637,1,0,5,java.util.HashMap,"Earlier, I used to just initialize the HashMap with the properties file, but now I have already defined the HashMap and want to initialize it in the constructor only."
16342637,1,0,5,java.util.HashMap,How do I assign the properties object to a HashMap here ?
18262149,2,0,0,java.util.HashMap,"You should load your dictionary from the DistributedCache to memory, and do the checks with the memory-loaded dictionary (e.g., a HashMap)."
16344096,2,0,2,java.util.HashMap,"So, the problem for your case is easy: If your hash implementation is wrong then HashSet (which is backed by HashMap) fails to find your object in it's table and thus never bothers to call equals (have a look at HashMap.get() to see their implementation)."
16343973,2,1,11,java.util.HashMap,"HashSet (really HashMap under the hood) has an ""optimization"" in that it checks for object reference equality before calling the equals() method."
16343973,2,1,11,java.util.HashMap,Relevant line from HashMap.put(): code.
16345198,1,0,0,java.util.HashMap,They are currently defined in a HashMap like this... code.
16345679,2,0,2,java.util.HashMap,"Alternatively, since you call Collections.unmodifiableMap() consider Guava's ImmutableMap - it's not as efficient as Trove, which avoids auto-boxing primitives, but it is more memory efficient than Java's standard HashMap (though slightly slower)."
16345679,2,0,2,java.util.HashMap,It's quite likely a simple Java HashMap will serve you just fine.
16360854,2,1,1,java.util.HashMap,A SparseArray (http://developer.android.com/reference/android/util/SparseArray.html) would be more suitable than a basic HashMap.
16345459,1,0,2,java.util.HashMap,"Objects without references variables, but, i have an option i can take: Store the Sockets and their ip's in a HashMap object at the moment that a new connection is made, like this: code."
16377339,2,0,0,java.util.HashMap,"If you say you don't have the socket, how could it be that you can add that socket in a HashMap?"
16348424,2,1,0,java.util.HashMap,put them into a HashMap and key of this hashmap will be count and value will be resource id of corresponding picture so based on your count variable you can get relevant picture.
16350535,1,0,1,java.util.HashMap,Concurrent Access HashMap.
16350652,2,0,3,java.util.HashMap,This is a wheel that's already been invented: Use a ConcurrentHashMap Using it instead of a (non-threadsafe) HashMap will make your concurrency problems go away.
16352182,2,0,1,java.util.HashMap,You can use Collections.synchronizedMap(new HashMap()); Edit 1: code template      code.
16352197,2,0,1,java.util.HashMap,Define the HashMap in the main thread that spawns the send and receive threads.
16360203,2,0,0,java.util.HashMap,Are you sure you don't want to use a HashMap for this?
16361896,1,0,1,java.util.HashMap,I went manual way with the generation of an HashMap for the properties I care of and gave that to the Json.toJson() method.
16362654,1,0,0,java.util.HashMap,Show HashMap from session to JSP.
16388173,2,0,0,java.util.HashMap,"(I am splitting file considering in mind that instead of taking complete 10,00,000 numbers in memory by using HashMap or something, I may go into out of memory error)."
16365722,1,0,0,java.util.HashMap,I read a file big.txt to poulate my HashMap.
16365832,2,0,1,java.util.HashMap,HashMap) instead of an array?
16368476,2,0,1,java.util.HashMap,I would suggest instead of all of this complicated machinery you make a simple class that extends a Linked List and has a HashMap as a member.
16368476,2,0,1,java.util.HashMap,"Then you can override the add, delete, and clear methods so that they also add/delete/clears both the super linked list, and the HashMap."
16368476,2,0,1,java.util.HashMap,"This will get you both the benefits of the HashMap and a linked list, and conceptually will be easier to deal with."
16372439,1,0,3,java.util.HashMap,I have an ArrayList of HashMap key-value pairs which looks like  code.
16372643,2,0,0,java.util.HashMap,"Maybe another solution could be storing plain data in a hash with a keypair like (primary key, data), duplicating the PK for every field in your HashMap, but this not only implies searching a valid primary key, there could be the problem of the size of the hash."
16372478,2,0,1,java.util.HashMap,Without iterating you will need to store your HashMap in another HashMap with key Reg No.
16372478,2,0,1,java.util.HashMap,"Though I'd recommend using a Family object or something similar: HashMap<Integer, Family> registration (that's the beauty of OO-languages :) ) code."
16372993,1,0,0,java.util.HashMap,HashMap and sorting.
16373841,2,1,5,java.util.HashMap,Alarms are effectively in a HashMap keyed by PendingIntent.
16377284,1,0,0,java.util.HashMap,New to HashMap : how can I sort it?
16377284,1,0,0,java.util.HashMap,So I have a HashMap looking like this : code.
16377309,2,1,3,java.util.HashMap,It is not possible to sort a HashMap.
16377317,2,0,2,java.util.HashMap,HashMap is not the datastructure for what you want to achieve.
16377317,2,0,2,java.util.HashMap,you can read more about HashMap here for exmaple: http://docs.oracle.com/javase/1.5.0/docs/api/java/util/HashMap.html what I suggest for you is to include your rating within your Movie object and make a Comperator that can compare your Movie objects based on rating.
16377434,1,0,0,java.util.HashMap,I created a HashMap with the key being a String and its value being an Object; pretty simple.
16378283,1,0,0,java.util.HashMap,HashMap get an element and set into customized value type.
16383213,2,0,6,java.util.HashMap,This implementation differs from HashMap   in that it maintains a  doubly-linked list running through all of its   entries.
16385210,2,0,0,java.util.HashMap,Yes you most definitely dont want to declare a new HashMap in every iteration.
16387726,1,0,1,java.util.HashMap,Java string parsing to HashMap.
16387726,1,0,1,java.util.HashMap,I want to be able to parse this string and generate a HashMap of the form id->labels for quick look up later.
16387891,1,0,0,java.util.HashMap,"Is there an easier way of doing this, than having a HashMap storing id->classname and then getting an object of the class by doing the following?"
16393048,2,0,0,java.util.HashMap,"Reading a local variable is definitely cheaper than a HashMap lookup, probably by a factor of 10-100x."
16393048,2,0,0,java.util.HashMap,"In concurrent situations, the value could theoretically change if the HashMap is modified by some other code."
16393802,2,0,4,java.util.HashMap,"Two approaches to this problem: 1- Don't use ArrayList, Use HashMap<String,AutionItem> where String would be name 2- Use getName to generate index and use index based addition into array list list.add(int index, E element)."
16393802,2,0,4,java.util.HashMap,One way to generate index from name would be to use its hashCode and modulo by ArrayList current size (something similar what is used inside HashMap)
16394473,2,0,1,java.util.HashMap,But I would also prefer using a HashMap to map the name to the item.
16394050,1,0,1,java.util.HashMap,Even then my HashMap returns null.
16395582,1,0,0,java.util.HashMap,Java HashMap only returning last element of list.
16395582,1,0,0,java.util.HashMap,"However, I've encountered a very odd problem with HashMap / Map return values."
16395582,1,0,0,java.util.HashMap,This is my code regarding the HashMap: code.
16395582,1,0,0,java.util.HashMap,"However, anytime I use textures.get(frameHere), it ALWAYS returns the LAST item I put for the HashMap, so if my last item was ""char_right"", it will ALWAYS return the char_right texture, even if I called something like textures.get(""char_up"")."
16395582,1,0,0,java.util.HashMap,"Meaning, the problem isn't the texture loader or the way I'm getting textures as a value into my HashMap."
16395643,2,0,2,java.util.HashMap,"A common misconception about collections including HashMap, is when adding or putting a key/value/element you are placing a copy of that element."
16396361,2,0,5,java.util.HashMap,"Micro benchmark with a simple HashMap using the same settings as ContentValues (assuming this is the class you are referring to), and adding 10 fields (i.e. one resizing operation): code."
16397480,1,0,0,java.util.HashMap,Using a HashMap in Hibernate Many-to-Many mapping.
16397480,1,0,0,java.util.HashMap,Would it be possible to declare a HashMap in the following object called Group?
16400755,2,0,5,java.util.HashMap,The maximum capacity of HashMap is 1 << 30 or about one billion.
16404106,1,0,1,java.util.HashMap,For now I am trying to cache those files to increase performance via HashMap: code.
16433828,2,1,1,java.util.HashMap,"For example, you can place the clips on a HashMap: code."
16405215,2,0,2,java.util.HashMap,"You should declare a map like Map<String, Integer> countMap = new HashMap<String, Integer>(); before the loop, and populate it within the loop."
18326432,2,0,0,java.util.HashMap,This concept is similar like HashMap where [hash & (length_of_hashmap-1)] is used to find index of key in hashmap.
16424492,2,0,0,java.util.HashMap,"So in a nutshell the start of the file the first line should be   **a    00001740    0.125   0   able#1  (usually followed by to) having the necessary means or skill or know-how or authority to do something; ""able to swim""; ""she was ........**  and the end of the file the last line should be   **v   02772310    0.125   0   deflagrate#1    cause to burn rapidly and with great intensity; ""care must be exercised when this substance is to be deflagrated""** Besides this should be mistake i think so but correct it private HashMap<String,Double> _dict ;"
16414990,1,0,3,java.util.HashMap,Java - Get correctly casted object from HashMap.
16414990,1,0,3,java.util.HashMap,"I store the System instances in a static HashMap, because I want to reach them in everywhere in my app."
16415436,1,0,4,java.util.HashMap,"While my implementation works fine, I'm still getting a warning message from eclipse (Version: Juno Service Release 2): ""Type safety: The method put(Object, Object) belongs to the raw type HashMap."
16415436,1,0,4,java.util.HashMap,"References to generic type HashMap should be parameterized"" This is my code: code."
16425998,2,0,0,java.util.HashMap,"So you would have your own JSONObject class which would contain an org.json.simple.JSONObject, would extend HashMap<String, Object> and implement Map<String, Object>, and would contain forwarding methods for all the methods of org.json.simple.JSONObject."
16415553,2,1,8,java.util.HashMap,"What is your JSONObject, does it inherit from HashMap?"
16415553,2,1,8,java.util.HashMap,"it extends HashMap but doesn't support parameter type, if its definition is  code."
16417522,1,0,0,java.util.HashMap,"how to get JComponent name(JComboBox,JCheckBox,JTextComponent...etc)  how i can get fieldName for put this name to HashMap, for example: code."
16425985,2,0,2,java.util.HashMap,"For functionality like this, you'd typically use std::map or std::unordered_map in C++, or HashMap or TreeMap in Java."
16427520,2,0,6,java.util.HashMap,"And yes, you're right that HashMap<K, V> doesn't maintain any documented order."
16431035,2,0,0,java.util.HashMap,"Anyway, as you know it is not possible to name your variables dynamically – only if you use a Map (as for example a HashMap) where you can assign your values to a key as you need them: code."
16439743,1,0,1,java.util.HashMap,How efficiently can we store all tree nodes into HashMap?
16439743,1,0,1,java.util.HashMap,We are trying to store all of tree nodes into a HashMap in a linear fashion (traversing node after node) and running into memory issues(OutOfMemoryError: Java heap space) with max memory set to 90mb (-Xmx90M) Here is the code we are using (contains HashMap within a HashMap): code.
16439743,1,0,1,java.util.HashMap,How efficiently can we store all tree nodes into HashMap or any other collection so as to retrieve it later?
16440196,2,0,0,java.util.HashMap,"But for string node IDs you can use a single HashMap with concatenated ID values, a la ""a.b.c"" or ""a/b/c""."
16450004,2,1,1,java.util.HashMap,"In json-simple, JSONObject extends HashMap: http://juliusdavies.ca/json-simple-1.1.1-javadocs/ It's unfortunately not possible to get value by index cause the HashMap is unordered."
16446922,1,0,0,java.util.HashMap,"In the method below called cardTypeForPbfValue(), I cannot find the key in the HashMap even though I can see it while debugging my the code."
16446974,2,0,1,java.util.HashMap,"What I guess is that you are using Short as the key type whereas, you are looking for the value in HashMap with Integer key.That's why you are not getting the associated value for the entered key."
16450113,2,1,2,java.util.HashMap,HashSet constructor relies on more than what Iterable offers: it wants to know the size of the collection up front in order to optimally construct the underlying HashMap.
16453740,2,0,2,java.util.HashMap,"The K and V are type parameters, and here, you need to use concrete types to substitute them, the same as when you are using HashMap."
16454624,2,0,2,java.util.HashMap,Refer Method Summary Section to see the methods to override SUGGESTION  If you do not wish to over-ride all the methods from MAP (as its really a pain) then rather than implements MAP you can have extends HashMap.
16456205,2,0,0,java.util.HashMap,you have to create a new HashMap each time you add it to the list code.
16456248,1,0,0,java.util.HashMap,I am using HashMap to read all the data from excel files as string and store them in the table.
16457564,1,0,0,java.util.HashMap,and the following code to read and print the data[Late on i will put them in HashMap] code.
16458640,1,0,0,java.util.HashMap,How to group the values which are in excel to a HashMap.
16461740,2,0,1,java.util.HashMap,Why do you want to complicate by using HashMap of Bitmap of MediaPlayer?
16461856,1,0,5,java.util.HashMap,"I am using HashMap as data-structure to load the data: Map<String, Map<String, GridTradeStatus>>."
16569723,2,0,0,java.util.HashMap,You put stuff into a HashMap.
16569723,2,0,0,java.util.HashMap,HashMap is not exactly memory efficient.
25775328,2,0,0,java.util.HashMap,"If you think you cannot afford a ratio 1:4 between the size of data in a flat file and the memory  necessary to load the Strings in a HashMap, you should considere not using Java but a lower level language such as C++ or even C. Of course there are possible optimizations :  use byte[] instead of String (about half the size) do not use default HashMap parameters (initial size / load factor) but tweak them to meet your actual requirements."
16462638,2,0,0,java.util.HashMap,You're probably using a non-parametrized HashMap.
16462638,2,0,0,java.util.HashMap,Try to declare your HashMap like this:  code.
16463213,2,0,1,java.util.HashMap,"Also, I would use a HashMap or a different collection for that one  to one String -> Laptop correspondence."
16467307,1,0,1,java.util.HashMap,"I have a class that doesn't serialize properly with Gson (class is just name and HashMap) so I wrote a custom serializer to print the name and the key, value pair from the HashMap."
16508964,2,1,1,java.util.HashMap,"Setting i to the returned Item didn't really work and so then when I tried to serialize, the HashMap in my objects wasn't set properly as @Perception noted."
16467416,1,0,2,java.util.HashMap,Now it is easy to convert this file (or string) to a Java class (e.g: java.util.HashMap) if I use Gson or Jackson or JsonSimple or another Java/JSON third-party library.
16468461,2,0,0,java.util.HashMap,"You can use HashMap<Integer,String> map and can sort it"
16478247,2,0,0,java.util.HashMap,You could make a HashMap and access them by key: code.
16480340,1,0,1,java.util.HashMap,Sequence of statements to copy HashMap to TreeMap code.
16486555,2,0,1,java.util.HashMap,"Unfortunately, your getItemId(position) method of StableArrayAdapter is backed by a HashMap that you only update when first constructing your adapter."
16493035,1,0,0,java.util.HashMap,OutOfMemoryError: Java heap space for saving into HashMap.
16493035,1,0,0,java.util.HashMap,"To show the details of node (& for other purposes), we are storing respective revision tree node into HashMap (after tree traversal of node after node)."
16493035,1,0,0,java.util.HashMap,Current code we are using contains HashMap within a HashMap (because different 'types' of node exists in tree) with a recursive call: HashMap> refNodeMap; String nodeId; toCopy is of type Node class object.
16493035,1,0,0,java.util.HashMap,"Currently trying to replace HashMap with a class object, however I will have to use array or arraylist in the class for above code scenario which again would cause memory issues."
16494946,2,0,0,java.util.HashMap,"You can use a HashMap<Integer, List<Point>> to map from pointer ID to list of Points for that pointer."
16499077,1,0,0,java.util.HashMap,"so i have this data structure: Segment - Column Number - Value  ""title"" - 1 - Foo  ""title"" - 2 - Foo   ""title"" - 3 - Foo ""content"" - 1 - Foo ""content"" - 2 - Foo ""content"" - 3 - Foo  and so on... <String, Intenger, String> or <Integer, Integer, String> I'm actually parsing data and adding it to a HashMap: code."
16499077,1,0,0,java.util.HashMap,"The second column in the HashMap is a list but as the get() method returns objects, i'm not able to write something like that."
16499970,1,0,0,java.util.HashMap,How to copy a HashMap to an ArrayList with different references.
16500279,2,0,1,java.util.HashMap,What had me puzzled for a little while was why the exception was coming from a HashMap as I had assumed that linksList was a List - obviously it's a Set.
16504625,2,1,8,java.util.HashMap,(This is why HashMap in Java is unordered).
16504680,1,0,1,java.util.HashMap,HashMap: printing specific entries.
16504680,1,0,1,java.util.HashMap,"I want to write a program that prints out entries ""0"" and ""4"" of the HashMap (i.e. entry.getKey(0) and entry.getKey(4) but it won't let me do this) What would be another way using what I already have?"
16504680,1,0,1,java.util.HashMap,"Since people have asked for more contextual information, I am storing a set of strings in the HashMap."
16504680,1,0,1,java.util.HashMap,I want the program to print out the 0th and 4th entries of the populated HashMap.
16504861,2,0,0,java.util.HashMap,"Since people have asked for more contextual information, I am storing a set of strings in the HashMap."
16504861,2,0,0,java.util.HashMap,I want the program to print out the 0th and 4th entries of the populated HashMap.
16504861,2,0,0,java.util.HashMap,"With how it is being used, an HashMap makes no sense."
16504714,2,0,2,java.util.HashMap,The HashMap has no defined ordering of keys.
16504714,2,0,2,java.util.HashMap,You may use LinkedHashMap instead of HashMap It will always return keys in same order (as insertion) when calling keySet().
16504720,2,1,3,java.util.HashMap,"HashMap class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
16504720,2,1,3,java.util.HashMap,"So, if you are looking to fetch values from a HashMap based on index, probably it is not possible."
16504720,2,1,3,java.util.HashMap,"HashMap works on principle of hashing, we have put(key, value) and get(key) method for storing and retrieving Objects from HashMap."
16504720,2,1,3,java.util.HashMap,"When we pass Key and Value object  to put() method on Java HashMap, HashMap implementation calls hashCode() method on Key object and applies returned hashcode() into its own hashing function to find a bucket location for storing Entry object, important point to mention is that HashMap in Java stores both key and value object as Map.Entry in bucket which is essential to understand the retrieving logic."
16505762,1,0,0,java.util.HashMap,Now i would like to check if there is already a Color Object as a key in the HashMap.
16505762,1,0,0,java.util.HashMap,I also tried the method containsKey from HashMap.
16506218,2,0,1,java.util.HashMap,"Another Option would be to have a HashMap, that binds the key word to the member."
16506218,2,0,1,java.util.HashMap,"For an ArrayList or a HashMap, the clearAll method might look like this: code."
16506036,2,0,2,java.util.HashMap,"another thing you could do to future-proof yourself against any extra state added in the future is store all of your state in a HashMap, for example, instead of individual fields."
16506593,1,0,7,java.util.HashMap,At which length is a String key of a HashMap considered bad-practice?
16506593,1,0,7,java.util.HashMap,I'm having difficulties trying to grasp whether it's sane to have a HashMap with keys of 150 characters.
16506593,1,0,7,java.util.HashMap,Is there an unwritten law to the length of the HashMap key?
16506642,2,1,5,java.util.HashMap,"Create a routine that populates an HashMap with, say, insert a size here that is representative of your use scenario random values with 5 character strings as keys."
16506709,2,0,3,java.util.HashMap,So the impacts on performance you will see are with:  Passing never-before-hashed strings in calls to HashMap functions.
16506709,2,0,3,java.util.HashMap,"Calls to HashMap::get() and HashMap::put()using a string key that is equal to a key already in the HashMap (because if the key isn't in the collection, then most likely only hashCode() will be called."
16506709,2,0,3,java.util.HashMap,"But only if the strings passed to these functions are not the same objects that are already in the HashMap, because in that case equals() is very fast."
16506617,2,0,5,java.util.HashMap,Is there an unwritten law to the length of the HashMap key?
16511412,2,0,2,java.util.HashMap,"You could use a HashMap<String, Boolean> to store the data."
16513627,1,0,6,java.util.HashMap,"The objects which gets stored in the HashMap gets created right at that very time, that is they are not long lived."
16515722,2,0,0,java.util.HashMap,"The most used map's implementation in java is hashmap or TreeMap (performance depends of what you make with the map (adding data, read, is the data needed to be sorted, ...)), if it was ok just make else you have to make to implément directly map (don't extends HashMap cause you extends all methods and just respecify the method defined in your implementation."
16516107,1,0,7,java.util.HashMap,How can I store HashMap> inside a list?
16516416,2,0,2,java.util.HashMap,"If your list must be of type List<HashMap<String, ArrayList<String>>>, then declare your map variable as a HashMap and not a Map."
16516479,2,0,6,java.util.HashMap,Please pay attention that I used concrete class (HashMap) only once.
16517939,1,0,2,java.util.HashMap,How to convert json array of K/V to Java HashMap with Jackson JSON.
16517939,1,0,2,java.util.HashMap,I'm trying to convert as a Java Object a List of ID/NOTE into a HashMap list.
16519661,1,0,0,java.util.HashMap,"I have seen that it is possible to ""create"" associative arrays with HashMap /Map: http://javarevisited.blogspot.com.es/2012/12/how-to-sort-hashmap-java-by-key-and-value.html http://www.mkyong.com/java/how-to-sort-a-map-in-java/ But only works with key-value."
16519748,1,0,0,java.util.HashMap,"The HashSet uses a HashMap in the back, which in turn is quite a heavyweight object, and I guess this is where most of my additional memory goes."
16521076,1,0,0,java.util.HashMap,I was thinking it might be an idea to have a HashMap of CacheLocation keys against BlockingQueue values.
16522633,2,0,0,java.util.HashMap,The reason is that the HashMap will point all entries to the same ArrayList which will be overwritten each run.
16525776,1,0,0,java.util.HashMap,"Somebody guide me to use HashMap, but I do not know how to use it."
16525776,1,0,0,java.util.HashMap,I am not able to use HashMap and ArrayList please help me.
16528390,1,0,0,java.util.HashMap,"Note: points is defined as HashMap<String, ArrayList<Point>> and p being a Path instance."
16530376,1,0,1,java.util.HashMap,Creating a custom multi-key HashMap.
16530376,1,0,1,java.util.HashMap,I have been trying to create a custom HashMap which contains 2 keys.
16533946,2,1,1,java.util.HashMap,"1 I suggest you don't rely on the type of the key to determine which HashMap to look in and instead see if the key is a valid key for the first HashMap, and if not, try just the second."
16531102,2,0,0,java.util.HashMap,"Also, as greedybuddha pointed out, make sure that your HashMap are not reassigned in the same manner."
16534542,1,0,0,java.util.HashMap,I need to process each line and update a HashMap.
16536892,1,0,0,java.util.HashMap,Sample XML HashMap for SimpleXML.
16536892,1,0,0,java.util.HashMap,Using the SimpleXML lib for Android is it possible to create a HashMap out of these: code.
16536892,1,0,0,java.util.HashMap,"I want to create a HashMap that would contain the id and the Item, like this: code."
16536892,1,0,0,java.util.HashMap,When I use List instead of HashMap - it works as expected.
16536892,1,0,0,java.util.HashMap,I just need HashMap as addition to the list field in Items wrapper class.
16540152,1,0,1,java.util.HashMap,Must the .equals method for objects be overriden for instances of that object type in order for them to be used as keys in a HashMap.
16540152,1,0,1,java.util.HashMap,"Currently, my HashMap is a HashMap of an enum called Names, using a key of Key Signatures, or HashMap<KeySignature, Names>."
16540152,1,0,1,java.util.HashMap,"To get the Enum version of a given KeySignature, I've created the HashMap explained above: code."
16540152,1,0,1,java.util.HashMap,"I cannot figure out what is causing this, but is seems as if the HashMap.get() method is comparing the key and the argument by reference rather than value."
16544820,2,0,1,java.util.HashMap,"I haven't used MultiHashMaps before, but this is how I usually display my HashMap contents in a jsp page (without generics example): code."
16544972,2,0,2,java.util.HashMap,If you change value in object witch is in HashMap you must first remove item from HashMap then edit value and after then insert into HashMap again.
16546462,2,0,3,java.util.HashMap,"Given the stated requirements, I would use a SortedMap to contain the values, combined with a HashMap mapping keys to values."
16546462,2,0,3,java.util.HashMap,"To prevent duplicate keys, put the key-value pair in the HashMap, checking the put result."
16548583,1,0,0,java.util.HashMap,"I know  Hashtable is synchronized, whereas HashMap is not."
16548583,1,0,0,java.util.HashMap,But in my project I am using HashMap.
16548583,1,0,0,java.util.HashMap,Till now I did not get any problem with HashMap.
16548583,1,0,0,java.util.HashMap,So when the synchronization concept will come into the picture(i.e using HashMap).
16548583,1,0,0,java.util.HashMap,Can I use HashMap in all places where I am using HashTable?
16548583,1,0,0,java.util.HashMap,Can I use HashTable in all places where I am using HashMap?
16548651,2,1,2,java.util.HashMap,when will the synchronization concept come into the picture (i.e using HashMap)?
16548651,2,1,2,java.util.HashMap,If you have a class that holds a HashMap: code.
16548651,2,1,2,java.util.HashMap,Can I use HashMap in all places where I am using HashTable?
16548651,2,1,2,java.util.HashMap,Can I use HashTable in all places where I am using HashMap?
16554291,1,0,0,java.util.HashMap,Java (HashMap) - How to save and load an entrySet()?
16554291,1,0,0,java.util.HashMap,"The software will start with the HashMap empty, and then, through the loading process, I want to be able to fill the keys and their respective values accordingly."
16554526,2,1,2,java.util.HashMap,This is assuming that the Objects contained in your HashMap are either Serializable or Externalizable.
16554526,2,1,2,java.util.HashMap,I would just serialize the HashMap itself instead of the entrySet.
16555759,2,0,2,java.util.HashMap,"But, if you don't even want to use structure just use a HashMap code."
16568555,1,0,0,java.util.HashMap,this should not create any problem filterClasses returns some classes that I want to be instrumented normally I want to instrument these Classes:  Ljava/nio/Buffer; Ljava/util/HashMap$Entry; Ljava/nio/HeapCharBuffer; Ljava/nio/CharBuffer; Ljava/lang/ClassLoader; Ljava/lang/Class; Ljava/util/HashMap; Ljava/nio/ByteBuffer; Ljava/lang/System; Ljava/io/BufferedWriter; Ljava/lang/String; Ljava/io/OutputStreamWriter; Ljava/io/BufferedOutputStream; Ljava/nio/charset/CoderResult; Ljava/io/Writer; Ljava/util/HashSet; Ljava/nio/charset/CharsetEncoder; Ljava/io/FileOutputStream; Ljava/io/PrintStream;   everything works fine I print the instrumented and unistrumented classes in specific folders for debug.
27280148,2,0,0,java.util.HashMap,Check out the source code at line 682: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/WeakHashMap.java#WeakHashMap.Entry This is the same thing for HashMap.
16577137,2,0,6,java.util.HashMap,Both share the key-value pair implementation with the most commonly used implementation being HashMap code.
16579552,1,0,1,java.util.HashMap,"Why doesn't HashMap recognize its key, if the key is a String Array?"
16579552,1,0,1,java.util.HashMap,"It means HashMap doesn't recognize its key if the key is a String array, but if the key is a String then it will be fine."
16579552,1,0,1,java.util.HashMap,"I have a need to put a String array into the key of HashMap, so how can we let HashMap to recognize the String array key?"
16579600,2,0,3,java.util.HashMap,"HashMap uses equals(Object obj) and hashCode() method to save and retrieve objects from HashMap, String class overrides these methods while String[] is an object and it wont so after putting it in HashMap, for String[] hashCode() and equals(Object obj) defualt's implementation  by Object class is ran, which cause un predictable results"
16579607,2,1,3,java.util.HashMap,"In short, using an array as key of a Map (HashMap, LinkedHashMap, etc) is a bad idea."
16582299,1,0,1,java.util.HashMap,"I have a ArrayList<HashMap<String, String>> placesListItems."
16589513,2,0,0,java.util.HashMap,"It's not clear how you plan to set it to a single value, but you can call putAll on the HashMap as demonstrated from this answer: code."
16589513,2,0,0,java.util.HashMap,patch could be a HashMap containing the same value for all keys....
16598685,1,0,7,java.util.HashMap,"I'm not sure if it is possible to do that (convert a serialized object to a HashMap without loading the object definition itself), but if it is possible, I could imagine a tool that could convert a serialized object (or stream of objects) to a new version, using, say, a set of Properties for conversion hints/rules, etc..."
16600352,1,0,1,java.util.HashMap,"Just as EnumMap is the better choice of map when working with enum, is there a better choice of map (rather than the generic HashMap that everybody uses) for dealing with character?"
25764976,2,0,0,java.util.HashMap,Sort the HashMap and plot the graph.
16604072,1,0,1,java.util.HashMap,"when all I've got is the list of methods, obtained by getDeclaredMethods(), and converted into a HashMap<String,Method> and a list of its parameters' Classes, obtained by getParameterTypes()."
16606079,1,0,0,java.util.HashMap,"The Html component (in iReport) is connected with string parameter, I put right string parameter into parameters HashMap<>."
16609511,1,0,1,java.util.HashMap,"(Stretch goal: do the same with cpu usage ;] ) I was not really familiar with all the different implementations of Java Collections to date, and when the problem dawned at me today, I looked into my to-date all-time favorite 'HashMap', and was not happy with how much memory overhead there was declared."
16614697,2,1,3,java.util.HashMap,"Compared to HashMap, you additionally get a predictable iteration order for free."
16611419,2,0,0,java.util.HashMap,I can think of a custom logic as mentioned below Create a HashMap>.
16611429,2,0,2,java.util.HashMap,I would recommend using HashMap and put some sort of List in it for example a code.
16612157,1,0,4,java.util.HashMap,Why does new HashMap<> produce an error in JDK 1.6 but not 1.7.
16612188,2,1,17,java.util.HashMap,The new HashMap<>() (called diamond syntax) is not allowed in JDK 1.6 simply because it was only introduced in Java SE 7.
16612193,2,0,4,java.util.HashMap,"Because it's an enhancement of JDK 1.7 (the Diamond operator), before you have to specify the Generic types on the class and on the constructor HashMap<String, String> hashMap = new HashMap<String, String>();"
16617864,2,0,0,java.util.HashMap,I do this using a HashMap:  code.
16617806,2,0,5,java.util.HashMap,You can create a custom class to store pairs of strings and then use a HashMap to keep track of the count code.
16617806,2,0,5,java.util.HashMap,And then you can use HashMap for keeping tracking of the count: code.
16617869,2,1,1,java.util.HashMap,"In java, you could consider type HashMap<String,Integer> key is the string pair, Integer is count: something like: code."
16618853,2,0,2,java.util.HashMap,"HashMap, TreeMap or LinkedHashMap."
16629910,2,1,12,java.util.HashMap,HashMap numerous instances will be stored in the same bucket (because numerous instances with different a and b values but with the same sum will be put inside the same bucket).
16631954,1,0,2,java.util.HashMap,I usually work in non multi threaded environment so usually go for HashMap instead of Hashtable.
16633913,2,0,1,java.util.HashMap,You can't sort a HashMap per se because it cannot hold an order.
16633913,2,0,1,java.util.HashMap,"If you want the keys in the map to be maintained in a sorted order, you need to use a TreeMap with a Comparable key or a suitable Comparator ... instead of a HashMap."
16633711,1,0,3,java.util.HashMap,"I have a map private HashMap<Character, Integer> map; I want to convert it to array  but when I do that/I get this: code."
16633711,1,0,3,java.util.HashMap,So how to convert HashMap to Array?
16633856,2,0,1,java.util.HashMap,"Also note that you will always get a different order when doing this, as HashMap isn't ordered."
16636212,2,0,2,java.util.HashMap,"Another option is to copy-paste the source code for MultiMap into a new collection MyMultiMap, except that you'd replace the top-level HashMap with a ConcurrentHashMap - the latter's iterators won't throw ConcurrentModificationExceptions."
16633986,1,0,0,java.util.HashMap,"I want to store query result in HashMap for each ""service"" parameter passed from another class and then store them to application scope by application.setAttribute() and if service exist in application scope  I could get those values from  application.getAttribute()."
16637102,2,0,1,java.util.HashMap,Create a copy of your HashMap.
16638599,2,1,1,java.util.HashMap,"If you want your customized HashMap to only accept class Student, which is a very odd request as collections should be generic usually, then just do the following."
16641557,2,0,2,java.util.HashMap,I tried to do with HashTable but at the end he said I should have done it using HashMap.
16641557,2,0,2,java.util.HashMap,HashTable is an old Java 1.0 class that has a couple of undesirable properties:  All operations are synchronized ... which is typically unnecessary The class doesn't allow null keys or values ... which HashMap does.
16641557,2,0,2,java.util.HashMap,Apart from that (and the fact that HashTable supports the old Enumeration API) HashMap and HashTable behave pretty much the same.
16647195,2,0,3,java.util.HashMap,A HashMap can't be sorted.
16648748,2,0,4,java.util.HashMap,"In JDK, the most significant example would be Map.Entry inner interface, defined within Map interface and implemented by various ways by HashMap, LinkedHashMap etc... And of course, Map.Entry needed to be declared as public in order to be accessible while iterating the map wherever the code is."
16654501,2,0,1,java.util.HashMap,Note it is a good programming practice to override hashcode() when you override equals() method specially in scenarios where hash concept comes into picture.Like HashMap for example.
16654273,2,0,0,java.util.HashMap,You can check if a HashMap includes an object as a key with the containsKey() method.
16654274,2,0,2,java.util.HashMap,HashSet has a contains() method and HashMap a containsKey/containsValue.
16654620,2,0,1,java.util.HashMap,"E.g., you decided to use TreeMap at first, but then you don't want ordering anymore (in most cases), so you change to HashMap."
16654620,2,0,1,java.util.HashMap,"Now, if you use HashMap instead of TreeMap, you could expose a sorted view to the user."
16657479,1,0,15,java.util.HashMap,"I spent a couple of hours whipping up the fairly naive HashMap/ArrayList-based replacement below, and it's massively faster in almost every way: Add 50,000 listeners:  EventListenerList > 2 seconds EventListenerMap ~ 3.5 milliseconds  Fire event to 50,000 listeners:  EventListenerList 0.3-0.5 milliseconds EventListenerMap 0.4-0.5 milliseconds  Remove 50,000 listeners (one at a time):  EventListenerList > 2 seconds EventListenerMap ~280 milliseconds  Firing might be just a hair slower, but modification is enormously faster."
17489989,2,1,2,java.util.HashMap,"Under a lighter Listener load, though, your implementation costs 16 pointers for every empty list (the default allocation of HashMap), 26 pointers for an EventListenerMap with one element, and 36 pointers for a map with two elements of different classes."
17489989,2,1,2,java.util.HashMap,(This is not counting the rest of the HashMap and ArrayList structure size.)
16659089,1,0,0,java.util.HashMap,How can I map these using HashMap or EnumMap?
16679040,2,0,0,java.util.HashMap,I want to replace the switch block by HashMap or EnumMap.
16659426,2,0,2,java.util.HashMap,How can I map these using HashMap or EnumMap?
16664808,1,0,4,java.util.HashMap,HashMap Search for part of an key?
16664808,1,0,4,java.util.HashMap,"I am currently using HashMap<String, Integer> which is filled with keys of type String which are all, let's say, 5 chars long."
16664837,2,0,0,java.util.HashMap,"With HashMap<String, Integer> you can only go through keySet() and do contains() for String keys and your pattern."
16664839,2,0,4,java.util.HashMap,"You cannot do this via HashMap, you should write your own implementation for Map for implementing string length based searching in a map."
16664898,2,0,1,java.util.HashMap,It seems like a use case for TreeMap rather than HashMap.
16664898,2,0,1,java.util.HashMap,Check this question Partial search in HashMap
16664936,2,0,0,java.util.HashMap,"*Using just the Map<String, Integer>, you would need to iterate through the entire capacity of the larger map, whereas adding this supplemental datastructure would impose an O(1) lookup (assuming you used a HashMap) followed by iteration through just the result set, which is the fastest possible outcome."
16667936,2,0,2,java.util.HashMap,"Make HashMap < String, Student > where string is the student id and Student is a class with all student attributes."
16668840,1,0,0,java.util.HashMap,NullPointerException in put method of HashMap.
16669676,2,0,0,java.util.HashMap,"Anyway, now as you want to implement prev/next in your SingleMenuItemActivity and as you are already having contactList which you have prepared in AndroidJSONParsingActivity, I would suggest you to pass ArrayList<HashMap<String, String>> from AndroidJSNOParsingActivity to SingleMenuItemActivity."
16672249,1,0,0,java.util.HashMap,Equivalent container to java.util.HashMap but without value feild.
16672249,1,0,0,java.util.HashMap,I need a java container similar to HashMap that stores only objects (instead of key-value pairs) indexed by hash code.
16675710,2,0,1,java.util.HashMap,You can simply iterate through your list and place values in HashMap and return it.
16680957,2,0,0,java.util.HashMap,You might want a HashMap instead of an ArrayList: code.
16680957,2,0,0,java.util.HashMap,"To put the models in, you'll use the put method of HashMap: code."
16682418,2,1,2,java.util.HashMap,"One way to do this is to create HashMap and store a reference to your Marker, circle, or anything else you want the ability to remove,  with some unique id."
16682418,2,1,2,java.util.HashMap,By storing a reference to things you place on the map in a HashMap however you can then call remove on the marker associated with that key each time your location updates.
16682418,2,1,2,java.util.HashMap,"The same goes for the circle (though you will need a different HashMap if you set the types as I have below - I don't know if you can use a generic String, Object map that will store both)."
16682418,2,1,2,java.util.HashMap,"To use this method, declare your HashMap like its an instance variable so it can be accessed from all the methods within your Activity code."
16682418,2,1,2,java.util.HashMap,"Then wherever you create your Marker or other map objects, just add them to the HashMap with some key value code."
16682418,2,1,2,java.util.HashMap,The HashMap approach works best if you're dealing with multiple markers or objects.
16687334,1,0,6,java.util.HashMap,This states that it will not put an object into the the pool if it is already there (with a help of a HashMap).
16688008,1,0,1,java.util.HashMap,"I have a map that looks like this: HashMap<Person, List<Items>>."
16696876,1,0,0,java.util.HashMap,Lists>adding to HashMap.
16697943,1,0,2,java.util.HashMap,"Better approch to choose fine data structure for picking random key value from a long list [HashMap,LinkedHashMap and ConcurrentHashMap]."
16698049,2,0,2,java.util.HashMap,I suggest you use the simplest implementation which in this case is likely to be HashMap.
16698345,2,0,1,java.util.HashMap,And unless there is a runtime reload and various threads fighting to win NO to ConcurrentHashMap as well HashMap is fast in retrieval and is a potential candidate.
16700232,1,0,0,java.util.HashMap,"This class handles the ActionPerformed method by taking the input of the user, in string format, and matching it up with a Color value within colorKey, a HashMap of String keys and Color Objects."
16703274,2,1,1,java.util.HashMap,"To port to Java, use a HashMap<Integer, Double: code."
16710203,2,0,0,java.util.HashMap,"For me, the best way for do what you want is to use a HashMap."
16709465,1,0,0,java.util.HashMap,I have a program which makes a TCP Connection with multiple clients and stores the socket connection and client id in HashMap and sends the data to client by reading the data from UDP Socket.
16713064,2,0,0,java.util.HashMap,"So just write out a regular loop that puts stuff into a HashMap<String, String>."
16713197,1,0,0,java.util.HashMap,Array Index Out Of Bounds Exception with HashMap in android.
16719636,2,0,3,java.util.HashMap,"If you already have a ""John"" key in your HashMap, its value will be replaced with ""Taxi Driver""."
16720623,1,0,1,java.util.HashMap,How can I represent my HashMap as shown above.
16722298,1,0,0,java.util.HashMap,So basically what I have is a simple table and I fill this with a HashMap.
16733244,2,0,0,java.util.HashMap,"Try using a HashMap<Integer, Set<String>>"
16740184,1,0,0,java.util.HashMap,How to annotate HashMap?
16740184,1,0,0,java.util.HashMap,"But when I try to retrieve data, the HashMap has zero records: code."
16740616,1,0,5,java.util.HashMap,Or  1) maintain a class for all this parameters 2) maintain HashMap for all these parameters 3) maintain an ArrayList for this.
16742442,2,0,3,java.util.HashMap,This it's possible using Map - HashMap Example: code.
16743229,2,0,2,java.util.HashMap,"Use HashMap<Integer, StringBuilder> key = EMP_ID (Integer; String if it is alphanumeric) value = comma separated CNTCT_CD values code."
16743308,2,0,0,java.util.HashMap,"Can also use HashMap<String, Set<String>> key = String EMP_ID value = Set of String(CNTCT_CDs) Code: Just create a class to represent a record like  code."
16744882,2,1,11,java.util.HashMap,"This would be a good place for a HashMap, the key would be the Word, and the value the Number of times it occurs."
16744886,2,0,4,java.util.HashMap,You can use Java HashMap: code.
16745891,1,0,0,java.util.HashMap,I created a HashMap to store a text file with the columns of information.
16745891,1,0,0,java.util.HashMap,I compared the key to a specific name and stored the values of the HashMap into an ArrayList.
16745891,1,0,0,java.util.HashMap,"This isn't my entire code just my two loops that read in the text file, stores into the HashMap and then into the ArrayList."
16747038,1,0,2,java.util.HashMap,"I am trying to read XML into a HashMap, I am trying to read each XML node and create new object based on its contents."
16753587,1,0,5,java.util.HashMap,"Hello everybody I try to extend a HashMap<String,String> to enforce a ""all-lowercase"" rule code."
16754749,2,1,5,java.util.HashMap,"I don't think you need any HashMap...  EDIT: Taking into account your comment, you could use a HashMap."
16755570,2,0,1,java.util.HashMap,"BTW: You could use TIntIntHashMap which would be much smaller than HashMap (up to 4x smaller), but could still be too much for your data set."
16757359,1,0,5,java.util.HashMap,What is the time complexity of HashMap.containsValue() in java?
16757359,1,0,5,java.util.HashMap,"I am using HashMap.containsValue() instead of using a HashSet.contains() which surely has a complexity of O(1) because, I have to account for the scenario where my input might contain identical values."
16757359,1,0,5,java.util.HashMap,My above solution's time complexity depends on the complexity of HashMap.containsValue() method.
16757380,2,0,10,java.util.HashMap,"The HashMap essentially is a key-value store, which can access it's keys with a complexity of O(1)."
16757380,2,0,10,java.util.HashMap,"Checking a value, however, there's nothing the HashMap can do but check all values and see if they're equal to the one you're searching."
16757380,2,0,10,java.util.HashMap,"Therefore, the complexity is O(n) with n being the number of elements in the HashMap."
16757380,2,0,10,java.util.HashMap,"This means each time you are invoking a method on the HashMap, Java needs to box you primitive values: http://docs.oracle.com/javase/1.5.0/docs/guide/language/autoboxing.html"
16757498,2,0,3,java.util.HashMap,HashMap.containsValue complexity is O(n).
16759445,1,0,3,java.util.HashMap,"So now, each HashMap element is a fixed 2 dimensional integer array, containing tiles."
16759791,2,0,0,java.util.HashMap,"You also don't need to use a HashMap: represent each subtile as a 30x30 array, and store the top left coordinate of the current center subtile."
16763753,1,0,2,java.util.HashMap,"I have read that you can use a HashMap and have an Interface Command, and create a new class for each handler/command that implements Command."
16763753,1,0,2,java.util.HashMap,You'd then create a HashMap and go from there.
16766515,2,0,0,java.util.HashMap,using HashMap would right option only when you wanted to put only the specific letters replacingt the orignal one..
16768499,1,0,0,java.util.HashMap,"I would like to store immediatly the results into a Java structure, like an HashMap for instance."
16769490,2,0,1,java.util.HashMap,You could add all the strings into a HashMap and check for each new String if it is are already in there.
16772349,2,0,1,java.util.HashMap,"This seems like a job, far better suited to a HashMap."
16782718,2,0,5,java.util.HashMap,"For example, HashMap and Hashtable use equals as part of their algorithms."
16777513,1,0,0,java.util.HashMap,"Cost of execution of HashMap, LinkedHashMap and ConcurrentHashMap in creation of Map and in fetching of value on the basis of particular key."
16777513,1,0,0,java.util.HashMap,"Please explain the two scenario if I choose LinkedHashMap, HashMap or ConcurrentHashMap ."
16777569,2,0,0,java.util.HashMap,I would go for HashMap which will reduce synchronization cost.
16777584,2,0,2,java.util.HashMap,"Apart from the fact that the only answer that matters here is the one given by profiling and benchmarking the code, I don't see how you could compare these three data structures since they're made for different purposes:  HashMap is the standard, non thread safe ConcurrentHashMap is the one you will be use in a multi threaded environment (read: slower) LinkedHashMap is a normal map which provides a way to iterate over it (following insertion order)  So, theoretically the fastest is the HashMap, since it doesn't have the overhead of the other two, but the comparison here doesn't mean anything."
16783888,2,0,1,java.util.HashMap,"In your case , the HashMap will have an entry with key as GGG and value as a List returned by your getabc method."
16784093,1,0,5,java.util.HashMap,Why cannot Google JSON library properly serialize this HashMap?
16784093,1,0,5,java.util.HashMap,Why is the second HashMap correctly serialized but not the first HashMap?
16785322,2,0,1,java.util.HashMap,"each date has some stable pattern, like \d\d (Jan|Feb|...) 20\d\d so you can extract those dates using regular expressions (Pattern class in Java) then you can use HashMap to increment value of some pair where key is the found date."
16791308,1,0,1,java.util.HashMap,"What is the dirrefence between new HashMap() and new HashMap<Object, Object>() ?"
16793310,1,0,1,java.util.HashMap,conf[0] = new HashMap();.
16793530,2,0,0,java.util.HashMap,"Map<String,Object>[] config = new HashMap<String,Object>[10]; would give the compile error:  Cannot create a generic array of HashMap You can however use Array.newInstance see answers to this SO question"
16801038,2,0,0,java.util.HashMap,It could be that the implementation of HashMap (e.g.
16799322,2,0,0,java.util.HashMap,if you are loading HashMap from other thread it might be still null at the point of using it.
16804864,2,0,2,java.util.HashMap,A concrete implementation is the HashMap
16804858,2,0,0,java.util.HashMap,Here take a look at HashMaps http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html I think that is what you're looking for
16809568,2,0,1,java.util.HashMap,After compilation to .class we are left with raw types (Map and HashMap) with no generic type parameters plus automatic type casting of keys and values.
16815225,2,1,1,java.util.HashMap,I also recommend use HashMap instead of list.
16814787,1,0,0,java.util.HashMap,I expect every next element put into HashMap with bigger order.
16814787,1,0,0,java.util.HashMap,"private void addComponents(HashMap infos,             List components, Integer order, FacesContext context){ code. }"
16814787,1,0,0,java.util.HashMap,"at the same the following method works nice  private int addComponents(HashMap infos,             List components, Integer order, FacesContext context             ) {         if ((components == null) || components.isEmpty())             return order; code. }"
16815616,2,0,1,java.util.HashMap,"Here is the example for ArrayList<HashMap<String,Object>> rendered in jsp trhough jstl click here for example Googled it out and you'll found a lots of example."
23795519,2,0,0,java.util.HashMap,"That said, HashMap is the most performant of the standard Map implementations, provided that your only requirement is the protection against duplicate keys."
16818946,2,0,0,java.util.HashMap,"If you only have one year per line, use a HashMap<String, String> with the year as key and the  team as value."
16818946,2,0,0,java.util.HashMap,"If you have many lines with identical years, use a HashMap<String, ArrayList<String>> with the year as key and the team*s* as values."
16819368,1,0,1,java.util.HashMap,HashMap in Java.
16819779,2,0,0,java.util.HashMap,if you inspect in the source code of HashMap.put method.
16819403,2,0,3,java.util.HashMap,"You need to override the equals() and hashCode() method in your MyInt class , so that HashMap can comprehend new MyInt(1).equals(new MyInt(1)) is true."
16819407,2,1,10,java.util.HashMap,"HashMap, as the name implies, groups the keys into buckets based on the keys' hashcode()."
16819954,1,0,0,java.util.HashMap,"Iterate HashMap one full time, with no repeats."
16820198,1,0,2,java.util.HashMap,"I am not allowed to use HashMap, ArrayList, collections and Open CSV according to my teacher."
16830123,2,0,0,java.util.HashMap,"The answer is ""no"", because HashMap itself is not threadsafe."
16837326,2,0,0,java.util.HashMap,"And the output is invariably:  Thread 1: started Thread 2: started Exception in thread ""Thread-1""   java.util.ConcurrentModificationException     at   java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)    at   java.util.HashMap$KeyIterator.next(HashMap.java:828)  at   Test$1.findTruckParts(Test.java:19)   at Test$1.run(Test.java:12)     at   java.lang.Thread.run(Thread.java:680) Thread 2: done  So even though the findTruckParts() method creates its own map to return, if it has to look into the source map and some other thread is modifying its keys/values, there will be a problem."
16831124,1,0,0,java.util.HashMap,How would I go about finding the position of all the leaves in this tree and output them in an array or HashMap?
16848960,2,0,0,java.util.HashMap,"That's some other Map and not HashMap, or you have some weird degenerate HashMap which doesn't support null keys."
16848960,2,0,0,java.util.HashMap,"Map.get() can NPE on null keys, but the implementation of HashMap doesn't."
16835944,1,0,1,java.util.HashMap,(I have modified response and convert response into HashMap) I have created two test accounts in Paypal Sandbox  One is Business Account and one is Personal Account.All has opening Balance of 5000 USD.
16836370,2,1,3,java.util.HashMap,part 1 One example .. you can use Integer as the key of HashMap but you can't use int.
16837644,2,0,0,java.util.HashMap,The reason - it is very likely that somewhere in the HashMap code there will be: code.
16839182,1,0,7,java.util.HashMap,Can a java array be used as a HashMap key.
16839182,1,0,7,java.util.HashMap,If a HashMap's key is a string array: code.
16839191,2,1,10,java.util.HashMap,A HashMap compares keys using equals() and two arrays in Java are equal only if they are the same object.
16839313,2,0,1,java.util.HashMap,You cannot use a plain Java Array as a key in a HashMap.
16841949,2,0,3,java.util.HashMap,"Just store them in a HashMap<String,Book> and use the Book's name as your key."
16841949,2,0,3,java.util.HashMap,That doesn't mean that you should use HashMap's for everything.
16844680,1,0,2,java.util.HashMap,Having an issue trying to marshall into JSON a HashMap nested in a List using Jersey 1.11.
16850476,2,0,2,java.util.HashMap,I think a HashMap of ArrayLists might be convenient for your purposes: code.
16850476,2,0,2,java.util.HashMap,"To access the list of records of a particular type, you'd just call HashMap.get(): code."
16848973,2,0,2,java.util.HashMap,The hash code is used to identify one Object from another when it is used as a key in the HashMap.
16850204,1,0,3,java.util.HashMap,How to send a HashMap from Java to C via JNI.
16850204,1,0,3,java.util.HashMap,I have an Object that has a HashMap field.
16864286,2,0,5,java.util.HashMap,"You ask how to access the HashMap (in your provided code, Map) field?"
16852820,1,0,1,java.util.HashMap,"I want to put validation method and a HashMap for error messages inside the DTO classes for validating FORM data, something similar to Putting validation method and hashmap into DTO."
16857957,2,1,1,java.util.HashMap,"You can use two HashMap<yourFieldName, yourFieldValue> instead of two Arrays / Lists / Sets of Strings (or multiple random Strings); Then you need a method to compare each value of both maps by their keys; The result will be an HashMap<String,Boolean> containing the name of each field key, and true if the value is equal in both maps, while false if it is different."
16859187,1,0,0,java.util.HashMap,I want to fetch both strings from HashMap.
16860354,2,1,5,java.util.HashMap,"Use a HashMap<Foo, Integer>; just be sure to override hashcode and equals in Foo (equals should be easy enough, see this article for an example of overriding hashcode)"
16863263,1,0,1,java.util.HashMap,elements of HashMap are in the wrong order.
16863263,1,0,1,java.util.HashMap,I need to read two columns (both String) from a file and keep the values of the first column in a HashMap where the Integer is the counter.
16863263,1,0,1,java.util.HashMap,"The problem is when I print The HashMap values, I found the values are in different order of that in the origianl file code."
16863282,2,0,6,java.util.HashMap,HashMap is not ordered.
16863300,2,0,2,java.util.HashMap,By default HashMap's iterator doesn't guarantee insertion order.
16863433,2,0,2,java.util.HashMap,HashMap is not an ordered Collection.
16865933,1,0,1,java.util.HashMap,"EDIT: userDict is HashMap (String, Object)"
16866619,1,0,0,java.util.HashMap,"It looks like the way to go is HashMap but I will have to:   if I want only one HashMap, I will have two entries for each object, one with key attr1 and one with key attr2 have two HashMap objects, one with key attr1 and the other with key attr2 and based on what I am searching for, use the appropriate Map."
16868232,2,0,4,java.util.HashMap,"Although theoretically the implementation of HashMap doesn't need to use an if, it actually does."
16868941,1,0,28,java.util.HashMap,It is a google interview question and I find most answers online using HashMap or similar data structure.
16874890,2,0,1,java.util.HashMap,"the HashMap#get() method will return null both for a missing key and for a null value), but there is much more to it than just nulls - any special values that can be returned should be, I think, on the interface."
16874954,2,0,0,java.util.HashMap,"From the official documentation:  This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
16876616,1,0,2,java.util.HashMap,Java - How to check if there is a value inside an ArrayList that is a value of a key in a HashMap?
16876616,1,0,2,java.util.HashMap,"There is this HashMap called ""matrix"", and it has lots of keys."
16876616,1,0,2,java.util.HashMap,"Considering this, I can't find a way to test whether there is a specic value inside the ArrayList-Values, because if I pass an String argument to the method "".containsValue()"" of the HashMap, the method will find an ArrayList object and the test will be false."
16876700,2,0,1,java.util.HashMap,"Change to  HashMap<Key, HashMap<Value in ArrayList at index[i], Value in ArrayList at index[i]>>."
16886509,2,0,0,java.util.HashMap,Have you considered having your Shape class declare a getAttributes method which could return a HashMap with attribute names as keys to access the corresponding values?
16879680,1,0,3,java.util.HashMap,"Does anyone know how Java's HashMap class circumvents this issue, and/or how I can?"
16879784,2,1,2,java.util.HashMap,"Like all core API classes, the source for HashMap is available so you should feel free to look over it if you want to understand its inner workings better."
16880006,2,0,2,java.util.HashMap,"Typically in Java you would represent each race with a HashMap (or a data structure containing a HashMap), there the map represents the relationship between the ""Attribute ID"" and the ""Default Value""."
16885157,2,0,1,java.util.HashMap,"If you want the output to be sorted lexicographicaly, use a TreeMap instead of HashMap and consider using Character instead of String if all you have are single characters."
16888113,1,0,0,java.util.HashMap,"I have two HashMap: map1<Key1,Value1> and map2<Key2,Value2>, and one ArrayList<Value3>, with Key1, Key2, Value1, Value2, Value3 all String, Is it possible to extract Key2 from map2 and Value3 from my List and put them in map1?"
16897486,1,0,12,java.util.HashMap,What is the difference between a Pair Class and a HashMap.
16897486,1,0,12,java.util.HashMap,What is the difference between a Pair Class and a HashMap.
16897568,2,0,0,java.util.HashMap,A HashMap is a structure where you can store several key/value pairs.
17078359,2,1,2,java.util.HashMap,"Before I talk about the difference between a Pair and a HashMap, let me tell you why that's not really the question you want answered."
17078359,2,1,2,java.util.HashMap,To your original question between a Pair and a HashMap.
17078359,2,1,2,java.util.HashMap,A HashMap is the collection usually used to store many key/value pairs.
17078359,2,1,2,java.util.HashMap,Here they are using a List where they should probably be using the HashMap.
17154419,2,0,1,java.util.HashMap,The Pair class can be compared to the Map.Entry of a HashMap.
17154419,2,0,1,java.util.HashMap,A HashMap may contain multiple key/value pairs stored and looked up efficiently by the key.
17062856,2,0,6,java.util.HashMap,"I think that the question you're asking is: what is the difference between List<Pair<T,S>> and HashMap<T,S>."
16901263,1,0,1,java.util.HashMap,assuming there is a class Entry (also extending UnicastRemoteObject) and the HashMap is filled in the constructor.
16904825,1,0,0,java.util.HashMap,"Each element in the XML file will correspond to a node on the tree, but now I'm thinking about how I should store the attributes so that I can  Display them in a table   Modify their values  I've thought of using a HashMap, where the keys are the attribute name and the values are the corresponding value of that attribute."
16904915,2,1,1,java.util.HashMap,You can use LinkedHashMap instead of HashMap.
16907644,2,0,0,java.util.HashMap,HashMap.put() will replace whatever element you've already inserted into the hash map.
16907756,1,0,0,java.util.HashMap,create Views from HashMap inside ArrayList.
16907756,1,0,0,java.util.HashMap,I'm getting values from a JSON response and storing them inside a HashMap then adding the HashMap to an ArrayList.
16907756,1,0,0,java.util.HashMap,"Now in onPostExecute() I need to loop through my ArrayList named ""infoList"" and then get the HashMap values."
16920368,2,1,1,java.util.HashMap,"Map<User, HttpSession> logggedUserMap = new HashMap<User, HttpSession>(); Add entry inside while user logged in and remove it when logout."
16921012,1,0,3,java.util.HashMap,Gson handles case when synchronized HashMap as class member.
16921012,1,0,3,java.util.HashMap,I have a case where synchronized HashMap as class member.
16925688,2,0,4,java.util.HashMap,"This is in contrast to, say, a SortedSet where the items will not be ordered in the order you put them in, they will be sorted according to whatever sort criteria you put, or a HashMap, where they might show up in any order at all, depending on the hash function."
16934897,2,1,1,java.util.HashMap,This is what the standard Java HashMap implementation does ... at least in the versions I've looked at.
16928672,1,0,1,java.util.HashMap,Views from HashMap not being named correctly.
16929187,2,0,0,java.util.HashMap,You dont call them from HashMap correctly  code.
16932115,2,0,0,java.util.HashMap,HashSet Source:  seems the elements are stored as keys in a HashMap (which requires unique keys) and the put method in HashMap checks the following: code.
16932572,2,0,0,java.util.HashMap,In Java you can use a HashMap to keep the count for each String: code.
16936008,2,1,2,java.util.HashMap,"If you're not sure about how parameters(and their types) you could get, try to store them in a Collection (i.e an HashMap<Long, Object> for example)."
16937311,2,0,1,java.util.HashMap,HashMap itself is Serializable.
16939982,2,0,1,java.util.HashMap,"With a HashMap the keys are not stored as a list, so this will be faster and you won't have to use a function to iterate the container."
16941020,1,0,1,java.util.HashMap,ListNames could be null (there will be at least one) UPDATE: In code I would write something like this (prob change to HashMap) code.
16945759,1,0,1,java.util.HashMap,"After finishing, lines are parsed according to special logic and their parts are put as keys into several HashMap<String, Integer>."
16946024,2,0,3,java.util.HashMap,"You said:  After finishing, lines are parsed according to special logic and their parts are put as keys into several HashMap."
16946062,2,0,0,java.util.HashMap,"You say that some information is stored in HashMap, so Garbage Collector dont temove them."
16946074,2,0,1,java.util.HashMap,How you build your ArrayList and HashMap is critical.
16949543,1,0,0,java.util.HashMap,HashMap Vs Treemap.
16949543,1,0,0,java.util.HashMap,"I have a code that works if I use a HashMap, but doesn't if I use a TreeMap instead,  Can anybody tell why Is that ?"
16957032,1,0,1,java.util.HashMap,"where getpars() should return an HashMap with name,value pairs."
16957244,2,0,1,java.util.HashMap,"Think hard about whether or not you need all this flexibility, and consider using a few overloaded methods or possibly passing a HashMap to the function instead."
16958115,1,0,0,java.util.HashMap,"I'm reading a json object and to setting them as key value pair into a HashMap, things were fine till now."
16959832,2,1,4,java.util.HashMap,"Your method returns void, so insertion order does not matter; just use a HashMap) (also also, as suggested, when building the map, initialize its size to that of the collection you are checking)"
16970694,1,0,0,java.util.HashMap,I have a HashMap that looks more or less like this:    code.
16970694,1,0,0,java.util.HashMap,The timestamps in the HashMap can be considered starting times.
16970767,2,1,6,java.util.HashMap,"A HashMap is not ordered, so first you should use a TreeMap, for example."
16974479,1,0,0,java.util.HashMap,Hardcodes HashMap in Spring Controller.
16974479,1,0,0,java.util.HashMap,I am new to Spring development and is just exploring a bit.When I use a hardcoded HashMap in a controller it errors out code. }
16981132,2,0,2,java.util.HashMap,EnumMap is not any kind of HashMap that would use hashing internally to put and get data.
16980505,2,0,1,java.util.HashMap,"If you mean advantage of TreeMap over HashMap, there's none."
16980505,2,0,1,java.util.HashMap,In fact HashMap has an advantage over TreeMap - it's faster.
16985600,2,0,0,java.util.HashMap,I'd recommend using a HashMap.
16985600,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html HashMaps are associative tables that pair keys to values.
16989005,1,0,4,java.util.HashMap,I need a HashMap or simpy a Map with a fixed number of elements (n) working like a FIFO queue.
16999611,1,0,17,java.util.HashMap,"HashMap.this.clear() what does this mean, how does this work."
16999611,1,0,17,java.util.HashMap,In HashMap class there is an inner class KeySet whose instance is returned by the HashMap's instance method keySet().
16999611,1,0,17,java.util.HashMap,In this logically it should be an HashMap instance.
16999631,2,0,3,java.util.HashMap,"HashMap.this.clear(); calls the current instance of HashMap, you mentioned that its calling from a InnerClass, so that's how its referencing the Outter class."
16999633,2,1,18,java.util.HashMap,"Essentially, the call is made to the clear method of the HashMap class."
16999633,2,1,18,java.util.HashMap,"Note that since the method of the inner class is called clear as well, the call without HashMap.this would have been directed to the clear() inside the inner class, causing infinite recursion."
17009128,1,0,0,java.util.HashMap,BasicDBObject.java: (w/c is a HashMap) code.
17009547,1,0,0,java.util.HashMap,"I am developing a http web server in java using socket which gets post header InputStream and then I processed the header with some String split by the header 'boundary' and '\r\n' and got all Headers, Cookies in HashMap(s) and got the contents of the file in a String and saved that String to a file on the server."
17011522,2,0,0,java.util.HashMap,maybe you can use a HashMap with code as key and book as item.
17015823,2,1,1,java.util.HashMap,Fields within objects or HashMap order isn't guaranteed.
17015548,2,1,2,java.util.HashMap,"But keys in a HashMap, which you use, rely heavily on .equals() and .hashCode()."
17017375,2,0,3,java.util.HashMap,Use LinkedHashMap instead of HashMap.
17017375,2,0,3,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
17017375,2,0,3,java.util.HashMap,"Not sure how have you designed your app, but I recommend you to program oriented to interfaces (Map, List, etc...) instead of classes (HashMap, ArrayList, etc...)."
17017652,1,0,2,java.util.HashMap,"I have a file x-dao.xml, which contains a SELECT query, and a corresponding ResultMap, of type HashMap."
17024050,1,0,5,java.util.HashMap,"But Eclipse MOXy, the JAXB impl I use, ended up with a ClassCastException - ""can't convert HashMap to Collection""."
17027845,2,1,27,java.util.HashMap,"The problem you will have is with collections where unicity of elements is calculated according to .equals(), for instance keys in a HashMap."
17027814,2,0,2,java.util.HashMap,EDIT: Try using your object as key in HashMap[edited after comment from joachim-sauer] and you will start facing trouble.
17027946,1,0,2,java.util.HashMap,HashMap and garbage collection: do I need to call clear() before variable re-assignment?
17027962,2,1,9,java.util.HashMap,As long as nothing else has a reference to that HashMap it (and all of its entries) will become eligible for garbage collection as soon as you change this.configuration to another value.
17028033,2,0,2,java.util.HashMap,The original HashMap instance will be lost anyway.
17042358,1,0,0,java.util.HashMap,"Based on that above question, I am expecting functionality like below:  getTextBoxIds() - It will list of the all the text box Ids as the HashMap() ids as the key, and value is the TextBox value."
17044782,2,1,1,java.util.HashMap,"I will brief about HashMap:     HashMap uses key value pair to store the data, you have key based on which the value is stored."
17044782,2,1,1,java.util.HashMap,To decide which data structure to use: When to use HashMap over LinkedList or ArrayList and vice-versa I hope this will solve the problem.
17046927,2,1,5,java.util.HashMap,"Each ""line"" of important information should be represented by a Java Object, not by a HashMap as some people have suggested in the comments."
17046912,2,1,4,java.util.HashMap,"You could use a HashMap<Integer, String>."
17050840,1,0,0,java.util.HashMap,"on the start of my program, I search through some files to construct new MyObject objects then put them in the HashMap and that is the only time a new MyObject should be created."
17050840,1,0,0,java.util.HashMap,"So throughout the program, I get the objects in the HashMap by getting the value that matches the String key, and once I have that object, I may do things to it using the different setter methods like below: code."
17050840,1,0,0,java.util.HashMap,"object1.setVar1(""This is the objects new var1 string value""); And that code above should change the string value in the object that is in the HashMap under the key ""anObject""."
17050840,1,0,0,java.util.HashMap,"like say I had a list as one of the values in the object, and if I got that object from the HashMap, and called something like: code."
17050840,1,0,0,java.util.HashMap,"I am wondering this because since I called:  MyObject object1 = MyObjects.get(""anObject""); it seems like it could be creating a new instance of that class or just copying it over and that any changes to that object1 object wont be made to the object in the HashMap."
17050840,1,0,0,java.util.HashMap,Am I correct that the changes made to any values to the object gotten form the HashMap will be put back to the object in the HashMap?
17050899,2,0,1,java.util.HashMap,"You are correct: any changes made to the internals of the object that you retrieve from the HashMap will be changed in the HashMap, as when you retrieve an object from any data structure, you are actually getting a pointer to an object, so the HashMap and the pointer you get back both point to the same object data."
17050899,2,0,1,java.util.HashMap,or if you reconstruct the object you have received from the HashMap.
17051772,1,0,4,java.util.HashMap,How to freeze a HashMap to prevent further changes?
17051772,1,0,4,java.util.HashMap,I have a data structure (I mentioned a HashMap but it could be a Set or a List also) which I initially populate: code.
17051832,2,0,0,java.util.HashMap,Create an immutable HashMap: code.
17057738,2,0,0,java.util.HashMap,I would suggest you to create one class thtat extend the HashMap and implement the methods to handle both maps.
17058629,2,0,0,java.util.HashMap,"Alternatively, you could write your own ... starting with the standard HashMap code."
17082237,2,0,1,java.util.HashMap,"If you want to also access it as a list, you should prefer LinkedHashMap instead of HashMap (don't use unless you think you will require both, as it is slightly more expensive, but it maintains insertion order)."
17062539,1,0,3,java.util.HashMap,"This class only has a few members: HashMap fields for storing resources, and getImage(reference), etc."
17064722,2,0,2,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode(), which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
17068747,1,0,0,java.util.HashMap,"Now, in memory, I have a map (let's say Java HashMap) that contains a million (ProductID, AccountID) pairs."
17069569,1,0,1,java.util.HashMap,"Additionally, if I don't want the HashMap filling up with unused locks, I would need a more complex approach like the following: code."
17070184,1,0,3,java.util.HashMap,I have a strange issue with HashMap.
17070215,2,1,15,java.util.HashMap,Sounds like you are using this HashMap in a threaded environment without proper synchronization.
17070215,2,1,15,java.util.HashMap,You are hitting a problem where the HashMap memory is corrupted and a thread is most likely spinning because of this.
17070215,2,1,15,java.util.HashMap,I would suggest switching to use ConcurrentHashMap instead or wrap your HashMap with Collections.synchronizedMap(...).
17070215,2,1,15,java.util.HashMap,"If one thread updates the HashMap in its memory, other threads won't necessarily get the same view of the map's storage."
17070215,2,1,15,java.util.HashMap,This isn't a problem until a thread gets partial memory update -- where some of the HashMap memory has been updated and other portions have not.
17070215,2,1,15,java.util.HashMap,If you are using a pre-populated HashMap that is only going to be read by your threads and never updated then it may be ok.
17070215,2,1,15,java.util.HashMap,I depends highly on how each of the threads got the reference to the new HashMap.
17070215,2,1,15,java.util.HashMap,If the HashMap was constructed and then populated and passed into the threads via their constructor (or before they were started) then you are good.
17081934,2,0,0,java.util.HashMap,"CHM does not return a HashMap$EntryIterator, it returns a ConcurrentHashMap$EntryIterator and there's no way for that to throw the stack you describe here."
17089482,2,0,0,java.util.HashMap,"This is still an interesting question though, and I agree that I should use a HashMap."
17072837,1,0,0,java.util.HashMap,Concurrently modifying/removing entry from HashMap without iterator.
17078395,1,0,3,java.util.HashMap,Using SparseIntArray instead of HashMap  with putSeriazable.
17078395,1,0,3,java.util.HashMap,When I use a HashMap with Integer key and data values  in android I get a message in eclipse: code.
17078395,1,0,3,java.util.HashMap,1) How important is using SparseIntArray() instead of the HashMap?
17078459,2,1,15,java.util.HashMap,1) How important is using SparseIntArray() instead of the HashMap ?
17078459,2,1,15,java.util.HashMap,This means the following:  Memory usage for a SparseIntArray will be roughly a factor of 10 less that for an equivalent HashMap.
17078459,2,1,15,java.util.HashMap,"This is due to a combination of things:  the hash table array holds roughly 1 reference per entry (depending on how full the table is ...), the keys and values have to be ""boxed"" as Integer objects in a HashMap, and each entry in a HashMap requires a ""node"" object that is fairly heavy weight - 4 fields in the standard implementation."
17078459,2,1,15,java.util.HashMap,Lookup (i.e. get) is O(logN) compared with O(1) for a HashMap.
17078459,2,1,15,java.util.HashMap,Random insertion is O(N) compared with O(1) for a HashMap.
17078461,2,0,1,java.util.HashMap,"The problem with using a HashMap<Integer, Integer> is that every key and value needs to be boxed."
17088367,2,0,0,java.util.HashMap,"Anyways, you could imitate something like this by using the LinkedHashMap implementation of the Map interface, which remembers the insertion order (unlinke the HashMap)."
17091887,2,1,1,java.util.HashMap,In the best case (hashes differ) the test will only take as much time as the hash lookup (in a DB or HashMap or whatever you use).
17091329,2,0,1,java.util.HashMap,"Parametrize your map: use HashMap<String, Integer> instead of HashMap: code."
17091329,2,0,1,java.util.HashMap,Also usually you don't declare you variables as concrete implementation like HashMap but rather use generic Map interface: code.
17093800,2,0,0,java.util.HashMap,So you have a HashMap which does not specify what types of objects are stored inside.
17093800,2,0,0,java.util.HashMap,"Define hashmap as HashMap<String,Integer> hm = new HashMap<String,Integer>(); Otherwise, everything stored inside will be considered as just Object and an Object does not have an intValue method."
17092150,2,0,0,java.util.HashMap,If you really want to store any meaningful value against your key then you should use HashMap.
17094541,1,0,2,java.util.HashMap,I've got a HashMap of Game objects.
17094541,1,0,2,java.util.HashMap,Each Game object contains a HashMap of Players and a list of Moves.
17094594,2,1,3,java.util.HashMap,"If you are referring Players HashMap from Game object and when your game is over, and you are removing it from the map, players map will also be removed because it was referenced from game."
17095083,1,0,5,java.util.HashMap,Java How to return top 10 items based on value in a HashMap.
17095083,1,0,5,java.util.HashMap,"I have found examples using Guava for sorting, but the sort appears to return a HashMap sorted by key."
17095083,1,0,5,java.util.HashMap,"The end result would be something like:  Top 10 Numbers: ['27', '11', '5', '8', '16', '25', '1', '24', '32',   '20']  To clarify, in Java I have successfully created a HashMap, I have successfully examined numbers and increased the values of the key,value pair."
17096793,2,0,0,java.util.HashMap,"Guava Multiset is a great fit for your use case, and would nicely replace your HashMap."
17095160,2,0,0,java.util.HashMap,"The values in the map are not actually sorted, because the HashMap is not sorted at all (it stores the values in the buckets based on the hashCode of the key)."
17097751,1,0,0,java.util.HashMap,"What I wanted to do was store the cursor information with private ArrayList<HashMap<String, String>> list; then pass it over to the calender fragment to be used there to show/hide images on that date."
17099092,1,0,3,java.util.HashMap,Sorting by values in HashMap class using Java.
17099092,1,0,3,java.util.HashMap,I'm trying to get results HashMap sorted by value.
17099092,1,0,3,java.util.HashMap,This is HashMap's keys and values: code.
17099133,2,0,2,java.util.HashMap,"You can sort the entries as follows (but note this won't sort the map itself, and also HashMap cannot be sorted) - code."
17102380,1,0,0,java.util.HashMap,How can I call keySet() method of HashMap in jstl?
17102380,1,0,0,java.util.HashMap,I am passing a HashMap to my jsp.
17104427,2,0,0,java.util.HashMap,HashSet is a data structure which uses HashMap internally.
17104427,2,0,0,java.util.HashMap,In a HashMap objects are stored in key value pairs.
17104427,2,0,0,java.util.HashMap,"According to the JDK documentation :  This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
17104427,2,0,0,java.util.HashMap,"Iterating over this set   requires time proportional to the sum of the HashSet instance's size   (the number of elements) plus the ""capacity"" of the backing HashMap   instance (the number of buckets)."
17104618,2,0,0,java.util.HashMap,"And even in the case that intializeMap makes some asynchronous work, as you have new HashMap<>(), tempMap cannot be null, may be not fully loaded with the values added by initalizeMap (I repeat only if initalizeMap starts a new Thread) but no null."
17108025,2,0,0,java.util.HashMap,Then HashSet and HashMap work better because they distibute according to the hash value.
17110162,2,0,0,java.util.HashMap,Use a HashMap.
17112504,1,0,1,java.util.HashMap,"a standard HashMap, performing a put() operation on it) will not establish such a relationship."
17113097,2,0,1,java.util.HashMap,"a standard HashMap, performing a put() operation on it) will not establish such a relationship."
17113097,2,0,1,java.util.HashMap,"The issue in your case is that even though there is a happens-before when you access the HashMap field, there is no memory synchronization or mutex locking when you are actually operating on the HashMap."
17113097,2,0,1,java.util.HashMap,So multiple threads can see different versions of the same HashMap and can create a corrupted data structure depending on race conditions.
17112561,2,1,3,java.util.HashMap,"No, putting an element to a volatile HashMap will not create a happens-before relationship, not even with a ConcurrentHashMap."
17124441,2,0,0,java.util.HashMap,If the items have a unique property (name or id or row number or any other unique identifier) I recommend using a HashMap with a wrapper around the item.
17126939,2,0,0,java.util.HashMap,"You can put the sequences in a HashMap, and then check whether that sequence exists in a HashMap or not, by the help of contains() method in HashMap."
17126939,2,0,0,java.util.HashMap,"As there is BigO( N ) for searching in HashMap, so the operation is not too much costly."
17130454,1,0,1,java.util.HashMap,"ArrayList is not necessary, if a HashMap or LinkedList can be used to do things better, that's just as good."
17131554,1,0,3,java.util.HashMap,"It seems I've created exactly what I want just fine, but it's extremely awkward and tedious to work with, and also it behaves in mysterious ways (for one thing, even though the ""ed3Dcnt.put()"" inserted a HashMap, the corresponding "".get()"" does not return a HashMap, but rather a Collection, which creates a whole new set of problems.)"
17131554,1,0,3,java.util.HashMap,"If there isn't a clearly better design choice, how do I use the Collection that the .get() returns, when all I want is the single HashMap that I put in that slot?"
17131993,2,0,3,java.util.HashMap,"the corresponding "".get()"" does not return a HashMap, but rather a   Collection  This is because you used a generic 'Multimap' interface."
17131993,2,0,3,java.util.HashMap,"All that said, you can see that the outer HashMap is kind of redundant and the whole thing still could be improved (though it's good enough, I think)."
17131993,2,0,3,java.util.HashMap,"To improve it more, you can try of these:  Use an array of Multiset instead of a HashMap."
17132032,1,0,0,java.util.HashMap,Arraylist values not coming in a HashMap.
17132032,1,0,0,java.util.HashMap,I have a HashMap as below: code.
17132552,2,0,1,java.util.HashMap,"Make sure HashMap is of type HashMap<String,ArrayList<String>>"
17132646,2,0,0,java.util.HashMap,"Try strengthening your signature by only accepting HashMap<String, ArrayList<String>> as inputMap."
17132152,2,0,0,java.util.HashMap,"Replace: public static  submitService(HashMap<'String,ArrayList<'String>> inputMap) throws Exception Looking at the exception, its sure that the parameter passed does not have arraylist of string.Looks like it might be ArrayList<'Object>(with long value present in the list which eventually is casted in String) or Arraylist<'Long>."
17133440,1,0,7,java.util.HashMap,The list that I want to make is sparse; the indexes are spread - that's why I was thinking about HashMap and not ArrayList.
17134502,2,1,2,java.util.HashMap,What you are doing (in effect) is to use HashMap to represent a sparse array.
17134502,2,1,2,java.util.HashMap,"If the array is sparse enough, then you will save memory by using a HashMap instead of a simple array."
17134502,2,1,2,java.util.HashMap,"However compared to a non-sparse array, a HashMap uses roughly an order of magnitude more memory than an array."
17134502,2,1,2,java.util.HashMap,"On top of that, the get and put operations on a HashMap are roughly an order of magnitude slower than indexing a simple array."
17134502,2,1,2,java.util.HashMap,"Also, depending on the size and sparseness of the array, there are representations that use significantly less space than a HashMap (e.g."
17133800,2,0,4,java.util.HashMap,"Your questions is very generic, and from details you have specified it seems both HashMap and ArrayList fit your requirement and you are only bothered about performance."
17133800,2,0,4,java.util.HashMap,Performance has various aspects:  If your data is contiguous or less spread[i.e integers are more or less in sequence] then i would go for ArrayList as cost of insertion is less as compared to HashMap.
17133800,2,0,4,java.util.HashMap,If your data has lots of spread or if you are going to perform lots of deleteion also along with insertion then i would go for HashMap.
17133800,2,0,4,java.util.HashMap,EDIT: If data has lots of spread then HashMap is the way to go.
17133800,2,0,4,java.util.HashMap,"HashMap cost of insertion is higher than Array but then as you are concerened about RAM , you should go with HashMap."
17137981,2,0,1,java.util.HashMap,It seems that ParseCloud.callFunction(...) returns a HashMap not a JSONObject (Did it crash when you set the java variable as Object?).
17137981,2,0,1,java.util.HashMap,One option is to change the variable type of response from JSONObject to HashMap and then iterate over the map and build the JSONObject manually with the key-value pairs of the map...
17137981,2,0,1,java.util.HashMap,"Here is an example of how to iterate over a hashmap: Java: iterate through HashMap if it is not necessary to make the JSONObject, you can bypass the JSONObject and use the values as you wish."
17138426,1,0,0,java.util.HashMap,There's a HashMap: code.
17138426,1,0,0,java.util.HashMap,"As you can see, the outer loop fills the keyRow with the strings of the keySet() of the HashMap while lefting behind an empty cell in between (It gets incremented by 2)."
17144000,1,0,2,java.util.HashMap,"To summarize: class file was moved to another directory/package (differing by one level - see the package names), imports were added, a parameter was changed in the method that is declared and implemented here, a linebreak was removed in the method header, a string was changed inside the method, the HashMap instantiation was changed to use diamond notation, the return value in g() was changed."
17146275,2,0,0,java.util.HashMap,"Insert into hashmap: HashMap  peopleMap = new Hashmap..... peopleMap.put(person.name, person); //(or whatever you want to track) This sets the key to th persons name and the value to person."
17151611,1,0,2,java.util.HashMap,How to replace HashMap with an array?
17151611,1,0,2,java.util.HashMap,Making it with HashMap is quite simple: code.
17151611,1,0,2,java.util.HashMap,But is there any way to make it without HashMap only using arrays of objects?
17151841,2,0,1,java.util.HashMap,"This much-much slower than using HashMap, but it should work: Let's say, you sure that no word occurs in your text more than N times (as a upper bound you can choose total number of words in text)."
17151685,2,0,3,java.util.HashMap,There's already a method to do it for you in HashMap: entrySet() http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#entrySet()
17153725,1,0,0,java.util.HashMap,Also the 'children' variable you see is a HashMap and this function is inside the TrieNode class so keep that in mind.
17155869,2,1,6,java.util.HashMap,I don't know what the clear() function is doing inside  It is calling the clear() method of HashMap table that it is using internally.
17155869,2,1,6,java.util.HashMap,Within HashMap the clear() method is defined as follows: code.
17156326,1,0,1,java.util.HashMap,HashMap get method.
17156326,1,0,1,java.util.HashMap,I understand that the java.util.HashMap can only accept Objects as keys and thus cannot accept a primitive int but instead only accepts Integer objects.
17159502,1,0,1,java.util.HashMap,Is there anything wrong with replacing class attributes with a HashMap?
17159592,1,0,2,java.util.HashMap,"EDIT: @Oscar Lopez I have added the code you specified, and now have the following:     import java.util.HashMap;     import java.util.Map; code."
17159861,2,0,0,java.util.HashMap,"Note how I have declared the map to be the abstract type Map, not the concrete implementation HashMap, in line with good programming practice."
17159624,2,1,1,java.util.HashMap,"Declare the HashMap as an attribute in the Character class, then you can access it like you intend: code."
17159642,2,0,0,java.util.HashMap,"I'm not completely sure what you're trying to do, but I believe the best solution is to make a HashMap that is a member of your Character class."
17159642,2,0,0,java.util.HashMap,"Thus, instead of String mapName, you could have HashMap<String, String> stats or something like that."
17203889,2,1,0,java.util.HashMap,"Notice that the return type is changed from List<EmpModel> to List<<HashMap<String, Object>>, because now the query will return a list of HashMaps."
17203889,2,1,0,java.util.HashMap,"Each HashMap will have a ""this"" entry pointing to a EmpModel, and a ""tm"" entry (the alias we assigned when building the query) pointing to the corresponding TestModel."
17161355,1,0,3,java.util.HashMap,Wrong key being set with HashMap in Intellij Idea.
17161987,2,0,1,java.util.HashMap,"The Set<Clowns> is an HashSet, which is itself backed up by a HashMap."
17161987,2,0,1,java.util.HashMap,"So, basically, when you add an object to the Set<Clowns>, it will invoke HashMap.put()."
17161987,2,0,1,java.util.HashMap,HashMap.put() call the hashCode() method of the provided object.
17171721,1,0,7,java.util.HashMap,What is the collection that HashMap.values() method in Java returns?
17171721,1,0,7,java.util.HashMap,Java SE 6.0 API says values() method in java.util.HashMap returns a Collection type.
17171721,1,0,7,java.util.HashMap,I browsed the source-code of HashMap but couldn't get a clue.
17171930,2,0,3,java.util.HashMap,"In case of HashMap this is HashMap.Values inner class, see HashMap src"
17177597,2,0,0,java.util.HashMap,I used a HashMap incase you have keys and values.
17180942,1,0,0,java.util.HashMap,I am trying to dump to a xml with a HashMap and an ArrayList.
17189250,1,0,1,java.util.HashMap,How to get specific entries from a HashMap in JDOQL?
17189250,1,0,1,java.util.HashMap,How can I use JDOQL to get a specific entry from a HashMap from the following structure: code.
17190303,2,1,0,java.util.HashMap,"You may want to read docs of LinkedList, ArrayList, HashMap and HashSet, TreeMap and TreeSet, which are the most used ADT implementations in Java."
17195733,1,0,3,java.util.HashMap,"If you see the java docs, it has mentioned:   For many JRE implementations and operation mixes, this class will   yield better performance than HashMap (which uses chaining rather than   linear-probing)."
17195864,2,1,3,java.util.HashMap,"For many JRE implementations and operation mixes, this class will yield better performance than HashMap (which uses chaining rather than linear-probing)."
17195864,2,1,3,java.util.HashMap,"As background/clarification, an IdentityHashMap differs from an ordinary HashMap in that two keys are considered equal only if they are physically the same object: identity, rather than equals, is used for key comparison."
17196583,2,0,1,java.util.HashMap,A HashMap is a form of hash table (and HashTable is another).
17196583,2,0,1,java.util.HashMap,"(FWIW, the HashMap and HashTable classes use ""separate chaining with linked lists"", and some other tweaks to optimize average performance.)"
17196583,2,0,1,java.util.HashMap,"It is not a part of the HashMap, so is there an array assosiated to the HashMap?"""
17196583,2,0,1,java.util.HashMap,"In the case of the HashMap class, the hashcode for each key is actually cached in the hash chains."
17196420,2,0,2,java.util.HashMap,"If we take the case of a HashSet (and, ultimately, HashMap), it relies on .equals() and .hashCode(): when adding an item, it first calculates this item's hash code, and according to this hash code, attemps to insert the item into a given bucket."
17196420,2,0,2,java.util.HashMap,"Note that, internally, a HashSet is a HashMap..."
17196696,2,0,1,java.util.HashMap,HashMap is basically implemented internally as an array of Entry[].
17199705,1,0,2,java.util.HashMap,"I have just read and understood how hashing works with HashMap: how it uses a hashtable, makes hashcodes with a hash function etc."
17199742,2,0,1,java.util.HashMap,"In a HashMap the ""value"" is passive: that's something stored at the key; hash maps never look at values; in particular, maps never check values for equality, or compute their hash code."
17199752,2,1,8,java.util.HashMap,"Actually, a HashSet is backed by HashMap that maps all its keys to a single constant object."
17201875,2,1,10,java.util.HashMap,Use a simple HashMap and you won't have the issue.
17201887,2,0,2,java.util.HashMap,However if you use any kind of HashMap you don't need.
17205668,2,0,0,java.util.HashMap,Try using a HashMap with key as your text and value as frequency count.
17206790,1,0,0,java.util.HashMap,http://api.mongodb.org/java/current/com/mongodb/BasicDBObject.html only extends HashMap http://api.mongodb.org/java/current/com/mongodb/RawDBObject.html is readonly
17209260,1,0,27,java.util.HashMap,Converting java.util.Properties To HashMap.
17209260,1,0,27,java.util.HashMap,"java.util.Properties is a implement of Map, And HashMap constructor receive a Map type param."
17209413,2,0,1,java.util.HashMap,"The problem is that Properties implements Map<Object, Object>, whereas the HashMap constructor expects a Map<?"
17209497,2,0,1,java.util.HashMap,this is only because the constructor of HashMap requires an arg of Map generic type and Properties implements Map.
17209326,2,0,0,java.util.HashMap,Properties class basically extends Hashtable  There is no such constructor in HashMap class which takes a properties object and return you a hashmap object.
17209335,2,0,0,java.util.HashMap,"Take a look at the HashMap API, as you see, there's no constructor that accepts a properties value: code."
17211121,1,0,5,java.util.HashMap,"use HashMap to count every item's count, then navigate the map code."
17211121,1,0,5,java.util.HashMap,"Test on a array with 1,600,000 items shows that, the second method cost about 170ms and most all the time is spent on the sort(about 160ms), and the first method cost 200ms even just add all items to the HashMap."
17212380,2,0,1,java.util.HashMap,"Yes, maybe let the HashMap do the work instead of using a nested loop."
17215790,1,0,0,java.util.HashMap,Want to store a HashMap?
17215790,1,0,0,java.util.HashMap,I have a HashMap that has been generated in an activity and I want to store it using something similar to SharedPreferences.
17216448,2,0,1,java.util.HashMap,"I had the same issue in my project, and used Gson for converting the HashMap into a String, saving it into SharedPreferences, and getting it back in another activity."
17220036,1,0,9,java.util.HashMap,"Edit: Thanks to the answers, I've realized this question is actually independent of the HashMap."
17220105,2,0,0,java.util.HashMap,HashMap is not thread safe.
17220105,2,0,0,java.util.HashMap,HashMap with synchronized on the outside.
17220105,2,0,0,java.util.HashMap,Different HashMap for each thread.
17220054,2,0,0,java.util.HashMap,"First off, Java's HashMap class is not thread safe, so there are no guarantees when reads and writes are happening concurrently."
17220835,1,0,3,java.util.HashMap,Setting Default Values in HashMap.
17220835,1,0,3,java.util.HashMap,I am trying to find a way to make a HashMap return a default value.
17220906,2,0,0,java.util.HashMap,Extend the HashMap and override the get().
17220946,2,0,2,java.util.HashMap,And also you can achieve this by simply using Properties class instead of HashMap.
17221497,1,0,0,java.util.HashMap,I am trying to build HashMap that its keys are unique id and the value is name of classes that found by reflection.
17222529,2,0,1,java.util.HashMap,"HashSet internally uses HashMap, this map is maintained with key as the value that you want to add in the set and value is an instance of an Object class( final private static final Object PRESENT = new Object();)."
17223487,2,0,1,java.util.HashMap,There are two ways (that I know) to put multiple values in a HashMap.
17226194,1,0,2,java.util.HashMap,There's a HashMap: code.
17227041,1,0,0,java.util.HashMap,"The main issue for me is that I am using ArrayList<HashMap<String, String>> in storing my data, while the other code uses ArrayList<String>."
17230673,1,0,2,java.util.HashMap,Read HashMap.
17230673,1,0,2,java.util.HashMap,There is a HashMap: code.
17230673,1,0,2,java.util.HashMap,This HashMap contains the following entries: code.
17230673,1,0,2,java.util.HashMap,"I need to get entries for the key ""M"", i.e. HashMap<1.22, 200> and HashMap<5.62, 300>."
17230738,2,1,2,java.util.HashMap,This is how you would extract a key-value pair of the HashMap by iterating over a keyset: code.
17230807,2,0,2,java.util.HashMap,with a foreach loop and method HashMap.entrySet() : code.
17230818,2,0,3,java.util.HashMap,This HashMap contains the following entries: code.
17230818,2,0,3,java.util.HashMap,"I need to get entries for the key ""M"", i.e. HashMap<1.22, 200> and HashMap<5.62, 300>."
17233887,2,1,2,java.util.HashMap,"But in your activity ContactsPhoneNumbers, you try to get with the key ""map"" an instance of HashMap, which is not correct."
17235921,2,0,3,java.util.HashMap,"Could be faster with some HashMap instead of the array (and removes the 0-100 limitation)  Edit : Alas, this does NOT work if two numbers could be equal in the initial sequence"
17239104,1,0,2,java.util.HashMap,error SessionMap cannot be cast to java.util.HashMap.
17239104,1,0,2,java.util.HashMap,I am trying to store my HashMap value in session and then I am retrieving it using JSP but I am receiving an error saying   HTTP Status 500 - org.apache.struts2.dispatcher.SessionMap cannot be cast to java.util.HashMap  Any idea why I am getting that error?
17239143,2,0,3,java.util.HashMap,"because you suppose that abc is an HashMap, which is wrong."
17239143,2,0,3,java.util.HashMap,"SessionMap does not extends HashMap, it extends AbstractMap which directly extends Object."
17239143,2,0,3,java.util.HashMap,"See :http://struts.apache.org/release/2.0.x/struts2-core/apidocs/org/apache/struts2/dispatcher/SessionMap.html Basically, when you implements SessionAware you suppose that the Map will be an HashMap, which is absolutely not guaranteed and is indeed not the case."
17239235,2,0,1,java.util.HashMap,"You are casting a Map which is an interface to HashMap, a concrete implementation."
17239779,2,0,0,java.util.HashMap,"Maybe I'm being too simplistic here, but I think you can just use a regular HashMap."
17241319,1,0,1,java.util.HashMap,I have an instance of a ListMultimap (Guava) which is composed of nested HashMaps and rather complex objects -- is there any way to change the toString() for this instance to customize the console output when I print the HashMap?
17241319,1,0,1,java.util.HashMap,"Or is the only way to make a new class which is an extension of the HashMap class, and rewrite the toString() method as follows: code."
17242275,2,0,0,java.util.HashMap,You might be able to eliminate the lock on lock_map by replacing your HashMap with a ConcurrentHashMap.
17243591,2,0,1,java.util.HashMap,"I can't immediately see what the problem is, except possibly the fact that debugList is a list and not a HashMap."
17245327,2,0,0,java.util.HashMap,"What you want is the java equivalent of the python dict, a key/value storage, in java, this is called a HashMap<K,V> (docs)."
17245369,2,0,0,java.util.HashMap,"In Java we use a HashMap<Integer, Integer> for that purpose."
17248624,1,0,1,java.util.HashMap,"As I do not see much clarification about cache object in Oracle COherence document from Oracle, any one have idea about   If Oracle Coherence allows HashMap (Java) Object as a cache Object?"
21785746,2,0,0,java.util.HashMap,"Yes, you can store a HashMap as a value in Coherence."
17249568,2,1,1,java.util.HashMap,"If you try to get something from the HashMap for a key that is not present in the map, the map returns null."
17249579,2,0,1,java.util.HashMap,If the HashMap is mpty and you try to do a get on non existant key you will get a null value
17249580,2,0,0,java.util.HashMap,It has nothing to do with the HashMap.
17249580,2,0,0,java.util.HashMap,This tests if the HashMap does not contain the key st.
17250039,1,0,0,java.util.HashMap,"I tried with array, ArrayList, HashMap, but I cannot find a syntax that allows me to write something similar to this."
17254503,2,1,4,java.util.HashMap,New code should generally prefer Map and HashMap for general-purpose key-value data structures.
17254891,1,0,0,java.util.HashMap,Setting values from a HashMap with multiple values for 1 key in a listview.
17254891,1,0,0,java.util.HashMap,"I have created the following HashMap of type HashMap<String, List<String>>, and am adding values to it as follows: code."
17254912,1,0,0,java.util.HashMap,Converting a HashMap> to a HashMap .
17254912,1,0,0,java.util.HashMap,"Please, help me convert a HashMap<String, ArrayList<String>> to HashMap <String, String>, where each ArrayList should be converted into one String that contains the ArrayList's elments."
17255072,2,1,3,java.util.HashMap,"Not sure if your issue was with toString() or how to iterate over a HashMap, if it was the latter, here's how to iterate over a map."
17259021,2,0,1,java.util.HashMap,"You can handle this with only Enumeration, HashMap."
17258563,2,0,0,java.util.HashMap,"You can use HashMap<String,String> ,with key as key_words and value as specific_message."
17258538,1,0,0,java.util.HashMap,"Also i tried, [link] (Get key from HashMap in java) but same issue happens here."
17259017,2,1,7,java.util.HashMap,Edit User wanted to know how to fill ListView with HashMap code.
17260313,2,1,9,java.util.HashMap,If your skills HashMap doesn't have the specified skills it returns null.
17261990,1,0,0,java.util.HashMap,HashMap values not being appended to ListView.
17262617,2,1,0,java.util.HashMap,"The Maps contain the data for each row, and should include   all the entries specified in ""from""  but HashMap<String, List<String>> hm is a map of lists."
17264472,1,0,0,java.util.HashMap,HashMap only appending last value from a loop to the listview.
17264514,2,0,0,java.util.HashMap,This is leading to insertion of the last selected value in Hashmap Just change the curly bracket position in your for loop and create the HashMap object before for loop construct: code.
17268212,1,0,7,java.util.HashMap,Hashcode for NULL key in HashMap.
17268212,1,0,7,java.util.HashMap,I was just reading about the difference between HashMap and HashTable class in java.
17268212,1,0,7,java.util.HashMap,"As far as the working of HashMap is concern I know that, it calls hashcode method on key for finding the bucket in which that key value pair is to be placed."
17268262,2,1,11,java.util.HashMap,from HashMap: code.
17268282,2,0,3,java.util.HashMap,If you read description of static int hash(int h) method in HashMap you will find that null keys have index 0.
17268289,2,0,4,java.util.HashMap,"From the source code of HashMap, if the key is null it is handled differently."
17373613,2,0,1,java.util.HashMap,"If a key is changed after it has been used in the Multimap (or a HashMap, for that matters), and the change effects hashCode() and equals(), you won't be able to find the associated values anymore: the modified hashcode means the lookup does not happen in the bucket where the values were stored."
17276846,2,1,5,java.util.HashMap,"In a similar way, changes that affect the hashCode of the instance break HashMap and similars, because the first that does these classes when inserting/retrieving objects is to use a specific bucket based in that value."
17276919,2,0,1,java.util.HashMap,HashSet and HashMap rely on the contract for equals() and hashCode described in the javadoc for java.lang.Object.
17276852,2,1,8,java.util.HashMap,You need to do use one of the implementations like HashMap.
17276852,2,1,8,java.util.HashMap,"You can't store multiple values in HashMap, for same Key unless values are either collection of objects (or) array."
17276862,2,0,3,java.util.HashMap,Use HashMap on the righthand side
17276902,2,0,2,java.util.HashMap,"as you cannot instantiate the interface Map The other thing you have mentioned that you want to store the values of different types, so use Object as the value instead of Test:      Map<Timestamp, Object> map = new HashMap<Timestamp, Object>();"
17280607,2,0,0,java.util.HashMap,"Then store your things in a HashMap<SourceTarget, List<Node>>, with each source-target pair mapped to the list of nodes that have exactly that source-target pair."
17278885,2,1,3,java.util.HashMap,"If you want to do fast searches for objects, I recommend using an implementation of Dictionnary like HashMap."
17282262,1,0,2,java.util.HashMap,"With these, I can't seem to check for membership of a value in a HashMap."
17283586,1,0,0,java.util.HashMap,Using HashMap for getting repeating occurences.
17283586,1,0,0,java.util.HashMap,I have a HashMap which  is populated with String and Integer: code.
17287342,2,0,0,java.util.HashMap,Using a HashMap is more common in that case.)
17287566,1,0,1,java.util.HashMap,I have a library which builds a HashMap using a datatype X which it takes as input.
17290243,2,1,2,java.util.HashMap,"), or you'd like to change the structure of its data (consider HashMap, if you can!"
17290400,2,0,2,java.util.HashMap,"(And presumably, a HashMap or TreeMap is forbidden too ...) Without some kind of secondary data structure for mapping index values to the objects they refer to, you have no choice but to do a tree traversal."
17291922,2,0,2,java.util.HashMap,Map> dataMap = new HashMap<>();// Java diamond notation.
17293157,1,0,0,java.util.HashMap,"I use a HashMap to fill a JTable, which is more or less continuously updated:  public Map< Long, MyObject > tableData = new HashMap< Long, MyObject >();  Every time a new element is added to the map the table model is notified: code."
17294409,1,0,3,java.util.HashMap,"I need to add two values together, and they are both stored as Longs in an object HashMap."
17294409,1,0,3,java.util.HashMap,"I'm guessing this wont work because currentRowContents is a HashMap type Object, and so what is returned from currentRowContents.get(...) will need to be cast as type Long, then I can use the .longValue() method on it."
17294470,2,0,4,java.util.HashMap,"I'm guessing this wont work because currentRowContents is a HashMap type Object, If possible then use the correct type for the Map if all the values in Map are Long and you have access or authorization to the code which declares the Map : code."
17294566,1,0,0,java.util.HashMap,I have a main thread in which I have defined a HashMap object.
17294566,1,0,0,java.util.HashMap,now each thread will append its result in main thread's HashMap object and terminate.
17294566,1,0,0,java.util.HashMap,I tried passing the HashMap object in constructor but when I do this each thread make a local copy of HashMap object and edits it.
17294566,1,0,0,java.util.HashMap,This change doesn't save in main thread's HashMap object.
17294893,2,0,0,java.util.HashMap,"I don't really think threads are making a local copy, it happens that HashMap is no thread-safe, try replacing HashMap with ConcurrentHashMap (java.util.concurrent.ConcurrentHashMap) this way: code."
17294783,2,0,0,java.util.HashMap,ThreadParallel does not create a new HashMap but saves a reference to the main thread's HashMap.
17295339,1,0,0,java.util.HashMap,How to get HashMap of all variables from url.
17326826,1,0,1,java.util.HashMap,I wanted to know can we save images with a jpeg or a png format in a Java Collection like Maps/HashMap/TreeMap/ArrayList etc...?
17330487,1,0,2,java.util.HashMap,Creating subset of HashMap based on some specifications?
17330487,1,0,2,java.util.HashMap,"So I have the following HashMap: HashMap<String, List<someDataType>> map; I want to create a new HashMap that is only composed of the k/v pairs in map that have a value (the list) whose length is less than a certain ""x""."
17330487,1,0,2,java.util.HashMap,The only way I know how to do this is to iterate through the HashMap and put k/v pairs into a new HashMap.
17331180,2,0,0,java.util.HashMap,"Have a Map<String, Integer> destinations = new HashMap<>();  In lookupDistance(dest), do something like this (untested pseudocode): Integer count = destinations.get(dest); if (count == null) {      destinations.put(dest, Integer.valueOf(1)); } else {     count = Integer.valueOf(count.intValue() + 1); }  This way, you count the occurences of each dest."
17331543,1,0,6,java.util.HashMap,How to convert all Java System Properties to HashMap?
17331543,1,0,6,java.util.HashMap,"This nice article shows us how to print all the current system properties to STDOUT, but I need to convert everything that's in System.getProperties() to a HashMap<String,String>."
17331543,1,0,6,java.util.HashMap,"""), then I want the HashMap to have a key of baconator and a respective value of yes!, etc."
17331601,2,0,2,java.util.HashMap,Then you have the information needed to put your property values into your HashMap.
17333537,1,0,0,java.util.HashMap,"I tried java reflection but I could not get the type of HashMap<String, Object> at compiled time."
17339603,1,0,2,java.util.HashMap,"HashMap < Integer, ArrayList> (I get them from a server so it might change between launches)."
17339603,1,0,2,java.util.HashMap,"The cart with all the stuff a user added to it HashMap < Integer, HashMap > A simple string."
17340065,1,0,3,java.util.HashMap,"If no, I can convert an Object in the HashMap: code."
17342572,2,0,1,java.util.HashMap,Your keys should be unique in the HashMap.
17342708,1,0,0,java.util.HashMap,"How value comparison is done in HashSet, HashMap etc."
17342839,2,0,1,java.util.HashMap,HashSet.add actually uses a put method of internal HashMap.
17342839,2,0,1,java.util.HashMap,So lets see the source code of HashMap.put code.
17342986,2,1,4,java.util.HashMap,"Docs says   This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
17348235,2,1,0,java.util.HashMap,Guava provides a simple caching solution that is more sofisticated than java's own HashMap but light weight when compared to Ehcache and others.
17349334,1,0,4,java.util.HashMap,"I will also have a HashMap<String,String> containing substitutions for each possible formatted property: code."
17351401,1,0,0,java.util.HashMap,"(In documentation it is mentioned that MyDynamicSkuPricingServiceImpl#getSkuPrices() will get invoked when getPrice() method gets called, I configured everything as mentioned in the documentation but getSkuPrices() never gets called implicitly)  UPDATED - I discovered if the HashMap pricingConsiderations is empty in DynamicPricingFilter, the DynamicPricingService#getSkuPrices() will not be invoked."
17351401,1,0,0,java.util.HashMap,"Thus, for the dynamicPricingService to work, it is essential to have a non-empty HashMap and it will be invoked implicitly.Not sure why it is required...  How do I update the pricing of a product added to the cart without persisting this value in the database?"
17352928,1,0,2,java.util.HashMap,"I am writing a Graph class, I keep a HashMap in which ids of nodes (int values) are mapped to the associated nodes, and I'm using adjacency list approach to keep edges starting from a node (keeping them in form of a HashSet)  Note that : This graph is directed and unweighted,  I want to implement a method which returns an iterator over objects of class Edge : When getting next on this iterator , one will get an object of class Edge which is created right when it's being traversed, and if there's no more neighbors for a node, it goes to the next node (order is not important) and if there's no more starting nodes (all are traversed), it finishes."
17362459,1,0,0,java.util.HashMap,but first time is working file but 2nd time execution value is increasing in HashMap.
17366615,1,0,7,java.util.HashMap,Java 8: HashMap initialization with lambda expressions.
17366615,1,0,7,java.util.HashMap,This is how I use lambda in HashMap: code.
17366615,1,0,7,java.util.HashMap,Is initialization by lambda expression allowed in HashMap?
17367096,1,0,0,java.util.HashMap,When I try to retrieve the values from HashMap i use getValue method.
17367096,1,0,0,java.util.HashMap,"i mean from HashMap i am receiving orderdate, result, dataamount, count."
17367494,2,0,1,java.util.HashMap,"Put all objects in a  HashMap<SomeType, SomeType>  using themselves as keys."
17369419,2,0,1,java.util.HashMap,"If you want to print the message only once, you can change the HashSet to a HashMap and use a boolean as a value to represent whether or not you have printed a message yet."
17371977,1,0,0,java.util.HashMap,Convert String to HashMap/MultiSet?
17381830,2,0,0,java.util.HashMap,What's the relation between a HashSet and a HashMap?
17381830,2,0,0,java.util.HashMap,"The relationship is that each HashSet<T> has a private HashMap<T, Object> inside it."
17381830,2,0,0,java.util.HashMap,"The term ""load factor"" is defined in the javadoc for HashMap."
17381835,2,0,1,java.util.HashMap,"HashSet is implemented in terms of HashMap:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
17381835,2,0,1,java.util.HashMap,Load factor is explained in the documentation:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
17381835,2,0,1,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
17384189,2,0,3,java.util.HashMap,"Now, if you iterate over the scores, you can look up the ranks from the HashMap."
17385016,1,0,0,java.util.HashMap,I have defined all my production servers and development servers inside a HashMap .
17385016,1,0,0,java.util.HashMap,"(I can use Set , but  choosen HashMap for solving another issue becaz i was getting ip as 127.0.0.1 and want to gather IP using hostname ) This is my log4j.xml file  code."
17386703,2,0,2,java.util.HashMap,"There is just no common ""lower type"" to these two possible implementations than Object... As a further indication, you will notice that a Map's keySet() is true to its name: it returns a Set... (out of sheer curiosity, if you dig into the code, you will notice that a HashSet is in fact a HashMap; it is just that you don't have access to the values of the map."
17388506,1,0,2,java.util.HashMap,"About the HashMap, rehashing."
17388506,1,0,2,java.util.HashMap,Directly from this javadoc:  An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
17388651,2,0,1,java.util.HashMap,"For deeper understanding, here are the relevant code parts from java.util.HashMap."
17419326,2,0,3,java.util.HashMap,"so add this key value pair to the HashMap>  } now to find the list of words that satisfy the jumbled word,   get the word from the user Sort the characters of the word in ascending order use this sorted characters as key against the hash map generated in step 2, and retrieve the list of words satisfying that key."
17408786,2,1,2,java.util.HashMap,"You will not be able to use your EqualsAndHashCode objects in a HashMap, for example."
17408799,2,0,2,java.util.HashMap,"It's just that you see weird behaviour, when you use the objects of those class in hash based collections, like - HashSet, or HashMap."
17408799,2,0,2,java.util.HashMap,"For example, if in your case, you use your class objects as key in a HashMap, then you might not be able to find that key again, when you try to fetch it."
17408799,2,0,2,java.util.HashMap,"And HashMap saerch for keys first using their hashcodes, and then using equals."
17408961,2,0,0,java.util.HashMap,"In order for your code to behave correctly, especially when it is used in data structures such as HashMap, it is important that you ""should"" override the default implementation that ensures that ""If two instances of your class are equal, then they return same value when hashCode() method is called""."
17408749,2,0,2,java.util.HashMap,"if two objects are equal, their hashCodes must also be equal  Above is a recommendation and is not mandated by JVM The idea behind this recommendation is to have less collisions when storing elements in a hashed collection such as HashMap."
17410176,1,0,0,java.util.HashMap,I need to have a number of threads which operate on the shared java.util.HashMap.
17410176,1,0,0,java.util.HashMap,UPD: is there any linear overhead in memory usage if I switch from HashMap to ConcurrentHashMap?
17411721,2,0,9,java.util.HashMap,"Some collections, like HashMap, even can enter an infinite loop when used this way."
17411410,1,0,1,java.util.HashMap,How to make my HashMap work as expected?
17411410,1,0,1,java.util.HashMap,"And a HashMap from Point to something, let's say Cell: cellMap = new HashMap<Point, Cell>(); Then one fills in cellMap as follows: code."
17411429,2,1,8,java.util.HashMap,"Since you are using HashMap, not TreeMap, you need to override hashCode and equals, not compareTo, in your Point class: code."
17413074,1,0,1,java.util.HashMap,"As data is null I presume that it is not working the way I expected... And I thought about using HashMap because I don't know in advance the key like institution1, institution2, ... What do you think ?"
17414671,1,0,0,java.util.HashMap,"For a lot of implementation reasons (Using Java ME 1.4 with very limited libraries), I have no access to HashMap or any kind of Map interface."
17417205,1,0,0,java.util.HashMap,"Because I have a defaults HashMap, any property that doesn't exist has it's default value placed in the Properties instance, which then stores everything, so that new properties are seamlessly added when the production server is updated."
17421893,1,0,1,java.util.HashMap,"In my code above, I intend to define a series of placeholders as a constant, which will be stored in the HashMap mapOfConstants."
17429832,1,0,0,java.util.HashMap,Serialising / deserialising a Java HashMap in SimpleXML.
17429832,1,0,0,java.util.HashMap,"In a Java class of mine, I have an attribute: private HashMap<String, Integer> keywordFrequencies; And I need to serialise / deserialise objects of the class concerned."
17433748,2,1,2,java.util.HashMap,"where LemmaMap wraps a HashMap, but also provides some additional methods e.g."
17434464,1,0,0,java.util.HashMap,The first list is in a HashMap and the second is from a query ResultSet.
17435929,1,0,1,java.util.HashMap,"I've read them all into a HashMap, with the key being the label and the value being the value of the cell (both of type String)."
17436355,1,0,0,java.util.HashMap,Are those methods faster than those implemented in the HashMap and do they really use binary search?
17436417,2,0,1,java.util.HashMap,"Open the documentation for the classes TreeMap and HashMap, and you will get your answers."
17436417,2,0,1,java.util.HashMap,"In HashMap, it says:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
17436417,2,0,1,java.util.HashMap,"As you can see, HashMap is O(1), while TreeMap is O(log(n)), hence HashMap is faster."
17436408,2,1,1,java.util.HashMap,"Note it is in fact a Red-Black Tree:  A Red-Black tree based NavigableMap implementation  But note that although I always hate to treat hash tables as O(1) data structure blindly, for almost all practical purposes HashMap is O(1), unless: e.g., you choose a very bad hash function or massively overload the map."
17436414,2,0,1,java.util.HashMap,HashMap is faster.
17444396,1,0,0,java.util.HashMap,Putting HashMap in jsonobject.
17444485,2,1,1,java.util.HashMap,Iterate through the HashMap and put to the jsonObject: code.
17454531,1,0,2,java.util.HashMap,"I want send a HashMap<String, String> from JS application to my Google App."
21534177,2,1,0,java.util.HashMap,You could also create a HashMap to store a key value pair of Nodes and their respective text contents.
17459080,1,0,2,java.util.HashMap,How to set keys of a HashMap as the tags in XML file?
17459080,1,0,2,java.util.HashMap,"I've read them all into a HashMap, with the key being the label and the value being the value of the cell (both of type String)."
17459080,1,0,2,java.util.HashMap,Update: I've been able read all the labels/values of an excel sheet into a HashMap and then convert that to an AdaptedMap that allows one to display the values/keys for each of the entries in the hashpmap dynamically.
17465372,2,0,0,java.util.HashMap,The Sort class is using a HashMap instead of a LinkedHashMap so the order they are returned is not guaranteed.
17467498,1,0,0,java.util.HashMap,How can I populate JList from a HashMap but to have only the value displayed in the list?
17467498,1,0,0,java.util.HashMap,I am using the HashMap because I need later when I submit the form where JList is to use the keys from values selected for my Insert method and I understood from other examples here that this is done with hashsmap.
17520760,2,0,0,java.util.HashMap,"Thread safety issues here:  multiple reads from the HashMap - is thread safe, because multiple reads are allowed as long as there are no modifications to the collection and writes to the HashMap will not happen, because the map is an unmodifiableMap() read/write on deliverers - is thread safe, because all java reference assignments are atomic  I can see no thread-unsafe operations here."
17472346,1,0,0,java.util.HashMap,Modify static HashMap through Activities.
17472346,1,0,0,java.util.HashMap,In order to maintain navigation information in my ActionBar I want to stock these info (String + Context) in HashMap using the Static class below : code.
17472346,1,0,0,java.util.HashMap,But when I add a value referring to this constant class through 3 activities I only get the last entry : on each activity my HashMap has the last entry value and the HasMap size is always equal to 1..
17472346,1,0,0,java.util.HashMap,I make a Super Class Activity wich implements ActionTab listener and I map this listener via my static HashMap every time I go in other Activity but it doesn't work.
17473112,1,0,0,java.util.HashMap,Would a HashMap be better for this kind of thing?
17476712,2,0,0,java.util.HashMap,"So when you pass your empty HashMap to the ValueComparator, you are actually storing a reference to it in bvc."
17476712,2,0,0,java.util.HashMap,"Then, when you modify the HashMap, bvc.base, being a reference to it, is ""updated automatically."""
17478613,2,1,1,java.util.HashMap,"Then use it in the HashMap as value, as you already mentioned."
17479477,1,0,2,java.util.HashMap,This is the same as has been described here: factory method pattern with class registration produces a nullpointer exception I understand why I am getting the null pointer exception (the HashMap is not populated by the time it is being used) and I know that I can fix it by using class.forName in the main or in a static block within the Factory implementation.
17483468,2,0,0,java.util.HashMap,I would add store the word in a HashMap instead and use the string in lowercase as key and then number of time it occured as the value.
17489347,2,0,1,java.util.HashMap,"Create a HashMap that provides mappings of 0,1,2,3,4,etc to the id you wish them to map to."
17489569,2,0,0,java.util.HashMap,If you don't want to create a new class then use HashMap.
17492586,1,0,2,java.util.HashMap,I was thinking that HashMap  code.
17496723,2,0,0,java.util.HashMap,"A HashMap is not synchronized, a Hashtable is synchronized (details here)."
26120662,2,0,1,java.util.HashMap,"Just put them all in some structure (i.e. HashMap, Vector...) and retrieve as needed."
17507382,2,0,1,java.util.HashMap,"jdbm2 looks promising, never used it but it seems to be a candidate to meet your requirements:  JDBM2 provides HashMap and TreeMap which are backed by disk storage."
17511173,1,0,2,java.util.HashMap,Java HashMap behavior is not up to O(1) mark.
17511173,1,0,2,java.util.HashMap,"bucket at index 2, and 11 has two keys each EDIT: After Reading inputs below One question : What will be the complexity in above case where HashMap & Integer of Java is used."
17511975,2,0,1,java.util.HashMap,What will be the complexity in above case where HashMap & Integer of Java is used.
17511975,2,0,1,java.util.HashMap,"And since there are only 2^32 unique keys possible, we don't need to consider the issue of how HashMap scales beyond that point."
17511225,2,0,13,java.util.HashMap,That doesn't mean the HashMap isn't O(1).
17511307,2,0,0,java.util.HashMap,HashMap can give a performance of O(n) in look up provided that you have Hash Collision for all n elements.
17512575,2,0,0,java.util.HashMap,craeta a HashMap and use it like following : code.
17519228,1,0,1,java.util.HashMap,This time I get result but the Map is unordered (I think because it is now using HashMap).
17519228,1,0,1,java.util.HashMap,The value object has HashMap type and it prints:  code.
17535720,2,0,1,java.util.HashMap,By default an object without typing information is interpreted as HashMap which is explained in the docs.
17535720,2,0,1,java.util.HashMap,"The times it won't use a HashMap is if it can determine the type of the object from either an embedded class property (which works, but is unsafe over the network), a specified type by object path, or if you are deserializing into a typed object that it can interpret the type from."
17524447,1,0,3,java.util.HashMap,"with super it's possible to instantiate a HashMap<Object,Object> for a <?"
17524548,2,0,0,java.util.HashMap,"But your actual object can hold any object since it's HashMap<Object,Object> code."
17524616,2,1,1,java.util.HashMap,"You just created an instance of the HashMap class; the type parameters get lost immediately after this line of code and all that stays is the type of your mappa1 variable, which doesn't even mention Object."
17530000,1,0,2,java.util.HashMap,I'm trying to implement a contact Book here using a HashMap to store the contacts.
17532409,1,0,0,java.util.HashMap,Iterating through/Updating HashMap.
17533016,1,0,0,java.util.HashMap,How to send multiple values of a table from HashMap in java to jsp?
17533272,1,0,0,java.util.HashMap,I first started working with a single HashMap such as: code.
17533272,1,0,0,java.util.HashMap,"PROBLEM: Now I have more than 2 new Hash Maps to be sorted the same way, and rather than duplicating the code for ValueComparator4Broker class, I want to make a single generic and parameterized ValueComparator class which can be used by all new *HashMap*s: code."
17533272,1,0,0,java.util.HashMap,"I tried something like the following, but the code is erroneous and does not even accept the key object of my HashMap to be substituted for Type."
17533543,1,0,0,java.util.HashMap,And then I can use myMap just like I use HashMap.
17537031,1,0,1,java.util.HashMap,android - ListView adapter with HashMap isn't displaying correctly.
17547578,2,1,3,java.util.HashMap,My bottom-up answer:  The difference between Hashtable and HashMap has been (thoroughly) discussed in Differences between HashMap and Hashtable?.
17547578,2,1,3,java.util.HashMap,Short summary: HashMap is more efficient and should be used instead of Hashtable.
17547578,2,1,3,java.util.HashMap,To summarize: use HashMap instead of ArrayList for list a.  I wrote a small program to benchmark the problem.
17550587,1,0,1,java.util.HashMap,"I want to pre-load a small table (300 rows) in a Java datastructure (List, HashMap,..) when my application server starts."
17552558,2,0,0,java.util.HashMap,"Because in first example keySet() is executed in HashMap object, not in your main, that's why you don't need to declare it."
17552603,2,0,1,java.util.HashMap,The java compiler knows what map.keySet() returns because it is in the definition of HashMap.
17552603,2,0,1,java.util.HashMap,"When HashMap was compiled, the compiler knew what was Set<> because there was an import statement in the source of HashMap for that (or rather, in that case, no import statement was needed because Set is in the same package as HashMap)."
17552603,2,0,1,java.util.HashMap,"When you are using map.keySet(), you don't have to specify the return type of the method because the compiler has access to the class file of HashMap and therefore it knows all it needs."
17554577,1,0,0,java.util.HashMap,Modifying a class so it can be used as a key in HashMap.
17554577,1,0,0,java.util.HashMap,How to modify above class so it can be used as a key  in HashMap
17554803,2,0,0,java.util.HashMap,"However, you should override both of these methods if you really indend on using your class as a HashMap key."
17554842,2,0,0,java.util.HashMap,Sufficient Conditions for making a Custom Class as key in Your HashMap.
17559865,2,1,1,java.util.HashMap,What about creating a HashMap of locks?
17562325,1,0,3,java.util.HashMap,"For ArrayList underlying dataStructure is Array, for LinkedList it is Link object and for HashMap or HashTable it can be an Array Of LinkedList or Tree, what is the datastructure used in HashSet"
17562375,2,0,4,java.util.HashMap,In java the HashSet uses a HashMap internally From the source code code.
17562450,2,0,0,java.util.HashMap,The underlying data structure of HashMap and HashSet (which is based on HashMap) is hash table http://en.wikipedia.org/wiki/Hash_table.
17562450,2,0,0,java.util.HashMap,In HashMap source code it looks like an array of Entrys code.
17562349,2,0,2,java.util.HashMap,HashSet uses HashMap internally for storing the data.
17562349,2,0,2,java.util.HashMap,And I believe HashMap is an array of Entry objects.
17562349,2,0,2,java.util.HashMap,A related post to understand the internal structure of HashMap: How does Java's Hashmap work internally?
17562350,2,0,5,java.util.HashMap,According to the Javadoc the backing data structure for a HashSet is a HashMap.
17565644,1,0,2,java.util.HashMap,There isn't any problem if I use HashMap instead of ConcurrentHashMap.
17569385,2,0,0,java.util.HashMap,"You could have the data in a HashMap, TreeMap, and another Map that would have the key-value mapping the other way around (if that makes sense in your case)."
17569604,2,0,1,java.util.HashMap,"One workaround is to overload some data member of Marker, such as the snippet, to use as the key to a collection of model objects (e.g., HashMap) that can contain whatever properties you want."
17571208,1,0,0,java.util.HashMap,To search for entries in both languages and maybe even adding a dropdown-list with suggested words (like in Google's search) would require that I find the strings quickly (HashMap?).
17571208,1,0,0,java.util.HashMap,Have a HashMap with each value pair and manually implement something like a relational database?
17572983,2,1,12,java.util.HashMap,"There are few implementations:  ArrayTable (backed by two-dimentional array, see the documentation),  ForwardingTable (implements decorator pattern),  HashBasedTable (~ HashMap<R, HashMap<C, V>),  ImmutableTable (immutable and null-hostile),  TreeBasedTable (~ TreeMap<R, TreeMap<C, V>)  Also see the Wiki explaining Guava new collection types, specifically code example: code."
17574749,1,0,1,java.util.HashMap,Duplicate values stored in HashMap.
17574749,1,0,1,java.util.HashMap,"I load this file into memory as HashMap<String, String> by reading the file line by line, splitting on a separator and invoking myMap.put(line[0], line[1])."
17574749,1,0,1,java.util.HashMap,"The size of the text file is 45MB, while the HashMap uses 350MB of the heap."
17575018,2,0,5,java.util.HashMap,"If you want duplicates to point to the same objects, you'll have to do this outside of the HashMap or hope the optimizer takes care of it."
17575018,2,0,5,java.util.HashMap,Alternatives to String.intern() as joe776 suggested are possibly with a self-written collection extending some Set (since Set doesn't have a Object get(Object) method) or another HashMap (having objects point to themselves) that allows you to get a reference to the common object.
17578091,2,1,2,java.util.HashMap,"The equivalent to a std::unordered_map in Java is a HashMap or ConcurrentHashMap, which have expected constant-time lookups."
17585503,2,0,0,java.util.HashMap,"These are essential for debugging and also for use in other Collections like HashMap, etc."
17586379,2,1,2,java.util.HashMap,You need to use a concrete type like java.util.HashMap: code.
17594683,2,0,0,java.util.HashMap,"The code for a HashSet based on a HashMap is super simple: if you look at the way it's implemented in the JDK, there are very few lines of actual code (ignoring the constructors and the serialiazation code)."
17594501,2,0,0,java.util.HashMap,A HashSet is using a hashmap to store its objects efficiently so eventually a HashMap is exactly what you need for hashCode()+equals() based operations.
17596175,2,0,2,java.util.HashMap,"There are 3 main, non-specialised, implementations of the Map interface in the JDK:  HashMap which is not ordered - that is not going to help you TreeMap which is ordered based on some comparator - probably not easy to adapt to your use case LinkedHashMap which is ordered either by insertion order or by access order  In your case, you could use a LinkedHashMap using access order (you create one with a special construtor with the parameter accessOrder set to true) and every time you access one of the items it will get reordered automatically to the tail of the map."
17600489,2,0,0,java.util.HashMap,"There may be a more optimal method of doing this recalculation or mapping if you use specific backing array sizes, and you can look at existing hash table implementations to see what they do (i.e. the source of java.util.HashMap is readily available), but in general you need to move all elements to their correct bucket."
17601691,2,1,2,java.util.HashMap,For associations use a HashMap.
17604622,2,1,0,java.util.HashMap,You can use a java HashMap which behaves much like an associative array where you can have a key that is an Object and a value that is an Object as well.
17604622,2,1,0,java.util.HashMap,Check out HashMap's.
17604622,2,1,0,java.util.HashMap,There is also a size method on the HashMap which could be useful to you.
17606203,1,0,0,java.util.HashMap,"I just need an expandable 2D array and i'm not sure I can get that from a HashMap, ArrayList, 2D array or any other data structure i'm aware of."
17608495,2,0,1,java.util.HashMap,"(Also, consider using a HashMap instead.)"
17608903,2,1,0,java.util.HashMap,"And yes, do consider using a HashMap instead if synchronization is not an issue for you."
17608903,2,1,0,java.util.HashMap,Differences between HashMap and Hashtable?
17607850,1,0,5,java.util.HashMap,"Also, I have a 3rd HashMap Object: code."
17607988,2,0,0,java.util.HashMap,HashMap has a putAll method.
17607988,2,0,0,java.util.HashMap,Refer this : http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
17607870,2,1,5,java.util.HashMap,"However if it was also a HashMap<String, List<Incident>>."
17607870,2,1,5,java.util.HashMap,If you wanted to merge the lists inside the HashMap.
18008092,2,0,0,java.util.HashMap,"Then store it, ArrayList<HashMap<String, ?>> values2."
17616784,1,0,4,java.util.HashMap,(isn't HashMap constructor using iteration to get members of Set after all?)
17619168,1,0,1,java.util.HashMap,Creating JTree using a HashMap.
17625362,1,0,0,java.util.HashMap,getFromCache will search in a HashMap using the four parameter provided.
17625362,1,0,0,java.util.HashMap,"I've examine all the values in the HashMap, there is only two resources namely code."
17626306,2,1,17,java.util.HashMap,It can definitely affecting the order in which elements of a HashSet or HashMap are returned when you iterate them ... if the element class doesn't override hashcode().
17629433,2,0,0,java.util.HashMap,"For instance, if Thread 1 adds to a HashMap and triggers a resize while Thread 2 inserts something, the insert from Thread 2 might be lost."
17630720,1,0,0,java.util.HashMap,I'm trying to simulate HashMap's method structure.
17631021,2,0,1,java.util.HashMap,This kind of problems can be easy solved by dictionaries (HashMap in Java).
17631834,1,0,0,java.util.HashMap,Android : HashMap is showing only last array item in a Listview field.
17631971,2,0,2,java.util.HashMap,You are iterating over the all authors but HashMap will override values and only the last one is being saveed.
17632076,2,0,0,java.util.HashMap,You already know the best way to get a card from pool of 7000 cards HashMap.
17632076,2,0,0,java.util.HashMap,Use HashMap instead of HashTable for reasons related to synchronization.
17635173,2,0,1,java.util.HashMap,There's a good chance that the properties system is using a backing HashMap of some description.
17635173,2,0,1,java.util.HashMap,"To do this efficiently, a HashMap is required."
17635173,2,0,1,java.util.HashMap,"Because of this, the order is entirely up to the implementation of the HashMap (It's not guaranteed to be alphabetical)"
17638117,2,0,0,java.util.HashMap,Here's an except of the get() source code of HashMap: code.
17638388,2,0,0,java.util.HashMap,Mapis a interface in java collection framework and HashMap is implementaion.
17638388,2,0,0,java.util.HashMap,"your HashMap<String,Integer> accept these value since String and Integers default value is null."
17640399,1,0,1,java.util.HashMap,I built a HashMap in a class like so: code.
17645243,2,1,0,java.util.HashMap,"If you want to use something akin to that, use a HashMap to map the <item> contents to the activity names."
17645055,1,0,0,java.util.HashMap,The MapCreator method creates a HashMap.
17650844,1,0,0,java.util.HashMap,I have a HashMap with the following keyset of size 4: code.
17650929,2,0,2,java.util.HashMap,You can use an EnumMap instead of HashMap.
17652466,2,0,0,java.util.HashMap,"Upon looking at the code( i cant share here ), I have found that that there is a Hashmap   created like Hashmap topo = new HashMap(); , but this hashmap is never used."
17656373,1,0,0,java.util.HashMap,For example a non concurrent HashMap has got its concurrent counterpart ConcurrentHashMap.
17954290,2,0,0,java.util.HashMap,"Hence even by mistake you cannot insert null values, but if the performance is an issue, go with HashMap, which is better compared to TreeMap."
17662904,2,1,5,java.util.HashMap,"This would print out ""foo"" if the two objects returned equal hash codes, as they're meant to - but again, because they don't, the HashMap thinks there's no match."
17664639,1,0,0,java.util.HashMap,Map/HashMap Casting?
17664639,1,0,0,java.util.HashMap,"I also have a HashMap<Long, HashMap<String, Integer>>, called contIdDestQuanMapSoFar, which I am going to convert into a HashMap<String, HashMap<String, Integer>> with a HashMap<Long, String>, named contIdToScanIdMap, that maps the keys to one another."
17664639,1,0,0,java.util.HashMap,"The problem is, when I call the method setContainerSummaryMap(currentPlan.convertContSummaryMap()), I get an error, saying that it is not applicable for the arguments HashMap<String, HashMap<String, Integer>>."
17664654,2,0,1,java.util.HashMap,"To make this work, the type of toRet must be HashMap<String, Map<String, Integer>>."
17664654,2,0,1,java.util.HashMap,"As @SLaks stated, a HashMap<String, Map> is not the same as a HashMap<String, HashMap>."
17670433,2,0,0,java.util.HashMap,If Localized Changes prefer HashMap otherWise  ConcurrentHashMap for multithreading.
17669987,2,1,2,java.util.HashMap,A HashMap seems like it would suit you well.
17669987,2,1,2,java.util.HashMap,"""TreeMap provides guaranteed O(log n) lookup time (and insertion etc), whereas HashMap provides O(1) lookup time if the hash code disperses keys appropriately."
17669987,2,1,2,java.util.HashMap,"Unless you need the entries to be sorted, I'd stick with HashMap."""
17669987,2,1,2,java.util.HashMap,-part of Jon Skeet's answer in TreeMap or HashMap.
17670086,2,0,0,java.util.HashMap,"So, you could use HashMap, but don't forget about multythreading."
17715827,2,1,1,java.util.HashMap,For example:  HashMap and LinkedHashMap ->  If i need ordered Keys i will use LinkedHashMap  otherwise I will Use HashMap (for a little   performance gain).
17679411,1,0,0,java.util.HashMap,"Make a texture manager with a HashMap<TextureEnum, int> so I can call TextureManager.get(TextureEnum.button_hover)?"
17684341,1,0,0,java.util.HashMap,Checking for and Removing elements in Java HashMap.
17684341,1,0,0,java.util.HashMap,"I am trying to check for and remove elements, using a HashMap in Java."
17684605,2,1,2,java.util.HashMap,"For any Hash enabled data structure (like HashMap, HashSet) to work correctly its elements must override hashCode() in addition to the equals() method."
17684605,2,1,2,java.util.HashMap,"Since, the hash codes don't match the HashMap never looks for the key in the right bucket."
17684363,2,0,3,java.util.HashMap,"You will need to implement hashCode(), not just equals, for your ClusterKey to work well as a key in a HashMap."
17687536,1,0,7,java.util.HashMap,Is it safe to change a HashMap key/value during iteration?
17687536,1,0,7,java.util.HashMap,I have a HashMap.
17687918,2,0,6,java.util.HashMap,"As you can see in the HashMap source code, the put method only modifies the modCount when a new key is provided."
17687697,1,0,0,java.util.HashMap,Do integers occupy less space as keys in a java HashMap compared to strings?
17687697,1,0,0,java.util.HashMap,"Let's say I have a HashMap<String, Integer> with keys being words and values being their frequency in a corpus."
17687697,1,0,0,java.util.HashMap,"""hello"" is represented by 1) and instead create a HashMap<Integer, Integer>?"
17687697,1,0,0,java.util.HashMap,"In general, integers occupy less space than strings but then I don't know if that can apply to keys of a HashMap since keys go through a hash function."
17687820,2,1,1,java.util.HashMap,"As far as the HashMap is concerned, there is no difference in memory usage when replacing String with Integer."
17687820,2,1,1,java.util.HashMap,"This is because HashMap stores the reference values of the key and value in its KV Pair, and instead of referencing String objects, the key will refer to Integer objects."
17687820,2,1,1,java.util.HashMap,"For all intents and purposes, the hashing of Integer objects and String objects, do not have any impact on the HashMap's storage capabilities."
17688323,1,0,1,java.util.HashMap,How to change HashMap value type from Object to String?
17688323,1,0,1,java.util.HashMap,Would a HashMap be faster/more efficient than a Map?
17688323,1,0,1,java.util.HashMap,I'm assuming I'll have to loop through the original Map and copy the values to the new HashMap.
17688358,2,0,0,java.util.HashMap,"If you need a separate Map instance, you can use the constructor of HashMap like this: code."
17688399,2,1,5,java.util.HashMap,So it does not make any difference in terms of perfomrance if you use the Map interface or its runtime type (HashMap).
17693693,2,1,6,java.util.HashMap,"EDIT : (in response to OP's comment) Yes, the deletions done through Iterator#remove() over the Set returned by HashMap.entrySet() would reflect in the underlying Map as the Set is backed by it."
17699200,2,1,2,java.util.HashMap,In Java are JSON nodes implemented as HashMap and HashMap is not ordered too.
17701489,1,0,0,java.util.HashMap,"Is it possible to use the Scala immutable collections (HashMap, List, Vector, etc.)"
17703470,1,0,0,java.util.HashMap,But the problem is isExpanded() method uses the HashMap to store the expanded paths.
17703668,1,0,1,java.util.HashMap,"While having a look inside HashMap class, I came across this method :- code."
17703668,1,0,1,java.util.HashMap,PS : I can also see this method being called inside's HashMap's putForNullKey() method code.
17705597,2,0,0,java.util.HashMap,I always use HashMap because it is a O(1) look up time.
17705599,2,0,0,java.util.HashMap,"Use a HashMap<String, Button>."
17706858,1,0,1,java.util.HashMap,"I assume that a nested HashMap is what I am looking for, but there does not seem to be a simple one- or two-lined method for creating an object like this using the native Java libraries."
17707017,1,0,0,java.util.HashMap,Binding Nulls in Java HashMap.
17709767,2,1,1,java.util.HashMap,"You could easily switch out the HashMap for, say, a TreeMap if you feel it's appropriate, and no other code would change."
17709782,2,0,1,java.util.HashMap,"In other words, you get the functionality of HashMap, but only through the interface of Map."
17712786,1,0,0,java.util.HashMap,My function returns a keyset of a HashMap member.
17713110,2,0,1,java.util.HashMap,Possible alternative for Dictionary in Java is HashMap.
17713110,2,0,1,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
17713128,2,0,1,java.util.HashMap,Generally you can use HashMap like so: code.
17723199,1,0,4,java.util.HashMap,"extends class> a way of filtering the java classes that you can use to build in this case the new HashMap, for example: I can do that: code."
17726399,2,1,2,java.util.HashMap,"As a result, HashMap<String, GenericClass<String>> is considered inconvertible to Map<String, GenericClass<?"
17726042,1,0,0,java.util.HashMap,HashMap method/ parameter.
17726042,1,0,0,java.util.HashMap,See the following class definition using a HashMap.
17728390,2,0,0,java.util.HashMap,"From a design perspective, I'd say the controller should have no knowledge of HOW the view displays the data; the fact it's sorted and has other rules is purely a display constraint; heck, the date doesn't even need to be ordered in the controller at all, it might be in a HashMap or such."
17728250,2,0,1,java.util.HashMap,"Note that Map and List are only interfaces, implementations for those are HashMap and LinkedList or ArrayList."
17728568,2,1,7,java.util.HashMap,"HashMap is serializable, so you could just use a FileInputStream and FileOutputStream in conjunction with ObjectInputStream and ObjectOutputStream."
17728568,2,1,7,java.util.HashMap,To write your HashMap to a file: code.
17728568,2,1,7,java.util.HashMap,To read the HashMap from a file: code.
17733746,1,0,0,java.util.HashMap,Java usage of HashMap or Map with multidimensional arrays.
17735527,2,1,2,java.util.HashMap,"JdbcTemplate will invoke mapRow for you for every row in the resultset All you need to do on mapRow is just return a HashMap which represent one single database row, spring will do the resultset iteration for you"
17738308,2,0,1,java.util.HashMap,"The ConcurrentHashMap is very similar to the HashMap class, except that ConcurrentHashMap offers internally maintained concurrency."
17738522,1,0,0,java.util.HashMap,Now I have a HashMap called words and a Producer class that extends Thread class.
17738522,1,0,0,java.util.HashMap,I want to let each producer add some words into the HashMap words.
17738522,1,0,0,java.util.HashMap,Does it work if I just put the HashMap<...> words about the for (int....) statement?
17738628,2,1,1,java.util.HashMap,Does it work if I just put the HashMap<...> words about the for (int....) statement?
17738675,2,0,0,java.util.HashMap,"The ConcurrentHashMap is very similar to the HashMap class, except that ConcurrentHashMap offers internally maintained concurrency."
17855296,2,0,1,java.util.HashMap,"You could set resultType=""hashmap"" and then your result would be List<HashMap<String, Object>> result;."
17748356,1,0,1,java.util.HashMap,"But I think SimpleAdapter only works with List<HashMap<String, String>> and I've  List<Object> like follow codes: What can I do?"
17752949,2,0,0,java.util.HashMap,I do agree with the first answer that there is no need to use a HashMap; an ArrayList will work just as well.
17755465,2,1,2,java.util.HashMap,P.S: Move to HashMap instead of HashTable if you can.
17755465,2,1,2,java.util.HashMap,Read When should I use a Hashtable versus a HashMap?
17762137,1,0,1,java.util.HashMap,"So in essence I'm really trying to measure how much memory the HashMap<Integer, MyOwnObject> in MyContainerClass takes."
17762137,1,0,1,java.util.HashMap,I will use this memory measurement to perform an experiment where I fill up both the HashMap and MyOwnObject instances.
17764625,2,1,1,java.util.HashMap,"So, at the very least, a HashMap that caches the created FontMetricsWrapper for each given font would be in order..."
17768320,2,0,2,java.util.HashMap,(That approach won't work with a HashMap though ...)  Final piece of advice.
17771239,2,1,3,java.util.HashMap,"You should note that a small ConcurrentHashMap will be many times larger than a synchronised HashMap, so unless you only have a few of them HashMap still may be the best option."
17772849,1,0,0,java.util.HashMap,Print all the contents of a HashMap> type.
17773715,1,0,0,java.util.HashMap,"I am a newbie is this jsp stuff, I used to be doing this in PHP but everything mixed-up in my mind when there is a HashMap appear in the java file."
17775384,1,0,0,java.util.HashMap,"I would think that a HashMap would be useful, as I could just use the category as the key and the ArrayList of products as the value."
17775384,1,0,0,java.util.HashMap,"If this is the correct approach, can someone assist me with the logic involved in turning my ArrayList into the HashMap as I have described?"
17775461,1,0,0,java.util.HashMap,Say I've implemented a HashMap in which characters get assigned an ArrayList of values.
17775461,1,0,0,java.util.HashMap,"I've created a PriorityQueue of those characters in the HashMap, but I'd like to be able to remove the characters according to this priority: {a, b, c} <- initial queue {a, b} Remove c since it contains a value in its ArrayList which determines it must be removed first."
17776884,1,0,1,java.util.HashMap,I have a custom class loader which stores all the entries from a JarInputStream in a HashMap storing the entry names with their bytes.
17780090,1,0,0,java.util.HashMap,Why does the method hash(int h) of HashMap like this?
17783504,2,1,1,java.util.HashMap,Properties extends Hashtable which is a HashMap and therefore does not retain the order of your properties inserted.
17787606,2,0,0,java.util.HashMap,"use a solution like this method to print the contents of all of the hash maps : Java: iterate through HashMap probably some of the keys / values are not what you expect - see Alex's comment that ""Testing User"" appears to have a trailing space."
17784894,2,1,2,java.util.HashMap,"For example, if java.util is a filtered location, stepping into code in HashMap could result in a call-back to your application code to check the equality of an object."
17784894,2,1,2,java.util.HashMap,"However, when the Step through filters option is disabled, a step into HashMap would behave like a step over."
17793841,1,0,4,java.util.HashMap,Why does a big unreferenced HashMap increase performance in Java?
17793841,1,0,4,java.util.HashMap,"Without the HashMap, it will allocate about 1 Gig of memory."
17793841,1,0,4,java.util.HashMap,"If I initialize the HashMap, it will allocate > 2 Gigs."
17797196,1,0,0,java.util.HashMap,"Then i add this to a arrayList<HashMap<string, string>... all of this in a background thread."
17798841,2,0,0,java.util.HashMap,"JSONObject is a HashMap, there is no order maintained of the entries you put into it."
17798844,2,0,6,java.util.HashMap,org.json.simple.JSONObject class extends java.util.HashMap and this is the reason why you see this order of the properties on output.
17803775,1,0,0,java.util.HashMap,Why can index of backing table in java.util.HashMap be the same for two different provided keys?
17803775,1,0,0,java.util.HashMap,Internally HashMap has method hash() which defends against poorly written hash-code by applying special function.
17803775,1,0,0,java.util.HashMap,@Dunkan Jones resize is done automatically when amount of elements you put into HashMap (size) is more or equal to threshhold(calculated according to initialCapacity and loadFactor provided in constructor).
17803775,1,0,0,java.util.HashMap,What hashing in HashMap means ?
17804237,2,0,1,java.util.HashMap,"This is   critical because HashMap uses power-of-two length hash tables, that    otherwise encounter collisions for hashCodes that do not differ    in lower bits."
17804283,2,1,1,java.util.HashMap,"This is critical because HashMap uses power-of-two length hash tables, that otherwise encounter collisions for hashCodes that do not differ in lower bits."
17823988,2,1,3,java.util.HashMap,"So in the case of HashMap<String, Integer>, you would do: code."
17806319,1,0,0,java.util.HashMap,Converting ConcurrentHashMap to HashMap.
17806319,1,0,0,java.util.HashMap,Is it possible to convert ConcurrentHashMap  to HashMap in java .
17806319,1,0,0,java.util.HashMap,"This is my sample program where i was converting from ConcurrentHashMap   to HashMap  but i was getting exception -   Exception in thread ""main"" java.lang.ClassCastException:    java.util.concurrent.ConcurrentHashMap cannot be cast to java.util.HashMap   at com.Hi.main(Hi.java:18)  My code -  code."
17806350,2,0,3,java.util.HashMap,ConcurrentHashMap and HashMap are siblings and not Parent-Child related.
17806362,2,0,5,java.util.HashMap,"A ConcurrentHashMap is not a HashMap , so you cannot perform this cast."
17806362,2,0,5,java.util.HashMap,Suggested Reading:  Java - HashMap vs Map objects What does it mean to “program to an interface”?
17806367,2,0,6,java.util.HashMap,"A ConcurrentMap (like ConcurrentHashMap) has no relationship with any AbstractMap, such has HashMap, so the solution is to create a new HashMap adding all values from ConcurrentHashMap during object creation."
17806409,2,0,1,java.util.HashMap,"Typically each concrete type in the Java Collection API (like HashMap, ArrayList etc.)"
17806409,2,0,1,java.util.HashMap,"About the exception you are getting, it's because ConcurrentHashMap is not a subtype/supertype of HashMap, thus you are getting a ClassCastException."
17807506,2,0,1,java.util.HashMap,Actually There is no inheritance relation between HashMap and ConcurrentHashMap that's why while casting the concurrenthashmap object to hashmap its giving the ClassCastException.
17809078,1,0,0,java.util.HashMap,"I have a paint method that paints the grid for me, paints all the cell values, then paints all my JComboBox objects, which are maintained as a HashMap."
17810740,1,0,1,java.util.HashMap,Putting a HashMap inside a HashMap then populating the two maps.
17810801,2,1,4,java.util.HashMap,gens is mapping String to HashMap.
17810801,2,1,4,java.util.HashMap,"You are calling gens.put(string, string) and should instead be calling gens.put(string, HashMap<string,string>) Your code should read: code."
17812454,1,0,1,java.util.HashMap,Remove duplicate values from HashMap in Java.
17813547,2,0,1,java.util.HashMap,If this is yours frequent requirement then DualHashBidiMap calss of  apache's commons.collections  will help you more instead of using HashMap.
17812555,2,0,3,java.util.HashMap,make a reverse HashMap!
17819710,1,0,4,java.util.HashMap,I'm trying to use Jackson to convert a HashMap to a JSON representation.
17819710,1,0,4,java.util.HashMap,Is there a Jackson version of Java's HashMap or Map that'll work in a similar way to what I have implemented?
17824124,2,1,2,java.util.HashMap,"So instead of HashMap<String, Object> map = new HashMap<String, Object>(); make it Map<String, Object> map = new HashMap<String, Object>(); Edit As a response to your added questions, you can create a wrapper object that will handle all your objects."
17823599,1,0,4,java.util.HashMap,"The image is DominatorTree_EMA.JPG If I expand the first class (the class that gives problems), I have this graphic (DominatorTreeExpanded_EMA.JPG): In the next tab, in the histogram, the graphic is this (Histogram_EMA.JPG): And in the Unreachable objects, the result is this (UnreachableObjects_EMA.JPG): I don't understand very well this 2 last graphics At last, I also have the report of Java VisualVM, where I have this results (Heapdump_JVM.JPG): According to this graphic, the HashMap objects are the problem, besides Integer and String objects."
17824065,2,1,4,java.util.HashMap,"Implementations of Map are HashMap and TreeMap, among others."
17824150,1,0,3,java.util.HashMap,Iterating through a HashMap in a For Each style.
17824150,1,0,3,java.util.HashMap,I want to iterate through the 'character' HashMap and grab all of the'Stat' objects using something like a for each loop.
17824150,1,0,3,java.util.HashMap,To do this I want to be able to output all the 'stat' objects contained in the 'character' HashMap.
17824340,2,0,0,java.util.HashMap,Things to be careful about:  Create your HashMap instance with the expected capacity to avoid having to resize the map as you add your 10K items.
17824968,2,0,0,java.util.HashMap,The return type of HashMap.size() is integer.
17824968,2,0,0,java.util.HashMap,int     HashMap.size() (Returns the number of key-value mappings in this map.)
17825400,2,1,1,java.util.HashMap,"If you are sure (for instance if you checked with instanceof or only put Stat objects in the skill-HashMap) you can cast the result of the get to a Stat object, like this: code."
17826500,1,0,0,java.util.HashMap,"I just think the solution as following  Mark the location and width and height of each shape and give them a   unique id Store the Shape metadata in either Array or HashMap   Randomly Pick any of the Shape's Metadata  from the Array [at this   point we have X,Y and Width and Height of the Shape from the target   image ] Open the Target Image using buffered Image traverse through   it and compare  the PIXEL location with previously selected shape's   metadata if it matches then replace that portion [Pixel Value] with   the example image uploaded , before replacing i should resize source image [mostly rectangle] to fit to the target shape of the target image."
17836884,1,0,2,java.util.HashMap,"Using new HashMap<>(); or new HashMap<String, ArrayList<String>>(); throws incompatible data types error I need a dictionary similar to the one below."
17836938,1,0,1,java.util.HashMap,I have 3 data structures ArrayList emptags HashMap  databaseMetadata HashMap   tagsTometadata emptags contains  code.
17836964,1,0,1,java.util.HashMap,Write HashMap of matrices into a file Java.
17836964,1,0,1,java.util.HashMap,"I have created this HashMap where I store (2,1) size matrices."
17836964,1,0,1,java.util.HashMap,"I want to Store this HashMap into a file so that I can send it through Ftp, But at the same upon reception, It should be in a format that allows me to retrieve the matrices easily and be used later."
17838725,2,0,0,java.util.HashMap,"You can use ObjectMapper Class and conver it into hashmap and then itereate the map by getting keyset ..... like this HashMap responseMap = new  ObjectMapper().readValue(jsonString ,HashMap.class); code."
17846610,1,0,2,java.util.HashMap,I'm creating a HashMap inline with double braces inside a function: code.
17850180,2,0,0,java.util.HashMap,This is exactly the reason why the HashMap cannot store more than one null values .
17854984,2,0,0,java.util.HashMap,"Map<String,Collection<String>> map = new HashMap<String,Collection<String>>(); The to list values from it you can do this code."
17854985,2,0,0,java.util.HashMap,You can not have duplicate key for a hash map see the below S.O for  What happens for duplicate keys in HashMap
17855022,2,0,0,java.util.HashMap,HashMap::put overrides the old value associated with the key.
17855049,2,0,0,java.util.HashMap,"From the java documentation about HashMap.put(K key, V value) method:  Associates the specified value with the specified key in this map."
17862820,2,0,1,java.util.HashMap,Note that I use a List<String> here instead of a HashMap.
17862820,2,0,1,java.util.HashMap,The fact that you're getting the values from a HashMap isn't actually important—you'd do the same thing for any Java Collection.
17871881,1,0,2,java.util.HashMap,"So you know, GameObject has a HashMap named 'object' that is already initialized."
17871905,2,0,2,java.util.HashMap,"There are two problems with your code:  You need to remove the argument list in the declaration of the constructor - Unlike C++, this list of type arguments is implied, and If GameObject has a HashMap object that does not have type parameters, you need to add a type cast: list = (HashMap<T,V>)object;"
17873193,1,0,1,java.util.HashMap,"So I have a static method that takes in a HashMap and a few other parameters and modifies the HashMap:  public static void foo(HashMap map, other parameters) Let's say I have a class called Bar that has two instance variable HashMap's."
17873193,1,0,1,java.util.HashMap,"I pass one of these HashMaps into foo, intending it to be modified (and do not pass the other HashMap in)."
17873193,1,0,1,java.util.HashMap,Am I correct in saying that it is impossible for the other HashMap to be modified by foo as a result of just this one method call?
17873477,2,0,0,java.util.HashMap,Am I correct in saying that it is impossible for the other HashMap to be modified by foo as a result of just this one method call?
17873232,2,0,1,java.util.HashMap,Am I correct in saying that it is impossible for the other HashMap to   be modified by foo as a result of just this one method call?
17873286,2,0,0,java.util.HashMap,"and you pass one to public static void foo(HashMap map, other parameters) then changes done to one in method foo will effect two as well."
17873565,2,0,1,java.util.HashMap,"If you have Map<String,String> map1=new HashMap<String,String>(); and  code."
17885162,2,0,0,java.util.HashMap,And   HashMap is not synchronized.it must be synchronized externally.
17885178,2,0,0,java.util.HashMap,"The implementation of HashMap is based on one hash table, and HashMap is not synchronized."
17885499,1,0,2,java.util.HashMap,"MyClass2 is defined as MyClass1, only that instead of float[] vector I have a HashMap < String, Float > ()."
17886972,2,0,0,java.util.HashMap,"Actually it is not necessary to wrap float[] and HashMap<String,float> as they themselves are serializable."
17897437,1,0,2,java.util.HashMap,Why should we use HashMap in multi-threaded environments?
17897437,1,0,2,java.util.HashMap,Today i was reading about how HashMap works in java.
17897437,1,0,2,java.util.HashMap,"So the answer is Yes there is potential race condition exists while   resizing HashMap in Java, if two thread at the same time found that   now HashMap needs resizing and they both try to resizing."
17897437,1,0,2,java.util.HashMap,"on the   process of resizing of HashMap in Java , the element in bucket which   is stored in linked list get reversed in order during there migration   to new bucket because java HashMap  doesn't append the new element at   tail instead it append new element at head to avoid tail traversing."
17897437,1,0,2,java.util.HashMap,It states that as HashMap is not thread-safe during resizing of the HashMap a pontential race condition can occur.
17897437,1,0,2,java.util.HashMap,"If it is not thread safe, why should we use HashMap then?"
17897516,2,0,6,java.util.HashMap,I have read a few comparisons of HashMap and ConcurrentHashMap on the web.
17897516,2,0,6,java.util.HashMap,This is due to the fact that we expect our HashMap’s to behave a certain way but under load they usually misbehave.
17897516,2,0,6,java.util.HashMap,They offer all the features of Hashtable with a performance almost as good as a HashMap.
17897673,2,0,1,java.util.HashMap,"But we can obviously, see why race condition occurs in HashMap."
17897673,2,0,1,java.util.HashMap,Why a race condition occurs in HashMap.
17901929,2,0,0,java.util.HashMap,"You might want to use a HashMap<String, Integer> as a dictionary to store your words."
17902662,1,0,0,java.util.HashMap,Java - How expensive is a HashMap.get() call?
17902662,1,0,0,java.util.HashMap,How expensive is a HashMap.get() call?
17902703,2,0,0,java.util.HashMap,"Hundreds of elements in an HashMap should not be a big deal on a fairly modern machine, it should be a matter of milliseconds (or less) if there are only a few hashcode collisions."
17902708,2,1,6,java.util.HashMap,"HashMap.get() is on average O(1), which means it's pretty efficient."
17902708,2,1,6,java.util.HashMap,"This efficiency could drop slightly, depending on the number of elements in the HashMap, but still should be pretty efficient."
17902708,2,1,6,java.util.HashMap,This is related to how the HashMap works - oversimplifying it a bit.
17902708,2,1,6,java.util.HashMap,"When you put a value to the HashMap, it would calculate the bucket to which it belongs."
17902708,2,1,6,java.util.HashMap,HashMap uses the value returned by the hashCode() method of the key.
17902708,2,1,6,java.util.HashMap,"If you had only keys returning distinct hash codes (and if you had infinite number of buckets), HashMap could tell exactly which key+value pair lives in which bucket, but it's not the case."
17902708,2,1,6,java.util.HashMap,"There could be multiple keys returning the same hash code (leading to placing them in the same bucket), therefore when HashMap finds the correct bucket, with more than one element, it will iterate over all keys and use equals() to find the one, which was requested."
17902708,2,1,6,java.util.HashMap,"Of course the more elements you put to the HashMap, the more likely it is that the collision will occur."
17902730,2,0,1,java.util.HashMap,"Because calculating the hash code should be constant time (and very fast in practice), and accessing a bucket should be constant time (and very fast in practice), a HashMap is one of the most efficient map implementations out there."
17902788,1,0,0,java.util.HashMap,"I created a class called XMLReader which is suppose to be able to read my XML data format using a method called readFromFile which returns an ArrayList<HashMap<String, String>>."
17903402,2,0,0,java.util.HashMap,You can manually map every key to a specific character using HashMap.
17910409,2,1,6,java.util.HashMap,HashMap makes absolutely no guarantees about the iteration order.
17910419,2,0,3,java.util.HashMap,"The order in which you see the entries in the HashMap depends on the hash codes of the keys and order of the entries in the bucket I believe and it is implementation dependent, but don't rely on HashMap for ordering at all."
17910476,1,0,6,java.util.HashMap,HashMap or TreeMap or LinkedHashMap which one is faster to iterate over?
17910476,1,0,6,java.util.HashMap,HashMap or TreeMap or LinkedHashMap ?
17910498,2,0,5,java.util.HashMap,"HashMap will generally be fastest, since it has the best cache behavior (HashMap iterates directly over the backing array, whereas TreeMap and LinkedHashMap iterate over linked data structures)."
17911069,2,0,1,java.util.HashMap,"The ConcurrentHashMap is thread-safe, while the basic HashMap is not."
17911555,2,1,2,java.util.HashMap,I would use HashMap instead of Hashtable with Map as reference type.
17914198,2,1,2,java.util.HashMap,"In this case, an effective way of serializing the object could be using the ObjectOutputStream class to serialize a HashMap object containing key-value pairs where the key could be a String and the value could be an Object (HashMap<String,Object>)."
17914922,2,0,0,java.util.HashMap,You can save time by using a HashMap from String to Integer index instead.
17915576,2,0,2,java.util.HashMap,"Hashtable is synchronized and that could cause performance issues, that's why you're advised to use something like a HashMap or any other suitable class that implements Map."
17915613,2,0,1,java.util.HashMap,if you want to find an item  with the itemId the best data structure would be HashMap because of access time.
17916045,2,0,0,java.util.HashMap,"In generic class, convert your json parameters into HashMap."
17916045,2,0,0,java.util.HashMap,Implement Factory Design pattern such that Factory class will return appropriate filter based on whether required key is present in HashMap or not.
17918787,2,0,0,java.util.HashMap,"First of all, you only need equals() and hashCode() methods if you use these objects as keys in a HashMap."
17919857,2,0,3,java.util.HashMap,A java.util.HashSet uses a java.util.HashMap as its storage.
17919857,2,0,3,java.util.HashMap,A java.util.HashMap uses a linked Entry object to represent the buckets in the map.
17921174,2,0,1,java.util.HashMap,You can use a HashMap to store the list of P elements for each div.
17926167,2,0,0,java.util.HashMap,"If you are not very particular about using string as the parameters, will be easier to take HashMap as a parameter."
17932576,2,1,6,java.util.HashMap,"In addition, if you don't want to deserialize into a HashMap, you can use the child() method on DataSnapshot."
17935263,2,1,6,java.util.HashMap,In the question you mentioned HashMap and in the implementation you have HashSet.
17941550,2,1,4,java.util.HashMap,"The reason it is not working is that you put the result of: new HashMap<>().put(""compulsary"", 1) instead of a hasmap itself."
17943158,2,0,0,java.util.HashMap,"If you want to be slightly more modern, use a HashMap instead."
17945117,1,0,0,java.util.HashMap,How to declare final HashMap that should not allow to update or remove element.
17945622,2,1,2,java.util.HashMap,You can implement a new HashMap code.
17950013,1,0,1,java.util.HashMap,I have the following HashMap:- code.
17951184,1,0,3,java.util.HashMap,There is a HashMap stored of these Server's information like the following on another remote server: code.
17951184,1,0,3,java.util.HashMap,"But, this HashMap only needs to know about what I have said is ServerInfo above."
17956624,2,1,1,java.util.HashMap,"In particular, the HashMap in each vertex is going to be extremely expensive; the Sun implementation allocates enough space for a 16-entry map by default, and that requires storage for the map's own memory-allocation record, hashCodes (32-bit ints, not chars), the object wrappers for each Character..."
17956033,1,0,0,java.util.HashMap,What is the subtype of Set that keySet() of HashMap returns?
17956033,1,0,0,java.util.HashMap,"I tried to check if the subtype of Set that keySet() method of HashMap returns, and check if it is instance of HashSet, but it's not."
17956152,2,0,2,java.util.HashMap,HashMap#keySet javadoc explains that the set is a view on the map's keys.
17956081,2,1,2,java.util.HashMap,"It's a private inner class defined within HashMap called KeySet, which you can see if you take a look."
17956963,1,0,1,java.util.HashMap,"Is it possible to leverage an ArrayList or HashMap as a ""session scoped component"" (i.e., ModelAttribute object) - rather than creating a pojo?"
17956963,1,0,1,java.util.HashMap,"If possible, I'd like to create a session scoped modelattribute like  - e.g.,  ""ArrayList<MyPojo>"" or ""HashMap<String, MyPojo>"" -  to share among different controllers."
17961776,2,1,1,java.util.HashMap,"** Edit to Send ArrayList **  I am not sure if you can do HashMap, but you can definitely do Array of MyPojo i.e MyPojo[]."
17958784,1,0,2,java.util.HashMap,of http://docs.oracle.com/javase/7/docs/api/java/util/Map.Entry.html The class defining the entries of HashMap.
17959254,1,0,2,java.util.HashMap,I've tried modifying the Javascript to return a HashMap like so: code.
17959254,1,0,2,java.util.HashMap,I'm not attached to returning it in a HashMap.
17959254,1,0,2,java.util.HashMap,Ideally I'm looking to return a tuple or a HashMap but if the only way to get it to work is to return two Strings in an array and then parse out the Integer that would be OK too.
17960794,1,0,0,java.util.HashMap,Create a Java HashMap of HREF and linknames in java.
17960838,2,1,3,java.util.HashMap,"It   provides a very convenient API for extracting and manipulating data,   using the best of DOM, CSS, and jquery-like methods  Here is a code you may try to store the links and details in a HashMap: code."
26537467,2,0,1,java.util.HashMap,"store HTTP headers, params, cookies in a java.util.HashMap: code."
17975764,1,0,2,java.util.HashMap,The goal is to make a wrapper around the HashMap so I can understand Clojure and how it ties with Java.
17977067,2,0,0,java.util.HashMap,"To fix, change the signature to return an Object, or, with additional edit, a java.util.HashMap."
17976982,2,0,0,java.util.HashMap,"Also singleton of this class serves no purpose as you only need a ""singleton"" of a HashMap."
17976982,2,0,0,java.util.HashMap,Why don't you just use a HashMap and be done with it?
17976717,2,0,0,java.util.HashMap,A HashMap does.
17977296,1,0,2,java.util.HashMap,How To Look Up Objects In HashMap Without Reference To Actual Object?
17977315,2,1,2,java.util.HashMap,You need to override the hashCode method to make the JVM store and retrieve your objects in HashMap properly.
17977315,2,1,2,java.util.HashMap,"When a put method is called on a hashed collection such as HashMap, the key object hashcode  method is called to decide the bucket to store the object."
17977315,2,1,2,java.util.HashMap,"Similary when you do a get on the HashMap, key hashCode method will be called to find the bucket and to retreive the object."
17979704,1,0,1,java.util.HashMap,for take values ​​from a class where there are only primitive fields (no methods) as a list of key - value do you prefer use reflection (with a dynamic iteration) or a specific method that return an HashMap?
17979802,2,1,2,java.util.HashMap,"A HashMap-based approach does not buy you much in terms of performance, because primitives must be wrapped in objects to be inserted into the map - the same way they would be wrapped to be returned from the reflection-based calls."
17981898,2,0,1,java.util.HashMap,"If you are going to be initializing blank copies of this Map frequently, it will make more sense to have a template Map that each myMap is constructed from; either a HashMap wrapped as unmodifiable or a Guava ImmutableMap are good choices there."
17981898,2,0,1,java.util.HashMap,Constructing from a preexisting Map instead of copying all of the elements into the new HashMap is much more efficient since the new one knows how big to make itself.
17982604,1,0,2,java.util.HashMap,The methods involved--  put() of HashMap and add() of HashSet seem straightforward enough--  doesn`t seem anything can go wrong during these operations-- but still.
17983306,1,0,0,java.util.HashMap,When Does HashMap.values()/HashMap.keySet() Return By Reference And When Does It Return By Value?
17983787,2,0,0,java.util.HashMap,You can access the keys of any HashMap using Map.keySet() method.
17983787,2,0,0,java.util.HashMap,Also note that java.util.HashMap is unordered.
17983787,2,0,0,java.util.HashMap,"HashMap makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
17983787,2,0,0,java.util.HashMap,"You would like to relook at the structure of your HashMap, you are having ArrayList as your key."
17984265,1,0,0,java.util.HashMap,"I can do it with HashMap like: ConcurrentHashMap<String, MyClass> MyClassDictionary; The average of objects to store would be like +800."
17984265,1,0,0,java.util.HashMap,I can take other options to avoid this kind of things but i really want to know if some of you know a better way than using HashMap.
17984638,2,1,0,java.util.HashMap,You can use any key in the HashMap which is Immutable.
17985033,2,0,2,java.util.HashMap,"You really shouldn't use a HashMap (or any mutable object) as your key, since it will destabilize your Map."
17985209,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#put(K, V)"
18001404,2,0,0,java.util.HashMap,Definitely if you are gonna to change values used by hashCode or equals it is not possible to use HashMap or HashSet.
17989006,1,0,1,java.util.HashMap,"The variable ""words"" is a HashMap in which the corresponding frequenzy of the word is stored."
17993119,1,0,0,java.util.HashMap,"Things i also use: String, Integer, HashMap, ArrayList, Date (java.util) and two enums Status and Qualifikation."
17993171,1,0,0,java.util.HashMap,Getting latest/newest HashMap entries.
17993171,1,0,0,java.util.HashMap,"I have a HashMap<String, String>, and I'm inputting an entry into the HashMap everytime a player speaks for example."
17993171,1,0,0,java.util.HashMap,"EDIT: Thanks to a reply, it seems HashMap is not the best way to do this but a queue might be better."
17993538,2,0,0,java.util.HashMap,HashMap do not support such behavior.
17993355,2,0,0,java.util.HashMap,Unfortunately HashMap does NOT retain the order in witch the data was added.For you specific case you should use a LinkedHashMap because this kind of map is exactly like HashMap but keeps the order and you can iterate over it to get the last entries.
17993393,2,0,0,java.util.HashMap,Is there any reason you are using a HashMap for this?
17993393,2,0,0,java.util.HashMap,As the HashMap will remove the last string the played says when a player speaks again.
17995541,2,0,1,java.util.HashMap,I believe that using primitives would be faster than using HashMap.
17995066,2,0,0,java.util.HashMap,you must take an HashMap to keep the most repeated chars with the repeat time and print it.
17995121,2,0,1,java.util.HashMap,"As mentioned in the comments, a HashMap seems ideal for this, although I won't give you the direct code, I'll give you a pseduo-code template."
17995123,2,0,6,java.util.HashMap,"Benchmark results I've pitted the HashMap approach against mine with three string lengths:   10 1,000 100,000  And these are the results: code."
17995123,2,0,6,java.util.HashMap,"The HashMap approach, on the other hand, is much faster for very short strings, but scales dramatically worse."
17998097,1,0,1,java.util.HashMap,Java HashMap returning null values even when key is present.
17998097,1,0,1,java.util.HashMap,"However, the HashMap is not returning the expected values, even though the key is present."
17999114,2,0,8,java.util.HashMap,"HashMap, HashSet) can very quickly find a set of candidate objects which will be equal to the one you're looking for (or trying to add, or whatever)."
18000136,2,0,3,java.util.HashMap,"Collections.synchronizedMap(new HashMap<K, V>);  Returns a synchronized (thread-safe) map backed by the specified map."
18000141,2,0,12,java.util.HashMap,You can make HashMap thread safe by wrapping it with Collections.synchronizedMap()
18009145,2,0,1,java.util.HashMap,Since HashMap doesn't maintain any order for its keys it's not a very good choice for this problem.
18002132,1,0,8,java.util.HashMap,Deserializing into a HashMap of custom objects with jackson.
18002132,1,0,8,java.util.HashMap,"Which de-serializes into a HashMap with the correct keys, but does not create Theme objects for the values."
18002132,1,0,8,java.util.HashMap,"I don't know what to specify instead of ""HashMap.class"" in the readValue() method."
18004064,1,0,3,java.util.HashMap,(A) The way HashMap is structured is: a HashMap is a plain table.
18004064,1,0,3,java.util.HashMap,The whole idea behind HashMap (or hashing in general) at the first place  is to put into use this constant-time memory access for  a.)
18004064,1,0,3,java.util.HashMap,"So, the overall structure in a Java Hash is: a table: table //     i`m using the identifier used in HashMap each cell of this table is a bucket."
18004064,1,0,3,java.util.HashMap,"Note: hashCode is ""normalized"" thru the function hash() (in HashMap for one) to better-fit the current length of the table."
18004064,1,0,3,java.util.HashMap,"//=============================================================== (B) From what I see in HashMap, the resizing of the table-- the hash is only done upon a decision based on  hash size and capacity, which are the current and max."
18004064,1,0,3,java.util.HashMap,This is the assumption the current setup of HashMap is using as well.
18004164,2,1,3,java.util.HashMap,Collisions in HashMap are only a problem in pathological cases such as denial of service attacks.
18004164,2,1,3,java.util.HashMap,"AFAIK, In Java 8 HashMap for a String key will use a tree map instead of a linked list for collisions."
18006521,2,0,0,java.util.HashMap,And it is completely true and basically what HashMap does when the table size is smaller than desired / the average amount of elements per bucket gets too large.
18006521,2,0,0,java.util.HashMap,The implementation of HashMap.get() in OpenJDK according to this is code.
18006521,2,0,0,java.util.HashMap,That shows how HashMap finds elements pretty good but it's written in very confusing ways.
18006521,2,0,0,java.util.HashMap,"If every hash is the same, your hash based lookup results in the same bucket and all your HashMap has become is a LinkedList (or whatever data structure holds the elements of a bucket)."
18005959,2,0,0,java.util.HashMap,Try looking at the Java data structure HashMap - that has a key:value structure.
18005959,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html If a key:value structure is not absolutely necessary, you could also attempt to use two different arrays, one which holds the ""keys"" and one which holds ""values""."
18007110,1,0,3,java.util.HashMap,"That's why I tried creating a HashMap<String, Method> to store the operator (String) and the method which should be called."
18012229,2,0,4,java.util.HashMap,"It is happening because of the hashcode implementation of Entry inside HashMap, Which is as follows:  code."
18012259,2,0,0,java.util.HashMap,That way you only need to modify one thing if you decide not to use a HashMap after all.
18012648,2,0,1,java.util.HashMap,This stack overflow question might help : use of immutable empty set(Collections.emptyMap() vs new HashMap())
18014594,1,0,0,java.util.HashMap,The below functions returns the frequency of numbers in an array using HashMap.
18014722,2,1,3,java.util.HashMap,"Simply because HashMap.keySet() returns an impmenentation of AbstractSet (internal), which implements  Set  Also when we write Set set= new HashSet(); how the set   variable can be used to access HashSet as set is an interface variable   ?"
18018564,1,0,0,java.util.HashMap,Issues with iterating the HashMap in Android.
18018564,1,0,0,java.util.HashMap,"I have a HashMap, that includes some frequencies as keys, and amplitudes as values."
18021309,1,0,2,java.util.HashMap,HashMap put performance.
18021309,1,0,2,java.util.HashMap,Let's say the key for this map is a very complex object which has not overridden equals() or hashCode() Is it really possible for HashMap.hash() or Object.hashCode() to be costly in certain situations ?
18021454,2,0,1,java.util.HashMap,It certainly is possible to create an object which is costly to put into a HashMap: code.
18021491,2,0,1,java.util.HashMap,"If you are seeing a performance hotspot, in HashMap.hash() and Object.hashCode(), then perhaps the reason is that you are just doing lots of HashMap lookups."
18023566,2,0,1,java.util.HashMap,"You can have a HashMap<String, Quad> in Resources, so you can get a quad using some key you used when creating it."
18028172,1,0,3,java.util.HashMap,Upgrading to struts 2.3.15.1 does not set HashMap values on action class.
18028172,1,0,3,java.util.HashMap,"Basically, I populate the HashMap props from the JSP into the Action class, when the form is submitted."
18030257,2,1,15,java.util.HashMap,First : how does a HashMap work?
18030298,2,0,0,java.util.HashMap,This will impact its storage in HashMap if the logic written in equals and hashcode uses these modifiable value.
18030298,2,0,0,java.util.HashMap,"But if we talk specifically in terms of HashMap then all the variables which are used inside equals and hashcode method, if they can be modified then that object should not be used as key else it can be used as key [but still not recommended]."
18032313,2,0,4,java.util.HashMap,Without this it would be impossible to extract anything from a HashMap() when you don't have the reference to the original key any more.
18032313,2,0,4,java.util.HashMap,"It also would be impossible to look something up in a HashMap using input from a user, when the stuff was put into the HashMap based on the data from a database."
18034728,2,0,6,java.util.HashMap,A HashMap is a good choice: code.
18038815,2,1,1,java.util.HashMap,"Add public Map<String, Texture> loadedTextures = new HashMap<String, Texture>(); to your renderer class in render.java and change your renderer.readyTexture() method to this: code."
18038815,2,1,1,java.util.HashMap,"Now that you have the code, the Map/HashMap stores the already loaded textures."
18038400,1,0,0,java.util.HashMap,HashMap putAll not adding any elements.
18038457,2,0,1,java.util.HashMap,"HashCode is only a helper field for HashMap, HashTable and similar structures."
18038510,2,1,8,java.util.HashMap,"Lets assume that we are talking about the case where the key is a String, and that we are using the HashMap or HashSet class with the standard (OpenJDK 6/7) implementation."
18038510,2,1,8,java.util.HashMap,"If a String is incorporated into a hash table as a key, its hashcode will be calculated once ... because HashMap and HashSet cache the hashcode in the entry."
18038510,2,1,8,java.util.HashMap,Then arrange that N of these keys are added to the HashMap as keys.
18043364,1,0,2,java.util.HashMap,HashMap is not thread safe.
18043364,1,0,2,java.util.HashMap,"In my case: 1 writer thread to update the HashMap, and N reader thread to read from the HashMap."
18043396,2,0,4,java.util.HashMap,A more severe problem can occur if a reader will iterate over the HashMap and simultaneously it will be modified by the writer.
18043417,2,0,1,java.util.HashMap,The case you mention is not really an issue since the same thing could happen if HashMap were thread-safe.
18043417,2,0,1,java.util.HashMap,Where you can have trouble is if V2 reads from the HashMap while V1 is in the process of making a change.
18043417,2,0,1,java.util.HashMap,"At that time, the HashMap's internal state is inconsistent."
18043435,2,0,1,java.util.HashMap,The best thing that we can do if we are not changing the value(K) or key (K) and we just inserting to /getting from the HashMap then make key and value class as immutable class.
18043435,2,0,1,java.util.HashMap,And importantly declare HashMap as final.
18043578,2,0,0,java.util.HashMap,"The writer can modify the internal structure of the HashMap while a reader searches in it, resulting in random behavior (wrong values, null instead of a value, exceptions)."
18281065,2,0,2,java.util.HashMap,Coming to your actual code: I would try to understand whether I am putting a null into the ClipboardContent object in the setOnDragDetected({}); The ClipboardContent class extends a HashMap - http://docs.oracle.com/javafx/2/api/javafx/scene/input/ClipboardContent.html.
18048159,2,0,4,java.util.HashMap,"HashMap is to Map as ArrayList is to List, so basically a HashMap is an implementation of a map."
18048159,2,0,4,java.util.HashMap,More documentation can be found here: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html http://docs.oracle.com/javase/6/docs/api/java/util/Map.html
18050407,2,1,4,java.util.HashMap,"Intern-ing is effective only in so far as the up-front cost of the intern operation can be fully offset by the minimized cost of the (possibly many) calls to equals, driven by HashMap."
18050407,2,1,4,java.util.HashMap,"The most straight forward way to cache is with HashMap, and a traditional equals."
18050407,2,1,4,java.util.HashMap,"Option 1: no caching Claim: You're likely to have sufficiently effective results by using a fast hash (and caching it internally), a ""traditional"" implementation of equals, and by starting with a HashMap or HashSet of sufficient minimal size Ideally there are few collisions in the hash table, and the number of calls to equals is minimal."
18049914,1,0,1,java.util.HashMap,Jackson Date Format from HashMap.
18056512,2,0,1,java.util.HashMap,"Several people have (rightly) pointed out the use of a Map to store the created objects - Hint: Look up HashMap (the account id can be the key) When it comes to getting input from the user, JOptionPane.showInputDialog() will be what you need (parentComponent can be null) I hope that is enough to get you going, without actually completing your homework for you."
18057219,2,1,1,java.util.HashMap,A simple HashMap is not threadsafe to use.
18058303,2,0,0,java.util.HashMap,"Too bad, you cant use HashMap."
18058303,2,0,0,java.util.HashMap,Implement HashMap and override containsKey and containsValue.
18062346,2,1,2,java.util.HashMap,Main difference between EnumMap and HashMap is that EnumMap is a specialized Map implementation exclusively for Enum as key.
18062346,2,1,2,java.util.HashMap,So If your keys are the type Enum  go for a EnumMap otherwise Go for HashMap.
18062346,2,1,2,java.util.HashMap,Prefer to read : EnumMap or HashMap if lookup key is a String
18062272,2,0,0,java.util.HashMap,"If requirement is to iterate on the entries in the same order as they were put,consider LinkedHashMap Otherwise always prefer the HashMap if you dont care about any of the above criteria EnumMap is a specialized Map implementation for use with enum type Keys.see http://docs.oracle.com/javase/7/docs/api/java/util/EnumMap.html.So if your keys are of Enum types go for it."
18096342,2,0,0,java.util.HashMap,You can go for static HashMap which can be initialized and filled at the time of application start up.
18065818,2,0,0,java.util.HashMap,Once the ArrayLists are in the HashMap you would have to enumerate them to find the one with the greatest length.
18065773,1,0,0,java.util.HashMap,"I have two HashMap<HashSet<String>, Long> that I want to compare based on the Key."
18065773,1,0,0,java.util.HashMap,"Since there is only one Set<String> in each HashMap<Set<String>, Long> it makes me nervous that I am grabbing all the Keys, or is this okay?"
18066143,2,1,1,java.util.HashMap,it.remove() is removing the entry from the HashMap.
18066690,1,0,10,java.util.HashMap,"I find myself doing this often with Java, for example whenever I create a type that I know I want to keep in a HashSet or use as a key in a HashMap (equivalently, .net Dictionary)."
18080766,2,1,1,java.util.HashMap,It's common to write a type to use as a composite key to use in a Dictionary/HashMap.
18067142,1,0,1,java.util.HashMap,What is the easiest way to get the Value in a HashMap of one item?
18067142,1,0,1,java.util.HashMap,I have a wrapper HashMap that I am using to wrap a Set with a Timestamp.
18067142,1,0,1,java.util.HashMap,There is only a single Element added to each HashMap.
18067142,1,0,1,java.util.HashMap,What is the easiest way to get the value in this HashMap of only one item?
18067142,1,0,1,java.util.HashMap,Do I have to iterate over this HashMap even though I know there is only one item?
18067286,2,0,0,java.util.HashMap,"I'd store the ordering in a HashMap<Character, Integer> and pull the indexing information from that in constant time."
18067317,2,1,1,java.util.HashMap,It also looks like the Adapter is currently accepting a HashMap but you have an ArrayList so change its constructor to code.
18068668,2,1,0,java.util.HashMap,You will need to import HashMap & Map classes.
18070578,2,1,1,java.util.HashMap,Your GetFileData function is creating a HashMap not an ArrayList.
18070578,2,1,1,java.util.HashMap,You can not get an element from a HashMap by using its position.
18070578,2,1,1,java.util.HashMap,You need to change necessary variables from HashMap to ArrayList
18071558,1,0,0,java.util.HashMap,"Im doing an exercise where I have these points with (x,y) stored in a set and I have these set stored in a HashMap with the type of point as the key HashMap<String,Set<Point>>."
18076565,2,0,3,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
18076633,2,0,4,java.util.HashMap,HashSet use HashMap store data: code.
18076633,2,0,4,java.util.HashMap,the HashMap capacity is 1. but if use default constructor: code.
18076633,2,0,4,java.util.HashMap,the HashMap capacity is 16*0.75.
18077213,2,0,0,java.util.HashMap,HashMap not thread safe as it is.
18077213,2,0,0,java.util.HashMap,You can use Synchronized method with HashMap to achieve same thread safe functionality in HashTable
18077611,2,1,3,java.util.HashMap,There are two ways to mitigate that:  You could change setFactorForTermNameMapping to wrap the HashMap using Collections.unModifiableMap().
18077611,2,1,3,java.util.HashMap,You could use ConcurrentHashMap instead of HashMap.
18077933,1,0,2,java.util.HashMap,"I have HashMap with ArrayList as key and value as Integer, how can I get value from specific key."
18081824,2,0,0,java.util.HashMap,I suggest loading the first file in a HashMap.
18087810,2,0,8,java.util.HashMap,"The error is this:  After this is done, I assume that the data I put into the HashMap from hiveList is going to persist, so I clear the hiveList array using hiveList.clear();  What got passed to the hash map is the reference to the list, not a copy of it."
18092098,1,0,0,java.util.HashMap,Why is this HashMap being passed as reference.
18092098,1,0,0,java.util.HashMap,"Ideally I would like to reuse the EventTable HashMap to create other entries, while retaining my  old entries, so I would like to pass EventTable by value."
18092153,2,0,2,java.util.HashMap,here HashMap can not copy the date because it could be anything.
18092153,2,0,2,java.util.HashMap,but you can create a new HashMap by its constructor.
18099489,1,0,0,java.util.HashMap,The variable above is a HashMap.
18100685,2,0,2,java.util.HashMap,Then store the implementations in a HashMap for lookup:  code.
18112876,2,0,2,java.util.HashMap,"Persistent collections must be typed with an interface type, and not with a concrete type: Map, Set or List, but not HashMap, LinkedHashMap, HashSet or ArrayList."
18116473,2,1,2,java.util.HashMap,a TreeSet and a HashMap which share their element objects.
18117871,1,0,0,java.util.HashMap,Hi I have two ArrayList which has HashMap stored in it.
18118261,2,0,0,java.util.HashMap,And also you stored HashMap with in Array.
18118261,2,0,0,java.util.HashMap,"In your case the element is HashMap, so U also  need to know how equals method works in HashMap."
18119219,2,0,2,java.util.HashMap,"You can do this by storing the data in a HashMap while also having a sorted collection, though you would have to do some work to keep the data in sync between the two structures."
18123812,1,0,2,java.util.HashMap,"so i am using HashMap to store key,value pair .but i don'get sufficient solution to store and retrieve this HashMap into sharedpreferences."
28956575,2,0,0,java.util.HashMap,The easiest way to store HashMap in Preferences is just convert it to the string and store it.
28956575,2,0,0,java.util.HashMap,On the Otherside get that string convert it in HashMap and enjoy.
28956575,2,0,0,java.util.HashMap,To Convert String to HashMap & vice-versa check this link.
18125191,1,0,0,java.util.HashMap,"On this activity result, I search on my mMarkers which is a HashMap<Long, Marker> like this: code."
18126176,2,1,0,java.util.HashMap,You need to make a copy of your HashMap as well or you will have 2 objects pointing to the same HashMap.
18127431,1,0,1,java.util.HashMap,"In the implementation of the factory, a HashMap was created using FormulaKey as key, so maybe this caused trouble."
18131409,1,0,0,java.util.HashMap,"So I figured I needed to setup a map like this:  Map<Integer, Set<Long>> myMap = new HashMap<Integer, Set<Long>>  I would like to retrieve a value from a key's set of values."
18132773,1,0,0,java.util.HashMap,"A hashmap in Java is instantiated using Map D = new HashMap(); When you use the above line and compile with hadoop jar , it throws an error as Map is used for something different in hadoop."
18134904,2,1,2,java.util.HashMap,Notice also the right hand side value has a Map type rather than a HashMap as generics are not covariant which means generic types on the right hand side assigned values must match exactly with those from the left hand side declaration.
18135842,1,0,2,java.util.HashMap,How to iterate through a HashMap with two iterators?
18135842,1,0,2,java.util.HashMap,I want to search a HashMap for duplicates.
18135842,1,0,2,java.util.HashMap,"Currently this is my HashMap:  HashMap<String, HashMap<String, String>> I was going to create two Iterators, one i and another j, and two loops."
18135963,2,0,2,java.util.HashMap,"I want to search a HashMap for duplicates  Assuming you mean duplicate values, you can do code."
18137922,1,0,2,java.util.HashMap,Case insensitive HashMap which retains the original key?
18142100,2,0,1,java.util.HashMap,I use jackson 1.9.12 and there are no problems serialize and deserialize HashMap.
18141073,2,0,0,java.util.HashMap,Or if you have lots of key value pairs you can use HashMap then  code.
18143714,1,0,0,java.util.HashMap,Display HashMap of String and ArrayList.
18143786,2,0,0,java.util.HashMap,"Output =  { , 1.element1 2.element2 } tells that you have:  One List = Empty (It must be empty and not null, because otherwise you would be getting an NPE)  Other List = 1.element1, 2.element2  For a HashMap the order of keys' iteration is not same as the order in which they were inserted."
18145654,2,0,0,java.util.HashMap,"From HashMap apidoc:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
18145654,2,0,0,java.util.HashMap,"No need to write that many loops :) (unless you insist on printing the ordinals of each element, but in that case also there are other solutions) Notice that I used the List interface in the HashMap declaration which allows me to use the Arrays.asList method in the initialization."
18144148,2,1,1,java.util.HashMap,"A key point - a HashMap is theoretically defined as having no set order - you're expecting your results to be printed out in the order you inserted, Java is actually iterating through them in the opposite order."
18144148,2,1,1,java.util.HashMap,"There is no comma between your array elements because you haven't put one in your code, you've coded for commas between HashMap entries instead."
18147401,2,0,0,java.util.HashMap,"I'm not a Java programmer, but: HashMap is not safe for concurrent access."
18148055,2,0,2,java.util.HashMap,And of course HashMap is not concurrent as the comments have pointed out.
18148106,1,0,0,java.util.HashMap,"I have a map instantiated this way: Map<Integer, Set<Long>> myMap = new HashMap<Integer, Set<Long>>(); And I'm trying to do the following: code."
18153521,2,1,1,java.util.HashMap,"Running ""contains"" on an array is going to be a linear operation whereas something like a HashMap will lessen the lookup cost."
18154060,2,1,1,java.util.HashMap,"Store everything in a HashMap<Date,String>."
18154060,2,1,1,java.util.HashMap,"You could first fill the HashMap with all empty groups, and then iterate over them."
18157074,1,0,0,java.util.HashMap,So I have this requirments:  A class called Destination  A HashMap called Destinations  The Destination class has an array of objects of the type Door.
18157074,1,0,0,java.util.HashMap,": a) A method in the object that holds Destinations that checks whether the destination for the new door exists or not in the HashMap Destinations, and therefore insert that door to its existing Destination or create the new Destination and then insert the door."
18157074,1,0,0,java.util.HashMap,the add method for the Destinations HashMap and implement the previous described functionality there.
18157194,2,1,3,java.util.HashMap,What you will almost never see is someone subclassing HashMap or ArrayList or HashSet and overriding their add or put methods.
18157194,2,1,3,java.util.HashMap,TL;DR: Hide the map inside of another class so clients don't know there's a java.util.HashMap using either:  a utility class Destinations with static methods a singleton class DestinationInfo the map hidden as a static field (with static methods) inside the model object Destination itself.
18159476,2,0,1,java.util.HashMap,Here I propose a solution using HashMap: code.
18160284,2,1,1,java.util.HashMap,HashMap works with Hash bucket algorithm.
18160284,2,1,1,java.util.HashMap,And Hash buckets are arranged as array which the HashMap class calls as table.
18166981,1,0,2,java.util.HashMap,"UPDATE:  What I was trying to do was ""polymorphically"" call theResponse from the class that is returned as a String from a HashMap."
18167784,1,0,6,java.util.HashMap,Getting first the first thing in HashMap?
18167795,2,1,12,java.util.HashMap,HashMap does not manatain the order of insertion of keys.
18167795,2,1,12,java.util.HashMap,First change your banks map from HashMap to the LinkedHashMap: code.
18168754,2,1,4,java.util.HashMap,"Since it extends HashMap, it's still backed by an array, but there is also a doubly-linked list of Entry objects to ensure that the iteration order is predictable."
18171855,2,0,2,java.util.HashMap,"Change your declaration to: HashMap<Integer,Thing> things = new HashMap<Integer,Thing>(); //        lowercased variable name Change your class name to Foo Check the Java coding conventions here."
18171909,1,0,0,java.util.HashMap,"Before I moved to hibernate, I used to accomplish this by keeping a HashMap of unique instances."
18181697,2,0,0,java.util.HashMap,"Try to change heap size (-Xmx) parameter If you don't use some items in your HashMap, use HashMap.remove method."
18177914,2,1,2,java.util.HashMap,HashMap<>).
18181138,2,0,0,java.util.HashMap,"If you  will override hashCode() method will it degrade the performance of application.It would improve performance if the right data structure used at right place, For example: a proper hashcode() implementation in Object can nearly convert O(N) to O(1) for HashMap lookup.unless you are doing too much complicated operation in hashCode() method"
18180904,2,0,3,java.util.HashMap,"It would improve performance if the right data structure used at right place,  For example: a proper hashcode implementation in Object can nearly convert O(N) to O(1) for HashMap lookup unless you are doing too much complicated operation in hashCode() method It would invoke hashCode() method every time it has to deal with Hash data structure with your Object and if you have heavy hashCode() method (which shouldn't be)"
18219853,2,0,2,java.util.HashMap,However when an instance of such class is inserted either into a HashMap HashSet or equivalent data structure hashCode() & optionally equals() method is invoked to identify right bucket to put the element in.
18181039,2,0,3,java.util.HashMap,"For example, if your hashCode() simply returns value 1 then the use of HashMap or HashSet will be significantly slower than with proper implementation."
18185742,2,1,1,java.util.HashMap,"Some times in your case, you might be calling the async task more than one time and they may try to access the same HashMap for the itteration."
18185742,2,1,1,java.util.HashMap,"You can avoid this exception by using ""ConcurrentHashMap"" instead of HashMap."
18188739,1,0,0,java.util.HashMap,`ArrayList of HashMap` or `LinkedHashMap` to get item by index.
18188739,1,0,0,java.util.HashMap,For Requirement 1 - I have two options :   1.1 | To implement an ArrayList Of HashMap.
18188739,1,0,0,java.util.HashMap,"[ArrayList<HashMap<String,String>>] 1.2  | To implement a LinkedHashMap and query the items by index using something like  -> new ArrayList(hashMapObject.entrySet()).get(0);   The Question is which is better among 1.1 or 1.2 ?"
18188826,2,0,2,java.util.HashMap,"If speed is really an issue, you can maintain a HashMap and an ArrayList."
18188888,2,0,2,java.util.HashMap,Use two collections:  An ArrayList to store the references for access by index A HashMap to store the references for access by key  For example: code.
18191182,2,0,2,java.util.HashMap,"I would use a global HashMap<Integer, Integer> to keep count of each number presented in arrays."
18192016,2,0,0,java.util.HashMap,"If your HashMap contains, --String, Object-- and NOT  --String, Integer-- the following should help."
18194986,1,0,2,java.util.HashMap,We have an app which maintains a HashMap in memory keyed by specific user IDs and had values representing certain system events.
18194986,1,0,2,java.util.HashMap,The basic functionality is that the user makes a request to the web server which checks the HashMap for any events keyed by their ID otherwise waits for a short amount of time on the HashMap until they either time out or a notify is executed on the HashMap which wakes the client up and immediately processes the event.
18195649,2,0,0,java.util.HashMap,"These two inputs could then be used in a HashMap<CityPair,Integer> type."
18196234,1,0,3,java.util.HashMap,HashMap and ArrayList adding while iterating/looping.
18196234,1,0,3,java.util.HashMap,Do I need to create some sort of locking mechanism while 'saving to DB' for the dbEntitiesDeletesBacklog HashMap and other containers not included in this excerpt?
18196560,2,1,2,java.util.HashMap,"Alternatively, use a ConcurrentHashMap instead of a regular HashMap to avoid requiring synchronization during iteration."
18196460,2,0,2,java.util.HashMap,"HashMap<Character, List<Short>> map My understanding was you were looking for a simple way to store a list of values with a character?"
18200523,1,0,1,java.util.HashMap,How to handle better data from HashMap in Java?
18200523,1,0,1,java.util.HashMap,"Then, I stores such files on HashMap<String,TabManager>."
18200523,1,0,1,java.util.HashMap,"(The key of the HashMap), should to be the name of the file."
18200523,1,0,1,java.util.HashMap,"After, I have on memory the files opened within of HashMap."
18209411,2,1,1,java.util.HashMap,If there is an method which returns CustomerNode by a name then you need to use it instad of putting all objects in HashMap.
18208503,1,0,1,java.util.HashMap,I have searched HashMap as well as Guava's Maps without success so far.
18219308,1,0,1,java.util.HashMap,I'm talking about generic interfaces/concrete implementations like List/ArrayList and Map/HashMap.
18220455,2,0,7,java.util.HashMap,HashMap on the other side of equals specifies the actual type of the Object created and assigned to the reference foo.
18220455,2,0,7,java.util.HashMap,"The actual type specified (HashMap here) must be assignable to the reference type (Map here) i.e. if the type of reference is an Interface, the Object's type must implement it."
18221574,1,0,2,java.util.HashMap,"When my application loads, it calls this method right away (KeyboardMap.map is an empty HashMap)."
18226546,1,0,0,java.util.HashMap,"I'm putting them in a HashMap after reading them in, but some of them use non-English characters."
19522114,2,0,1,java.util.HashMap,"A Pig map under the hood is just a java.util.HashMap, which obviously has no order."
18227593,1,0,1,java.util.HashMap,"I created various ArrayList and HashMap objects, so that I could pass a JLabel as a Key, and get back a BufferedImage."
18227918,2,0,0,java.util.HashMap,"The actual model for their sizing function (used by ArrayList and presumably HashMap) is something similar to when they reach capacity they double their capacity, which consists of declaring a new block in memory and copying across all the stored data."
18229850,2,0,0,java.util.HashMap,I'd use a HashMap to seperate the data instead of one long ArrayList ( you shouldn't have stored the data like this in the first instance ) code.
18229884,2,1,1,java.util.HashMap,You can try by using HashMap code.
18239156,2,1,6,java.util.HashMap,Here is the second implementation that uses a HashMap to cache the Class objects.
18234597,1,0,0,java.util.HashMap,Does HashMap's equals depend on EntrySet.keySet?
18234597,1,0,0,java.util.HashMap,"One of the member variables that I compare is a HashMap<String, MyObject>."
18234597,1,0,0,java.util.HashMap,My question now is: does the equals() method of HashMap depend on this value or not?
18234728,2,1,3,java.util.HashMap,You can check this easily by looking at the source of HashMap#Equals().
18234728,2,1,3,java.util.HashMap,HashMap maintains these Entrys in an EntrySet.
18238862,2,0,2,java.util.HashMap,"Translates to an STL map, Java HashMap, PHP associative array,   Python/Ruby dictionary, etc."
18241037,1,0,2,java.util.HashMap,I have written a program to remove duplicates from an array using a HashMap but I am unable to print the correct output.
18245083,2,0,0,java.util.HashMap,"It seems likely to me, based on what you've shown, that organisationalStructure.getParentId() is not a key in your HashMap."
18249040,2,1,2,java.util.HashMap,"Of course, types can be changed, I used HashMap because I didn't know if datapoints will always be in order - and if you want to add by index, it's usually far easier than trying to use a List<>."
18248796,1,0,0,java.util.HashMap,"where viewArr is an arrayList of all my views in this layout ; view_to_rect is an instance variable declared as: private static Map view_to_rect = new HashMap();  The Log always shows ""size of view to rect = 0""."
18249696,1,0,1,java.util.HashMap,Parse columnName / values from an SQL query to HashMap .
18249696,1,0,1,java.util.HashMap,How I can parse an SQL Query (in string format) and extract the Column Names and the values in a HashMap ?
18250986,1,0,0,java.util.HashMap,"HashMap, LinkedHashMap, ArrayList etc)."
18261557,2,0,1,java.util.HashMap,"Edit: After reading your comment, I think you should use a HashMap with a Node as the key and a List as value."
18319938,2,0,1,java.util.HashMap,"For instance, a java.util.HashMap will outperform a std:map, because the latter is required to be sorted."
18275322,2,0,0,java.util.HashMap,"You can try something like this or you can create a Map<Integer,String> map=new HashMap<>(); and store number and String word there and retrieve."
18275896,2,0,0,java.util.HashMap,Instead of writing your own HashMap based solution you can use DynaBean and DynaClass: support not only simple properties but also indexed (Array) and mapped (Map).
18275439,2,1,5,java.util.HashMap,Why not just create a HashMap of values?
18275439,2,1,5,java.util.HashMap,Why a HashMap?
18275439,2,1,5,java.util.HashMap,"At the moment, you've only got the one value in your HashMap."
18275439,2,1,5,java.util.HashMap,"The only overheard you have to face is the HashMap object itself, and two methods, which frankly is a fair trade off for a far tidier solution."
18277679,2,1,1,java.util.HashMap,You can make it more efficient in two ways (not counting the one in Yogendra Singh's comment):  Use a HashMap with id as the key instead.
18277909,1,0,1,java.util.HashMap,So I got a logic build up in handleMessage method to construct the HashMap which would contain latest versions of these 3 files.
18277909,1,0,1,java.util.HashMap,"After few iteration, I get the HashMap build up which contains latest 3 files."
18277909,1,0,1,java.util.HashMap,But the bean which should read data from the channel should only read when the HashMap is fully built with latest 3 data files.
18279836,1,0,0,java.util.HashMap,"Maybe HashMap is a good option, but since I have to keep each line of data together, if I build a HashMap for each line, that would be too expensive."
18282293,2,0,2,java.util.HashMap,If we then look at the implementation of HashMap: code.
18286844,2,1,4,java.util.HashMap,"The ArrayList class doesn't use the hashCode method so it's not necessary now, but if at any point you are going to use your class with HashMap, HashSet, or any other collection that does use hashCode, the program will break because hashCode and equals are not consistent."
18295132,2,0,2,java.util.HashMap,"Your best option would be to create a custom subtype of HashMap<K, V> or HashMap<String, V> and then add the convenience methods."
18297528,1,0,0,java.util.HashMap,I have a HashMap named Customers String-1 is the Key and String-2 is the value for example   All the reference I found online about using ListView is basically using java.util.List with only one item and it returns the text from the View that was clicked or the id (zero-based position).
18297528,1,0,0,java.util.HashMap,"I need te be able to use the HashMap with the customer name in the value position and the customer number in the key position In the ListView I only want to show the customer names list, but the information I need to extract after a row is clicked, using the OnItemClickListener is the customerNumber (which Will not be shown in the List)."
18307748,2,1,0,java.util.HashMap,"Also, why are you using HashTable instead of HashMap?"
18307748,2,1,0,java.util.HashMap,The main difference is that HashTable is synchronized (used for threaded applications) and HashMap is not.
18307748,2,1,0,java.util.HashMap,"If you are not using threads to operate on the HashTable, you might prefer HashMap."
18302152,2,0,3,java.util.HashMap,A familiar example from practice: HashMap.
18302152,2,0,3,java.util.HashMap,"Instead, HashMap defines a simple and straightforward serialized form which transfers all, and no more than, the data needed to reconstruct it at the other end."
18302012,2,1,5,java.util.HashMap,"Having said that, you should use a HashMap instead of Hashtable."
18306270,1,0,0,java.util.HashMap,So I decided to set up a HashMap but it does seem to work: code.
18306439,2,1,0,java.util.HashMap,This doesn't seem to be a very large HashMap.
18308987,1,0,4,java.util.HashMap,"At first I though that I should use 1000 but reading the description of the constructor that taks the initialCapacity parameter it says Constructs a new, empty set; the backing HashMap instance has the specified initial capacity and default load factor (0.75).."
18309046,2,0,2,java.util.HashMap,"If it's really worth worrying about this (and I suspect it's not - resizing a set of 1000 integers won't take long), then bear in mind that HashSet is backed by a HashMap and the put method references this: code."
18309071,2,1,1,java.util.HashMap,Note: it will always be the next power of 2 for HashSet & HashMap.
18311488,1,0,1,java.util.HashMap,Null key and values in HashMap.
18311488,1,0,1,java.util.HashMap,HashMap allows one null key and multiple null values.
18311488,1,0,1,java.util.HashMap,I want to know how does HashMap handle null key/values?
18311618,2,0,2,java.util.HashMap,"HashMap defines two private methods to handle null keys:  getForNullKey() which is invoked from the get(K key) method, if key is null, ~~and~~ putForNullKey(V value), which is invoked from the put(K key, V value) method if key is null."
18314323,2,0,1,java.util.HashMap,"doesn't create new HashMap<> objects, but simple let new_lessons and lessons pointing to this.lessons"
18321810,1,0,2,java.util.HashMap,How to make Weakrefernce in Concurrent HashMap.
18321843,1,0,1,java.util.HashMap,I was hoping to use the tool as the key to a HashMap and the List of Chambers as the value.
18324720,1,0,2,java.util.HashMap,"Here is what I have, using the common sense: Lists ArrayList  add(E e)  O(1) add(int index, E e)   O(n) set(int index, E element   O(1) get(int index) O(1) remove(E e) remove(int index)   O(n) contains(E e) O(n) list concatenation (addAll) O(n)  LinkedList  add(E e)  O(1) add(int index, E e)   O(n) set(int index, E element   O(n) get(int index) O(n) remove(E e) remove(int index)   O(n) contains(E e) O(n) list concatenation (addAll) O(1)   Sets HashSet and LinkedHashSet  add(E e)  O(1) remove(E e) O(1) contains(E e) O(1) find/get an element using iterator O(n)  TreeSet  add(E e)  O(log n) remove(E e) O(log n) contains(E e) O(log n) addAll O(n log n) find an element using iterator O(n) or perhaps O(log n) when implementing the binary search   Maps HashMap and LinkedHashMap  put(K key, V value)  O(1) get(K key)  O(1) remove(E e) O(1) containsKey(Object key)  O(1) containsValue(Object value) O(n) putAll O(n) find/get an element using iterator O(n) or perhaps O(log n) same as in TreeSet  TreeMap  put(K key, V value)  O(log n) get(K key)  O(log n) remove(E e) O(log n) containsKey(Object key)  O(log n) containsValue(Object value) O(n) putAll O(n log n) find/get an element using iterator O(n)  NOTE: Collections based on hashing assume well designed hash function to be in O(1) otherwise it is in O(n) The Question: Is this correct?"
18325033,2,0,1,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
18325033,2,0,1,java.util.HashMap,"Maps HashMap  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
18325033,2,0,1,java.util.HashMap,"Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance (the number of buckets) plus its size (the number of key-value mappings)."
18325033,2,0,1,java.util.HashMap,"LinkedHashMap  Like HashMap, it provides constant-time performance for the basic operations (add, contains and remove), assuming the hash function disperses elements properly among the buckets."
18325033,2,0,1,java.util.HashMap,"Performance is likely to be just slightly below that of HashMap,...   TreeMap  This implementation provides guaranteed log(n) time cost for the containsKey, get, put and remove operations."
18326351,1,0,0,java.util.HashMap,How to get a HashMap value and compare it to a number.
18326351,1,0,0,java.util.HashMap,"I have a list of entries in a HashMap, a String as a Key, and a Long as a Value."
18326386,1,0,6,java.util.HashMap,Java HashMap associative multi dimensional array can not create or add elements.
18326386,1,0,6,java.util.HashMap,Okay so I have spent several hours trying to wrap my head around this concept of a HashMap in Java but am just not able to figure it out.
18326441,2,1,7,java.util.HashMap,"In this case first we check if there is already a HashMap object stored in our outer HashMap under the key ""en""."
18326441,2,1,7,java.util.HashMap,"Now to put a new value into it we have to first get it from the outer HashMap, then put the new value."
18327391,2,0,4,java.util.HashMap,"You probably want to use some kind of Map, such as a HashMap<String,String>."
18327391,2,0,4,java.util.HashMap,I suggest you read the Javadocs for the Map interface and the HashMap class.
18328211,2,0,2,java.util.HashMap,"Note that in both methods, the keys and values are not duplicated but just referenced by both HashMap."
18328248,2,0,1,java.util.HashMap,"If you are looking deep copy of your previous map use copy constructor, clone is  a shallow copy of this HashMap instance: the keys and values themselves are not cloned."
18328504,1,0,1,java.util.HashMap,"Converting object into HashMap i got following exception, code."
18328618,2,1,3,java.util.HashMap,"You can cast res to HashMap only if stub.call(sessionId, ""sale.list"", ""11111"") returns a HashMap object."
18328618,2,1,3,java.util.HashMap,[Ljava.lang.HashMap; indicates that what you are getting is an array of hashMap and not a single HashMap.
18328680,2,0,1,java.util.HashMap,"Now, if you know the above code returns a java.util.Map or atleast a java.util.HashMap, and it follows the same generics then you can cast it to a Map."
18328785,2,0,1,java.util.HashMap,The exception message indicates that the stub.call(...) method is returning HashMap[] and not HashMap.
18333734,2,0,0,java.util.HashMap,Map>> PopisJela = new HashMap>(); ... ResultSet Rez = Stat.executeQuery(queryZaJela); code.
18332523,1,0,2,java.util.HashMap,Java return int from Object[][] via HashMap.
18332523,1,0,2,java.util.HashMap,"I have created a HashMap in a separate class, to get a database for a key and the coordinates of the key."
18334371,1,0,1,java.util.HashMap,I need to sort rowBeans based on value of one of the keys in HashMap columns.
18334579,2,0,0,java.util.HashMap,"so you would need to change columns to be HashMap<String, Comparable>."
18343577,2,1,1,java.util.HashMap,Replace your Hashtable with HashMap.
18343577,2,1,1,java.util.HashMap,2.Differences between HashMap and Hashtable?
18343643,1,0,2,java.util.HashMap,Convert Jruby HashMap to Java HashMap.
18345131,1,0,3,java.util.HashMap,Fastest way to determine the lowest available key in Java HashMap?
18345131,1,0,3,java.util.HashMap,"Imagine a situation like this: I have a HashMap<Integer, String>, in which I store the connected clients."
18345131,1,0,3,java.util.HashMap,"It is HashMap, because the order does not matter and I need speed."
18345131,1,0,3,java.util.HashMap,Is there any faster or more professional way to get the lowest free key of a HashMap?
18345163,2,0,4,java.util.HashMap,Any reason to use a HashMap?
18345163,2,0,4,java.util.HashMap,"Of course you could always maintain both a HashMap and a TreeSet, making sure you add entries and remove entries from both together, if you really needed to."
18346995,2,0,0,java.util.HashMap,"The problem is that you're trying to pass a HashMap<Person, List<Dog>> to a method which is expecting a Map<Person, List<?"
18346995,2,0,0,java.util.HashMap,"extends Dog>>, but not permitted on a HashMap<Person, List<Dog>>."
18351332,1,0,1,java.util.HashMap,Iterate over values of a HashMap without creating any new objects to be Garbage Collected.
18351332,1,0,1,java.util.HashMap,I am trying to iterate over the values of a HashMap in Java without creating any new objects that would need to be garbage collected.
18353003,2,1,1,java.util.HashMap,"I profiled the heap and the largest set of objects was ArrayList$Itr (not related to this HashMap example, but I am currently rewriting all enhanced for loops to standard for loops)  As you point out, that is a different case."
18353537,1,0,0,java.util.HashMap,Java HashMap put() strange behaviour.
18353537,1,0,0,java.util.HashMap,I have created a HashMap with ten fields: the key type is String and the value type is an double[].
18353888,1,0,2,java.util.HashMap,PlayFramework [NullPointerException: null] when add an item in ArrayList or HashMap.
18353888,1,0,2,java.util.HashMap,The error ([NullPointerException: null]) I jump both when I try to access the contents of an ArrayList as both a HashMap.
18353888,1,0,2,java.util.HashMap,"I decided to remove the constructor because not used, and initialize the ArrayList as the HashMap in the declaration of the attributes: code."
18353888,1,0,2,java.util.HashMap,HashMap for me the same thing happens.
18365220,1,0,1,java.util.HashMap,Strange behaviour adding HashMap to TreeSet.
18365220,1,0,1,java.util.HashMap,"I have the following problem adding a HashMap<String,String> to a TreeSet<HashMap<String,String>>."
18365220,1,0,1,java.util.HashMap,"The attributes variable is a collection of type TreeSet<HashMap<String,String>>."
18365941,2,1,1,java.util.HashMap,"You are almost certainly getting a ClassCastException, because elements of TreeSet must implement Comparable and HashMap doesn't."
18366785,2,0,0,java.util.HashMap,"hint:  1) create hashmap to store processed values 2) iterate over the first array: if current value is stored in map, then fill 0, otherwise store this value in HashMap and copy the value to new array"
18367616,2,1,4,java.util.HashMap,Take for example the Entry inner static class defined in HashMap: code.
18368726,1,0,1,java.util.HashMap,"I have a JRuby class that inherits from a java class (java.util.HashMap, for example)."
18378685,1,0,0,java.util.HashMap,java HashMap keys comparison with low throughput.
18379643,2,0,3,java.util.HashMap,"For example, you could be trying to add a HashMap to a list of TreeMap."
18379657,2,0,1,java.util.HashMap,"The one could be a List<HashMap<String, Object>>, while the others can be a List<TreeMap<String, Object>>, which are not compatible (you can't add a HashMap to a List<TreeMap> and vice versa)."
18383542,1,0,2,java.util.HashMap,HashMap values calculation without iterating.
18388936,1,0,3,java.util.HashMap,How to Iterate through HashMap in MyBatis foreach?
18388936,1,0,3,java.util.HashMap,And my input parameter type is HashMap.
18853832,2,0,0,java.util.HashMap,In the second example you should just be able to pass the HashMap.entrySet() which provides a getKey and getValue.
21757685,2,1,6,java.util.HashMap,Finally I've the solution for HashMap I Should use entrySet() in order to make it iteratable   code.
18389135,1,0,3,java.util.HashMap,How to verify if a value in HashMap exist.
18389135,1,0,3,java.util.HashMap,I have the following HashMap where the key is a String and the value is represented by an ArrayList: code.
18389135,1,0,3,java.util.HashMap,"My question is, What would be the best way to find out if my HashMap contains a Specific String from my second ArrayList?"
18389747,1,0,0,java.util.HashMap,"What I'm trying to do is creating custom objects and storing them in an HashMap<String, ArrayList<CustomObject>> and it's working, but when I go to landscape mode it obviously ""forget"" everything I stored since then."
18393402,2,0,0,java.util.HashMap,HashMap needs equals() and Hashcode() methods that are available from Object Class but you have to override them for your purpose.
18392507,1,0,1,java.util.HashMap,"NB: texMap is a HashMap which contains float arrays with texture coordinates to be used by the texture coordinate buffer, keyed with a number from 0-16."
18396086,2,0,4,java.util.HashMap,One example of this kind of design can be found in HashMap where it defines a private inner class KeySet Otherwise having it as a private instance looks good.
18399058,1,0,0,java.util.HashMap,I've tried to put all the info into a String and into a HashMap array and I got no result.
18404039,2,1,5,java.util.HashMap,"Also note that Cipher is not thread safe (nor is HashMap), in case you wanted to use this cache in multiple threads."
18428753,2,1,1,java.util.HashMap,You mentioned that you use Tomcat 7 so in this case the request.getParameterMap() returns a org.apache.catalina.util.ParameterMap which is just a HashMap which makes no specific guarantees as to its content order.
18407063,1,0,1,java.util.HashMap,Now the values in the dropdown menu are from the list phonetypes which is implemented as a HashMap in .java file.
18408141,1,0,2,java.util.HashMap,If we look from HashMap point of view the variable step is calculation of hashCode and equals.
18408141,1,0,2,java.util.HashMap,Using hashCode and equals methods HashMap can vary the algorithm to implement hashing.
18436817,2,0,1,java.util.HashMap,"Strategy Pattern - Wiki If you compare your example in context of strategy pattern you will find:  Client is HashMap, Context is Object, and Strategies are hashCode() and equals() methods."
18408599,1,0,5,java.util.HashMap,"A few of the links:  http://techtraits.com/Programming/2011/11/20/using-custom-serializers-with-jackson/ http://wiki.fasterxml.com/JacksonHowToCustomSerializers  Use ObjectMapper.convertValue(object, HashMap.class);, iterate over the HashMap's key/value pairs, and build the string (which is what I'm using now, but I feel the conversions are excessive?)."
18408998,2,0,0,java.util.HashMap,Have you considered using a HashMap (or LinkedHashMap) instead of an Array.
18409227,1,0,1,java.util.HashMap,"When I call a value inside the most inner nest, I am given an error stating that I cannot call get for the type object, but when I call getClass().getName(), I am given HashMap."
18409287,2,1,4,java.util.HashMap,where the inner HashMap doesn't have type arguments.
18410816,1,0,2,java.util.HashMap,While reading about HashMap I see that it is implemented as an array of buckets?
18411060,2,0,0,java.util.HashMap,"However, if your HashMap implementation uses a proper HashFunction (algorithm to distribute your values in the hashmap array), your ""buckets"" only has, preferably, one item in it."
18410875,2,1,2,java.util.HashMap,Looking at the source code of HashMap tells us that it's implemented as an array of Entries:  code.
18411510,1,0,0,java.util.HashMap,Given the following Java HashMap: code.
18414784,2,0,0,java.util.HashMap,The answer on this thread: Java HashMap associative multi dimensional array can not create or add elements has an example of how to do this.
18415104,1,0,2,java.util.HashMap,"Notice that two PhoneNumber instances are involved: one is used for insertion into the HashMap and a second, equal, instance is used for (attempted) retrieval."
18415144,2,0,3,java.util.HashMap,So from HashMap perspective they will be treated as 2 different entries.
18415146,2,1,4,java.util.HashMap,Also see: Checking for and Removing elements in Java HashMap
18417482,1,0,0,java.util.HashMap,I guess NSDictionary is an objective C equivalent for HashMap.
18417923,1,0,4,java.util.HashMap,Problem: When trying to load the settings and put it in a HashMap I get these errors (shorted to 3 lines): code.
18417923,1,0,4,java.util.HashMap,When trying to load these data (the errors happened here) and put it in a HashMap I'll use this (from here): code.
18417923,1,0,4,java.util.HashMap,(I've got the same error) Question: Is it possible to convert the map values to list and put it in the HashMap listDataChild?
18567999,2,0,0,java.util.HashMap,I'm not sure about -  Is it possible to convert the map values to list and put it in the   HashMap listDataChild?
18420750,1,0,3,java.util.HashMap,"When I use bimap.inverse(), won't it lead to the same hashCode()-related issues it leads with a HashMap containing mutable keys?"
18421737,2,0,2,java.util.HashMap,You'll get a HashMap as you iterate iii.
18421737,2,0,2,java.util.HashMap,Iterate over this HashMap within the above iteration.
18423111,2,0,1,java.util.HashMap,"Something like HashMap<Component, File> for example"
18425764,2,0,0,java.util.HashMap,"HashMap doesn't guarantee ordering, therefore if you need ordering, use ArrayList or LinkedList."
18425764,2,0,0,java.util.HashMap,"If you want to stick with HashMap, you need to sort the HashMap based on the key before each rotation."
18427970,1,0,0,java.util.HashMap,Java fork join concurrent HashMap solve lost updates.
18429545,2,0,2,java.util.HashMap,A HashMap for fast access.
18429743,2,0,0,java.util.HashMap,The easiest way to find a solution to such a problem is to consult the JavaDocs: http://docs.oracle.com/javase/7/docs/api/ Find your class there (in your case: java.util.HashMap) and look for the remove method.
18429743,2,0,0,java.util.HashMap,"To remove something from a HashMap, simply hand the key to the remove method: code."
18429743,2,0,0,java.util.HashMap,"This will remove the key-value pair ""1"", ""1_2"" from the HashMap."
18429743,2,0,0,java.util.HashMap,"To be able to map a key to multiple values, try creating a HashMap with a String and a List: code."
18431602,2,0,3,java.util.HashMap,A HashMap does not guarantee the order after you sorted the map.
18431602,2,0,3,java.util.HashMap,"This might helpful:Order HashMap<String,Integer> according Integer"
18432019,2,0,1,java.util.HashMap,ConcurrentHashMap is a thread-safe alternative to a normal HashMap - so an explicit lock is not required.
18432693,2,0,1,java.util.HashMap,Another idea would be to use HashMap to store your data.
18432693,2,0,1,java.util.HashMap,"This basically gets the sentece form the edittext, splits it into words then checks if each word is in the HashMap."
18434278,2,1,2,java.util.HashMap,The choice between a HashMap or a TreeMap would depend on whether you want to keep your entries sorted by key or not.
18434278,2,1,2,java.util.HashMap,"I believe that sorting is not what you're looking for; so, a HashMap would suffice."
18435131,2,0,4,java.util.HashMap,The reason that a (large) TreeMap is slow relative to a (large) HashMap under optimal circumstances is that lookup using a balanced binary tree requires looking at log2N tree nodes.
18435131,2,0,4,java.util.HashMap,"By constrast, in an optimal HashMap (good load factor and no collision hotspots) a lookup involves 1 hashcode calculation and looking at O(1) hashchain nodes."
18435131,2,0,4,java.util.HashMap,HashMap performance depends on the collision rate of the hash function and key space.
18435131,2,0,4,java.util.HashMap,"In the worst case where all keys end up on the same hash chain, a HashMap has O(N) lookup."
18435055,2,1,9,java.util.HashMap,"Unlike HashMap that re-allocates its internals as new ones get inserted, the TreeMap does not generally reallocate its nodes on adding new ones."
18435055,2,1,9,java.util.HashMap,"The speed difference is due to the different time complexity of the two containers: inserting N nodes into a HashMap is O(n), while for the TreeMap it's O(N*LogN), which for 1000000 nodes is roughly 20 times asymptotic difference."
18436117,1,0,1,java.util.HashMap,"In my project, I have to load data from the DB and save to a HashMap and process it(there are about 5 millions of records)."
18436117,1,0,1,java.util.HashMap,"And for some small tweak, I've decided to save this HashMap object to file, and hope this will save me some time when I have to re-run this program."
18436117,1,0,1,java.util.HashMap,And the problem appears when I'm writing that HashMap to file.
18436117,1,0,1,java.util.HashMap,"What makes it run out of memory when saving object, cause that when I'm processing this HashMap it is fine and when saving object it need not extra memory(Am I wrong)."
18439338,2,1,3,java.util.HashMap,"Concerning your first two questions, I would say that it is not a recommended practice to extend HashMap, because you are changing the way a Map is working when you override put."
18440440,1,0,1,java.util.HashMap,"Edit: Same concept is while we create objects as Map map=new HashMap(), than how does it maintain that it is containing hashmap object."
18441029,1,0,0,java.util.HashMap,I have a HashMap that contains many of the previous objects defined by some key.
18448486,2,1,4,java.util.HashMap,"You don't know that next week you might use it in a HashMap, and someone else using your class will assume its been done too."
18449804,2,1,3,java.util.HashMap,It happens that the concurrent modification check done by the HashMap code fails to detect this situation.
18449804,2,1,3,java.util.HashMap,The code for HashMap's iterator's hasNext in Oracle's JDK7 is: code.
18449804,2,1,3,java.util.HashMap,So here's what happens in your code:  You create a HashMap.
18449807,2,0,0,java.util.HashMap,"From the javadoc of HashMap:  Note that the fail-fast behavior of an iterator cannot be guaranteed   as it is, generally speaking, impossible to make any hard guarantees   in the presence of unsynchronized concurrent modification."
18456269,2,0,5,java.util.HashMap,"If you want to lookup objects based on their String name, this is a textbook case for a Map, say a HashMap."
18456269,2,0,5,java.util.HashMap,Otherwise HashMap or TreeMap will do.
18459569,2,0,0,java.util.HashMap,I would put the whole parameter in a HashMap so it is easy to get the values.
18459569,2,0,0,java.util.HashMap,...and put them into your HashMap.
18461983,1,0,0,java.util.HashMap,In a HashMap named map I duplicate the keys but I still do not get any run time exception of key duplication.
18461992,2,1,5,java.util.HashMap,And it is mentiond in the docs of HashMap#Put()  Associates the specified value with the specified key in this map.
18462091,2,0,1,java.util.HashMap,HashMap does.
18463828,2,0,0,java.util.HashMap,"If you wish to create a new map, you may need to assign a new HashMap to map reference You are printing only values hence the output"
18468020,2,0,3,java.util.HashMap,HashSet is implemented using HashMap in Java while TreeSet is implemented using TreeMap.
18468020,2,0,3,java.util.HashMap,"Internal Implementation : HashSet is backed by an HashMap instance, LinkedHashSet is implemented using HashSet and LinkedList while TreeSet is backed up by NavigableMap in Java and by default it uses TreeMap."
18469290,2,1,2,java.util.HashMap,"use a HashMap<String,AgentSales> where the key is agent+month+year to aggregate."
18472131,1,0,4,java.util.HashMap,What is the purpose of WeakHashMap when there is HashMap and Concurrent HashMap?
18472131,1,0,4,java.util.HashMap,What is the need arises for introducing Weak HashMap when there is already other implementations available.
18472131,1,0,4,java.util.HashMap,In short i have two issues :   Why jdk has WeakHashMap when there is HashMap and Concurrent HashMap    in java ?
18472179,2,0,1,java.util.HashMap,It does not happen in normal HashMap.
18472179,2,0,1,java.util.HashMap,In the example I have taken one HashMap and one WeakHashMap.
18472179,2,0,1,java.util.HashMap,In the HashMap object entry will be there but in WeakHashMap object there will not be entry present.
18472179,2,0,1,java.util.HashMap,WeakHashMap vs. HashMap
18472943,1,0,1,java.util.HashMap,"When I ran it yesterday, it found three possible suspects:  net.sf.ehcache.Cache net.sf.ehcache.store.DiskStore org.apache.catalina.loader.WebappClassLoader  When I ran it today, it found 2 possible suspects:  java.util.HashMap org.apache.jasper.servlet.JasperLoader  So, with MAT and AppDynamics, it appears that no memory leaks were detected for classes directly related to the PHP-Java Bridge JAR files."
18474379,1,0,0,java.util.HashMap,Generics can't instantiate `new HashMap`.
18474379,1,0,0,java.util.HashMap,Why does the following line of code give an error in HashMap?
18474414,2,0,1,java.util.HashMap,"Since you are creating a HashMap object, you must specify all of the generic parameters."
18488665,2,0,4,java.util.HashMap,"Use an ArrayLists instead of Lists, HashMap's instead of Map's then GWT compiler does not need to compile the code for all possible implementations of the List,Map's etc."
18489399,1,0,5,java.util.HashMap,The Problem: the first getParameter call internally parses the inputStream and inserts all parameters into a parameter HashMap.
18490371,2,0,0,java.util.HashMap,"Try using a Map<String,Integer>, for faster access try HashMap<~> code."
18490458,1,0,0,java.util.HashMap,I am not sure if that is the right way and i would expect that there is an easier way UPDATE  I fixed it with using a HashMap.
18490758,2,0,1,java.util.HashMap,"HashSet should be good for your use:  HashSet class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
18501229,1,0,2,java.util.HashMap,C++ returning HashMap object to Java.
18501229,1,0,2,java.util.HashMap,I have a JNI function that JAVA calls that needs to build and return a HashMap.
18504072,1,0,1,java.util.HashMap,I find myself repeating the code of  store write only copy of datastructure and read only immutable ConcurrentHashMap readers are reading only from read only immutable HashMap no locks.
18504633,2,1,1,java.util.HashMap,"Any Map instance that's safely published (eg a plain old HashMap), can be safely read by multiple threads."
18504215,2,0,1,java.util.HashMap,Note that HashMap due to lookup optimizations does not preserve order.
18504255,2,1,2,java.util.HashMap,java.util.HashMap is unordered; you can't and shouldn't assume   anything beyond that.
18504255,2,1,2,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
18505557,2,0,2,java.util.HashMap,"here is the snap of hashmap after the insertion of the keys   HashMap internally uses Array of Entry Map , hashcode generated by the keys are input to the  hashing function that makes this key to be inserted in the array in the order you are looking into it ."
18506752,2,0,0,java.util.HashMap,"This may mean defining a row object for holding the three EditText objects, but just as east to create a Map: Map<String, List<EditText>> mRows = new HashMap<String, List<<EditText>>(); When creating the new row you can modify your code so as to store the references: code."
18517715,1,0,0,java.util.HashMap,Error while iterating through HashMap in Java.
18517715,1,0,0,java.util.HashMap,I'm trying to iterate through a HashMap like this: code.
18520174,2,0,0,java.util.HashMap,"Yes, you should always override equals() and hashCode() especially if you are going to store your objects inside a HashMap, or any other types of dictionary type structures."
18520186,2,0,3,java.util.HashMap,This is all done for you by HashMap or HashSet so you don't have to worry about it.
18522691,1,0,2,java.util.HashMap,JAVA - Can't add to HashMap.
18522705,2,1,7,java.util.HashMap,"See the Javadocs here: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#put(K, V)"
18528226,1,0,0,java.util.HashMap,"MyPropertyManager.getProperty(""DEFAULT"",""LOGGER_NAME"") I think that I can load infos in a HashMap where I can acces usingg key like DEFAULT.LOGGER_NAME Can I use APACHE COMMONS Configuration (HOW?)"
18529494,2,0,2,java.util.HashMap,Imagine that CustomHashMap extends HashMap and you initialize a like following: code.
18561550,2,0,0,java.util.HashMap,2) Your HashMap will map a key to a Boolean.
18561550,2,0,0,java.util.HashMap,"3) When you iterate over the HashMap, you don't need the valueIterator."
18535481,2,0,0,java.util.HashMap,"You see, there are two ways to get null returned from a Map:  The key doesn't exist OR The key does exist, but its value is null (if the Map implementation allows null values, like HashMap)."
18535340,2,1,5,java.util.HashMap,"For TreeMap and HashMap, for example, containsKey is essentially just a get operation (more specifically getEntry) with a check for null."
18535340,2,1,5,java.util.HashMap,Note that HashMap.get is O(1) (with a hash function well-suited to the data) and TreeMap.get is O(log n).
18538529,1,0,0,java.util.HashMap,HashMap first key is null.
18538766,2,0,3,java.util.HashMap,"If your problem is that the table[0] element of the HashMap instance is null in the debugger, then this is NOT a problem as long as HashMap works as explained in the documentation (which it does)."
18538766,2,0,3,java.util.HashMap,"If you want to retreive the keys of the map, use HashMap#entrySet."
18538766,2,0,3,java.util.HashMap,See following example of a single insertion in a HashMap and the resulting HashMap#table field: code.
18538766,2,0,3,java.util.HashMap,"Also keep in mind HashMap allows null as key, so if you set key as null, this is a valid key."
18540887,2,1,3,java.util.HashMap,(I am not sure why Key is final in HashMap also)  Same answer as the HashEntry.
18540794,2,1,1,java.util.HashMap,"A HashSet utilizes a HashMap, as shown in the implementation: code."
18540794,2,1,1,java.util.HashMap,where map is an instance of HashMap.
18540794,2,1,1,java.util.HashMap,"Here is the implementation of HashMap#put(K, V): code."
18542037,1,0,0,java.util.HashMap,How to prove that HashMap in java is not thread-safe.
18542037,1,0,0,java.util.HashMap,"I'm working on application, that has HashMap as shared state."
18542037,1,0,0,java.util.HashMap,I tried to check the state of application in sinlge thread environment and in multithread environment via checking the size and elements of this HashMap in both of them.
18542082,2,0,0,java.util.HashMap,I suggest using a ConcurrentHashMap and trust that the Java team saying that HashMap is not synchronized is enough.
18542110,2,0,1,java.util.HashMap,"If you're unlucky, it will appear that HashMap is indeed threadsafe despite the documentation."
18542149,2,0,3,java.util.HashMap,It is hard to simulate Race but looking at the OpenJDK source for put() method of HashMap: code.
18542149,2,0,3,java.util.HashMap,So theoretically it is proven that HashMap is not thread safe.
18542170,2,0,1,java.util.HashMap,"You could certainly write a program which does puts and gets into a HashMap in a large number of threads but logging, `volatile fields, other locks, and other timing details of your application may make it extremely hard to force your particular code to fail."
18542170,2,0,1,java.util.HashMap,Here's a stupid little HashMap failure test case.
18542170,2,0,1,java.util.HashMap,It fails because it times out because the threads have gotten into an infinite loop because of corruption of HashMap.
18544619,1,0,0,java.util.HashMap,Trouble with adding to HashMap using arguments.
18549348,1,0,0,java.util.HashMap,ArrayList HashMap is undefined.
18549348,1,0,0,java.util.HashMap,"Can't seem to figure out why I get this error ""ArrayList<HashMap<String,String>>, int, String[], int[]) is undefined"" code."
18549669,1,0,0,java.util.HashMap,How to Reverse Key and Values of a HashMap?
18549669,1,0,0,java.util.HashMap,"I have created a HashMap<String,List<Integer>>."
18549669,1,0,0,java.util.HashMap,"Now I want to create a reverse HashMap<Integer,List<String>> by replacing the Key and Values from the first map."
18549669,1,0,0,java.util.HashMap,"For Example, Original HashMap: { A=[2,1], B=[1,3,4], C=[5], D=[3], E=[2,4] } Reversed HashMap: { 1=[A,B], 2=[A,E], 3=[B,D], 4=[B,E], 5=[C] }"
18555506,1,0,1,java.util.HashMap,"I have a Android Application whose core component is a HashMap<String,float[]>."
18555626,2,0,1,java.util.HashMap,Have you considered to leave the keys in the HashMap?
18558649,2,0,17,java.util.HashMap,"HashMap<K,V> and TreeMap<E> extend AbstractMap<K,V> which implements Map<K,V>, and then implement Map<K,V> themselves."
18560385,2,0,1,java.util.HashMap,That's because a HashMap does not preserve the order in which the records are inserted.
18560341,1,0,0,java.util.HashMap,I have a singleton utility class (in the same package) that creates an instance of MyAction1 and stores it in a HashMap: code.
18560459,1,0,0,java.util.HashMap,My second question  If I change the name attribute of the key Map m=new HashMap(); code.
18560552,2,1,2,java.util.HashMap,For the first question: the HashMap needs to call equals() to confirm that the two Dog objects which both have the same hash code are in fact equal.
18560552,2,1,2,java.util.HashMap,Never use objects with mutable data for keys in a HashMap!
18560851,2,0,1,java.util.HashMap,Lets consider how HashMap works.
18560851,2,0,1,java.util.HashMap,HashMap stores objects with same hashCode in a list and every such list is attached to the table with a cell associated with particular hashCode.
18560851,2,0,1,java.util.HashMap,Using proper hashcode alghorithm and capacity settings for the HashMap allows to reach O(1) performace on put and get in general.
18561121,1,0,0,java.util.HashMap,Creating HashMap with a timeout.Will Guava Caching work?
18561121,1,0,0,java.util.HashMap,This is my HashMap.
18563100,2,0,0,java.util.HashMap,This basically wraps an array of values and is faster than using a HashMap.
18564020,1,0,0,java.util.HashMap,"""loadedImages"" is a static HashMap that stores images by their URLs."
18564398,2,0,2,java.util.HashMap,"If your problem is that you want to associate an object with a String, then consider using a different type of collection, a Map such as a HashMap."
18564686,2,0,1,java.util.HashMap,"Similarly, if the method signature specifies that the return type is, say, HashMap<Integer, String>, every time you write a return statement, the word return has to be followed by something that evaluates to a HashMap<Integer, String> instance."
18566153,1,0,1,java.util.HashMap,i want use two ArrayList the both ArrayList i will put inside HashMap by using key and i want to pass to the jsp side in the jsp side i want retrieve the data using jstl how to reteive it plz any one help me
18570576,1,0,0,java.util.HashMap,"Bug casting String, Integer, Double using HashMap."
18570817,2,0,1,java.util.HashMap,"Because Somekey might have a wrong hashCode() implementation, maybe all the same code, and the earlier HashMap implementations might have been buggy."
18570819,2,0,1,java.util.HashMap,"May be you are not creating a java.util.HashMap but a custom and buggy implementation, for example : code."
18572743,2,0,0,java.util.HashMap,"Like, for instance, HashMap, in which the courseName will be a key and the Counse will be a corresponding value."
18578515,1,0,0,java.util.HashMap,"I can't post any code really as it is for work, however my own custom cache is basically a wrapper around a HashMap that stores the PropertyDescriptors, using a String as a Key (I need to store the key as the full class name plus property name, e.g."
18581468,2,0,2,java.util.HashMap,"One other option is just to put it in a json object and use it as a huge HashMap, just extract values where needed from keys."
18583422,1,0,3,java.util.HashMap,HashMap put method clarification.
18583422,1,0,3,java.util.HashMap,"I have a curious situation - there is a HashMap, that is initialized as follows: code."
18583441,2,1,3,java.util.HashMap,"Looks like you use the same HashSet<String> reference in all your values of the HashMap<String, HashSet<String>>."
18583441,2,1,3,java.util.HashMap,"Knowing this, the problem is how you insert the HashSet<String>s in your HashMap."
18586040,1,0,1,java.util.HashMap,"I want to put this into a HashMap, and have seen that I need to create a class to do this."
18589332,2,1,2,java.util.HashMap,"When you have a need to uniquely identify varying length input, a HashMap usually works quite well."
18591187,1,0,0,java.util.HashMap,Lookup from HashMap based on expression.
18591187,1,0,0,java.util.HashMap,Client code tries to lookup from the HashMap using String key code.
18591499,2,0,0,java.util.HashMap,"In short, I don't see it working on an existing HashMap() implementation."
18592832,2,0,0,java.util.HashMap,Therefre line  public Map<Object> map = new HashMap<Object>();  cannot be compiled.
18592832,2,0,0,java.util.HashMap,"Change it to  public Map<Object, Object> map = new HashMap<Object, Object>(); Or, better use real parameters instead of Object."
18593369,2,0,1,java.util.HashMap,"You should have to change the  public Map<Object> map = new HashMap<Object>(); field to public Map<String,Foo> map = new HashMap<String,Foo>(); and you should change the name of your class from Object to Foo as 'mre' suggestion."
18599876,2,0,2,java.util.HashMap,You can also use this Object as the Key on a HashMap if you need to store more.
18599914,2,0,1,java.util.HashMap,"I would use a HashMap<Long, Association> As Keys i would use ProductId * 1000000 + ThemeId so they look like this:  code."
18601478,1,0,1,java.util.HashMap,Now it uses HashMap and this is how it works:  Fill HashMap with keys from 2 to n and false values.
18601478,1,0,1,java.util.HashMap,Put counter value into temporary variable tmp so we can work even when another thread increment counter Iterate through the HashMap by incrementing i with tmp ( it is actually jumping on the multiplies of i) and set their values to true.
18601566,1,0,1,java.util.HashMap,I tried to use the HashMap but the script still does not recognize my variable.
18604653,2,1,0,java.util.HashMap,"You need to change all occurrences of HashMap in your code to take a String value and a String key HashMap< String, String >and replace the method with the following code."
18604808,2,1,2,java.util.HashMap,"Because ""s"" is a HashMap and by printing it out you are printing out the toString() of your Map."
18604808,2,1,2,java.util.HashMap,one wonders why you are using a single entry HashMap as an element in an ArrayList?
18604808,2,1,2,java.util.HashMap,Are there other entries in the HashMap that are not included in this question?
18607060,2,1,1,java.util.HashMap,3) Use a HashMap for registering all known parsers with their String ID: code.
18606447,1,0,1,java.util.HashMap,I created a HashMap having Student as key and String as value.
18609543,2,0,0,java.util.HashMap,Is Java HashMap.clear() and remove() memory effective?
18609543,2,0,0,java.util.HashMap,"If you want using singleton HashMap, You had better use ConcurrentHashMap."
18609408,2,1,1,java.util.HashMap,A HashMap has a time complexity of O(1).
18610625,1,0,1,java.util.HashMap,HashMap threadsafety when iterating over values.
18610625,1,0,1,java.util.HashMap,Is there any elegant way to make iterating over HashMap.values() threadsafe WITHOUT making a copy of the underlying map?
18610985,2,0,3,java.util.HashMap,1) The only possibility with HashMap is to completely synchronize all access to the map.
18611367,2,0,1,java.util.HashMap,"I would stick with the copy approach, although I wouldn't copy the HashMap."
18611367,2,0,1,java.util.HashMap,"If you have a HashMap<K,V> myMap iterate over new ArrayList<V>(myMap.values())."
18612811,2,0,2,java.util.HashMap,"But if you worry about identifiers, then using HashMap<String, JButton> might be a good way."
18618581,1,0,0,java.util.HashMap,"I'm trying to deserialize a HashMap with two classes that have since been changed, though not to any large degree."
18618581,1,0,0,java.util.HashMap,"The part that has me mystified is that Class 1 has never had a member variable of type Class 2, and the HashMap types have always been in the order ."
18621783,1,0,1,java.util.HashMap,"I hide the preference pages while storing them in a HashMap, to readd them later : code."
18623452,2,0,0,java.util.HashMap,"Also, I think you'd be better off using a HashMap with the key as the value of the coin rather than use a list which will allow duplicates."
25058520,2,0,0,java.util.HashMap,Try to use HashMap for better results.
18627494,1,0,1,java.util.HashMap,How do I assert that two HashMap with Javabean values are equal?
18627494,1,0,1,java.util.HashMap,"I have two HashMap<Integer, Question> maps that I would like to compare."
18627494,1,0,1,java.util.HashMap,How do I assert that both HashMap are equal?
18627494,1,0,1,java.util.HashMap,"In this scenario, equal means that both HashMap contains exactly the same Question bean?"
18627936,2,0,1,java.util.HashMap,Here is how HashMap equal method works: code.
18630750,2,0,0,java.util.HashMap,Use HashMap.
18630943,1,0,0,java.util.HashMap,I have a HashMap.
18631094,2,0,0,java.util.HashMap,"HashMap does not save any order, I think you should use LinkedHashMap that iterates in same order that values were inserted."
18632443,2,0,2,java.util.HashMap,"Implement a Comparator<HashMap<String, String>> which just extracts the value assocated with the value key, then use Collections.sort method to sort your arraylist."
18632957,2,0,1,java.util.HashMap,ConcurrentHashMap does not extend HashMap.
18632957,2,0,1,java.util.HashMap,"They are both implementations of a hash table, but ConcurrentHashMap has very different internals to HashMap in order to provide concurrency."
18632957,2,0,1,java.util.HashMap,"This means that you can have multiple threads calling put(), get(), remove(), etc on this map and there will never be any errors (if you try this with a regular HashMap you WILL get errors as it isn't designed to handle concurrency)."
18635320,2,0,0,java.util.HashMap,then insert them into a HashMap and define the language as key.
18636576,1,0,4,java.util.HashMap,What is meant by number of buckets in the HashMap?
18636576,1,0,4,java.util.HashMap,An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
18636952,2,0,2,java.util.HashMap,In java if you store an object in HashMap first HashMap implementation calls the hashCode() method to find a bucket location.
18636952,2,0,2,java.util.HashMap,Two object can have the same hashcode  so if this happens then HashMap will use the same bucket location and store the second object there too.
18642044,1,0,0,java.util.HashMap,"The ""Repository"" is a singleton class, the ""ordersCollection"" is a ObservableList, the ""ordersIdMap"" is a HashMap"
18648615,2,0,4,java.util.HashMap,"However, if you're wondering why Java's (as of now) specific implementation of HashSet produces the result you're seeing: it's because the Integer of value 1 hashes to a location in the internal entry table of a HashMap that comes before the location to which 2 hashes (note that a HashSet is really backed by a HashMap with arbitrary values)."
18650784,1,0,0,java.util.HashMap,ConcurrentModificationException while iterating through HashMap.
18650784,1,0,0,java.util.HashMap,I'm getting a ConcurrentModificationException while iterating through a HashMap.
18651747,1,0,0,java.util.HashMap,"To prevent overloading the database by updating the score every time the user submits an answer, I am storing the score counter in a HashMap which will be flushed to the database at the end of the test."
18651747,1,0,0,java.util.HashMap,This first function flushes the score from the HashMap to the database.
18653308,1,0,1,java.util.HashMap,Get ArrayList Index according to HashMap Key Value.
18653308,1,0,1,java.util.HashMap,"I Have a ArrayList as ArrayList<HashMap<String, String>> arrayList_LatLong = new ArrayList<HashMap<String, String>>(); in which I put HashMap into that ArrayList."
18653308,1,0,1,java.util.HashMap,The HashMap key-value pair suppose as follows   code.
18653308,1,0,1,java.util.HashMap,"Now I want ArrayList Index according to Value1, that means I have Value1 and I want the respective ArrayList Index so that I can get Other Values also from the respective HashMap."
18653325,1,0,0,java.util.HashMap,My keys inside HashMap may not fully equals with the property entry sequence.So I need to check whether that sequence are contains in my  HashMap key.Do I need to change my Comparator for that?
18655409,1,0,0,java.util.HashMap,Size of HashMap.
18655451,2,0,0,java.util.HashMap,Keys are unique in HashMap.
18655478,2,0,1,java.util.HashMap,A HashMap contains unique keys.
18694221,2,1,4,java.util.HashMap,"The way for solving this problem:  Pass $P{SUBREPORT_DIR} into main report (In this case: ""/valid/path/""), put this parameter into HashMap - standard way pass parameters into jasper Pass $P{SUBREPORT_DIR} from main report into subreport as parameter: $P{SUBREPORT_DIR} main report -> $P{SUBREPORT_DIR} of subreport (this way used when exist subsubreport, which calling from subreport) In main report set expression to subreport as $P{SUBREPORT_DIR} + ""sub.report.jasper""  Good luck"
18656988,1,0,0,java.util.HashMap,"so I've been trying to write a method that takes a HashMap, and counts how many of the same keys there are in the HashMap."
18657046,2,0,1,java.util.HashMap,counts how many of the same keys there are in the HashMap.
18657052,2,0,2,java.util.HashMap,Duplicate keys are not allowed in HashMap.
18657086,2,0,1,java.util.HashMap,HashMap is a key value pair data structure.
18657712,1,0,3,java.util.HashMap,"There you can find the complete code of the three classes here: https://gist.github.com/anonymous/6462953 As you can see, I'm using an array of Class() to get then into another array of Day() to get finally to the profpos HashMap to check if teachers are duplicates."
18660027,1,0,1,java.util.HashMap,How to load text file to HashMap at application startup?
18660622,1,0,3,java.util.HashMap,"I though about using the String as a key in a HashMap<String,Integer> but this wouldnt be sorted in terms of frequency My other method i considered is using a TreeMap<Integer, String[]> with a list of Strings with that integer, but there seems a lot of checking involved.. Im trying to avoid using more than one loop If possible as my String arrays will be much larger than the one above."
18660734,2,0,3,java.util.HashMap,"Use the HashMap<String,Integer> to maintain your counts."
18662617,1,0,1,java.util.HashMap,HashMap fails for user defined objects?
18662617,1,0,1,java.util.HashMap,"If I use a HashMap where the keys are objects of a defined class, then will the hashmap still give O(1) performance?"
18662671,2,1,1,java.util.HashMap,O(1) is not exact complexity of key search in HashMap its appox.
18671284,2,0,0,java.util.HashMap,So create your own class which extends HashMap/any implementation and ovveride  inserting methods .
18674173,2,0,0,java.util.HashMap,EDIT: In answer to @millimoose comment about this being not different from direct instantiation (which is true): You could try to implement your own Map or decorate or extend the HashMap implementation so that it retains type information.
18678615,1,0,0,java.util.HashMap,"The structure for a Feed object is as follows, with the HashMap holding up to 900 key-pair values: code."
18681273,2,0,1,java.util.HashMap,If I understand your problem correct then you need to use ArrayList and HashMap to achieve this: First you can create ArrayList of String to store X nouns.
18681273,2,0,1,java.util.HashMap,Then you can categorise particular nouns by HashMap code.
18681273,2,0,1,java.util.HashMap,To learn more about using List and HashMap read reference List:here and HashMap:here
18685400,1,0,0,java.util.HashMap,Each WorkingThreadTask has a HashMap: code.
18685501,2,0,1,java.util.HashMap,You might consider aggressively calling clear() on the work HashMap and other collections when the task completes.
18685572,2,0,0,java.util.HashMap,"HashMap carries quite a lot of overhead in terms of memory usage..... it carries about 36 bytes minimum per entry, plus the size of the key/value itself - each will be at least 32 bytes (I think that's about the typical value for 32-bit sun JVM).... doing some quick math: code."
18687698,1,0,0,java.util.HashMap,"My HashMap has some entries, but I am unable to retrieve them through the key."
18687698,1,0,0,java.util.HashMap,The HashMap refuses to admit it contains a key that itself provided.
18687871,2,1,1,java.util.HashMap,A HashSet uses a HashMap in its underlying implementation.
18690292,1,0,1,java.util.HashMap,"However, I don't understand why I have to declare it as a new HashMap, when it is a HashSet."
18690292,1,0,1,java.util.HashMap,Is there any way to know that a HashSet/Queue/others have to be declared as only a HashMap/LinkedList?
18690710,1,0,0,java.util.HashMap,I'm trying to load two mp3 files using a static Music class and store their sound IDs in a HashMap so I can access them when they're ready to be used.
18690710,1,0,0,java.util.HashMap,"However, putting them in a HashMap is giving me a NullPointerException."
18691664,2,0,0,java.util.HashMap,"Then in HashMap, store tag_id as a key and index of ArrayList to test_id_val as a value of HashMap."
18693346,2,1,0,java.util.HashMap,"This will allow for faster searching of a particular location (see HashMap vs ArrayList performance am I correct), and tidier code, ie no nested loops when iterating over the whole map."
18693425,1,0,1,java.util.HashMap,Is iterator of HashMap fail-safe?
18693425,1,0,1,java.util.HashMap,I was reading a properties of HashMap.
18693425,1,0,1,java.util.HashMap,And found an answer on SO having lot of votes which says:  Iterator in the HashMap is fail-safe while the enumerator for the Hashtable is not.
18698301,2,0,0,java.util.HashMap,"I guess, no one has really tested whether Hashtable’s enumerator really behaves differently than HashMap’s iterator."
18693471,2,0,0,java.util.HashMap,"Iterator of HashMap is fail-fast It will throw an ConcurrentModificationException if you try to modify while iterating over it,  while collection which come under ""java.util.concurrent"" package have  fail-safe iterator."
18693517,2,0,0,java.util.HashMap,HashMap's iterator is fail-fast because it throws a ConcurrentModificationException as soon as it detects change in underlying structure.
18694169,1,0,0,java.util.HashMap,"As you can see, I've created an object at the top which gets a proxy from the HashMap I added data into."
18695489,2,0,0,java.util.HashMap,One way to do this is to make a copy of the HashMap you are trying to modify.
18696971,2,1,1,java.util.HashMap,It is the same for HashMap.
18700751,1,0,4,java.util.HashMap,java.io.NotSerializableException: java.util.HashMap$Values.
18700751,1,0,4,java.util.HashMap,"Sadly, the log doesn't show the line or the class where the serialization problem occurs, but debugging the ESB until the step where problem occurs all the HashMap's that are used have only Serializable objects like String, Long and Date!"
18700752,2,1,13,java.util.HashMap,The remote service was trying to throw an Exception encapsulating a Collection of String from HashMap.values(): code.
18700752,2,1,13,java.util.HashMap,"HashMap has an inner class named Values (as you can see here), which is an implementation of Collection and is NOT Serializable."
18700752,2,1,13,java.util.HashMap,"So, throwing an exception having the content of HashMap.values(), the remote method will throw a serialization exception instead!"
18700752,2,1,13,java.util.HashMap,"My case, the remote method was void and it was throwing an Exception, but note: It will also occur if the remote service return a HashMap$Values instance, for example: code."
18704133,2,0,3,java.util.HashMap,HashMap code.
18865165,2,0,0,java.util.HashMap,It looks like you will want an HashMap that maps id's to counts.
18865165,2,0,0,java.util.HashMap,"Essentially, an array with unique id's associated with each object IS a HashMap."
18865165,2,0,0,java.util.HashMap,"By using the HashMap, you get the added bonus of not having to manage the size of the array, not having to map the keys to an array index yourself AND constant access time."
18711910,2,1,0,java.util.HashMap,Since you are using a HashMap you can store there many values.
18711223,1,0,1,java.util.HashMap,Size of HashMap when using same literal/string Object as Key?
18711223,1,0,1,java.util.HashMap,Please let me know if my understanding is correct: Size of HashMap is 2 here because String equals(compare the state/content and not the location on heap) method comes into picture when we put the keys in the below map   code.
18711556,2,1,2,java.util.HashMap,You can just use a HashMap to store the Objects code.
18716014,1,0,1,java.util.HashMap,What is the difference between these two ways of initializing a HashMap?
18716014,1,0,1,java.util.HashMap,Accoriding to me both initializes a new HashMap named hashMap_2
18716426,2,0,0,java.util.HashMap,As every one said hashMap_2 = hashMap_1; -->asssigns reference of HashMap1 to hashMap_2 and  hashMap_2 = new HashMap(hashMap_1);   -->causes another hashmap to be created.
18716215,2,0,1,java.util.HashMap,new HashMap object(hashMap_2) was created  The differnce for both experssion is Assignment and Intialization
18716052,2,1,13,java.util.HashMap,"The statement hashMap_2 = new HashMap<Object_1,Object_2>(hashMap_1); causes  another hashmap to be created with the values of hashMap_1."
18716052,2,1,13,java.util.HashMap,There will be two different HashMap objects and they will have same values
18716063,2,0,4,java.util.HashMap,First expression doesn't initialize a HashMap.
18717483,2,0,0,java.util.HashMap,"I think I would fill a LinkedHashMap<Integer, HashMap<String, Integer> with the data from the ResultSet in this way: code."
18719031,2,0,3,java.util.HashMap,"Instead of that, please use the Map interface and the appropriate implementation for this use case: the HashMap class."
18719609,1,0,0,java.util.HashMap,"I have a string sequence and a HashMap.I need to sort my hashmap according to the sequence.If the hashmap contains strings which is present in the sequence,those strings should sort according to the sequence and print."
18720146,2,0,0,java.util.HashMap,java.util.HashMap is unordered.
18722765,2,0,2,java.util.HashMap,"Use a HashMap, if you would like to store the key - value pair in the collection code."
18722624,1,0,1,java.util.HashMap,I have a directed graph implemented with the adjacency lists using a Java HashMap.
18722624,1,0,1,java.util.HashMap,"Graph class stores only a pointer like this: HashMap<Node<V>, List<Edge<V>>> graph; I'm trying to write a method that can perform a transposition of the graph (by side effect)."
18723781,1,0,0,java.util.HashMap,Instantiating instances of classes stored in HashMap.
18734006,2,0,0,java.util.HashMap,Refer to Java HashMap API
18734451,1,0,0,java.util.HashMap,Construct variable HashMap object from XML template.
18734451,1,0,0,java.util.HashMap,I need to transform this XML into a HashMap.
18734451,1,0,0,java.util.HashMap,The entries of HashMap must be variables depending on the value between keys {} ({KEY OF HASHMAP}) from the template below.
18734451,1,0,0,java.util.HashMap,If I change {NPV} for {NPV_NEW} the resulting HashMap should be: code.
18782090,2,0,0,java.util.HashMap,"The bank logic responsible for the objects has a method where customer is fetched with all its values coming from a Map; Map < Account, Customer> customerInfo = new HashMap < Account, Customer>(); ."
18743238,2,0,1,java.util.HashMap,"It has a simple method for reading in the entire file and parsing it into a HashMap, something like this: code."
18744358,1,0,0,java.util.HashMap,"In my program, I need to have return value as a HashMap."
18745083,2,0,3,java.util.HashMap,You can use java.util.HashMap (or some other java.util.Map implementation).
18751189,1,0,1,java.util.HashMap,Ambiguos injection for HashMap from producer with CDI.
18751189,1,0,1,java.util.HashMap,I get the error ambiguous injection point at property for MyMap and HashMap form ConsumerClass.
18752485,1,0,0,java.util.HashMap,"{1} => 23, {2} => 45) in a HashMap."
18753851,2,0,1,java.util.HashMap,If you don't want to use apache commons MultiMap then here is the tutorial to help you learn how you can create your own multimap using java HashMap: http://docs.oracle.com/javase/tutorial/collections/interfaces/map.html
18756463,1,0,10,java.util.HashMap,I want to get the value of HashMap based on key.
18756463,1,0,10,java.util.HashMap,and the StackTrace: Property 'External' not found on type java.util.HashMap$Entry  I'm pretty sure that there is really that kind of key.
18759221,1,0,0,java.util.HashMap,"But java won't except the call to add() (""The method add(String, Class<B>) is undefined for the type new HashMap<String,Class<?"
18759259,2,1,3,java.util.HashMap,"because there is no method called add , it is put method in HashMap for adding key value pairs in the collection."
18762350,1,0,0,java.util.HashMap,"Currently, I am instantiating an instance of each command in the init() method of my servlet and storing them in a HashMap."
18768180,2,0,1,java.util.HashMap,"If you are learning Maps  TreeMap sorts but natural order of the key (Nice for printing) HashMap doesn't have a very predictable ordering  If you are learning arrays, there are great examples in this thread already ex."
18766928,2,0,7,java.util.HashMap,There's no need to make a HashTable/HashMap/HashSet for this.
18766928,2,0,7,java.util.HashMap,"In the latter case, an array won't work for you; you would need to use an advanced data structure like a TreeMap or HashMap."
18767012,2,0,2,java.util.HashMap,"TreeMap instead of HashMap: It would give the proper order to the map, allowing a sorted printing of its content."
18767383,1,0,0,java.util.HashMap,Why does casting from HashMap to Intger run with no error?
18767428,2,1,6,java.util.HashMap,Why does casting from HashMap to Integer runs with no error?
18767428,2,1,6,java.util.HashMap,You're not casting from a HashMap to Integer.
18767428,2,1,6,java.util.HashMap,You then return that Integer and get a ClassCastException because it cannot be cast to a HashMap.
18767428,2,1,6,java.util.HashMap,"which is taking the contents of a box that can contain anything, and making sure that it can fit in a box named after that can only contain HashMap<?,?>s."
18767481,2,0,1,java.util.HashMap,"2.HashMap<String, String> after = (HashMap<String,String>) f(before); // <- it fails  here f() method returns Object and you are trying to cast this to Integer.Integer is not super type of Object.So you are getting ClassCastException."
18767527,2,0,0,java.util.HashMap,And than you try to cast it to HashMap.
18767527,2,0,0,java.util.HashMap,Compiler doesn't complain that you try to cast Object(reference type of f() return value) to HashMap.
19633315,2,0,0,java.util.HashMap,a HashMap).
18773112,1,0,0,java.util.HashMap,employee_record is a HashMap of all string values Here are the two warning messages in regards to the conditional.
18775169,2,0,1,java.util.HashMap,"You should rewrite the algorithm using a HashMap<Character, Integer> instead."
18774743,1,0,0,java.util.HashMap,Apache POI and HashMap printing out in wrong order.
18774743,1,0,0,java.util.HashMap,I am using a HashMap with an integer key and a string object array to store the info and then it writes to the excel file.
18774785,2,1,4,java.util.HashMap,A java HashMap has no inherent order.
18774785,2,1,4,java.util.HashMap,If you want to continue using a HashMap.
18778410,1,0,0,java.util.HashMap,Why does toString function of a HashMap prints itself with a different order?
18778437,2,0,1,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."""
18778440,2,1,7,java.util.HashMap,"As per Oracle's documentation   The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls."
18778440,2,1,7,java.util.HashMap,Refer to HashMap JavaDocs.
18778460,2,0,1,java.util.HashMap,HashMap not guaranteed the order of element.
18778503,2,0,7,java.util.HashMap,Linked HashMap:It will store them in insertion order.
18778503,2,0,7,java.util.HashMap,(ASCII value) So As per your requirement you can use Linked HashMap instead of HashMap.so instead of writing  code.
18778503,2,0,7,java.util.HashMap,create object of Linked HashMap code.
18782611,2,0,0,java.util.HashMap,To get a value based on key: 1) You can use HashMap object code.
18782110,1,0,1,java.util.HashMap,"However, HashMap cannot be shuffled."
18782132,2,0,2,java.util.HashMap,"You could keep a separate List of the keyvalues, shuffle that and use it to access the HashMap."
18786825,2,0,1,java.util.HashMap,"I have to correct my answer regarding a detail, I didn’t know yet: there is something special with the classes Hashtable and HashMap."
18788943,2,0,0,java.util.HashMap,Taking the time can be as slow creating a HashMap so you might not be measuring what you think you if you call the timer too often.
18788943,2,0,0,java.util.HashMap,"BTW Hashtable is synchronized and you might find using HashMap is faster, and possibly more scalable."
18794718,1,0,0,java.util.HashMap,ach element which can add to the UI returns a HashMap of BufferedImage to Point.
18795008,1,0,1,java.util.HashMap,"I have a Pig Java UDF, in which I'm trying to access the filesystem to read a group of files into a HashMap."
18795580,2,0,0,java.util.HashMap,"HashMap<String, int[]> map = new HashMap<String, int[]>();"
18795783,1,0,0,java.util.HashMap,Volatile HashMap Not Updating Outside of Thead.
18795783,1,0,0,java.util.HashMap,so I have a HashMap that is declared in class level like so: code.
18795905,2,1,3,java.util.HashMap,"As @Gerhard points out, volatile is only protecting the updating of the HashMap reference and not the innards of the map itself."
18795921,2,0,1,java.util.HashMap,The keyowrd volatile only makes the reference to the HashMap visible to all threads.
18795921,2,0,1,java.util.HashMap,"If you want to access a HashMap in several threads, you need to use a synchronized map."
18797074,1,0,11,java.util.HashMap,"Add a HashMap to the Salary class where I can put the partial results, and pass to the ""step"" method the ""key"" where it have to put the partial result code."
18797074,1,0,11,java.util.HashMap,"Problems:  In some place I need to populate the HashMap to a JPA entity to save it on my Database If another developer changes the name of the key (for whatever reason) maybe the ""populating"" of the attributes gets broken  Final Note: There are other similar situations with other ""similar"" entities in my application, so it would be great if we can find a general solution for this :D  Edit: New doubts about how to model the data to persist it All the ideas are similar and really useful."
18797284,1,0,1,java.util.HashMap,"I have android code which has two integers variables  getting from HashMap Key , value ."
18802190,1,0,0,java.util.HashMap,"(HashMap,Map & List, ArrayList)."
18802190,1,0,0,java.util.HashMap,I know that List and Map are interfaces that can be implemented and ArrayList and HashMap are classes whose objects can be created and used.
18802211,2,0,1,java.util.HashMap,"Other difference is that on the Map one, you won't be able to call methods of HashMap"
18802228,2,1,2,java.util.HashMap,"Is creating a instance of HashMap,As you see anywhere in Java."
18807661,2,0,1,java.util.HashMap,Note you need to pass a classloader for the type of object in your HashMap.
18809578,1,0,1,java.util.HashMap,I am using Object in my HashMap and I need it to be like that..
18818940,1,0,2,java.util.HashMap,HashMap inside a HashMap.
18818940,1,0,2,java.util.HashMap,When I get the HashMap again like the above method does it stay recorded?
21643945,2,0,0,java.util.HashMap,"Assuming you've already put() a HashMap with a key of ""something"", then yes, calling balance.get(""something"").get(""something"") will return 100.0."
18820451,2,0,0,java.util.HashMap,You could use Properties which is basically a key/value pair list (it's essentially a HashMap with some additional functionality) that would allow you to save and load it's contents.
18821055,2,1,0,java.util.HashMap,I will define n as the number of strings which are placed in the HashMap.
18822839,2,0,3,java.util.HashMap,However it's more efficient to use in this particular case It is intended to be more efficient than using a HashMap to map Integers to Booleans Hope this clears out any issues you had with the description.
18829004,2,1,4,java.util.HashMap,"Option #1: Use the snippet portion of the Marker to hold some identifier that you can map back to your data model, such as a key to a HashMap Option #2: Use a library that does something akin to Option #1 for you, such as Android Map Extensions"
18830784,2,0,1,java.util.HashMap,"However, the problem seems to be sitting here: 1) In class Game you have a static field of type HashMap<Block, Coordinates> called blocks."
18830784,2,0,1,java.util.HashMap,"2) While also creating an instace of type BlockRectangle in the same line, the constructor puts the object in construction as a key into the the static field of type HashMap<Integer, BlockRectangle> called rects."
18835014,1,0,14,java.util.HashMap,"where BillingInfo is a Serializable class containing only one field, a HashMap of information about the billing info."
18836389,1,0,1,java.util.HashMap,Java HashMap MAXIMUM_CAPACITY.
18836389,1,0,1,java.util.HashMap,I am going through the java.util.HashMap class code and found that MAXIMUM_CAPACITY is defined as follows: code.
18843104,2,1,1,java.util.HashMap,"You are trying to read an entry from your HashMap that is not there, so you get null: code."
18841098,1,0,2,java.util.HashMap,Complexity of equals() in HashMap and SortedMap.
18841098,1,0,2,java.util.HashMap,I am trying to figure out the computational complexity of equals() in both HashMap and TreeMap in Java.
18841098,1,0,2,java.util.HashMap,"Now, you might say it should be same in both cases as both HashMap and TreeMap inherit the same implementation from AbstractMap."
18841098,1,0,2,java.util.HashMap,"Consequently, complexity of equals() in case of HashMap would be different then in case of SortedMap, or at least it should be based on my reasoning."
18841098,1,0,2,java.util.HashMap,"And, finally I am interested in the complexity of equals() in case of HashMap and SortedMap."
18842256,2,1,2,java.util.HashMap,"Since HashMap implements these in O(1) while TreeMap implements them in O(log n), that leads to the overall equals complexity of O(n) for Hashmap and O(n log n) for TreeMap."
18844117,1,0,0,java.util.HashMap,"I created a b-tree using Java in memory, which has get(K key), put(K key,V value) method, just like HashMap."
18859923,2,1,0,java.util.HashMap,Let's create a HashMap with this data: code.
18858862,1,0,0,java.util.HashMap,Q2:  Is this creating a new HashMap?
18859119,2,0,1,java.util.HashMap,"Q2 Yes, you are creating a HashMap and putting it's reference into a Map."
18861662,1,0,0,java.util.HashMap,results is an Object downloaded from a remote Database that is basically a HashMap.
18861704,2,1,1,java.util.HashMap,"For more info, check out: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html EDIT: code."
18862099,2,0,5,java.util.HashMap,"You will want to use a Map such as a HashMap, perhaps a Map<String, Integer[]>."
18862132,2,0,0,java.util.HashMap,You might want to consider using a HashMap with a String as the key and an Integer[] for the value.
18862997,1,0,2,java.util.HashMap,Using ArrayList or HashMap for better speed.
18862997,1,0,2,java.util.HashMap,Using ArrayList or HashMap code.
18863219,2,1,7,java.util.HashMap,"(Interestingly enough, HashSet is backed by a HashMap, but provides an interface similar to ArrayList.)"
18863041,2,0,14,java.util.HashMap,"The HashMap has O(1) performance for every search (on average), so for n searches its performance will be O(n)."
18863041,2,0,14,java.util.HashMap,"While the HashMap will be slower at first and take more memory, it will be faster for large values of n. The reason the ArrayList has O(n) performance is that every item must be checked for every insertion to make sure it is not already in the list."
18863041,2,0,14,java.util.HashMap,The reason the HashMap has O(1) performance is that the hashing algorithm takes the same time for every key and then the lookup to find the key also takes constant time.
18863041,2,0,14,java.util.HashMap,"So finally, to answer your question, my advice is to use the HashMap."
18864641,1,0,0,java.util.HashMap,Right definition of HashMap for static variables.
18864641,1,0,0,java.util.HashMap,I have trouble with logical definition of the HashMap.
18864641,1,0,0,java.util.HashMap,I used static HashMap because I need these HashMaps all over the time since my application is alive.
18864937,2,0,0,java.util.HashMap,"HashMap uses the hashCode() and equals() methods, internally, to determine e.g."
18864956,2,1,3,java.util.HashMap,"For a HashMap, you need to overwrite equals and hashCode in your class."
18865017,2,0,0,java.util.HashMap,HashMap insertions is bassed on the hashcode.
18865017,2,0,0,java.util.HashMap,"When we pass an both key and value to put() method to store on HashMap , it uses key object hashcode() method to calculate hashcode and they by applying hashing on that hashcode it identifies bucket location for storing value object and keys equals () method will be used to identify correct key value pair in HashMap ."
18893076,2,1,2,java.util.HashMap,So I guess you just need to do something like this in the point where you want to serialize your HashMap normally: code.
18866022,1,0,0,java.util.HashMap,"I'm fairly sure a HashMap would be good here, but I'm stuck."
18876550,1,0,3,java.util.HashMap,I understand Objects in this HashMap could be unresolved and collide but this hashmap is not annotated and should not be marshalled then right ?
18881047,1,0,0,java.util.HashMap,How to use keySet().iterator() to find patterns in keys in a HashMap.
18881047,1,0,0,java.util.HashMap,I have crated an HashMap and keyset Iterartor as follows: code.
18886506,2,1,4,java.util.HashMap,"Modified the org.json one, only changing HashMap to LinkedHashMap in the JSONObject."
18885215,1,0,0,java.util.HashMap,Using ThreadLocal vs. a HashMap with Thread as a key.
18885215,1,0,0,java.util.HashMap,"I have two options,   use ThreadLocal where in Java takes care of doing the instance management per thread  use a static HashMap which uses Thread as the HashMap key and the instances are managed at this level  With the ThreadLocal approach there are potentials for memory leaks esp in Servlet enviornment."
18885338,2,1,1,java.util.HashMap,If you roll your own solution using HashMap you'll have to acquire a lock over the HashMap every time you want to access any thread-local data.
18885338,2,1,1,java.util.HashMap,"These are implicitly adding/removing items from a HashMap, which require synchronization on the full HashMap."
18885338,2,1,1,java.util.HashMap,You'll also have quite the time keeping object lifetimes straight because HashMap will keep alive all items it contains as long as it is referable from any thread.
18887634,2,1,5,java.util.HashMap,"The second line is fine, because a LinkedList<String> is a List<String> - but it's not logically fine in terms of adding it to a HashMap<String, ArrayList<String>>, because a LinkedList<String> is not an ArrayList<String>."
18894165,1,0,0,java.util.HashMap,"I have a class which reads an xml file and populates them in a private static data-structure(say, HashMap)."
18894165,1,0,0,java.util.HashMap,"Then I have method to get value of a given key, which intern refers that static HashMap."
18894235,2,0,1,java.util.HashMap,"If you are just reading from the HashMap after constructing it in a way that prevented it from being visible to other threads until it had been finished, that's fine."
18894235,2,0,1,java.util.HashMap,From the docs for HashMap:  Note that this implementation is not synchronized.
18899819,2,0,0,java.util.HashMap,"If you don't want to use if-then-else, you could look into the visitor pattern, or you could conceivably create a HashMap<Class<?>,Interf> that would map A.class, B.class, etc., to some interface object that calls the correct doStuff."
18913287,2,0,1,java.util.HashMap,"but i cannot find where you declare this variable (i guess is wrong copy-paste) Anyway, i assume that you use a HashMap because of the method put()."
18913287,2,0,1,java.util.HashMap,"If this is the case you need to implement both equals() and hashCode() in the classes A,  B, C. see here why  Understanding the workings of equals and hashCode in a HashMap http://www.ibm.com/developerworks/java/library/j-jtp05273/index.html (in short words if you don't override these methods then the object you pass in the code."
18913587,1,0,1,java.util.HashMap,Can an anonymous class extend HashMap with parameters?
18913663,2,1,2,java.util.HashMap,And this collection object will store list of HashMap.
18913670,2,0,2,java.util.HashMap,or (if you want to extend HashMap) code.
18913684,2,0,1,java.util.HashMap,HashMap does not implement Collection.
18917327,1,0,0,java.util.HashMap,"I need to join Holder to item, to get hashmap: HashMap> items = new HashMap>(); Key in this hashmap - value of name column."
18920655,1,0,0,java.util.HashMap,I then iterate the length of the tokenized array comparing each element against a HashMap of all possible values.
18920655,1,0,0,java.util.HashMap,If the value being tested is a key in the HashMap then i get the key's value and store that in another String.
18922165,1,0,7,java.util.HashMap,How to include duplicate keys in HashMap?
18934881,2,1,1,java.util.HashMap,"So here is my improved algorithm: Keep a list for all the edges in a Set  While are there more than 2 edges left in the edges list  Pick a random edge from the edges list & call it V  Then pick another random edge from V's (since my implementation is a HashMap so get values which is an arraylist for key value, ""V"") list & call it ""U""  Combine U & V to make a combined edge Remove U from the edges list (since I combined U's list meaning its edges to V therefore combined edge was just V, so after merging U & V became a super edge called just ""V"")  Hopefully that would be helpful to someone."
18929873,2,1,4,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
18931293,1,0,0,java.util.HashMap,"The request from the clients will be:  check if a User is registered in the database add User to the database get a list of Users and which of them are on-line(this is where I use the HashMap)  After some searching I've concluded in using NIO, so I won't get too many threads to handle multiple Client requests."
18931293,1,0,0,java.util.HashMap,"My problem is that I can't understand how you can retrieve data from the channel when you want to send, for example, a List or a HashMap."
18931293,1,0,0,java.util.HashMap,"I just can't understand -for example- how do you get th HashMap object back from the buffer, or how you retrieve any kind of ""structured"" data for that matter."
18934622,2,0,1,java.util.HashMap,If you don't put your object into HashMap or similar Collection / Map types then you don't to override the hashCode function in your class.
18934696,2,0,2,java.util.HashMap,This method is supported for the benefit of hash tables such as those provided by HashMap.
18934974,1,0,1,java.util.HashMap,HashMap> not detecting a duplicate value.
18937162,2,0,0,java.util.HashMap,I don't think that using HashMap was the problem (explained at the bottom).
18937162,2,0,0,java.util.HashMap,"Assuming your XML doesn't contains any attributes than I would go with HashMap<String, Element> (TreeMap also would work) where String is XML tag and  code."
18938758,1,0,1,java.util.HashMap,"I want some words to be in spesific order I m able to use Bufferedreader HashMap, ArrayList."
18939041,2,0,3,java.util.HashMap,"Map (HashMap, LinkedHashMap, TreeMap) and Set (HashSet) can be useful too."
18942131,1,0,0,java.util.HashMap,I have a HashMap as below: code.
18942131,1,0,0,java.util.HashMap,"Also, I have a two-dimensional array where I need to have the values fetched from the HashMap and put into the array in a balanced way."
18942131,1,0,0,java.util.HashMap,"So, basically the keys of the HashMap should get evenly distributed into the Array based on its values."
18944184,1,0,4,java.util.HashMap,"As you can see above, in the singleton class, I have a students variable (a HashMap), there are methods to add & remove student in the class."
18944223,2,0,0,java.util.HashMap,"The HashMap implementation is not thread-safe, so bad things may happen if several thread operate on it at the same time."
18944223,2,0,0,java.util.HashMap,A thread-safe alternative to HashMap is ConcurrentHashMap
18944240,2,0,0,java.util.HashMap,Or you can synchronized students hash map also using - Collections.synchronizedMap(new HashMap());
18945339,1,0,1,java.util.HashMap,I want it to use the same HashMap with stuff already saved in it.
18946537,1,0,1,java.util.HashMap,Data in a HashMap after closing an android application.
18946537,1,0,1,java.util.HashMap,I use a HashMap in order to store some keys and it's values like the following.
18946537,1,0,1,java.util.HashMap,How can it be possible to store the data from HashMap before closing my app and retrieve them when I open the application next time in order to be able to add a new entry to the already entries.
18947051,2,0,0,java.util.HashMap,"HashMap's keySet() method already creates the set you need, so simply: code."
18946983,1,0,1,java.util.HashMap,"The PhonePad: 1 2 3 4 5 6 7 8 9 * 0 # Possible moves: The same number of moves a Queen in chess can make (so north, south, east, west, north-east, north-west, south-east, south-west... n-spaces per each orientation) Starting number: 5 So far I have implemented the PhonePad as a 2-dimensional char array, implemented the possible moves a Queen can make in a HashMap (using offsets of x and y), and I can make the Queen move one square using one of the possible moves."
18947088,1,0,0,java.util.HashMap,"I'm trying to get my head around the ObjectInputStream/ObjectOutputStream, so I create a very simple server-client application where the client sends a HashMap object over the created stream and the server receives that and prints it out."
18947088,1,0,0,java.util.HashMap,"I don't know if I have to do something to serialize the HashMap, but I think I saw somewhere that this is handled internally by Java."
18949058,2,0,4,java.util.HashMap,HashMap assumes that the hash can't change and it will break if it does change.
18966925,2,1,0,java.util.HashMap,Also I suggest using a HashMap instead of Hastable as the later is a legacy class.
18951035,2,0,0,java.util.HashMap,You can create a HashMap with element name(or color name) as key and the value would be the color number.
18955029,2,1,2,java.util.HashMap,"Define Map<String,List<Data>> listData = new HashMap<String, List<Data>>(); Iterate over mapData's values (seems you don't use the keys of that map)."
18958871,2,0,1,java.util.HashMap,"I need to read in each line from a text file :  Use FileReader and BufferedReader and sort it according to length first, and then it's position in the original document, before adding the lines to a linked list : create a HashMap with (String,lineNo) of original doc."
18962510,1,0,2,java.util.HashMap,I am trying to iterate through a HashMap using 2 iterators.
18964907,1,0,0,java.util.HashMap,EDIT:  Trying the HashMap and getting an NPE at this line code.
18965469,2,0,3,java.util.HashMap,"Rather than Item[] items you might consider HashMap<Item, Integer> items where the Integer refers to quantity."
18965094,1,0,2,java.util.HashMap,WeakHashMap vs HashMap.
18965094,1,0,2,java.util.HashMap,"Output: Weak Hash Map :{} When WeakHashMap is used along with HashMap and keys are set to null, the WeakHashMap doesn't lose its key-value mappings."
18965181,2,1,6,java.util.HashMap,"Since the HashMap maintains a hard reference to the keys, the keys are still reachable and the WeakHashMap doesn't discard the entries."
25419993,2,0,0,java.util.HashMap,HashMap dominates gc(garbage collector).
25419993,2,0,0,java.util.HashMap,"Even though we set null on k1,k2,k3,k4 gc wont remove from HashMap where as gc removes them all and provides us empty map for WeakHashMap hence the name WeakHashMap"
18965236,2,0,2,java.util.HashMap,"You have set null on pointers k1,k2,k3,k4 but HashMap and WeakHashMap still contains references to those Keys."
18965236,2,0,2,java.util.HashMap,"And becouse HashMap is containing referenece, actual instances of Keys are not deleted by GC."
18965236,2,0,2,java.util.HashMap,Try run this example only with HashMap -> even that youve nulled out those refereneces HashMap will still keep them.
18965555,2,0,0,java.util.HashMap,It is preferable for them to be different so as to reduce collisions in data structures that use the hash code like HashMap.
18966089,1,0,1,java.util.HashMap,Android: HashMap sort by 3 values.
18966708,2,0,0,java.util.HashMap,"It works just like a HashMap, but will automatically sort your keys for you."
18967995,1,0,2,java.util.HashMap,Why HashMap's get() returns null when it shouldn't?
18967995,1,0,2,java.util.HashMap,It happens because in the get(c) in if (tab.get(c) == null) returns null even though the character '1' is already in the HashMap.
18968479,1,0,0,java.util.HashMap,How can i have a HashMap in Java with duplicate keys?
18968479,1,0,0,java.util.HashMap,"So I decided to use a HashMap<String,String>, but I noticed that when I try to add a key that already exists, the previous (key,value) is replaced by the new one (NewKey,NewValue) and the previous entry is lost."
18968479,1,0,0,java.util.HashMap,How can I have a HashMap with duplicate keys?
18969090,2,0,0,java.util.HashMap,You may want to consider using a collection to store your songs (for example a HashMap).
18971655,2,0,5,java.util.HashMap,"Don't dispair, you can still do the key part as a HashMap, and the sorting part with a Tree like implementation, that will give you O(log n)."
18971655,2,0,5,java.util.HashMap,"With a raw HashMap, you would have to search the entire map for the next ""lower"" value."
18971849,1,0,4,java.util.HashMap,Best way to get top N keys(sorted by values) in a HashMap.
18971849,1,0,4,java.util.HashMap,My first step is to convert it into a HashMap: code.
27872027,2,0,0,java.util.HashMap,"After we have exhausted all the entries from the HashMap, the queue will contain the Top N entries."
27872027,2,0,0,java.util.HashMap,"The advantage of this approach is that even if the entire HashMap cannot fit in memory, we can break it into smaller blocks and use this approach."
18976421,2,0,0,java.util.HashMap,"Then load it into a structure such as a HashMap or a List, the first one being easier for lookup up the short name, just as joey.enfield suggested."
18978761,1,0,1,java.util.HashMap,Update Object attribute while iterating over HashMap.
18978761,1,0,1,java.util.HashMap,I am using a HashMap where the key is String and Value is an object (Signal).
18980694,2,0,0,java.util.HashMap,In HashMap declaration like.
18982534,1,0,0,java.util.HashMap,Converting a HashMap to a Sorted TreeMap.
18982534,1,0,0,java.util.HashMap,"I have a HashMap which contains String as key , and an Object as value In order to sort my HashMap I create a TreeMap , iterate over the HashMap and put each entry of the HashMap into a TreeMap where key is bandwidth and value the instance of signal.Here is my code code."
18982645,2,0,0,java.util.HashMap,Note that you're using a different key in the TreeMap than you do in the HashMap.
18983936,2,0,1,java.util.HashMap,Check the JavaDoc for HashMap.
18984915,1,0,4,java.util.HashMap,The type HashMap is not generic; it cannot be parameterized with arguments .
18985182,2,0,1,java.util.HashMap,I'm sure that you are importing the wrong HashMap.
18984951,2,1,9,java.util.HashMap,Check you are actually using java.util.HashMap and java.util.Map in your imports.
18985209,1,0,0,java.util.HashMap,"I have a HashMap which I copy to an ArrayList and then I want to sort the entries in my List according to the bandwidth of each entry, the higher the bandwidth the first it should come in my list  Here is what I tried  Main Class code."
18989219,2,1,8,java.util.HashMap,Because HashSet uses a HashMap.
18989219,2,1,8,java.util.HashMap,"It must incur the cost of using a HashMap, plus the overhead of the HashSet itself."
18989256,2,0,0,java.util.HashMap,in a HashMap you store element value pairs when in a Set you store only element.
18989256,2,0,0,java.util.HashMap,When you call add(value) for Set actually you call put as well (for HashMap).
18989256,2,0,0,java.util.HashMap,Set backed by HashMap
18992592,2,1,1,java.util.HashMap,"Basically, I believe you need created to be a HashMap<Vertex,Vertex>, not a set."
18992592,2,1,1,java.util.HashMap,"The ""key"" of the HashMap would be a node in the ""from"" graph, and the ""value"" would be the corresponding node in the ""to"" graph."
30621768,2,0,0,java.util.HashMap,HashMap internally uses Entry for storing key-value pair.
30621768,2,0,0,java.util.HashMap,HashMap diagram -  From : http://www.javamadesoeasy.com/2015/02/hashmap-custom-implementation.html
18994866,2,0,3,java.util.HashMap,HashMap has an array of HashMap.Entry objects : code.
18994866,2,0,3,java.util.HashMap,"We can say that Entry is a one-way linked list (such HashMap.Entry linkage is called ""Bucket"") but it is not actually a java.util.LinkedList."
18992742,1,0,2,java.util.HashMap,How to replace several Strings in a file at once using HashMap in Java.
18992742,1,0,2,java.util.HashMap,I'm trying to replace several strings in one method using a HashMap but currently I can just get it to work with the first string in Map.
18992826,1,0,0,java.util.HashMap,Hashing algorithim and HashMap.
18992826,1,0,0,java.util.HashMap,I am not able to understand the Hashing mechanism behind HashMap.
18996082,2,0,1,java.util.HashMap,"HashMap would work or You could convert whole flag-state into 11-bit mask (15-4 bits, 16 - 4 bits, 8 - 3 bits, or leave more bits for further growth) and use true/false array by 11-bit index."
19001364,2,0,0,java.util.HashMap,"Why not a HashMap, or some other structure that either overwrites the subsequent reuses of a name or ignores them or throws an error when you add them?"
19007922,1,0,0,java.util.HashMap,"I need to pass the ordinal value of an enum as a parameter to a HashMap<String, String>."
19008023,2,0,0,java.util.HashMap,"The best way if you used HashMap<String, Integer> and did not convert ordinal to String"
19009275,1,0,0,java.util.HashMap,Java HashMap key to jQuery.
19009275,1,0,0,java.util.HashMap,How can i access the HashMap key to the JQuery?
19009275,1,0,0,java.util.HashMap,I'm using Gson to parse the HashMap to Gson: code.
19009275,1,0,0,java.util.HashMap,at return process(data); i want to have the key of the HashMap it self
19010330,2,0,1,java.util.HashMap,"For your problem, though, it sounds like that you need HashMap<String, Integer>, using getId() on Marker as the key."
19013346,2,1,0,java.util.HashMap,"Thanks to them I've come up with a very simple solution myself, using HashMap."
19013381,2,0,2,java.util.HashMap,"If you sort it just in order to retrieve and update your entries quicker, you can do that faster using a HashMap."
19013381,2,0,2,java.util.HashMap,"You can create a HashMap<YourClass, YourClass> if you implement a proper hashCode() and equals() method on the key fields in the class."
19013381,2,0,2,java.util.HashMap,"If you only need to output a sorted list occasionally, also implement the Comparable<YourClass> interface and just create a TreeSet<YourClass>( map.keySet() ), that will create a sorted representation while the data in your HashMap stays in place."
19013381,2,0,2,java.util.HashMap,"If you need it sorted always, you can consider to use TreeMap<YourClass,YourClass> instead of a HashMap."
19013855,1,0,3,java.util.HashMap,I have read that I can use HashSet or HashMap but I have no clue.
19018215,1,0,0,java.util.HashMap,How does HashMap.get method work.
19018215,1,0,0,java.util.HashMap,I am just trying to understand the algorithm behind the HashMap.get method in Java.
19020930,1,0,6,java.util.HashMap,The initial capacity and load factor two parameters that affect the HashMap performance.
19020930,1,0,6,java.util.HashMap,"When an item is added to the HashMap, it is assigned to a buckets based on a value derived of its hashCode and the bucket size of the HashMap."
19020930,1,0,6,java.util.HashMap,If two thread at the same time found that now HashMap needs re-sizing and they both try to re-size may cause race condition in HashMap.
19020930,1,0,6,java.util.HashMap,"On the process of re-sizing of HashMap, the element in bucket which is stored in linked list get reversed in order during their migration to new bucket because java HashMap doesn't append the new element at tail instead it append new element at head to avoid tail traversing."
19022087,2,0,0,java.util.HashMap,"I don't know if it could result in an infinite loop but since there is no synchronisation in HashMap it is not thread safe anyway do how it break is not so important: it will break one way or another... You end up with less items per bucket - so searching among items in a given bucket is quicker No, that's the point of rehashing."
19021948,2,0,0,java.util.HashMap,"For the overwhelming majority of cases where one is not sharing one's map across multiple threads without synchronization, plain-old HashMap suffices."
19032515,1,0,16,java.util.HashMap,I have a class with 2 HashMap fields as follows- code.
19032631,2,0,0,java.util.HashMap,HashMap map1 and HashMap map2 are completely different.
19032568,2,0,13,java.util.HashMap,"You can't: generics get stripped out during the compilation stage: the compiled code just sees HashMap<Object, Object> in both cases."
19034169,1,0,1,java.util.HashMap,hasNext skips first value in HashMap.
19037578,2,0,1,java.util.HashMap,HashMap is case sensitive.
19037391,2,0,1,java.util.HashMap,"As Eric mentions, you should use a HashMap, the reasoning for this is because you can look up and add data to one very quickly (on average)."
19037391,2,0,1,java.util.HashMap,"Here is a code example of how to use HashMap using Person.name as the key, this assumes that there is never a person with the same name."
19039101,1,0,0,java.util.HashMap,android: HashMap variable.
19039101,1,0,0,java.util.HashMap,I know it's a noob question but i cant find anything online.I have this HashMap : code.
19039147,2,0,0,java.util.HashMap,"depending on how specific you want to be with your type, you could use ArrayList<HashMap<String, String>> localist = new ArrayList<HashMap<String, String>>(); As stated by the other answer, I would take some time to plan your Classes in your system first."
19041498,1,0,3,java.util.HashMap,I have a HashMap-intensive Java program in which several classes have hashcodes computed from final fields.
19047809,1,0,1,java.util.HashMap,HashMap overridden by last value.
19047809,1,0,1,java.util.HashMap,"On reading back from HashMap, it prints only the last row 'n' number of times."
19047852,2,1,3,java.util.HashMap,"What you are missing is - row = new String[columnsNumber]; in while loop, which actually cause over writing array object value and you are adding same object to HashMap."
19049697,1,0,14,java.util.HashMap,Somewhere in code I have seen  instance class variable  HashMap  declared as final  code.
19091269,2,0,0,java.util.HashMap,If you don't use trove you can replace it with a normal java HashMap if you want.
19109839,2,1,4,java.util.HashMap,Up until somewhat recently the readObject method of HashMap contained the following lines.
19109839,2,1,4,java.util.HashMap,Excessive CPU load Fixing the vulnerability in HashMap was done as part of changes to address another security issue related to hash-based maps.
19109839,2,1,4,java.util.HashMap,CVE-2012-2739 describes a denial-of-servic attack based on CPU consumption by creating a HashMap with very many colliding keys (i.e. distinct keys with the same hash value).
19109839,2,1,4,java.util.HashMap,"The documented attacks are based on query parameters in URLs or keys in HTTP POST data, but deserialization of a HashMap is also vulnerable to this attack."
19109839,2,1,4,java.util.HashMap,The safeguards that were put into HashMap to prevent this type of attack are focussed on maps with String keys.
19109839,2,1,4,java.util.HashMap,"Java 8 includes a proposal (JEP-180) to further improve the behaviour of HashMap in the face of many collisions, which extends the protection to all key types that implements Comparable, but  that still allows an attack based on ArrayList keys."
19055527,2,1,8,java.util.HashMap,A wrapped ArrayList or HashMap is seen as a better solution.
19056783,2,1,4,java.util.HashMap,Not shure why you want to use a HashMap.
19056783,2,1,4,java.util.HashMap,"--> napa (If you insist on using the HashMap you should have still a look a the 'Normalizer' class because it can work in the other direction, too.)"
19058292,2,0,2,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
19058301,2,0,3,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
19063522,1,0,2,java.util.HashMap,How to generically implement calling methods stored in a HashMap?
19063522,1,0,2,java.util.HashMap,"Based on the answer How to call a method stored in a HashMap, I'm mapping these chars to methods by using the ""Command"" design-pattern."
19063750,2,0,0,java.util.HashMap,"Thanks to @Maxim's original suggestion here, I have an alternate solution by setting the methods as Strings in the HashMap instead -- code."
19065757,2,0,0,java.util.HashMap,"HashMap, TreeMap, HashSet, TreeSet, ...) that are based on different concepts and hence have different strengths and weaknesses concerning time complexity."
19066949,2,0,0,java.util.HashMap,"If the point is to branch based on the type of something, you can use classical OO decomposition (create methods in every type in the list and let polymorphism select the correct branch) or use a HashMap from class objects to functional objects or strategy  implementations."
19068128,1,0,1,java.util.HashMap,Different types for arguments in HashMap put and get methods.
28373918,2,0,0,java.util.HashMap,A HashMap singleton can be implemented in the spring application context and shared across the IOC using the following util:map.
19073313,2,0,3,java.util.HashMap,"One of the dangers of thread-safety (for instance, if you use a normal HashMap without synchronization) is that threads can read partially-created or partially-updated objects across threads; in other words, things can go really haywire."
19073332,1,0,1,java.util.HashMap,First read all the words and store them in HashMap with word as the key.
19073332,1,0,1,java.util.HashMap,"Now I iterate over the HashMap and create an object {word, frequency} for each key value pair and then I insert it in a SortedSet (I wrote a comparator for that)."
19073848,2,1,2,java.util.HashMap,The preferred way in this case would be to store the states in a HashMap or similar.
19075027,1,0,0,java.util.HashMap,"I have a map HashMap <Integer,Employee> map= new HashMap<Integer,Employee>(); The class Employee has an int attribute int empid; which will serve as key to the map."
19076032,2,1,0,java.util.HashMap,You should create a HashMap from the string version of the email type to the Email.TYPE_*.
19079468,1,0,1,java.util.HashMap,Sockets ClassCastException HashMap.
19079468,1,0,1,java.util.HashMap,"If I change HashMap to ArrayList, it does not work either."
19079511,2,0,1,java.util.HashMap,You are sending a Point and trying to receive a HashMap.
19084492,1,0,0,java.util.HashMap,"I am saving an index of terms in a HashMap, where String is term and List if of documents this term was found in."
19089358,1,0,0,java.util.HashMap,"The method searchData from searchDataBean checks the fields from the form, created HashMap and sends it to the DAO, the result is stored in private variable (getter and setter are there) and returned as DataModel (required by PrimeFaces as ListDataModel)."
19092892,2,0,3,java.util.HashMap,I think you shold use a HashMap for this.
19092909,2,0,1,java.util.HashMap,"Consider using a HashMap instead, where keys are the first (string) in each pair, values are the second (integer): code."
26245421,2,0,1,java.util.HashMap,I've had to replace it with Java's HashMap on occasion.
19093213,1,0,1,java.util.HashMap,"I have a list with HashMap<Integer, Point3d> format like in the following way."
19093213,1,0,1,java.util.HashMap,I tried allot but I didn't find anyway.because we can't able to retrieve values from HashMap based on index.
19093250,2,0,0,java.util.HashMap,"You can follow the following steps,  Put the values of the HashMap into a Set with your custom Comparator."
19095791,1,0,1,java.util.HashMap,LinkedHashMap delegates all the calls to its parent HashMap.
19095822,2,0,1,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
19099675,2,1,0,java.util.HashMap,The order will probably not be the same order you entered the values in but that's due to the nature of the HashMap.
19099519,2,0,0,java.util.HashMap,So you may want to update the HashMap to: code.
19102437,2,1,2,java.util.HashMap,"So, you can add the HashMap to a List, and pass it: code."
19102437,2,1,2,java.util.HashMap,"Note that since the parameter type is Iterable<HashMap<String, Date>>, you can only pass - List<HashMap...> or Set<HashMap...>, etc."
19103007,2,1,2,java.util.HashMap,"The old ArrayList will still be available to the HashMap, because the map has its own copy of the reference to that first list."
19106223,1,0,1,java.util.HashMap,"question is, is it good to store fixed data in form of JSON instead of SQLite (i won't update data at all), i have tried store it in HashMap which is not so good i think."
19106223,1,0,1,java.util.HashMap,current code in HashMap is code.
19106366,2,0,0,java.util.HashMap,"In the example you gave, though, you could just use a string array instead of a HashMap: code."
19107168,2,0,1,java.util.HashMap,"An alternative might be to write your own subclass of HashMap that uses your ""special"" equals instead of the default."
19107165,1,0,1,java.util.HashMap,"I have a HashMap<Integer,String>."
19109164,1,0,0,java.util.HashMap,I have a HashMap in the controller: code.
19109164,1,0,0,java.util.HashMap,Where list.item is a String but it is used for another process but I want it to be used to access the HashMap Is there a way to Concatenate JSTL?
19110078,1,0,0,java.util.HashMap,"What are The different collections supported by Hibernate like   List -- > ArrayList,LinkedList etc Set --> Treeset,HashSet etc Map --> HashMap etc  And tell me which are collections not supported and how to achieve them?"
19110978,2,0,1,java.util.HashMap,"According to the Hibernate documentation:  "" The persistent collections injected by Hibernate behave like HashMap, HashSet, TreeMap, TreeSet or ArrayList, depending on the interface type."""
19113300,2,0,0,java.util.HashMap,"Btw, with HashMap you have to change the list outside the map ;)"
19114527,1,0,5,java.util.HashMap,"I have 2 HashMap<Integer,Point3D> objects names are positiveCoOrdinate and negativeCoOrdinates."
19116058,1,0,0,java.util.HashMap,and I want to group them in to a HashMap or to a ArrayList really don't know what to use if if give the transaction ids ex: 2298597 and 6503939 I should be able to get the other values like status etc.
19116180,2,0,1,java.util.HashMap,And as of what do choose between HashMap and List I would suggest go for HashMap as complexity for accessing data stored in HashMap is O(1).
19116197,2,0,1,java.util.HashMap,"HashMap<String,List<MagicContainer>>(), and while adding to map, check for existance of corresponding key, and if it exists, simply add your message to the list."
19120875,2,0,2,java.util.HashMap,"However, with a ConcurrentHashMap, you have the guarantee that there are no null values:  Like Hashtable but unlike HashMap, this class does not allow null to be used as a key or value."
19127524,1,0,1,java.util.HashMap,Basically I made a TextWatcher which register data into the database and also into a temporary HashMap which contains all values.
19131213,1,0,0,java.util.HashMap,How to create HashMap dynamically.
19131213,1,0,0,java.util.HashMap,"partitionList datatype is ArrayList<HashMap<Integer,Double>>.it means all sub-lists of partitionlist was HashMap<Integer,Double>."
19131213,1,0,0,java.util.HashMap,All HashMap lists starts their key values from 1 to 50000.like in the following way.
19131252,2,1,4,java.util.HashMap,HashMap is mutable!
19131252,2,1,4,java.util.HashMap,This updates the variable's reference to a new instance of HashMap().
19131347,2,0,0,java.util.HashMap,Since you are well aware of the size of the HashMap while creating the hashmap make sure to pass the initial size.
19131347,2,0,0,java.util.HashMap,"Providing the initial size prevents frequent rehashing which affects the performance   HashMap<Integer, Double> hash1=new HashMap<Integer,Double>(50000);   I am not aware if its a typo or not."
19131786,2,1,2,java.util.HashMap,Because a HashMap doesn't guarantee any order of iteration of it's element.
19131812,2,0,0,java.util.HashMap,"(The HashMap class is roughly   equivalent to Hashtable, except that it is unsynchronized and permits   nulls.)"
19136426,1,0,1,java.util.HashMap,"HashMap is not suitable for this, for its overwriting of values with the same key."
19137407,1,0,0,java.util.HashMap,Java HashMap/HashSet polymorphism.
19137407,1,0,0,java.util.HashMap,"But I'm not allowed to add the above HashMap to map, because of a compiler error: code."
19142599,1,0,0,java.util.HashMap,Android - How to Store HashMap with Custom Key (and custom data) to internal storage?
19142599,1,0,0,java.util.HashMap,I was wondering if it was possible to store a hash map with a special key function (similar to the solution posted by Jon Skeet at Using a byte array as HashMap key (Java)) and thus data wrapper inside the android internal storage And how to get them out again.
19143663,1,0,1,java.util.HashMap,"So I would do the averages and put them in another map, HashMap for this one because I will need to sort by values before I print them to a new file."
19144072,1,0,3,java.util.HashMap,"The server must:  Listen for put / take requests and process them accordingly - this typically won't take too long, it consists of:  Parsing a short string; An HashMap.get; Acquiring a lock; A PriorityQueue.poll or PriorityQueue.offer;  Notify every client of all item activity, as soon as possible, so that every client has a real-time view of what's going on."
19146908,1,0,1,java.util.HashMap,I'm mapping two arrays to each other with a HashMap.
19148549,2,0,3,java.util.HashMap,"For any Hash enabled data structure (like HashMap, HashSet) to work correctly its elements or keys must override hashCode() in addition to the equals() method."
19148549,2,0,3,java.util.HashMap,"Since, the hash codes don't match the HashMap never looks for the key in the right bucket."
19148525,2,0,0,java.util.HashMap,"HashMap is the implementation you are using there, it will use a HashTable that when you insert an object as key it will get its hashcode (which is an integer) and puts the desired object in that position, imagine that is an array of 256 elements, if your key object generates a 5, then it will store the value object to the array[5] Here is a part of the code of the get(Object key): HashMap.get(Object) code."
19148536,2,0,0,java.util.HashMap,Java HashMap uses the hashCode and equals methods to do its dirty work.
19148536,2,0,0,java.util.HashMap,"When a problem with an HashMap like yours occurs, it means that the general contract of these methods is not fulfilled."
19148536,2,0,0,java.util.HashMap,"Now, if the HashMap doesn't work as expected with your custom object then 99.99% you are not respecting one or more of these contract entries."
19149355,1,0,0,java.util.HashMap,"The map in this case is a HashMap<String, Number>."
19150086,2,0,2,java.util.HashMap,"You probably want to use java.util.HashMap instead of Hashtable, unless you need the synchronized access."
19150106,2,1,1,java.util.HashMap,if (count >= threshold) This is more or less true for HashMap as well.
19151240,1,0,0,java.util.HashMap,"thanks EDIT how do id split the string and get id and values and store them in to a hashmap Map <String, Item> tag = new HashMap <String, Item> (); thanks to upog and this is my Item Class code. }"
19152565,1,0,0,java.util.HashMap,so how do get the id from the string and values for the id and copy the values to POJO and store them like id and object in a HashMap?
19155308,2,0,0,java.util.HashMap,There is no way to access the previous element because of two reasons:  No method is provided for it Implementing such a method is impossible/inefficient with the current HashMap implementation: it stores entries of each bucket  in a singly linked list.
19155308,2,0,0,java.util.HashMap,You can read the map source code from openjdk here: http://www.docjar.com/html/api/java/util/HashMap.java.html
19163308,2,0,0,java.util.HashMap,"I'd go for a List<HashMap<String, String>> implementation."
19163308,2,0,0,java.util.HashMap,You can assign each item in a row to a HashMap with the column header as the key.
19163453,1,0,6,java.util.HashMap,How to check types of key and value if Object instanceof HashMap?
19163453,1,0,6,java.util.HashMap,"In one use case, the method accepts a HashMap<String, String> and sets each value to the property of the corresponding key name."
19163726,2,0,0,java.util.HashMap,This will ensure your correct type of HashMap.
19166071,2,0,1,java.util.HashMap,"The explicit (HashMap) cast cannot possibly throw an error, since it's guarded by the instanceof."
19166071,2,0,1,java.util.HashMap,The implicitly-supplied (String) casts will only throw an error if the values returned from the HashMap are not Strings (or nulls).
19163844,2,1,8,java.util.HashMap,"Due to type erasure, reflection will show you have an instance of HashMap, but the  types are dropped at runtime."
19163844,2,1,8,java.util.HashMap,"Effectively, you have HashMap< Object,Object >."
19163844,2,1,8,java.util.HashMap,Among them:  Check to see if it's an instance of 'Map' rather than 'HashMap'.
19164699,1,0,2,java.util.HashMap,Maintaining order in HashMap.
19164699,1,0,2,java.util.HashMap,the obvious reason is that a HashMap doesn't maintain order.
19164725,2,1,13,java.util.HashMap,"HashMap itself doesn't maintain insertion order - but LinkedHashMap does, so use that instead."
19164725,2,1,13,java.util.HashMap,"As documented... HashMap:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
19164725,2,1,13,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
19164731,2,0,1,java.util.HashMap,HashMap doesn't preserve order of insertion  Hash table based implementation of the Map interface.
19164731,2,0,1,java.util.HashMap,"(The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)"
19164746,2,0,1,java.util.HashMap,Use LinkedHashMap instead of HashMap to maintain order.
19165055,1,0,0,java.util.HashMap,"In the declared HashMap, I store clients, who have transactions."
19165055,1,0,0,java.util.HashMap,I passed this HashMap to the report for listing the transactions group by clients.
19166850,1,0,1,java.util.HashMap,HashMap not returning values based on key.
19166850,1,0,1,java.util.HashMap,I'm trying to use a HashMap with my class Cell as the key.
19166850,1,0,1,java.util.HashMap,"However, after putting an item into the HashMap, calling contains on the item will return false."
19166912,2,0,1,java.util.HashMap,Consider how a HashMap is implemented.
19166912,2,0,1,java.util.HashMap,"In other words, when you use HashMap you need to have a correct and matching implementation of equals() and hashCode()."
19166917,2,0,0,java.util.HashMap,"You likely forgot to implement the hashcode() function for Cell, which is also required in order to use a user defined class in a HashMap."
19166923,2,1,2,java.util.HashMap,"In your case, it's mandatory because HashMap makes use of them."
19167413,2,0,0,java.util.HashMap,I would use a HashMap.
19240463,2,1,1,java.util.HashMap,"In order to properly use HashSet (and HashMap, for that matter), you must implement a hashCode() as per the following contract:  Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified."
19172091,2,1,0,java.util.HashMap,"Well, besides the standard observations that you should use Map and HashMap instead of Hashtable, you shouldn't do everything in main, and you don't need or want to use new Integer, you have reversed the direction of the map."
19172091,2,1,0,java.util.HashMap,"Each method of these classes are synchronized, so they are slower than HashMap and  ArrayList."
19220625,2,0,1,java.util.HashMap,I think below solution would work for you -  I have used MyKey.java object as key of the HashMap.
19220625,2,0,1,java.util.HashMap,MultiKeyMap.java =>Extends the HashMap and overrides 'put' and 'get' method.
19177621,2,0,1,java.util.HashMap,"If the HashMap like behaviour is required, I'd create two Maps, and do the magic in handling the collections (also, I'd recommend using Sets for this...): code."
19177434,1,0,0,java.util.HashMap,"This way, using @RequestBody in my controller I'll get something like Q1=A1_2&Q2=A2_3&code=C1 (and it's not what I want since I have to convert the result string in a HashMap later)."
19178649,2,0,0,java.util.HashMap,"I suppose if your DictionaryInterface is a kind of Hashtable or HashMap, its remove can assume Object as a parameter, not K."
19181241,1,0,2,java.util.HashMap,"but if I use Hashmap like the below : HashMap<String, VerifyPaymentRO> verifyPaymentInfoMap VerifyPaymentRO is java bean how do I use it for updating the record ?"
19183455,2,1,3,java.util.HashMap,"You'd better transform the List<Item> to a HashMap<Item, Integer> holding the index of every item in the list."
19187091,1,0,1,java.util.HashMap,Interesting HashMap implementation (build 1.7.0_25-b17).
19187091,1,0,1,java.util.HashMap,This may be explained with hashCode() that could make the same key go into two different buckets inside HashMap.
19187091,1,0,1,java.util.HashMap,It seems that even though there is a bug in the code the HashMap does the job correctly.
19192269,2,0,0,java.util.HashMap,"Realistically you could use more than 1 gatekeeper since putIfAbsent is atomic, but it'd just increase contention on the HashMap."
19188799,2,0,0,java.util.HashMap,HashMap where value is either Float or CustomObj{float value1; String value2}.
19188463,2,1,2,java.util.HashMap,I would choose solution depending on the key size and type Solution 1 is -- 1) HashMap with key and value1(float) 2) HashMap with key and value2(string) This would only need extra space for 1% of keys.
19188463,2,1,2,java.util.HashMap,Solution 2 is -- Single HashMap with a custom object.
19188463,2,1,2,java.util.HashMap,A HashMap key from solution 1 will probably occupy around 8 bytes overhead for each key-value pair.
19191762,2,0,1,java.util.HashMap,"I think the OP is trying to convert the list into a HashMap, and sum the ""occ"" values for those with the same key:  code."
19192710,1,0,2,java.util.HashMap,Each of them is a  combination for the outer HashMap.
19193662,2,1,2,java.util.HashMap,"Also, getItemAtPosition will return one of your items in ArrayList, which is HashMap<String, String>."
19194178,2,1,1,java.util.HashMap,You can use HashMap (java.util.HashMap).
19194178,2,1,1,java.util.HashMap,HashMap is somehow similar to dictionary in C#.
19194231,2,0,0,java.util.HashMap,Keep a HashMap that maps all color codes to their full names.
19194231,2,0,0,java.util.HashMap,"Then, create another HashMap to keep track of positions of the colors."
19194231,2,0,0,java.util.HashMap,You just retrieved red from first HashMap.
19194231,2,0,0,java.util.HashMap,You can use this as the key for second HashMap.
19194231,2,0,0,java.util.HashMap,You could thus use only one HashMap and accomplish the task.
19194231,2,0,0,java.util.HashMap,Your HashMap would look like:   code.
19194231,2,0,0,java.util.HashMap,"So, if you get an r, use that as the key to the HashMap."
19196861,2,1,1,java.util.HashMap,"Try using a Map, HashMap is a possible choice."
19199701,1,0,0,java.util.HashMap,How to JPA mapping a HashMap?
19199701,1,0,0,java.util.HashMap,"How do I have do annotate a HashMap<Enum, Boolean> so that JPA can persist it?"
19199789,2,1,1,java.util.HashMap,@ManyToMany is not optimum solution for HashMap.
19200416,1,0,0,java.util.HashMap,But the result xml should list only the answer elements that have got a code attribute whose value is contained in a specific HashMap that I've got.
19200416,1,0,0,java.util.HashMap,"So, if the <option> has got a code which is contained in my HashMap, the <option> becomes an <answer>, otherwise it should be deleted (not being written in the result xml)."
19200416,1,0,0,java.util.HashMap,": the HashMap is called questionAnswers in the code below I've written this code, but it gives me an ArrayIndexOutOfBoundsException."
19202131,2,0,1,java.util.HashMap,"If you are looking for fast get() and fast remove() operation - what is wrong with standard HashMap<Object, Object> (i.e. using the object itself as a key)?"
19201999,2,1,1,java.util.HashMap,In Java you can use the TreeMap or HashMap classes.
19203997,2,0,1,java.util.HashMap,"A HashMap<String, SomeType> would work well here."
19205267,2,0,0,java.util.HashMap,Just a hint: use a hash map (http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html).
19208744,2,1,1,java.util.HashMap,"You could create a custom bean, or you could simply create a synchronized HashMap (by wrapping it using Collections.synchronizedMap), or a ConcurrentHashMap instance."
19209231,1,0,1,java.util.HashMap,Error while iterating over an ArrayList inside HashMap.
19209231,1,0,1,java.util.HashMap,I have a HashMap implemented as: code.
19209231,1,0,1,java.util.HashMap,"Now, I want to remove all the occurences of 2 from key 1, i.e., I want to modify my HashMap so that it looks like: code."
19209545,2,1,2,java.util.HashMap,"Note: every hashCode() for an Integer is unique, but get the right combination of integer values and when they are reduced to the capacity of a HashMap, they actually map to the same bucket."
19211752,1,0,0,java.util.HashMap,Get value from HashMap using JSTL and variable as an argument.
19211752,1,0,0,java.util.HashMap,"I have a HashMap and trying to get value from it, using another variable as an argument."
19211752,1,0,0,java.util.HashMap,"difficultyMap - my HashMap, t.difficulty - Integer value."
19212194,2,0,0,java.util.HashMap,"In java , you can use a HashMap<String, Integer> which will  store words and their frequency."
19212235,2,1,1,java.util.HashMap,"Create a HashMap<String,Integer> to store the word, frequency relations."
19212235,2,1,1,java.util.HashMap,"Hence, create a new Integer with value 1 and place it back in the HashMap If you get a non-null value, then increment the value and place it back in the HashMap."
19217417,1,0,0,java.util.HashMap,Why HashSet or HashMap does not support position based accessed?
19217417,1,0,0,java.util.HashMap,I have checked in source code of HashMap at GrepCode.com and found it store object hashcode in array.
19217461,2,0,4,java.util.HashMap,"HashMap's contract makes no guarantee about ordering, so allowing you to have positional access would, in essence, be allowing you to write code that would break every time the implementation is tweaked."
19217491,2,0,0,java.util.HashMap,HashMap does not gaurantee you the order.
19217498,2,1,1,java.util.HashMap,Yes it is true that internally HashMap/HashSet uses arrays.
19217597,2,0,2,java.util.HashMap,Why HashSet or HashMap does not support position based accessed?
19219635,1,0,3,java.util.HashMap,Java HashMap nested generics with wildcards.
19219635,1,0,3,java.util.HashMap,Each HashMap in the superMap will only ever have HashSets containing a single subclass of AttackCard.
19220458,2,1,7,java.util.HashMap,"Surely, you can't add a HashMap<String, HashSet<Assassin>> into the superMap."
19220458,2,1,7,java.util.HashMap,"You can only assign a HashMap<String, HashSet<?"
19220458,2,1,7,java.util.HashMap,"Now, you would be able to put a HashMap<String, HashSet<Assassin>> to the superMap."
19220458,2,1,7,java.util.HashMap,"HashMap<String, HashSet<Assassin>> is capture-convertible to HashMap<String, ?"
19220458,2,1,7,java.util.HashMap,"And hence you can put a HashMap<String, HashSet<Assassin>> in the above declared superMap."
19220458,2,1,7,java.util.HashMap,"So that you can assign either HashMap or TreeMap or LinkedHashMap, anytype to the superMap."
19220458,2,1,7,java.util.HashMap,"Also, you would be able to add a HashMap or TreeMap as values of the superMap."
19221574,1,0,1,java.util.HashMap,"I usually use HashMap<Integer, Object> to keep an array of objects where you can get items by Integer."
19221574,1,0,1,java.util.HashMap,"HashMap<Integer,String>:  [0] - Hello 1 - How are you doing   [2] - Bye  So with a HashMap, I can remove items avoiding the rest moving from their indexes."
19221574,1,0,1,java.util.HashMap,hashmap.remove(0)  [0] - null 1 - How are you doing   [2] - Bye  But HashMap shouldn't be used for indexes with an Integer.
19221854,2,0,0,java.util.HashMap,"You can use SparseArray which is similar to HashMap<Integer,String> code."
19221992,2,0,0,java.util.HashMap,"So as a global answer, using HashMap is OK, however using SparseArray is recommended as it is more efficient."
19222029,1,0,1,java.util.HashMap,What is difference between HashMap and HashMultimap.
19222864,2,0,0,java.util.HashMap,To find duplicates in one iteration over the original array without prior sorting you can use a HashMap to store each of the entries and increment count every time you find it again.
19222864,2,0,0,java.util.HashMap,This way you can stop processing as soon as you find the first duplicate or continue to find all... Edit: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html code.
19224312,2,0,0,java.util.HashMap,You can use Jackson Object Mapper to convert a JSON file to a HashMap.
19224312,2,0,0,java.util.HashMap,This automatically creates a HashMap of appropriate objects.
19230006,1,0,5,java.util.HashMap,"The idea that I had was to have static code inside each class that would insert itself into the HashMap, but I am not exactly sure how that would work."
19230533,2,0,1,java.util.HashMap,"Making proper use of generics, you can tell Java what your HashMap is supposed to contain: code."
19230533,2,0,1,java.util.HashMap,"Prior to Java 7, you'd need to repeat the types for the initialization as well, making it new HashMap<Character,Integer>()."
19230462,2,0,0,java.util.HashMap,HashMap stores and returns Objects and you cannot assign an object to a primtive directly:  code.
19233671,1,0,0,java.util.HashMap,"A few notes, but they shouldn't make any difference I think:  the mc is inside a HashMap, I access it inside an Activity"
19234819,2,0,2,java.util.HashMap,(So a Hashtable—unlike a HashMap—will not become internally corrupted if multiple threads are concurrently trying to modify the data.)
19234819,2,0,2,java.util.HashMap,"You need an external synchronized block anyway, so you might as well use the lower-overhead HashMap rather than a Hashtable."
19235238,2,0,1,java.util.HashMap,"There are far more examples from the JDK where they got it right, for example HashMap uses a Hashtable, but could easily be changed to use some other hash-based class without affecting its contract or API."
24516421,2,0,1,java.util.HashMap,"For my needs, I only required session storage, so just put the cookies data in a java HashMap."
19236943,1,0,0,java.util.HashMap,I need to know which is more efficient to the operation of my app: do I download the images to a HashMap of images or do I download them and save them as resources in the asset or drawable directory and then access them by id?
19238185,1,0,1,java.util.HashMap,How to use HashMap with List.
19238185,1,0,1,java.util.HashMap,"How do I correctly instantiate a HashMap whose values are variants of List<Number> - i.e., the values could take the form of List<Long> and/or List<Double>."
19240006,2,0,0,java.util.HashMap,In case you don't know HashMap this is how to initialize it.
19244079,2,0,0,java.util.HashMap,"Add this import <%@page import=""java.util.Map"" %> This worked for me, but I also needed to add <%@ page import=""java.util.HashMap"" %>."
19248949,1,0,0,java.util.HashMap,"The method that I am testing accepts a String, checks if the string is in an acceptable currency format (numbers only, no letters, max 2 digits after a decimal point), and returns a HashMap with 2 keys: VALID which is a boolean denoting the strings validity as a currency, and FORMATTING which is a String added to the original valid String to ensure all valid Strings end up with a decimal point and exactly 2 digits thereafter."
19251652,2,0,1,java.util.HashMap,"(Note: The EqualityHelper extends HashMap, so that's what the put() methods are...)"
19253226,2,0,0,java.util.HashMap,"Also, I'm not sure why you're calling al.add(record); each time, when record is always pointing to the same HashMap (which in turn is being overwritten each time you go through the while loop)."
19261104,2,0,1,java.util.HashMap,"The way I often deal with situations like this is to store something like a HashMap<JButton, Object> as a class field and update it when a button is pressed."
19260309,1,0,3,java.util.HashMap,(Unknown Source)         at java.util.LinkedHashMap.newValueIterator(Unknown Source)         at java.util.HashMap$Values.iterator(Unknown Source)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:192)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)         at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:105)         at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:89)         at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:195)
19262628,2,0,0,java.util.HashMap,"If you are willing to compromise on the return type, you could return a HashMap of the values you require"
19265972,2,0,0,java.util.HashMap,json-lib internally implements java.util.HashMap to store map values.
19265972,2,0,0,java.util.HashMap,"java.util.HashMap provides a lot of performance benefits compared to the ordered alternatives, and hence is used more often in cases where ordering does not matter."
19266568,2,0,0,java.util.HashMap,"Alternatively, you could put this in a subclass of HashMap<Key<?>, Object> instead of delegating to it."
19270431,2,1,0,java.util.HashMap,"Use HashMap(or any other implementation of Map interface) to efficient solve your problem(@kai  solution is ok, but it is O(N^2))."
19272567,1,0,2,java.util.HashMap,Same key - Different Value with a HashMap.
19272567,1,0,2,java.util.HashMap,So I figured out I would use a HashMap with a String Collection.
19272567,1,0,2,java.util.HashMap,I handled it like this; First I created the HashMap code.
19272567,1,0,2,java.util.HashMap,Then I put data in the HashMap for each key.
19275285,1,0,0,java.util.HashMap,Using Java Generics with HashMap.
19275285,1,0,0,java.util.HashMap,How can I use Java generics with a HashMap this way?
19275355,2,1,4,java.util.HashMap,"Just change the type of the HashMap to <String, A> code."
20408655,2,1,1,java.util.HashMap,Your problem is that you overwrite your values in your initial HashMap.
20408655,2,1,1,java.util.HashMap,"Where you set neighborQueenLocations to be initialQueenLocations, you basically just set a reference to your initialQueenLocations HashMap."
20408655,2,1,1,java.util.HashMap,"And later in your code, you are overwriting the value in your initialQueenLocations HashMap, since neighborQueenLocations is just reference to your initialQueenLocations."
19281915,2,0,0,java.util.HashMap,Here's a common problem: what if you decide that you want to use a HashMap to represent a collection of Vehicles?
19282623,2,0,1,java.util.HashMap,Take a look at how java HashMap works: http://opreview.blogspot.com/2013/03/how-does-hashmap-work-in-java-hashmap.html The size is changed when objects are removed however its capacity (the size of the bucket array) remains the same size You should reconsider usage of HashMap versus ArrayList where you can invoke the method ArrayList.trimToSize()
19283867,1,0,0,java.util.HashMap,I want to insert entries into a HashMap that I am obtaining by parsing them from a file using a BufferedReader.
19283867,1,0,0,java.util.HashMap,But when I check dataStore (a HashMap) it is empty.
19284128,1,0,1,java.util.HashMap,"i.e, I have a java object with HashMap and ArrayList in my webservices, now when I convert that in to pure C code would I be able to pass and retrieve parameters from/to C code to/from Java code,."
19285275,2,0,1,java.util.HashMap,"Instead of a list, how about storing a HashMap<Class<?"
19296613,2,0,0,java.util.HashMap,"After last statement, hm (HashMap) has two elements with keys, you can see  And    code."
19294725,2,0,3,java.util.HashMap,"HashMap saves data as ,  where key is unique, so may in your case,  code."
19296049,2,1,1,java.util.HashMap,I think this kind of approach is a good start (of course you would need to override HashMap's remove and other appropriate methods): code.
19297598,2,0,0,java.util.HashMap,It is intended to be more efficient than using a HashMap to map Integers to Objects.
19303853,2,1,3,java.util.HashMap,"You can accomplish the same in java, your dictionary will then be a HashMap in java."
19308500,1,0,0,java.util.HashMap,Check if a HashMap contains a MidiMessage.
19309120,2,1,2,java.util.HashMap,"Assuming mMap is a HashMap, the code inside the try block never throws an IOException."
19313754,2,0,1,java.util.HashMap,I think I'd do this with a HashMap.
19314951,2,1,1,java.util.HashMap,Use a HashMap.
19314951,2,1,1,java.util.HashMap,"In a loop through all options, check to see if an option is in the HashMap."
19314951,2,1,1,java.util.HashMap,"If it isn't, add it to the HashMap and a new array, if it is, do nothing."
19318213,2,1,1,java.util.HashMap,"it is because in a HashMap you cannot have duplicate values.. so, when you do this code."
19318171,1,0,0,java.util.HashMap,"I'm passing a HashMap<String, Collection<String>> to the fragment and am reading it out there."
19318830,1,0,1,java.util.HashMap,"i am getting some records from database and adding in HashMap<Integer, Object> .Then i am adding this HashMap to a Vector<HashMap<Integer, Object>>."
19318895,2,0,8,java.util.HashMap,HashMap doesn't maintain insertion order.
19319174,2,0,3,java.util.HashMap,"From HashMap javadoc:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
19322878,2,0,0,java.util.HashMap,HashMap for an Enum can actually be slower than looping through).
19323956,2,0,0,java.util.HashMap,The method you're looking for is the HashMap's clear() method.
19323956,2,0,0,java.util.HashMap,"However, in your case, you don't need to clear the HashMap."
19323798,2,0,1,java.util.HashMap,It looks like you're looking for HashMap's clear() method.
19325008,2,0,2,java.util.HashMap,"Then you can replace your map with this listDataChild=new HashMap<String, List<EntryList>>();, and add sub items as   code."
19327617,2,0,2,java.util.HashMap,"Next we'll talk about not using an ArrayList but rather a Map<String, Integer> such as a HashMap<String, Integer>."
19327668,1,0,0,java.util.HashMap,"When I try to compile it, I get: ""The method insert(String, Abstract.Inherited) is undefined for the type HashMap String,Abstract""."
19327681,2,1,6,java.util.HashMap,"After changing insert to put and importing java.util.HashMap in Base.java, your code compiles."
19328707,2,0,0,java.util.HashMap,In that case for your problem I would suggest you use HashMap that maps from a key to an arraylist.
19328707,2,0,0,java.util.HashMap,"something like HashMap<String, ArrayList<Float>> hs = new HashMap<String, ArrayList<Float>>();  Your key can be type of faculty i.e. assistant professors, associate professors, full professors etc and in arraylist you store there salaries so when you have to calculate total salaries, average salaries you only need to perform these operations on the individual arraylists which is nice and easy to do."
19329233,2,0,1,java.util.HashMap,set up a 1- or 2-dimensional array to hold the event values instead of a HashMap).
19330567,2,0,1,java.util.HashMap,"For example, there are several major errors that can & likely will occur, if you try & misuse a standard HashMap with synchronization:  Different keys can still hash to the same bucket -- leading to corruption of the chain, typically causing entries to be lost."
19330802,2,1,3,java.util.HashMap,"As a suggestion, you may use a HashMap instead of TreeMap to enhance the performance of your method since the put and get time in HashMap are O(1) (constant time) while TreeMap's are O(log n)."
19336827,2,0,0,java.util.HashMap,Otherwise you are not creating an instance of HashMap.
19337100,2,0,2,java.util.HashMap,the HashMap implementation from the Java standard libraries is not prepared for that.
19337140,2,0,0,java.util.HashMap,The current length of the table (the buckets in the HashMap) is read.
19337798,2,1,6,java.util.HashMap,The better approach is to use a Map implementation like HashMap to pair IDs with their associated Strings.
19337798,2,1,6,java.util.HashMap,"Delegation is the better approach, notice how you can change the map implementation (using maybe a TreeMap instead of HashMap) without introducing a new class where you override the .put(key,value) of TreeMap."
19339513,1,0,1,java.util.HashMap,I have seen the following code in HashMap.java.
19341905,2,1,5,java.util.HashMap,"a HashMap<String, String>."
19345397,2,0,2,java.util.HashMap,A HashTable is equivalent to a HashMap but is is syncronized is a slightly non-useful manner.
19345397,2,0,2,java.util.HashMap,"Lets go through the options: final Map<String, Integer> m = new HashMap<>() This will create a HashMap which, like a HashTable, provides no guarantees about the order of iteration."
19345397,2,0,2,java.util.HashMap,"final Map<String, Integer> m = new LinkedHashMap<>() A LinkedHashMap is similar to a HashMap except for the fact that it maintains a doubly linked list of the elements so that the iteration order of the elements is the insertion order."
19347816,1,0,0,java.util.HashMap,A loop in HashMap.get.
19347816,1,0,0,java.util.HashMap,This is a code to fetch a value from a key in HashMap.
19349436,1,0,2,java.util.HashMap,Do keys with different hashes also get mapped to the same index in HashMap?
19349436,1,0,2,java.util.HashMap,"I had an understanding that the hashcode is used to determine what bucket in a HashMap is to be used, and the bucket is made up of a linked list of all the entries with the same hashcode."
19349568,2,1,2,java.util.HashMap,That's why it's useful to tell the HashMap how many elements to expect when first constructing it - it allows it to avoid doing any rehashing while filling the table.
19351158,2,1,3,java.util.HashMap,"Rather than looping over the entire array for each morse code segment to try and find a match, you could just shove both the arrays in a HashMap and do the lookup much more simply: code."
19350964,1,0,4,java.util.HashMap,Generics in HashMap dont seem to be used consistently.
19350964,1,0,4,java.util.HashMap,Now question - In the HashMap.java I see the following -  code.
19351458,2,0,3,java.util.HashMap,In general you should always specify what type of objects you want things like ArrayList and HashMap (or any other Java collection) to hold when you instantiate them.
19354754,1,0,1,java.util.HashMap,Then why does the any check in HashMap do -  code.
19357409,1,0,1,java.util.HashMap,The SFSB beans have data in them (stored using HashMap).
19360940,2,0,1,java.util.HashMap,Maybe a HashMap might be faster than the switch above.
19366391,2,0,0,java.util.HashMap,"For simplicity, I would just use a HashMap for lookups and when I need the sorted data, I'd make a copy of the values and sort it: code."
19366391,2,0,0,java.util.HashMap,"You could also write your own super-container that internally holds the elements in two collections, one HashMap and maybe a TreeSet."
19365326,2,0,1,java.util.HashMap,"Yes, use an HashMap if you have no concurrent access, since you won't have the extra burden of a synchronized data structure."
19389422,2,1,2,java.util.HashMap,"The equivalent of a WeakHashMap<T> is indeed Collections.newSetFromMap(new WeakHashMap<T, Boolean>()), as a HashSet also uses a HashMap internally."
19374982,1,0,1,java.util.HashMap,Or Is there any flat file or DB file available to get the words and Values into a HashMap?
19383580,2,1,6,java.util.HashMap,"You can use any Map implementation to do the same thing, of which the normal ""default choice"" is HashMap."
19386182,2,0,0,java.util.HashMap,"You can use a HashMap<String,Integer> where String is the word and Integer is the frequency."
19386996,1,0,0,java.util.HashMap,Java HashMap Iterate Each Variable and Return Value.
19386996,1,0,0,java.util.HashMap,"My Question is about the ""boolean isEmpty()"" method, How can I make this function iterate through each HashMap, regardless of size, and check to make sure each value is ""false"" or ""0""?"
19391728,2,0,1,java.util.HashMap,"The best way is probably to use a HashSet, but Player doesn't override hashCode, so HashMap<int, Player> will work, using Player's entityId."
19391728,2,0,1,java.util.HashMap,"Because it's a HashMap, puting multiple times is fine, and HashMap.remove is safe to call if the given obejct isn't in the map (it will return null, but there's no need to check for it in this case)."
19394725,1,0,2,java.util.HashMap,"HashMap Homework, issue with templates."
19395132,2,1,1,java.util.HashMap,"The Iterator that is created has a view of the empty HashMap, because you have yet to add anything to it."
19395132,2,1,1,java.util.HashMap,"When you call hasNext(), even if the HashMap itself contains elements, the Iterator's view doesn't see it."
19395003,1,0,1,java.util.HashMap,Why define object for getEntry in HashMap.
19396890,2,0,1,java.util.HashMap,"Then again, you could just implement hashCode and equals in X and use a HashSet instead of a HashMap."
19399278,1,0,1,java.util.HashMap,"retrieve HashMap list into another list , one key having many values."
19399416,2,0,0,java.util.HashMap,"Something like: HashMap<String, List<Record>> When you want to put record in map, you can do something like: code."
19400480,2,1,0,java.util.HashMap,It can be HashMap or your own tree-like structure.
19400222,1,0,2,java.util.HashMap,HashMap with Overriding hashcode() and equals() is not working in my case.
19400280,2,0,3,java.util.HashMap,"You'll then need to change the map to be of type HashMap<Test,Integer>."
19401639,2,0,0,java.util.HashMap,You'd better use to use an HashMap for this task: code.
19401988,2,1,7,java.util.HashMap,"If you look at the source code of HashSet, you can see that it is actually backed by a HashMap: code."
19402103,2,0,0,java.util.HashMap,HashSet implementation uses a HashMap so the iterator of HashSet is the iterator of the keySet of its HashMap... the keySet implementation of iterator is in AbstractMap class as seen here: AbstractMap-keySet
19406313,1,0,2,java.util.HashMap,Fill a HashMap in Java.
19406313,1,0,2,java.util.HashMap,"I know my question is so silly and we found a lot's of resources on internet, but as a beginner i hesitate between two declaration to fill a HashMap in Java: I have a MySQL request looking like this : select coordinates,x, y,z from log i want to fill a Map or a HashMap( whatever) with the values of x,y and z for each coordinates point."
19410500,1,0,0,java.util.HashMap,"Java HashMap Iterate Each Var and Return Value: Boolean boolean , Integer int error?"
19410500,1,0,0,java.util.HashMap,I create a HashMap will Booleans and a HashMap with Integers.
19412200,2,0,0,java.util.HashMap,"Consider using HashMap<String, Calculate> for storing operations in such way: code."
19413529,2,1,2,java.util.HashMap,I would suggest creating a HashMap of your area information.
19413539,2,0,1,java.util.HashMap,"Don't store your data in an arrays, you are definitely using key-value, so use a Map, for instance a HashMap or even ImmutableMap from the Guava."
19413496,2,0,2,java.util.HashMap,"Why don't you try a HashMap<Integer, String>?"
19414228,1,0,2,java.util.HashMap,Approach 2: This can be optimized using a HashMap; this is particularly helpful if the strings are repeated in the array.
19414228,1,0,2,java.util.HashMap,Here's what I did: take a HashMap where key = string and value = number of times that string occurs in the array.
19414228,1,0,2,java.util.HashMap,Put all strings in the given array into the HashMap along with their counts.
19414228,1,0,2,java.util.HashMap,"Then iterate over each key-value pair in the HashMap, count the number of times the given character appears in the key(string) and increment it by its corresponding value in the HashMap."
19414375,2,0,2,java.util.HashMap,The second approach using HashMap<String> for remembering old visited string (with inherent hashing cost) would not bring improvement to performance worthy to be mentioned.
19414384,2,0,3,java.util.HashMap,"In order to add each string to the HashMap, the method computes the hash code, which looks at every character in the string."
19414384,2,0,3,java.util.HashMap,"So setting up the HashMap already looks at every character in every string, which takes as long as what you'd have to do with approach 1, plus then you have to make another pass through the map."
19414465,2,1,2,java.util.HashMap,"Either way both approaches will be O(n), from the docs for HashMap  This implementation provides constant-time performance for the basic operations (get and put)  But that said even with the approach I provided above this requires additional get when populating the map."
19418955,1,0,1,java.util.HashMap,Why the Entry class in HashMap is static in java.
19418955,1,0,1,java.util.HashMap,Today when i was seeing the source code of the HashMap class in java i saw that the Entry class in HashMap whcih is used to record the key value pair is static.
19419065,2,0,1,java.util.HashMap,"In this case, the Entry class is directly related to HashMap so it makes sense to nest it and not pollute the main package."
19421008,2,0,0,java.util.HashMap,"Now a HashMap dateTestMap contains a new reference which points to the same object DateTest(""ABC"",100) So it can be depicted something like this  Now when you do code."
19422365,1,0,5,java.util.HashMap,Reason HashMap does not implement Iterable interface?
19422365,1,0,5,java.util.HashMap,Can anybody tell me the reason why HashMap doesn't implement the Iterable interface?
19422495,2,0,9,java.util.HashMap,"To be blunt, Map in general (and HashMap in particular) do not implement Iterator because it is not clear what it should be iterating."
19422426,2,0,2,java.util.HashMap,HashMap as a whole is not a data structure that you should iterate over.
19425010,1,0,0,java.util.HashMap,By reading many previous posts I observed that HashMap uses a linked list to store the key value list.
19425447,2,1,2,java.util.HashMap,"The traditional implementation of a HashMap is to use a function to generate a key, then use that key to access a value directly."
19425447,2,1,2,java.util.HashMap,What I think you're talking about is the case where two values in the HashMap generate the SAME key.
19425447,2,1,2,java.util.HashMap,"But that's not O(n) where n is the number of elements in the HashMap, just O(m) where m is the number of elements with the same hash."
19425447,2,1,2,java.util.HashMap,"--- edit to expand on the explanation --- In your post, you state:  By reading many previous posts I observed that HashMap uses a linked   list to store the key value list."
19425447,2,1,2,java.util.HashMap,This is wrong for the overall HashMap.
19425447,2,1,2,java.util.HashMap,"For a HashMap to work reasonably, there must be a way to use the key to calculate a way to access the corresponding element directly, not by searching through all the values in the HashMap."
19425447,2,1,2,java.util.HashMap,"In this case, the HashMap implementation could use a linked list of values, and would need to look through all such values to find the one that it was looking for."
19425447,2,1,2,java.util.HashMap,But this number is FAR less than the number of values in the overall HashMap.
19427144,2,0,1,java.util.HashMap,"Generally, read about Collections in Java, like ArrayList and HashMap and also overriding equals() and hashCode(), and in general OOP Single responsibility principle and Class cohesion"
19428590,2,0,1,java.util.HashMap,As for Q2 you can store added checkboxes in a Vector or HashMap ( depends what logic is involved ) and then you can create custom ActionListener that implements mentioned interface.
19431886,2,1,1,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode(), which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
19432850,1,0,0,java.util.HashMap,Iterate over HashMap>.
19433041,2,1,1,java.util.HashMap,"To iterate over your HashMap's values, you can use fast-enumeration."
19436987,1,0,1,java.util.HashMap,How can I tell in spring XML file that Map to be injected is of type java.util.HashMap ?
19436987,1,0,1,java.util.HashMap,"Please note, I cannot change the class A to use Map instead of HashMap Thanks in advance !"
19437161,2,0,2,java.util.HashMap,"BTW, you should not use raw type HashMap."
19437161,2,0,2,java.util.HashMap,"Use a parameterized type instead - HashMap<String, String>."
19441323,1,0,0,java.util.HashMap,I am collecting this data and store them in a HashMap which is a member variable of this Singleton Service.
19441323,1,0,0,java.util.HashMap,"When the Runnable 'runs' I cache the data in hashMap to disk, will it be garbage collected after it runs or will the reference hang around because they hold reference of the HashMap from Singleton Service which will remain forever ?"
19441323,1,0,0,java.util.HashMap,In the Runnable After the HashMap is cached to disk I can clear its contents which will effectively clear the contents from the Singleton Service hashMap right since its the same reference?
19441407,1,0,0,java.util.HashMap,ArrayMap versus HashMap.
19441407,1,0,0,java.util.HashMap,what is the main difference with org.apache.myfaces.trinidad.util.ArrayMap and java.util.HashMap?
19442395,2,1,2,java.util.HashMap,HashMap uses an array underneath so it can never be faster than using an array correctly.
19442395,2,1,2,java.util.HashMap,An ArrayList implements the List interface and a HashMap implements the Map interface.
19442395,2,1,2,java.util.HashMap,"The HashMap implementation uses the hash value of the key object to locate where it is stored, so there is no guarantee of the order of the values anymore."
19442395,2,1,2,java.util.HashMap,"For example, you could use a ArrayList of HashMap to suit a particular need."
19450744,1,0,1,java.util.HashMap,Java HashMap> how to add an empty array?
19450744,1,0,1,java.util.HashMap,Im using HashMap in my application and sometimes I need to add a key (String) with a null value (emty array list of objects).
19450774,2,0,5,java.util.HashMap,"Now that d isn't null, you can use the methods native to HashMap, like d.put(""key1"", a)."
19450863,2,0,2,java.util.HashMap,You must first declare instance of HashMap: code.
19459759,2,0,1,java.util.HashMap,The order of the characters from that HashMap will be essentially random.
19460350,2,0,0,java.util.HashMap,"checkoutBooks.containsKey  is null when you used  HashMap<String, List<String>>  checkoutBooks = new HashMap<String, List<String>>(); inside constructor, thats why getting Exception code."
19470918,1,0,1,java.util.HashMap,Java HashMap size limit?
19470918,1,0,1,java.util.HashMap,The key/value pair in the HashMap is now null.
19470918,1,0,1,java.util.HashMap,"I am storing all the bigrams in a HashMap, and using a BufferedReader to read the text file."
19470918,1,0,1,java.util.HashMap,What is causing the bigram (key) to be removed from or overwritten in the HashMap?
19471687,2,0,1,java.util.HashMap,HashMap is likely what you want.
19471687,2,0,1,java.util.HashMap,"Hashtable is synchronized; it works more reliably across multiple threads, but for most code, HashMap."
19471604,2,1,3,java.util.HashMap,Note that Map is an interface and HashMap is an implementation of Map.
19473411,2,0,1,java.util.HashMap,HashMap).
19478767,2,1,0,java.util.HashMap,"However HashMap on the other hand poses the following cost:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
19478767,2,1,0,java.util.HashMap,An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
19478767,2,1,0,java.util.HashMap,"Higher values decrease the   space overhead but increase the lookup cost (reflected in most of the   operations of the HashMap class, including get and put)."
19478767,2,1,0,java.util.HashMap,"For your use case, I think the choice should be HashMap."
19479126,1,0,1,java.util.HashMap,"Some of the node names in the XML are not standardised in any way, so I have created a HashMap where the key is the node name, and the value is the variable it needs to be assigned to."
19481227,1,0,1,java.util.HashMap,Prepare a HashMap from that file.
19481227,1,0,1,java.util.HashMap,The filtration is done using the HashMap[YET TO BE ACHIEVED] Can anyone help in my step2.
19484278,2,1,0,java.util.HashMap,"In this case, your data is an array of objects, which can be stored to a HashMap object."
19484278,2,1,0,java.util.HashMap,Therefore we will retrieve each object in your array and add them into each HashMap.
19484278,2,1,0,java.util.HashMap,"The HashMap works by using using a key to insert a value, i.e. HashMap<key type,value type>."
19484278,2,1,0,java.util.HashMap,"To store a value with a key, you use HashMap.put(key,value) for example, map.put(""downloadUrl"", ""URL"") code."
19484288,2,0,1,java.util.HashMap,"On server side, you may get data from HashMap filledForm.data().get(""hiddenData""), or via regular databind mechanism."
19484288,2,0,1,java.util.HashMap,"Since your data is undeterministic, you may change name and value on input control or pass HashMap as data."
19484288,2,0,1,java.util.HashMap,"It will be rendered like this: value=""{A=B, B=B}"" and on server side you will receive HashMap."
19487891,2,0,0,java.util.HashMap,TreeMap depends on  compareTo() while HashMap depends on  equals().
19487891,2,0,0,java.util.HashMap,So if you equals and compareTo are not consistent than TreeMap and HashMap can behave differently.
19488644,1,0,3,java.util.HashMap,I want to convert JSON to a HashMap with Jackson.
19488644,1,0,3,java.util.HashMap,Is it possible to convert my JSON to a HashMap (and when ID is given that it returns the name)?
19489033,2,0,0,java.util.HashMap,"There might be a way to deserialize the list to a HashMap directly, but even then that method would be very complicated."
19489033,2,0,0,java.util.HashMap,Why not just deserialize your JSON list to an ArrayList and do some post processing to obtain the HashMap?
19488867,1,0,1,java.util.HashMap,I am writing a function to read data from excel (.xls) then add it to a HashMap.
19493114,1,0,1,java.util.HashMap,"This line of code returns List<HashMap<String, String>> code."
19493175,2,1,0,java.util.HashMap,"although you will need to change HashMap<String, String> to HashMap<String, Object> for this to work"
19493470,2,0,0,java.util.HashMap,"You can only get string values from the Map since it's declared List<HashMap<String,String>>."
19493470,2,0,0,java.util.HashMap,"If it would say List<HashMap<String, Object> you could do something like this: code."
19495228,2,0,0,java.util.HashMap,With hashMap.values() you get a Collection of all values: http://developer.android.com/reference/java/util/HashMap.html#values()
19499390,2,0,0,java.util.HashMap,"but you may set the key as null, first you need to utilize a Map which acceps null values and it's HashMap<K,V> (javadoc here) Example: code."
19501825,2,1,2,java.util.HashMap,"Try using a HashMap<String, Integer> (see HashMap) where the integer is a counter incremented every time you encounter a new ID."
19502051,2,0,0,java.util.HashMap,"In this case, I suggest using a HashMap, with Integer as they key, and Socket as the value."
19502051,2,0,0,java.util.HashMap,"You could try using a HashMap, maybe have a var for how many people are currently connected."
19502051,2,0,0,java.util.HashMap,"I didn't catch any exceptions, but hopefully this will give you an idea of using a HashMap to hold your sockets Now, if you wanna send data to all the sockets, you would need to create an OutputStream for each socket."
19502051,2,0,0,java.util.HashMap,"This code is assuming that instead of using a HashMap for sockets, you pass the socket into a User class, then use the HashMap to store the user."
19502068,2,0,6,java.util.HashMap,HashMap) and associate strings to integers like this: code.
19505761,1,0,0,java.util.HashMap,How can I synchronize a HashMap while allowing for simultaneous reader threads?
19505761,1,0,0,java.util.HashMap,I'm making use of the following HashMap: code.
20400551,2,0,0,java.util.HashMap,Could you not change your ArrayList to a HashMap and store the objects against their ID's?
19509184,1,0,0,java.util.HashMap,"It has an LruCache so that an X amount of strong references are kept, and a HashMap<K, SoftReference<V> > to keep track of all the objects that might still be kept alive via other strong references in the system (I'm not relying on a SoftReference keeping the objects from being GC'd)."
19509184,1,0,0,java.util.HashMap,I don't want to go over the whole HashMap searching for references for which poll returns null.
19509184,1,0,0,java.util.HashMap,So I'm extending SoftReference to store the key and use it to remove the pair from the HashMap.
19512131,1,0,2,java.util.HashMap,Why integer key do not work in HashMap?
19512131,1,0,2,java.util.HashMap,Why HashMap.get returns null?
19512131,1,0,2,java.util.HashMap,"So I expected that any object can be a key, but HashMap implementation check type with equals, it was surprising for me."
19512850,1,0,0,java.util.HashMap,I am currently reading 2 million lines from a textfile as asked in the previous question Java Fastest way to read through text file with 2 million lines Now I store these information into HashMap and I want to sort it via TreeMap because I want to use ceilingkey.
19513982,1,0,0,java.util.HashMap,What's the simpliest way for Jersey serialize HashMap to json in a restful service?
19513982,1,0,0,java.util.HashMap,"There are lots of questions on returning serialized HashMap, but I didn't find a very good answer."
19513982,1,0,0,java.util.HashMap,"It throws javax.ws.rs.WebApplicationException when the service is called:  com.sun.jersey.api.MessageException: A message body writer for Java class java.util.HashMap, and Java type java.util.HashMap, and MIME media type application/json was not found."
19539152,2,0,0,java.util.HashMap,The best way to do so is by mapping your HashMap into a simple bean and return the bean instead of the HashMap.
19515815,2,0,0,java.util.HashMap,You could use a HashMap to avoid duplicate keys.
19515815,2,0,0,java.util.HashMap,The HashMap will avoid duplicate keys.
19515815,2,0,0,java.util.HashMap,"If the date is unique for each row, then you can also use the date as the key of the HashMap."
19517204,1,0,0,java.util.HashMap,How to insert the 2D Matrix in to the nested HashMap?
19526632,2,0,1,java.util.HashMap,"Note that Map is an interface, HashMap is its implementation."
19527290,2,0,1,java.util.HashMap,"In this case you can use a HashMap, which provides just such association."
19527290,2,0,1,java.util.HashMap,"You could also use a TreeMap instead of the HashMap if you need to store the countries in (alphabetical) order, but that comes with some performance hits."
19530169,1,0,0,java.util.HashMap,"In java, what is the time complexity of a HashMap getValues().size()?"
19531494,1,0,0,java.util.HashMap,"So, I am trying to store the ""points"" they get in a HashMap for each mutual interest they have, and then choose the user with the most mutual interests(highest HashMap key)."
19531569,2,0,0,java.util.HashMap,"I recommend swapping the key and values around in your Map, and in fact, just use a HashMap (or a Guava Multiset) and keep a separate List of Users and run a Collections.sort() using a Comparator which uses the Map as a lookup."
19533140,1,0,0,java.util.HashMap,I have a DefaultListModel object containing a custom data type which is populated from a HashMap of those objects.
19533140,1,0,0,java.util.HashMap,"Here is what happens:      As you can tell, there are suddenly empty spaces in the list, even though the HashMap it is populating from doesn't have any null objects."
19535924,2,0,0,java.util.HashMap,You can define a new class which encapsulates a HashMap object.
19535471,2,0,7,java.util.HashMap,"You can make a HashMap<String,Integer>."
19539912,1,0,0,java.util.HashMap,HashMap find() with arrays.
19540997,1,0,0,java.util.HashMap,"My initial thought was a method in the singleton-ES, which adds a Callable to the ExecutorService via ""submit(callable)"" and stores the resulting Future inside a HashMap or ArrayList inside the singleton."
19625252,2,0,0,java.util.HashMap,You could try using MultiMap instead of HashMap Initialising it will require fewer lines of codes.
19542095,1,0,0,java.util.HashMap,StAX - Is it possible to convert an XML node to HashMap (OR POJO class with a hashmap).
19542095,1,0,0,java.util.HashMap,to a Java HashMap?
19542095,1,0,0,java.util.HashMap,Or a POJO class with HashMap as the only member.. such that this hashmap contains all name-value pairs.. EDIT - I need to use Streaming API for parsing XML.
19544155,2,0,0,java.util.HashMap,"In java, there are HashMap types you can use, here's an example declaration code."
19545535,1,0,1,java.util.HashMap,Reflection with HashMap.
19545535,1,0,1,java.util.HashMap,"Now i want to put the GameObject into a HashMap< String, GameObject> ."
19546583,1,0,0,java.util.HashMap,Java HashMap has LinkedHashMap in value.
19546583,1,0,0,java.util.HashMap,So I have a strange issue with a HashMap and not sure how to access the value.
19546583,1,0,0,java.util.HashMap,"I have a HashMap returned to me from an API that is suppose to be HashMap<String, String>."
19546583,1,0,0,java.util.HashMap,"I've tried casting it, but since it is a HashMap that is <String, String> it's giving me an error that it's not possible."
19546583,1,0,0,java.util.HashMap,"Is there anyway to get a LinkedHashMap value out of a HashMap that is <String, String>?"
19546583,1,0,0,java.util.HashMap,"I have tried this with no luck: ((HashMap)userInfo.get(""key"")).get(""key""); code."
19546583,1,0,0,java.util.HashMap,"java.util.LinkedHashMap cannot be cast to java.lang.String This is really ugly looking, but I was actually able to get it out of the HashMap with this: code."
19546652,2,0,0,java.util.HashMap,If it is a LinkedHashMap and you cast it to a HashMap you will have probelms.
19547386,2,0,1,java.util.HashMap,Map interface is implemented by HashMap and LinkedHashMap classes so you'll most likely want to use it instead of more specific types.
19548772,2,0,0,java.util.HashMap,"You can try and change the implementation so that every Node has a HashMap of nodes with a small initial capacity, say 5."
19548772,2,0,0,java.util.HashMap,The HashMap will grow only when there's a real need - which will save some memory.
19548233,1,0,0,java.util.HashMap,"the second call passes a HashMap with <Integer, CustomClass> code."
19548233,1,0,0,java.util.HashMap,"which gives me the following error:  The parameterized method <UI_FieldPV>rearrengeHashMapIdx(HashMap<Integer,UI_FieldPV>) of type UI.MapOperations is not applicable for the arguments (HashMap<Integer,JComponent>)  Coding of the class which contains the generic method (btw: I tried to create a generic method within the calling class but it didnÄt work."
19548353,2,1,3,java.util.HashMap,"would return a HashMap<Integer, JComponent>, as you have given the explicit type parameter (well, that is not really needed here."
19548353,2,1,3,java.util.HashMap,The type T will anyways be inferred from the type of HashMap you are passing).
19548353,2,1,3,java.util.HashMap,"Now, as per the declaration of the method, the argument to the method should be of type HashMap<Integer, T>."
19548353,2,1,3,java.util.HashMap,"So, the method expects a HashMap<Integer, UI_FieldPV>, but you are passing a HashMap<Integer, JComponent>."
19549554,1,0,0,java.util.HashMap,java why does an enhanced for loop iterate over null results in a HashMap with more than 16 or more items?
19549554,1,0,0,java.util.HashMap,"The code I used originally, which returned a NullPointerException in some places for any HashMap containing 16 or more elements: code."
19549554,1,0,0,java.util.HashMap,"The code I am now using, which works on the same HashMap, regardless of size: code."
19551946,2,1,2,java.util.HashMap,HashMap provides an efficient storage but no guaranteed order.
19551946,2,1,2,java.util.HashMap,It’s just a coincident that you didn't discover it with smaller HashMap sizes because the default capacity is 16 and the hash codes of contiguous Integer objects are contiguous too.
19551946,2,1,2,java.util.HashMap,You always have to assume no guaranteed order for a HashMap.
19551946,2,1,2,java.util.HashMap,It iterates over the values contained in the HashMap which are the values you have added before.
19551946,2,1,2,java.util.HashMap,You might see null values in the debugger when looking at the internal array of a HashMap which are unused slots as a HashMap has a capacity which can be larger than its size.
19552153,2,1,21,java.util.HashMap,"Finally to get your HashMap, just do like this: code."
19555529,2,0,0,java.util.HashMap,"Without checking the source code of the likes of HashMap, TreeMap, ConcurrentHashMap, I would expect their clear method to take constant time, plus amortized garbage collection costs."
19561782,2,0,0,java.util.HashMap,It would probably make more sense to store the information in a HashMap with the GoodTitle as the key.
19565585,2,0,0,java.util.HashMap,"Ok found out, just need a HashMap to map Neo4j node id's to TreeNode objects: code."
19566356,2,1,3,java.util.HashMap,Use a HashMap code.
19568107,1,0,0,java.util.HashMap,Storing HashMap inside HashMap.
19568107,1,0,0,java.util.HashMap,I have tried to store HashMap inside another HashMap but first inserted values changed as second time inserted value.
19568160,2,1,4,java.util.HashMap,You need to create a new instance of HashMap before the second put() call code.
19568175,2,0,0,java.util.HashMap,"You store a reference to the HashMap map2 in map1, not a copy."
19568181,2,0,0,java.util.HashMap,Note that you adding HashMap map2 which is created with this : code.
19568181,2,0,0,java.util.HashMap,"And this address memory value is put into the ""bigger"" HashMap."
19568181,2,0,0,java.util.HashMap,"If you clear/change map2, you also clear it in your bigger HashMap, because it is just pointing to the same object!"
19573257,2,0,3,java.util.HashMap,KeyWords here:  HashMap Split the Strings  Hope this helps.
19573184,1,0,0,java.util.HashMap,I am wanting to convert a HashMap to a Set.I am trying to find common elements between two maps by first putting that to a set and use retainAll.How to convert a Map to a Set.
19573316,2,0,1,java.util.HashMap,"HashMap has a key set and a value set, to keep the associativity, HashMap has a method called code."
19575804,1,0,0,java.util.HashMap,"2) my hashmap is actually HashMap<String, Hashmap<Enum, ArrayList<Subclass>>> so how should I cast my card to be of a specific subclass?"
19575909,2,0,1,java.util.HashMap,"For example instead of HashMap<String, Hashmap<Enum, ArrayList<Subclass>>> you should make it Map<String, map<Enum, List<Subclass>>>."
19575909,2,0,1,java.util.HashMap,"Also if your key in a map is an Enum, its more efficent to use an EnumMap instead of HashMap"
19577960,2,0,0,java.util.HashMap,When the same user logins again check for entry in the HashMap and if available invalidate the session and create new session for the user.
19579923,1,0,0,java.util.HashMap,Sorting HashMap by value using a TreeMap and Comparator.
19584216,2,0,0,java.util.HashMap,the ideal data structure would be a HashMap Steps: 1) initialize an array to store the numbers and for each input 2) check if a hashmap entry with key as the entered number already exists 3) if exists simply increase its count 4) else create new entry with key as the number and count as 1 so at the end your frequencies would be calculated if you are forced to use 2 arrays 1) initialize two arrays  2) for each input loop the number array and check whether that number is already in the array 3) if so take the array index and increment the value of the frequency array with the same index 4) if not freq[index] = 1
19584945,2,0,2,java.util.HashMap,"In HashTable and HashMap some methods are potential problems for multi-thread access, such as remove method, that first checks that the element exists, then removes it."
19590430,2,0,1,java.util.HashMap,HashSet is implemented on HashMap.
19590430,2,0,1,java.util.HashMap,"HashMap caches the hashCode of the key, So if you change the hashCode than even though the hash function maps the hashCode to the same bucket as the original object present but it will not find because before even checking the object equality it will check the hashCode."
19590430,2,0,1,java.util.HashMap,So key for the HashMap or the object that you are putting into HashSet should be immutable or effective immutable.
19590437,2,0,0,java.util.HashMap,This problem is just a limitation of the implementation of java.util.HashSet and the underlying java.util.HashMap.
19593223,2,1,3,java.util.HashMap,"Since HashMap is unsorted, and because it cannot be sorted in place due to the way that it is constructed *, you have two simple options here:  Create a LinkedHashMap, and populate it with the data from your original HashMap in the desired order, or Cereate a temporary list from the keySet of your HashMap, order it as desired, and then iterate that sorted set, and retrieve the data from the original HashMap in the desired order."
19593223,2,1,3,java.util.HashMap,"* HashMap entries are arranged in ""buckets"" according to their hash code, which is very much arbitrary."
19593237,2,0,0,java.util.HashMap,HashMap is unordered colection(the items are ordered by the hash and you can't rely on that).
19593173,2,0,0,java.util.HashMap,HashMap is unordered.
19595041,1,0,1,java.util.HashMap,"I'm trying to send a HashMap from a client process to a server process using a DatagramSocket, but I'm getting a ObjectInputStream.readObject() EOFException."
19598174,1,0,1,java.util.HashMap,"I use a loop to give values to this Map, where ParkingDests is a set of keys (String) of another HashMap: code."
19598362,2,1,3,java.util.HashMap,You want to check to see if the secondary HashMap is added in before you add a new route.
19598480,2,1,14,java.util.HashMap,"You can choose between lots of implementing concrete classes on the right side of your assignment, such as:  ConcurrentHashMap HashMap LinkedHashMap TreeMap  and many others."
19600483,2,0,0,java.util.HashMap,"String to char[] sort it char[] generate String from sorted char[]  use it as key to HashMap<String, List<String>> insert current original String to list of values associated   for example for  car, acr, rca, abc it would have code."
19600965,1,0,0,java.util.HashMap,"User-Friends HashMap | User  |   Map of Friends and their likes | Now per user, we will also maintain a max heap of his likes sorted by their frequency within his network."
19601539,2,1,3,java.util.HashMap,"You defined a HashMap<String,ArrayList<Pair<String,Integer>>>, but your method expects a Map<String,List<Pair<String,Integer>>>."
19602749,2,0,1,java.util.HashMap,"Assuming that you have Unique names, you can use HashMap to have a name-marks pair."
19605782,2,0,0,java.util.HashMap,There's two ways to do this:  Use a self-size-increasing data structure like a HashMap.
19605782,2,0,0,java.util.HashMap,"My suggestion is to go with a HashMap, but I'm assuming you have not learned data structures yet."
19610549,2,0,1,java.util.HashMap,This problem is what a HashMap is for.
19610195,2,0,0,java.util.HashMap,"It sounds like what you need is for your Student class to maintain, in addition to its current id, name, and className properties, something like a private HashMap<String, Results> testResults; property that tracks their individual results on various tests for various classes (if each Student only takes one class, you can make this a List<Results> instead of a HashMap)."
19610195,2,0,0,java.util.HashMap,"(Again, that's for the HashMap version; you won't need the String parameter if you're only using a List.)"
19611246,1,0,0,java.util.HashMap,"Im im trying to set a session attribute ""productos"" with a HashMap<Integer,webservice.DataProd>."
19612933,2,0,1,java.util.HashMap,If you want to retrieve your values like variable may be you can use HashMap!
19613969,1,0,0,java.util.HashMap,"The Multimap is not better than a HashMap<String, <ArrarList<Integer>> where the key is the value of property  (property2Value3) and the value is a list of index to my ArrayList<MyObjects> (1,2,3,4,5...100)  Need to build up at each filter, each filter value the HashMap<String, <ArrarList<Integer>> and than exactly there I am, where the iOS...maybe with a few auxiliary collections less."
19614300,1,0,6,java.util.HashMap,Currently I am doing this by creating a HashMap of fragment and placing each instance and grabbing it from there.
19616858,1,0,0,java.util.HashMap,I have tried with just a HashMap instead of ConcurrentHasMap and the results are the same (monitored with Java VisualVM).
19616858,1,0,0,java.util.HashMap,"Thanks,  Agustin UPDATE: A few interesting questions:   If the HashMap has a constant capacity, what of the following operations can be performed safely?"
19616858,1,0,0,java.util.HashMap,Two threads updating values in the HashMap.
19616858,1,0,0,java.util.HashMap,Two threads updating values in the HashMap while a third one is reading the HashMap.
19617123,2,1,1,java.util.HashMap,"I changed the random interval to 10000 and added sleeps, so now it's being continuously updated during the program run and crashes for HashMap."
19616924,2,0,2,java.util.HashMap,"ConcurrentHashMap allows for multiple-thread access, in contrast to HashMap which does not."
19616924,2,0,2,java.util.HashMap,Calling HashMap#put from multiple threads at the same time may break your map.
19619169,2,0,1,java.util.HashMap,"HashMap Note: You can expect to get best guidelines to your question, but No one is going to 'write' code for you!"
19621476,2,0,2,java.util.HashMap,"If you iterate over a HashMap you still would have O(n) runtime, as you would iterating over any other datastructure...  Iterating over a HashMap is just as time consuming as iterating over any DS."
19621476,2,0,2,java.util.HashMap,"Access to an element in a HashMap using its key is O(1) (or atleast amorized), accessing M entries (by their keys) using direct access results thus in O(M) runtime with O(M) << O(N)."
19621476,2,0,2,java.util.HashMap,You could perhaps keep the last 100 keys in a cache and just loop over (a copy) of the cache to have the best possible access (in terms of performance) in combination with your HashMap.
19623913,2,0,1,java.util.HashMap,Map is an interface; the most commonly used implementation is HashMap.
19623930,2,1,2,java.util.HashMap,"As the comments have said, you want to use a Map, of which HashMap is an implementation."
19626279,1,0,2,java.util.HashMap,"I have a program that does the following: Iterates through a string, placing words into a HashMap<String, Integer> where the key represents the unique word, and the value represents a running total occurrences (incremented each time the word is found)."
19626279,1,0,2,java.util.HashMap,"Then, I iterate through the hashmap and insert the values into a new HashMap<Integer, List<String>>."
19626279,1,0,2,java.util.HashMap,"Then, I iterate through the HashMap and print the Strings in each List."
19631972,2,0,1,java.util.HashMap,HashMap takes less memory than a TreeMap and is O(1).
19634461,1,0,0,java.util.HashMap,Find the most common value in a HashMap.
19634461,1,0,0,java.util.HashMap,"/vote ), their vote is stored in a HashMap (String Playername, Integer mapnumber) (This is to detect if the user has already voted/wants to vote for a new map)."
19634461,1,0,0,java.util.HashMap,"I then use a for loop to insert the votes into a new HashMap (Integer Mapnumber, Integer Numberofvotes)."
19640006,1,0,1,java.util.HashMap,"I am populating the ListView using ArrayList<HashMap<String, String>> listValues and a SimpleAdapter and I have checked that listValues does contain 10 distinct values."
19660339,2,1,1,java.util.HashMap,"The implementations I compared to are the following:  Implementation based on a Map<String,List<Object>> using a HashMap and ArrayLists; Implementation based on a List<Object[]> using an ArrayList; Guava's HashBasedTable<Integer,String,Object>; Guava's ArrayTable<Integer,String,Object>;  My test consisted in generating n random rows each having m columns and a ""fill factor"" of k, where the fill factor is defined as the probability that each row contains values for all the columns."
19642987,2,0,0,java.util.HashMap,Here's a checklist:  Has the HashMap been completely initialized before the worker threads are created?
19643746,2,1,5,java.util.HashMap,very confused Java HashMap nested generics with wildcards What are multi-level wild cards?
19644160,1,0,0,java.util.HashMap,"I added a class to your example to get it to store the values in a HashMap, I'm wondering if I did this right or if there is some other better way to do it?"
19644160,1,0,0,java.util.HashMap,"Right now it does store the values in a HashMap, but it gives me a warning: Note: ExampleGame.java uses unchecked or unsafe operations."
19644160,1,0,0,java.util.HashMap,just before I start going to try and get this to work I want to make sure I did that HashMap right.
19644626,1,0,5,java.util.HashMap,quick question to be sure I understood well how HashMap in java works.
19644626,1,0,5,java.util.HashMap,"I read that behind the scene, HashMap works as follows:  get the key/value."
19644626,1,0,5,java.util.HashMap,"EDIT: many thanks, so to complete:  - How does Java HashMap store entries internally  - How does a HashMap work in Java?"
19644715,2,0,1,java.util.HashMap,"Just note that a single bucket is assigned many hashcodes: in a fresh HashMap there are altogether 16 buckets, each assigned a total of 232/16 = 228 hashcodes."
19644841,2,0,0,java.util.HashMap,The actual hashcode HashMap uses to store the value may not be 106079.
19644841,2,0,0,java.util.HashMap,"So in this JVM's example, it does not use 106079 as a hash, since HashMap recreates a hash to 'harden' it."
19644865,2,1,1,java.util.HashMap,"Please also note, there are several ways HashMap can implement hash codes collision resolution, not only utilizing linked list as you mentioned Java's HashMap implementation does not only use LinkedList strategy to handle key-values with same key.hashCode() values."
19645102,2,0,2,java.util.HashMap,Other people are going to beat me to it but then make sure you store the answer into the HashMap prior to returning.
19648325,1,0,0,java.util.HashMap,Adding to a HashSet when it is the value of a HashMap.
19648325,1,0,0,java.util.HashMap,"I'm doing an ''generic class'' exercise from my textbook right now, trying to implement a Graph data structure using a HashMap as the underlying structure, with keys being nodes in the Graph, and the values of the keys being a HashSet of the nodes adjacent to that node."
19651994,2,1,4,java.util.HashMap,It's also worth noting that you should never use a mutable object as the key in your HashMap.
19652062,2,0,3,java.util.HashMap,Method containsKey in source code (HashMap) is as follows: code.
19654361,2,0,0,java.util.HashMap,"You can have it like this, use HashMap."
19658003,1,0,1,java.util.HashMap,Does computing hashCode in HashMap and HashTable work differently?
19658003,1,0,1,java.util.HashMap,"I read in HashMap that hashCode() is called this way : hash(key.hashCode()); and in HashTable, it is computed with both the key and pair : h += e.key.hashCode() ^ e.value.hashCode();."
19658003,1,0,1,java.util.HashMap,Are they computed differently in HashMap and HashTable?
19658279,2,1,1,java.util.HashMap,"You may be confusing two completely different uses of hashCode here, both of which exist in both HashMap and Hashtable."
19658279,2,1,1,java.util.HashMap,"The second is inside the hashCode method of the HashMap or Hashtable itself, which is computing a single hash for the whole object."
19658200,2,0,0,java.util.HashMap,"And maybe you can find a better implementation for Map than Hashtable, for instance HashMap: code."
19658227,2,0,3,java.util.HashMap,Better to use a HashMap instead.
19658227,2,0,3,java.util.HashMap,Related:  Differences between HashMap and Hashtable?
19662737,1,0,1,java.util.HashMap,Seek for an efficient way to generate my HashMap instance.
19662737,1,0,1,java.util.HashMap,"Then, I have a HashMap instance which holds several Persons get from server: code."
19662737,1,0,1,java.util.HashMap,What I need is to generate another HashMap which only contains persons whose id is listed in the ids array: code.
19662923,2,0,0,java.util.HashMap,When you find them you would have to add them to your second HashMap.
19664176,1,0,0,java.util.HashMap,HQL NamedQuery with inner join on a HashMap.
19664176,1,0,0,java.util.HashMap,bu in my case the associated entity is a HashMap which contains the desired entity.
19665665,1,0,0,java.util.HashMap,Update: The below program seems to work fine... import java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.Map.Entry; public class CopyOfLookupSuggest {     static Map hashMapFinal = new HashMap(); code. }
19684388,2,0,0,java.util.HashMap,I think this is your problem your HashMap getting null  code.
19681567,1,0,1,java.util.HashMap,Bindings HashMap with java ScriptEngine.
19691920,1,0,7,java.util.HashMap,Collision resolution in Java HashMap.
19691920,1,0,7,java.util.HashMap,Java HashMap uses put method to insert the K/V pair in HashMap.
19691920,1,0,7,java.util.HashMap,"Lets say I have used put method and now HashMap<Integer, Integer> has one entry with key as 10 and value as 17."
19691920,1,0,7,java.util.HashMap,"If I insert 10,20 in this HashMap it simply replaces the the previous entry with this entry due to collision because of same key 10."
19691920,1,0,7,java.util.HashMap,If the key collides HashMap replaces the old K/V pair with the new K/V pair.
19691920,1,0,7,java.util.HashMap,So my question is when does the HashMap use Chaining collision resolution technique?
19692036,2,0,4,java.util.HashMap,"In an HashMap the key is an object, that contains hashCode() and equals(Object) methods."
19692004,2,0,1,java.util.HashMap,"But even in that case, HashMap would replace your value!"
19692021,2,0,4,java.util.HashMap,Consider HashMap's source (bits and pieces removed): code.
19697667,1,0,0,java.util.HashMap,Values as an arraylist of Objects in HashMap.
19697667,1,0,0,java.util.HashMap,I want to create a HashMap that stores key as an Integer value which is the ID of a restaurant.
19701458,2,0,0,java.util.HashMap,You can store them in HashMap as follows: code.
19701234,2,0,5,java.util.HashMap,"I think what you want to do is to turn your String into a HashMap<String,String>."
19701234,2,0,5,java.util.HashMap,"Then, iterate the array that you get, splitting each entry around the equals sign, and adding the result to the HashMap."
19701234,2,0,5,java.util.HashMap,"I suggest you read about the split method of the String class for how to do this, and also read about the HashMap class."
19701234,2,0,5,java.util.HashMap,Look at http://docs.oracle.com/javase/7/docs/api/java/lang/String.html and http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html  and post again if you need more help.
19702627,2,0,0,java.util.HashMap,"One possible solution is also to transform the Collection to HashMap, save id's to remove and then remove it from the HashMap."
19703562,1,0,0,java.util.HashMap,"Is a static HashMap<ID, List<Items>> the way to go?"
19703709,2,1,2,java.util.HashMap,To use HashMap as webservice hash map as webservice For static variables shared among threads thread sharing
19704134,2,0,0,java.util.HashMap,"The default hashMap accepts two generic types HashMap<Object,Object> which represents HashMap<Key,Value> with your code you will have to cast the options.get(s) to Sword but with that you don't use the power of Generics so recommend the @BackSlash's answer since you won't need casting."
19703984,2,0,2,java.util.HashMap,"Just use the parametrized type HashMap, declare the HashMap as code."
19704904,1,0,3,java.util.HashMap,"Is this a method that returns a HashMap<Key, Value> mapping?"
19705612,2,0,1,java.util.HashMap,Check out http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
19706701,1,0,1,java.util.HashMap,Move a value from one key to another in HashMap.
19707016,2,0,0,java.util.HashMap,The solution would be to get the list of students from the HashMap and remove the Student object you want to move.
19707016,2,0,0,java.util.HashMap,Then get the other list from the HashMap and simply just add the object.
19707920,1,0,0,java.util.HashMap,"if in the array ""Bob"" was the string found most and it was found 3 times the string returned should be  ""BobBobBob"" In thinking of how to do this I was thinking of using a HashMap or something else that would force unique key values, store the string as the key and the frequency as the value."
19707920,1,0,0,java.util.HashMap,Overall this would give me O(n) + O(n) ... im just wondering if there is a better way to do it EDIT: I understand that you cant do better than O(n)  but the issue here is that once i iterate over the initial array to build the HashMap I will then have to reIterate over the hashmap to figure out which  pair has the highest value which will again be O(n) .. essentially is there a way to do this where i only have to iterate the entire list One time
19708074,2,0,3,java.util.HashMap,"My 2 cents: O(2n) isn't bad, but maybe you can do better... You can use a HashMap<String, Integer> and then also a WinnerText string and WinnerCount integer counter that you update on the fly."
19710624,2,0,0,java.util.HashMap,"Use a hashtable data structure, such as a HashMap, and use the objects as keys."
19718593,1,0,0,java.util.HashMap,I have a problem with functionality of the next Sets and I really what to know what is the difference between TreeSet and HashSet in java and also What is the difference between TreeMap and HashMap.
19718672,2,1,1,java.util.HashMap,"One difference that catches people by suprise is that you can store null in HashMap and HashSet, but not (necessarily) in TreeSet or as a key in TreeMap."
19719634,2,1,11,java.util.HashMap,"Using a HashMap object, for example, you can store combinations that have already been calculated and refer to those first before running the recursion."
19724157,2,0,2,java.util.HashMap,You can't do it directly but you could use a HashMap to emulate what you seek.
19724612,1,0,2,java.util.HashMap,My got a HashMap data: code.
19724612,1,0,2,java.util.HashMap,I somehow feel that it is because my field variable is a String object while the key in HashMap is CharSequence.
19724765,2,0,1,java.util.HashMap,Are you putting StringBuffers into a HashMap?
19726737,1,0,2,java.util.HashMap,"Scenario 2: I also get another data as a HashMap type (Again, I have no control on the creation part for this Map data) : code."
19730024,2,0,0,java.util.HashMap,You need to set the store HashMap to static.
19730540,2,0,0,java.util.HashMap,If you want to create an indexed collection of data you would likely want to use something other than an ArrayList.... consider a HashMap for example: code.
19730779,2,1,2,java.util.HashMap,"If it were me, I'd do something similar, but not identical, to option 1:  Read all plugins at startup, storing their headers and a reference to either their class name or an instance (if they're stateless) in a HashMap in a RequestFactory or similarly named utility."
19734327,1,0,0,java.util.HashMap,I got a HashMap and a MySQL Database.
19734327,1,0,0,java.util.HashMap,"Whenever my programm starts, it reads everything from the database and saves it into the HashMap."
19734327,1,0,0,java.util.HashMap,- Deleting everything in the database before saving the HashMap would be bad too.
19738696,2,0,0,java.util.HashMap,"java.util.HashMap is not Parcelable, so your options are:  use put/getSerializable, which will work fine within your app encode the HashMap as json or another remotable format if sending outside your app take out the map entries one by one and put them in the Bundle directly (assuming they have string keys)"
19738977,1,0,7,java.util.HashMap,How is the internal implementation of LinkedHashMap different from HashMap implementation?
19738977,1,0,7,java.util.HashMap,I read that HashMap has the following implementation: code.
30026850,2,0,1,java.util.HashMap,"HashMap does not maintains insertion order, hence does not maintains any doubly linked list."
19738997,2,0,1,java.util.HashMap,If there is a collision in hashCode than HashMap resolve this collision by chaining i.e. it will add the value to the linked list.
19738997,2,0,1,java.util.HashMap,But the difference between LinkedHashMap and HashMap is LinkedHashMap maintains the insertion order.
19739000,2,0,3,java.util.HashMap,"For future reference, you can just google:   java LinkedHashMap source  HashMap uses a LinkedList to handle collissions, but the difference between HashMap and LinkedHashMap is that LinkedHashMap has a predicable iteration order, which is achieved through an additional doubly-linked list, which usually maintains the insertion order of the keys."
19739000,2,0,3,java.util.HashMap,"For reference, iterating through a LinkedHashMap is more efficient than iterating through a HashMap, but LinkedHashMap is less memory efficient."
19739000,2,0,3,java.util.HashMap,"In case it wasn't clear from my above explanation, the hashing process is the same, so you get the benefits of a normal hash, but you also get the iteration benefits as stated above, since you're using a doubly linked list to maintain the ordering of your Entry objects, which is independent of the linked-list used during hashing for collisions, in case that was ambiguous.. EDIT: (in response to OP's comment): A HashMap is backed by an array, in which some slots contain chains of Entry objects to handle the collisions."
19739044,2,0,1,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
19739044,2,0,1,java.util.HashMap,"Like HashMap, it provides constant-time performance for the basic operations (add, contains and remove), assuming the hash function disperses elements properly among the buckets."
19739044,2,0,1,java.util.HashMap,"Performance is likely to be just slightly below that of HashMap, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a LinkedHashMap requires time proportional to the size of the map, regardless of its capacity."
19739044,2,0,1,java.util.HashMap,"Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity."
19739117,2,1,9,java.util.HashMap,A HashMap.Entry object has a next field allowing the Entry objects to be chained as a linked list.
19739117,2,1,9,java.util.HashMap,"In the LinkedHashMap implementation, the LinkedHashMap.Entry class extends the HashMap.Entry class, by adding before and after fields."
19743249,2,1,1,java.util.HashMap,"Integer when putting to HashMap, those temp objects are are put in the L1 cache evicting some other data."
19742119,2,0,3,java.util.HashMap,"As @JBNizet mentions, using a Map<String, Account> such as a HashMap<String, Account>, would make your life much easier and would get rid of the need to iterate through the list with a for loop."
19744272,2,0,0,java.util.HashMap,Simplest way is to serialize and deserialize the HashMap.
19745280,1,0,1,java.util.HashMap,"Anyway to have two of the same keys, but different values in Java HashMap?"
19745280,1,0,1,java.util.HashMap,"I'm using a HashMap to contain a misspelled word, and a int array that contains its offset in the document, the line number it is on, and the length of that misspelled word."
19745280,1,0,1,java.util.HashMap,"By default, HashMap replaces the old values if the key is already contained."
19745318,2,0,2,java.util.HashMap,"No, a HashMap is always uniquely keyed."
19747581,1,0,1,java.util.HashMap,NullPointerException on HashMap.
19747581,1,0,1,java.util.HashMap,"I have a HashMap<Integer, JButton>."
19751905,2,0,1,java.util.HashMap,You can use a UUID and HashMap for this purpose: code.
19752854,1,0,0,java.util.HashMap,"If it makes it any clearer here is what totalNumberAcrossExamTypesAndDates actually is Map<Date, HashMap<String, Integer>>"
19756933,2,0,0,java.util.HashMap,"You have to implement your own Comparator<HashMap<String,String>> and pass it to Collections.sort."
19758157,2,0,1,java.util.HashMap,To maintain a HashMap or the like directing each element to its location in the heap.
31984993,2,0,0,java.util.HashMap,JSON of unknown format to HashMap writing JSON And reading Json code.
19760665,2,0,0,java.util.HashMap,"No, because HashMap is going to have to take the very large number of possible values returned by hashCode and map them to the very small number of buckets, and there's no guarantee that that mapping will map different integers' hashcodes to different buckets."
19760721,2,0,0,java.util.HashMap,"Depends on the values, probably the HashMap will create new buckets (increase the capacity) to keep the load factor under a minimum (Java HashMap increases size if load is over 75% by default)."
19760772,2,1,0,java.util.HashMap,No because HashMap will rehash the hash for its own internal purposes.
19762254,1,0,0,java.util.HashMap,I have posted two pieces of code below: the first is the HashMap example I found and the second is my current proposal and the issues I'm running into.
19762254,1,0,0,java.util.HashMap,The HashMap code.
19762584,2,0,1,java.util.HashMap,You need to create a new class IndexedMap inheriting HashMap and store the key object into the  arraylist by overriding put method.
19774480,2,0,1,java.util.HashMap,"You'll want to research the Map interface, specifically the HashMap implementation."
19774480,2,0,1,java.util.HashMap,"So you could place each of your objects in a HashMap with the Id as the key, and then you can directly ask the HashMap if it has an object of a certain key or not."
19774507,2,0,1,java.util.HashMap,"If you want to be able to index elements using an unique identifier, you may have a look into Map, and its implementation HashMap."
19775238,1,0,3,java.util.HashMap,XStream with HashMap.
19775238,1,0,3,java.util.HashMap,Anyone could tell me how to Serialize a HashMap with XStream?
19775645,1,0,3,java.util.HashMap,java HashMap and ArrayList in one.
19775645,1,0,3,java.util.HashMap,I need a class being HashMap and ArrayList at the same time.
19775645,1,0,3,java.util.HashMap,Why do I need HashMap?
19775832,2,0,0,java.util.HashMap,Otherwise a HashMap seems the solution.
19775668,2,0,0,java.util.HashMap,"If your key is numeric (Integer), then simply use an ArrayList If your key is not numeric, and your random access is via the non numeric key, use a HashMap Otherwise, if you need to access by both a (non numeric) key, and the insertion index, you might need to create your own data structure that has both an ArrayList and a HashMap by implementing both Map and List interfaces."
19775668,2,0,0,java.util.HashMap,"(it will have both an ArrayList and a HashMap members, and you'll have to update both on add / remove etc, although some cases will have indecisive definitions, e.g."
19778606,2,0,0,java.util.HashMap,"Create a HashMap<Integer,HashSet<Integer>> and initialize it with the values:0, 20, 40, 60 and 80 (and empty Sets): code."
19778606,2,0,0,java.util.HashMap,"Whenever you generate a number, check in which range does it fall, for example, if it's in the range 21-40 you should add it to the HashMap as follows: code."
19781729,1,0,0,java.util.HashMap,ArrayList to HashMap function behaving oddly.
19781759,1,0,0,java.util.HashMap,HashMap containsKey not returning true.
19782955,2,0,1,java.util.HashMap,Try to use a HashMap where the keys are the country code and the value is the country's name.
19782955,2,0,1,java.util.HashMap,You can iterate through the HashMap after that and print out both keys and values.
19790997,2,1,1,java.util.HashMap,in HashMap and also introduces another layer so TcpServer is not calling commands directly.
19785713,1,0,0,java.util.HashMap,"Where legend is a HashMap<String, Double>, mapping string labels to position on the axis, but this don't change anything to the plot."
19785741,1,0,0,java.util.HashMap,"for example : public static void main(String[] args) {         HashMap<String, String> map = new HashMap<**MISSING**>()     } anyway to turn it back on?"
19822585,2,1,1,java.util.HashMap,2.3 The exception occured only in combination when process variables where read or written by the delegate<X>.getVariable() way (either by our code or implicitly in the camunda implementation of juel-parsing with gateways and serviceTasks or completeTask(HashMap)) Thanks a lot for all your input.
19792700,2,0,0,java.util.HashMap,"You will then use the methods of ArrayList, eg ""get"", which will return objects of class ""HashMap""."
19788279,2,1,2,java.util.HashMap,"It's been a while since I've done anything with Jackson, but if you store the objects in a HashMap<String, ObjectType> that might do it."
19788478,1,0,0,java.util.HashMap,i have also read this HashMap with multiple values under the same key but i do not understand how to do this.
19789840,2,0,2,java.util.HashMap,When you lookup an element in a HashMap its hashCode is used and so as b's hashCode is different from a's hashCode you can not find an element with key a by using b.
19789756,2,1,5,java.util.HashMap,"Since you're using an HashMap for storing your date objects, you have to override the hashCode() method because the key objects are stored in the data structure using their hashCode."
19789791,1,0,0,java.util.HashMap,Difference between capacity growth of ArrayList and HashMap.
19789791,1,0,0,java.util.HashMap,"In HashMap, it says it rehashes the content to a new array: code."
19789791,1,0,0,java.util.HashMap,"In HashMap, it transfers all the elements in to the new array using while loop."
19789828,2,1,6,java.util.HashMap,The HashMap needs to transfer the entities by first recalculating all their hashes to decide which buckets to put them in.
19789828,2,1,6,java.util.HashMap,That's why you can't simply use Arrays.copyOf or System.arraycopy with a HashMap.
19789828,2,1,6,java.util.HashMap,Note that each Entry in a HashMap caches the value of its hash for precisely this operation.
19792421,1,0,2,java.util.HashMap,The problem is that HashMap contains Classes and not objects.
19796590,1,0,2,java.util.HashMap,"then I'm trying to loop over this HashMap getting the value and cast it to my FeatureDetails model, code."
19796792,2,0,2,java.util.HashMap,The reason you're seeing this is because you're telling GSON to deserialize the JSON structure using the structure of a HashMap in the line code.
19802423,2,0,1,java.util.HashMap,"Instead of Hashmap<String, ArrayList<String>>, use ArrayList<HashMap<String, String>> so that you have  code."
19802423,2,0,1,java.util.HashMap,"If the HashMap of Lists is not something that you've written, and you still need help to figure out how to iterate that, please show us what you have tried."
19805077,1,0,3,java.util.HashMap,java - Using string tuples as key for HashMap.
19808617,2,0,0,java.util.HashMap,"Python dictionary is analogy to Java HashMap, simply said."
19812397,2,0,4,java.util.HashMap,"From the JavaDocs:  This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
19812421,2,0,0,java.util.HashMap,"You may want to use an ArrayList<String> for both Pw and Id  or   HashMap<String,String>which will map each id to its password."
19812448,2,0,0,java.util.HashMap,"you can use your HashMap<String,String> for this."
19822940,1,0,0,java.util.HashMap,Filling HashMap by refrence.
19822940,1,0,0,java.util.HashMap,"I have a HashMap which I pass it to a function to fill it by reference like this, code."
19822940,1,0,0,java.util.HashMap,and in the loadCache method I fill this HashMap and as i think it should be filled by reference code.
19822940,1,0,0,java.util.HashMap,"The HashMap is filled in the loadCache method, but going back to caller method to check it, I found that its size is 0"
19823013,2,0,0,java.util.HashMap,Hence the memorySubscriberValues in loadCache is a local reference and you're simply re-assigning it to point to the HashMap instance returned by mainDao.getData.
19823013,2,0,0,java.util.HashMap,This doesn't affect the reference of memorySubscriberValues in the parent method which points to the new HashMap instance.
19823013,2,0,0,java.util.HashMap,"On another note, it is better to type your collections by interface instead of the concrete type (i.e., Map vs HashMap or List vs ArrayList)."
19823042,2,0,0,java.util.HashMap,So the original HashMap is left untouched.
19823074,2,0,0,java.util.HashMap,You're simply re-assigning the memorySubscriberValues variable to reference a different HashMap.
19823074,2,0,0,java.util.HashMap,What you want to do is add all the entries from your mainDao into the HashMap that you passed in as an argument: code.
19823074,2,0,0,java.util.HashMap,"By calling put on the same reference that was passed in to the method, all of the changes will be reflected in the original HashMap."
19826301,2,0,0,java.util.HashMap,Its better to use HashMap or any Map construct which will clear the hastle of setting up a search algorithm.
19826301,2,0,0,java.util.HashMap,then return some data that is associated with this email address   you can even store this data you want to return as the value store in the HashMap for the key.
19826998,1,0,1,java.util.HashMap,"I was able to use Scanner and add the dates to an ArrayList ""DATE"" and I added the rest of the numbers to another ArrayList ""NUM"" (See Code) I am Trying to build an ArrayList> ""MAIN"" or even a HashMap that will hold each line as an Index as follow: MAIN[[47,34,23,31,03,13],[33,09,56,54,57,05],[03,42,26,34,28,27],[10,58,26,57,08,04]] I was unable to get the desired result using my code below and I need help restructuring the code to get the desired result Thank you."
19843092,2,0,1,java.util.HashMap,"I use a Guava Multimap, and I strongly recommend you do too, but you can substitute in a HashMap<String, ArrayList<String>> with just a little extra boilerplate."
19843107,1,0,4,java.util.HashMap,"like: ArrayList corresponds to dynamic array, HashMap corresponds to Map ?"
19843183,2,0,1,java.util.HashMap,"Your analogy does not fit in the java collections framework since you can say that an ArrayList is a dynamic array but Map (or HashMap for that matter) does not have a ""primitive"" counterpart."
19853148,1,0,1,java.util.HashMap,"Why hash table(java.util.HashMap) is sorted for long, int, byte and short ?"
19853387,2,0,2,java.util.HashMap,"HashMap is not sorted, your results are simply accidental."
19853242,2,1,5,java.util.HashMap,HashMap is not a sorted collection and you should not use it as such.
19854601,2,0,0,java.util.HashMap,"I think you'll want a HashMap<Integer, HashSet<String> >."
19856405,1,0,1,java.util.HashMap,"The map used will not be a HashMap, but a TreeMap, the reason is beyond the purpose of this question."
19856405,1,0,1,java.util.HashMap,"If i used a HashMap, i believe it would be faster to implement a Map<Object, String> due to the O(1) access time of the Object.However, I cannot tell if I use a TreeMap which method would offer the better performance."
19856530,2,1,0,java.util.HashMap,So HashMap is faster for the index access.
19856530,2,1,0,java.util.HashMap,"But with the HashMap you cant store your data in ordered way, so search operations will be O(n)."
19857381,1,0,0,java.util.HashMap,Get HashMap data from another Activity.
19857583,2,0,0,java.util.HashMap,"If you want to save the HashMap and use it even after the application is restarted, then use SharedPreferences."
19857583,2,0,0,java.util.HashMap,It will save the HashMap in the device.
19857583,2,0,0,java.util.HashMap,"If you just need to pass the HashMap as parameter to another Activity, use Intent."
19858272,1,0,0,java.util.HashMap,Now this is the AllTopicActivity in which i have a problem  package com.loadedgeek.official;   import java.util.ArrayList; import   java.util.HashMap; import java.util.List;   import   org.apache.http.NameValuePair; import org.json.JSONArray; import   org.json.JSONException; import org.json.JSONObject;   import   android.app.ListActivity; import android.app.ProgressDialog; import   android.content.Intent; import android.os.AsyncTask; import   android.os.Bundle; import android.util.Log; import android.view.View;   import android.widget.AdapterView; import   android.widget.AdapterView.OnItemClickListener; import   android.widget.ListAdapter; import android.widget.ListView; import   android.widget.SimpleAdapter; import android.widget.TextView;   public   class AllTopicsActivity extends ListActivity { code.
19858368,1,0,2,java.util.HashMap,"I will do some performance tests on the suggestions (TreeMultiMap, ConcurrentSkipListMap, TreeSet + HashMap) and update with the results."
19858368,1,0,2,java.util.HashMap,"TreeSet + HashMap, works fine but doesn't give the best performance."
19858459,2,0,2,java.util.HashMap,I would also use a HashMap as its look up is O(1) instead of O(log N).
19858459,2,0,2,java.util.HashMap,I agree that putIfAbsent on ConcurrentHashMap is overkill and get/put on a HashMap is likely to be the fastest option.
19859088,2,0,6,java.util.HashMap,"Alternatively, if you don't have to maintain the keys in any particular order, use a HashMap instead."
19859127,2,0,2,java.util.HashMap,"ArrayLists don't implement Comparable, so you need to use an unsorted map, like HashMap, or tell the TreeMap how to sort your ArrayLists by using this constructor."
19860109,2,0,0,java.util.HashMap,"Since you got a '###' delimiter to split the string out, then what you want to do is to just construct a HashMap and map them in iteratively?"
19862408,1,0,4,java.util.HashMap,Clear values of type List in a HashMap.
19862408,1,0,4,java.util.HashMap,I am using HashMap to store the key/value pairs.
19864868,1,0,2,java.util.HashMap,"I am using guice for dependency injection and wrote a provider that returns  HashMap<String, HashMap<String, String>>."
19864868,1,0,2,java.util.HashMap,How do I bind HashMap.class with this provider?
19864868,1,0,2,java.util.HashMap,"I looked at this but not able to figure out how to use TypeLiteral for the HashMap value (V) in HashMap<K,V>."
19864868,1,0,2,java.util.HashMap,"I have to get the object and cast it to HashMap<String, String>to get further values."
19865051,2,0,0,java.util.HashMap,"(The name 'Map' in the java implementation is to indicate that it implements the Map interface, should not imply it is a cousin of HashMap or ConcurrentHashMap as an actual data structure.)"
19866064,1,0,2,java.util.HashMap,"This rules out a HashMap unless I want to wrap a massive bunch of them, which is hardly ideal."
19866064,1,0,2,java.util.HashMap,"It may not have to store the objects directly, but could assemble them upon retrieval, or retrieve a ""row"" based on one field, get another field from the same ""row"" that serves as a sort of key, and then retrieve the object from a single HashMap based on that key."
19867209,2,0,1,java.util.HashMap,A HashMap is an Object that maps a Key to a specific value.
19867506,2,1,1,java.util.HashMap,"Read the blurb on HashMap to see why, which specifies that HashMap guarantees no ordering of the entries."
19867506,2,1,1,java.util.HashMap,It would be possible to use HashMap for this but I don't recommend it because you might have to make extra steps somewhere.
19866972,1,0,3,java.util.HashMap,"What I want is if the value is null, I want the map to be an empty HashMap instead of null."
19867050,2,0,4,java.util.HashMap,"So within your setter, you can check if the value is null, and if it is then you create a new HashMap."
19868655,2,1,2,java.util.HashMap,Just do the standard HashMap remove and then reassign two pointers.
19870071,2,0,2,java.util.HashMap,Either use ConcurrentHashMap or make the public method synchronized (which makes more sense since you've got a race condition also on creating the HashMap).
19870285,2,1,0,java.util.HashMap,"Or if it is important to have a particular identity associated with each of your 2D array objects, then associate the identity as the object's key in a HashMap."
19870361,2,0,0,java.util.HashMap,You can use a HashMap to store a key refering one array.
19870251,1,0,0,java.util.HashMap,Struts2: How do I do a comparison using a HashMap's key inside an iterator.
19870251,1,0,0,java.util.HashMap,"Because of this I have to manually set the checked input, but I'm not sure how I can compare the current position of the HashMap's key with the expected value."
19872768,2,0,3,java.util.HashMap,HashMap should serve your need.
19872768,2,0,3,java.util.HashMap,HashMap allows you to store key value pairs as a collection.
19872768,2,0,3,java.util.HashMap,HashMap does not allow duplicate keys.
19872768,2,0,3,java.util.HashMap,You can use different collection to be stored as a value in your HashMap.
19876579,2,1,5,java.util.HashMap,"If you use a hash map, the runtime complexity of your algorithm should be O(n): You visit each of the n elements once, and HashMap lookup and write is usually assumed to be O(1)."
19876745,2,1,1,java.util.HashMap,I've cleaned up the code some but more importantly I've added the HashMap totals and the usages of it.
19882717,1,0,1,java.util.HashMap,Sorting based on size of ArrayList in a HashMap.
19882717,1,0,1,java.util.HashMap,I have a HashMap defined as follows code.
19882788,1,0,0,java.util.HashMap,I've got a client-server setup using sockets: when the server starts up it creates a GameObject and adds it to a HashMap.
19886017,1,0,2,java.util.HashMap,How many elements can I store in a HashMap object in Java.
19886095,2,1,6,java.util.HashMap,"A HashMap in Java can have a maximum of 2^30 buckets for storing entries - this is because the bucket-assignment technique used by java.util.HashMap requires the number of buckets to be a power of 2, and since ints are signed in Java, the maximum positive value is 2^31 - 1, so the maximum power of 2 is 2^30."
19886095,2,1,6,java.util.HashMap,"However, there is in fact no programmatic limit on how many key/value pairs you can store in a HashMap - the size() function will just stop being accurate once you pass 2^31 - 1."
19886095,2,1,6,java.util.HashMap,"The largest HashMap I've ever worked with that sat in a single JVM had a few tens of millions of entries, all very lightweight"
19889625,2,1,4,java.util.HashMap,"You can use hash map instead eq HashMap<Your_Class, Your_Class> which has get method"
19893061,2,0,0,java.util.HashMap,"and here are some useful links on this: Memory Leak and Out of memory Error Memory Leak and Out of memory Error using List,LinkedList and HashMap Memory Leak and Out of memory Error using LRU Cache Memory Leak and Out of memory Error using Disk LRU Cache"
19896467,1,0,0,java.util.HashMap,Putting words from an array into a HashMap and a HashSet.
19899586,2,1,1,java.util.HashMap,"As you iterate through the loop, you'll need to look in the HashMap, using the get method, to see if a particular word has already been recorded there."
19898208,2,0,1,java.util.HashMap,"say you gave no more than 4 KB of continuous memory, and you are using CMS which doesn't defragment the memory and you grow a collection like ArrayList or StringBuidler or HashMap, it cannot allocate the object and thus throws an OutOfMemoryError."
21262066,2,0,1,java.util.HashMap,One alternative you mention is to have a have HashMap at each node that maps each character to a child node.
19900293,2,0,0,java.util.HashMap,"NOTE: If using Java7, use switch-case over header, if num headers are more you can use HashMap too for header-index mapping."
19902590,2,0,0,java.util.HashMap,HashMap is one possible implementation: code.
19905747,2,0,0,java.util.HashMap,"Another way would be to use a dictionary, e.g., a Java HashMap."
19905747,2,0,0,java.util.HashMap,"Using a HashMap, lookup times for items are O(1), as opposed to O(n) in your approach, which could be relevant if your dictionary contains thousands or millions of phrases, or if you have to do this very often."
19905389,1,0,2,java.util.HashMap,For random access I use a HashMap in parallel.
19905934,2,1,1,java.util.HashMap,"In order to get faster search, you could use hashing, e.g., via a HashMap pointing to first element and linking the elements."
19906124,2,0,0,java.util.HashMap,HashMap replaces values if same key is provided.
19906124,2,0,0,java.util.HashMap,From Java doc of HashMap#put Associates the specified value with the specified key in this map.
19911261,2,0,0,java.util.HashMap,"Please remove the lines of code, groceries = new ArrayList<Sellable>(); stock = new HashMap<String, Integer>(); from your mehod sortByName()."
19911358,2,0,0,java.util.HashMap,Then it is apparently attempting to copy from the (now) empty HashMap to the ArrayList.
19911358,2,0,0,java.util.HashMap,"But it is nonsensical because  you are attempting to use a non-existent method (HashMap.addAll),  you are casting a HashMap to an Entry, and so on."
19911830,1,0,0,java.util.HashMap,"In fact, I do not really understand the Map, HashMap concepts in Java yet."
19911841,2,1,2,java.util.HashMap,"Depending on how you want the collection to behave you'll have to differentiate between the different types of map, but generally a HashMap is what you want."
19912279,1,0,0,java.util.HashMap,"I am implementing a two-level cache to improve the load image experience:  My first level memory cache is defined like this: private Map<String, SoftReference<Bitmap>> l1ImageCache = new HashMap<String, SoftReference<Bitmap>>();  that I could keep some SoftReference of the image in memory to make the app lookup faster."
19912279,1,0,0,java.util.HashMap,"The I created this data structure: // keep all pending downloads private HashMap<String, ImageDownloadWorker> downloadTaskMap =          new HashMap<String, ImageDownloadWorker>(); In which the String field will be the URL to download."
19913028,2,1,0,java.util.HashMap,You are using the same HashMap instance for all Itens.
19913028,2,1,0,java.util.HashMap,Just move the HashMap creation to inside the loop: code.
19914758,2,0,0,java.util.HashMap,"As far as I understand HashMap implementation, if you are writing to it with a single thread, it would not crash, but might not find your item."
19914758,2,0,0,java.util.HashMap,"Why it won't crash  Resize operation in HashMap is sort of atomic - it first allocates your table and re-indexes items into it and then replaces an existing table with a new one Table size grows, but does not shrink, so even with broken indexing function you are still within bounds."
21434968,2,1,0,java.util.HashMap,"The answer is one word it will got crashed and will throw Exception might be UnsupportedOperationException.the reason behind this is .. As HashMap is not thread safe so when another thread will try to read the data, it will not allow and stuff will occurs which completely depend upon implementation."
19914871,2,0,2,java.util.HashMap,HashMap is Serializable so you could just use  ObjectOutputStream : http://docs.oracle.com/javase/7/docs/api/java/io/ObjectOutputStream.html
19915059,1,0,0,java.util.HashMap,I'm trying to write a Scala function that would accept either Scala maps (from Scala code) or Java maps (from Java code) - java.util.HashMap for a start.
19918470,1,0,0,java.util.HashMap,Creating a HashMap as an index for title keywords to improve search efficiency.
19918470,1,0,0,java.util.HashMap,I want to change this search mechanization slightly by incorporating a HashMap.
19918470,1,0,0,java.util.HashMap,"My current HashMap declartion looks like this: public HashMap<String, ArrayList<Integer>> map = new HashMap<>(); however even when the Key is different, the values stored in the ArrayList are the same because there is only one of them."
19918470,1,0,0,java.util.HashMap,My Disks ArrayList is: public ArrayList<Disks> items; Would there be a way to incorporate this ArrayList into the Value of the HashMap?
19921061,1,0,0,java.util.HashMap,Java: how to save SET as value in HashMap?
19922030,1,0,1,java.util.HashMap,Use a HashMap and a LinkedHashSet.
19922030,1,0,1,java.util.HashMap,"HashMap is for processing-- to fast-access and update the values,  and LinkedHashSet for maintaining the sequence of keys and ensuring the uniqueness of the keys as i go along."
19922030,1,0,1,java.util.HashMap,"In the end, read the final values from the HashMap and create another LinkedHashSet, this time for key-value pairs and not just keys, and deliver it."
19922181,1,0,2,java.util.HashMap,Java: convert HashMap values to Set.
19922181,1,0,2,java.util.HashMap,One more question about HashMap<> in Java: I have the following code.
19922181,1,0,2,java.util.HashMap,So my question is essentially:   how to convert HashMap values or entrySet() to Set ?
19924224,1,0,0,java.util.HashMap,How to get single value of an array if array is used as value corresponding to a key in HashMap?
19924224,1,0,0,java.util.HashMap,In the following code I'm using a String array as a HashMap value corresponding to a single key.
19924224,1,0,0,java.util.HashMap,The get() method of HashMap is returning the whole array.
19924286,2,0,0,java.util.HashMap,"Since the value of HashMap is a String array, just give the index of your desired value."
19927084,2,0,0,java.util.HashMap,"It can be achieved easier with HashMap, where Key is an int[] (x and y) and value is the another int[] (r, g, b)."
19927198,2,0,1,java.util.HashMap,Instead use HashMap where key is the word and value is the number of occurencies.
19927198,2,0,1,java.util.HashMap,It's easier and faster to see if HashMap contains a key than to see if array contains an element.
19929470,1,0,0,java.util.HashMap,"I am using a HashMap<Integer, ArrayList>."
19929927,2,0,0,java.util.HashMap,"But as already suggested this way of writing code is not good practice and instead of using ArrayList preson, better approach is to design Person class and store its object in HashMap as value."
19930008,1,0,0,java.util.HashMap,2-D array as a value in HashMap.
19930008,1,0,0,java.util.HashMap,I'm trying to have a 2-D array as a value corresponding to single key in HashMap.
19930008,1,0,0,java.util.HashMap,And I'm inserting it into HashMap hm.
19930008,1,0,0,java.util.HashMap,"(Say) if I give key 'SUM' to get() method of HashMap, and I want to access the value of element sumArray[0][2] , So How should I proceed to do so?"
19934020,1,0,1,java.util.HashMap,I want to Pass the values from the second JSONObject and add them to a HashMap and subsequentlty to an Arraylist so I can be able to pass them to another Fragment.. Is this the best way to do it?
19934108,2,0,0,java.util.HashMap,"Inside the Bundle you can put a Serializable obect (your Collection of HashMap, for instance)"
19935048,2,1,1,java.util.HashMap,"I'm not sure what the relation to store and gift are, but it would seem that a HashMap may be a better collection."
19935048,2,1,1,java.util.HashMap,"A HashMap is a collection of Key,Value pairs."
19938242,1,0,0,java.util.HashMap,Am looking for an efficient way to initialize a HashMap given that it's keys remain the same for any object created of the class it belongs to.
19938242,1,0,0,java.util.HashMap,My current implementation initializes the HashMap everytime a new class object is created.
19943434,1,0,0,java.util.HashMap,ClassCastException when doing serialization using Jackson ObjectMapper - java.lang.object as value in underlying HashMap used in LinkedHashset.
19943434,1,0,0,java.util.HashMap,"So, the final LinkedHashSet that Jackson gets contains a HashMap, which in turn is a key-value pair of MyClass-Object, and this Object is giving me a nightmare."
19944102,1,0,0,java.util.HashMap,Creating and printing HashMap.
19944102,1,0,0,java.util.HashMap,printArray(HashMap printHashMap) is ment to Iterate through the HashMap created in getWordCounts() and print out the data.
19944481,2,0,0,java.util.HashMap,So you can define a HashMap of keys of type String and values of type Integer like this: code.
19944427,2,0,0,java.util.HashMap,"If you declare your HashMap without bounded key/value types, you're going to get a raw Object when you query it."
19949731,1,0,6,java.util.HashMap,"I could use Collections.synchronizedMap(new HashMap<A, B>()), but I would have the same issue as the first point."
19950771,1,0,6,java.util.HashMap,I have 2 different instances of HashMap I want to merge the keysets of both HashMaps; Code: code.
19950827,2,1,13,java.util.HashMap,"If you look at the docs of the HashMap#keySet() method, you'll get your answer(emphasis mine)."
19952988,2,0,1,java.util.HashMap,"Insert a HashMap from the java file to DRL file (using Drools session concept),  which should contain the rule name as key and boolean value as result."
19954803,1,0,1,java.util.HashMap,"To be concrete : I'm doing a request on many columns, returning many rows, so I'm stocking this result in a List<HashMap<String, Object>> (each ""String key"" is the name of a column with the associated ""Object value"")."
19954803,1,0,1,java.util.HashMap,"I'm forced to do a List<HashMap<String, Object>> so.)"
19954803,1,0,1,java.util.HashMap,"PS2 : I don't think we need code, it's just a general question, because the question can be asked for everyone trying to display a List<HashMap<?, ?>> or a nested Object with Primefaces, and wanting to add filters/sorts on this list."
20025263,2,1,1,java.util.HashMap,"The javadoc states  Like Hashtable but unlike HashMap, this class does not allow null to   be used as a key or value."
19964416,1,0,0,java.util.HashMap,Any chances for HashMap or LinkedHashMap too?
19965056,1,0,18,java.util.HashMap,"where timeZoneCodeMap is a HashMap<Integer, String> that is initialized with entries like the following code."
19976587,1,0,8,java.util.HashMap,Why doesn't this work since CustomHashMap is child of HashMap?
19976798,2,0,7,java.util.HashMap,"because customs is of type Map<String, HashMap<String, Object>> and you are assigning a LinkedHashMap which is of type <String, CustomHashMap>, where CustomHashMap is a sub class of HashMap<String, Object>."
19976798,2,0,7,java.util.HashMap,"Generics are invariant: for any two distinct types T1 and T2, HashMap<String, T1> is neither a subtype nor a supertype of HashMap<String, T2>."
19976798,2,0,7,java.util.HashMap,"So, LinkedHashMap<String, CustomHashMap> cannot be assigned to Map<String, HashMap<String, Object>>."
19976798,2,0,7,java.util.HashMap,"But, it might fail at run time (which might cause more harm) if you put any other subtype of HashMap<String, Object> into it other than CustomHashMap : code."
19976798,2,0,7,java.util.HashMap,"Now, if you want to assign LinkedHashMap<String, CustomHashMap> to Map<String, HashMap<String, Object>> , change the statement to this: code."
19976880,2,1,4,java.util.HashMap,"The consequence: A LinkedHashMap<String, CustomHashMap> is not a sub-type of Map<String, HashMap<String, Object>>."
19976880,2,1,4,java.util.HashMap,"The reason is, that you could have another class extending Map<String, HashMap> and try to put an instance of that into your customs map."
19977185,1,0,0,java.util.HashMap,Unable to populate a HashMap that has a TreeSet as a parameter.
19977900,2,0,0,java.util.HashMap,"Weird, I ran your code and it sort of worked, with the following exceptions:  There seems to be a mixup between 'individualList' and 'individualSet' The declaration of 'cityIndividualMap' is inconsistent (Treeset versus hashmap), I assumed it's a HashMap based on your usage of it class ""City"" should have hashCode + equals, otherwise you can get find several keys with the same City"
19982713,2,0,2,java.util.HashMap,When you add this to a HashMap you need about 100 bytes for each record.
19983986,2,0,0,java.util.HashMap,"I'll do it a few different ways, not sure how new you are, but you probably want to use the one you feel most comfortable with Firstly, you can use a HashMap in the same class code."
19985588,2,0,1,java.util.HashMap,"A HashMap, which implements the Map interface, depends on a good implementation of hashcode() to evenly distribute among differing objects for optimal performance."
19985588,2,0,1,java.util.HashMap,So if you ever intend on using a custom object that you make as a key for a HashMap you should provide an implementation of hashcode() which most IDE's will assist you with.
19986416,1,0,0,java.util.HashMap,HashMap.java hash method design.
19986416,1,0,0,java.util.HashMap,In HashMap.java method hash code.
19987530,1,0,2,java.util.HashMap,"HashMap.get() works properly with inherited hashCode() method, doesn't recognize key with user-defined hashCode() method."
19987530,1,0,2,java.util.HashMap,"It's just a public wrapper around a HashMap (named teamOfPlayer, with keys of Player objects and values of Integer objects), nothing more."
19988844,2,0,0,java.util.HashMap,"You are using the raw (i.e. non-generic) forms of several classes that have generic type parameters, including  Map HashMap Vector Iterator Set Map.Entry  Use the generic forms of these classes by supplying appropriate type parameters."
19992627,2,0,2,java.util.HashMap,"If you use a HashMap, this algorithm produces an answer in O(n)."
19994680,2,0,0,java.util.HashMap,But you also don't need a HashMap.
19994172,2,0,0,java.util.HashMap,"Edit That's not possible in Java, you could create a HashMap, so you can store the name of the object with its instance."
19994316,2,0,0,java.util.HashMap,"No You cant do that, Instead you can use a HashMap where the key is the generated name (class1, class2 etc ) and Value is the Newly created object."
19996271,2,1,2,java.util.HashMap,"See, for example, HashMap: code."
20004568,2,0,0,java.util.HashMap,The now deprecated Hashtable needs to be replaced with the more modern HashMap.
20010333,1,0,1,java.util.HashMap,Why is the variable declared as Map and initialized as HashMap; aren't they different types?
20010333,1,0,1,java.util.HashMap,Let's say I want to make a HashMap of grades.
20010333,1,0,1,java.util.HashMap,"Why is Map on the left and HashMap<K, V>( ); on the right?"
20010333,1,0,1,java.util.HashMap,"Unless the static type of names is Map and the dynamic type is HashMap, which presumably is a subclass of Map."
20010333,1,0,1,java.util.HashMap,if I wanted to change HashMap to TreeMap?
20010376,2,0,1,java.util.HashMap,"Basically, a HashMap is specific type of Map, and this relationship makes the assignment possible."
20010404,2,0,1,java.util.HashMap,"In this snippet of code Map is an interface, and HashMap is a concrete class that implements that interface."
20010415,2,0,0,java.util.HashMap,"Let's say in the future you decide that you want to use a different type of Map, namely not a HashMap, then by keeping a Map, all you would need to do is change HashMap to a different Map implementation."
20010424,2,1,3,java.util.HashMap,"HashMap<String,Integer> is a class that implements Map<String,Integer>, so the assignment is valid."
20010424,2,1,3,java.util.HashMap,"If you decide to change the type later, and use TreeMap<String,Integer> instead of HashMap<String,Integer>, all you need to do is change the type in the new expression."
20018350,1,0,0,java.util.HashMap,Extend HashMap putChildren method.
20018350,1,0,0,java.util.HashMap,My question is : The task is extending the HashMap to include HashMaps as an object.
20021209,1,0,6,java.util.HashMap,"In an interview recently, I was asked about how HashMap works in Java and I was able to explain it well and explain that in the worst case the HashMap may degenerate into a list due to chaining."
20021209,1,0,6,java.util.HashMap,I have read the description provided on that page but still can't figure out how it overcomes the limitations of the java.util.HashMap.
20021687,2,1,1,java.util.HashMap,"However, if second one is your target then i think it is better you declare resources as an HashMap<String, ArrayList<String>>."
20028139,1,0,2,java.util.HashMap,Trying to fill and return a List inside a HashMap of objects.
20028139,1,0,2,java.util.HashMap,HashMap Filling: code.
20029223,2,0,0,java.util.HashMap,"(obj instanceof CustomerID))       return false;     if (obj == this)       return true;     return  this.crmID == ((CustomerID) obj).crmID &&             this.nameSpace == ((CustomerID) obj).nameSpace;   } public static void main(String[] args) {     Map m = new HashMap();     m.put(new CustomerID(2345891234L,0),""Jeff Smith"");     System.out.println(m.get(new CustomerID(2345891234L,0)));   } } Compile and run the above code, the output result is null What is wrong?"
20029223,2,0,0,java.util.HashMap,"(obj instanceof CustomerID))       return false;     if (obj == this)       return true;     return  this.crmID == ((CustomerID) obj).crmID &&             this.nameSpace == ((CustomerID) obj).nameSpace;   } public int hashCode() {     int result = 0;     result = (int)(crmID/12) + nameSpace;     return result;   } public static void main(String[] args) {     Map m = new HashMap();     m.put(new CustomerID(2345891234L,0),""Jeff Smith"");     System.out.println(m.get(new CustomerID(2345891234L,0)));   } } Compile and run the above code, the output result is Jeff Smith The hashcode distribution for instances of a class should be random."
20033616,1,0,0,java.util.HashMap,"However, upon review of the class I realised all of these methods are simply passing params to the HashMap class, meaning the ClientList class brings nothing new to the program."
20033616,1,0,0,java.util.HashMap,"Now because of that, I know I could just create a static HashMap<String, Client> somewhere and use that without having to create a whole new class for it; my issue is I don't have any suitable classes to store the list in, for example for my ClientListener class to access the list I do not want to have to statically access a class with an irrelevant name, such as     ClientWriter.clientList."
20036150,2,0,0,java.util.HashMap,Store them in a HashMap with Class type key and a Method as a value.
20038519,2,1,1,java.util.HashMap,"Yes, but if you're using the stock implementations of Map (TreeMap, HashMap, etc.)"
20038519,2,1,1,java.util.HashMap,"This large array could then be used to create a HashMap-like system, where the input number is hashed to a particular index and then an offset is probed for contents and if the contents exist, retrieved."
20038579,1,0,0,java.util.HashMap,Update HashMap values of type HashSet.
20038579,1,0,0,java.util.HashMap,I have trouble updating the HashMap values of Set type.
20038579,1,0,0,java.util.HashMap,"After initializing the HashMap with key-values pair, I want to insert a new value to the the existing value Set, and the new value is to be incremented for each insert."
20038579,1,0,0,java.util.HashMap,"When executing the code, each HashMap key is associated with the same set of Integers: [102, 0, 1, 2, 100, 3, 101, 4, 5, 6, 7, 8, 9], however, what I really want is insert only one number to each set, this is what I want: [0, 1, 2, 100, 3, 4, 5, 6, 7, 8, 9] I need help understanding this: why all the new inserted values are the same?"
20038849,2,0,6,java.util.HashMap,"If you don't want to create a custom class you can go with the HashMap<Integer, String> route."
20038862,2,0,4,java.util.HashMap,"If you want to associate an object with a String, then use a Map such as a HashMap<String, String>."
20040562,1,0,2,java.util.HashMap,"I'm trying to generate pdf via button but my problem is this method JasperRunManager.runReportToPdfStream(reportStream,servletOutputStream, new HashMap<Object, Object>(), resultSetDataSource); it is not supporting Hashmap it gives following error code."
20043674,2,1,0,java.util.HashMap,"teams.get(1) will get a HashMap, in the example, its key is 2 and its value is an Integer Array (Integer[]) with elements [1,0] teams.get(1).get(2) returns values, whose type is Integer[]."
20043980,2,0,0,java.util.HashMap,"You can use a HashMap for this, assigning enum values as keys code."
20043887,2,0,0,java.util.HashMap,If you need some direction here is a link with all you need to know about HashMap.
20043887,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
20044066,1,0,1,java.util.HashMap,"to frame the array list with HashMap,Kindly Help me,Thnaks in advance."
20049678,1,0,0,java.util.HashMap,I could only think of first creating a new HashMap from the ArrayList elements  and then convert that it to JSON.
20050069,1,0,1,java.util.HashMap,"As described above, the content of relational table TABLE_1 is mapped to class java.util.HashMap where:  each column name is mapped to an attribute that stored as key in the map and the value of the column is stored as value in the map associated to the column key  In another word (shorter version):  table column names => map keys table column values => map values  Well in Java, it would be something like: code."
20050141,2,0,0,java.util.HashMap,"Also with a HashMap you cannot do it, as it does not have an ID column (beside other problems)."
20050322,1,0,1,java.util.HashMap,Pass HashMap as parameter in FitNesse.
20050322,1,0,1,java.util.HashMap,I am trying to pass a HashMap parameter to the function I am using in Fitnesse.
20050509,1,0,0,java.util.HashMap,I have a HashMap that links specific RequestTypes to separate LinkedLists.
20054831,2,0,6,java.util.HashMap,"Then use a HashMap<String, Integer> and store the frequency of a particular string as the value."
20054857,2,0,2,java.util.HashMap,"If you must account for duplicates, replace HashSet<String> with HashMap<String,Integer> to make and compare the corresponding frequency counters."
20058770,2,0,0,java.util.HashMap,I'd think something like a HashMap that maps the undesirable characters to what you want them to be interpreted as might be the way to go if you are worried about performance; code.
20058770,2,0,0,java.util.HashMap,"However, if you are worried about performance, this is an exceedingly fast way of doing it, since the lookup time for a HashMap is pretty close to being O(1)."
20064160,2,0,4,java.util.HashMap,"Java is always pass-by-value only, just that in this case, the reference of the HashMap is passed by value."
20064160,2,0,4,java.util.HashMap,"That's why when you add a key-value pair using valueMap, it is reflected back in inputMap, as both are referring to the same HashMap object."
20065046,2,0,2,java.util.HashMap,You can also browse versions of it online (for example: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/util/HashMap.java?av=f) Have fun.
20066185,2,1,1,java.util.HashMap,The equivalence table can be implemented using a HashMap.
20068383,1,0,0,java.util.HashMap,Convert CSV values to a HashMap key value pairs in JAVA.
20068460,2,0,1,java.util.HashMap,"Another problem is that the HashMap use the hashCode of the keys to store the (key, value) pairs."
20068668,2,0,1,java.util.HashMap,A second solution is to keep a HashMap instead of a LinkedHashMap and an extra List to maintain the insertion order.
20070052,1,0,0,java.util.HashMap,"Then I follow the same methods to extract hi bob I have an iterator that iterates through a HashMap of online users, and if that online user matches bob I send him a message."
20070052,1,0,0,java.util.HashMap,"The 2nd problem is, how would I store the 3 users in such a way that allow me to iterate through the HashMap and send it to only those 3 users and not the rest?"
20073011,1,0,1,java.util.HashMap,and the getAccordingData method just gets the ElementsByTagName into a NodeList and then with a for-loop adds it to a HashMap that gets returned.
20074060,2,0,1,java.util.HashMap,If you are looking for a Memory Cache use a LruCache instead of HashMap.
20073879,1,0,3,java.util.HashMap,Is it better to use Objects or integers as HashMap keys?
20073879,1,0,3,java.util.HashMap,How does hashing of objects work in java's HashMap?
20075973,1,0,0,java.util.HashMap,"To allow for easy cancelling of alarms I have linked the intents that set the alarm to a ""name"" and I have stored these in a HashMap as follows: code."
20084283,2,1,1,java.util.HashMap,"You could use a HashMap to store all items, mapping Item to quantity."
20084283,2,1,1,java.util.HashMap,"You would of course have to implement the equals method in your Item class (for example, items are equal when their names are equal) to let the HashMap know when two Items are equal (because when it performs the contains check, it tests for equality using the object's equals method)."
20084416,1,0,0,java.util.HashMap,"Before, I was trying to dynamically name my objects as they are created, but apparently Java doesn't support that feature, so I resorted to instantiating the object and storing them in a HashMap along with a string Key value."
20085340,1,0,0,java.util.HashMap,(Index.java:43)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:55)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index.add(Index.java:173)     com.clarkparsia.pellet.rules.rete.BetaNode.join(BetaNode.java:131)     com.clarkparsia.pellet.rules.rete.Interpreter.processBetaNodes(Interpreter.java:109)     com.clarkparsia.pellet.rules.rete.Interpreter.run(Interpreter.java:236)     com.clarkparsia.pellet.rules.ContinuousRulesStrategy.applyRete(ContinuousRulesStrategy.java:179)     com.clarkparsia.pellet.rules.ContinuousRulesStrategy.complete(ContinuousRulesStrategy.java:291)     org.mindswap.pellet.ABox.isConsistent(ABox.java:1423)     org.mindswap.pellet.ABox.isConsistent(ABox.java:1260)     org.mindswap.pellet.KnowledgeBase.consistency(KnowledgeBase.java:1987)     org.mindswap.pellet.KnowledgeBase.isConsistent(KnowledgeBase.java:2061)     org.mindswap.pellet.KnowledgeBase.ensureConsistency(KnowledgeBase.java:2075)     org.mindswap.pellet.KnowledgeBase.classify(KnowledgeBase.java:2083)     com.clarkparsia.pellet.owlapiv3.PelletReasoner.precomputeInferences(PelletReasoner.java:1067)     org.protege.editor.owl.model.inference.OWLReasonerManagerImpl$ClassificationRunner.precompute(OWLReasonerManagerImpl.java:417)     org.protege.editor.owl.model.inference.OWLReasonerManagerImpl$ClassificationRunner.run(OWLReasonerManagerImpl.java:356)     java.lang.Thread.run(Thread.java:722) 2  Error 2 Logged at Sun Nov 17 21:50:37 COT 2013 OutOfMemoryError: Java heap space     java.util.HashMap.createEntry(HashMap.java:869)     java.util.HashMap.addEntry(HashMap.java:856)     java.util.HashMap.put(HashMap.java:484)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:56)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index$IndexNode.add(Index.java:58)     com.clarkparsia.pellet.rules.rete.Index.add(Index.java:173)     com.clarkparsia.pellet.rules.rete.BetaNode.join(BetaNode.java:131)     com.clarkparsia.pellet.rules.rete.Interpreter.processBetaNodes(Interpreter.java:109)     com.clarkparsia.pellet.rules.rete.Interpreter.run(Interpreter.java:236)     com.clarkparsia.pellet.rules.ContinuousRulesStrategy.applyRete(ContinuousRulesStrategy.java:179)     com.clarkparsia.pellet.rules.ContinuousRulesStrategy.complete(ContinuousRulesStrategy.java:291)     org.mindswap.pellet.ABox.isConsistent(ABox.java:1423)     org.mindswap.pellet.ABox.isConsistent(ABox.java:1260)     org.mindswap.pellet.KnowledgeBase.consistency(KnowledgeBase.java:1987)     org.mindswap.pellet.KnowledgeBase.isConsistent(KnowledgeBase.java:2061)     com.clarkparsia.pellet.owlapiv3.PelletReasoner.isConsistent(PelletReasoner.java:849)     org.protege.editor.owl.model.inference.OWLReasonerManagerImpl.getReasonerStatus(OWLReasonerManagerImpl.java:236)     org.protege.editor.owl.model.OWLWorkspace.updateReasonerStatus(OWLWorkspace.java:750)     org.protege.editor.owl.model.OWLWorkspace.handleModelManagerEvent(OWLWorkspace.java:351)     org.protege.editor.owl.model.OWLWorkspace.access$000(OWLWorkspace.java:140)     org.protege.editor.owl.model.OWLWorkspace$1.handleChange(OWLWorkspace.java:253)     org.protege.editor.owl.model.OWLModelManagerImpl.fireEvent(OWLModelManagerImpl.java:818)     org.protege.editor.owl.model.inference.OWLReasonerManagerImpl$ClassificationRunner$1.run(OWLReasonerManagerImpl.java:430)     java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:251)     java.awt.EventQueue.dispatchEventImpl(EventQueue.java:721)     java.awt.EventQueue.access$200(EventQueue.java:103)     java.awt.EventQueue$3.run(EventQueue.java:682)     java.awt.EventQueue$3.run(EventQueue.java:680)     java.security.AccessController.doPrivileged(Native Method)  i have been reading and I have changed the JVM memory to almost 3GB which is the maximum amount on my laptop.
20086122,1,0,2,java.util.HashMap,How to determine the worst case complexity of methods in HashMap?
20091421,2,0,1,java.util.HashMap,HashMap is only claimed to have constant work time.
20091421,2,0,1,java.util.HashMap,Have a look at internal HashMap method: code.
20091421,2,0,1,java.util.HashMap,"If size is greater than threshold complete rehashing happens, its complexity is equal to creating new HashMap."
20091421,2,0,1,java.util.HashMap,"So the worst case is  O(new HashMap(oldMap)) + O(N)  O(N) might happen if you have overridden hashCode() function badly, so that it has pure distribution."
20090615,1,0,0,java.util.HashMap,Working with HashMap error Java - quite an extraorinary bug.
20091408,2,0,0,java.util.HashMap,Maintain a HashMap with range as key and ArrayList of data from website for that range as value.
20091408,2,0,0,java.util.HashMap,Now use this HashMap to check whether data for the range is available or not.
20091408,2,0,0,java.util.HashMap,If not fetch it from we and add it to HashMap and use it.
20091408,2,0,0,java.util.HashMap,"Now based on whether you have data forthe given range in HashMap or you fetch it from web  and add it HashMap, clear the ArrayList passed in the adapter and add all the new data and call notifyDataChange on adater."
20091974,1,0,0,java.util.HashMap,"For example I have UDJC1 and UDJC2 in the same transformation and I declare a HashMap(not String, which could be set with SetVariable() function) in UDJC1 and want to use it in UDJC2."
20092017,1,0,1,java.util.HashMap,Some of the values in the HashMap are upto 16 digits long after the decimals.
20097112,1,0,0,java.util.HashMap,what is wrong with the HashMap?
20097112,1,0,0,java.util.HashMap,"My Code: It's a GUI program I draw some rectangle, and put them in the HashMap shapes(use addShape()); The currShape point to the shape that the mouse hold."
20098227,2,0,0,java.util.HashMap,Just Fill a HashMap for your post params code.
20182946,2,0,1,java.util.HashMap,The huge static HashMap allows almost all of the values work to be done statically in the superclass.
20182946,2,0,1,java.util.HashMap,The HashMap will return null if this is done before the subclass is accessed.
20102269,2,0,1,java.util.HashMap,"A HashMap has a size() and a capacity, and these are two different things."
20102269,2,0,1,java.util.HashMap,"Capacity is an internal size of a hash table and is always a power of two, so HashMap can't have capacity 20."
20102269,2,0,1,java.util.HashMap,When you declare a HashMap code.
20102290,2,0,0,java.util.HashMap,Please refer the source of HashMap here.
20102127,2,1,1,java.util.HashMap,If you look at the java code for HashMap: code.
20103929,2,0,0,java.util.HashMap,You cannot have the same key several times in an HashMap.
20107893,2,0,1,java.util.HashMap,"Create a lookup table of some sort (two strings, parallel array, or maybe a HashMap."
20109952,2,0,0,java.util.HashMap,"But maybe a HashMap can help you, where you store ""A"", ""B"", ""C"" as keys and the respective numbers as value."
20110299,2,0,1,java.util.HashMap,What I think you really should do is use a HashMap.
20110658,1,0,0,java.util.HashMap,The code that initializes a HashMap full of phones is code.
20111702,2,0,0,java.util.HashMap,It is not encouraged to declare a parameter type as void myFunc(HashMap m);  the best practice is to declare void myFunc(Map m).
20114818,2,1,2,java.util.HashMap,I thought you were using a HashMap.
20116776,2,1,12,java.util.HashMap,HashSet is implemented using HashMap in Java while TreeSet is implemented using TreeMap.
20116776,2,1,12,java.util.HashMap,"Internal Implementation : HashSet is backed by an HashMap instance, LinkedHashSet is implemented using HashSet and LinkedList while TreeSet is backed up by NavigableMap in Java and by default it uses TreeMap."
20116782,1,0,3,java.util.HashMap,"Case2: copyConstructor HashMap doesnot support deep copy constructor Suggested Solution I can use constructor for Animal, inside clone method of AnimalGroup, as follows Clone method in AnimalGroup code."
20118225,1,0,6,java.util.HashMap,Some doubts regarding HashMap.
20118225,1,0,6,java.util.HashMap,HashMap is implemented in a very simpe manner but it needs a genius to understand how it is implemented.
20118225,1,0,6,java.util.HashMap,"So, I have read about HashMap in java docs."
20118225,1,0,6,java.util.HashMap,I have some small questions regarding HashMap:  I know default capacity of HashMap is 16.
20118225,1,0,6,java.util.HashMap,"I know a little bit how HashMap works on basis of HashCode, Bucket and LinkedList if i am not wrong."
20118225,1,0,6,java.util.HashMap,Then how size of HashMap is being increased.
20118225,1,0,6,java.util.HashMap,"When we add new element in HashMap, on basis of HashCode it directly access that particular bucket without traveling like in LinkedList."
20118377,2,1,2,java.util.HashMap,to find a bucket from a hash code it can use hash & (SIZE -1) instead of abs(hash) % SIZE Until you know how HashMap  works exactly you won't be able to answer this question.
20118377,2,1,2,java.util.HashMap,"Similar to other collection classes like ArrayList,  Java HashMap re-size itself by creating a new bucket array of size twice of previous size of HashMap , and then start putting every old element into that new bucket array."
20118456,2,0,0,java.util.HashMap,"HashMap has a load factor, which is 0.75 by default."
20118456,2,0,0,java.util.HashMap,"If the amount of objects > amount of buckets * load factor, the HashMap's capacity is increased to preserve performance."
20118714,2,0,2,java.util.HashMap,It goes like this:  A HashMap is expanded when you attempt to add a new entry.
20118714,2,0,2,java.util.HashMap,"When a HashMap is expanded, the array is doubled in size."
20118714,2,0,2,java.util.HashMap,"Instead, when the HashMap expands, the entries in each old chain are moved to the respective chains in the expanded table."
20118714,2,0,2,java.util.HashMap,"This also means that in a typical HashMap implementation, expanding the table reverses the order of hash chain entries."
20118714,2,0,2,java.util.HashMap,Note that the actual behaviour and actual implementation details for HashMap differ for different releases of Java.
20126206,1,0,0,java.util.HashMap,(check #hashcomments) I created this HashMap(): code.
20126680,2,0,0,java.util.HashMap,You can use HashMap.entrySet() to iterate entries of a HashMap: Java:  code.
20126325,1,0,0,java.util.HashMap,"HashMap java, saving ADSB Messages."
20126325,1,0,0,java.util.HashMap,"I'm trying to do it with the HashMap class, but it doesn't really save my first received Message."
20131393,2,0,1,java.util.HashMap,Use HashMap.
20135108,2,1,1,java.util.HashMap,You'll notice that HashSet.contains punts to HashMap.containsKey.
20135108,2,1,1,java.util.HashMap,You'd better pray for HashMap.containsKey to be inlined since you need the hashCode call and equals calls inside to be monomorphic.
20134725,1,0,2,java.util.HashMap,"I would rather have the empty values be """" since they are going into a HashMap to post over HTTP."
20136558,2,0,0,java.util.HashMap,Explanation HashMap stores Key Value Pair.
20136558,2,0,0,java.util.HashMap,"HashMap can store only objects, so we can store object of class Integer."
20139431,1,0,1,java.util.HashMap,I have a map: Map abc = new HashMap().
20144731,1,0,0,java.util.HashMap,Different execution time for HashMap and HashSet based on the order of execution?
20144731,1,0,0,java.util.HashMap,"I am getting different execution time, if i interchange the HashMap and HashSet."
20144731,1,0,0,java.util.HashMap,The execution time is always high the one appears first ( either HashMap/ Hashset ).
20144731,1,0,0,java.util.HashMap,"Any help appreciated  Execution 1 - HashMap first , then HashSet --- Time taken map add: 2071ms, Time taken set add: 794ms Execution 2 - HashSet first , then HashMap --- Time taken set add: 2147ms, Time taken map add: 781ms code."
20144986,2,0,0,java.util.HashMap,Regardless of whether you use HashMap or HashSet you get the same time for the first loop and the same time for the second.
20144986,2,0,0,java.util.HashMap,It’s not surprising that it doesn’t matter whether you use HashMap or HashSet as HashSet  uses a HashMap internally.
20150880,1,0,0,java.util.HashMap,Insert a HashMap into any database table.
20150880,1,0,0,java.util.HashMap,I have a HashMap with the following definition: code.
20150880,1,0,0,java.util.HashMap,I am trying to make a method that takes the HashMap and a table name as arguments.
20150880,1,0,0,java.util.HashMap,The number of columns of course depends on the size of the HashMap.
20150880,1,0,0,java.util.HashMap,How can I achieve this through iterating through the HashMap.
20151022,2,0,1,java.util.HashMap,"Use a HashMap, then assign each line to a key in the HashMap."
20151022,2,0,1,java.util.HashMap,"The HashMap will retain only the latest assigned value, so you can decide if you want to reassign it or not depending on its date."
20151321,2,0,0,java.util.HashMap,"and have access to it.next().getKey() (notice that order of elements in HashMap is based on hashCode if its Key so don't be surprised with order like Player2, Player1, Player 3)."
20152373,1,0,3,java.util.HashMap,After thinking a little bit I understood that I need to inject HashMap.
22000236,2,1,1,java.util.HashMap,You could avoid new by injecting all actions into ActionMapFactory and populate the HashMap at the producer method: code.
20153562,1,0,0,java.util.HashMap,I have stored the xml field name and values as key/value pairs in HashMap structure.
20154323,1,0,0,java.util.HashMap,I was wondering if there is a way to parse an object that has an HashMap along with other data.
20154323,1,0,0,java.util.HashMap,"I think it has something to do with type tokens, but that only works if the whole object is a HashMap."
20154488,2,0,1,java.util.HashMap,The presence of HashMap in your class does not change how Gson converts it to and from json.
20156507,1,0,1,java.util.HashMap,"In the java.util source code for HashMap, there are refactored out methods putForNullKey and getForNullKey with the comment: code."
20160815,2,0,2,java.util.HashMap,"As to hash codes being immutable, that is required only if an object is going to be used as a key in a HashMap."
20160815,2,0,2,java.util.HashMap,The hash code tells the HashMap where to do its initial probe into the bucket array.
20160834,2,1,4,java.util.HashMap,A common use for hashcodes is for storing and looking objects in data structures like HashMap.
20160834,2,1,4,java.util.HashMap,"When looking for an object, instead of having to look through all of the objects, the HashMap uses the hashcode to determine which bucket to look in, and it looks only in that bucket."
20160834,2,1,4,java.util.HashMap,"I think what you're asking about is the requirement that an object stored in a HashMap not be mutated while it's in the map, or preferably that the object be immutable."
20160834,2,1,4,java.util.HashMap,"If an object were stored in a HashMap, its hashcode would be used to determine which bucket it gets stored in."
20160834,2,1,4,java.util.HashMap,"This might point HashMap to the wrong bucket, and as a result the object might not be found even though it was previously stored in that HashMap."
26201807,2,0,0,java.util.HashMap,You can define a customized class extending from HashMap.
20167549,2,0,0,java.util.HashMap,"Make yourself an ArrayList or HashMap that contains references to all the checkboxes, then you can check/uncheck them later on."
20167549,2,0,0,java.util.HashMap,You just have to think how you get the right index or you can use a HashMap and use keys.
20168106,2,1,0,java.util.HashMap,HashMap should be used with generics in new code.
20172394,2,0,0,java.util.HashMap,"You would like reading this post too as whenever you start comparing, you might understand better: Difference between HashMap, LinkedHashMap and SortedMap in Java"
20172142,2,0,3,java.util.HashMap,(entries are also extended from the HashMap.Entry so they have pointers to after and before) So all entries are ordered HEAD -> Entry1 <-> Entry2 ... <-- TAIL and at the same time kept in standard HashSet (i assume you are familiar with implementation).
20173657,1,0,1,java.util.HashMap,How to discover which value occurs the most in a HashMap?
20173657,1,0,1,java.util.HashMap,"How can I retrieve the value that most a occur in the HashMap above, in this case that would be ""School""."
20173853,2,0,0,java.util.HashMap,You could override the put() and remove() of the HashMap class and create your custom one that also controls for the number of objects added.
20173853,2,0,0,java.util.HashMap,This way you don't have to loop over the elements of your HashMap to count them.
20173700,2,0,3,java.util.HashMap,One solution would be:  Construct a new HashMap that has a String key and an int value.
20173700,2,0,3,java.util.HashMap,For each value of your current HashMap:  Add the value as the key in the new HashMap and the value as 1 if it's the first time you're inserting it.
20175225,1,0,4,java.util.HashMap,"I was studying about internal structure of Hash Map where i came across following details:  Implementation is an array of HashMap$Entry objects: Each HashMap$Entry contains:     – int KeyHash     – Object next    – Object key    – Object Value Default capacity is 16 entries Empty size is 128 bytes Overhead is 48 bytes for HashMap, plus (16 + (entries * 4bytes)) for  array – Plus overhead of HashMap$Entry objects Additional 32bytes per key ↔ value entry Overhead of HashMap is therefore: – 48 bytes, plus 36 bytes per entry  Can anyone please explain me ""Overhead is 48 bytes for HashMap, plus (16 + (entries * 4bytes)) for     array""    and ""Additional 32bytes per key ↔ value entry Overhead of HashMap is    therefore: – 48 bytes, plus 36 bytes per entry""     ???"
20319095,2,0,1,java.util.HashMap,"But let's see for ourselves for OpenJDK 7, the HashMap class:   Overhead is 48 bytes for HashMap  Housekeeping info."
20319095,2,0,1,java.util.HashMap,"(the static final fields don't count, they are compile-time constants) All that gives us 40 bytes flat cost of a HashMap instance."
20319095,2,0,1,java.util.HashMap,"16 + (entries * 4 bytes) for array  The Entry[] table table is instantiated when the HashMap is constructed, we need to count it, too."
20180321,1,0,1,java.util.HashMap,Get random value from a HashMap>.
20180321,1,0,1,java.util.HashMap,"I have a function that accepts a HashMap<String, HashSet<Integer>>."
20180321,1,0,1,java.util.HashMap,Now I want to get a random value from the HashMap but I don't know how to do this.
20181943,2,1,5,java.util.HashMap,"If you read the javadoc of JSONObject#get(String) which is actually HashMap.get(String), it states  Returns: the value to which the specified key is mapped, or null if   this map contains no mapping for the key  Your JSON does not contain a mapping for the key time."
20188259,2,0,0,java.util.HashMap,HashSet internally uses HashMap.
20188259,2,0,0,java.util.HashMap,"You can refer HashMap.put(K key, V value) method for more details."
20190070,1,0,3,java.util.HashMap,I am storing a HashMap object in my ServletContext.
20190070,1,0,3,java.util.HashMap,But Multiple Request thread are reading and Modifying this HashMap.
20190070,1,0,3,java.util.HashMap,As i belive the ServletContext objects are shared between request threads do i need to Synchronize the access to this HashMap ?
20190680,2,1,8,java.util.HashMap,"But of course if an object like a HashMap is shared between different threads, the developer must ensure that this shared object itself is accessed in a proper, thread-safe way!"
20190446,2,0,0,java.util.HashMap,"Yeah, make sure that when you modifying the HashMap; it is synchronized or thread safe."
20192225,1,0,3,java.util.HashMap,"Or I can use HashMap, where the hashcode of word and synonyms word instance made equal which could enable faster retrieval."
20192743,1,0,0,java.util.HashMap,Implement iterator next-method for a HashMap - How?
20196018,2,0,0,java.util.HashMap,"Always return List instead of ArrayList, Set instead of HashSet, Map instead of HashMap - that way, consumers of your code don't know any unnecessary details about your implementation."
20196018,2,0,0,java.util.HashMap,"If you find you need to replace HashMap with TreeMap (or vice versa) in a method, that will be much more simple if you don't have to change all the places as well where this method was called."
20198336,1,0,0,java.util.HashMap,"In another class I create a Map<Foo, Double> bar = new HashMap<Foo, Double()."
20199493,1,0,0,java.util.HashMap,Serialize a HashMap in java to pass it from server to client in java.
20199493,1,0,0,java.util.HashMap,i do some data processing in the server side then store it in HashMap what would the best way to pass the HashMap to the client ?
20201564,1,0,3,java.util.HashMap,Java HashMap key problems.
20201564,1,0,3,java.util.HashMap,"For this, I am using a HashMap, mapping each object to an ID that I can use as an attribute to each object serialized, while at the same time keeping track on which objects that are already serialized."
20201564,1,0,3,java.util.HashMap,It seems that the java HashMap only checks for equality upon keys and not if they are the same reference.
20206607,1,0,0,java.util.HashMap,ArrayList in HashMap using a method in Java.
20206607,1,0,0,java.util.HashMap,I have a HashMap with ArrayList as values: code.
20206607,1,0,0,java.util.HashMap,Is there another way of accessing a HashMap with multiple values for one key?
20206641,2,0,0,java.util.HashMap,"If you look at the Javadoc , you can see that HashMap has a method called values() So you can retrieve the values and you just need to iterate on it."
20206700,2,0,0,java.util.HashMap,The method you have accepts an ArrayList arg but you are trying to pass the HashMap.
20210762,2,1,3,java.util.HashMap,"For example, we don't have access to HashMap's hashtable directly and we can't corrupt it."
20212553,2,1,1,java.util.HashMap,"Also for mutable objects ,the hashCode() might be dependent on fields that could change, if this happens you wont be able to find the key (and its value) in the HashMap since hashCode() returns different value."
20212731,2,0,4,java.util.HashMap,"You can find the answer here: How HashMap works in Java  String, Integer and other wrapper classes are natural candidates of HashMap key, and String is most frequently used key as well because String is immutable and final,and overrides equals and hashcode() method."
20212731,2,0,4,java.util.HashMap,"Immutabiility is required, in order to prevent changes on fields used to calculate hashCode() because if key object return different hashCode during insertion and retrieval than it won't be possible to get object from HashMap."
20212731,2,0,4,java.util.HashMap,"Since equals() and hashCode() method is used during reterival of value object from HashMap, its important that key object correctly override these methods and follow contact."
20212731,2,0,4,java.util.HashMap,If unequal object return different hashcode than chances of collision will be less which subsequently improve performance of HashMap.
20212731,2,0,4,java.util.HashMap,There is also another stack for the discussion: Why are immutable objects in hashmaps so effective Both hashcode and equals method are used in put and get method of HashMap.
20213290,2,0,0,java.util.HashMap,You will have to iterate over values:: may be this will help: Java: iterate through HashMap code.
20215950,1,0,0,java.util.HashMap,How would I go about retrieving the Key/Value separately from the HashMap based on the Index of the HashMap?
20217384,2,0,0,java.util.HashMap,"Just a suggestion: You may consider to change your lengthy convert method implementation by a simpler ASCII function or HashMap implementation, for example: code."
20217414,1,0,2,java.util.HashMap,I have one more doubt regarding HashMap - Hashmap does not maintains order.
20217691,2,0,1,java.util.HashMap,"Behind the scenes, it uses a HashMap."
20217507,2,0,0,java.util.HashMap,"HashSet implements it with a HashMap, TreeSet implements it with a Tree, LinkedHashset implements it with a doubly-linked list."
20217811,2,1,3,java.util.HashMap,"Read the Wikipedia page on hash tables for a general overview, and the source code of java.util.HashMap and java.util.HashSet for the details."
20217811,2,1,3,java.util.HashMap,The short answer is that HashSet and HashMap are both a hash table implemented as an array of hash chains.
20218192,1,0,0,java.util.HashMap,"In my application, I save large, serialized ArrayList<HashMap<String, String>>s There are between six and twelve strings in each hashmap."
20218208,1,0,5,java.util.HashMap,What is the advantage of null keys mechanism change of HashMap in JDK 1.6 or above version?
20218208,1,0,5,java.util.HashMap,"I found that some code is changed for null keys in class HashMap in JDK 1.6 or above version compared to the previous JDK version, like 1.5."
20218208,1,0,5,java.util.HashMap,"Please help me out with the following 2 question Q#1 ==> Why this change is made, is there some scenario that the null keys of HashMap implemented in JDK 1.5 encouneters issue ?"
20218208,1,0,5,java.util.HashMap,Q#2 ==> What is the advantage of null keys mechanism change of HashMap in JDK 1.6 or above version?
20218279,1,0,0,java.util.HashMap,Word Frequency - HashMap or TreeMap.
20218279,1,0,0,java.util.HashMap,"What structure to use for the stop words  I think that HashSet would be most efficient  What structure to use for the words and frequency mapping  HashMap would be more efficient for adding words, but would require sorting, TreeMap requires logn time for inserting words, but words can be sorted by frequency    What approach overall is more efficient?"
20220177,2,0,0,java.util.HashMap,"You can perform a single pass over the final HashMap<String, Integer> of counts/words, and using a TreeMap<Integer, List<String>> and the TreeMap.firstKey() and TreeMap.size() methods calculate the Top N words."
20221527,2,1,2,java.util.HashMap,"HashMap Each update / insert will cost expected O(1), taking O(k) for all words."
20221527,2,1,2,java.util.HashMap,But we can do better than sorting - we can iterate through the HashMap and maintain a heap (PriorityQueue) of the n most frequent words (sorted primarily by frequency and secondarily alphabetically).
20221527,2,1,2,java.util.HashMap,"Comparison Since n <= m and m <= k, we know that m log n <= k log m, and, assuming there are plenty of duplicates or n is somewhat smaller than m, k + m log n <= k log m, so the HashMap is generally the preferred option."
20218463,2,0,0,java.util.HashMap,"Overall insertion cost for HashMap: O(n), for TreeMap: O(n log w)."
20222708,1,0,0,java.util.HashMap,"However, a HashMap pointing to nodes in a linked list will provide for the same runtime complexity, but also constant-time lookup, which is a pretty big advantage."
20222708,1,0,0,java.util.HashMap,"I do realize that TreeMap's red-black tree might be better suited than a HashMap in certain situations, but certainly constant time lookup with natural-ordering is preferable in others."
20226641,1,0,2,java.util.HashMap,I want to split each line into two separate strings when reading through the txt file I'm using and later store them in a HashMap.
20227653,2,0,1,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
20226800,2,0,1,java.util.HashMap,"HashMap is going to be near constant access time, ArrayList will be linear, until it needs to grow the array, etc."
20227278,2,0,1,java.util.HashMap,"If you want modularity of your code 3rd point is better, but for simplicity you should use a HashMap, like: code."
20227378,1,0,0,java.util.HashMap,for loop to get values from HashMap.
20227378,1,0,0,java.util.HashMap,I want to make a for loop to get the values from a HashMap.
20227378,1,0,0,java.util.HashMap,where places1 is HashMap I got from another activity : code.
20227497,2,0,0,java.util.HashMap,"You can use HashMap.values() method, it returns Collection<V>.//where V is the value type code."
20227745,1,0,0,java.util.HashMap,"I now iterate through all the vertices (which I have in a HashMap) and check if a vertex is unvisited, then check if a cycle exists, if so increment the counter by 1."
20228096,1,0,2,java.util.HashMap,adding Strings to HashMap.
20228096,1,0,2,java.util.HashMap,"I'm trying to put some Strings to a HashMap, but they wont add."
20228096,1,0,2,java.util.HashMap,I tried to add this method to test the HashMap but nothing prints out and the size = 0 code.
20236055,2,0,0,java.util.HashMap,"This statement is   called selectPerson, takes a parameter of type int (or Integer), and   returns a HashMap keyed by column names mapped to row values."
20229490,2,0,0,java.util.HashMap,"... ArrayList<Bulb> bulbs = new ArrayList<Bulb>(); for(Class cell:cells) {     bulbs.add(new Bulb()); } ...  -OR- If you really want number related indices to pull the bulb back later:  ... HashMap<int,Bulb> bulbs = new HashMap<int,bulb>(); for(int i=0,i<len;i++) {    bulbs.put(i,new Bulb); } ..."
20229594,2,0,0,java.util.HashMap,"or maybe you want to use a HashMap instead of an array, so that you can look up car makes by name."
20230874,2,0,1,java.util.HashMap,"Assuming placesInfo is a standard HashMap then when there is a collision (m10 hashed to the same slot as m7), the entry for m7 gets chained from the one for m10."
20231001,1,0,0,java.util.HashMap,How to use a HashMap in a JSON Object.
20235418,2,0,2,java.util.HashMap,Here the Object Type is that of a HashMap and Reference type of Map (The interface).
20235418,2,0,2,java.util.HashMap,HashMap will inherit the methods that are declared in Map and provide it's own implementation of them.
20236074,1,0,4,java.util.HashMap,Why there is difference in HashMap and Hastable method of put?
20236074,1,0,4,java.util.HashMap,I was wondering for put method difference in HashMap and Hashtable  HashTable put method code  code.
20236074,1,0,4,java.util.HashMap,HashMap put method code  code.
20236288,2,0,0,java.util.HashMap,You didn't post the implementation of how HashMap generates the index.
20236288,2,0,0,java.util.HashMap,"HashMap calls indexFor which is doing: return h & (length-1); Important note: HashTable is older than HashMap, it's no wonder that there are difference implementations."
20236332,2,0,0,java.util.HashMap,which means: hash - without the leftmost bit (sign) modulo the table length HashMap: code.
20236332,2,0,0,java.util.HashMap,The difference is in the lower bits (in HashMap vs. Higher bits in HashTable).
20240712,2,0,1,java.util.HashMap,Use LinkedHashMap instead of HashMap It will return keys in same order (as insertion) when calling keySet().
20240467,2,0,5,java.util.HashMap,The HashMap has no defined ordering of keys.It's Unordered.
20240492,2,0,4,java.util.HashMap,A HashMap does not maintain the order of the elements inserted in it.
20240506,2,0,1,java.util.HashMap,There is no Order in HashMap.
20240506,2,0,1,java.util.HashMap,Use LinkedHashMap instead of HashMap It will always return keys in same order (as insertion)
20240513,2,0,1,java.util.HashMap,A HashMap doesn't have a position.
20240551,2,0,1,java.util.HashMap,HashMap is not capable of doing so.
20240576,2,0,1,java.util.HashMap,"According to documentation, HashMap is a Hash table based implementation of the Map interface."
20240576,2,0,1,java.util.HashMap,"(The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)"
20240631,2,0,2,java.util.HashMap,HashMap doesn't grantee the order.
20242514,2,0,0,java.util.HashMap,Use a TreeMap instead of HashMap.
20242514,2,0,0,java.util.HashMap,"Alternatively, if you have an existing HashMap and want to create a TreeMap based on it, pass it to the constructor: code."
20245586,2,1,0,java.util.HashMap,"Every time you're saving data, you're recreating your HashMap, and because you only save the current record on the button press, you're never going to retain previous values."
20245586,2,1,0,java.util.HashMap,"A simple solution would be to make your HashMap global, then do a check for existence of the key your user wishes to save/modify before either inserting a new key/value pair or modifying an existing key/value pair."
20245755,2,0,0,java.util.HashMap,"You are recreating the HashMap every time you store a record, so the old stored record is erased."
20245755,2,0,0,java.util.HashMap,Move the HashMap declaration out of the method and create it as a private variable in the class that contains the saveMode method.
20246068,1,0,1,java.util.HashMap,I checked similar queries down here but they addressed the question with answers containing ArrayList and HashMap.
20254984,2,0,1,java.util.HashMap,You can iterate over a HashMap by iterating over its entrySet().
20257758,2,1,3,java.util.HashMap,"Unless you have a very good reason to do it, you might want to stick to a HashMap (or other Map): code."
20258049,1,0,2,java.util.HashMap,"My index structure is a HashMap<String, PatriciaTrie<String, Integer>>, where the first string represents a term and the second string is of the format filepath+XPath, with the final integer representing the number of occurrences."
20263579,1,0,3,java.util.HashMap,"Why the numbers like 4,20,12,7 used in hash function in `HashMap Class`."
20263579,1,0,3,java.util.HashMap,I was reading about the fact that How exactly the HashMap works in java .I found code in the  hash method in the HashMap class the hashcode is one of the operand with Shift right zero fill operator .The other operands are like 12 7 4 20.
20263945,2,0,3,java.util.HashMap,"This method in the HashMap implementation just tries to improve this, given the knowledge about how the HashMap will use that value afterwards."
20266207,2,0,0,java.util.HashMap,Where ThreadLocalMap is a specialized HashMap-like implementation with optimizations.
20266207,2,0,0,java.util.HashMap,"As this is nothing 'magical', the timing will be equal to a HashMap-lookup + the initial creation overhead of the actual Object to be returned."
20266207,2,0,0,java.util.HashMap,"Since a HashMap lookup (in this optimized case) is linear, the cost for a lookup is k, where k is the calculation cost of the hash function."
20266207,2,0,0,java.util.HashMap,"ThreadLocal will be better than using your own HashMap, as such a generic implementation can be assumed to be equal to k or worse."
20265441,2,0,0,java.util.HashMap,"For this kind of requirement, i would suggest you to go for a HashMap<Week_Value,List<Measurement_Value>> instead of an two dimensional array."
20272090,1,0,1,java.util.HashMap,Best practice for updating HashMap for Object Cache.
20272090,1,0,1,java.util.HashMap,I plan on using a HashMap to store my retrieved data in this cache but my question is what is the best practice for updating this HashMap.
20272090,1,0,1,java.util.HashMap,"Right now my choices are making the HashMap volatile and anytime an update comes in, create a new HashMap and then assign it when it completes."
20272090,1,0,1,java.util.HashMap,I could also wrap the HashMap in a synchronized block or use a ReentrantReadWriteLock while updating the HashMap variable directly.
20272242,2,0,2,java.util.HashMap,"Instead of a HashMap, consider using Guava's cache, which is much more configurable and documents your intention to cache data."
20272106,1,0,1,java.util.HashMap,Java HashMap generics with Class key.
20272255,2,0,1,java.util.HashMap,I fixed the problem adding a ()cast to the code: import java.util.HashMap; import java.util.Map; code.
20272831,1,0,1,java.util.HashMap,"I have few issues/doubts to fill values in a HashMap I want a HashMap to accept ""Student"" as key and ""Details"" as value."
20813902,2,0,0,java.util.HashMap,"Specifically, the requirement is that the behavior of equals/hashCode doesn't change when the key is in the HashMap."
20813902,2,0,0,java.util.HashMap,"Or,  if the properties of a field may change but not the reference,  use reference equality (==) instead of field.equals() and call System.identityHashCode(field) instead of field.hashCode() Don't mutate the object while it is used as a key in the HashMap."
20272847,2,0,5,java.util.HashMap,"Also, your Student class should properly override equals and hashCode if it is to work well as a key for a HashMap."
20275312,1,0,0,java.util.HashMap,"I am currently creating a HashMap - HashMap<Integer, ArrayList<String>> tblDataMap = new HashMap<Integer, ArrayList<String>>() and writing all the data from table to hashmap."
20276805,1,0,0,java.util.HashMap,"I have two approaches for this question, use a HashMap<String, boolean> or use a Hashset."
20276863,2,0,1,java.util.HashMap,"As a side note, Java's HashSet is quite inefficient memory-wise and actually uses a HashMap under the covers."
20276932,2,1,1,java.util.HashMap,"A HashMap, although being less efficient because it must store multiple Boolean instances, would allow you to differentiate between the 3 cases listed above."
20278675,2,1,4,java.util.HashMap,"Consider using a Guava BiMap instead of a HashMap:  A bimap (or ""bidirectional map"") is a map that preserves the uniqueness of its values as well as that of its keys."
20279478,2,0,1,java.util.HashMap,Your local variable name and the name for the HashMap is same hence giving error
20279486,2,0,0,java.util.HashMap,"lockedDoors is String object, which has same name as your HashMap lockedDoors."
20284523,2,0,3,java.util.HashMap,Another good suggestion is using a HashMap for storing complements like this: code.
20284759,1,0,0,java.util.HashMap,The code basically has nested iterators on the same HashMap.
20284759,1,0,0,java.util.HashMap,"Here calls to ""elements.add"" do not update or modify the ""source"" HashMap."
20285058,2,1,3,java.util.HashMap,Since the iteration order might change between different HashMap implementations it might really happen that you see modified lists in one JDK but not another.
20285123,1,0,1,java.util.HashMap,I was thinking to use HashMap but i do not want to iterate through all values to get the value by index.
20286177,1,0,1,java.util.HashMap,"I am doing some DB operation, using Loader, populating a HashMap and then filling  a TreeMap with this HashMap for Sorting puropse, however when I try to pass this TreeMap to my AsyncTask like:  code."
20288152,1,0,0,java.util.HashMap,I'm looking for a way to convert a Bundle to a HashMap.
20288310,1,0,0,java.util.HashMap,Multi-dimension queryable HashMap Array.
20292757,2,0,0,java.util.HashMap,"A more usable mechanism might be to change your collection of Vertices to a Map of some sort (maybe HashMap<String,Vertex>), keyed on the Vertex.name."
20299450,2,0,1,java.util.HashMap,"So, in conclusion, you should probably just use a standard HashMap."
20299888,1,0,0,java.util.HashMap,Suppose I need a Map object that behaves like HashMap with the exception of a single method in HashMap.
20299910,2,1,1,java.util.HashMap,You can simply extend the HashMap class and override the methods that you'd like to add new logic to.
20299910,2,1,1,java.util.HashMap,"Composition, which might give you a few tips on whether you are better off extending a HashMap, or using composition to delegate to one - depending on your use case."
20299932,2,0,2,java.util.HashMap,I suppose you can create your wrapper that extends HashMap and override the method you want.
20299981,2,0,1,java.util.HashMap,You can  extend an already existing class java.util.HashMap extend a simple abstract class like java.util.AbstractMap and implement the missing method use a java.lang.reflect.Proxy wrapping the original class.
20300330,2,0,0,java.util.HashMap,"Since your class only works with Integers, remove it as a parameter (leave it on the HashMap), and your code should work correctly."
20300387,2,0,2,java.util.HashMap,"Since the second type-variable S of HashMap<K,S> is fixed as Integer, WrapperMap<K> is enough."
20300805,2,0,0,java.util.HashMap,"The problem that many programmers dont notice is that performance of Hashset or HashMap is best O(1) when the hashing function of Key Object is good,ie."
20300805,2,0,0,java.util.HashMap,"NOTE :- If you are Hashing funciton is not good,it degrades to a LinkedList internally and its performance degrades to O(log n) My personal preference is to Use EnumMap or EnumSet.It simply uses the Enum values for its functioning and programmers  dont have to worry about the Enum's hashcode/equals function.For rest other cases,use HashSet or HashMap(if you dont have to make it ordered)"
20300993,2,0,6,java.util.HashMap,"If you need fast access to elements using a key, use HashMap."
20300832,1,0,0,java.util.HashMap,"Type safety: The method put(Object, Object) belongs to the raw type HashMap."
20300832,1,0,0,java.util.HashMap,References to generic type HashMap should be parameterized.
20300868,2,0,0,java.util.HashMap,"List<String> list=new ArrayList<String> ();  For your case it is a map so you can use  Map<String,String> map=new HashMap<String,String>();  It will be a good practise if u will define immutable object as keys like String class"
20300876,2,0,0,java.util.HashMap,"You have a generic HashMap<T1, T2> and try to add a key-value pair to it that is not of type T1 and T2."
20300876,2,0,0,java.util.HashMap,"The type HashMap<T1, T2> only exists at compile time and is really a fancier way of declaring your good old non-generic HashMap."
20302811,1,0,2,java.util.HashMap,"I don't understand why this won't work as I understand that in the algorithms of a HashMap, obj1 and obj2 are the same objects."
20302867,2,0,0,java.util.HashMap,HashMap return null for new value.
20302867,2,0,0,java.util.HashMap,"Your Assert.assertTrue(testMap.put(obj2, 7) == 5); test case throws NPE exception because, obj2 is abcense at HashMap."
20302867,2,0,0,java.util.HashMap,You can test with obj1 which already put on HashMap code.
20304516,2,0,4,java.util.HashMap,Example of composition from java collections api : HashMap has an Entry class.
20304516,2,0,4,java.util.HashMap,If the HashMap object is deleted all the Entry objects contained in the map are deleted along with it.
20306347,1,0,4,java.util.HashMap,"Problem I'm trying to understand how Sun implemented the entrySet, keySet and values methods of the HashMap class but I'm coming across code that doesn't make sense to me."
20306347,1,0,4,java.util.HashMap,I understand conceptually that these methods return views directly linked to the map.entry list within the HashMap and that they use their own iterators (referencing the central HashMap iterator) for most of their work.
20306347,1,0,4,java.util.HashMap,My problem though is in understanding how exactly these views are being instantiated in the first place (since they are not a copy but something that sits over top of the actual HashMap list).
20306347,1,0,4,java.util.HashMap,Reference I'm looking at the Source Code located on this site: http://developer.classpath.org/doc/java/util/HashMap-source.html Here's one of the snippets that is giving me trouble: code.
20307443,1,0,1,java.util.HashMap,Java HashMap.get() returns null when I create a new instance of an object as a key.
20307443,1,0,1,java.util.HashMap,I'm making a spreadsheet application and I'm using a HashMap to store the data in the cells.
20307443,1,0,1,java.util.HashMap,"The problem I'm having is that if I use the HashMap.get() with a new Point, it returns a null value."
20307576,2,0,1,java.util.HashMap,"Once the HashMap finds all of the entries with the same hashCode, it then checks for equality using the equals method."
20307708,2,0,1,java.util.HashMap,A TreeMap would keep the students sorted by id; a plain HashMap avoids some overhead compared to a LinkedHashMap when no particular order is required.
20309435,2,0,3,java.util.HashMap,"To add on to @Makoto's wonderful answer, in your situation, I would use a TreeMap instead of a HashMap."
20309435,2,0,3,java.util.HashMap,Output with TreeMap: a4b4d3 Output with HashMap: d3b4a4
20313380,2,0,0,java.util.HashMap,HashMap test = new HashMap(); code.
20314355,2,0,0,java.util.HashMap,Then all the servers can call a wait() on the HashMap and be woken up after the monitor is notify().
20314355,2,0,0,java.util.HashMap,You then call notifyAll() from the HashMap's monitor thread when the HashMap is modified.
20314988,2,0,0,java.util.HashMap,"But my personal suggestion would be to use a HashMap<String,Integer>; to implement it."
20315359,1,0,1,java.util.HashMap,comparing Dates in java when used as keys in HashMap.
20315359,1,0,1,java.util.HashMap,"I was trying to use a HashMap with java.util.Date as keys, but I came across this odd issue."
20315411,2,0,2,java.util.HashMap,You're not comparing the date with the key in the HashMap (which would be the exact same Date object).
20323509,2,0,3,java.util.HashMap,"If you are not allowed to alter your classes, you can populate a look-up table like HashMap<Class, MyFunctor> where you can assign a different functor for every type of person you have."
20331934,1,0,0,java.util.HashMap,Creating json response from HashMap dynmically with the use of json schema.
20331934,1,0,0,java.util.HashMap,"The challenge is that , i dont know the levels of the fields in each json schema, I have only a HashMap which holds the data."
20332036,1,0,0,java.util.HashMap,"I got a problem, where I cant get the value out of an HashMap but I am sure, the key i want to get the value out with, is in the map (but not the same instance)."
20332036,1,0,0,java.util.HashMap,"But somehow Hibernate uses Javaassist, so different instances wont work out with a HashMap."
20332364,2,0,0,java.util.HashMap,"In order to utilize an Object properly as a key to a HashMap, you must override the hashCode() and equals() methods properly for it to work."
20332364,2,0,0,java.util.HashMap,You must also verify that the object you are using as a key does not change in any way that would make the hashCode() method give different result prior to retrieving from the HashMap.
20339002,1,0,4,java.util.HashMap,HashMap calculates the right bucked based on the hashCode value.
20339032,2,0,2,java.util.HashMap,"As Robin Green pointed out, Java's HashMap implements custom serialization that is independent of the hash value of the object at the time of storage."
20350226,2,0,0,java.util.HashMap,"Recommend using LinkedHashMap, so that the iteration order is well-defined, but I suspect this will work just fine with a HashMap."
20341742,1,0,1,java.util.HashMap,How do I use generics with HashMap?
20341742,1,0,1,java.util.HashMap,"I have two methods, one returns a HashMap of <Integer,String> and the other returns a HashMap of <Integer, Spanned>."
20345072,2,1,0,java.util.HashMap,HashMap with multiple values under the same key
20346644,2,0,0,java.util.HashMap,"if you don't need concurrent access use HashMap, otherwise ConcurrentHashMap which is tread-safe but lock-free"
20346563,2,1,4,java.util.HashMap,The documentation says to use it as an alternative to HashMap when mapping Integer to Integer.
20347313,1,0,1,java.util.HashMap,in an WebApp (JSF 2.1 with Primefaces) I want to use a HashMap to fill a SelectManyMenu (with Checkboxes).
20347313,1,0,1,java.util.HashMap,The HashMap is initialized with some Values and the key set to false.
20348104,2,0,1,java.util.HashMap,"When you really need a HashMap on server-side, use a valueChangeListener to sync these lists into your Map."
20349093,2,0,0,java.util.HashMap,Internal HashMap or Set provided by ResourceBundle are not ordered.
20350206,1,0,0,java.util.HashMap,Populate ComboBox with HashMap?
20350206,1,0,0,java.util.HashMap,I create a class that return a HashMap when I get the return I use a for each to populate this combobox but does show me only numbers and not the keys and values of hashmap.
20352593,1,0,2,java.util.HashMap,"In the below code snippet,  *l_ext_keys* is an arraylist of String which stores the keys, *l_extract* is a HashMap>, *l_temp_array* is an arraylist of object objectsHmp, code."
20352713,2,1,3,java.util.HashMap,Its not possible to have a key more than once in a HashMap.
20352713,2,1,3,java.util.HashMap,"You could use the HashMap as a directory, saving all values for one key in an Array or ArrayList and then define: code."
20352713,2,1,3,java.util.HashMap,"And at the first run of the while loop l_temp_array seems to be empty, so you add module1 with an empty value to the HashMap.."
20352740,1,0,0,java.util.HashMap,Create String[] from HashMap values.
20356354,1,0,2,java.util.HashMap,Should I use HashTable or HashMap as a data cache?
20356354,1,0,2,java.util.HashMap,"For this purpose, should the dictionary be a HashTable or a HashMap?"
20358250,2,0,1,java.util.HashMap,"in.readObject() returns a String, and you are casting to HashMap."
20360129,1,0,1,java.util.HashMap,The idea is to have a static HashMap which stores pair of references to File objects that are used by the application with binary semaphores.
20362127,2,0,0,java.util.HashMap,"If you would like to keep track of all totals you can use a HashMap or Collection of some kind for each name/value pair, then see which value is most at the end."
20364976,2,0,0,java.util.HashMap,"Use a HashMap<int, Book>: code."
20366454,2,0,1,java.util.HashMap,"You could create a HashMap in which the value type is a List of some type, por example: code."
20366485,2,1,0,java.util.HashMap,You can use one of the following ways: 1) HashMap within a HashMap code.
20366485,2,1,0,java.util.HashMap,2) List within a HashMap code.
20366485,2,1,0,java.util.HashMap,"3) Custom Object within the HashMap So you define a new class MyContainer, that will have properties to store all the different items."
20366485,2,1,0,java.util.HashMap,Then put this object inside the HashMap code.
20368323,2,0,0,java.util.HashMap,Perhaps you can replace it with HashMap.
20373542,2,0,0,java.util.HashMap,First instead of String [] use HashMap see on this http://www.androidhive.info/2012/02/android-custom-listview-with-image-and-text/ code.
20373649,2,0,1,java.util.HashMap,"You can try to iterate through list and convert it into HashMap, where priceListID will be key and PriceListManager  as value."
20374357,2,0,0,java.util.HashMap,Using a HashMap: code.
20374357,2,0,0,java.util.HashMap,Docs: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html If you need to dynamically add/change the assignements go for the HashMap.
20374176,2,0,1,java.util.HashMap,One way is to use HashMap: code.
20374258,2,1,0,java.util.HashMap,"I would also suggest a HashMap like Prashant, but like the following: code."
20374351,1,0,2,java.util.HashMap,I want to convert this string to HashMap declared above.
20382078,2,0,1,java.util.HashMap,You will want to look at each entry in the HashMap.
20382078,2,0,1,java.util.HashMap,Here are the relevant javadocs: Map.Entry HashMap entrySet method ArrayList contains method
20389514,2,0,0,java.util.HashMap,"A bit late to answer, bu i will make an answer: If i required to have options something like this, i would design a custom HashMap for myself following OOP tradition: allowing any type of Collection of type Set and List."
20389514,2,0,0,java.util.HashMap,"The Object class which are going to be mapped as (key, value) pair entry in HashMap<K, V> should have a function getRelationalKey() with return type K. Hence we need to mark the object class as a type Relational for forcing the implementation."
20389514,2,0,0,java.util.HashMap,"The HashMap<K, V> should have a function putAllFromRCollection(Collection) to put all such Object of the collection to the Map."
20389514,2,0,0,java.util.HashMap,"Hence, the custom HashMap: MyHashMap can have an implementation like: code."
20389514,2,0,0,java.util.HashMap,"The advantages are:  we are now allowed to define required data type of the key to make the relation with the object set a specific target field of Class as the Key matching type of the HashMap'S key Allowing any type of Collection<E> instead of just a HashSet  In this implementation however, i have avoided to provide code for resizing the map with the size of the provided Collection for performance achievement."
20388279,2,0,1,java.util.HashMap,"If you're having a memory leak (judging by the tag), then it's most probably are strings in a HashMap."
20388639,1,0,0,java.util.HashMap,"how can I find an element of an HashMap in Java, if the HashMap is of the form  and one key is empty, so it only contains a blank character."
20388639,1,0,0,java.util.HashMap,In my example: Let wordMap be an instance of HashMap filled with elements.
20390439,2,0,0,java.util.HashMap,"I suggest you to use HashMap instead, like HashMap < Integer, String> ."
20390439,2,0,0,java.util.HashMap,"HashMap==> http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html?is-external=true If 2d array type of String[][] is necessary, then you can have a try with the following code to convert 1D to 2D array."
20390203,2,0,1,java.util.HashMap,For this you should probably use a HashMap
20391741,2,1,1,java.util.HashMap,"You can use any Map implementation like LinkedHashMap, HashMap or Hashtable."
20393338,1,0,0,java.util.HashMap,This Method only returns a HashMap nothing else.
20394526,2,0,2,java.util.HashMap,"HashMap<K,V> inherently deals with generics."
20394526,2,0,2,java.util.HashMap,"A generic type can take on any object, so what HashMap does is call that object's hashCode()."
20394526,2,0,2,java.util.HashMap,"If you're trying to group multiple types of objects together, you can handle that via generic bounds, ie if you want to have a map that can take objects that are comparable to each other, you can do so via: HashMap<T extends Comparable<T>, K>."
20394902,1,0,1,java.util.HashMap,casting HashMap in a useful way.
20395131,2,1,7,java.util.HashMap,"HashMap = HashMap<Object, Object> != HashMap<?, ?> code."
20395131,2,1,7,java.util.HashMap,"if you are going to use only HashMap.get() there will be no ""pratical"" difference."
20395163,2,0,1,java.util.HashMap,"The HashMap come out from the seocnd line is (nearly) read-only, you cannot add anything to it because of the wildcard."
20394953,2,0,1,java.util.HashMap,"HashMap and HashMap<k,V>."
20394953,2,0,1,java.util.HashMap,First HashMap is generic and second one is specific to type (Key as well value).
20394953,2,0,1,java.util.HashMap,In first HashMap you can put any generic object where as second one is specific to type.
20402099,2,1,0,java.util.HashMap,Dismantling the cache data structure (HashMap.clear() etc.)
20405311,2,0,0,java.util.HashMap,You also have to overrdie the hashCode method since HashSet uses a HashMap internally.
32009360,2,0,0,java.util.HashMap,Hashset and HashMap internally calls two method to check the equality.
20405425,2,0,0,java.util.HashMap,HashSet and HashMap use two things to check for equality.
20405425,2,0,0,java.util.HashMap,"If you don't things like HashMap, HashSet, etc all have undefined and incorrect behavior."
20408636,1,0,1,java.util.HashMap,Convert List into HashMap> what can be a optimal way?
20408636,1,0,1,java.util.HashMap,"i.e. one Integer can be multiple times.Now I have to convert this List into  a HashMap HashMap<Integer,List<String>>  types what can be a optimal way?"
20408726,2,0,0,java.util.HashMap,"Actually probably your IDE (eclipse does) will recommend you to change your HashMap<Integer,List<String>> to SparseArray code."
20412354,1,0,7,java.util.HashMap,Reverse HashMap keys and values in Java.
20412354,1,0,7,java.util.HashMap,"It's a simple question, I have a simple HashMap of which i want to reverse the keys and values."
20412354,1,0,7,java.util.HashMap,and I want to create a new HashMap in which i put the opposites.
20456305,2,0,3,java.util.HashMap,"What do you think about a simple HashMap<UUID, TimerTask> tasks."
20416055,1,0,12,java.util.HashMap,"While reading the source code for HashMap, I came across this snippet in public V put(K key, V value): code."
20416511,2,0,3,java.util.HashMap,"3: Put each word in a HashMap(String, Integer) where String is the word, and Integer is the number of times it has appeared 4: Iterate through HashMap and prints out key, value pairs"
20417473,2,1,4,java.util.HashMap,"A HashMap resides in RAM, a database resides on the disk."
20417473,2,1,4,java.util.HashMap,In your case this may mean having to save the HashMap and all auxiliary data structures.
20417525,2,0,2,java.util.HashMap,"To answer a. HashMap will no doubt win over sqlite in terms of memory operations, hence it will run faster."
20418301,2,0,1,java.util.HashMap,"Use POJO instead of using HashMap<String, String>  code."
20418124,1,0,1,java.util.HashMap,listview with HashMap show only one data.
20418124,1,0,1,java.util.HashMap,I had referred to this website from androidhive for doing my ListView with HashMap.
20418375,1,0,0,java.util.HashMap,How can i retrieve value from Map> obj=new HashMap>();.
20418375,1,0,0,java.util.HashMap,Map> obj=new HashMap>(); How to retrieve value from above Map object?
20418687,2,0,0,java.util.HashMap,to retrive object from HashMap you have to use method HashMap.get(Object).
20418687,2,0,0,java.util.HashMap,The value passed to get must be same (must have same hashCode()) as value passed to HashMap.put(Object) method.
20418741,2,0,0,java.util.HashMap,"Since Map is an interface, you will need to use a HashMap or something in place of ... on the right side."
20420367,1,0,1,java.util.HashMap,"If i call get on the HashMap the programm seems to stop, but no exception is thrown."
20421092,2,0,2,java.util.HashMap,"In this case the list will not retain the order of elements, if that is important you can swap the HashMap for a TreeMap."
20424356,2,0,0,java.util.HashMap,There is no ordering in HashMap.
20428453,2,0,1,java.util.HashMap,Depending on the DOM implementation you may even find that the ordering of attributes has changed (most likely due to use of java.util.HashMap).
20434751,1,0,2,java.util.HashMap,I'm trying to come up with an efficient way to return a key in my HashMap that has the lowest value in datastructure.
20434751,1,0,2,java.util.HashMap,Is there a quick and efficient way to do this besides looping through the entire HashMap?
20434768,2,0,5,java.util.HashMap,"No, you have to loop over all the keys in a HashMap to find the smallest."
20435311,2,1,2,java.util.HashMap,As others have mentioned HashMap itself does not provide this.
20435311,2,1,2,java.util.HashMap,"To compute it on-demand, you would iterate the HashMap.entrySet() Depending on the size of the map, frequency of its change and frequency of requiring the key-with-lowest-value, pre-computing (caching) may be more efficient."
20434941,2,0,2,java.util.HashMap,You need to iterate over all the elements in the HashMap to find the one with the lowest value.
20434941,2,0,2,java.util.HashMap,HashMap is not designed to retrieve elements efficienctly based on their value.
20434941,2,0,2,java.util.HashMap,"Assuming that you probably also want to be able to retrieve items quickly based on their key, the following might work:  Write a wrapper around your HashMap that keeps track of all the elements being added to it, and remembers which oneis the smallest."
20434941,2,0,2,java.util.HashMap,"Store all your data twice - once in a HashMap and once in a data structure that sorts by value - for example, a SortedMap with key and value reversed."
20438584,2,1,2,java.util.HashMap,"If you have so many primitives (50) why don""t you use a HashMap ?"
20438554,2,0,1,java.util.HashMap,"Use a HashMap<Container, Double> as your data structure."
20438554,2,0,1,java.util.HashMap,"and have a HashMap<Container, ValueContainer>, and update accordingly."
20440136,1,0,7,java.util.HashMap,@PeterLawrey it is clear from the source code: getOrDefault is overriden in HashMap: code.
20440136,1,0,7,java.util.HashMap,LinkedHashMap extends HashMap and overrides only get(): code.
20446220,2,1,0,java.util.HashMap,Since JSONObject extends java.util.HashMap everything should work.
20446303,2,1,1,java.util.HashMap,I believe the HashMap will be faster and consume less memory.
20448477,1,0,6,java.util.HashMap,I am trying to understand how HashMap is implemented in Java.
20448477,1,0,6,java.util.HashMap,"The following snippet is from HashMap class and talks about Poisson Distribution:   Ideally, under random hashCodes, the frequency of nodes in bins follows a Poisson distribution (http://en.wikipedia.org/wiki/Poisson_distribution) with a parameter of about 0.5 on average for the default resizing threshold of 0.75, although with a large variance because of resizing granularity."
20485383,2,1,3,java.util.HashMap,"A HashMap is organized as an array of ""buckets"" based on the hashCode of the elements being inserted."
20485383,2,1,3,java.util.HashMap,"To take a simple example, let's say we have a HashMap of capacity 4 and a load factor of 0.75 (the default) which means that it can hold up to 3 elements before being resized."
20485383,2,1,3,java.util.HashMap,"This might not seem like a big deal, but if you have a HashMap with a capacity of 10,000 elements and there are 7,500 elements in a single bucket on a linked list, searching for a particular element will degrade to linear search time -- which is what using a HashMap is trying to avoid."
20485383,2,1,3,java.util.HashMap,"If the hashCode isn't very good, then elements can bunch up in certain buckets, and the HashMap will begin to perform poorly."
20485383,2,1,3,java.util.HashMap,-- and I think it also assumes that the number of elements in the HashMap is 50% of the number of buckets.
20485383,2,1,3,java.util.HashMap,"It may mean, for instance, that the objects being stored have exceptionally bad hashCodes, so the HashMap has to switch from a linked list to a tree in order to avoid excessive performance degradation."
20485383,2,1,3,java.util.HashMap,The link to the source file with the comment in question is here: http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/jdk8-b119/src/share/classes/java/util/HashMap.java
20450320,2,0,2,java.util.HashMap,"However, in order to use a HashMap, you need to keep in mind that a Hash / Map is a collection of Key-Value pairs."
20453629,1,0,1,java.util.HashMap,"I have made a HashMap that stores each different word as a key, and number of times that occurs as value (Integer)."
20453629,1,0,1,java.util.HashMap,Now I have to make a method called mostOften(int k):List  that return a List that gives the first k-words that from max number of occurrence to min number of occurrence ( descending order ) using the HashMap that I have made before.
20453629,1,0,1,java.util.HashMap,"The first idea that was on my mind was to swap keys and values of the given HashMap, and put it into TreeMap and TreeMap will sort the words by the key(Integer - number of occurrence of the word ) and then just pop the last/first  K-entries from the TreeMap."
20453683,2,0,0,java.util.HashMap,"Create a HashMap Iterate over you list and  Add the entry if not present, with value 1 If Present increment the value  At last iterate throw your HashMap (There is an EntrySet iterator) and print your ShoppingEntry (the Key) and the Amount (Value)"
20454350,1,0,1,java.util.HashMap,"titleMap is created with the following code: HashMap<Locale, String> titleMap = new HashMap<Locale, String>(); titleMap.put(myLocale, name); serviceContext is a new ServiceContext object  And one more thing, how can I use the categoryProperties attribute of this method (after the problem is solved)?"
20455593,1,0,1,java.util.HashMap,"However when it prints it's first line, it index3 should then equal index1 and start again) temp: line to be printed when index2 - index3 is >= limit temp2: last line to be printed when i < limit and == reply.length() EDIT2 For this section of code I am reading in from a HashMap and reply is a response drawn directly from a hashmap."
20458435,2,0,0,java.util.HashMap,"Try mapping each such array list using a HashMap<Key, Val> i.e., HashMap<String, ArrayList<Equipment>> where the ""SW Version"" or anything such name will be the key Try adding listeners to each action button in-line using the means of anonymous class."
20458435,2,0,0,java.util.HashMap,"Tutorial and reference:  How to use Radio Button, check the demo for ButtonGroup ButtonGroup class HashMap"
20457543,2,1,1,java.util.HashMap,it.remove(); actually removes the entry from the HashMap.
25923749,2,0,2,java.util.HashMap,"It is because your featuresTesting is never used, HashMap<Integer, Double> tmp=new HashMap<Integer, Double>(); should be HashMap<Integer, Double> tmp=featuresTesting.get(testInstance);"
20462784,2,0,0,java.util.HashMap,I would use something like a HashMap.
20463525,1,0,2,java.util.HashMap,"Storing values with duplicate keys in TreeMap, HashMap, or LinkedHashMap."
20463525,1,0,2,java.util.HashMap,"I have to enter each name returned into either a TreeMap, HashMap, or LinkedHashMap, but I'm not sure how to store them, because no matter what I use as the key, there might be duplicates."
20463525,1,0,2,java.util.HashMap,"Edit: Please note that I was specifically told I MUST use TreeMap, HashMap, or LinkedHashMap."
20463531,1,0,1,java.util.HashMap,Associating values with keys in a HashMap from text file [Java].
20463531,1,0,1,java.util.HashMap,I want to read the text file into my program and create a HashMap with the printer name as the key and associate the printjob with its corresponding printer.
20463683,2,0,1,java.util.HashMap,I think while populating the HashMap you can use Map> so that you can maintain a queue for each printer.
20463686,2,1,1,java.util.HashMap,"You don't need so many Collections, only mapOfJobs HashMap is enough, code."
20463819,1,0,2,java.util.HashMap,"I also, however, need to use these strings as keys in hashtables (specifically, Java's HashMap and HashSet classes), and was wondering whether the numbers I produce can be used as good hash codes, or easily converted into them, or if I should also generate a hashcode for my objects using a more traditional string hashing algorithm."
20468470,1,0,0,java.util.HashMap,"Sorting a HashMap based on date, How to reconstruct it back?"
20468573,2,0,3,java.util.HashMap,"HashMaps are not inherently ordered, so taking out the elements, ordering them, and putting them back in a HashMap will remove the ordering."
20479427,1,0,0,java.util.HashMap,Running methods of an object that is within a HashMap.
20479427,1,0,0,java.util.HashMap,So ive put the different Hives within a HashMap.
20479427,1,0,0,java.util.HashMap,I still need to run methods from the hives that are now within the HashMap in other objects and I need it to be running the method from the correct instance of hive.
20479427,1,0,0,java.util.HashMap,How would I call methods from hive as an object that is within a HashMap in a different Object?
20481060,2,0,1,java.util.HashMap,For diversity Why dont you just use a HashMap unless you want duplicate keys.
20482692,2,0,0,java.util.HashMap,So basically you are loading the same value for different keys in your HashMap graph What you need is something like: code.
20491096,1,0,0,java.util.HashMap,"When java is changed to 1.7.0_05+ breakpoint is skipped, and object is not unmarshalled completely -> HashMap is empty -> test that verifies that map is not empty fails, but I do not get this unexpected elements error."
20494281,1,0,0,java.util.HashMap,"I use AbstractCollection a lot and ran into this when using HashMap's ""values"" as a result to an AbsractCollection-yielding function."
20496495,1,0,0,java.util.HashMap,"And my code looks something like this: HashMap prison = plugin.prisons.getPrison(world.getName(), false); code."
20499110,2,0,2,java.util.HashMap,Use TreeMap instead of HashMap.
20499110,2,0,2,java.util.HashMap,"Note: HashMap, TreeMap wont allow duplicate keys."
20505596,1,0,3,java.util.HashMap,I create a HashMap with the length of words being the key and an ArrayList of the words as the value.
20510422,2,0,1,java.util.HashMap,"where data is a HashMap<String, String> object"
20529105,2,0,0,java.util.HashMap,"Rather, I ended up writing my HashMap object to file."
20510543,2,1,5,java.util.HashMap,"I beleive the description of sparse array clearly mentions the difference:  It is intended to be more memory efficient than using a HashMap to map   Integers to Objects, both because it avoids auto-boxing keys and its   data structure doesn't rely on an extra entry object for each mapping."
20510825,1,0,0,java.util.HashMap,How to convert a List of Subtitle Structure to HashMap>.
20510825,1,0,0,java.util.HashMap,"I want to convert this List<String[]> into a HashMap<String, List<String[]>>."
20515146,2,0,0,java.util.HashMap,"There are Java classes called HashMap and Hashtable, and these do indeed have O(1) deletion."
20515146,2,0,0,java.util.HashMap,"Specifically, HashMap and Hashtable are organized as an array of pointers to ""chains""."
20515146,2,0,0,java.util.HashMap,"The reason that the hash chains are short on average is that the HashMap and Hashtable classes automatically resize the main hash array when the ""load factor"" (the ratio of the array size to the number of entries) exceeds a predetermined value."
20518922,2,0,0,java.util.HashMap,"I would scan through the array and build a HashMap with the key, value pairs in them."
20518928,2,0,0,java.util.HashMap,A Map is an object that maps keys to values.Use HashMap Here is the example of hashmap.
20518891,2,0,0,java.util.HashMap,Like a HashMap: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
20521019,1,0,0,java.util.HashMap,What do HashMap and HashSet have in common?
20521232,2,0,1,java.util.HashMap,HashSet and HashMap have a number of things in common:  The start of their name - which is a clue to the real similarity.
20521232,2,0,1,java.util.HashMap,A comparison of TreeSet to TreeMap will find very similar differences and similarities to one between HashSet and HashMap.
20521262,2,0,1,java.util.HashMap,Just look into HashSet source code and you will see that it uses HashMap.
20521047,2,0,1,java.util.HashMap,HashSet is like a HashMap where you don't care about the values but about the keys only.
20521047,2,0,1,java.util.HashMap,This doesn't mean that if two objects have same hash values they overwrite each other when they are stored in the HashSet or in the HashMap.
20521377,2,0,0,java.util.HashMap,"HashSet is actually implemented using HashMap, using dummy object instance on every entry of the Set."
20523073,2,0,0,java.util.HashMap,"If so you should initialize the map again and anyway this is the wrong way to do it, you should also create a Food object and create an HashMap of Food objects instead of put all the key=>values into it."
20524579,1,0,1,java.util.HashMap,HashMap with ArrayLists values returning Null on Get() call.
20524579,1,0,1,java.util.HashMap,I have a HashMap that stores an object I created as a key and maps to an ArrayList of similar objects.
20524579,1,0,1,java.util.HashMap,Here is where I am populating the HashMap from a main store.
20524579,1,0,1,java.util.HashMap,There are some collisions occurring in my HashMap but I know that's not supposed to be too much of an issue.
20530070,2,0,0,java.util.HashMap,HashMap requires an implementation of equals and hashCode and you haven't overridden either of them.
20534533,2,0,1,java.util.HashMap,"PS: If your json starts/ends with [], jsonParser returns List<Map>, if it starts/ends with {}, it returns HashMap<String,Object> as the enclosing object."
20531578,2,0,0,java.util.HashMap,Create a new HashMap.
20531578,2,0,0,java.util.HashMap,Iterate your list and add objects from it to a HashMap mapping them to Boolean.TRUE for example.
20531578,2,0,0,java.util.HashMap,"Before adding an object to the HashMap, check if it's already in the HashMap."
20533502,1,0,0,java.util.HashMap,Using a single HashMap for multiple inherited classes.
20533502,1,0,0,java.util.HashMap,"My problem is, I have to have a collection of these objects in a HashMap<Integer, GameObject>...so I Can have access to theire shared members likepositionandresourceId`."
20533502,1,0,0,java.util.HashMap,UPDATE It turned out that I can actually put any subclass of GameObject in HashMap.
20533819,1,0,0,java.util.HashMap,"The problem is that i dont quite know how to save to HashMap, can anybody help please?"
20602479,2,0,0,java.util.HashMap,For list-adding I created new Student objects and filled them with the data from the objects from the HashMap.
20537429,2,0,0,java.util.HashMap,"Your createMap method assigns a new HashMap to the local variable map, not to the instance you tried to pass."
20537898,1,0,0,java.util.HashMap,HashMap allows duplicates?
20537898,1,0,0,java.util.HashMap,"I have a doubt regarding HashMap, as we all know HashMap allows one null key and value pair, My question here is  If I wrote like this, code."
20537942,2,0,2,java.util.HashMap,Each key in a HashMap must be unique.
20537942,2,0,2,java.util.HashMap,"When ""adding a duplicate key"" the old value (for the same key, as keys must be unique) is simply replaced; see HashMap.put:  Associates the specified value with the specified key in this map."
20537942,2,0,2,java.util.HashMap,"As far as nulls: a single null key is allowed (as keys must be unique) but the HashMap can have any number of null values, and a null key need not have a null value."
20537942,2,0,2,java.util.HashMap,Per the documentation:  [.. HashMap] permits null values and [a] null key.
20538149,1,0,2,java.util.HashMap,JAXB unmarshal XML elements to HashMap.
20538149,1,0,2,java.util.HashMap,"I found a lot of articles that describe how to unmarshal a sequence of XML elements to a HashMap as long as they are within a ""parent"" element."
20538149,1,0,2,java.util.HashMap,It works when using a List instead of the Map but I need the HashMap as I have to access the objects by the given keys... Any hints much appreciated!
20540454,2,0,1,java.util.HashMap,"I did this and I get true2 so there is no prob to replace or override value in HashMap, just make some break point and check i think error is some other place may be the value which u want to enter is nor proper may be null check once."
20540908,1,0,1,java.util.HashMap,Then it calls the method processRequest(Map map) processRequest(Map map) has one function: to create a new instance of class formParser with the map variable: i.e. formParser parser = new formParser(map); The class formParser has a constructor and a method:   the constructor initializes a new HashMap which clones the original and a new LinkedList which is to store the values and calls the method with the map parameter code.
20541993,2,0,0,java.util.HashMap,"Use a TreeMap not a HashMap, that will keep them sorted."
20542045,2,0,0,java.util.HashMap,There is no order guaranteed in HashMap.
20543594,2,0,0,java.util.HashMap,in getView(....): HashMap catalog_list = getItem(position);
20545306,2,0,0,java.util.HashMap,You can use Map or Hashmap to store variables and its values instead of Array or Arraylist  HashMap is an object that stores both “key/value” as a pairs.
20545306,2,0,0,java.util.HashMap,"In this article, we show you how to create a HashMap instance and iterates the HashMap data."
20545344,2,0,0,java.util.HashMap,Why not use a HashMap for the values and iterate through that?
20545344,2,0,0,java.util.HashMap,Java: iterate through HashMap
20545274,2,0,0,java.util.HashMap,However a much better approach would be to store the values in a Map (probably a HashMap) and then you can query/set/etc them from that easily.
20546839,1,0,1,java.util.HashMap,How to print out the contents of a HashMap in a certain format?
20547458,2,0,0,java.util.HashMap,HashMap#keySet should work for this.
20552247,2,0,1,java.util.HashMap,"Unfortunately ContentValues does not have put(String, Object) even though internally the values are stored in HashMap<String, Object>."
20555749,2,0,1,java.util.HashMap,"I want to protect content of the map when I erase content of the   list, how can I do it  Then, you need to add a separate content list to the HashMap for each of the list: code."
20558007,1,0,0,java.util.HashMap,I made a Map and initialized with 'new HashMap>()'.
20563778,2,0,1,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
20566290,2,0,2,java.util.HashMap,Since HashMap is not synchronized.
20566519,2,0,1,java.util.HashMap,The simplest and probably the most efficient solution would be to use a regular HashMap within a synchronized block.
20569064,1,0,0,java.util.HashMap,android.util.Pair as key in HashMap.
20569064,1,0,0,java.util.HashMap,Is it Ok to use http://developer.android.com/reference/android/util/Pair.html this for keys in HashMap?
20574804,1,0,0,java.util.HashMap,"I want to display image in simple listview,     we have arraylist HashMap which have values like city, description, etc."
20575981,1,0,3,java.util.HashMap,"The code works when I change the method signature to genericAddToMapOfLists(HashMap<K,List<T>>, K, T)."
20576081,2,0,6,java.util.HashMap,"List extends Collection, but HashMap<?, List> is not a subtype of HashMap<?, Collection> (I'm not using ?"
20576089,2,1,2,java.util.HashMap,"Taking that one step further, a HashMap<String, List<String>> is not a HashMap<String, Collection<String>>."
20576089,2,1,2,java.util.HashMap,"If a HashMap<String, List<String>> was a HashMap<String, Collection<String>>, then you could put a Vector<String> into a HashMap<String, List<String>> by assigning it to a HashMap<String, Collection<String>>, even though a Vector isn't a List, and so it's not allowed."
20580508,2,0,2,java.util.HashMap,You cannot create a generic array of type HashMap in java due to type erasure (the generic(s) are erased by the compilation step).
20580508,2,0,2,java.util.HashMap,"Your first statement is an array of untyped HashMap, I know it compiles."
20581163,2,1,1,java.util.HashMap,java.util.HashMap) will therefore not allow this.
20581163,2,1,1,java.util.HashMap,"If you are using a built-in implementation such as HashMap, it replaces the values anyway."
20581163,2,1,1,java.util.HashMap,"As for equals, you may just want to look at the implementation for HashMap, which can be found here: code."
20583651,2,0,0,java.util.HashMap,In Java this would look as HashMap of objects.
20584344,2,0,0,java.util.HashMap,"A weak reference to a HashMap will be removed under memory pressure, rendering your whole map unreachable and even terminating the program in your case."
20585967,2,0,1,java.util.HashMap,"Instead of using array which require traverse each time to get the target button with matching name, Create a HashMap<key, value>: HashMap<String, JButton>, map the button to their name and use it to get the component on Action Event."
20586862,2,1,0,java.util.HashMap,To read a Map (HashMap): code.
20586911,2,0,0,java.util.HashMap,"I'm a bit confused by your question, but from what i can tell to get the keys from the hash map you would use .keyset() to get the Set of Strings for the HashMap, and just iterate through those."
20587288,1,0,2,java.util.HashMap,"Everytime when a new connection arrives, ServerThread creates an other Thread named ClientHandler to handle the connection (Receiving/Sending data), and in my ServerThread, I have a java.util.HashMap<ClientHandler, Socket> to store the references of connected clients and the corresponding sockets."
20591598,1,0,1,java.util.HashMap,2-Dimensional iterable key for HashMap in Java.
20591598,1,0,1,java.util.HashMap,"What I'm doing right now is just using a HashMap to cycle through it, with a method checking for the coordinate to know when to go to the next 'line' (so if the data is [0-10] for x then it tests for 11 (and multiples) to calculate where to display a new line)."
20591598,1,0,1,java.util.HashMap,"What I'm trying to do is something to the following pseudocode :      HashMap thisMap = (key = IntArray[][], value = IntArray[] ) Where I could set a particular 2-d Int array as the key for the entire thing, and then assign the values through a loop (and get the values just as easily) in an iterable way."
20591598,1,0,1,java.util.HashMap,"I'm not wanting anyone to write these for me, or even the HashMap code, but I'm hoping to be pointed in the correct direction on how to do this (if it is possible) with just the standard libraries available in Java SE and not overriding anything."
20591598,1,0,1,java.util.HashMap,EDIT I found these :  Java usage of HashMap or Map with multidimensional arrays Java HashMap associative multi dimensional array can not create or add elements How to implement a Map with multiple keys?
20595917,2,1,3,java.util.HashMap,"The map's type is HashMap<String, CurrentAccount>, but you are instantiating HashMap<String,String>."
20595931,2,0,0,java.util.HashMap,where accountsMap is your HashMap.
20595944,2,0,0,java.util.HashMap,"Use put(key, value); See HashMap javadoc code."
20595909,1,0,1,java.util.HashMap,"Sorry if below problem is obvious, I've a map Map<BigInteger, String> reports = new HashMap<>(); that needs to be passed to JSP from controller."
20596254,2,0,0,java.util.HashMap,Another simple idea is using a HashMap.
20597797,2,0,0,java.util.HashMap,"One option is to create a HashMap<String, List<DataType>> by manually iterating over the list."
20597686,2,0,0,java.util.HashMap,"I would create a hash map: HashMap<DataType, List<Data>>."
20600698,2,0,2,java.util.HashMap,"(The HashMap class is roughly   equivalent to Hashtable, except that it is unsynchronized and permits   nulls.)"
20600698,2,0,2,java.util.HashMap,Source: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
20600730,2,0,0,java.util.HashMap,A simple HashMap will not.
20602008,1,0,1,java.util.HashMap,HashMap synchronization.
20602008,1,0,1,java.util.HashMap,"I have a task to synchronize method put(K key, V value) of HashMap."
20602176,2,0,3,java.util.HashMap,"For example, if two threads try to add the same key to the HashMap at the same time, they are going to loop through the bucket and not find the entry."
20602429,2,0,3,java.util.HashMap,"The easiest would be to traverse the list once and create a HashMap<String, List<DataType>>."
20602429,2,0,3,java.util.HashMap,"After that you can iterate over your ArrayList, check the rId of the current object and see if it's in the HashMap."
20602429,2,0,3,java.util.HashMap,HashMap has O(1) lookup time so this should be a non issue.
20607235,2,0,1,java.util.HashMap,"Do not use a TreeMap, instead use a HashMap to build up the values."
20607235,2,0,1,java.util.HashMap,"Once you have the complete list of values built you can then drop the entrySet from the HashMap into a new ArrayList and sort that array list by Entry<String,Integer>.getValue()."
20607007,2,0,0,java.util.HashMap,"There is little value in using a sorted collection, but it is many time slower so I would use a HashMap."
20607365,2,0,0,java.util.HashMap,Note that the first stage uses a HashMap because we don't need the order at all; just speedy access.
20611173,2,0,0,java.util.HashMap,"So in your case you can create a HashMap<Long, XmlData> (or something like this)."
20611173,2,0,0,java.util.HashMap,This will speed up your alogithm from O(n^2) to O(n) in theory since list lookup is O(n) and you have to do it n times but HashMap's lookup is O(1) (amortized).
20611173,2,0,0,java.util.HashMap,If you can't use HashMap for some reason you can try ordering your xml data and use a binary search algorithm.
20613602,1,0,0,java.util.HashMap,I've to do an action on more item of my listview so i create an HashMap with the name of selected application (in my list) and relative position.
20613995,2,0,0,java.util.HashMap,"It looks like you are reseting mHashMap every time the method createHashMap is called: mHashMap = new HashMap(); Instead, you should have this only where you declare mHashMap (as a class member) and then in createHashMap only have the ""mHashMap.put(name, mPosition)"" part."
20614975,1,0,0,java.util.HashMap,Why keys are compared in a strange way in HashMap.put()?
20614975,1,0,0,java.util.HashMap,"While skimming through the code of put() of HashMap, I came across a strange piece of code."
20615984,2,0,6,java.util.HashMap,So it is not like a LinkedList (which is O(n) nor a HashMap which is O(1) amortized.
20616132,2,1,2,java.util.HashMap,I recommend a HashMap with a String key based on coordinates (if it has irregular shape) or an array/List.
20616132,2,1,2,java.util.HashMap,HashMap version: code.
20616132,2,1,2,java.util.HashMap,You can see that the advantage of the HashMap version is that it is dynamic.
20617132,2,0,1,java.util.HashMap,"Is it possible for you to merge the two ArrayLists to a single HashMap<String, Integer>?"
20617132,2,0,1,java.util.HashMap,"I suggest this because you have a direct link between a filetype and its count - this ""link"" can be expressed by a HashMap entry."
20617132,2,0,1,java.util.HashMap,The conversion of the HashMap to an Object[][] can be done this way: code.
20617132,2,0,1,java.util.HashMap,With the HashMap sorting gets also easier as you do not need to handle two independent array lists.
20621795,2,1,3,java.util.HashMap,A HashMap will first use the hash code of the key to determine if it exists.
20621795,2,1,3,java.util.HashMap,That's why it's a bad idea to change your key objects while they're in a HashMap.
20626329,2,0,1,java.util.HashMap,A hashmap has a method keySet which will return a Set of keys http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#keySet() In your case  code.
20631645,1,0,0,java.util.HashMap,"method so that I can deserialize some JSON as a HashMap and pass it, but it doesn't seem to work."
20631998,1,0,3,java.util.HashMap,Why Java HashMap get(key) works faster when keys are read using same HashMap's Iterator than when keys are read using a Set's Iterator?
20631998,1,0,3,java.util.HashMap,"For HashMap<Integer,Integer>, after inserting it with 10000000 unique random values."
20632591,2,1,2,java.util.HashMap,this is what the iterator does for HashMap (not so much a TreeMap) it is much more likely that the next piece of data you will access is on the same cache line (each cache line is 64-bytes long) or the next one.
20743217,2,0,1,java.util.HashMap,"I found solution: import net.sf.jasperreports.engine.JRException; import net.sf.jasperreports.engine.JasperCompileManager; import net.sf.jasperreports.engine.JasperExportManager; import net.sf.jasperreports.engine.JasperFillManager; import net.sf.jasperreports.engine.JasperPrint; import net.sf.jasperreports.engine.JasperReport; import net.sf.jasperreports.engine.JasperReportsContext; import net.sf.jasperreports.engine.data.JRXmlDataSource; public static void main(String[] args){ try { HashMap hm = new HashMap<>(); String filePath=System.getProperty(""user.dir"") + ""\somexmldatasource.xml""; InputStream inputStream = new FileInputStream(new File(filePath)); JRXmlDataSource ds=new JRXmlDataSource(inputStream,""/some/xpath/query""); JasperReport jasperReport; JasperPrint jasperPrint; jasperReport = JasperCompileManager.compileReport(System.getProperty(""user.dir"")+""\yourreport.jrxml""); jasperPrint = JasperFillManager.fillReport(jasperReport, hm, ds); JasperExportManager.exportReportToPdfFile(jasperPrint, ""someoutputpath\simple_report.pdf""); } catch (Exception e) { e.printStackTrace(); } } for using Jasper in java you must include several jars from c:\Program Files (x86)\Jaspersoft\iReport-5.5.0\ireport\modules\ext\ (or some other path of iReport app): commons-collections-3.2.1.jar, commons-digester-2.1.jar, commons-logging-1.1.jar, jasperreports-5.5.0.jar, xml-apis.jar, commons-beanutils-1.8.2.jar, servlet-api-2.4.jar and iText-2.1.7.js2.jar"
20636899,1,0,1,java.util.HashMap,Errors when checking if HashMap key exists.
20636899,1,0,1,java.util.HashMap,"Basically, i'm trying to make it so that when I go to enter a transaction, it checks that the AccountID that is entered for the transaction is equal to the AccountID from the HashMap (the key)."
20639529,2,0,0,java.util.HashMap,A tree of nodes that contain the following things would probably fit your use case:  Name Parent pointer HashMap (or sorted map) of Names -> child nodes Node level payload / metadata  This is enough to implement most filesystem-like traversal algorithms pretty efficiently.
20648116,2,0,0,java.util.HashMap,"I would recommend using HashMap<String,HashMap<String,Integer>> map."
20646686,2,0,2,java.util.HashMap,Tomcat for example seems to use a HashMap to store filters so I wouldn't expect filters to necessarily run in the order that they were added.
20648870,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html code.
20648870,2,0,0,java.util.HashMap,"Or new HashMap<String, MyObject>(); for pre java 7"
20649591,1,0,0,java.util.HashMap,"I am curious as to what a better way to deal with this is, I wanted to challenge my self and see if I could break up, in a HashMap of key,value (or String, String), a string that could come back in almost any format."
24251758,2,0,1,java.util.HashMap,"The intern table is just a hash table with chaining on collisions, logically (though not physically) similar to a HashMap."
21791214,2,0,0,java.util.HashMap,I rewrote the example-class for Java 1.6+: ;-)      import java.io.ObjectStreamException;     import java.io.Serializable;     import java.util.HashMap;     import java.util.Map; code.
21791214,2,0,0,java.util.HashMap,If you want to be able to let the GC recycle objects of this class you may want to replace HashMap or its values by some Weak*-variant.
20655129,2,0,0,java.util.HashMap,First find all the keys of HashMap by  code.
20657399,1,0,2,java.util.HashMap,Difference between a general Hash table and java's HashMap in Big O.
20657399,1,0,2,java.util.HashMap,The Hash table wiki entry lists its Big O as: Search:     O(n) Insert:     O(n) Delete:     O(n)   while a java HashMap is listed with Big O as: get: O(1) put: O(1) remove: O(1)   Can someone plz explain why does the Big O differ between the concept and the implementation?
20657478,2,0,1,java.util.HashMap,The worst case is O(n) because it might be possible that every entry you put into the HashMap produces the same hash value (lets say 10).
20657478,2,0,1,java.util.HashMap,This produces a conflict for every entry because every entry is put at HashMap[10].
20657478,2,0,1,java.util.HashMap,"Depending on what collision resolution strategy was implemented, the HashMap either creates a list at the index 10 or moves the entry to the next index."
20657478,2,0,1,java.util.HashMap,"Nevertheless when the entry should be accessed again, the hash value is used to get the initial index of the HashMap."
20657478,2,0,1,java.util.HashMap,"As it is 10 in every case, the HashMap has to resolve this."
20657545,2,0,0,java.util.HashMap,Java's HashMap is exactly the same as wikipedia's Hash table.
20657552,2,0,0,java.util.HashMap,"I'm not sure where you found the reported complexity of a java HashMap, but it is listing the average case, which matches what wikipedia states on the page you linked."
20659625,2,0,1,java.util.HashMap,For storing your result in HashMap you first need to decide howto store it into HashMap.
20662279,1,0,2,java.util.HashMap,How Can I create a generic HashMap to insert collections and objects?
20662279,1,0,2,java.util.HashMap,How Can I  instantiate  a HashMap to put collections and objects?.
31530233,2,1,1,java.util.HashMap,"So, when you receive a JSON input in your flow, you extract it using JSON-to-Object transformer and using return class as  java.lang.Object or java.util.List or java.util.HashMap depending on your JSON."
20667259,1,0,0,java.util.HashMap,Java - Define HashMap type with a method argument.
20667259,1,0,0,java.util.HashMap,I want a method argument to define the class a HashMap will accept.
20667384,2,0,4,java.util.HashMap,"You can't do what you're trying to do: you can't ""define the class a HashMap will accept"" because at runtime a HashMap will accept all classes."
20670105,2,0,5,java.util.HashMap,since the HashMap constructor does not declare any type parameters.
20671657,1,0,2,java.util.HashMap,I discovered this - Using a byte array as HashMap key (Java) - limitation quickly; and wonder which approach is recommended.
20671908,1,0,2,java.util.HashMap,How to loop through the keys and values stored in a Spring HashMap model within a JSP?
20671908,1,0,2,java.util.HashMap,"Instead of explicitly listing the variables, how can I just loop through the keys and values of my results HashMap?"
20679220,1,0,0,java.util.HashMap,Banking system using HashMap and Linked list.
20685392,2,0,0,java.util.HashMap,"is not valid, because you are supplying objects into the HashMap generic parameters, and they should be class definitions."
20686308,1,0,0,java.util.HashMap,"I thought of a solution which is to get a frequency value per term per document while at the same time storing in a HashMap the term and as a value an ArrayList with each of the documents, but I firmly believe this is inefficient."
20687360,1,0,3,java.util.HashMap,I use a HashMap to store the Drawable objects.
20687360,1,0,3,java.util.HashMap,Should I pass the RenderWindow to the Drawables in the HashMap or pass the Drawables in the HashMap to the RenderWindow?
20693234,2,0,0,java.util.HashMap,"Secondly, I would recommend using a Map (the most common concrete implementation of which is the HashMap) to associate your random numbers with your seat IDs."
20693234,2,0,0,java.util.HashMap,"More information: Random Javadoc, HashMap Javadoc"
20693711,1,0,0,java.util.HashMap,I could simply do it with a switch case or HashMap but my list is somehow long and I dont want to update the code whenever my list grows.
20693751,2,0,2,java.util.HashMap,If you wanted to be able to get a type from id you could either build a HashMap inside the enum to do the lookup or just loop over the enum.values() looking for a match.
20701247,1,0,0,java.util.HashMap,HashMap  > Returns reference of Student Not Object of Student.
20701958,1,0,0,java.util.HashMap,"I have a HashMap[CustomEnumeration, String] as a member of my class."
20701958,1,0,0,java.util.HashMap,"P.S I have looked at How to get a immutable collection from java HashMap?, but I am sure I don't need such complexity, as I only use a ""nearly primitve type"" and I primitive type."
20704618,1,0,0,java.util.HashMap,"Now I want to source out a method, which returns me a HashMap of attributes and its values ranges in the superclass."
20705654,2,0,0,java.util.HashMap,use a HashMap... you can put the name:value pair into the map and retrieve via the name http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html code.
20708022,1,0,1,java.util.HashMap,"However, if I just feed the map to the say HashMap constructor (new HashMap<String, Set<String>>(oldMap)) it won't do a full copy, and only copies the reference to the set, which can be modified and those changes will be reflected in the new map."
20708107,2,1,0,java.util.HashMap,There was some discussion on this here for deep cloning: Java HashMap - deep copy It's hard in this situation though as the new map and set need to rebuild themselves.
20709720,1,0,10,java.util.HashMap,Suppose I have a class which wraps a HashMap as follows: code.
20709995,2,0,0,java.util.HashMap,An empty HashMap with size specified.
20710311,2,0,3,java.util.HashMap,"In other words, this is only slightly more involved than asking whether HashMap is thread-safe when created and accessed only within one thread."
20710311,2,0,3,java.util.HashMap,"The answer in that case is that HashMap is not thread safe, but it doesn't need to be."
20711570,2,0,0,java.util.HashMap,"As noted by TheSageMage, the HashSet implementation will constantly resize the underlying HashMap as the data grows."
20713011,2,0,0,java.util.HashMap,For example you could have a HashMap of String to a class that has both a weight and a meaning.
20713107,1,0,1,java.util.HashMap,HashMap of HashMap of Generic Type serialization in Java.
20713107,1,0,1,java.util.HashMap,I need someway to specify that HashMap of T and Number is serializable.
20719788,1,0,0,java.util.HashMap,Java: How to check if a Key is mapped in a HashMap?
20719788,1,0,0,java.util.HashMap,How do I check if a Key is mapped in a HashMap?
20719821,2,0,2,java.util.HashMap,"When you have questions like these in the future, try to find the HashMap javadoc and then you will be able to determine very quickly what to use."
20719821,2,0,2,java.util.HashMap,"In this case you can use  HashMap#containsKey(java.lang.Object) or if you want to find if the value is in the HashMap, you can use HashMap#containsValue(java.lang.Object)."
20720187,1,0,1,java.util.HashMap,Confusion over Java HashMap createEntry method.
20720187,1,0,1,java.util.HashMap,I'm trying to understand the inner implementation of HashMap in Java.
20722483,2,0,2,java.util.HashMap,Use different type arguments for your HashMap declaration like code.
20722485,2,0,0,java.util.HashMap,"You have problems with types in this case since you defined your map as  HashMap<String, String>."
20722485,2,0,0,java.util.HashMap,"So you have to convert your int to String You have to change HashMap type to accept both String and Integer, and only way to do this is by using Object class."
20724073,2,0,0,java.util.HashMap,I also recommend reading the sourcecode for java.util.HashMap and taking hints from the way they do their hashing etc.
20725505,1,0,0,java.util.HashMap,What I found was this: I printed out the Nimbus LookAndFeel HashMap code.
20730798,2,0,1,java.util.HashMap,"There are many logics... Pseudocode of the one, I can think of right now is as follow:  Step 1: Save image resource info (path) in HashMap with key as 0 to 3."
20730798,2,0,1,java.util.HashMap,Step 2: Generate Math.random() between 0 and 3 Step 3: Fetch the image from HashMap with the number got in step 2.
20731417,2,0,0,java.util.HashMap,"Or if you are trying to store a mapping of String to Integer, then you should look at Map, probably HashMap."
20732039,1,0,1,java.util.HashMap,Incrementing int to create a HashMap.
20734817,2,0,2,java.util.HashMap,"If you do this, just be careful, because a HashMap doesn't have any default value, so if the key you try to use isn't in the Map you'll get null back."
20734828,2,0,0,java.util.HashMap,"Assuming you need the IDs and Strings (rather than a String table and just use the index as an ID), it looks like you want some sort of HashMap."
20734828,2,0,0,java.util.HashMap,HashMap documentation: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
20738118,2,1,1,java.util.HashMap,"Go through all the records and add them to a HashMap<String, MenuModel> (the key being the ID)."
20739626,2,0,1,java.util.HashMap,"Yes there is a reason and you would have known if you read the first lines of it's javadoc:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
20739736,1,0,2,java.util.HashMap,"If yes, then consider the case of an example class, Graph, which uses a HashMap underneath."
20742956,1,0,6,java.util.HashMap,Its clear till here This is different from HashMap where the value object remain in HashMap even if key is no longer referred.
20742956,1,0,6,java.util.HashMap,We need to explicitly call  remove() method on HashMap object to remove the value.
20742956,1,0,6,java.util.HashMap,Please find this coding example explaining above Usage of WeakHashMap over HashMap as per mine understanding My understanding is we should go for WeakHashMap only when we want to ensure that value object is reclaimed by Grabage Collector when   key is no longer referred by any section of program.
20742956,1,0,6,java.util.HashMap,i am revising my understanding for the benefit of me and others Usage of WeakHashMap over HashMap as per mine revised understanding We should go for WeakHashMap only when we want to ensure that key-value pair is removed from map on GC run  when key is no longer in ordinary use other than map itself.
20748713,1,0,0,java.util.HashMap,What I though that I would put each card into HashMap since the hashmap is unordered and unsorted and then iterate through it and assign the 1st 13 cards to player one and upto last 13 cards to player four.
20750932,1,0,0,java.util.HashMap,"I've got a HashMap<Integer, Object> and I've got a getter function for it as such: code."
20751618,1,0,0,java.util.HashMap,HashMap Key/Value reference.
20751618,1,0,0,java.util.HashMap,Is there a way in Java to check if a HashMap value belongs to a specific key?
20751646,2,0,5,java.util.HashMap,Is there a way in Java to check if HashMap value belongs to a specific key ?
20751663,2,0,1,java.util.HashMap,Is there a way in Java to check if HashMap value belongs to a specific   key ?
20751663,2,0,1,java.util.HashMap,A HashMap mapping is 1-1.
20751964,1,0,0,java.util.HashMap,"I am using quick-Json to serialize a HashMap(String, String[]) in my program, but I am having trouble deserializing the object."
20751964,1,0,0,java.util.HashMap,"where all codes is a HashMap(String,String[])."
20751964,1,0,0,java.util.HashMap,"My goal is to cast the above as a HashMap(String, String[])."
20751964,1,0,0,java.util.HashMap,Is there a way to return back to the desired HashMap?
20751996,1,0,1,java.util.HashMap,"Using HashMap: Sorting all words in a file by length, in one read."
20753384,2,1,3,java.util.HashMap,"...which clearly doesn't make any sense - the HashMap is of type <String, String> yet you've put an Integer in it!"
20756343,1,0,1,java.util.HashMap,"So, this is my simple library management program for my college homework, and I can only use HashMap."
20758291,2,0,0,java.util.HashMap,"However, if you needed to keep that data alive and make frequent random accesses to it, I would keep it in an ArrayList or HashMap if possible."
20760668,2,0,0,java.util.HashMap,If orders are not an issue then better to go with Map: When to use HashMap over LinkedList or ArrayList and vice-versa Try this link:
20762283,1,0,0,java.util.HashMap,In my case I have this to manipulate a shallow copy of given HashMap code.
20762283,1,0,0,java.util.HashMap,"However eclipse suggests me to extract to local variable or method or add a cast and when I do so it keeps suggesting me same solutions :) I've came to this post and from the accepted answer I dont find it very clear  ""you're wasting memory with the new HashMap creation call""  And when I apply that to my code I'll have code."
20762935,2,1,1,java.util.HashMap,"Also as an FYI, public SomeClass( private HashMap<String, String> hashMap ) doesn't compile."
20762935,2,1,1,java.util.HashMap,you're wasting memory with the new HashMap call This was in the answer to the other post you referenced because their code was: code.
20762935,2,1,1,java.util.HashMap,Where someMap was created with a call to new Hashmap() but then that reference was immediately replaced with a different HashMap.
20762894,1,0,2,java.util.HashMap,"It's almost as if the JSON is somehow ""bad"" and FlexJSON is treating it like a HashMap..."
20762912,1,0,3,java.util.HashMap,HashMap is already sorted by key?
20762912,1,0,3,java.util.HashMap,"I thought that HashMap is unordered, and when iterating over the keys, you can't know what will be the order?"
20762988,2,0,2,java.util.HashMap,"For small hashCodes, the HashMap turns into an array (as this is what is used underneath)  There is no requirement for it to do so but it happens to be the simplest implementation."
20762988,2,0,2,java.util.HashMap,"In short, if you add 0 to 10 to a HashSet or HashMap you will get them in order because the capacity is large enough to just layout those values in order."
20763006,2,0,1,java.util.HashMap,"Treemap is a sorted map which contains keys in sorted order and HashMap can't gurantee you sorted map.So,always choose Treemap when ever you want sorted keys"
20767068,1,0,4,java.util.HashMap,"Essentially what I'd need is for something to the effect of HashMap<K, ?"
20770916,1,0,0,java.util.HashMap,"There are two maps one will have server uri to connection details i.e Test object and other will have channel to TestObject i.e connection entry details, when connection is created then  put channel testobject and server uri as per required in both the maps , when give another request first check in the map for that server uri and obtain a channel, similarly when channel is close remove from both the maps, its corresponding entries i.e channel object and test object, should I use concurrent hash map or should I use HashMap and then synchronize on the add remove methods, also I shall be using count AtomicInteger variable for statistics purpose it will be incremented and decremented."
20775401,1,0,0,java.util.HashMap,I have the following entries in my HashMap code.
20775401,1,0,0,java.util.HashMap,"The answer would be a KeySet containing the following keys: {key2,key3,key4} Is it possible to accomplish that in a HashMap?"
20775708,1,0,0,java.util.HashMap,"For some, my eclipse IDE complains whenever I do something like this: Map<Type,Type> map = new HashMap<Type,Type>(); it underlines Map and prefers I do something like this: HashMap<Type,Type> map = new HashMap<Type,Type>(); Same goes for all the other interfaces."
20775965,2,0,0,java.util.HashMap,Also check your current state of HashMap.
20775965,2,0,0,java.util.HashMap,"Changing Map to HashMap is really an option, so Eclipse is correct."
20776301,1,0,2,java.util.HashMap,"similarly, if we can make HashMap synchronized then what is the need of Hashtable?"
20776396,2,0,0,java.util.HashMap,Making HashMap using external synchronization helps in avoiding concurrent accesses to the same HashMap.
20776586,1,0,2,java.util.HashMap,"For my project, I have a HashMap with Class<?> as key and MyClass as value."
20776679,2,0,0,java.util.HashMap,"A different idea: Use the HashMap<String, MyClass> where the key is to be inserted with the Class's fully qualified name: SubClass.class.getName()."
20777821,1,0,3,java.util.HashMap,"Personally i don't see that the vice versa is right for that purpose, Let's consider that we use an object(with attributes) as keys in a HashMap and we don't need to test the equality between two instances of that object."
20777821,1,0,3,java.util.HashMap,"If we override the hashcode method in an efficient manner(based on attributes & other rules), so we can have unique keys, in this case for the HashMap we gonna have a unique value in each bucket, and the HashMap will not use the equals method to compare values in a bucket since we have one value in each bucket."
20777821,1,0,3,java.util.HashMap,"Edit : (after search, below answers, and looking in the source code of HashMap) Why should we override equals method also?"
20777821,1,0,3,java.util.HashMap,"If we don’t override equals we will not be able to retrieve values from the HashMap if we lose the reference of the keys, e.g."
20777821,1,0,3,java.util.HashMap,"The only way to read the HashMap is to use an Iterator, plus comparing the values to retrieve the exact pair: code."
20784705,2,1,1,java.util.HashMap,"In standard Java HashMap, equals is always used to determine if key is in bucket."
20784705,2,1,1,java.util.HashMap,"You did not ask this, but additionally, if you override equals without overriding hashCode, then you break HashMap keys, because hashCode probably takes you to wrong bucket, and equals will not find the key, because it only checks that one bucket."
20781895,1,0,2,java.util.HashMap,"Also, I'm using HashMap for modifiers and TreeSet for exceptions."
20782433,2,0,4,java.util.HashMap,Check you are actually using java.util.HashMap and java.util.Map in your imports.
20782815,1,0,4,java.util.HashMap,I have read few similar type of problems on stackoverflow solved either by command pattern or HashMap.
20787465,1,0,1,java.util.HashMap,"In this method I have ArrayList<HashMap<String,String>> How I can reduce usage of memory?"
20788551,2,1,1,java.util.HashMap,"If I have read your code correctly, you are using HashMap instances to represent ""records"" that represent timetable items."
20788551,2,1,1,java.util.HashMap,A HashMap is a (relatively) expensive data structure that uses a (relatively) large amount of space.
20788551,2,1,1,java.util.HashMap,"Another problem is that your ""link"" HashMap seems to be completely unnecessary."
20788073,2,0,2,java.util.HashMap,"Note that I changed the HashMap to a LinkedHashMap, in order to keep the insertion order."
20793609,1,0,1,java.util.HashMap,Difference between using Map and HashMap as declared type.
20793609,1,0,1,java.util.HashMap,Any advantages of using the interface Map instead of HashMap in this particular case?
20793630,2,1,3,java.util.HashMap,"The HashMap is an implementation of Map, which is part of the Java Collections Framework."
20793630,2,1,3,java.util.HashMap,"If you settle on using the HashMap and then the other party wishes for something different, like LinkedHashMap (preserves iteration order), then you have to change things around."
20793724,2,0,0,java.util.HashMap,"in the perspective of the object-oriented,During compilation,  the method is bound reference class type, so HashMap map = new HashMap(); You can us hashMap methods ,Including the realization map and extended."
20793724,2,0,0,java.util.HashMap,"But , Map map = new HashMap();  You can only use methods declared in map .Can not used hashMap methods."
20795040,1,0,0,java.util.HashMap,"It seems that the HashMap has no indexer and caused NullPointer Exception, now the problem is solved by using column name: code."
20795642,2,0,0,java.util.HashMap,you seem to misuse the HashMap put method.
20799803,2,0,0,java.util.HashMap,"EDIT: To explain very briefly any cache can be treated as HashMap, now imagine when spring will try to cache your object it will need a key to put your returned object against it."
20802316,1,0,0,java.util.HashMap,"I am getting values in SimpleAdapter from ArrayList<HashMap<String, String>> and want to pass these values from SimpleAdapter to array[]."
20803293,1,0,0,java.util.HashMap,How to add HashMap values to List and print the same.
20804795,2,0,1,java.util.HashMap,If you have a lot of students per class I would follow @David advice and use a HashMap or similar data structure so that you don't need to loop through all of the class students (O(n)) to find out if you are adding a new student.
20808415,1,0,0,java.util.HashMap,Sort Double Double HashMap Java/Processing.
20808471,2,0,2,java.util.HashMap,"If it is possible, replace HashMap by an implementation of NavigableMap, such as TreeMap."
20808471,2,0,2,java.util.HashMap,The iteration order of a HashMap is undefined.
20813101,2,1,0,java.util.HashMap,If you want to change the value with key 'javax.persistence.jdbc.password' in your HashMap you need to change the line: code.
20818708,2,0,0,java.util.HashMap,"Alternatively, you can create a HashMap if you want to give a ""name"" to each results."
20821930,2,0,0,java.util.HashMap,"Or, to sort the entire map in descending order of frequency (4, 2, 1), declare it as a TreeMap instead of a HashMap, with a reverseOrder comparator: code."
20825783,2,0,0,java.util.HashMap,"Create a hashMap Object where the key is a string (the country) and the value is an integer (number of cities found for the country) so it would be something like Map countryResultsFoundMap = new HashMap< String,Integer>(); In short, for each row you would pick the country, (I would recommend that you .trim() and .toLowerCase() the value first) and check if it is existing in the hashMap, if not, add the entry like countryResultsFoundMap.put(country,0), otherwise, if the country already exists the pick the value from the hashMAp and add +1  to its integer value."
20825724,2,0,0,java.util.HashMap,You can have a HashMap's with key and value pairs.
20825724,2,0,0,java.util.HashMap,By getting value from both the HashMap's so you get two List's of value.
20836395,2,0,0,java.util.HashMap,Instead of using HashMap for caching mechanism always use WeakHashMap.
20827600,1,0,0,java.util.HashMap,I want to send to request as a HashMap and also want to receive as a HashMap.
20827911,2,0,2,java.util.HashMap,"HashMap is serializable by itself,in case all Key and Value objects are serializable and in your case key and value objects are String objects."
20827911,2,0,2,java.util.HashMap,So you can serialize your HashMap to a byte array as follows: code.
20827900,2,1,0,java.util.HashMap,You can loop through the HashMap you got as input to add those key/values to SoapObject.
20827900,2,1,0,java.util.HashMap,"After you recieve the response from the server, you need to parse the result according to the soap method's output format and fill them into a new HashMap or to an ArrayList object(depends on your needs) you create."
20829871,1,0,0,java.util.HashMap,Using a HashMap with my object as a key.
20832689,2,0,1,java.util.HashMap,"If you want to use containsKey function of HashMap, maybe you should use String or Number instead of MyDateClass."
20837483,2,0,0,java.util.HashMap,it is better to use HashMap instead of array list so when you put an existing element into a map the value is overwritten.
20842180,2,1,1,java.util.HashMap,"update: 2013-12-31  I am not  trying to make things complex,but I really feel it is my responsibility to not  mislead others,so I try to fixed the code  again.Currently, HashMap can't be append,please improve it.Thanks!"
20843368,1,0,1,java.util.HashMap,"I would like to have a global HashMap <String, String> available to my whole project."
20843722,1,0,2,java.util.HashMap,"However, to me this sounds like something that could be achieved far more elegantly and efficiently using a HashMap that links up to an Operation that contains a Method and the number of parameters so I could each method to a HashMap like: code."
20843722,1,0,2,java.util.HashMap,Another example I have seen on stackoverflow that looked quite elegant but I don't fully understand is the first solution of the top answer on: How to call a method stored in a HashMap?
20937276,2,0,1,java.util.HashMap,b) Create the following HashMap code.
20849600,2,1,3,java.util.HashMap,Then just do one more loop (iterate through the keys of the HashMap) and print the counts out.
20849809,1,0,0,java.util.HashMap,clarifying facts behind Java's implementation of HashSet/HashMap.
20849809,1,0,0,java.util.HashMap,Which one does HashSet/HashMap make use of?
20849809,1,0,0,java.util.HashMap,I realise that a good HashMap relies on a good hash function.
20849809,1,0,0,java.util.HashMap,How does Java's HashSet/HashMap hash the objects?
20849935,2,0,2,java.util.HashMap,Question 1) The Java HashMap implementation uses the chaining implementation to deal with collisions.
20850000,2,1,2,java.util.HashMap,"You could answer many of these questions yourself, by reading the source code for HashMap."
20850000,2,1,2,java.util.HashMap,"search for ""java.util.HashMap source"".)"
20850000,2,1,2,java.util.HashMap,Which one does HashSet/HashMap make use of?
20850000,2,1,2,java.util.HashMap,How does Java's HashSet/HashMap hash the objects?
20850000,2,1,2,java.util.HashMap,"Specifically, Java's HashMap, HashSet and related classes place the following requirement on hashcode() and equals(Object):  If a.equals(a) then a.hashcode() == b.hashcode()."
20850000,2,1,2,java.util.HashMap,"While a is in a HashSet or is a key in a HashMap, the value returned by a.hashcode() must not change."
20850686,1,0,2,java.util.HashMap,"I have an HashMap<String, String> which keeps the filename and the display name of an image."
20850686,1,0,2,java.util.HashMap,I read a file line by line and add the key and values to HashMap.
20850686,1,0,2,java.util.HashMap,All the other key/values work and are properly stored in the HashMap.
20850686,1,0,2,java.util.HashMap,EDIT: This makes no sense at all... After I added the content to HashMap I runned the code that MagicMan provided to check if all the entrys are inside the HashMap code.
20851387,2,0,0,java.util.HashMap,"And I change the code from private HashMap imageStatues = new HashMap(); to private HashMap<Integer, Boolean> imageStatues = new HashMap<Integer, Boolean>(); It is working."
20859295,2,0,2,java.util.HashMap,"Google AppEngine Datastore writes and reads only simple Java data types listed in the Java Datastore Entities, Properties, and Keys documentation, not HashMap<String,String> or List<KeyValuePair> collections."
20859295,2,0,2,java.util.HashMap,"Thus the best fit for your Java program would be a HashMap<String,String>."
20855104,1,0,0,java.util.HashMap,So i have done is: I created a HashMap i which i gets me the value that i select in the select option code.
20858793,2,0,0,java.util.HashMap,But if you really want to dynamically set variable names based on Strings you need a HashMap.
20858793,2,0,0,java.util.HashMap,In which case you don't need the HashMap.
20859781,2,0,2,java.util.HashMap,"A 2D array is just a bidimensional grid of objects, an HashMap is a special kind of associative array (called also dictionary or map) which associates generic keys to generic values."
20859781,2,0,2,java.util.HashMap,"The HashMap is not the only one existing, a TreeMap, for example, exists too, which provides roughly the same interface but a totally different implementation."
20859781,2,0,2,java.util.HashMap,The other main difference is that an HashMap is made to fulfill a specific requirement which is unnecessary in an array: being able to store sparse keys without wasting too much space while keeping complexity of get and set operation constant.
20859781,2,0,2,java.util.HashMap,In an HashMap there is no such requirement since elements are stored by using an hash code and bucketed in a lot less cells than the required one.
20860066,2,0,0,java.util.HashMap,"Given that, it would be trivial to have a HashMap that translates the color names into the appropriate Hex code."
20862608,2,0,0,java.util.HashMap,"You can have a HashMap with key as (Questions,Answers..) and ArrayList as value code."
20863500,2,0,0,java.util.HashMap,"Alternatively, it can still be achieved via a custom class possible extending HashMap."
20864419,2,0,0,java.util.HashMap,Then adding the first and last name to the HashMap with: code.
20866938,2,0,1,java.util.HashMap,"Simple HashMap<Integer,Integer> will work."
20869325,1,0,4,java.util.HashMap,Well the above code was written earlier for writing HashMap to BLOB i am using same for converting ArrayList if HashMap to BLOB.
21336478,2,1,0,java.util.HashMap,"The solution to my first question is that in order to save neighbors, you shouldn't use a stack, but use a HashMap."
21336478,2,1,0,java.util.HashMap,You generally want to know something about how to find the neighbor from the current location (direction to move in) which you can use as a key in the HashMap.
20875578,1,0,1,java.util.HashMap,Alphabetize a HashMap of Characters.
20875578,1,0,1,java.util.HashMap,I have a program that takes the number of instances of a character in a string and then puts them into a HashMap.
20875578,1,0,1,java.util.HashMap,"I have it working, but how do I alphabetize the HashMap."
20875578,1,0,1,java.util.HashMap,What do I need to add to make it alphabetize/reorganize the HashMap?
20875618,2,1,2,java.util.HashMap,"An HashMap is, by default, unsorted."
20875618,2,1,2,java.util.HashMap,If you need a sorted map then you will have to look into a TreeMap which supplies the same interface as a HashMap but it's inherently sorted on keys according to their natural ordering (or a custom Comparator).
20875633,2,0,0,java.util.HashMap,"Most maps, including HashMap, make no promises about order of contents."
20875633,2,0,0,java.util.HashMap,"Difference between HashMap, LinkedHashMap and SortedMap in Java"
20881899,2,0,0,java.util.HashMap,"Also read about HashMap and HashTable (based on KEY-VALUE retrieval), will be helpful in future."
20881734,2,0,1,java.util.HashMap,And HashMap is a totally different type of datastructure implementing Map which stores key value pairs.
20881734,2,0,1,java.util.HashMap,"So don't be confused about List, LinkedList, HashMap ... better ready the structures of these."
20885742,1,0,5,java.util.HashMap,HashMap JAXB mapping using @XmlAnyElement.
20885742,1,0,5,java.util.HashMap,I'm trying to realize an XML mapping involving an HashMap.
20885742,1,0,5,java.util.HashMap,--- UPDATE --- I found a promising solution here : JAXB HashMap unmappable The only inconvenient is that it seems to mess up the namespaces.
20888170,1,0,1,java.util.HashMap,null pointer exception when retrieving from HashMap even though containsKey() returns true.
20888170,1,0,1,java.util.HashMap,"I've been developing an Android guitar app, and currently I'm having some problems with HashMap."
20888170,1,0,1,java.util.HashMap,"To sum it up, I get a nullpointer exception when I try to retrieve a value from a HashMap with get(key) despite containsKey(key) returning true for that key."
20888170,1,0,1,java.util.HashMap,"Specifically, I have an instance _currentPreset of a class, which has a HashMap called _maxCoordRange, which is initialized in the class like this:    code."
20888170,1,0,1,java.util.HashMap,"I get a nullpointer exeption when I try to retrieve the value corresponding to the pareterName from the HashMap with getMaxCoordRange, despite containsKey(key) returning true."
20958700,2,0,2,java.util.HashMap,What this does is create a temporary HashMap that is then added to our temporary variable and this is finally added to our new variable.
20889684,2,0,0,java.util.HashMap,"For sorting, you can keep the file-name and size in a HashMap and then use a custom comparator to sort out the entire dictionary using Collections.sort"
20890619,2,1,0,java.util.HashMap,The HashMap toString method produces output similar to the original.
20894516,1,0,2,java.util.HashMap,Lock is lost when putting ReentrantLock into HashMap.
20896409,2,1,2,java.util.HashMap,"If you want to use ArrayList<HashMap<String, String>> in multiple activity then better to save as application level for this you can use Application class."
20897263,1,0,0,java.util.HashMap,"to store golbal data of ArrayList<HashMap<String, String>> arraylist structure  Error i am facing:  In the ResultActivity.java at line ArrayAdapter<String> adapter=new ArrayAdapter<String>(ResultActivity.this,R.layout.custom_single_list,R.id.textView1, arraylist); I am getting error as :: The constructor ArrayAdapter<String>(ResultActivity, int, int, ArrayList<HashMap<String,String>>) is undefined what i need to modify in ListViewAdapterForAtomicListItemtype.java   BLD_IndividualListOfItems_Starters.java code."
20897286,2,1,1,java.util.HashMap,"Your ArrayList is ArrayList<HashMap<String, String>> arraylist."
20899930,2,0,2,java.util.HashMap,"You can see that JSONObject extends a HashMap, so you can simply use it as a HashMap: code."
20902695,1,0,0,java.util.HashMap,But when i use HashMap instead of LinkedHashMap it works but output gets sorted as below (Its not original order).
20905731,2,1,0,java.util.HashMap,"Even if you tell flexjson to return the data as a LinkedHashMap the data is yet put into a HashMap before it will be converted to a LinkedHashMap, so the original order is not available at that point."
20913769,2,0,0,java.util.HashMap,"Change your list to HashMap<Integer, Integer>  This should speed things up."
20913769,2,0,0,java.util.HashMap,The HashMap  will map the index N to the sequence element a[N].
20915562,2,0,2,java.util.HashMap,"Store the dictionary in a HashSet or HashMap and you can quickly check for a match, just scan your string looking for the first non-alphanumeric."
20919868,2,0,0,java.util.HashMap,"Use a HashMap<String,Integer> storing the String as the key and the number of occurrences as an Integer."
20919871,2,0,1,java.util.HashMap,"You're looking for a Map<K,V> implementation, have a look at HashMap<Object, Integer>"
20922164,1,0,0,java.util.HashMap,How to check whether a HashMap has all the elements of an ArrayList?
20922164,1,0,0,java.util.HashMap,"If I have a HashMap hashM, an ArrayList arrayL."
20922241,2,0,0,java.util.HashMap,"ArrayList, HashSet, HashMap)."
20922272,2,0,1,java.util.HashMap,Your code is correct except..  if (hashM.values().containsAll(arrayL)) {....}  [EDIT]  You can use HashMap.containsValue(Object value) code.
20922824,2,0,0,java.util.HashMap,You can put your all markers in HashMap: code.
20924865,2,0,1,java.util.HashMap,Instead of boolean its HashMap in your case.
20928293,1,0,0,java.util.HashMap,Java - Mapping a description to a word with Map/HashMap.
20945574,2,1,7,java.util.HashMap,"If you look at the code for HashMap (which HashSet uses internally), you'll notice an inner static class Entry, defined like so: code."
20945574,2,1,7,java.util.HashMap,"That's right, HashMap stores the key's hash code along with the key and value."
20945574,2,1,7,java.util.HashMap,it is safe for HashMap to cache this value.
20945574,2,1,7,java.util.HashMap,"By the contract of these methods, it should be safe for HashMap to skip this call."
20945574,2,1,7,java.util.HashMap,"If your objects are incorrectly implemented, these assumptions being made by HashMap are no longer true, and you will get back unusable results."
20948756,1,0,1,java.util.HashMap,I created one example to understand concurrent HashMap but it seems to be giving indeterministic outout after 7-8 runs.
20948756,1,0,1,java.util.HashMap,"In my example, I create three threads(they are mimicking three services to fetch scores for Math,Science,English ) which update a concurent HashMap which has just 3 key value pairs (Keys are three names A,B,C and values at the end of the run should be cumulative score for three subjects) I am posting the code below, pls advise."
20949177,2,0,1,java.util.HashMap,Instead you can use regular HashMap parametrized by String key and AtomicInteger value: code.
20949703,2,1,0,java.util.HashMap,In this case your HashMap only access just after the initialize.
20949703,2,1,0,java.util.HashMap,So then HashMap now contains with values.
20949485,2,0,0,java.util.HashMap,You are trying to access the HashMap entries before you've put them in there.
20952235,2,1,1,java.util.HashMap,Your code invokes Field.get() on a new instance of HashMap.
29077166,2,0,0,java.util.HashMap,"So I just figured it out through some trial and error with my code: If you're like me and you have to use Java Reflection, then read on, otherwise, @Duncan already mentioned an efficient way by just making a method for getting your HashMap for testing purposes."
29077166,2,0,0,java.util.HashMap,"In my case I had to use a HashMap that mapped Strings to Integers and my final casting error was that I could not compare an int and an Integer using assertEquals, so I casted Integer to int: code."
29077166,2,0,0,java.util.HashMap,"So you can see that using the cast call (HashMap<String, Integer>) map.get(keys1) I set the Field map instance to reference my object class KeywordCollection which has my HashMap, then casted it from an Object to a HashMap so I could access my HashMap methods."
20952316,2,0,0,java.util.HashMap,"Otherwise you're trying to retrieve the testMap field of a HashMap, which doesn't exist."
20952721,2,0,2,java.util.HashMap,"Because you're putting nothing in your HashMap<String, Integer> Data_Int for the GDHinstance in your Print()method."
20956058,2,0,0,java.util.HashMap,"Since you can't sort items in a HashMap, nor you can sort them by value in a TreeMap you could use a TreeSet with a custom class: code."
20957536,1,0,6,java.util.HashMap,"Now, the error originates at the line where I start putting all of the prime products of numbers into my HashMap (trying to map each prime product to a LinkedList of words whose letters multiply into that number.)"
20962184,2,0,1,java.util.HashMap,To do this you will need a map that is heterogenous (can have objects of any type) and as such it will need to be a HashMap with no type arguments (or ?
20969209,2,0,1,java.util.HashMap,If you are using any hash related data structure like HashMap or HashSet then you need to override hashcode() method.
20970431,1,0,1,java.util.HashMap,NullPointerException using HashMap.
20970431,1,0,1,java.util.HashMap,I am trying to filter this exception by checking whether the HashMap is Null using an if statement.
20970431,1,0,1,java.util.HashMap,If the HashMap is null then running a method which loads it with values however seems that the if statement is also giving an NullPointerException.
20970431,1,0,1,java.util.HashMap,sqldata is the Hashmap and it is being loaded elsewhere however there is a possibility that it might not have any values (as per design) in which case I am trying to check (if the HashMap is empty/null) and reload it using a code snippet below: code.
20970753,2,0,0,java.util.HashMap,In your code you are try to calling method isEmpty() using null reference of you HashMap object.
20970532,2,0,1,java.util.HashMap,First you need to check whether sqldata is null or not then you can proceed to check whether HashMap is empty.
20970553,2,0,1,java.util.HashMap,The reason for null pointer exception might be that you HashMap is never instantiated.
20970553,2,0,1,java.util.HashMap,One way to correct this is to ensure that the HashMap is always instantiated and then restructuring the code in the following way: code.
20970553,2,0,1,java.util.HashMap,"However, if you do not want an enforced instantiation of the HashMap object, then you need to check that is it null or not and once you have checked that, you should proceed to check whether it is empty."
20975186,2,0,0,java.util.HashMap,To know the insert order of the elements in a collection like HashMap is not possible.
20975186,2,0,0,java.util.HashMap,"LinkedHashMap is similar to HashMap, the only difference between them is that LinkedHashMap knows the insert order."
20977312,2,0,1,java.util.HashMap,That way if your HashMap param returns null you know that value was not set on the query string.
20978261,1,0,1,java.util.HashMap,Strugging to simplify HashMap object placement.
20987449,1,0,0,java.util.HashMap,"I have been working with implementing drag feature into <p:schedule prime face Calendar In order to identify, on which event that i have clicked, i at first added the ScheduleEvent into the HashMap."
21000128,1,0,0,java.util.HashMap,"It says: ""The method alterRights(int, HashMap) in the type DBManager is not applicable for the arguments (int, HashMap)""."
21000128,1,0,0,java.util.HashMap,"In a former version, the method actually was alterRights(int, HashMap<Integer,String>), but I changed it and it even worked until I changed something else."
21002078,2,0,6,java.util.HashMap,"You have an ArrayList that can hold HashMaps, but is currently empty.You have to add a new HashMap to the index you want to use before you use that index."
21002871,2,0,1,java.util.HashMap,"In your previous solution, you're calling data.set(currRec, temp); which assumes there is a HashMap element in position currRec of your ArrayList."
21008518,2,0,3,java.util.HashMap,Use HashMap instead of HashTable like this: code.
21010464,1,0,1,java.util.HashMap,"However, I decided to create a singleton ImageLoader class that has a HashMap that caches images already loaded once and stores and/or returns new BufferedImages."
21012360,1,0,1,java.util.HashMap,Now I am using HashMap to map a elementID to the element Object in anArrayList.
21012360,1,0,1,java.util.HashMap,What are the options other than using ArrayList and HashMap in this case (to keep the order of a large data set and still have ability to get quick mapping from a key to the object)?
21014552,2,0,4,java.util.HashMap,"Your JSON is an array of objects, not anything resembling a HashMap."
21014712,1,0,0,java.util.HashMap,Not able to serialize java.util.HashMap object.
21016294,1,0,2,java.util.HashMap,At the moment I have created an index and I read the number into one HashMap and the date into the other HashMap.
21017229,2,1,3,java.util.HashMap,"The above approach leads also to another solution - using a HashMap<String, Clicker>, so that String is a key."
21017636,2,1,0,java.util.HashMap,"HashMap<Date, List<DbRow>> where DbRow is a class with fields empname, ename and so on."
21020107,1,0,3,java.util.HashMap,: HashMap.
21020107,1,0,3,java.util.HashMap,"And if I change the HashMap to < String, char> I'll get: code."
21020263,2,0,0,java.util.HashMap,"HashMap<String, Character>."
21020135,2,0,0,java.util.HashMap,"You have to use Wrapper objects Character instead of primitive char type Use : HashMap<String,Character>  After declaring the reference type as HashMap<String,Character> , you can simply put char primitive as value into it."
21020457,1,0,0,java.util.HashMap,Fill Array with HashMap.
21020457,1,0,0,java.util.HashMap,"Updated: I filled an array through HashMap, Iam using Asynctask for http request & after filling array put that array in dialog box."
21024653,1,0,0,java.util.HashMap,How to get the value easily out of the HashMap and of the Object?
21025511,2,0,1,java.util.HashMap,From there now accessing the numericValue from a HashMap should be as easy as: code.
21029246,1,0,0,java.util.HashMap,"Updated Question from previous: I filled an array through HashMap, Iam using Asynctask for http request & after filling array put that array in dialog box."
21034485,1,0,2,java.util.HashMap,"In my troubleshooting I also tried to bind to ListMap[String, ListMap[String, Object]] to maintain key ordering but Jackson still ended up binding to a HashMap."
21060561,2,1,1,java.util.HashMap,"(So map can hold a value of type HashMap<Integer, Object> or HashMap<String, Object> or else)."
21042012,1,0,0,java.util.HashMap,Convert HashMap which stores String[] to a new HashMap with only the String[0].
21042012,1,0,0,java.util.HashMap,this HashMap stores some String arrays: code.
21042012,1,0,0,java.util.HashMap,I need to convert it to a new HashMap with all the same keys and value as String[0] like this code.
21042012,1,0,0,java.util.HashMap,Referring to JavaDocs here: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html I have identified clone() and putAll() functions that might help with this but cannot think how.
21042067,2,0,1,java.util.HashMap,"The iterate over the keys get the value, split() the value get the 0th index of array that is returned from the split() function and store it in your new HashMap."
21049814,2,1,1,java.util.HashMap,Let's say you have a HashMap that looks like the following: code.
21049842,2,0,3,java.util.HashMap,"As I said in comments, I wouldn't go for an HashMap, but for a SortedMap instead (a TreeMap per example), which have a subMap method : code."
21050294,1,0,2,java.util.HashMap,Problems looping over a HashMap.
21050294,1,0,2,java.util.HashMap,I've got a basic HashMap.
21054415,1,0,1,java.util.HashMap,Desired output(HashMap):      code.
21054536,2,0,1,java.util.HashMap,"You can't explicity sort the HashMap, but can sort the entries."
21087586,2,1,23,java.util.HashMap,This is exactly what HashMap would do if you gave it the concatenated string as a key.
21059945,1,0,4,java.util.HashMap,File to HashMap.
21059945,1,0,4,java.util.HashMap,I have a file on memory and I want to construct a HashMap of the type:  code.
21062625,1,0,2,java.util.HashMap,"So, to get this working in Spring MVC, I need to translate ViewDepartment object to instance of org.springframework.ui.Model, one way is to build org.springframework.ui.Model from HashMap:  code."
21062625,1,0,2,java.util.HashMap,"Creating HashMap object and manually setting each attribute from each property is not option, because it`s not DRY."
21067622,2,0,0,java.util.HashMap,"Rather than trying to generate a variable name to store something (which is rather complicated and probably not what you really want to do), why not generate a key that you can put into a HashMap or something similar?"
21068006,1,0,4,java.util.HashMap,"Using a HashMap to store large amounts of data is slowing down my Android app, are there other options?"
21068006,1,0,4,java.util.HashMap,I've written an Android application for my school that generates a HashMap which maps a course name to an ArrayList of available sections for that course (Strings).
21068006,1,0,4,java.util.HashMap,"The map is generated using JSoup to connect to the school website and get all the current course information, parse and format it, and create the HashMap>()."
21068006,1,0,4,java.util.HashMap,"However, it literally takes around 5 minutes for the HashMap to generate on an Android device."
21068006,1,0,4,java.util.HashMap,"I'm a relative novice in programming and I was wondering if there are other, more efficient ways of storing and dealing with such a large amount of data (The HashMap maps to around 800 ArrayLists, which in turn contain several Strings each)."
21068006,1,0,4,java.util.HashMap,Thanks Edit: Here's the method that creates the HashMap.
21070559,2,0,0,java.util.HashMap,"To do such a task, HashMap is the best choice."
21070559,2,0,0,java.util.HashMap,I suggest you use a HashMap to do this task.
21070559,2,0,0,java.util.HashMap,You can use a HashMap to reduce it down to O(n).
21070559,2,0,0,java.util.HashMap,Using a HashMap also helps you deduplicate.
21076325,2,0,0,java.util.HashMap,"If you haven't learned about the Java HashMap class, it would be a great place to start."
21076325,2,0,0,java.util.HashMap,"In essence, a HashMap maps key/value pairs."
21076325,2,0,0,java.util.HashMap,"With this in mind, a design for the Month class could be to have a static HashMap that is pre-loaded with key/value pairs, such as 1 = 'January', 2 = 'February', so on and so forth."
21077193,1,0,0,java.util.HashMap,What key ordering in HashMap?
21077193,1,0,0,java.util.HashMap,I'm surprised by the order my HashMap comes out.
21077193,1,0,0,java.util.HashMap,java code: HashMap testing: code.
21077216,2,1,4,java.util.HashMap,"The ordering of a plain HashMap is not defined:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
21077216,2,1,4,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
21077216,2,1,4,java.util.HashMap,"This implementation spares its clients from the unspecified, generally chaotic ordering provided by HashMap (and Hashtable), without incurring the increased cost associated with TreeMap."
21077227,2,0,2,java.util.HashMap,A basic HashMap is not ordered.
21080451,1,0,1,java.util.HashMap,"My hashmap collection is:  HashMap<String,Job>jobs = new HashMap < String,Job>(); My method in the other class (Branch) has the method for getting all the Jobs: code."
21080451,1,0,1,java.util.HashMap,"In this JTextFiled, it should be entered key value of hashmap indicating Customer Name which is declared as String in the HashMap collection shown  above."
21083039,2,0,1,java.util.HashMap,"Don't bother with a concurrent implementation, just use HashMap or LinkedHashMap or whatever."
21085224,1,0,1,java.util.HashMap,"I have the following 3 elements: 1) String data , 2) String status and 3) HashMap<String,String> headers, which need to be passed to setContent(byte[] data) as byte arrays."
21088692,2,0,0,java.util.HashMap,"I don't know how you process those properties afterwards, but what if you used a HashMap for storing them as key-value pairs?"
21091586,1,0,1,java.util.HashMap,"Users will be expected (and) told to input their commands in a particular format: When creating the shape, it will be shape name Each shape is stored in a HashMap at the moment where the string is the name When wanting to edit/use the shape, it will be name command variable - I think I've got as far as calling the shape from the HashMap, now I'm just wondering how I can make my string secondCommand useable so as to call the method from the other class."
21093987,1,0,0,java.util.HashMap,Why is my HashMap not getting populated.
21093987,1,0,0,java.util.HashMap,"My code for finding factorial for integers upto 100.I am using BigInteger, but my problem is that my HashMap is not getting populated."
21094973,1,0,0,java.util.HashMap,How to convert HashMap to own type array?
21094973,1,0,0,java.util.HashMap,how to convert values into my HashMap to HashMapObject [] array?
21095557,2,0,2,java.util.HashMap,Check out HashMap here.
21097370,1,0,1,java.util.HashMap,"ActivationMailService Note: I tested removing the @Autowired on SendMail, HashMap and EmailTemplateService."
21098175,1,0,5,java.util.HashMap,[Ljava/util/HashMap$Entry;  Try: Run with --stacktrace option to get the stack trace.
21098801,2,0,0,java.util.HashMap,"1.HashMap is only one of the fastest data structures implemented in java to insert/delete/search，HashSet is as fast as HashMap to insert/delete/search,and ArrayList is as fast as HashMap when insert a element to the end."
21098801,2,0,0,java.util.HashMap,"2.Hashtable is not more memory efficient than HashMap,they are all implemented by separate chaining."
21099399,2,0,0,java.util.HashMap,ArrayList is significantly faster than HashMap depending on that you need it for.
21099399,2,0,0,java.util.HashMap,If you make a HashMap with a smaller capacity it will be smaller.
21098632,2,0,0,java.util.HashMap,The access time of HashMap (& HashTable as well I believe) is O(1) since the internal bucket placement of the given value during put() is determined by computing (Hash of the value's key) % (Total Number of buckets).
21098632,2,0,0,java.util.HashMap,I vote for HashMap...
21098672,2,0,0,java.util.HashMap,A HashMap maps keys to values which is different.
21098672,2,0,0,java.util.HashMap,Refer to this discussion to understand the differences between the HashMap and Hashtable.
21098446,2,0,0,java.util.HashMap,"HashMap (or, more likely, HashSet) is probably a good place to start, at your point."
21105634,2,0,1,java.util.HashMap,The index can be implemented with HashMap: code.
21108235,2,0,2,java.util.HashMap,"Non-GUI Classes to consider:  Stock classes with String name, double (or BigDecimal) value, String abbreviated name Player that holds a String for name, a HashMap<Stock, Integer> for Stocks held and number of shares."
21109905,2,1,4,java.util.HashMap,"It just creates a new HashMap, builds it and when finished replaces the whole thing."
21120479,2,1,1,java.util.HashMap,You'll want to use a HashMap to avoid recalculating the same numbers multiple times.
21120479,2,1,1,java.util.HashMap,Checking if the HashMap already contains the number is a quick process and can save you many steps.
21120185,2,0,2,java.util.HashMap,"Map in C++ is not HashMap, but rather an ordered map (implemented usually as a red-black tree)."
21121139,2,0,0,java.util.HashMap,Once you have read all the lines: Convert your HashMap into a List code.
21129060,2,0,0,java.util.HashMap,Use a HashMap instead of the array numTimesAppeared.
21132589,1,0,0,java.util.HashMap,My question is how can I fetch the results as a KEY and VALUE pair of a HashMap?
21132589,1,0,0,java.util.HashMap,I should get one HashMap with key as the value of col1 and values as the object that contains the values of col2 and col3.
21133323,2,0,1,java.util.HashMap,"in the HashMap), you need investigate why this happens by debugger and/or reading sources for that class."
21140951,2,1,1,java.util.HashMap,Or you can try using a HashMap with Integer and Boolean and have the boolean represent if the card is taken.
21144765,2,1,15,java.util.HashMap,I updated this to use a HashSet instead of a HashMap so it was more straightforward (as pointed out by PM 77-1).
21148378,2,0,0,java.util.HashMap,http://en.wikipedia.org/wiki/Hash_table http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Because it's an alphabetical string sort and 0 is after .
21155480,2,0,1,java.util.HashMap,"The hashCode is used in structures such as HashMap as a value for knowing which ""bucket"" to store the object in."
21155865,2,0,1,java.util.HashMap,An additional clarification is that .... objects are never stored inside a HashMap.
21155865,2,0,1,java.util.HashMap,"On retrieval, actual reference is picked from the location (given by HashMap) and provided to caller."
21155671,2,1,6,java.util.HashMap,I suppose you are using HashMap like this: code.
21155687,2,0,2,java.util.HashMap,"According to the JavaDocs, the HashMap can take the data types of what it is storing, so if you do this: code."
21160153,1,0,1,java.util.HashMap,"I have a variable of type HashMap<String, HashSet<Long>> and it's size can grow upto 100MB."
21162421,2,0,0,java.util.HashMap,"For example: create a hashmap of objects indexed by your 'traitName' value above; instead of if/then/else, get a reference to the corresponding object using HashMap.get(), and put the calculation method in that object."
21163586,2,0,1,java.util.HashMap,HashMap is a generic class which is parameterized over type.
21163612,1,0,0,java.util.HashMap,"For example, to display items stored in item1 (stored in HashMap as key1) this is what I've tried, with hard luck: code."
21170035,1,0,0,java.util.HashMap,"When we create a Collection (ArrayList,HashMap) in Java, does Java internally create some kind of index for faster retrieval of data ?"
21170643,2,1,0,java.util.HashMap,"A HashMap uses a slightly more complex indexing scheme... For a HashMap, all indexing information is hidden from you first of all, so you don't really need to know this unless you want to understand its internal workings (which is a good thing!)"
21170643,2,1,0,java.util.HashMap,"The index of an entry in a HashMap is simply h & (length - 1) where h is the hashCode of the key, passed through a custom hashing method internal to the java.util package (you won't be able to access it), and length is a power-of-two integer representing the size of the array of Entrys (this will automatically grow if need be)."
21170643,2,1,0,java.util.HashMap,This is why HashMap uses an array of linked lists.
21170643,2,1,0,java.util.HashMap,"To get an object in HashMap, the index is calculated from the key you provide through get(key) and the relevant Entry is retrieved from the array of Entrys."
21170873,2,1,4,java.util.HashMap,"If equals and hashCode use mutable fields and you put the affected object in a HashMap and the values change, then all bets are off."
21177084,2,1,1,java.util.HashMap,This can be done with HashMap with the requested url String.
21174924,1,0,0,java.util.HashMap,I store all parsed values  in HashMap collection.
21174924,1,0,0,java.util.HashMap,However when I iterate through HashMap collection I can get only last key/value (NOT all of them).
21176108,2,0,0,java.util.HashMap,"suppose you have something like HashMap map for field=>value then you can do (if you dont want to query with value, you can take out the where statement) code."
21176395,2,0,1,java.util.HashMap,a HashMap) and ArrayList.
21176395,2,0,1,java.util.HashMap,"EG: HashMap<String, ArrayList<wordLocation>> lookup= new HashMap<String, ArrayList<wordLocation>>(); Example: code."
21176405,2,0,0,java.util.HashMap,"Note: I say TreeMap as opposed to HashMap, as this is closer to how databases actually work."
21176405,2,0,0,java.util.HashMap,"If the types of queries you're running doesn't require sorted data, you could happily use a HashMap instead."
21218764,2,1,1,java.util.HashMap,"HashMap), closes the query, the result-set and the connection (or returns it to the pool)."
21179639,2,0,2,java.util.HashMap,How to directly initialize a HashMap (in a literal way)?
21181510,2,0,1,java.util.HashMap,"Java's HashSet is implemented using a HashMap, so it's also going to have redundancies."
21188564,1,0,1,java.util.HashMap,Synchronized and unsynchronized writers to HashMap - results not as expected.
21188564,1,0,1,java.util.HashMap,Essentially the code has multiple writer threads that write to a HashMap perAccountMap_ this code is correctly synchronized.
21195891,1,0,0,java.util.HashMap,How do I read strings and int(Integer) from a text file and update values in a HashMap?
21195891,1,0,0,java.util.HashMap,This is my initial HashMap: code.
21197409,1,0,1,java.util.HashMap,If both options on top will be true - if L2 cache will be used to store shared between threads(which will add new values to map) HashMap instance and L2 will be a shared between all cores cache - does it mean that while skipping not atomic operations(if we want just to see correct/latest values in map) we can skip synchronization.
21197409,1,0,1,java.util.HashMap,For example will it be correct to have a HashMap and skip synchronization on reading existing values from Map:    Example code.
21198273,2,1,6,java.util.HashMap,"Whether the Map is a HashMap or TreeMap or ConcurrentSkipListMap, you can use the Map methods to interact with it."
21204682,2,0,1,java.util.HashMap,As for properties class you can think of it as a HashMap.
21204682,2,0,1,java.util.HashMap,It actually extends HashMap.
21205258,2,0,2,java.util.HashMap,Another option is to use a HashMap and hold a counter as the value.
21205589,2,0,0,java.util.HashMap,You can use a HashMap to rank each character and increment when the character is encountered.
21205589,2,0,0,java.util.HashMap,Iterate over the HashMap to get the counted values of each of the characters.
21207415,2,0,0,java.util.HashMap,"Searching in a HashMap is more or less O(1) so if you store the keys in a HashMap (for example) you will only need to check M times, so it will be O(M)."
21210837,2,0,3,java.util.HashMap,"Turns out this look like its ultimately just a Map<String,T> (and digging even further its a HashMap hidden deep within the Class class.)."
21209670,2,0,0,java.util.HashMap,"Storing data in memory (List, HashMap or whatever) is enormously faster."
21210580,2,0,2,java.util.HashMap,what about HashMap?
21210594,2,0,3,java.util.HashMap,It looks like you want... a HashMap of ArrayLists of some kind of pair or coordinate object.
21210594,2,0,3,java.util.HashMap,HashMap can also accept a String (instead of Integer) as a key for the lists within.
21210616,2,1,4,java.util.HashMap,You could try a HashMap The way you could use it: code.
21212875,2,0,0,java.util.HashMap,"You could use an interface to define how you're going to call the method, then instantiate one implementation of the interface for each name that you want to be able to interpret, and store the instances in a HashMap keyed by String."
21213431,1,0,2,java.util.HashMap,HashMap is a list of key/value pairs.
21213667,2,0,0,java.util.HashMap,HashMap can only contain unique keys.
21214201,1,0,2,java.util.HashMap,"I have a specific usage of HashMap, where it just stores few entries (usually less then 5-10) for String keys."
21214201,1,0,2,java.util.HashMap,I am using HashMap for this.
21214201,1,0,2,java.util.HashMap,Or HashMap is simply good enough?
21214201,1,0,2,java.util.HashMap,Does anyone know about such alternative implementations that would be a good HashMap replacement?
21215121,2,0,0,java.util.HashMap,It's a little bit faster than HashMap.
21214996,2,0,0,java.util.HashMap,"No, it's perfectly fine to modify an object that is used as a value in a HashMap while your are iterating over the HashMap."
21214996,2,0,0,java.util.HashMap,The ConcurrentModificationException only comes up if you are adding or removing entries to/from the HashMap while you're iterating over it.
21214996,2,0,0,java.util.HashMap,But never modify an object that is the key of HashMap entry while it is in the HashMap.
21216788,2,0,2,java.util.HashMap,"For example if you want to access a JTextField based on a String, you could use a HashMap<String, JTextField> and put in your String / JTextField pairs."
21217264,1,0,0,java.util.HashMap,HashMap memory allocation is not clear.
21220024,1,0,2,java.util.HashMap,"For each message the server gets I store it in the form ""timestamp: message"" in my HashMap."
21220882,1,0,1,java.util.HashMap,Using if-condition or HashMap?
21220882,1,0,1,java.util.HashMap,The provided code used lot of if statements and therefore I decided to use HashMap as retrieval would be faster.
21221048,2,0,0,java.util.HashMap,"What you did wrong is what guys are saying - you are creating a new HashMap every time the method is invoked - a static field could rather congaing the data, and populating it only once the class is being loaded my the JVM."
21221048,2,0,0,java.util.HashMap,I'd rather use simple switch on strings - the search is not worse than that of HashMap (at least asymptotically) but you don't use extra memory.
21221048,2,0,0,java.util.HashMap,But than again HashMap solution the the later one would be the same for me.
21222832,1,0,1,java.util.HashMap,"Am I correct that I can choose a HashMap<String,AtomicInteger> implementation and use no synchronization on it for getting values from it since AtomicInteger has a volatile value field underneath it."
21223258,2,0,2,java.util.HashMap,"A plain AtomicInteger[]-array is by far quickest, given that you know where to look, HashTable could be slightly quicker than HashMap."
21234702,2,0,1,java.util.HashMap,"The hashing function for a HashMap is case sensitive,  so you need to uppercase or lowercase the string values."
21237092,2,0,3,java.util.HashMap,"btw Hashtable is a legacy class, use HashMap instead"
21237112,2,1,4,java.util.HashMap,"As a side note, keep in mind that Hashtable is slower than HashMap since it synchronizes access, so unless you need that exact behavior you might try and use  HashMap or ConcurrentHashMap instead."
21238118,2,0,0,java.util.HashMap,"If you want a reliable replica of the complete User table, then construct your own HashMap<String,String>."
21239100,1,0,1,java.util.HashMap,"I tried parsing it into:  HashMap<String,List<<String>>  HashMap<String,List>`  but both times it just ends up null."
21241115,2,0,1,java.util.HashMap,"That way, you can use your HashMap<Class<?>, Integer> (or whatever you're using to do the actual counting) like so: code."
21243857,1,0,0,java.util.HashMap,"Now instead of ""DoSomething"", imagine having 20 lines of code, and for each 20 lines I use one specific HashMap."
21243857,1,0,0,java.util.HashMap,"I can't exactly populate an array and make it use the data from the Array, as it'll attempt to use Strings instead of the HashMap (calling DoSomething(""These"") instead of DoSomething(These))."
21244062,2,0,0,java.util.HashMap,"I am not sure based on your question what the DoSomething-method is supposed to do though, but I understood it as if it is supposed to return a certain HashMap depending on a certain order category that is provided as a String."
21244062,2,0,0,java.util.HashMap,"In this case you could just make a HashMap of HashMap, with a String key for the first HashMap."
21244062,2,0,0,java.util.HashMap,Depending on the Sting key provided you would then obtain the corresponding HashMap.
21245593,2,1,2,java.util.HashMap,"Why keep this in a String, when a HashMap is a much cleaner solution to your problem?"
21247635,2,0,1,java.util.HashMap,"A good place to start would be taking a look at this question: Difference between HashMap, LinkedHashMap, and SortedMap in Java HashMap is generally discouraged if you need to grab items in a specific order."
21260364,1,0,0,java.util.HashMap,WedDriverException : java.util.HashMap cannot be cast to java.lang.String when initializing RemoteWebDriver.
21260364,1,0,0,java.util.HashMap,but again got an exception WedDriverException : java.util.HashMap cannot be cast to java.lang.String This exception is thrown when setting capability for firefoxbinary code.
21262169,2,0,4,java.util.HashMap,Binary search is O(log n) while remove/getin a HashMap is O(1).
21262631,2,0,2,java.util.HashMap,"In principle there are two contributing factors:  Hashcode of your keys might be non-deterministic, this will be the case when you use default hashCode implementation, which relies on memory location HashSet itself can be non deterministic, take a look at HashMap.initHashSeedAsNeeded (HashSet uses HashMap in standard Oracle SDK as underlying datastructure), depending on some factors it can use sun.misc.Hashing.randomHashSeed(this) to initialize hashSeed field which is then used when computing hashCode of a key  Randomization can be important to achieve probabilistic performance guaranties."
21262479,2,0,2,java.util.HashMap,"The source for HashMap can be seen here: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java In fact an interesting quote from that source is:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
21262479,2,0,2,java.util.HashMap,"""Un-deterministic and a bit weird"" is a good description of ordering of a HashMap - and is actually pretty much what the docs say."
21262479,2,0,2,java.util.HashMap,"If you don't want ordering then don't worry about it, by having the ordering being effectively random HashMap is giving you extremely fast responses from the methods who's behavior it does guarantee!"
21263380,1,0,1,java.util.HashMap,Filter add ArrayList to HashMap.
21263380,1,0,1,java.util.HashMap,it looks like all HashMap with forum id have the same ChildForum.
21264702,1,0,0,java.util.HashMap,Map with HashMap inside sublist.
21264702,1,0,0,java.util.HashMap,"UPD:  Method returns List<HashMap<String, String>> only."
21264702,1,0,0,java.util.HashMap,"But I need List<String, HashMap<String,String>>"
21265034,2,1,2,java.util.HashMap,"If you are expecting the entries to be in the order you inserted them with, use LinkedHashMap instead of HashMap."
21272000,2,0,0,java.util.HashMap,"So using this knowledge, you can use hashCode for many things, for   example for a HashMap."
21272000,2,0,0,java.util.HashMap,In HashMap you want to find a matching key   quickly when you do a lookup.
21275273,2,0,0,java.util.HashMap,First solution that comes to my mind is to use a HashMap.
21275273,2,0,0,java.util.HashMap,Simply create a HashMap with the 'phonenumber' as key and your object as the value.
21280982,2,1,6,java.util.HashMap,"If you are using the programmatic configuration instead then you will have to do it in the @Configuration class yourself - see Converting java.util.Properties To HashMap<string,string>."
21279707,2,0,0,java.util.HashMap,I think you might have to cast the object returned by the HashMap to be a TestModel before you can use a method of that class.
21288900,1,0,0,java.util.HashMap,"I working on a project in Java and I want to put text in a HashMap using GSON,here is my JSON:   code."
21290366,2,1,1,java.util.HashMap,Use a HashMap.
21290366,2,1,1,java.util.HashMap,"This way, you will have a name for each of your ""arrays"" (which will be an entry in the HashMap, in this case)."
21290155,1,0,8,java.util.HashMap,Java HashMap: why resize is implemented the way it is?
21290155,1,0,8,java.util.HashMap,"I will ask questions based on these facts (they are true for Oracle JVM, not sure if they are correct for  other JVMs):  Resize rebuilds HashMap to have a bigger inner table array every time when you grow HashMap bigger than threshold (threshold = loadFactor*numberOfEntries)."
21290155,1,0,8,java.util.HashMap,HashMap does not shrink when data is removed.
21290155,1,0,8,java.util.HashMap,"Even if all keys are removed from HashMap, the inner size of it's table does not change."
21290258,2,1,6,java.util.HashMap,"If you want to start the map over with a smaller table, you can just assign it to a new HashMap and let the old one be garbage-collected."
21293026,1,0,0,java.util.HashMap,Should I use a strong reference like HashMap or ConcurrentHashMap or my implementation is good to go?
21298092,2,1,0,java.util.HashMap,The other option would be to change the class to be a HashMap and not have member variables at all.
21370726,2,1,0,java.util.HashMap,"Second, I used a HashMap> to map key/value pairs."
21301562,1,0,3,java.util.HashMap,"As we all known, in Sun(Oracle) JDK, HashSet is implemented backed by a HashMap, to reuse the complicated algorithm and data structure."
21303413,2,0,0,java.util.HashMap,and the Extras contains a Bundle which is an implementation of HashMap to store key values of specific data .
21303421,2,1,1,java.util.HashMap,Extras contains a Bundle which is an implementation of HashMap to store key values of specific data .
21304309,2,0,0,java.util.HashMap,"For example:  lookup, insert and delete operations are on average O(1) for a HashMap and O(logN) for a TreeMap iterating a TreeMap's key set is O(N) extracting and sorting a Hashmap's keys is O(NlogN)"
21304556,2,0,0,java.util.HashMap,"I would wrap the whole HashMap into a class of your own and that class should implement getPerson(), getManager(), getUser() with appropriate calls/checks."
21305431,1,0,0,java.util.HashMap,NullPointerException with HashMap when input is double.
21305431,1,0,0,java.util.HashMap,Introduction  I am having some difficulties with figuring out what's causing me to get a NullPointerException in a HashMap that should be fairly simple.
21305431,1,0,0,java.util.HashMap,To understand why I am using a HashMap I think the best way to describe it is to say that I have a Multithreaded program which has some results I would like to store.
21305431,1,0,0,java.util.HashMap,Since one never knows which thread that will finish first I use a HashMap to store thread i's value in this hashmap as follows: Code:  First the definition of the HashMap: code.
21305511,2,1,5,java.util.HashMap,"Well HashMap isn't thread-safe to start with, so no... consider using ConcurrentHashMap instead."
21305515,2,0,3,java.util.HashMap,My guess would be that the value retrieved from the HashMap for key i is null.
21305515,2,0,3,java.util.HashMap,"No, HashMap is not thread-safe."
21305515,2,0,3,java.util.HashMap,But as a starting point you can make HashMap thread safe by wrapping it with Collections.synchronizedMap()
21310539,1,0,0,java.util.HashMap,Implementation -   HashMap for storing dictionary in memory.
21310539,1,0,0,java.util.HashMap,"Repeating the above for each webpage, and storing results in a HashMap."
21311959,2,0,4,java.util.HashMap,There isn't a way to retrieve a HashMap tuple by value sorted order afaik.
21316638,1,0,1,java.util.HashMap,"But HashMap uses hashcode to determinate in which index of the table put key+value, like,  hashcode / size_of_table = table_index."
21316638,1,0,1,java.util.HashMap,But how HashMap will determinate in which index it should put key+value in case hashcode is negative?
21316706,2,1,3,java.util.HashMap,From http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java: code.
21317134,1,0,4,java.util.HashMap,I wrote a question that has not had much success: Serialize HashMap as XML (without repeating parent elements).
21320737,2,0,7,java.util.HashMap,"Additionally, the cast to Birds would be unnecessary if you supplied generic type parameters to your HashMap, something like this: code."
21321933,2,1,1,java.util.HashMap,I would use a HashMap to store the products.
21470781,2,1,0,java.util.HashMap,I ended up going with an interval tree (http://en.wikipedia.org/wiki/Interval_tree) with each segment being mapped to a HashMap of objects active at that time.
21325116,2,1,2,java.util.HashMap,"You can use a HashMap to store them all, it will also simplify your counting routine."
21325983,1,0,1,java.util.HashMap,how to add and get class's object values in HashMap.
21325983,1,0,1,java.util.HashMap,"I want to create a method to add data into sqlite database which take HashMap<String,Person> as argument in a class."
21325983,1,0,1,java.util.HashMap,"From another class, I want to add person details in HashMap<String,Person> that can be used by my database handler class."
21329662,1,0,7,java.util.HashMap,I tried searching for detail implementationof TreeMap but was unable to find any article such as the following article I have found for HashMap  Since yesterday I am hanging on this Tree :( Can someone please help me get down...
21332523,1,0,0,java.util.HashMap,HashMap: Use Object as Key and use the methods of that key.
21332523,1,0,0,java.util.HashMap,My HashMap currently looks like this: code.
21332906,2,0,0,java.util.HashMap,However I'm not sure HashMap is the best choice of collection for what you're trying to do.
21332906,2,0,0,java.util.HashMap,as @Gyro Gearless says Object is not normally a good choice of key for a HashMap.
21340963,1,0,1,java.util.HashMap,Why was Map<> in Java designed to require two types; Map<> and HashMap<>?
21340963,1,0,1,java.util.HashMap,Why is Java designed so that Map<> is created with a HashMap<> and two different imports are required to use it?
21340987,2,1,5,java.util.HashMap,"Map is an interface, while HashMap is a concrete implementation, just like TreeMap BTW You can use only HashMap if you like: HashMap<k,v> hashmap = new HashMap<k,v>();"
21341097,2,0,3,java.util.HashMap,Map is an interface that HashMap implements.
21341097,2,0,3,java.util.HashMap,"If you declare it as HashMap<String, String>, you have to change your contract if you want to change the underlying implementation."
21341393,2,0,1,java.util.HashMap,"as others said, Map is an interface that HashMap implements."
21341393,2,0,1,java.util.HashMap,"Java contains three  general-purpose Map implementations: HashMap, TreeMap, and LinkedHashMap code."
21341393,2,0,1,java.util.HashMap,will allow the use of all public functions in HashMap (Map interface methods + hashMap methods).
21341393,2,0,1,java.util.HashMap,"update  from the oracle website: http://docs.oracle.com/javase/tutorial/collections/interfaces/map.html  The Java platform contains three general-purpose Map implementations:   HashMap, TreeMap, and LinkedHashMap."
21342160,1,0,2,java.util.HashMap,The problem: I have a ViewModel base class that has a HashMap to store the ViewModel's property values.
29382399,2,0,0,java.util.HashMap,"Lets look at an example pseudo-code non-thread safe HashMap add() that would lose numbers(this is obviously not how it implemented, just trying to state one way in which it could be non-thread safe): code."
21360316,2,0,1,java.util.HashMap,You can use this method for variable detection and their replacements from a passed HashMap: code.
21360912,1,0,0,java.util.HashMap,"However, from all the examples I've seen, I noticed that you need to create memory for the HashMap using the new keyword."
21360926,2,0,1,java.util.HashMap,You are forgetting to initialize your HashMap: code.
21360927,2,0,1,java.util.HashMap,"You haven't create a instance of HashMap, You just declared a variable type of HashMap, you need to initialize that HashMap inorder to use it, like HashMap<String, Integer> data = new HashMap<String, Integer>(); You can declare and initialize that HashMap in the same line, or if you have a constructor, you can initialize it inside the constructor."
21363277,2,0,0,java.util.HashMap,"This is not much more concise, however it does have several advantages as detailed in section 1 of Effective Java: it allows type inference of generic types (Map<String,String> m = Maps.newHashMap(); instead of Map<String,String> m = new HashMap<String,String>();), and allows you to change the method in the future to e.g."
21363869,1,0,0,java.util.HashMap,As far as read is concerned I guess there is no issue by using simple java.util.HashMap API.
21363869,1,0,0,java.util.HashMap,Perform all write operations in a synchronized block/method and use simple java.util.HashMap API.
21365234,1,0,1,java.util.HashMap,Issue with Java HashMap Assignment.
21366367,2,0,0,java.util.HashMap,Use a HashMap: code.
21367755,2,0,2,java.util.HashMap,"The whole point of a Hashtable (you should use HashMap, by the way), is to be able to find a value by key without iterating."
21368987,2,0,1,java.util.HashMap,What you can do when you only have 30-50 values as you said is register each String you get into an HashMap together with a running counter as value: code.
21371447,1,0,0,java.util.HashMap,Java and HashMap - how to add to existing values?
21371447,1,0,0,java.util.HashMap,"I am currently working on a client/server application, and I am using a HashMap to identify each client."
21371447,1,0,0,java.util.HashMap,"The client passes in two values to the server - id and x.  I am using id as my key, and for each element in the HashMap, I would like to use the value of x to add to the value the specific element with the matching key id."
21371992,2,0,0,java.util.HashMap,"The best way to do this is probably to create an extension of HashMap specifically for integers with a method specifically for adding to a particular value in the manner you specified, like this: code."
21371992,2,0,0,java.util.HashMap,"This will make it easy to use the code again if needed, which by the looks of it, it very well could be, and has the added benefit of working only with a HashMap of the correct type."
21375224,2,0,0,java.util.HashMap,HashMap or TreeMap ... depending on your requirements.
21377689,2,1,1,java.util.HashMap,"They're a native feature in PHP, but not in Java, however you can achieve similar functionality using a HashMap, or using Reflection."
21377689,2,1,1,java.util.HashMap,"I'm going to show you the HashMap option, because frankly Reflection is the work of Satan."
21382770,2,0,0,java.util.HashMap,Store all the Player-Objects in a HashMap or therelike in a static field in GamePlayer or in a different Class that represents the game.
21382770,2,0,0,java.util.HashMap,A HashMap would be useful because it lets you get the Players quickly.
21382360,2,0,0,java.util.HashMap,"The above should produce a HashMap of key, values from that string."
26500028,2,1,6,java.util.HashMap,"Although quite late for an answer (for the insert part), I hope it might be useful someone else: Take the key/value pairs in a HashMap: code."
21404972,2,1,0,java.util.HashMap,"Keep your nodeIds in a HashMap from your data to node-id, and only write to lucene during the import."
21388995,2,0,0,java.util.HashMap,"Here are some pointers  Use a Scanner to read the file, it's much simpler and gives cleaner code When you find a name see if it exists in a HashMap of names."
21388995,2,0,0,java.util.HashMap,Increment the now guaranteed value in the HashMap by one.
21388995,2,0,0,java.util.HashMap,Print all keys and values from the HashMap  Like this.
21388654,2,0,1,java.util.HashMap,Create a HashMap mapping from character to count.
21388654,2,0,1,java.util.HashMap,At the end of the loop your HashMap now contains the count for every character in the String.
21388654,2,0,1,java.util.HashMap,Take the EntrySet from the HashMap and dump it into a new ArrayList.
21388731,2,0,0,java.util.HashMap,"You will find HashMap, LinkedHashMap, TreeMap."
21393371,1,0,0,java.util.HashMap,"I would in some way store many different type in a HashMap, but in a way that when i extract them they will be well typed (and not an object)."
21393863,2,0,1,java.util.HashMap,"I would in some way store many different type in a HashMap, but in a   way that when i extract them they will be well typed (and not an   object)."
21393863,2,0,1,java.util.HashMap,Suppose that Java compiler had some kind of mechanism to keep track of the types of objects stuffed into a HashMap.
21395630,1,0,1,java.util.HashMap,Does calling HashMap.entrySet() instantiate and populate a new set every time?
21395630,1,0,1,java.util.HashMap,"My gut says no, because the HashMap documentation says that you can directly modify the HashMap using the returned entry set, but I don't know how to tell for sure."
21395845,2,1,0,java.util.HashMap,"The implementation of HashMap.entrySet is simply a cheap view, and takes O(1) time to create every time you call it."
21397030,2,0,0,java.util.HashMap,Use HashMap code.
21442380,2,0,2,java.util.HashMap,"Personally I use my own Texture class and a TextureBank class with a static HashMap<String, Texture> where the key is the name of the texture and the value is the appropiate Texture object, to store the textures."
21400290,1,0,0,java.util.HashMap,How to access HashMap with Objects after converting to JSON.
21411320,1,0,1,java.util.HashMap,"I was thinking to implement such a cache by using a HashMap<String,Double> where the key is the string representation."
21411867,2,0,2,java.util.HashMap,"If its just that one HashMap, I wouldn't even bother trying to optimize unless it proved to be the bottleneck of my application."
21411717,2,1,2,java.util.HashMap,The HashMap itself will use a lot of memory.
21411620,1,0,0,java.util.HashMap,I have a custom AbstractTableModel That model stores the data in a HashMap.
21411620,1,0,0,java.util.HashMap,Should I try using List to store all my data in instead of HashMap?What is the accepted standard for storing data when using table models?
21411784,2,1,1,java.util.HashMap,A HashMap doesn't generally make a good fit for a table model because the table needs the ability to access data at an row/col location.
21418841,2,1,1,java.util.HashMap,You should probably use a domain class instead of a HashMap to hold that data.
21419112,1,0,0,java.util.HashMap,Memory efficiency: HashMap versus Array.
21419360,2,0,1,java.util.HashMap,"Without looking in the code I know that a HashMap requires, at minimum, a base object, a hashtable array, and individual objects for each hash entry."
21419365,2,1,1,java.util.HashMap,Anyway: Using a HashTable/HashMap needs a huge memory overhead.
21419178,2,0,1,java.util.HashMap,"The HashMap will most likely need more memory, even if you only store a few elements."
21419457,2,0,1,java.util.HashMap,HashMap uses an array for its table behind the scenes.
21419457,2,0,1,java.util.HashMap,"So if you were actually limited by finding a contiguous space in memory, HashMap's benefit is only that the array may be smaller."
21419457,2,0,1,java.util.HashMap,HashMap is generic and therefore uses objects.
21419457,2,0,1,java.util.HashMap,"This means the HashMap may very well not be smaller, even if the number of characters in the String is small."
21419457,2,0,1,java.util.HashMap,"HashMap will require 3 extra objects for each entry: an Entry, a Character and an Integer."
21419457,2,0,1,java.util.HashMap,HashMap also needs to store the int for the index locally whereas the array does not.
21419457,2,0,1,java.util.HashMap,That's beyond that there will be some extra computation using the HashMap.
21420961,2,0,4,java.util.HashMap,"If you often find one ball in all of your balls, another datastructure such as HashMap or HashSet would be better."
21420969,2,0,3,java.util.HashMap,"HashMap or TreeMap, and write your code."
21423052,2,0,0,java.util.HashMap,HashMap does not allow duplicate key.It will overwrite previous value if inserting new value on same key.
21423052,2,0,0,java.util.HashMap,If you want to insert multiple value on same key than you may use ArrayList to store value and add that List into HashMap.
21425904,2,0,1,java.util.HashMap,"For instance, a HashSet uses a private iterator class HashMap.KeyIterator, which extends a parent class HashMap.HashIterator."
21432124,1,0,0,java.util.HashMap,ArrayIndexOutOfBoundsException in HashMap.
21432496,2,1,2,java.util.HashMap,The stacktrace show that you are using the Android version of HashMap.
21432496,2,1,2,java.util.HashMap,My diagnosis is that you've somehow managed to get a corrupt HashMap object.
21432496,2,1,2,java.util.HashMap,(Check how the code handles an empty map ...) It is possible (I guess) that you've encountered a bug in the HashMap implementation in the version of Android you are using.
21432733,1,0,1,java.util.HashMap,"i have a very large list of String...(ArraList myList) and i want to remove duplicated items from this list very fast..i copied the items into a HashMap, that's the best algorithm i found but yet it is not fast enough...  i have found some thing like writing code using native languages and implement it in android app, can we  remove the duplication from the list using native language, is there any function written by assembly language that can do this faster than java can do?"
21434427,2,0,0,java.util.HashMap,Your solution is very uneffective since you don't take advantage of the optimization algorythms like hashing: You should use a HashSet or a HashMap to find fastly if an element is contained.
21435245,2,0,0,java.util.HashMap,If you want to find a String you should use HashMap.
21435276,2,0,0,java.util.HashMap,In short implement hashCode and equals() and try making the implementation of hashCode() optimized so you will gain time when filling your HashSet You will probably also be interested in HashMap which stores keys and values where keys use the hashing mechanism: so you can find an object by its key
21435031,2,0,2,java.util.HashMap,Why don't you try (Map): http://docs.oracle.com/javase/7/docs/api/java/util/Map.html Basically it's a collection of Hashmaps: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Here's an example: code.
21435409,1,0,0,java.util.HashMap,"In another class I have a HashMap as a mappingDirectory, the key returns another Map."
21436429,2,0,0,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
21579938,2,0,1,java.util.HashMap,2 Create a static final HashMap like this with key as the grouping value and an arraylist of className as the value.
21579938,2,0,1,java.util.HashMap,3 Now add the class to the list in the HashMap if there exist an entry for the key.
21452065,1,0,0,java.util.HashMap,HashMap> cant find its key even though it exists.
21452065,1,0,0,java.util.HashMap,I have a HashMap of this type code.
21452065,1,0,0,java.util.HashMap,"I made another HashMap, called names_list that pretty much replaces the order of the list_names HashMap such that I can get all the lists that a given name is in."
21452065,1,0,0,java.util.HashMap,"now the HashMap I have is pretty big, and there are over 400k items and 60k lists."
21452065,1,0,0,java.util.HashMap,but whats weird is the HashMap didn't recognizance one of its keys(or maybe many of its keys) and treated it as null after one retrieval or sometimes 0 retrievals.
21454406,1,0,1,java.util.HashMap,Most efficient way to clear a Java HashMap.
21454883,2,0,1,java.util.HashMap,Specifically: HashMap clears by wiping content of the inner array.
21454883,2,0,1,java.util.HashMap,When you create a new Hashmap it also makes old map content available for GC + the HashMap object itself.
21456537,1,0,1,java.util.HashMap,"new to android - understanding HashMap<String,."
21456647,2,1,4,java.util.HashMap,"Now this may not make much more sense to you yet, but at least it's proper Java code :) This is using generics - HashMap is a generic type with two type parameters - one for the key and one for the value."
21456647,2,1,4,java.util.HashMap,"The code provided isn't idiomatic Java code in terms of its use of ArrayList and HashMap, mind you."
21458468,1,0,0,java.util.HashMap,GSON won't properly serialise a class that extends HashMap.
21458468,1,0,0,java.util.HashMap,"However, if I make A a subclass of HashMap: code."
21458468,1,0,0,java.util.HashMap,Can someone tell me whether/how I can serialise this HashMap subclass using GSON?
21464090,2,0,3,java.util.HashMap,"You forgot to initialize your HashMap, change: code."
21464136,2,0,2,java.util.HashMap,"When you declare a class variable like this: private HashMap<String,String> stateNames; or like this: private HashMap<String,String> stateNames = null; it is initialized with null."
21464136,2,0,2,java.util.HashMap,"private HashMap<String,String> stateNames = new HashMap<String,String>()"
21464432,1,0,0,java.util.HashMap,Load data from MongoDB to HashMap.
21464432,1,0,0,java.util.HashMap,"i am wondering how can i do to load a HashMap from MongoDB using Java, this is a project of mine for Minecraft & Bukkit."
21465370,1,0,0,java.util.HashMap,When run with the gson-2.2.4.jar I get the following exception  java.lang.ClassCastException: com.google.gson.internal.LinkedTreeMap   cannot be cast to java.util.HashMap   at com......
21465425,2,1,2,java.util.HashMap,"I don't know about 2.1, but if it's true that it worked, then Gson must have changed their default Map implementation to use when deserializing Map types from HashMap to LinkedTreeMap in gson-2.2.4."
21465425,2,1,2,java.util.HashMap,"If you want to continue using HashMap, specify it in the TypeToken."
21465940,2,0,2,java.util.HashMap,"Try this, using standard methods and assuming that the population count is stored as Integers in the HashMap: code."
21473110,2,0,1,java.util.HashMap,"For loadSqlData have it return a HashMap where the key is all the fields you put placeholder for like ${regs_numb), and the value is from the database."
21474742,2,0,0,java.util.HashMap,Best HashMap = Unique Ids - one bucket for one object - fastest access to object when you know the key.
21482431,2,0,2,java.util.HashMap,A HashMap can have any type as a key.
21482444,2,0,2,java.util.HashMap,"If it's about the Java class java.util.HashMap<K,V> you cannot, because boolean is a primitive type."
21482733,1,0,0,java.util.HashMap,I am getting a concurrent modification exception when executing the following code: mymap is a global variable and is a HashMap code.
21483560,2,0,0,java.util.HashMap,HashMap is not thread safe.
21483560,2,0,0,java.util.HashMap,"If you want synchronized (i.e. thread-safe) map, use Collections.synchronizedMap() to wrap your HashMap: http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#synchronizedMap%28java.util.Map%29 Or use a ConcurrentHashMap:  http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html"
21486591,2,0,3,java.util.HashMap,But a HashMap is not the appropriate structure for this.
21487889,1,0,1,java.util.HashMap,"UPDATE: As many have pointed this out in the comments: it is a very bad idea to use mutable objects as the key of a HashMap, which I totally agree."
21487889,1,0,1,java.util.HashMap,So please do not focus on how bad it is to use a mutable object as the key to a HashMap.
21487889,1,0,1,java.util.HashMap,"However, I do think HashMap is the more reasonable and readable way to do this."
21494049,2,0,0,java.util.HashMap,Use the encode method to convert your array to unique string use to add and lookup the values in HashMap
21488103,1,0,0,java.util.HashMap,Java HashMap Sepator and Fields.
21489682,1,0,3,java.util.HashMap,java HashMap key swap during get().
21489682,1,0,3,java.util.HashMap,"In a usage case, I have a HashMap which contains 1 entry and the key is A. I need to call get() with key B many many times."
21489682,1,0,3,java.util.HashMap,The following is from HashMap.java: code.
21489682,1,0,3,java.util.HashMap,"However, it is not possible to just extend HashMap and override get() since HashMap.field is package protected and Entry.key is final."
21489682,1,0,3,java.util.HashMap,Copying HashMap.java and its related code just to change one method is not very appealing.
21491068,2,0,0,java.util.HashMap,"HashMap does not have that protection, because in most cases the right thing to protect is not just the hashtable access but the logic surrounding that access ... and if the user is going to implement their own synchronization, doing it again in the hashmap costs performance for no functional gain."
21492728,1,0,1,java.util.HashMap,"Pass by reference instead of by copy I added a HashMap that stores a new WebSocket, and a connection can only be re-attempted if it's not present there as well as the ConcurrentHashMap."
21492728,1,0,1,java.util.HashMap,The growth rate has again been greatly reduced because I remove() from the ConcurrentHashMap before calling close() on the WebSocketClient and then finally remove()ing from the HashMap.
21493712,2,0,3,java.util.HashMap,"I believe the searches in HashMap use the class' hashCode() method, and the lookup should be O(c), or constant-time and fast."
21493712,2,0,3,java.util.HashMap,"One possibility is if you have implemented hashCode() poorly (or not at all) and this is causing a large number of collisions in your HashMap -- that is, calling that method with different instances of your class returns mostly similar or same values -- then the instances will be stored in a linked list at the location specified by hashCode()."
21493826,1,0,0,java.util.HashMap,I think the !HashMap.containsKey() is the line which costs an extreme amount of time.
21497425,1,0,0,java.util.HashMap,Why HashMap declares Map interface too?
21497425,1,0,0,java.util.HashMap,"AbstractMap already implements the Map interface, so why does HashMap declare Map interface too?"
21497476,2,1,0,java.util.HashMap,"When looking at HashMap's code, it's immediately clear that it's a type of Map."
21500982,1,0,2,java.util.HashMap,"My first reaction would be to store all these numbers in a HashMap <String, String>."
21501370,2,1,1,java.util.HashMap,I performed some performance tests and I found that HashMap is the most efficinet Map of java API (List and Arrays are more efficient).
21501370,2,1,1,java.util.HashMap,However 10M elements are not so big and memory caching through HashMap should be ok (more or less 1-4GB).
21501370,2,1,1,java.util.HashMap,"Concluding, if you need performance HashMap is the correct response."
21501695,2,0,0,java.util.HashMap,and in create HashMap that will hold object from your class for each marker : code.
21501808,1,0,2,java.util.HashMap,Java also has synchronized wrappers to allow concurrent access to non thread safe collections like HashMap and Arraylist.
21502542,1,0,0,java.util.HashMap,Java Getting Final Calculated Result from different HashMap for the same object.
21502542,1,0,0,java.util.HashMap,I have kept each result in different HashMap Below HashMap has   Camera object  and  Double=Rating value Saying that particular Camera has that Rating on that particular mechanism.
21503325,2,0,0,java.util.HashMap,And to me it seems like a job for a HashMap wrapped up in an Object.
21508545,1,0,0,java.util.HashMap,How to write a HashMap to a txt file?
21508545,1,0,0,java.util.HashMap,I have a HashMap containing some data that I want to write to a file and reload the contents of the file to form the same HashMap.
21508545,1,0,0,java.util.HashMap,HashMap is as follows: code.
21509746,2,0,2,java.util.HashMap,"Make your data point class as serializable and after use the below code to read and write your map from a text file `    File f = new File(""myfile.txt"");     HashMap> hashMap = new HashMap>(); code."
21509640,1,0,0,java.util.HashMap,How do I check the size of a HashMap for a conditional statement.
21509640,1,0,0,java.util.HashMap,I'm messing around and making a simple text based game and I am stuck at trying to check the size of this HashMap in my conditional statement.
21509640,1,0,0,java.util.HashMap,"How can I get it to work so that if there are items in the HashMap it will return ItemList, and if there are none to return NoItemList?"
21509648,2,0,1,java.util.HashMap,On HashMap or Collection (which HashMap implements) size is a method use: code.
21510082,1,0,1,java.util.HashMap,"As far as I know, Java's HashMap is implemented using separate chaining with a linked list."
21510116,2,1,1,java.util.HashMap,"As far as I know, Java's HashMap is implemented using separate chaining with a linked list."
21510116,2,1,1,java.util.HashMap,"For many JRE implementations and operation mixes, this class will yield better performance than HashMap (which uses chaining rather than linear-probing)."
21510316,1,0,2,java.util.HashMap,Currently I use a HashMap to get a collection of unique values then I copy the HashMap values into a ArrayList then use Collections.sort() to sort the values as my objects implement Comparable which finally gives me a unique sorted values.
21510411,2,1,0,java.util.HashMap,"If you haven't added any cars between successive calls to processLap, then there's really no need to copy the values from the HashMap into an allocated ArrayList over again."
21510453,1,0,0,java.util.HashMap,"HashMap(Text, HashMap(Text, ArrayList(Ints))) code."
21511882,1,0,0,java.util.HashMap,Java: HashMap behaving in an unexpected manner.
21511954,1,0,2,java.util.HashMap,HashMap as an ArrayList of Strings.
21511954,1,0,2,java.util.HashMap,"Hint 1: you can do this using a HashMap, with the keys being  Strings (representing stations) and the values being ArrayLists of Strings (representing the stations to which there is a direct connection)."
21511954,1,0,2,java.util.HashMap,"Hint 2: Although the getConnections method returns an array of Strings, it would be better for the values in the HashMap to be ArrayLists of Strings  The Interface; code."
21515891,2,0,2,java.util.HashMap,from the doc of hashmap of java (http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html) code.
21523779,2,0,0,java.util.HashMap,"To have the words (keys) sorted implement it as TreeMap, otherwise one normally takes a HashMap."
21525384,2,0,0,java.util.HashMap,Just flush out the values of the HashMap.
21526602,2,0,1,java.util.HashMap,Ordinary HashMap iterators will throw exceptions if modified while a thread is iterating over them.
21528963,1,0,3,java.util.HashMap,Parsing HashMap to Json.
21528963,1,0,3,java.util.HashMap,Here is the HashMap I'm trying to parse:  code.
21528963,1,0,3,java.util.HashMap,"The output I get is : ---------------------Parsed HashMap---------------------------:   {""dealer"":""Dealer\u003dAKHI"",""car"":""car\u003dFord"",""Year"":2014,""model"":""model\u003dMustang"",""bowser"":""b\u003dmozilla""} I've been through few other blogs and see that there is a glitch in the API but is there any way we could fix this here with may be some other method."
21530717,2,0,4,java.util.HashMap,Use a HashMap.
21530993,2,1,4,java.util.HashMap,"Step #1: Get your test strings in an HashMap<String, Integer> (e.g., load them from an XML resource)."
21530993,2,1,4,java.util.HashMap,"Step #2: Iterate over the keySet() of that HashMap, and test each key."
21530993,2,1,4,java.util.HashMap,"If you have a match, set your progress equal to the corresponding value in the HashMap, and break out of the iteration loop."
21534224,1,0,1,java.util.HashMap,I need a TreeMap that can hold multiple values so I chose MultiValueMap from Commons Collections 4.0  With HashMap it's easy  code.
21534965,1,0,0,java.util.HashMap,No message body writer found for class : class java.util.HashMap.
21558798,2,0,1,java.util.HashMap,Seems to me like you're attempting to send json to the server but actually sending the HashMap instead?
21535029,1,0,1,java.util.HashMap,"If this is the case, will this not affect the key look-up in HashMap where null Key-value pairs are allowed."
21535077,2,0,4,java.util.HashMap,"If you will search around, you'll notice that HashMap has a special handling for null keys."
21535077,2,0,4,java.util.HashMap,null values are fine as you don't compute hash code for them in a HashMap.
21535077,2,0,4,java.util.HashMap,This is the reason why null keys work fine in HashMap.
21535194,2,0,1,java.util.HashMap,What happens in HashMap and HashSet is that they treat null as a special case.
21535194,2,0,1,java.util.HashMap,I stress ... this is special case behaviour of HashMap and HashSet ... not hashcode().
21536302,1,0,3,java.util.HashMap,"Java store objects in HashMap, keyed by elements field."
21536302,1,0,3,java.util.HashMap,"I have a series of objects that contain a name field, and I want to store them in a HashMap, with the key of each object being it's name."
21536302,1,0,3,java.util.HashMap,Is there a way to do this such that changing the object's name field also changes the key in the HashMap (and even vice versa).
21536570,2,0,0,java.util.HashMap,"If you don't change this names often, and/or don't have many objects with name, but you need to find by key often,  you could create your own implementation of Map (inheriting from HashMap)."
21536419,2,0,0,java.util.HashMap,You could do this by adding another object that assigned java.util.UUID to the name and use the UUID as the key in your HashMap.
21536419,2,0,0,java.util.HashMap,"Otherwise,  just remove the old Name from the HashMap and insert a new name."
21536460,2,0,0,java.util.HashMap,The standard HashMap won't move values between buckets once the value has been inserted.
21540738,2,0,0,java.util.HashMap,Use a HashMap code.
21544103,1,0,0,java.util.HashMap,"Consider a simple HashMap<Integer,Integer>."
23538261,2,0,1,java.util.HashMap,"Note to the above solution (from A Paul): The solution doesn't work, cause it doesn't reconstructs back a HashMap< String, Object > - instead it creates a HashMap< String, LinkedHashMap >."
23538261,2,0,1,java.util.HashMap,"If you had a HashMap< String, MyOwnObject > then proper demarshalling was possible - see following example: code."
23561086,2,0,0,java.util.HashMap,"As a result, the origal quuestion can be solved in a 2-step converison:  Demarshall the JSON back to an object - in which the Map<String, Object> is demarshalled as a HashMap<String, LinkedHashMap>, by using bjectMapper#readValue()."
21548859,1,0,0,java.util.HashMap,"Currently I am using HashMap<Position, Object> for this."
21549725,2,0,0,java.util.HashMap,"Map<String, Student> studentMap = new HashMap<String, Student>()"
21556034,2,1,3,java.util.HashMap,A HashMap for example will do.
21556034,2,1,3,java.util.HashMap,"You need to remember that you cannot save the values in the context variable in the map method, you need to do this in the cleanup method, after iterating through the HashMap and finding out the max and min value for each column."
21555195,1,0,0,java.util.HashMap,"So far so good, as HashSet internally use HashMap to store objects."
21555267,2,0,3,java.util.HashMap,The maximum number of buckets that a HashSet can contain (remember: it's a HashMap under the hood) is given by its capacity.
21555267,2,0,3,java.util.HashMap,"However, a HashMap can contain more than one element per bucket, in case of collisions a linked list will be used at each bucket."
21555366,2,0,0,java.util.HashMap,"Yes it is duplicate.Maximum size of HashSet, Vector, LinkedList  A HashSet uses a HashMap internally, so it has the same maximum size as that  A HashMap uses an array which always has a size that is a power of two, so it can be at most 230 = 1073741824 elements big (since the next power of two is bigger than Integer.MAX_VALUE)."
21555366,2,0,0,java.util.HashMap,"However, when the HashMap stops resizing, then it will still allow you to add elements, exploiting the fact that each bucket is managed via a linked list."
21555366,2,0,0,java.util.HashMap,Therefore the only limit for elements in a HashMap/HashSet is memory.
21563139,2,0,1,java.util.HashMap,What you are looking for is a HashMap code.
21566238,2,0,0,java.util.HashMap,HashMap with Double AS key and Integer as counter.
21568732,2,0,0,java.util.HashMap,"Foremost, why do you want to go for HashMap?"
21568732,2,0,0,java.util.HashMap,"However, the logic which you can probably go for can be like, you need to parse the list given as an input, and put in each country placed below the name of the continent in a list and put in the HashMap."
21570108,2,0,1,java.util.HashMap,"Internally HashSet use HashMap,the hash key of the value is generated and used to save the element in HashTable."
21570108,2,0,1,java.util.HashMap,To generate HashCode of the element the method HashCode() is called Below method of HashMap to put element which is internally used by HashSet to add element : code.
21570121,2,1,3,java.util.HashMap,it's actually in HashMap which HashSet uses internally
21579824,2,0,0,java.util.HashMap,How are are you expecting the instance of JavaTest or the HashMap to be accessible in the service instance after calling?
21578115,2,0,0,java.util.HashMap,"If your class only contains data, and no business logic, you might be better off implementing a HashMap-based data structure, especially if the data fields are likely to change in the future."
21581026,1,0,0,java.util.HashMap,Java HashMap Sepator and Fields Data File.
21581565,2,0,0,java.util.HashMap,"If you want the output to be sorted, you should also use a SortedMap such as TreeMap instead of HashMap: code."
21586264,2,1,3,java.util.HashMap,And when ever you override equals you should override hashcode() method also to ensure that you can confidently use your class instance as a key in any hashing based collection like HashMap or HashSet.
21587509,2,0,1,java.util.HashMap,"Also, I would suggest using a HashMap instead of a Hashtable: code."
21591084,2,1,1,java.util.HashMap,"Now, without HashMap, or any other dynamic structure it's quite difficult to do."
21591239,2,0,0,java.util.HashMap,Use a HashMap to store the count and first index of each unique word.
21598655,2,1,1,java.util.HashMap,a HashMap from Locale to SimpleDateFormat for those several locales you want to support.
21609133,2,0,0,java.util.HashMap,With a non-thread safe Map such as HashMap neither of those are guaranteed.
21600344,1,0,18,java.util.HashMap,Java HashMap containsKey returns false for existing object.
21600344,1,0,18,java.util.HashMap,I have a HashMap for storing objects: code.
21601126,2,1,8,java.util.HashMap,"If you look at the implementation of HashMap, you'll see that each key-value pair is stored along with the key's hash code."
21604850,1,0,1,java.util.HashMap,The HashMap in Java wants a specific key for every value we put into the HashMap and with the key we can get the value.
21611458,1,0,2,java.util.HashMap,"In the first XML file, there is roughly 8000 IP addresses which I'm interested which I have split between 3 HashMap based on their properties."
21611458,1,0,2,java.util.HashMap,"One HashMap is <String, String> while the other two are <String, String[]>."
21612415,1,0,1,java.util.HashMap,Retrieving value from key/value in ArrayList HashMap.
21612415,1,0,1,java.util.HashMap,I have stored some values to an ArrayList HashMap like so: code.
21612693,1,0,0,java.util.HashMap,Storing Data in a HashMap Java.
21612693,1,0,0,java.util.HashMap,I am trying to store data in a HashMap however I can only seem to store the very last item of the data source I am reading into the HashMap and I am unsure why.
21612693,1,0,0,java.util.HashMap,I would like to store them in a HashMap.
21612796,2,0,0,java.util.HashMap,"In your code, you wrote HashMap t = new HashMap(); t = county.getProperties(); so you map value is actually been reassigned to country property each time."
21612939,2,0,0,java.util.HashMap,"Second, you can use HashMap for this kind of problem where you keep updating the value(count) for key(color) and it will save you a lot of if conditions if say there are a hundred different colors!"
21613261,1,0,3,java.util.HashMap,Iterating through a HashMap in Java.
21613261,1,0,3,java.util.HashMap,I am having difficulty cycling through my HashMap to check the property that will dictate the intensity of the polygons color.
21613261,1,0,3,java.util.HashMap,What I would like to do is loop through my HashMap countyData and get the population of each entry.
21613261,1,0,3,java.util.HashMap,My HashMap can be seen here: code.
21613261,1,0,3,java.util.HashMap,I populate my HashMap using this method.
21613261,1,0,3,java.util.HashMap,It still does not seem to be iterating through each entry in the HashMap New way Of populating HashMap code.
21616234,1,0,2,java.util.HashMap,Concurrent read-only HashMap.
21616234,1,0,2,java.util.HashMap,"I was thinking about just using a Java HashMap and maybe using reflection to set the field final between the updates if this improves performance, but I have no clue how to make the JVM optimize for many concurrent reads."
21616295,2,0,9,java.util.HashMap,"Since the map isn't updated while being used, use a HashMap, which gives excellent O(1) lookup performance (at the sacrifice of thread safety)."
21616323,2,0,1,java.util.HashMap,"In your scenario, until you have proved that Java's standard HashMap is not fast enough, I think you might need to worry about garbage collection if stop the world here and there might pose a problem."
21616323,2,0,1,java.util.HashMap,You can avoid the problem by always reusing the HashMap (not creating a new one each time) and preallocating all the objects that  you store in the map and reusing them too.
21616468,2,0,0,java.util.HashMap,"In regards to the second problem, an efficient way to do it is to use a HashMap<String,Integer>."
21616488,2,0,1,java.util.HashMap,"I would use a HashMap, set the key for each type, then  check to see if the HashMap has an entry using HashMap.hasKey() method."
21617034,2,0,2,java.util.HashMap,"Further to this, unless you really need the synchronization, use a Map<String, Info> interface with a HashMap concrete implementation instead of Hashtable."
21618122,2,1,0,java.util.HashMap,So you could create a HashMap of B and a HashMap of C with A (or some unique property of A) as a key.
21619559,2,0,0,java.util.HashMap,"If a thread-safe implementation is not   needed, it is recommended to use HashMap in place of Hashtable."
21619657,1,0,0,java.util.HashMap,I have the following classes in the project:   MailServer MailClient MailItem  I have to modify the MailServer so that it uses a HashMap to store MailItems instead of an ArrayList.
21619657,1,0,0,java.util.HashMap,"The keys to the HashMap must be the names of the recipients, and each value must be an ArrayList containing all the MailItems stored for that recipient.The names of the recipients must be case-insensitive, i.e. “paul” and “Paul” and “PAUL” are all the same person."
21619719,2,1,0,java.util.HashMap,"If I understand your question properly, recipients must be case-insensitive, and they are to be used as keys in a HashMap."
21620155,1,0,0,java.util.HashMap,"map.put(""Tom Hank"",""Java""); map.put(""Tom Hank"",""Java""); As we all know, we cannot store duplicate values in HashMap."
21620155,1,0,0,java.util.HashMap,How to include duplicate keys in HashMap?
21620155,1,0,0,java.util.HashMap,| How can i have a HashMap in Java with duplicate keys
21622381,2,0,0,java.util.HashMap,You can consider using simply a HashMap in the applet context.
21622244,2,1,1,java.util.HashMap,"How about simple HashMap<String, Object>"
21622360,2,0,0,java.util.HashMap,I think the object you are looking for is a map consider the java 7 HashMap code.
21622360,2,0,0,java.util.HashMap,See the Docs  Make sure you use objects to specify the  pairs So with this example use Integer() for numbers not int  I reccomend HashMap over regular Map.
21622360,2,0,0,java.util.HashMap,HashMap implements a hash function offering constant .put() and .get() operations.
21622385,2,0,1,java.util.HashMap,"Now considering that there might be multiple values associated with the same key, you will have to modify the Map to a HashMap<String, List<String>>."
21622385,2,0,1,java.util.HashMap,More about HashMaps can be found here : HashMap (Java Platform SE 7 )
21623269,2,0,2,java.util.HashMap,You can use a HashMap (of ID to array index) in conjunction with an array (or ArrayList).
21623269,2,0,2,java.util.HashMap,add could be done in O(1) by simply adding to the array and adding the ID and index to the HashMap.
21623269,2,0,2,java.util.HashMap,"remove could be done in O(1) by doing a lookup (and removal) from the HashMap to find the index, then move the last index in the array to that index, update that element's index in the HashMap and decreasing the array size by one."
21623280,2,1,2,java.util.HashMap,You can use combination of HashMap and ArrayList if memory permits as follows:-   Store numbers in ArrayList arr as they come.
21623280,2,1,2,java.util.HashMap,"Use HashMap to give mapping  arr[i] => i While generating random select random form arrayList   Deleting :-    check in HashMap for num => i   swap(i,arr.size()-1)   HashMap.remove(num)   HashMap(arr[i])=> i  arr.remove(arr.size()-1)   All operation are O(1) but extra O(N) space"
21626017,2,0,1,java.util.HashMap,"Static code analysis certainly has its benefits, but it has its limitations - a common case would be how you'd protect against a get(Object) returning null from a HashMap or similar collection."
21625326,2,0,0,java.util.HashMap,"Returning a null is not an error per se, since for example HashMap.get(key) will return null, if there isn't a value associated with a key."
21625326,2,0,0,java.util.HashMap,Having HashMap throw an exception would be a bad choice.
21625326,2,0,0,java.util.HashMap,"Imagine the amount of warnings you would have if every time you used a HashMap, eclipse would say ""be careful, it might return null""."
21626264,2,1,2,java.util.HashMap,If you want a a key-value relationship then use a Map (HashMap would suit you fine).
21626264,2,1,2,java.util.HashMap,Put the string (by calling .toString() into a HashMap Get the query string from the HashMap...  You should never store things on disk if you don't need them to be persistent over application restarts and even then I'd store them in a database not in a file.
21625811,2,0,1,java.util.HashMap,Your HashMap is hm.
21625811,2,0,1,java.util.HashMap,"Put the values of hm in another HashMap hm2 in which the values of hm are the keys of hm2, and the values of hm2 can be anything (e.g."
21625811,2,0,1,java.util.HashMap,Then loop through that second HashMap hm2 and print out its keys.
21625811,2,0,1,java.util.HashMap,Instead of HashMap you can also use HashSet for hm2 (this is even better as you would not need the Boolean.TRUE part).
21628662,1,0,0,java.util.HashMap,I don't want to use a HashMap because it doesn't store the entry by order.
21635919,1,0,2,java.util.HashMap,"As per the HashSet.java, the internal design of the HashSet uses HashMap code."
21635919,1,0,2,java.util.HashMap,"the java doc says  This class implements the Set interface, backed by a hash table   (actually a HashMap instance)."
21635919,1,0,2,java.util.HashMap,Why not HashMap ?
21636896,2,0,0,java.util.HashMap,What they are trying to explain is that HashMap is a Java implementation of a general structure - the hash table.
21635972,2,1,4,java.util.HashMap,"In the Java standard library, HashMap is one such implementation, and HashTable is another."
21636024,2,0,1,java.util.HashMap,"Instead of using a list you could use a Map, for example a HashMap - assuming your id is an int, it could look like: code."
21637067,1,0,0,java.util.HashMap,"Now I have a category specific list of news, so I want to use the same arraylist in the adapter for different Listviews, I want the adapter to filter the news based on category id I provide (I have it in the arraylist), the Arraylist is actually - ArrayList<HashMap<String, String>> with id, news title, imageurl etc etc Note that I cannot use a copy , because there are fields like read/unread which should reflect across categories."
21637916,2,0,0,java.util.HashMap,"Also, the Drink string to integer Id may be in a different HashMap."
21637916,2,0,0,java.util.HashMap,"You may just mark that person as ""Done"" in another HashMap."
21637581,2,0,0,java.util.HashMap,Or you could try out a disk backed HashMap like JDBM2.
21637752,1,0,4,java.util.HashMap,"I am going trough the source code for the HashMap class in Java, and found that variables are initialized as  code."
21638080,1,0,2,java.util.HashMap,Why is the maximum capacity of a Java HashMap 1<<30 and not 1<<31?
21638080,1,0,2,java.util.HashMap,"Why is the maximum capacity of a Java HashMap 1<<30 and not 1<<31, even though the max value of an int is 231-1?"
21644977,2,0,1,java.util.HashMap,You can't directly cast from a HashMap to a LinkedHashMap.
21644977,2,0,1,java.util.HashMap,and then add the previous HashMap with putAll: code.
21649727,1,0,0,java.util.HashMap,"I have this ArrayList of hashmaps -- > ArrayList<HashMap<String, String>> How can I easily check if the hashmap contains certain value ?"
21649791,2,0,0,java.util.HashMap,"1) Based on your 1st comment, you should think of using HashMap<String, HashMap<String, String>>."
21649791,2,0,0,java.util.HashMap,For key of the external HashMap use the ID value from the internal HashMaps.
21650582,1,0,1,java.util.HashMap,In StringTemplate v3 we had a custom Java HashMap implementation that would call a function on the key provided and return the function result instead of doing an actual hashmap lookup.
21650582,1,0,1,java.util.HashMap,We would add an instance of this HashMap as an attribute to stringtemplate.
21650582,1,0,1,java.util.HashMap,"The myfunc HashMap would here get a key of type String Concatentation with + is not possible anymore in v4, and the proposed change is to make ""value"" + v into an anonymous template: code."
21650582,1,0,1,java.util.HashMap,"In this case, a ST object is passed to the HashMap, and I can call 'render()' on it to generate the text I would usually get, BUT: the attribute 'v' is no longer passed from the surrounding scope."
21652237,1,0,2,java.util.HashMap,"Above is the code using X-OR Approach 2: By using HashMap If I use hashmap , the space complexity would be O(n)."
21656111,2,0,0,java.util.HashMap,i think the problem is in the way you iterate through the items in the HashMap  try to do the following to iterate through the Map :  code.
21656056,2,0,1,java.util.HashMap,HashMap Stores the reference of your key.
21656056,2,0,1,java.util.HashMap,So If you change the key it will be changed in the HashMap.
21658335,1,0,9,java.util.HashMap,Suppose we have ConcurrentHashMap(CHM) instead of Hashtable or HashMap.
21658392,2,0,3,java.util.HashMap,But then you will essentially have a slower HashMap.
21658411,2,0,13,java.util.HashMap,"To be precise, you can use external synchronization to ensure atomicity of compound operations, but only if all operations with ConcurrentHashMap are synchronized over the same lock as well (though use of ConcurrentHashMap won't make sense in this case - you can replace it with regular HashMap)."
21659204,1,0,3,java.util.HashMap,Synchronize access to HashMap from two threads in java.
21659204,1,0,3,java.util.HashMap,I can access HashMap variable hashMap from Thread1 and Thread2.
21659204,1,0,3,java.util.HashMap,Thread1 modifies the hashMap and Thread2 reads the HashMap.
21660010,1,0,1,java.util.HashMap,How to retrieve all the keys of a given in Java HashMap?
21660010,1,0,1,java.util.HashMap,How do we do this without iterating over the entire HashMap?
21660975,2,0,0,java.util.HashMap,I am thinking HashMap perhaps.
21660975,2,0,0,java.util.HashMap,So the key of your HashMap can the Stock object containing price and the int is the number of said stocks in you possession.
21660975,2,0,0,java.util.HashMap,"HashMap<Stock, int> stocks = new HashMap<Stock, int>();"
21661983,1,0,2,java.util.HashMap,Why can I retrieve the value from a HashMap with a different object?
21661983,1,0,2,java.util.HashMap,I added two of them to the HashMap and the third one is same as the first employee object.
21661983,1,0,2,java.util.HashMap,"I am not adding e3 to the HashMap, but I'm still getting it from the HashMap."
21662016,2,0,0,java.util.HashMap,map.get(Object) will look for an object in the HashMap that exists in there based on the rules defined in .equals() and hashCode().
21666273,1,0,0,java.util.HashMap,How to calculate student's average grade using HashMap?
21667362,1,0,0,java.util.HashMap,HashMap memory efficiency.
21676431,2,0,0,java.util.HashMap,This implementation of HashMap has a compact method that shrinks the size of a HashMap down to exactly the size it needs to hold all elements it has right now.
21672382,1,0,1,java.util.HashMap,Add elements to HashMap - .containsKey() always returns false.
21672382,1,0,1,java.util.HashMap,"I have List<HashMap> of mail addressess, along with users ids (each entry in list looks like: id: 123,  mail: ""john@doe.com"")."
21672382,1,0,1,java.util.HashMap,"I want to make a HashMap in which every key is a domain name of e-mail address, and value is list of e-mails from that domain: code."
21672656,1,0,0,java.util.HashMap,Adding data from database to HashMap.
21672954,1,0,0,java.util.HashMap,"What i did was put integer,String values in HashMap."
21672954,1,0,0,java.util.HashMap,"(map.put(0,""zero"") etc..) Create a new String array using above HashMap  code."
21672954,1,0,0,java.util.HashMap,remember the indexes of input to String Array Sort the String Array and then replace the String values with Integers using HashMap.
21673286,2,1,0,java.util.HashMap,"When you already have a HashMap storing the mapping, you can just use a Comparator that compares the entries of the array by looking up and comparing the respective values in the map code."
21674218,2,0,0,java.util.HashMap,You cannot access HashMap elements by index.
21676884,1,0,0,java.util.HashMap,Copy HashMap of different type.
21676884,1,0,0,java.util.HashMap,"How can I copy content of one HashMap<String,AddressDTO> to another  HashMap<String,AddressBO> of a different type."
21677007,2,0,1,java.util.HashMap,"Also, HashMap takes a map."
21677043,2,0,0,java.util.HashMap,Alternatively you could just set the reference in the new map to be the same as the old map (then they will both share the same HashMap).
21678611,2,1,15,java.util.HashMap,Iterate over this code and add students to the HashMap code.
21681887,2,0,0,java.util.HashMap,Now have a HashMap of category name vs TreeSet of top 25 player objects in that category.
21681887,2,0,0,java.util.HashMap,"------ Traverse the HashMap and build the top entries for this category from ""scratch""."
23633432,2,1,0,java.util.HashMap,"In this method, I parse the txt file to a HashMap, and change the characters one by one from Symbol code to Unicode: code."
23633432,2,1,0,java.util.HashMap,Where conversionTable is the HashMap object containing the replace codes as hex values.
21686978,1,0,3,java.util.HashMap,"On the server-side, I have a HashMap of Command as the key, and an Executor class as the value."
21689946,2,0,1,java.util.HashMap,*You would probably need a HashMap only if you were interested in the number of occurrences of each String in the file.
21689211,2,0,1,java.util.HashMap,"Hashtable is pretty old, and has been superseded by HashMap."
21689211,2,0,1,java.util.HashMap,"A HashMap is used when you want to associate some sort of value with each key; for example, you could use it to look up somebody's name and get their phone number."
21689211,2,0,1,java.util.HashMap,"As Luiggi mentioned in the comments, HashMap and HashSet are just specific implementations of Map and Set; those implementations use hash tables, but other implementations of those classes are available."
21689211,2,0,1,java.util.HashMap,"You'll need to use HashMap and HashSet when constructing the table, but you should usually declare your variables simply as Map and Set, because that way you could replace the HashMap or HashSet with some other class that implements the same methods."
21693868,2,0,0,java.util.HashMap,This wrapper object stores this complete data into a HashMap.
21693868,2,0,0,java.util.HashMap,Once the memory is freed the HashMap is also left for garbage collection.
21691888,1,0,0,java.util.HashMap,"Hi all im having this kind of error on my code: The method put(String, List) in the type HashMap> is not applicable for the arguments (String, List>) My code is here: code."
21692031,2,0,0,java.util.HashMap,"You are constructing the HashMap as a HashMap<String, String> not a HashMap<String, List<?>>."
21692055,2,0,1,java.util.HashMap,"the main reason is your listDataChild only allow List<String> type, but your input param (listUnderVRP) has  List<HashMap<String, String>> so try this: replace: code."
21695552,2,1,2,java.util.HashMap,Just create an array or HashMap that will map month index to number; code.
21695669,1,0,0,java.util.HashMap,Remove Last Elemet From HashMap.
21696035,2,0,1,java.util.HashMap,"HashMap doesn't arrange it's elements according to an index, but you can retrieve only the element according to it's key, so if you have to use a HashMap you have to add an incremental index to it's key, so when you put a new element that index incremented with one and put with the key in the HashMap, like this : code."
21696168,2,0,1,java.util.HashMap,@Unmesha SreeVeni : Use LinkedHashMap to delete last element because HashMap does not maintain order of insertion of the elements.
21695679,2,0,4,java.util.HashMap,"There is no order in HashMap, so, you can't remove the last item."
21696014,2,0,0,java.util.HashMap,"use HashMap like below, Manager->(person->salary)"
21699610,2,1,0,java.util.HashMap,Okay here is an Handler i use: package com.portaaenigma.eventsystem; import java.util.ArrayList; import java.util.HashMap; import java.util.LinkedList; import com.badlogic.gdx.utils.TimeUtils; import com.portaaenigma.managers.Logger; public class EventHandler implements Interface_EventHandler {     private HashMap> listeners;     private LinkedList events; code.
21703398,2,0,0,java.util.HashMap,"You could use a map and store key value-pairs if itemID is unique  Map<Long,Long> pairMap=new HashMap<Long,Long>(); and to add things in it pairMap.put(ItemID,OrderID) ."
21703851,1,0,2,java.util.HashMap,Update: I've created an example on GitHub to demonstrate my problem; HibernateMapTest currently fails due to the fact the HashMap key is a proxy object.
21703851,1,0,2,java.util.HashMap,"I'm simply trying to fetch the contents of a HashMap persisted in Hibernate, but I'm having some trouble finding the correct way to do it..."
21704509,2,1,4,java.util.HashMap,"For example, this code shows the type parameters of ArrayList and HashMap: code."
21707195,1,0,0,java.util.HashMap,I am using List for store data.If I use HashMap instead of List.
21707195,1,0,0,java.util.HashMap,"HashMap don't follow ordering.But, I have to maintain the order."
21707277,2,0,1,java.util.HashMap,A HashMap or HashSet will allow much faster checks for whether they contain an object as it does not need to scan every object in the list.
21707291,1,0,0,java.util.HashMap,"I need to parse xml file and get some nodes to the HashMap, where key = nodeName, value = nodeValue; As I need to get just some nodes, I have to keep xPath to them in another file, what libraries do I need to do this?"
21719630,1,0,0,java.util.HashMap,"Basically, I am able to access Bugzilla Webservice API through java code(xmlrpc) and in return i get a object of class java.util.HashMap."
22221238,2,1,0,java.util.HashMap,Object from Bugzilla is first typecasted to a HashMap type.
22221238,2,1,0,java.util.HashMap,Each Keyset of HashMap itself is an object that contains the array of an object where in each object is again a Hashmap.
21719768,2,0,0,java.util.HashMap,"If it returns a HashMap, then you want to make the variable ""createResult"" a HashMap."
21719768,2,0,0,java.util.HashMap,"Then ""createResult"" is a HashMap, and you can use it as such, eg createResult.isEmpty() createResult.size() etc Good luck!"
21720128,1,0,1,java.util.HashMap,"But it throws an error saying - Cannot invoke BeanOne.setFieldTwo on bean class 'class Bean' - argument type mismatch - had objects of type ""java.util.HashMap"" but expected signature ""BeanTwo"" How can I use BeanUtils to correctly populate the inner bean ?"
21720759,1,0,21,java.util.HashMap,Convert a JSON String to a HashMap.
21720759,1,0,21,java.util.HashMap,I want to store all the data from the JSONObject in that HashMap.
21720905,2,0,2,java.util.HashMap,You need to import the HashMap into the class code.
21720920,2,0,1,java.util.HashMap,you need to import the HashMap to avoid the compile error code.
21722754,1,0,0,java.util.HashMap,I use XML parser and put it on HashMap for getting it.
21727045,1,0,0,java.util.HashMap,Can't populate a HashMap with inputs.
21727045,1,0,0,java.util.HashMap,so my HashMap is null
21727418,2,1,0,java.util.HashMap,There is no predefined Adapter which will render a HashMap You can create a custom adapter by extending ArrayAdapter.
21727418,2,1,0,java.util.HashMap,Here is an example for HashMap in Custom Adapters :  code.
21727418,2,1,0,java.util.HashMap,here you can find out how to use HashMap in ExpandableListAdapter.You can pass your HashMap from Constructor and use it in Adapter.
21730203,1,0,0,java.util.HashMap,Calculating Document Frequency in HashMap java.
21730999,1,0,1,java.util.HashMap,Deserialize POJO as a value in HashMap.
21730999,1,0,1,java.util.HashMap,But Jackson creates my Interval object as a HashMap.
21737816,2,1,3,java.util.HashMap,To expand a bit: Replace your Set with a HashMap.
21737816,2,1,3,java.util.HashMap,"Generally speaking, any time you need random access to any form of Collection you're probably better off using some variation of Map instead (HashMap being the most common)"
21782657,2,0,2,java.util.HashMap,You should put this in your HashMap string list code.
21741855,1,0,1,java.util.HashMap,Manipulate ArrayList stored as value in HashMap.
21741855,1,0,1,java.util.HashMap,I have a HashMap that stores Id as key and an ArrayList as value.
21741855,1,0,1,java.util.HashMap,"My question is, as I update the property of element, would that be reflected in the ArrayList inside the HashMap as well?"
21741855,1,0,1,java.util.HashMap,"Or will I have to remove the list, replace that element in the list and again insert the list for that key to see the reflected value in the HashMap."
21741900,2,0,3,java.util.HashMap,The element will be updated inside the HashMap as well.
21746146,2,0,0,java.util.HashMap,"With any HashMap, the keys will only become eligible for garbage collection when the HashMap containing them and all other objects referencing them become unreachable."
21746644,1,0,0,java.util.HashMap,Second HashMap contains the product name and the units sold.
21747593,2,0,0,java.util.HashMap,"BTW Use HashMap is you can, Hashtable is a legacy class."
21746983,1,0,0,java.util.HashMap,JBoss drools checking value of HashMap by passing a key.
21746983,1,0,0,java.util.HashMap,"Is there a way I can check the value of a HashMap in ""when"" block, by passing a key."
21746983,1,0,0,java.util.HashMap,Here Account is a class and hm is a HashMap in this class.
21748313,2,0,0,java.util.HashMap,"The reason why get() with HashMap might not work is probably due to the fact that Drools expects the facts to follow JavaBeans standard, and thus the method would need to be getGet() for it to work directly."
21749057,2,0,5,java.util.HashMap,Use a HashMap that has the char as a key and the number it appears as the value.
21750004,1,0,4,java.util.HashMap,HashMap should be unsorted but still sorts according to key.
21750004,1,0,4,java.util.HashMap,"According to these:  http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html Difference between HashMap, LinkedHashMap and SortedMap in Java java beginner : How key gets sorted in hashmaps?"
21750004,1,0,4,java.util.HashMap,The HashMap in Java should be unsorted but it is being sorted with respect to Key.
21750004,1,0,4,java.util.HashMap,But still I am confused why the HashMap sorted it.
21750273,2,0,1,java.util.HashMap,"The reason why it appears sorted, in this simple example: A HashMap is internally constructed from ""Bins""."
21750273,2,0,1,java.util.HashMap,"When an item is inserted into the HashMap, then the ""Bin"" in which it should be inserted is - to simplify it a little - found by using the hashCode() of the object as an array index."
21750273,2,0,1,java.util.HashMap,"And since a HashMap initially has an internal array size of 10, inserting Integer objects between 0 and 9 will coincidentally place the elements in the right order into the array."
21750309,2,0,0,java.util.HashMap,"This would explain this coincidence, but well, one would need to dig into the implementation of Integer and HashMap to prove this."
21750074,2,0,0,java.util.HashMap,You can't make assumptions about the orderings on HashMap objects.
21770555,2,0,1,java.util.HashMap,Like every one is saying (AND is right about) is that you should assume that the keys in an HashMap are not sorted.
21770555,2,0,1,java.util.HashMap,Now they LOOK sorted in your case for two simple reasons: 1 - You are using Integer as a key: The HashMap use the hashCode() method of the Object class of Java to find the index in the underlying array it uses to store the Entry instances (what contains your values and keys in the HashMap).
21770555,2,0,1,java.util.HashMap,2 - You are not setting the initial size of the HashMap and thus are using its default initial size (which is 16).
21770555,2,0,1,java.util.HashMap,Since the HashMap gets the index by doing code.
21770555,2,0,1,java.util.HashMap,"Later on HashMap might increase the capacity of its underlying array if you insert a lot key-value pairs (how and when it decides to do that is very interesting if you are into algo and data  structure study), so you might end up in a situation in which your Integer keys might look sorted again, but they actually are not intentionally sorted."
21750087,2,0,1,java.util.HashMap,It's simply a property of the implementation of HashMap that Integers added sequentially (and starting at 0) at first seem to be ordered.
21752771,1,0,1,java.util.HashMap,java clone deep copy HashMap.
21752771,1,0,1,java.util.HashMap,"What I did is, that I took the data and put it into the HashMap."
21752771,1,0,1,java.util.HashMap,"My first question is: Is it correct, to save the data brought from DB in a HashMap, so I don't have to query it from DB every time?"
21752771,1,0,1,java.util.HashMap,"My second question is, in case I can use a HashMap to save the data,   I've to make a deep copy or clone of the data brought and put in the HashMap, so each user have a copy of the origin data."
21754098,1,0,3,java.util.HashMap,Java HashMap returning null on get() call.
21754098,1,0,3,java.util.HashMap,We had observed a NullPointerException when trying to get a value assoicated with a given key in HashMap.
21754957,2,0,3,java.util.HashMap,"For your simple example, it looks like you can simply replace HashMap with ConcurrentHashMap, but it's difficult to be sure that's correct without seeing the rest of your program."
21754957,2,0,3,java.util.HashMap,"You might also be interested in this blog post, A Beautiful Race Condition, which shows why sharing a HashMap between threads without synchronization can cause unexpected behaviour."
21754957,2,0,3,java.util.HashMap,"Edit: It's probably worth drawing your attention to this part of the JavaDoc for HashMap:  If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally."
21756498,2,1,0,java.util.HashMap,I believe what you are experiencing is a rehash of the HashMap during your call to code.
21756498,2,1,0,java.util.HashMap,"One could believe, that if HashMap#containsKey(key) returns true, it should be guaranteed, that calling HashMap#get(key) should also return a valid value, as long as the key is not removed from the HashMap."
21756498,2,1,0,java.util.HashMap,"This could be argued by the fact, that HashMap#containsKey(key) does indeed check, if the key corresponds to a valid value: code."
21756498,2,1,0,java.util.HashMap,"HashMap#containsKey(key) does only guarantee, that the key has already been associated to some value sometime before it was called."
21756498,2,1,0,java.util.HashMap,"But it does not guarantee, that HashMap#get(key) will also return the corresponding value, if multiple threads are accessing the map."
21756498,2,1,0,java.util.HashMap,"The reason for this discrepancy is, that other threads accessing HashMap#put(key,value) with any key-value pair, may force a rehash of the HashMap, which results in the recreation of the internal hash table."
21756498,2,1,0,java.util.HashMap,"If such a rehash happens during your call to HashMap#get(key), it is possible, that HashMap#get(key) returns null, even though your HashMap previously returned true when calling HashMap#containsKey(key)."
21756574,1,0,0,java.util.HashMap,I have looked into HashMap and Hashset data structures but they are not truly O(1) as in case of collision in the hash-code they become array of LinkedLists which has linear search complexity at worst case.
21756574,1,0,0,java.util.HashMap,I have also considered increasing the number of buckets in the HashMap but it does not ensure that every element will be stored in a separate bucket.
21757121,2,0,1,java.util.HashMap,"You could also try TreeMap, which, with its O(log n) operations, will sometimes outperform HashMap."
21756905,1,0,0,java.util.HashMap,"Say Account is a class having a List<HashMap<String,String>> hmList."
21756905,1,0,0,java.util.HashMap,How do I traverse through each of the HashMap to check for a condition?
21757309,1,0,0,java.util.HashMap,"I'm parsing an XML file with some entries like this one:  <control key=""test"">FF FF FF FF FF FF FF FF</control>  I save them into a HashMap and now I want to convert the String that I get into an int[]."
21759210,2,0,1,java.util.HashMap,"HashMap, ArrayList, etc are part of the core Java libraries and are recommended for use."
21760428,2,0,2,java.util.HashMap,"ConcurrentHashMap doesn't allow either the key or the value to be null, unlike some other Map implementations:  Like Hashtable but unlike HashMap, this class does not allow null to be used as a key or value."
21761751,2,1,1,java.util.HashMap,If your predict String is always piped(|) the numbers then you can easily split them using pipe and then keep track of the counts on a HashMap.
21764323,1,0,0,java.util.HashMap,i also try to save a HashMap> or Arraylist collections but it d'nt work.
21765721,2,0,0,java.util.HashMap,the value entry of HashMap can be any Object and a LinkedList is a object so code.
21765771,2,0,1,java.util.HashMap,"You should not use LinkedList nor HashMap classes directly, instead try to code oriented to interfaces."
21773974,2,1,0,java.util.HashMap,@user3269829 you should not use HashMap for contain data of different types.
21773926,1,0,1,java.util.HashMap,"Why is data.entrySet().iterator() ordered in a different order, compared to the HashMap data?"
21773926,1,0,1,java.util.HashMap,"I have input data (Timestamp, Json string) which I store in a HashMap<Long, String>."
21773926,1,0,1,java.util.HashMap,My problem is now that the HashMap is organized as follows: code.
21773926,1,0,1,java.util.HashMap,"Better expressed: I add A to the HashMap, Z to the HashMap, E to the HashMap, I to the HashMap."
21773926,1,0,1,java.util.HashMap,The order of the itarator is different from the HashMap order.
21773926,1,0,1,java.util.HashMap,For me the order of the iterator has to be exactly the same as the order of the HashMap.
21773984,2,0,3,java.util.HashMap,"HashMap is not organised in any particular order, or more precisely, the order is not guaranteed."
21773986,2,1,1,java.util.HashMap,"HashMap documentation says that  This class makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time."
21773998,2,0,1,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."""
21815234,2,0,0,java.util.HashMap,This way you can also Load Your file at runtime into a 2D array or collection(mostly HashMap is used).
21815234,2,0,0,java.util.HashMap,Now you can check or get the city and country in the divideCityCountry HashMap().
21776782,1,0,1,java.util.HashMap,I'm having trouble mapping a simple HashMap onto a nested Hashmap.
21778704,2,0,0,java.util.HashMap,This is a variation of the answer of user3309578         static HashMap words   = new HashMap(); code.
21778768,2,1,3,java.util.HashMap,"ModelMap subclasses LinkedHashMap which in turns extends HashMap The generic type of ModelMap is fixed at Map<String, Object> So you can iterate through the keys of a map as in HashMap, you can use keyset() or entryset()  code."
21784268,2,0,0,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode, which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
21784527,1,0,0,java.util.HashMap,JAVA: HashMap - How can I associate the values?
21785105,2,0,4,java.util.HashMap,HashMap is not thread-safe.
21785245,2,0,1,java.util.HashMap,A HashMap is not synchronized so you have to do it on your own!
21789019,2,0,1,java.util.HashMap,And then follow your working code and add type also to your Insert query and HashMap as well which will come from above query result: code.
21797346,2,0,3,java.util.HashMap,"Another possibility is using a HashMap<String, Integer> but I feel like a custom class is more warranted here."
21797851,1,0,1,java.util.HashMap,I'm trying to write a method that will return an ArrayList of Strings from my HashMap.
21797851,1,0,1,java.util.HashMap,Currently I have a HashMap that contains a String as the identifier (key?
21799775,1,0,1,java.util.HashMap,I am trying to parse a text file using HashMap.
21801203,1,0,0,java.util.HashMap,"I am trying to implement HashMap in JAVA, in my algorithm, i have to find if any of the keys contain values other than a specific value....for instance, lets say, all the keys in the map should have value 0 stored in them."
21802544,1,0,1,java.util.HashMap,"The HashMap can allow me to use two arguments, but that's not enough in my case."
21802776,1,0,0,java.util.HashMap,Store multiple values in HashMap and get it later.
21802776,1,0,0,java.util.HashMap,I am storing a data in HashMap and getting the value in later stage.
21802830,2,1,2,java.util.HashMap,Taken from here: Java: iterate through HashMap
21803450,2,0,1,java.util.HashMap,"As suggested by the documentation:  If a thread-safe implementation is not needed, it is recommended to   use HashMap in place of Hashtable."
21803719,1,0,0,java.util.HashMap,"I have a HashMap wich contains a HashMap, and this second HashMap contains another HashMap : code."
21803719,1,0,0,java.util.HashMap,"I want my HashMap to be static and final and contains data, so I did the following : code."
21803719,1,0,0,java.util.HashMap,"In fact, There is a method where I have to declare and populate a HashMap and use it as an argument for the parent HashMap, but in my case I'll end up with hundreds of declarations."
21809618,2,0,1,java.util.HashMap,"A HashMap with name as the key will give you O(1) performance when matching the elements, keep a TreeSet with a rating Comparator and you'll have the items in order."
21811990,2,0,2,java.util.HashMap,HashMap is one of such classes: code.
21811990,2,0,2,java.util.HashMap,See this question for an explanation of the difference between HashMap and Hashtable.
21813328,2,0,0,java.util.HashMap,"Okay, HashMap is expecting two strings."
21813328,2,0,0,java.util.HashMap,"Try doing HashMap<String, Integer> = new HashMap<String, Integer>();"
21816681,1,0,0,java.util.HashMap,Which of the below ways of adding to a HashMap is more efficient (considering both time and space efficiency)?
21816717,2,1,1,java.util.HashMap,"Whether you temporarily store that reference in foo before passing it to the HashMap or not doesn't really make a difference (and even if it would, this would be optimized away)."
21817008,2,0,0,java.util.HashMap,"So you could do Map<String, BaseballPlayer> playersMap = new HashMap<String, BaseballPlayer>() and add your players mapping their full name to the actual BaseballPlayer instance."
21819527,2,0,2,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
21822159,1,0,0,java.util.HashMap,Should a custom Java HashMap size be used?
21822214,2,0,0,java.util.HashMap,Better to use the standard HashMap.
21822214,2,0,0,java.util.HashMap,"Binary tree lookup is a larger order of magnitude than HashMap lookup, but still very fast."
21822257,2,1,2,java.util.HashMap,"No, the HashMap will increase in size automatically to keep its load factor under the default of 0.75 if you don't specify anything."
21822257,2,1,2,java.util.HashMap,"Even if you don't do anything explicitly about it, your HashMap will grow as you populate it, while keeping appropriately small if you don't use all 64 entries."
21822257,2,1,2,java.util.HashMap,"In short: If you just leave HashMap to its defaults, it's usually alright."
21822273,2,0,1,java.util.HashMap,You can read a previous post regarding the same  Best way to initialize a HashMap
21823938,1,0,0,java.util.HashMap,HashMap data not appending new data into ArrayList.
21823938,1,0,0,java.util.HashMap,I store this info in HashMap.
21823938,1,0,0,java.util.HashMap,I add more client info in the ArrayList of this HashMap.
21824199,2,0,0,java.util.HashMap,What you should do is to drop List of hashmaps and just use a single HashMap to keep track of all the clients.
21825215,1,0,0,java.util.HashMap,C++ map collision resolution as java HashMap.
21825843,1,0,4,java.util.HashMap,"I have a shared resource - a simple POJO wrapping a HashMap - that will be initialised once at startup and then only ever read, possibly simultaneously, by many threads (context is a web application)."
21825963,2,1,6,java.util.HashMap,"In practice, you will have to make sure that the HashMap is populated before any other threads that will access it are started and that its contents are not modified after that."
21826695,1,0,0,java.util.HashMap,"I'm fetching the value out of a HashMap which is filled out of an XML file with this format [00, 00, 00, 00], but I need it for every int with 0xin front."
21834527,1,0,0,java.util.HashMap,How to sort two HashMap which has common key?
21834527,1,0,0,java.util.HashMap,"I have two HashMap which look like this, code."
21834527,1,0,0,java.util.HashMap,Here both HashMap has common key.
21834527,1,0,0,java.util.HashMap,I want to sort scoreValue HashMap and scoreName HashMap where scoreName HashMap should also be sorted according scoreValue.
21834616,2,0,0,java.util.HashMap,If you need the fast id look-up as well then you can have as HashMap of id to Score.
21835189,2,0,0,java.util.HashMap,HashMap has no ordering of any sort.
21835189,2,0,0,java.util.HashMap,Using a LinkedHashMap is very similar to using a HashMap.
21835459,2,0,2,java.util.HashMap,"You can use a HashMap<String, Integer> that would map every character to its position."
21835459,2,0,2,java.util.HashMap,"Then use HashMap method .containsKey() to find out, if a certain String is present in the field and .get() to find out the position."
21838408,1,0,0,java.util.HashMap,I am able to send request to the IdP and when I am trying to read the response I am getting the error :  java.lang.IndexOutOfBoundsException: Index: 0 at java.util.Collections$EmptyList.get(Unknown Source) at org.opensaml.xml.util.LazyList.get(LazyList.java:93) just before: Assertion assertion = response.getAssertions().get(0); Map resutls = new HashMap(); Any suggestion or pointer will be helpful.
21839172,1,0,0,java.util.HashMap,"For example:   HashMap 1: 100  hello 101  nice   HashMap 2: 100 hello 102 good   After combine, the hashmap should looks like:   100 hello 101 nice 102 good I have tried putall,but seems it does not remove duplicate entries."
21839196,2,0,1,java.util.HashMap,"The keys of a HashMap can't be duplicates, because they are represented in a Set, so merging the two maps should do the work."
21841365,2,0,0,java.util.HashMap,"You will probably want to use a HashMap<String, List<Integer>> data structure to hold this information."
21841367,2,0,0,java.util.HashMap,"You can use a HashMap to store pairs of <String, List>, where String will be your key and List will be a list of positions, where such key was found."
21843404,1,0,0,java.util.HashMap,I have the following HashMap: code.
21848032,2,0,1,java.util.HashMap,First add your letters to a HashMap: code.
21848508,1,0,0,java.util.HashMap,I maintain the cache arraylist sorted according to the score of the items which I keep in a HashMap reqID (K) - score (V).
21848508,1,0,0,java.util.HashMap,"My first thought was a HashMap positions (reqID - index) due to constant complexity of the operations that I care about, but then I noticed that each time I insert an item in the cache, the index of the other items is increased by 1."
21849071,2,0,0,java.util.HashMap,Then implement the cache pool with HashMap: code.
21853886,2,0,0,java.util.HashMap,With little modifications to your code you are good to go: import java.util.HashMap; import java.util.Map; public class Q1_JavaApplication1 { code. }
21854841,2,1,3,java.util.HashMap,"As such, the BasicDBObject returned is really just a simple wrapper around HashMap (With ordered keys and a certain view of serializing) ultimately and thus does not have the special properties associated with a DBCursor object."
21918041,2,0,2,java.util.HashMap,UnifiedMap is a drop-in replacement for HashMap.
21863084,2,1,1,java.util.HashMap,I'd recommend using actual objects instead of a HashMap but that's outside the scope of this question I'd adjust your getView call to add this line before returning code.
21868524,1,0,0,java.util.HashMap,Or do I stuff the original objects in a HashMap and pass back that?
21869524,1,0,1,java.util.HashMap,However when I try to getSerializableExtra() I got the following error:  java.lang.ClassCastException: java.util.HashMap cannot be cast to   com.appspot.sonorous_zone_440.meet_app.model.MeetAppFacebookEvent  Searching around I found the cause of the problem.
21871056,1,0,1,java.util.HashMap,Bundle HashMap with custom object.
21871056,1,0,1,java.util.HashMap,I have a problem about Bundle HashMap in onSaveInstanceState() in SupportMapFragment.
21871056,1,0,1,java.util.HashMap,"The logcat message is following:  E/AndroidRuntime(12445): android.os.BadParcelableException: ClassNotFoundException when unmarshalling: com.myapp.model.StationHashMap  Already try some solutions :  In onSaveInstanceState(), add bundle.setClassLoader(getClass().getClassLoader()); In onSaveInstanceState(), use bundle.putSerializable(SAVE_INSTANCE_KEY_SATION_MAP, mStationMap); directly put HashMap in bundle, but the logcat message change into com.myapp.model.Station."
21871056,1,0,1,java.util.HashMap,"Following code:  MapFragment.java: extends SupportMapFragment, I want in onSaveInstanceState() save the previous state data StationHashMap.java: store HashMap, implements Parcelable Station.java: store all Station data, also implements Parcelable  MapFragment.java code."
21886676,2,0,1,java.util.HashMap,"Really, what you have works fine overall, but if you are looking for another way to do it then I would suggest using a HashMap."
21886676,2,0,1,java.util.HashMap,"Then, you can loop through the HashMap and gather the values."
21886676,2,0,1,java.util.HashMap,"I'm not the best with JSP, but I know that you can use a HashMap with it!"
21886836,1,0,0,java.util.HashMap,4 Key Value HashMap?
21886902,2,1,1,java.util.HashMap,"Then, when creating the HashMap, all you have to do is call the method to get your three values."
21886902,2,1,1,java.util.HashMap,Then put them in a HashMap somewhat like this: code.
21887899,2,0,0,java.util.HashMap,"For storing the number of occurrences for each token, I would suggest using a HashMap<String, Integer>, as it has constant access time and you can check easily, if a value is already stored in it using map.containsKey()."
21888802,1,0,2,java.util.HashMap,Implementation of hashCode and equals of a custom object to use as a key in HashMap.
21888802,1,0,2,java.util.HashMap,"As I know, if we want to use object as key in HashMap, we need to implement hashCode and equals methods (on that class) to work properly."
21888864,2,0,1,java.util.HashMap,"You are supplying the same object reference, e1, as what's already in the HashMap, so it containsKey(e1) returns true."
21888867,2,0,1,java.util.HashMap,"The class Object already contains implementations for hashCode and equals, and these work fine in a HashMap."
21889469,1,0,3,java.util.HashMap,Text file parsing using HashMap and List.
21893423,2,0,0,java.util.HashMap,"Put all the JTextFields into an array or  HashMap<JTextField,Boolean> and iterate through the list checking: code."
21894423,1,0,0,java.util.HashMap,"However, I am trying to do it in a nested HashMap."
21894423,1,0,0,java.util.HashMap,I had a look at How to put/get values into/from Nested HashMap but I'm still not understanding it.
21897041,1,0,2,java.util.HashMap,"If you need, like me, to assotiate a picture with a cell in future, try to use HashMap()."
21900390,1,0,0,java.util.HashMap,How does HashMap work with two objects with same hash code.
21900390,1,0,0,java.util.HashMap,"There is a HashMap<I, String>."
21900762,2,0,1,java.util.HashMap,"Refer these links, 1.how HashMap works in Java and 2.how HashMap works in Java"
21902090,1,0,0,java.util.HashMap,Passing HashMap of JavaMail Messages to Android activities.
21911930,1,0,0,java.util.HashMap,How to store HashMap in single row where each key of map is 1 to 1 to column name in row of this?
21911930,1,0,0,java.util.HashMap,I would prefer rather use HashMap with enumaration as keys same as column name.
21913837,1,0,5,java.util.HashMap,"An idea could be to store the HashMap within itself for reverse look-up, but it will be an inefficient approach."
21917971,2,0,2,java.util.HashMap,"Please consult the HashMap-API, it is correct by definition: ""Associates the specified value with the specified key in this map."
21917971,2,0,2,java.util.HashMap,"(http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html#put(K, V))"
21918090,2,0,1,java.util.HashMap,"In short: Your method works as HashMap is designed - you force put to HashMap with same key and first time add value to map, and any other time you just change value of this element because it has same key."
21918090,2,0,1,java.util.HashMap,Description: You have this situation - You are created HashMap like that: code.
21918090,2,0,1,java.util.HashMap,"Instead of this, you have to put in HashMap something else (array for example) with unique key."
21918090,2,0,1,java.util.HashMap,Here is example of this HashMap: code.
21919788,2,0,1,java.util.HashMap,"I don't see the pattern connecting pairs to their target texts, so I suggest this:  Assuming these text variables are of the type Text, store them using one of the following:  Text[] texts = new Text[N]; ArrayList<Text> texts = new ArrayList<Text>();  Put all of your Text instances in the array or ArrayList Set up a map or method that takes the odd number of some pair of consecutive Texts and returns the target Text to modify (look up HashMap) Use a for loop to iterate through every other Text instance  Here's an example, if you're using an array and some method findTarget: code."
21922993,2,1,1,java.util.HashMap,If you want to avoid the possibility of removing data because you happen to have two people with the same name there are a few approaches you can take:  Keep the old data Keep the new data Assign the new data to a new key Combine the data in the same key  Keep the old data Perform a check before using HashMap#put and see if the key already exists.
21922993,2,1,1,java.util.HashMap,"Combine the data in the same key Define your HashMap as HashMap<String, List<String>> and add the values to the list."
21923457,1,0,1,java.util.HashMap,"If I have to make it myself, I would use a LinkedList to store the data, and HashMap to map every key to a list of all occurrence of nodes together with their previous and next ones."
21926604,2,0,0,java.util.HashMap,"You can refer to the source code of HashMap If based on your implementation: foo.hashCode() == bar.hashCode() and foo.equals(bar) Then, yes you could directly get the value for key foo by map.get(bar)  updated: sorry misunderstanding your question before if you want to keep the key, why you don't just keep the key cached."
21927415,2,0,1,java.util.HashMap,HashMap actually does have a method to retrieve the entry but it is package-private.
21927116,1,0,0,java.util.HashMap,how to avoid the unchecked call warning in java for a java.util.HashMap.
21927116,1,0,0,java.util.HashMap,"I am storing an image as a string and converting it to a JSONObject and storing it in a json file and at last i'm reading from the same json file and retrieving the string as an image.In this process i get an warning  Simple.java:29: warning: [unchecked] unchecked call to put(K,V) as a member of the raw type java.util.HashMap          fjson.put(""imagestring"",base64String);                  ^   1 warning   the code is:     code."
21929889,1,0,1,java.util.HashMap,I'am trying to marshall and unmarshal a HashMap as a list.
21929889,1,0,1,java.util.HashMap,"The marshalling works in both Java versions (6u45 and 7u21), but unmarshalling the list entries with Java 6u45 will deliver an empty myModels-HashMap."
21929889,1,0,1,java.util.HashMap,"In Java 7u21, the myModels-HashMap is filled."
21930596,2,1,1,java.util.HashMap,"Also, you had a HashMap rather than a List, but HashMaps aren't Iterable, so you can't use the extended for loop on them."
21931488,1,0,1,java.util.HashMap,To HashMap or not to HashMap?
21931488,1,0,1,java.util.HashMap,I was recommended to use a HashMap.
21931488,1,0,1,java.util.HashMap,"So my plan is to create a HashMap for the coordinates of Route_A.txt, have one column for Latitude and the other for Longitude."
21931488,1,0,1,java.util.HashMap,"From that I was going to create another HashMap that will contain the device_id and the HashMap containing the coordinates, and the device_id will travel through each step of the HashMap."
21931584,2,1,2,java.util.HashMap,Don't store your coordinates in a HashMap.
21931584,2,1,2,java.util.HashMap,"The List will preserve order, whereas a normal HashMap wouldn't."
21931630,2,0,2,java.util.HashMap,"A HashMap is a data structure that let's you associate a value with a key, and allows, given a key, to get back the value in constant time (without the need to loop as you would have to with a list or an array, for example)."
21931630,2,0,2,java.util.HashMap,"And if you want a list of coordinates, then you should use a List<Coordinate>, and not a HashMap."
21933051,2,0,1,java.util.HashMap,"Just regular Map, like HashMap."
21940312,2,1,2,java.util.HashMap,Instead of having subclasses of MenuItem just use a single class MenuItem and have a HashMap within it.
21940312,2,1,2,java.util.HashMap,The HashMap then maps from keys to values for all the properties of that MenuItem.
21942953,1,0,0,java.util.HashMap,Loading HashMap in Java.
21942953,1,0,0,java.util.HashMap,I'm loading a HashMap like this code.
21942953,1,0,0,java.util.HashMap,"I now access the HashMap keys.get(""k_close"").intValue(); but I'm prompted a NullPointerException."
21946272,2,0,0,java.util.HashMap,Using a HashMap is a good way to address what you want to do.
21947242,1,0,0,java.util.HashMap,"I want to use this method to delete the same names in HashMap but when i try to compile my code, i get ConcurrentModificationException."
21949631,1,0,0,java.util.HashMap,I want to implement HashMap – Single Key and Multiple Values using Google Guava Collections.
21950274,2,0,1,java.util.HashMap,"And for grouping the results by accounts, what you need is not and ArrayList, but a HashMap, using the account number as key."
21951181,1,0,0,java.util.HashMap,"I want to access the fieldList in order of the fieldNameList, i.e.         color = yellow, green, red, blue One way that I know is to iterate through the fieldList first and create a HashMap<String, Field> nameFieldMap and then iterate through the fieldNameList and access the required field properties by the fieldNames in order."
21955565,2,0,0,java.util.HashMap,You could use a HashMap and then you can store pairs of ints with their corresponding characters.
21955821,1,0,0,java.util.HashMap,How to search Object stored in HashMap.
21955821,1,0,0,java.util.HashMap,How can I search and return object details  from HashMap I declared the hashmap below  code.
21956257,1,0,0,java.util.HashMap,I have been trying to code a new class in JAVA where I use a Map and HashMap to relay information to different classes rather than declaring the Map locally in every class.
21956951,1,0,1,java.util.HashMap,Pull entry from List nested in HashMap.
21956951,1,0,1,java.util.HashMap,I have a HashMap of lists.
21956951,1,0,1,java.util.HashMap,I'm iterating through each entry of the HashMap and displaying it using: code.
21956951,1,0,1,java.util.HashMap,"I believe I need to assign the list to it's own object prior to the iteration, but I can't seem to extract the list from the HashMap."
21956951,1,0,1,java.util.HashMap,"The output must display each entry of the HashMap including it's key, but only the first 3 items of the list."
21963582,1,0,0,java.util.HashMap,"After all, I cannot go to the HashMap source code and add those annotations."
21966260,2,0,1,java.util.HashMap,"A HashMap, (if you can assign a name to each of them instead of relying on position) 3."
21966663,1,0,0,java.util.HashMap,Inserting values into HashMap not functioning properly.
21966663,1,0,0,java.util.HashMap,"I am trying to insert values of a String and ArrayList<String> into a HashMap<String, ArrayList<String>>."
21966663,1,0,0,java.util.HashMap,The code in the for loop works fine but it does not insert the values that I wanted when inserting ArrayList values into the HashMap.
21971142,2,0,6,java.util.HashMap,"This is specified in the doc :  ClassCastException - if the key is of an inappropriate type for this   map (optional)  It says optional because for an HashMap per example, get will return null."
21971577,1,0,0,java.util.HashMap,"Output for e should be: EXISTE 2E 1 My code so far is as follows – I know I could have used a HashMap, but this is school work and we haven't learned that yet, so I'm trying to keep it within what was lectured –: code."
21971704,2,0,0,java.util.HashMap,Another suggestion: You haven't studied HashMap but still you can write your own HashMap like implementation or closely resemble to that.
21972996,2,0,0,java.util.HashMap,"If your id values are not necessarily integers or if they are not a continuous sequence from 0 forward, you could also use a HashMap."
21973022,1,0,2,java.util.HashMap,Currently I use the VariableDeclarationFragment to store the type of any variable in a method in a HashMap.
21973022,1,0,2,java.util.HashMap,"When a method invocation occurs (identified using MethodInvocation),  I search for the variable passed as a parameter in the HashMap so as to determine its type."
21973022,1,0,2,java.util.HashMap,in the HashMap I store x which maps to int.
21974143,2,0,0,java.util.HashMap,For more information you can refer the following links :  TreeSet HashMap
29067137,2,0,8,java.util.HashMap,"HashMap: A Map where keys are unordered, and backed by a Hashtable."
21976785,1,0,0,java.util.HashMap,Sorting by multiple keys in nested HashMap.
21976785,1,0,0,java.util.HashMap,I currently have a setup where the data structure is an ArrayList with each key containing a HashMap for each key in ArrayList.
21976785,1,0,0,java.util.HashMap,What I'm trying to do is be able to sort by key or keys within the HashMap itself.
21984912,1,0,0,java.util.HashMap,"error is constructor ""The constructor ExpandableListView(Context, List, HashMap>) is undefined""..."
21987051,1,0,0,java.util.HashMap,"I have two HashMaps;  One HashMap collects deviceIds(ints) and Coordinates(lat, long) The second HashMap also collects the deviceIds and the position of which lat,long coordinate the deviceId is pointing at(int)  Here is what I have done so far; code."
21987233,2,1,1,java.util.HashMap,"You're using a HashMap, which means the ordering of your data is lost when you add it to the collection."
21991985,1,0,0,java.util.HashMap,I have created a nested HashMap  as follows code.
21996617,1,0,1,java.util.HashMap,Adding new Key Value Pair Replaces all values in Java HashMap.
21998655,1,0,0,java.util.HashMap,The above class is created a few times and stored in a HashMap in the main class.
22000639,1,0,0,java.util.HashMap,Way to make this HashMap more efficient.
22000978,2,1,2,java.util.HashMap,(2) can be O(1) if you have a separate HashMap which maps the ID to the user.
22000978,2,1,2,java.util.HashMap,"(3) of course is O(N) because you need to list all N users, but if you have a HashMap where key is the day and value is list of users, you only need to go through constant (10 years * 365 days + 2) number of arrays to list all users."
22000999,2,0,2,java.util.HashMap,"A HashMap is thus the ideal structure for that: it's O(1), as well as the insertion into the map."
22000999,2,0,2,java.util.HashMap,"But maintaining a TreeSet in parallel to a HashMap is cumbersome, error-prone, and costs memory."
22000823,2,0,0,java.util.HashMap,A HashMap doesn't sort anything; its primary purpose/advantage is to offer near-O(1) lookups (which you can use for lookups by ID).
22001576,2,0,2,java.util.HashMap,I'm assuming you're talking about HashMap.
22001619,2,0,0,java.util.HashMap,"A HashMap ""bucket"" is a linked list."
22005241,2,0,1,java.util.HashMap,I can see you're creating a HashMap which never gets added to the model.
22004587,2,1,1,java.util.HashMap,"If the behavior is unique, you might use the strategy pattern with a HashMap: code."
22004351,1,0,1,java.util.HashMap,Creating HashMap from ArrayList.
22005859,1,0,1,java.util.HashMap,"I have a HashMap like this :  HashMap < String,CustomObject > map=new HashMap<>(); String is a name   CustomObject has 3 Integers."
22006044,2,0,2,java.util.HashMap,What you need is some way to know when the data in your HashMap and tell the models to update themselves some how.
22006296,2,0,0,java.util.HashMap,"Note: To avoid the explicit cast to String, you can declare your HashMap like: code."
22006296,2,0,0,java.util.HashMap,"And if you want to iterate through the EntrySets of the HashMap, so you replace every ocurrence of the keys, use a for loop: code."
22008612,2,0,0,java.util.HashMap,"java.time In Java 8 If your question is really about how to format a date (as stated in your last line), and not really about HashMap, here's how to do it with the new java.time package in Java 8."
22006816,2,0,2,java.util.HashMap,"Using HashMap as your UserInfo container is highly recommended here, according to your scenario."
22009371,2,1,0,java.util.HashMap,Hashmap can't contain duplicate keys(HashMap) and in your case  if(map.containsKey(word) && map.get(word) > 1) will always return false it should be if(map.containsKey(word) && map.get(word) == 1)
30927272,2,0,0,java.util.HashMap,"No JSON libraries, just String and HashMap."
30927272,2,0,0,java.util.HashMap,// JSON Transform to HashMap example based on String code.
22011887,2,1,8,java.util.HashMap,Parse the JSONObject and create HashMap code.
22014912,1,0,1,java.util.HashMap,How to map a HashMap with a List as a value in Hibernate.
22014912,1,0,1,java.util.HashMap,As the subject says I want to map a HashMap with a List as a value in Hibernate.
22014912,1,0,1,java.util.HashMap,My HashMap looks like this: code.
22014912,1,0,1,java.util.HashMap,"It's related question to this Hibernate(JPA) mapping a HashMap where the answer suggests to put list in the Key class, but it's not something I wish to do."
22020338,1,0,0,java.util.HashMap,Convert string into enum during @RequestBody deserialization with a HashMap.
22021560,2,0,0,java.util.HashMap,"A ResultSet is just like a List<HashMap<String, dataType>> :  Create a List, and each record that is returned is populated into a   HashMap where the fieldName is the key and the data returned is the   value then add the HashMap to the List."
22021560,2,0,0,java.util.HashMap,"For each record, create a new HashMap and repeat."
22028593,1,0,0,java.util.HashMap,What I am trying to do is sort a HashMap alphabetically by key and then return a list of the values in that order.
22028593,1,0,0,java.util.HashMap,"After googling, I found that I could sort a HashMap easily using a SortedSet, but then I run into the problem of how do I get the tree set into an array?"
22028719,2,0,0,java.util.HashMap,Maybe use TreeMap instead of HashMap if you want to return it sorted alphabetically.
22029459,1,0,1,java.util.HashMap,I keep the score (request count in a sliding window of last K requests) of the objects in a HashMap: code.
22029459,1,0,1,java.util.HashMap,"For that purpose, I use an integer field called counter and a HashMap called positions: code."
22032787,2,0,4,java.util.HashMap,"As a solution (not shown in this example), a key is created for each field, and the GUI registers each component with it's key (a HashMap is used)."
22031864,1,0,1,java.util.HashMap,"Marshall of HashMap, Arraylist, and list with title into OMElement as response in webservice wsdl?"
26741774,2,0,1,java.util.HashMap,Build the HashMap with Int = number of times that Char appears in the input string; in O(n)  where n=length of the input string.
26741774,2,0,1,java.util.HashMap,Find the maximum value in HashMap in O(m) where m is the number of unique characters in the input string.
26741774,2,0,1,java.util.HashMap,"Tips: When you are building the HashMap, at the same time, you can store the maximum value and corresponding character."
22034332,2,0,1,java.util.HashMap,"Use HashMap <Character,Integer>."
22036188,2,1,0,java.util.HashMap,There is a better way to do that and that is by using HashMap: code.
22079257,2,0,1,java.util.HashMap,"Everybody might like to have its thread local variable to pass on parameters like currency, locale, roles, maybe it becomes even a HashMap...."
22043137,2,0,1,java.util.HashMap,Don't store the HashMap in the database.
22043137,2,0,1,java.util.HashMap,Store the objects which are in the HashMap in the database.
22043137,2,0,1,java.util.HashMap,"I guess you can recreate your HashMap when you have all of its ""values"" in the database."
22043529,2,0,0,java.util.HashMap,You map  Map storage = new HashMap()<>; Potential usage  code.
22043095,2,0,0,java.util.HashMap,"I would suggest you to XML serialize your HashMap : http://stackoverflow.com/a/4602230/1788704 Then, put it in your MySQL table in a TEXT column."
22045509,2,0,1,java.util.HashMap,"If you have a HashMap of Components in the Item class, instead of the Set, and each key in the HashMap is the name of the component, then the input from the user can be searched in constant time!"
22044563,2,0,1,java.util.HashMap,"The reason is that hashCode of the key will be used by the LinkedHashMap (in fact, it is its super class HashMap) when hashing the entries, and lookup a certain key."
22044723,2,0,0,java.util.HashMap,"This question doesn't really have anything to do with HashMap, it's more just ""how do I compare objects in java""."
22044723,2,0,0,java.util.HashMap,"While the hashCode doesn't matter for the HashMap where your objects are the values, it could matter if you ever try to use your objects as keys for another HashMap."
22049581,1,0,1,java.util.HashMap,Java HashMap.put() not working inside an invokeLater createAndShowGui method.
22049581,1,0,1,java.util.HashMap,"The class has a private HashMap, to which new GUI's are added in the createAndShowGui method."
22049581,1,0,1,java.util.HashMap,"But when I call .put() from inside said method, it doesn't work as I HashMap.get() returns null when called after the createAndShowGui method is called."
22053880,1,0,0,java.util.HashMap,"Evidently I don't have sufficient experience and I know almost nothing about Map, HashMap or so… The XMLParser is not mine."
22053953,2,0,0,java.util.HashMap,"For iterating through all the values in your HashMap, you can use an EntrySet: code."
22054056,2,0,0,java.util.HashMap,So the entry is HashMap that mean you need to get the Named/Value pairs out of the Map.
22054808,2,1,1,java.util.HashMap,You may also have a look into HashMap as normally you will at some point try to access a specfic sub-LinkedHashSet; using a map this is achieved with ease by defining constant lookup-keys in a common class or interface.
22055840,1,0,4,java.util.HashMap,Map rather than HashMap.
22056287,1,0,1,java.util.HashMap,The code which I have written is using HashMap.
22078025,2,1,0,java.util.HashMap,"I ended up Using a HashMap<String,Bitmap> to store the images once they were downloaded."
22059837,1,0,0,java.util.HashMap,"This is a HashMap<Character, Integer>, by the way."
22060955,1,0,0,java.util.HashMap,Then I added this into a HashMap so the 'key' is the word and the 'value' is the hash.
22060955,1,0,0,java.util.HashMap,My using this HashMap I converted the entire 500MB into a separate Hash file).
22063820,1,0,0,java.util.HashMap,"This way I'm not going through each and every key in hmap like I do with the first method, and I use the O(1) HashMap.get() method instead."
22069554,2,1,1,java.util.HashMap,"If you use a simple HashMap, you have every chance of corrupting it under enough load (and cause infinite loops, for example)."
22072233,1,0,1,java.util.HashMap,Create Multidimensional HashMap in java.
22072233,1,0,1,java.util.HashMap,"I have to create a HashMap (or something like this), where I save a String which is an attribute of the node, and a List of all nodes that have the same attribute."
22079311,2,1,1,java.util.HashMap,"A HashMap may be a good idea, because you always have the colornames which maps to the hex value."
22079311,2,1,1,java.util.HashMap,But using only a HashMap you will lost the original order.
22076298,2,0,0,java.util.HashMap,"HashMap<Integer, HashMap<String, List<Object>>> looks good."
22080607,2,0,1,java.util.HashMap,"If you must refer to them by name as you insist, use a HashMap."
22080954,2,0,1,java.util.HashMap,I recommend using a HashMap.
22080954,2,0,1,java.util.HashMap,You can import your array into a HashMap like this: code.
22080928,1,0,1,java.util.HashMap,Accessing HashMap in JSP with Integer key no longer works.
22080928,1,0,1,java.util.HashMap,"appliedJobs is populated in Java as a HashMap<Long, String>."
22081505,1,0,9,java.util.HashMap,"In addition, I have found a Map which seems to be used as a ""cache"" (horrible but true), the problem is that such map is NOT synchronized and it is shared among threads (being static), the problem could be not only concurrent writes but also the fact that with lack of synchronization, there is no guarantee that thread A will see the changes done to the map by thread B, however, I am unable to figure out how to link this suspicious map using the memory eclipse analyzer, as it does not use the AbstracReferenceMap, it is just a normal HashMap."
22081604,1,0,0,java.util.HashMap,"I really must stay with the String[][] approach to help myself instead of delving too far into arrayList, lists, hashmaps, sparseArrays, HashMap>.."
22081966,2,0,0,java.util.HashMap,"Build a HashMap<Double,String> to store all the values, and populate it."
22085066,2,0,0,java.util.HashMap,"Then in your AsyncTask, maybe you should change, class AmbilData extends AsyncTask(String, String, String) to class AmbilData extends AsyncTask(String, String, HashMap<String, String>) { In method doInBackground code."
25842661,2,0,1,java.util.HashMap,"It is intended to be more   memory efficient than using a HashMap to map Integers to Integers,   both because it avoids auto-boxing keys and values and its data   structure doesn't rely on an extra entry object for each mapping."
25842661,2,0,1,java.util.HashMap,"For more clarity, put methods of SparseIntArray and HashMap can be compared."
22115813,2,0,1,java.util.HashMap,There is another cache implementation around that has access times on par with a HashMap.
22101465,2,0,0,java.util.HashMap,"Just a kick-off example , This way is more useful as it sorts the HashMap and keeps the duplicate values as well."
22104338,1,0,1,java.util.HashMap,Choose Trie or HashMap for storing a word frequency list?
22104338,1,0,1,java.util.HashMap,I　need to store it using either a HashMap or a Trie data structure in Java.
22104338,1,0,1,java.util.HashMap,"My understanding is that, the look up is slower for HashMap than Trie, but Trie will take up more memory usage, and the implementation of a Trie also takes effort, while HashMap already is ready for use."
22104338,1,0,1,java.util.HashMap,"Also, HashMap allows for ""constant time"" for lookup."
22109836,2,0,1,java.util.HashMap,"My understanding is that, the look up is slower for HashMap than Trie, but Trie will take up more memory usage  This is incorrect."
22109836,2,0,1,java.util.HashMap,"Assuming a good hash function, a lookup in a HashMap will require a small constant number of random accesses to main memory, irrespective of the size of the table, or the length of its keys."
22105293,2,0,2,java.util.HashMap,"Java's HashMap has quite some history and is probably one of the best tested, commented, critized and improved implementations of a hash map available."
22105293,2,0,2,java.util.HashMap,"For your requirement I would clearly start with it, possibly experiment a bit with the loadFactor and only if you run into serious problems provably due to the HashMap, I would invest time in a trie."
22104757,2,1,5,java.util.HashMap,This is because EnumMap is a highly optimized map implementation for enums that uses only one array with one slot for every possible value (instead of a much larger array like a HashMap).
22105439,2,1,0,java.util.HashMap,": LinkedList, ArrayList,HashMap, etc..)."
22105189,1,0,1,java.util.HashMap,Store the standard descriptions in a HashMap code.
22108656,2,0,0,java.util.HashMap,"You could use a HashMap to store all Foo objects, with their id as key."
22108656,2,0,0,java.util.HashMap,Then loop through Bar list and access directly HashMap position you want
22109978,1,0,1,java.util.HashMap,Concurrent modification of HashMap by two threads.
22110821,2,1,33,java.util.HashMap,The runtime performance of a switch on String objects is comparable to a lookup in a HashMap.
22112123,1,0,2,java.util.HashMap,"However I can't instantiate it with new HashSet < HashMap<Character, Integer> >."
22112123,1,0,2,java.util.HashMap,"Could anyone tell me why Java can't convert HashSet<HashMap<Character, Integer>> to Set<Map<Character, Integer>>?"
22112165,2,1,4,java.util.HashMap,"It's simpler to show you an equivalent situation - let's use Object and String in the place of Map<Character, Integer> and HashMap<Character, Integer>."
22112165,2,1,4,java.util.HashMap,"Once you've got your head round that, port it back to your more complex situation: a Set<HashMap<Character, Integer>> can only contain HashMap<Character, Integer> elements... whereas with a Set<Map<Character, Integer>> you could add any kind of Map<Character, Integer>."
22112519,2,0,3,java.util.HashMap,"HashMap, which overrides it, implements it as follows: code."
22143840,2,1,0,java.util.HashMap,"Map reportParams = new HashMap();   reportParams.put(""ds1"", new   JRBeanCollectionDataSource(beanCollection1)); reportParams.put(""ds2"",   new JRBeanCollectionDataSource(beanCollection2)); JasperPrint jrprint =   JasperFillManager.fillReport(jasperReport,reportParams, new   JREmptyDataSource());  Make sure to declare the parameters in the report with the same names (ds1, ds2), and set the ParameterClass as  net.sf.jasperreports.engine.data.JRBeanCollectionDataSource  Now you can retrieve them with $P{ds1},$P{ds2} and so on."
22113338,2,0,1,java.util.HashMap,"public listviewAdapter(Activity activity, ArrayList<HashMap> list) Is a Constructor it does not have a return type."
22113338,2,0,1,java.util.HashMap,"You will understand if you understand listview reycling How ListView's recycling mechanism works http://developer.android.com/training/improving-layouts/smooth-scrolling.html  Last but not least, can i use other thing beside HashMap."
22117070,1,0,0,java.util.HashMap,Sorting a complete HashMap.
22117070,1,0,0,java.util.HashMap,I am trying to work with a seemingly complex HashMap object to pupulate my expandable Listview in android.
22117070,1,0,0,java.util.HashMap,The generic parameters for my HashMap as as  shown below: code.
22117070,1,0,0,java.util.HashMap,"Now I want to be able to sort the above HashMap, first by Year and Month so that my listview will display events in 2014 at the top following by 2013, 2012 .... in that order."
22118220,2,1,1,java.util.HashMap,"If that's the case, a HashSet will likely be a better choice than a HashMap: code."
22117792,2,0,1,java.util.HashMap,Use a Custom HashMap.
22119598,2,0,0,java.util.HashMap,"You could use a HashMap with ""key"" as the word and ""value"" as the number of occurrences."
22119950,1,0,0,java.util.HashMap,I had my code working perfectly except I tried to replace my 2 arrayLists with a HashMap...  That is where things took a wrong turn.
22120904,2,0,2,java.util.HashMap,"If you can use a HashMap to lookup the patterns for each word, the cost will be O(n * m) You can use a HashMap for all the possible words, you can then dissect the words later."
22124394,2,1,1,java.util.HashMap,"For better performance, I would recommend to make your field as Integer and then use SparseIntArray instead of HashMap for Performance Benefits Hope this helps."
22126787,1,0,3,java.util.HashMap,HashMap mapping integer array by considering their values.
22126899,1,0,0,java.util.HashMap,"But, If I have to set a page scoped variable which is supposed to be a HashMap, how can I do it?"
22128562,2,0,0,java.util.HashMap,You can make use of HashMap to handle duplicate key names.
22128562,2,0,0,java.util.HashMap,HashMap studentsMap = new HashMap( 10 ); code.
22130027,2,0,1,java.util.HashMap,HashMap migh be not the happier choice for your task.
22131806,2,1,0,java.util.HashMap,"you try put map.put(""Nos"", dataF[arrLength]); as HashMap<String, String[]> but dataF[arrLength] is a one String and your hashmap need one Array of String."
22135449,1,0,2,java.util.HashMap,I keep a synchronized HashMap with an association of names to objects.
22135449,1,0,2,java.util.HashMap,But the HashMap  should be freed from the name after type II work has been  completed.
22135449,1,0,2,java.util.HashMap,"But during type I or type II work, the HashMap  should not be locked."
22136062,2,0,14,java.util.HashMap,Consider any non-public class that you would like to store in a HashMap.
22136062,2,0,14,java.util.HashMap,"You would override the public equals() and hashCode() in that non-public class, and the implementation of HashMap can access them regardless of the fact that the class is non-public."
22157740,2,1,1,java.util.HashMap,"Try using a HashMap<String,Bitmap> and initialize it such that there is a key for every image you need, and make the key the image name."
22138534,2,0,8,java.util.HashMap,"I have chosen to do it using a HashMap and the run-time Event class, but there are a lot of other possible implementations."
22143652,1,0,0,java.util.HashMap,"Edited:- Here is my whole class,i am having a HashMap I want to sort by values using Generic class,hence writing this class code."
22146057,2,0,1,java.util.HashMap,Map.Entry is nothing but Entry class written inside HashMap class which implements Entry interface which is written inside Map interface.
22146574,2,1,0,java.util.HashMap,"IMO, you have to use GSON anywhere where you have REST service, but GSON is more slower than java collections (ArrayList or HashMap or any other ...) and you will decrease app performances if you continue to use GSON everywhere."
22146549,1,0,3,java.util.HashMap,"I was wondering whether is there a data structure that offers constant effort (O(1)) for both insertion/removal from/to both ends, as for example a LinkedList offers, and retrieval from a random index, as for example a HashMap offers."
22146896,2,1,3,java.util.HashMap,"Java has multiple hash-backed data structures, from the sounds of things a HashMap<String, String> would do the trick for you."
22147643,2,0,0,java.util.HashMap,"It may turn out that the usage of the ConcurrentHashMap instead of the plain HashMap was the overkill to eliminate, but even that is left open."
22154331,2,1,7,java.util.HashMap,"Therefore, the StringBuilder's contents do not affect the hash code, and even when you change its contents, the HashMap is still able to find the StringBuilder."
22155141,2,0,3,java.util.HashMap,"Maybe just a HashMap is fine, too."
22156551,2,1,0,java.util.HashMap,You can use a HashMap for this.
22157813,1,0,1,java.util.HashMap,I have a HashMap that I need multiple threads to access.
22157830,2,1,3,java.util.HashMap,If your HashMap is static in that the threads are only reading from the map and only making changes to the object that is referenced in the map but not changing the value in the map then you will be fine.
22168747,2,0,0,java.util.HashMap,"now create a Map - Map<BigDecimal,Employee> empMap = new HashMap<>(); code."
22168854,1,0,0,java.util.HashMap,Parse a formula which contains variables from HashMap.
22170274,1,0,0,java.util.HashMap,It's using this CompositeClassLoader  http://grepcode.com/file/repository.jboss.org/nexus/content/repositories/releases/org.drools/knowledge-api/5.6.0.Final/org/drools/util/CompositeClassLoader.java#CompositeClassLoader I believe this then gets invoked by http://grepcode.com/file/repository.jboss.org/nexus/content/repositories/releases/org.drools/knowledge-api/5.6.0.Final/org/drools/util/ClassLoaderUtil.java?av=f The CompositeClassLoader.java has a bug in it for multi-threading environment on the CachingLoader (on the HashMap put method).
22171146,2,0,1,java.util.HashMap,"A HashMap can't be sorted, but if you want to display the contents of the map sorted, you could sort a list of your projects by unit (look for a Comparator on Project) and get the value of the corresponding project from the map."
22174464,2,0,0,java.util.HashMap,With Map<String> map = new HashMap<String>(); you are using a simple form of dependency injection.
22174464,2,0,0,java.util.HashMap,Your code does't care if you are using a HashMap or a TreeMap because you can use their common interface.
22174774,2,0,0,java.util.HashMap,"If it is important to stay generic, i use the interface Map, but in most case, i don't care of this and i prefer to be less abstract than possible for this container so i prefer to use HashMap."
22174540,2,0,0,java.util.HashMap,"Map is a interface, whereas HashMap is a concrete implementation of Map."
22174540,2,0,0,java.util.HashMap,Therefore the second construct will have functionality of HashMap and obviously has implemented Map.
22181403,1,0,0,java.util.HashMap,How to access HashMap data from a Public/private Class.
22181403,1,0,0,java.util.HashMap,since the image is json parsed from a website and stored in a harshMap: my HashMap(relavant code): code.
22186678,2,0,0,java.util.HashMap,"Apparently, my HashMap was already public, and with a little reading and research, I learned about how to implement HashMap's."
22182167,1,0,1,java.util.HashMap,But my question is how do I junit the return type of handleRequest which is returning a HashMap with key and value pair.. How do I verify that it is returning Hello World?
22182502,2,0,0,java.util.HashMap,"HashMap This way you can extend PlayerName, Stack, Overflow, Word, Press with some custom class and use it with the map: HashMap <CustomClass, Arena>"
22182526,1,0,0,java.util.HashMap,"All nodes are stored in a HashMap containing the String name as a key and node as a value, so I can get to nodes easily to create relationships."
22183414,2,0,0,java.util.HashMap,Possibly a HashMap or a HashSet.
22184528,2,0,2,java.util.HashMap,You can think of a HashMap as IndexMap where the index can be any Object (key) and it is mapped to another Object (value).
22184688,2,0,0,java.util.HashMap,Why are Java HashMap not like EnumMaps or other special hashtable collections that do not require a hash (because the hash is pre-calculated).
22184688,2,0,0,java.util.HashMap,Its because HashMap is a generic collection so that you can store any object.
22184688,2,0,0,java.util.HashMap,If you want a faster HashMap (ie fast hash) then certain assumptions need to be made about the data your storing in the Map (like EnumMap).
22187740,2,0,0,java.util.HashMap,You should consider using a HashMap code.
22187740,2,0,0,java.util.HashMap,It is even easier when you populate the HashMap by iterating through a list of students.
22190489,2,1,1,java.util.HashMap,First iterate your HashMap to get keys and values and store it in List.
22192410,1,0,0,java.util.HashMap,I looped in the searcher and each time I would like to put the Document in a HashMap.
22193769,2,0,2,java.util.HashMap,"What implementation of the Map interface you choose is up to you, as long as it is assignable to the variable type of the map, i.e. you can use a LinkedHashMap, a TreeMap or a HashMap since they only differ in the way they store their data."
22193382,1,0,2,java.util.HashMap,Printing HashMap in a JSP.
22193382,1,0,2,java.util.HashMap,I am using Spring Framework and I want to print a HashMap in a JSP using JSTL's ForEach loop.
22193382,1,0,2,java.util.HashMap,But still I am unable to print the HashMap.
22196239,2,0,0,java.util.HashMap,"you should user a HashMap< int,int > where you store the number and the number of times the user entered it try something like this (this is a basic idea not the real code): code."
22199590,2,1,2,java.util.HashMap,"In actual fact, the implementation of HashSet in (at least) the Oracle Java SE Library in Java 7 has a HashMap inside it."
22199590,2,1,2,java.util.HashMap,So your concern about the extra memory usage of HashMap is unwarranted.
22199590,2,1,2,java.util.HashMap,"Here is a link to the source code: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/java/util/HashSet.java/ Incidentally, the internal map is declared as HashMap<E, Object> rather than HashMap<E, E>."
22199543,2,0,4,java.util.HashMap,"However, although the HashMap approach would be irritating, it wouldn't actually take any more memory."
22199543,2,0,4,java.util.HashMap,"HashSet is implemented using HashMap (at least in the stock JDK 7) so there's a full map entry for each set entry anyway... and no extra memory is taken to store the value, because they'd both just be references to the same object."
22203505,2,0,0,java.util.HashMap,"You might consider something like HashMap<int,boolean[] truthinfo>."
22203466,2,0,1,java.util.HashMap,"According to the HashMap API:  The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls."
22203466,2,0,1,java.util.HashMap,"So while this would work with ArrayList<Integer> keys, for anything with customized keys, containing non-standard classes, unless you are correctly implementing hashCode() for those objects, the HashMap may not function properly."
22208281,1,0,2,java.util.HashMap,I'm trying to create an extension to HashMap that modifies the put function.
22208281,1,0,2,java.util.HashMap,*; public class UniqueHashMap extends HashMap { code. }
22208281,1,0,2,java.util.HashMap,The part I'm having trouble with is 1) because most of the solutions I've seen need access to the map (which I don't know how to get since it's a private variable in HashMap).
22208650,2,0,1,java.util.HashMap,But note that this way you will lose HashMap's constant complexity of put method.
22208501,2,0,0,java.util.HashMap,"You could extend HashMap (might be better to implement the Map yourself and use a HashMap to implement it incase they add more add methods), and override the add methods and on each one: code."
22212609,2,0,0,java.util.HashMap,Use a HashMap code.
22212536,2,0,0,java.util.HashMap,"You can use a HashMap, where the key is the file extension and the value is the count of times you found it."
22213240,1,0,1,java.util.HashMap,The HashMap only or is the effect extended to the contents (K and V) of the HashMap as well?
22218046,2,0,2,java.util.HashMap,The volatile keywords neither affects operations on the HashMap (e.g.
22218046,2,0,2,java.util.HashMap,"put, get) nor operations on the ArrayLists within the HashMap."
22218046,2,0,2,java.util.HashMap,The volatile keywords only affects reads and writes on this particular reference to the HashMap.
22218046,2,0,2,java.util.HashMap,"Again, there can be further references to the same HashMap, which are no affected."
22218046,2,0,2,java.util.HashMap,"If you want to synchronise all operations on: - the reference - the HashMap - and the ArrayList, then use an additional Lock object for synchronisation as in the following code."
22218046,2,0,2,java.util.HashMap,"If the reference is not changed, you can use the HashMap for synchronization (instead of the Lock)."
22213311,2,0,2,java.util.HashMap,"The volatile keyword here is only applicable to HashMap, not the data stored within it, in this case is ArrayList."
22213311,2,0,2,java.util.HashMap,As stated in HashMap documentation:  Note that this implementation is not synchronized.
22213317,2,1,3,java.util.HashMap,Note that the atomicity of reads/writes to a field has nothing to do with updating the inner state of an HashMap.
22213317,2,1,3,java.util.HashMap,"Updating the inner state of an HashMap entails multiple instructions, which are not atomic as a whole."
22213317,2,1,3,java.util.HashMap,That's why you'd use locks to synchronize access to the HashMap.
22213317,2,1,3,java.util.HashMap,"Also, since read/write operations on references are always atomic, even if the field is not marked as volatile, there is no difference between a volatile and a non-volatile HashMap, regarding atomicity."
22213967,2,0,0,java.util.HashMap,"If they're generated by code, then you'd be better off making it instead generate code that constructs a HashMap, or a data file that you can read into a HashMap."
22213967,2,0,0,java.util.HashMap,"Or if you have to start with those constant definitions, write a little program that reads that source code text and constructs a HashMap."
22220167,2,1,2,java.util.HashMap,"If you have a small number of constants, you should be using a HashMap or some similar structure."
22213556,2,0,1,java.util.HashMap,"There are lots of ways to do this, but by far the simplest is to put all your constants in a HashMap and use get whenever you want to refer to one."
22215907,2,0,7,java.util.HashMap,What is a HashMap?
22215907,2,0,7,java.util.HashMap,A HashMap is a data structure that is able to map certain keys to certain values.
22215907,2,0,7,java.util.HashMap,Why use a HashMap?
22215907,2,0,7,java.util.HashMap,"However, a HashMap can check if it contains a particular key in O(1)."
22215907,2,0,7,java.util.HashMap,The HashMap uses a function on the key to determine where to place the key's value in the array.
22215907,2,0,7,java.util.HashMap,"For example, if my HashMap accepts Strings...possible hash functions can be:  code."
22226250,2,0,1,java.util.HashMap,So what I have provided is:  Supplier<R>: A new HashMap.
22218970,1,0,0,java.util.HashMap,Map 1 is a TreeMap and Map2 is a HashMap How to extract value (String3[]) in a String array from a TreeMap (Map1) in Java.
22219272,2,0,1,java.util.HashMap,And of course using HashMap: code.
22219199,2,0,1,java.util.HashMap,Use HashMap for resolving this problem.
22220692,1,0,31,java.util.HashMap,But the add method is internally saving the values in HashMap code.
22220692,1,0,31,java.util.HashMap,The put method of HashMap states that   Associates the specified value with the specified key in this map.
22220692,1,0,31,java.util.HashMap,"So if the put method of HashMap replaces the old value, how the HashSet add method leaves the set unchanged in case of duplicate elements?"
22220802,2,0,5,java.util.HashMap,As you can see the HashSet.add method adds the element to the HashMap.put as a key not as a value.
22220802,2,0,5,java.util.HashMap,Value is replaced in the HashMap not the key.
22221576,2,0,1,java.util.HashMap,"From javadocs for HashMap.put(), ""Associates the specified value with the specified key in this map."
22220848,2,0,3,java.util.HashMap,See HashMap#put:  Associates the specified value with the specified key in this map.
22221107,2,0,7,java.util.HashMap,In the source code for HashMap.put we have: code.
22379006,2,0,0,java.util.HashMap,The HashMap is your friend.
22223673,1,0,2,java.util.HashMap,Clarification @ConcurrentModificationException in HashMap.
22223673,1,0,2,java.util.HashMap,So since I am modifying the HashMap after getting the Iterator I should be getting the ConcurrentModificationException
22223778,2,0,3,java.util.HashMap,"You are modifying the HashMap not the entrySet that you are obtaining on it, and here you are obtaining the iterator over the entrySet: As per entrySet method javaDoc:   If the map is modified while an iteration over the set is in progress (except through the iterator's own remove operation, or through the setValue operation on a map entry returned by the iterator) the results of the iteration are undefined."
22224723,2,0,0,java.util.HashMap,You can use a HashMap to store the name you want as key and use the value in the value of HashMap.
22230451,2,0,0,java.util.HashMap,"You should use HashMap<String, String> map... Than you can use map.containsKey(String)"
22230862,2,1,1,java.util.HashMap,"This will result in a HashMap containing <1,""JANUARY""> and <2,""FEBRUARY"">."
22231012,2,1,2,java.util.HashMap,"Maintain a HashMap where the string that you compose is the key to the map, and you can always get the corresponding text field by doing map.get(key) instead of trying to create the name of the variable... which would require reflection, and that's not a path you need to go down."
22235969,2,1,6,java.util.HashMap,"Ditto Map/HashMap/TreeMap, Set/HashSet/TreeSet, and many others."
22236127,1,0,0,java.util.HashMap,Hibernate - Mapping a hql query to a HashMap.
22236127,1,0,0,java.util.HashMap,"And that has a beautiful answer, but what if I want the key of my HashMap to be a String with spaces?"
22236248,2,0,0,java.util.HashMap,This will work fine...think about how a HashMap works...it's backed by a hash table.
22243204,2,1,0,java.util.HashMap,You are parse your data in JSON format so obviously you have store your all data in HashMap Arraylist with particular key for your Video url.
22240004,2,0,0,java.util.HashMap,You can google different between HashMap and HashSet to understand more.
22240004,2,0,0,java.util.HashMap,HashMap  is a implementation of Map interface; HashSet is an implementation of Set Interface; HashMap Stores data in form of  key value pair; HashSet Store only objects; Put method is used to add element in map; Add method is used to add element is Set; In hash map hashcode value is calculated using key object; Here member object is used for calculating hashcode value which can be same for two objects.
22240025,2,0,0,java.util.HashMap,"You can, and you can even further argue that why we need ArrayList because you can see an ArrayList as a map with an integer as index, then you can use an HashMap and use integer as key and then you don't really need List anymore."
22240573,2,0,0,java.util.HashMap,"If not, then just use a HashMap to hold the data for the first table and do the while loop and look up the records of the 2nd table from the HashMap."
22241173,2,0,0,java.util.HashMap,"Map map = new HashMap(); Select all of the rows from the first table, and insert them into the hash map."
22243928,2,0,0,java.util.HashMap,"What we are doing here is grouping the users in a HashMap, but storing the clusters as keys."
22249856,2,0,1,java.util.HashMap,Then use a HashMap to map Users to email addresses.
22249856,2,0,1,java.util.HashMap,(Prefer HashMap to Hashtable.
22253890,2,0,0,java.util.HashMap,"Note: You will need to override the hashCode() method as well if you want to use the objects as a key in a HashMap, HashTable, or in a Set."
22254767,2,0,0,java.util.HashMap,"In the following example, the   compiler generates an unchecked conversion warning because the   HashMap() constructor refers to the HashMap raw type, not the    Map<String, List<String>> type: code."
22254767,2,0,0,java.util.HashMap,"That means you are creating reference myMap of <String, List<String>> type and assigning HashMap Object to that reference of raw type."
22256716,1,0,0,java.util.HashMap,processCustomer Method processes the Query and fills a HashMap according to my needs.
22257306,1,0,0,java.util.HashMap,Java: Adding new items in a HashMap.
22257306,1,0,0,java.util.HashMap,I am using a HashMap because it makes the most sense for storing my data.
22257482,2,0,0,java.util.HashMap,"To use HashMap, you could do the following and should never get nullpointer exception: code."
22257371,2,0,0,java.util.HashMap,You are not creating even single HashMap.
22257371,2,0,0,java.util.HashMap,"By default it contains 50 nulls, it must contain 50 new HashMap objects."
22257376,2,0,0,java.util.HashMap,"You have declared your Array of HashMap's, but not initialized it."
22257376,2,0,0,java.util.HashMap,"Before using it, you need to initialize all of the elements of the HashMap"
22257823,1,0,0,java.util.HashMap,"How do I obtain a list of all the objects that have the same value for a specific attribute out of HashMap<String,HashSet<String>> objects the String holds the attributes and the HashSet holds the list of values for the attributes!"
22258622,2,0,1,java.util.HashMap,"Right now, you are serializing your Pojo to a String, then parsing that String and converting it into a HashMap style object in the form of JSONObject."
22262156,2,0,3,java.util.HashMap,"Create an HashMap of <int, int>."
22262156,2,0,3,java.util.HashMap,"Everytime the user inputs a valid number, you search for that number in the HashMap."
22261997,1,0,0,java.util.HashMap,Converting Each Value in static HashMap to String Java.
22261997,1,0,0,java.util.HashMap,I have got some troubles converting each value in my HashMap to a String.
22261997,1,0,0,java.util.HashMap,This is my constructor for the HashMap.
22261997,1,0,0,java.util.HashMap,"Now I want to convert each Music object to a String without creating a new HashMap, is this possible?"
22262054,2,1,0,java.util.HashMap,You're on the right path but you need to convert the existing List<Music> to a List<String> and put the List<String> into your new HashMap.
22262054,2,1,0,java.util.HashMap,"You also then want to return your newly created HashMap<String, List<String>> instead of your original one."
22262054,2,1,0,java.util.HashMap,"So answer your question:  Now I want to convert each Music object to a String without creating a   new HashMap, is this possible?"
22262054,2,1,0,java.util.HashMap,"You need to create a new HashMap, because it's storing different type of value: List<Music> is different from List<String>."
22262069,2,0,0,java.util.HashMap,Try to change your HashMap like this: code.
22262069,2,0,0,java.util.HashMap,So you can save any kind of objects in this HashMap.
22262249,1,0,3,java.util.HashMap,HashMap rehashing and its subsequent effect on performance as compared with TreeMap.
22262249,1,0,3,java.util.HashMap,"The above means, that the HashMap will re-size around 1000*75 = 750 th entry to 2000."
22262249,1,0,3,java.util.HashMap,HashMap and ConcurrentHashMap are highly used implementations but TreeMap is not that much used in comparison.
22262249,1,0,3,java.util.HashMap,I agree on a TreeMap that only adds and seldom deletes but highly searched to be preferably over HashMap/table implementations.
22262523,2,0,4,java.util.HashMap,"The above means, that the HashMap will re-size around 1000*75 = 750 th entry to 2000."
22262523,2,0,4,java.util.HashMap,The Javadoc says there will be a rehash of the entire HashMap.
22262523,2,0,4,java.util.HashMap,HashMap is O(1) and TreeMap is O(log N).
22262523,2,0,4,java.util.HashMap,I agree on a TreeMap that only adds and seldom deletes but highly searched to be preferably over HashMap/table implementations.
22266187,1,0,0,java.util.HashMap,HashMap initialization NullPointerException.
22266187,1,0,0,java.util.HashMap,"The spritePanel is an instance of another class that is in the same package, the method getVariables() returns a HashMap."
22269271,1,0,2,java.util.HashMap,How to remove duplicate values from a HashMap.
22269271,1,0,2,java.util.HashMap,"I don't know how can best describe my problem but here it is, I'm trying to remove the same names(values) from HashMap<String, String> map = new HashMap<String, String>(); for example if this map contain names like  code."
22271237,2,1,1,java.util.HashMap,The method above uses this to detect that a duplicate has been found and then removes the duplicate from the HashMap by using the remove() method on the iterator.
22271237,2,1,1,java.util.HashMap,If you were to use a TreeMap rather than a HashMap you would be certain to iterate over the map alphabetically by key e.g.
22270164,2,0,0,java.util.HashMap,You should override equals() and hashcode() method to ensure the contract is satisfied to use your object as a key in the implementations like HashSet and HashMap.
22269911,2,0,2,java.util.HashMap,This is particularly important when dealing with HashSet and HashMap which rely on the hash code to distribute objects.
22865528,2,0,1,java.util.HashMap,The client can also receive it as type HashMap.class: code.
22865528,2,0,1,java.util.HashMap,The service actually receives the parameters as a HashMap: code.
22274360,2,0,0,java.util.HashMap,"The fact that your elements are Strings and not Chars can complicate things a little bit, but you can in beforehand create a HashMap (String, Integer) to map every element to a given cardinal, with an initial sweep linear in time."
22274254,2,0,0,java.util.HashMap,"Just store the function name as value in the HashMap, then call it byMethod.invoke."
22275592,1,0,2,java.util.HashMap,Serializing a HashMap but Text File for input is clearing self every program run.
22275592,1,0,2,java.util.HashMap,The gist of my program is to create a HashMap of stocks (key is ticker and value is a Stock object) and then when the program ends to export the hashMap into a text file.
22275667,2,0,1,java.util.HashMap,Use a HashMap of type  to track the unique string values you encounter that  count each word code.
22275966,2,0,0,java.util.HashMap,"If you want to maintain the relation between each word and the frequency of that word, then I suggest that you use a HashMap instead."
22276560,1,0,2,java.util.HashMap,Not able to iterate over HashMap key?
22276560,1,0,2,java.util.HashMap,I have a HashMap defined like this  code.
22280664,2,0,1,java.util.HashMap,"Most likely, you will see all kinds of weird exceptions, because the reader threads will see an inconsistent HashMap."
22286145,1,0,0,java.util.HashMap,HashMap for Huffman Tree.
22286145,1,0,0,java.util.HashMap,My professor mentioned that we should use a HashMap but didn't explain anything about them.
22286347,2,0,1,java.util.HashMap,"For instance   HashMap < Character, Integer >  is a hashmap mapping chars to ints."
22286611,2,0,2,java.util.HashMap,"With HashMap you can access the item efficiently, the time complexity is O(1): code."
22286611,2,0,2,java.util.HashMap,"The key of this HashMap is LocationId, the value is the corresponding __Location object."
22287227,1,0,0,java.util.HashMap,Return the size of an ArrayList that is a value in a HashMap.
22287227,1,0,0,java.util.HashMap,I was instructed to use a HashMap to store the recipients and ArrayLists to hold their mailItems.
22287484,2,0,0,java.util.HashMap,"As you have HashMap<String,ArrayList<MailItem>>."
22288229,1,0,4,java.util.HashMap,Scala HashMap throwing key not found exception.
22288229,1,0,4,java.util.HashMap,"The function returns a HashMap that for each B group, counts the number of A values that fell into the group."
22288229,1,0,4,java.util.HashMap,"I use both of these functions, to help me with charFreq, a function that uses both apply and groupFreq to pass back a HashMap that counts how many times a Char appears throughout the entire file."
22291511,2,1,3,java.util.HashMap,It will be called if you place your object in a HashSet or use it as a key to a HashMap.
22292393,1,0,0,java.util.HashMap,I want to set the HashMap by using setHashmap() and want to persist the entity in database.is it an appropriate way cause when I want to persist it other attribute of entity is persisted but the hashmap attribute contains a BLOB object.
22292622,1,0,0,java.util.HashMap,How to Make a HashMap Key Case Insentive?
22292622,1,0,0,java.util.HashMap,"I have a homework about HashMaps and I'm supposed to use the following tester class, but I get a mistake in 2 lines: for( Map.Entry entry : salaries ) and HashMap accounts = new HashMap<>(new CaseInsensitive()); I'm using eclipse btw code. }"
22292764,2,0,0,java.util.HashMap,"Your hashmap would then be of the form HashMap<MyString, Double>."
22292764,2,0,0,java.util.HashMap,But this would invalidate the test unless you subclassed HashMap so that put and get took in strings.
22297557,2,0,0,java.util.HashMap,"I created a HashMap, added 10K entries and then compared the look-up times for the same key object, once using a traditional equals and hashCode, then again with the EqualsBuilder and HashCodeBuilder."
22477176,2,0,0,java.util.HashMap,"What you want is a HashMap<String,Person> to store your people, and also a HashSet<String> to store the numbers."
22477176,2,0,0,java.util.HashMap,"If it's false, the number was already in the HashSet, so you shouldn't add the Person to the HashMap."
22477176,2,0,0,java.util.HashMap,"If it's true, go ahead and add the Person to the HashMap."
22297755,2,0,3,java.util.HashMap,"EDIT Another possible implementation then is do have a Set<Person>, and get away from the HashMap since it seems like having a name as the key is rather pointless."
22302872,2,1,1,java.util.HashMap,Open JDK - Java Object Layout Sample examining HashMap code.
22303587,2,0,2,java.util.HashMap,"If the data you are trying to store in one row are related and have some unique identity you can use HashMap, or you can create a class with the columns as fields and store the instances of that class in the ArrayList."
22305360,2,1,4,java.util.HashMap,Then have a HashMap containing a word as the key with the value being the number of times it is used.
22306200,1,0,3,java.util.HashMap,UPDATE I'm now using a simple Singleton EJB with a HashMap to store objects between steps and when the job is finished I  clear this map to avoid resources leak.
22306717,2,0,0,java.util.HashMap,"in that case, though map is a Map, you aren't calling .get() of Map--Map is only the base class--you are calling the method .get of HashMap."
22312127,2,0,0,java.util.HashMap,HashMap is used so the check for which class the method is in occurs in constant time and the runtime is linear.
22314768,1,0,1,java.util.HashMap,"I want to make some sort of chart, like a HashMap, that will process the strings accordingly."
22315374,1,0,1,java.util.HashMap,How do I pass a Java HashMap to a custom Mule connector?
22315374,1,0,1,java.util.HashMap,"I have a HashMap stored in a session header inside my Mule flow (#[header:session:myHashMap]), but I can't figure out how to send it to the connector."
22315655,1,0,0,java.util.HashMap,Now I want to merge these two together and put them into another HashMap as map3  what would be the best way to do this in terms of asymptotic complexity.
22315886,1,0,0,java.util.HashMap,"I was attempting to make it store a MailItem(String recipient, String subject, String message) in a HashMap with a String key and an ArrayList (of MailItems) value."
22317881,1,0,2,java.util.HashMap,Use custom class in HashMap in android.
22317881,1,0,2,java.util.HashMap,I am trying to use a custom class into a HashMap in my android application.
22318072,2,0,0,java.util.HashMap,"But remember, when you put items to HashMap in some order, there is no guarantee, it will come out in the same order."
22318072,2,0,0,java.util.HashMap,"If you need to have same order on output, as on input, instead HashMap use LinkedHashMap."
22318072,2,0,0,java.util.HashMap,"You can use it in the same way as HashMap, but it preserves order of inserted items."
22325280,2,0,0,java.util.HashMap,If you want to use HashMap which is Map implementation you can do it like that: code.
22325232,2,0,0,java.util.HashMap,You can use the HashMap which is an implementation of Map http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html code.
22328087,1,0,0,java.util.HashMap,I used a HashMap to keep all the controllers for each screen 2.
22352860,2,1,4,java.util.HashMap,"Define a static HashMap that maps ""create classes"" to the CreateClassesController object (of which you also have only one in the application)."
22329304,1,0,3,java.util.HashMap,Copying ConcurrentHashMap to HashMap inconsistency.
22329304,1,0,3,java.util.HashMap,"In that case, the size of the CopyOnWriteArrayList is equal to the Value of the AtomicInteger (of course for entries with the same key) After all threads are done (when the CountDownLatch is finished) I try to convert ConcurrentHashMap<String, AtomicInteger> into HashMap<String, Integer> for sorting that Map by Value, because AtomicInteger is not comparable."
22329304,1,0,3,java.util.HashMap,After conversion I sort the HashMap by the Values and pick 20 entries with the highest value - in the sorted Map they are the first 20 entries.
22329304,1,0,3,java.util.HashMap,I made some console outputs to test my Values and got the following: While copying from ConcurrentHashMap to HashMap I verify my values again.
22329304,1,0,3,java.util.HashMap,"After that I iterate 4 more times over my new HashMap to compare my values again and every time I get new random ""bad copied"" values (notice, the values were not detected while copying) (for the code snippet look below):  code."
22329304,1,0,3,java.util.HashMap,"Copy from ConcurrentHashMap<String, AtomicInteger> to the HashMap<String, Integer> each value (I guess its very inefficient) and immediate verifying: code."
22329751,2,1,1,java.util.HashMap,"You cannot pass the HashMap here,So your NewPageForm.java must be , code."
22329751,2,1,1,java.util.HashMap,"Note : If you need to pass the HashMap to the controller , just set the Hashmap in to the request of the JSP , code."
22329883,1,0,0,java.util.HashMap,"I have a string [{Label_0=Mobile, Phone_0=+212131231}], stored in ArrayList within HashMap, I need to assign it to another Arraylist to fetch values but getting a syntax error  code."
22346412,2,1,1,java.util.HashMap,"The line List<HashMap<String, String>> localPhoneArr = _allPeoplesDictArr.get(j).get(""PhoneNumbers""); is giving you the syntax error, because it is a String."
22332943,1,0,0,java.util.HashMap,"""HashMap is not a supported property type"" - embedding a map with Objectify 4."
22332943,1,0,0,java.util.HashMap,"So first I tried to do the same thing but with a HashMap< Long, LevelTwo >."
22334656,2,0,0,java.util.HashMap,That said I would strongly suggest to revisit your use case and use a HashMap or Hashtable if non-string keys are a norm.
22337785,1,0,0,java.util.HashMap,"Mar 11, 2014 5:31:26 PM org.apache.catalina.session.StandardManager doLoad SEVERE: IOException while loading persisted sessions: java.io.InvalidObjectException: enum constant resourceDependencyUniqueIdCounter does not exist in class javax.faces.component.UIViewRoot$PropertyKeys java.io.InvalidObjectException: enum constant resourceDependencyUniqueIdCounter does not exist in class javax.faces.component.UIViewRoot$PropertyKeys     at java.io.ObjectInputStream.readEnum(ObjectInputStream.java:1741)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1345)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)     at java.util.HashMap.readObject(HashMap.java:1155)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)     at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1891)     at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1796)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1989)     at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1913)     at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1796)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)     at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)     at org.apache.catalina.session.StandardSession.readObject(StandardSession.java:1595)     at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1060)     at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:282)     at org.apache.catalina.session.StandardManager.load(StandardManager.java:202)     at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:489)     at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)     at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5476)     at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)     at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)     at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)     at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)     at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1073)     at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1857)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)     at java.util.concurrent.FutureTask.run(FutureTask.java:166)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:724) Caused by: java.lang.IllegalArgumentException: No enum constant javax.faces.component.UIViewRoot.PropertyKeys.resourceDependencyUniqueIdCounter     at java.lang.Enum.valueOf(Enum.java:236)     at java.io.ObjectInputStream.readEnum(ObjectInputStream.java:1739)     ... 43 more Mar 11, 2014 5:31:26 PM org.apache.catalina.session.StandardManager startInternal SEVERE: Exception loading sessions from persistent storage java.io.InvalidObjectException: enum constant resourceDependencyUniqueIdCounter does not exist in class javax.faces.component.UIViewRoot$PropertyKeys     at java.io.ObjectInputStream.readEnum(ObjectInputStream.java:1741)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1345)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)     at java.util.HashMap.readObject(HashMap.java:1155)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)     at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1891)     at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1796)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)     at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)     at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1989)     at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1913)     at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1796)     at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)     at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)     at org.apache.catalina.session.StandardSession.readObject(StandardSession.java:1595)     at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1060)     at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:282)     at org.apache.catalina.session.StandardManager.load(StandardManager.java:202)     at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:489)     at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)     at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5476)     at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)     at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)     at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)     at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)     at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1073)     at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1857)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)     at java.util.concurrent.FutureTask.run(FutureTask.java:166)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:724) Caused by: java.lang.IllegalArgumentException: No enum constant javax.faces.component.UIViewRoot.PropertyKeys.resourceDependencyUniqueIdCounter     at java.lang.Enum.valueOf(Enum.java:236)     at java.io.ObjectInputStream.readEnum(ObjectInputStream.java:1739)     ... 43 more Mar 11, 2014 5:31:26 PM org.apache.catalina.startup.HostConfig deployWAR"
22342209,1,0,0,java.util.HashMap,Use HashMap to create dynamic function call.
22342209,1,0,0,java.util.HashMap,"For example,  Hashmap--       ""a"" -> ""b""       ""c"" -> ""d""  Now I should parse this Hashmap and create a function like this- someFun(""{a:#,c:#}"",new SomeClass(b),new SomeClass(d)); As you can see, a and c are keys of hashmap(first argument) ; b  and  d are used to create objects (second argument and so on..)  someFun parameters depend on HashMap size.."
22346966,1,0,1,java.util.HashMap,"By doing this to a .txt file I get something like this (which seems to be OK): ""7210110810811132119111114108100331310721111193297114101321211111173"" But when I use this on .xlsx file I get this and I think the hyphen makes errors that might occur later in the compression: ""8075342006080003301165490-90122100-1245001908291671111101161011101169584121112101115934612010910832-944240-96020000000000000""... and so on Anyway, by using a string a can map this into a HashMap, where I count the frequency of each character."
22346966,1,0,1,java.util.HashMap,I have a HashMap:  public static HashMap map; code. }
22346966,1,0,1,java.util.HashMap,fromCharactertoCode is another HashMap of type : public static HashMap fromCharacterToCode; (I'm traversing through my table I've built.
22352467,2,0,0,java.util.HashMap,"I recommend that you add all of your JPanels to a Map (I use HashMap) in the form of <Integer, JPanel>."
22349276,1,0,1,java.util.HashMap,"I'm learning Java using BlueJ, I have made a class that has a HashMap of (Integer, String) that contains an ID number of somebody and their name."
22350288,1,0,7,java.util.HashMap,However I have noticed that wordsCount is a simple HashMap so I wonder if I need to explicitly ask for a concurrent map to ensure thread safety: code.
22354005,2,1,1,java.util.HashMap,You could store java.util.concurrent.locks.Lock implementation in a HashMap keyed by the MAC.
22354005,2,1,1,java.util.HashMap,"Make sure that you also synchronise access to the HashMap, otherwise you'll have a possible race condition when you first encounter the MAC address."
22359099,2,0,3,java.util.HashMap,"The reason it's declared with the static modifier is that a HashMap.Entry instance doesn't need to know which HashMap it's part of, so there's no benefit in having that extra implicit reference."
22366565,2,0,2,java.util.HashMap,"Create a new instance variable of type Map Create a new instance of labelMap, using HashMap Associate the row/column with the given label  Then in your MouseListener, you need to  get the JLabel that was clicked, get the associated row/column for the map array and make your updates... code."
22373946,1,0,1,java.util.HashMap,How is entrySet linked to table in HashMap internals?
22373946,1,0,1,java.util.HashMap,According to the HashMap doc on entrySet():  public Set> entrySet () Added in API level 1 Returns a set containing all of the mappings in   this map.
22373946,1,0,1,java.util.HashMap,But as I inspect the HashMap code I cannot understand how the field entrySet is linked to table or any other object.
22374045,2,0,1,java.util.HashMap,EntrySet is a nested class within HashMap see the source code.
22374051,2,1,1,java.util.HashMap,"Note that it's an inner class and has implicit access to all the state, and all the instance methods, of the enclosing HashMap instance."
22374051,2,1,1,java.util.HashMap,It implements its methods by calling the appropriate methods on the enclosing HashMap.
22375585,2,0,0,java.util.HashMap,HashMap does not store the values based on indices.
22379927,2,0,1,java.util.HashMap,EDIT : Name of the variable inside class Parent that is a and bList is the same as key of your HashMap map in other side.
22383520,1,0,0,java.util.HashMap,"I want to sort the data inside ArrayList<HashMap<String,String>> by Unix time-stamp."
22384689,1,0,0,java.util.HashMap,"In my map/reduce map function, I need to read the values from these columns, but can't work out how to convert the column data - which is a byte buffer - into the a usable HashMap variable - the ByteBufferUtil function doesn't seem to help."
22384689,1,0,0,java.util.HashMap,The map/reduce map code I have that extracts the column values at the moment looks like this...  string productid; HashMap products; for (Entry column : columns.entrySet()){ code. }
22388593,2,0,2,java.util.HashMap,"Access complexity time for hash table is O(n) in the worst case:  Time Complexity of HashMap methods So Yes, I would say that if performance accessing your objects collections is so important you should use 1:1 indexed collections like arrays."
22392364,2,0,5,java.util.HashMap,A HashMap doesn't have any predictable order.
22392798,2,0,1,java.util.HashMap,The HashMap class does not give those guarantees.
22392798,2,0,1,java.util.HashMap,"In your case, you appear to be serializing / deserializing a HashMap<String, String>."
22392798,2,0,1,java.util.HashMap,"(The algorithm for hashing a Java String is specified ...)  However, I can't see how you would achieve it using HashMap ... short of grubbing around in the classes private internal data structures."
22395654,1,0,0,java.util.HashMap,i have a scenario where i had to loop through a HashMap to check for null values and generate a empty bean .The empty bean will again be added to a new map.
22398222,2,0,7,java.util.HashMap,"For example, in a HashMap."
22398325,2,0,1,java.util.HashMap,"Suppose you want to use a TreeMap instead of HashMap, so you can print the telephone numbers in order."
22399172,2,0,0,java.util.HashMap,You could build a HashMap -  code.
22402671,2,0,0,java.util.HashMap,HashMap) like that: code.
22403235,1,0,0,java.util.HashMap,"In Spring MVC, I am using Google's Gson to convert a HashMap in json format in a controller that I send to a jsp page where i need to iterate over it using jquery."
22403235,1,0,0,java.util.HashMap,The format of HashMap is: The key is a POJO(Staff) & The Value is another HashMap( the key of this HashMap is a POJO(Training) and the value is a normal Integer.)
22403235,1,0,0,java.util.HashMap,value for the inner HashMap code.
22403235,1,0,0,java.util.HashMap,The final HashMap parsed into Json which needs to iterated is: code.
22407272,2,0,0,java.util.HashMap,You can use Map and keep as a key number and title as a value http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
22410615,2,0,1,java.util.HashMap,Think of it this way: A HashMap has an array underneath the hood.
22412699,2,1,1,java.util.HashMap,Putting @jambriz's answer in your code: 1.Use a HashMap code.
22414614,1,0,1,java.util.HashMap,"The Object that I want to convert can be any inbuilt Java serialize able object String, HashMap, ArrayList or it can be custom POJO object."
22420272,2,0,1,java.util.HashMap,"In many cases, an implementation of java.util.Map such as java.util.HashMap will have better performance when you are retrieving data by a particular key."
22422582,1,0,2,java.util.HashMap,Map/HashMap?
22423477,2,1,0,java.util.HashMap,HashMap) keeps the titles ordered.
22428375,2,1,2,java.util.HashMap,"memory : a HashMap containing the ""state"" explored previously and the length of the path."
22428329,2,0,0,java.util.HashMap,"For HashMap like i.e. Key,Value pair -> MongoDB would be a good choice since you store documents in it in BSON (Binary JSON) structure."
22435907,1,0,0,java.util.HashMap,HashMap wrong values for keys.
22435907,1,0,0,java.util.HashMap,"I am kinda new to Java, and I am trying to write a function that maps all element indexes from an ArrayList into a HashMap, so I can easily see the indexes of duplicate elements."
22441134,1,0,1,java.util.HashMap,"I have a class called Test with a String id field and a HashMap map like  Map<String, String[]>, Map<String, ArrayList<String>>, and Map<String, HashMap> (Here the second HashMap is a <String, Integer> one) I have the following code."
22441991,2,0,1,java.util.HashMap,HashTable (are you sure you don't want a HashMap instead?)
22556267,2,1,0,java.util.HashMap,You can use Pairs instead of HashMap Try this code.
22446428,2,0,0,java.util.HashMap,"I think the fact that you added the Java tag is confusing a lot of the answerers here because when one says hash table with Java, one usually means the HashMap class."
22446428,2,0,0,java.util.HashMap,"HashMap is an implementation of a hash table, but I don't think it's quite what you're asking about here."
22446222,2,0,0,java.util.HashMap,"To build on @HovercraftFullOfEels answer, not implementing hashCode() properly in an object, will cause HashMap to behave badly when that object is added to it."
22446222,2,0,0,java.util.HashMap,"In other words, a pre-requisite to using HashMap is that all potential members have properly implemented hashCode()."
22446629,2,0,1,java.util.HashMap,"For example, you can put the characters you want to check into a HashMap."
22447032,2,1,1,java.util.HashMap,You are correct to think of using  HashMap.
22449772,1,0,0,java.util.HashMap,"Since equals() is not implemented, its hard for the HashMap to identify the particular object."
22449922,2,0,0,java.util.HashMap,HashMap first uses the hashCode to find possible candidates and after that uses equals to find the actual object you are looking for.
22454009,2,0,0,java.util.HashMap,Have a single HashMap mapping name to Business or even a non mapping collection like a List or a Set depending on the behaviour you need.
22454207,1,0,1,java.util.HashMap,"I've got a HashMap which stores the frequencies of each letter in a block of ciphertext, in the form of Character, Integer."
22461316,1,0,1,java.util.HashMap,HashMap with definite searching time?
22461316,1,0,1,java.util.HashMap,"My understanding on HashMap is that the order in unpredictable, therefore the searching time is unpredictable too."
22461316,1,0,1,java.util.HashMap,"But I was asked this question in a recent interview ""Is there a situation where HashMap has a definite searching time?"""
22461518,2,1,2,java.util.HashMap,HashMap is a probablistic data structure with an average lookup time complexity of O(1) However a lookup can take as long as O(n) under worst case circumstances.
22461518,2,1,2,java.util.HashMap,"For example:  HashMap is empty HashMap has only a single element HashMap has no collisions (no bucket has more than a single element)  If all keys are known in advance, it is possible to generate a ""perfect"" hashing funcion that guarantees case #3."
22463163,1,0,1,java.util.HashMap,I see that setUp method is not getting called because I din't see the print statement and also I get a Null Exception when I try to use this HashMap loaded in the load method.
22463671,2,0,0,java.util.HashMap,HashMap and HashSet don't guarantee any particular ordering when you iterate over the values in the container.
22463795,1,0,3,java.util.HashMap,"I'm trying to make a recursive HashMap data structure as such: public HashMap<Character, HashMap> root; The HashMaps inside of root are also of type <Character, HashMap>."
22463795,1,0,3,java.util.HashMap,This throws raw type warnings because the HashMap inside is not parametrized.
22463795,1,0,3,java.util.HashMap,"I can't think of a way to do away with these warnings, because any attempts to explicitly parametrize a HashMap will not stop because of its recursive nature."
22467370,1,0,2,java.util.HashMap,I know we can print a HashMap simply by calling mapName.toString().
22467486,2,0,1,java.util.HashMap,"MapWritable's javadoc show that it inherits its toString method from Object - the reason you see more useful output for HashMap is because it is inheriting AbstractMap's toString method, which overrides Object's, from the javadoc:  Returns a string representation of this map."
22475008,2,0,0,java.util.HashMap,"You could use return testPost(new HashMap<String, Object>(), username);."
22474031,1,0,0,java.util.HashMap,Extend HashMap to implement custom remove().
22474031,1,0,0,java.util.HashMap,"I tried to extend the HashMap class to implement a custom remove() method, like this: code."
22474031,1,0,0,java.util.HashMap,"It all works well if  remove() is invoked directly, but when an iterator is used to remove the entry, the remove() method of HashMap is invoked instead of the above overriden remove() method: code."
22474031,1,0,0,java.util.HashMap,After looking at the source code for HashMap in the entry iterator I see: code.
22474031,1,0,0,java.util.HashMap,"Extended HashMap classes do not have access to all private fields, so I cannot just modify the iterator, I would have to rewrite a lot of code to get my own iterator override that iterator."
22474031,1,0,0,java.util.HashMap,Is there a way to completely override remove() so it gets called in every situation where HashMap.remove() was called?
22477007,1,0,0,java.util.HashMap,How to minimise garbage collection in the use of HashMap>.
22477007,1,0,0,java.util.HashMap,"The way it's currently set up is that each time I need to change someMap's values (note that whenever I need to change the value corresponding to one key, it happens that I also need to change the values corresponding to every key), I'll overwrite the old map with a new HashMap<String,List<SomeObject>>(), then someMap.put(someString,listOfSomeObjects) 1 to 100 times."
22477007,1,0,0,java.util.HashMap,"I understand that I have a few options here; I could do what I'm currently doing, or I could rely on the clear functionality (either applied at the HashMap level and re-putting the List<SomeObject> instances into it, or applied at the valueSet() level."
22483714,2,0,0,java.util.HashMap,If you aren't using the concurrency protections elsewhere then you could just use a standard HashMap for this and wrap it in your own synchronization.
22483626,2,1,4,java.util.HashMap,So long as the hashCode and equals method always return the same result it is safe to use the object as the key in the HashMap.
22488929,2,1,0,java.util.HashMap,"But I was using that because the class Request, which my GsonRequest extends, requires a HashMap<String, String> map for the parameters."
22488929,2,1,0,java.util.HashMap,"What I did was to force the passage of a HashMap<String, Object> map."
22489514,2,0,0,java.util.HashMap,your best bet is to create a HashMap of the database elements using the database id as the key and the marker as the value so then you can pull from your database and have what marker you need
22492711,2,1,4,java.util.HashMap,"The only reason to use the object wrapper is in cases where you absolutely must (such as when using Generics, i.e., storing a boolean in a HashMap<String, Boolean> or the like)."
22496864,2,0,1,java.util.HashMap,You'll note that in the Javadoc for HashMap Map.containsKey() takes an Object as its argument.
22960400,2,0,0,java.util.HashMap,"Since you didn't populate the HashMap, it should be empty."
22960400,2,0,0,java.util.HashMap,PointCalculate.getInstance().calPoint = new HashMap();
22497563,1,0,1,java.util.HashMap,"Using DOM parser , I am storing attribute values in HashMap in Java and then later retrieving it  as required."
22500113,1,0,0,java.util.HashMap,I have converted the response into HashMap which is fine.
22652252,2,0,1,java.util.HashMap,"I'd use a Map, either a HashMap or a TreeMap Especially if the parameters are not on the form 0 <= X < N Like a set of random positive integers .. Code code."
22502154,1,0,0,java.util.HashMap,The way I use these variables is to put them in a HashMap...: code.
22502154,1,0,0,java.util.HashMap,...and then use the HashMap as parameters when calling a store procedure (which code I can't change).
22504373,1,0,0,java.util.HashMap,"EDIT: So, Vinayak has kindly suggested a HashMap."
22507115,2,0,0,java.util.HashMap,"I think that, the best solution it would be to create a HashMap like this code."
28938856,2,0,0,java.util.HashMap,"That is one of the solution described in question, but I think you forgot the following initialization of JAXBContext : HashMap<String, Object> props = new HashMap<String, Object>(); props.put(JAXBRIContext.XMLACCESSORFACTORY_SUPPORT, true); JAXBContext jaxbContext = JAXBContext.newInstance(new Class[] { clazz }, props);  The 2nd solution is to override the AnnotationReader of JAXB, that way you can return the annotations you want, depending on the Class, Field, etc..."
28938856,2,0,0,java.util.HashMap,"That is done that way :  HashMap<String, Object> props = new HashMap<String, Object>(); props.put(JAXBRIContext.ANNOTATION_READER, new CustomAnnotationReader()); JAXBContext jaxbContext = JAXBContext.newInstance(new Class[] { clazz }, props); RuntimeInlineAnnotationReader is final and cannot be overriden... so you will have to copy the code."
22510801,2,1,1,java.util.HashMap,For your problem i would use a HashMap or another Map who fits your problem best!
22513629,1,0,0,java.util.HashMap,Keep HashMap data while app is running - Android.
22513629,1,0,0,java.util.HashMap,I have a HashMap which contains data that is relevant to a specific Activity.
22513629,1,0,0,java.util.HashMap,"Instead, I am fetching all the data in the main activity, into a custom class and then I create a HashMap for holding all of the objects and save it in my Application class."
22513629,1,0,0,java.util.HashMap,"When the user goes into the other activity, the data is ready to go without any need to wait, by calling the HashMap I created earlier from the Application class."
22513629,1,0,0,java.util.HashMap,"It is all working fine except some times when the app is in the background for a long time, the data stored in the HashMap is being initialize by Android."
22513629,1,0,0,java.util.HashMap,I need a solution that will keep my HashMap object alive as long as there's an instance of my app.
22513978,2,0,0,java.util.HashMap,"One of the available approaches is to use a ""headless"" retained Fragment to persist the HashMap data across Activity recreation."
22513846,2,0,2,java.util.HashMap,"If this is the case, why wouldn't you want to keep the HashMap as an instance variable in your activity?"
22513846,2,0,2,java.util.HashMap,"If you need to keep the data in the HashMap when the Activity is destroyed and created, you can save it in onSaveInstanceState()."
22517089,2,0,0,java.util.HashMap,The HashMap (and map implementations) do not call hashCode() method on the values - they are called on the keys.
22517089,2,0,0,java.util.HashMap,"When the number of entries is large, the HashMap in java applies another hashing function to resize the map structure but this cannot be done infinitely."
22519308,1,0,1,java.util.HashMap,My Hashmap Signature is  HashMap> hm=new HashMap>(); I am stuck at extracting the variables ranges from these plain strings.
22519317,1,0,1,java.util.HashMap,"Some words are repeated more than once, so I am using HashMap to return the words and their count: code."
22523717,1,0,0,java.util.HashMap,"I am trying to get values from an ArrayList that is sorted and want to store it in a HashMap,  where the values of the ArrayList become keys of the HashMap."
22523717,1,0,0,java.util.HashMap,Will the order of the values in the HashMap still be the same as that of ArrayList?
22523853,2,1,1,java.util.HashMap,"HashMap makes no guarantees as to the order the mappings are stored or iterated, so simply running through the ArrayList and putting them into the HashMap as keys will very likely result in unordered iterations."
22523853,2,1,1,java.util.HashMap,Both HashMap and LinkedHashMap support constant time lookup - LinkedHashMap pays for its extra feature in space (by maintaining pointers between the keys).
22525453,2,0,0,java.util.HashMap,"I think you could use a HashMap to store the car info by reading every 4 lines, then you can get a single car by HashMap.get(Id)."
22526593,1,0,2,java.util.HashMap,Sort HashMap keys and store in ArrayList.
22526593,1,0,2,java.util.HashMap,I need to do the task of sorting HashMap keys which will be String always and store them in an ArrayList.
22530549,1,0,0,java.util.HashMap,Passing String in HashMap to another activity.
22530549,1,0,0,java.util.HashMap,I have a HashMap where I have parsed some JSON data.
22530630,2,0,2,java.util.HashMap,"you put the HashMap with key ""Items"" and try to retrieve with key ""NewsItems""."
22530630,2,0,2,java.util.HashMap,"You pass an instance of a HashMap<String, String> and cast it to ArrayList<HashMap<String, String>>"
22532182,1,0,0,java.util.HashMap,Sort HashMap keys based on the key size.
22532182,1,0,0,java.util.HashMap,I have a HashMap in which keys are Strings.
22536626,1,0,0,java.util.HashMap,"A few other questions:  Should I do my drawGUI() method in a SwingUtilities.invokeLater() statement or does it not matter since I'm not really interacting with the GUI in that method Wondering if the HashMap usersIP would work well for key-value pair, to pair clients to their IP."
22538948,2,0,0,java.util.HashMap,Consider using a Set or HashMap
22542628,2,1,1,java.util.HashMap,"Re-writing your class with few basic assumptions We are storing a Map of values like  Map<String, Object> msg = new HashMap<String, Object>() which will be loaded with (EventId, EventDetailsObject)."
22542487,1,0,0,java.util.HashMap,HashMap using Generics.
22542487,1,0,0,java.util.HashMap,"The types going into a single instance of an extended Report will all be the same type, for example TRRReport extends Report will need to accept TRRTransaction extends Transaction into it's HashMap, however TDDReport extends Report will need to accept TDDTransaction extends Transaction into it's HashMap."
22542487,1,0,0,java.util.HashMap,How can I use a HashMap and Generics in this situation?
22542725,1,0,1,java.util.HashMap,Use HashMap or something similar to store lists of objects.
22542725,1,0,1,java.util.HashMap,"I want to use a HashMap or something similar to hold an ArrayList for each of those classes, as kind of shown below."
22542938,2,0,0,java.util.HashMap,Use HashMap to store the name and number objects like this code.
22544199,2,0,2,java.util.HashMap,If you need to associate a value with your string use a HashMap code.
22544199,2,0,2,java.util.HashMap,If you need an ID use a HashMap code.
22544199,2,0,2,java.util.HashMap,This will provide you a HashMap with unique String keys and unique Integer values.
22544199,2,0,2,java.util.HashMap,You can then place these in a Set or HashMap using a similar implementation to the one provided above.
22543967,2,1,1,java.util.HashMap,"Lastly, might I suggest you use a HashMap instead."
22543967,2,1,1,java.util.HashMap,"I am not entirely sure what you are going for, but I think the HashMap might give you more range."
22553809,2,0,0,java.util.HashMap,"The facts are simple wrappers for generic instantiations of HashMap, e.g."
22547476,1,0,0,java.util.HashMap,LinkedLists as Values of HashMap don't contain the right data after modification.
22547476,1,0,0,java.util.HashMap,"I'm using a HashMap of Long, LinkedList to hold the hex addresses, where the LinkedList is the List of line numbers which the Long appears in."
22547476,1,0,0,java.util.HashMap,I look through the HashMap here: code.
22549491,2,0,0,java.util.HashMap,"Classes that break the contract won't work as keys in a HashMap , for example, and are otherwise generally broken."
22550015,2,0,0,java.util.HashMap,"If you really need one variable to access all colors, you can use a HashMap instead, accessing it will be something like Cube.SideColors.get(""Top"")"
22553611,1,0,1,java.util.HashMap,How to use double colon in Stream.collect for HashMap?
22556415,1,0,0,java.util.HashMap,Getting HashMap associated with particular item in ListView.
22556939,1,0,2,java.util.HashMap,ArrayList as a Value to HashMap returns only last element of ArrayList.
22556939,1,0,2,java.util.HashMap,I am trying to use the HashMap; Key as dateTime and Value as List.
22557227,2,0,8,java.util.HashMap,"This is rather strange considering that the internal implementation of HashSet uses a HashMap, so one has to wonder why they didn't do the same for IdentityHashMap...  Side note: the documentation of Collection is misleading; not all Collection implementations rely on .equals()."
22557446,1,0,0,java.util.HashMap,"Before these elements are added to the JList, some information about them is being stored in a static HashMap in a separate class."
22557446,1,0,0,java.util.HashMap,"When more than 1 items are selected and the 'Remove selected' button is pressed, I am trying to remove the selected items (which works fine) and also delete their records from the HashMap."
22557446,1,0,0,java.util.HashMap,"For some reason though, if I select more than 1 elements, only the first record in the HashMap is removed."
22557446,1,0,0,java.util.HashMap,I don't understand how this works for the JList but doesn't work for the HashMap.
22559527,1,0,0,java.util.HashMap,HashMap with threads inside.
22562165,1,0,1,java.util.HashMap,I have a HashMap that we use in our application.
22562165,1,0,1,java.util.HashMap,"Since the data is never updated, we currently don't use any synchronization and is using just the HashMap."
22563272,1,0,0,java.util.HashMap,"In my case, TRRReport will only ever be dealing with TRRTransaction in it's inherited HashMap."
22563272,1,0,0,java.util.HashMap,"Other than removing the HashMap from Report and moving it down locally into each subclass of Report, I'm not sure what else can be done."
22563272,1,0,0,java.util.HashMap,"I had a similar question, but I think I may have asked in the wrong way and didn't get a straight answer out of it: HashMap using Generics"
22565057,2,0,0,java.util.HashMap,In the Graph.BFS method replace the visited from a List by a Map: Map visited = new HashMap(); And then: code.
22566612,2,0,1,java.util.HashMap,The HashSet is backed by a HashMap instance.
22566612,2,0,1,java.util.HashMap,"So they go forward, this results in two parallel addEntry() calls (see source of HashMap.java)."
22566938,1,0,0,java.util.HashMap,"I have a usecase, where I need to convert from HashMap -> POJO and POJO -> HashMap."
22566938,1,0,0,java.util.HashMap,"Now I want to test it, so I need to set all the attributes of POJO as a key in HashMap."
22567631,2,0,1,java.util.HashMap,that code is very very badly optimized - an array list would speed it up considerably (or even a HashMap)
22570411,1,0,3,java.util.HashMap,What I am thinking of doing:  Create an integer variable for every category Loop through the age details for all patients in the JTable Compare variables with the JTable data and increment by 1 if there is a match (lots of if statements to go in the loop) Store the categories names and the amount of people registered under every category in a HashMap Pass the map to the ChartFrame   I suppose this might be a relatively good way of doing this but I was wondering if somebody could possibly suggest a way of avoiding having to create a variable for every category and then having to do all those comparisons using about 30 if statements.
22574315,2,0,1,java.util.HashMap,"Since this looks like a homework, I can suggest a way for you to do this:  Create a HashMap Loop from the beginning to the end of the file."
22574315,2,0,1,java.util.HashMap,"If you have a new character, then set a new key to the HashMap with 1 as the value; if not, just plus one to the current value of the old character  Have fun !"
22574774,2,0,0,java.util.HashMap,The ideal way would be to create a HashMap with the name and phone number as value.
22575653,2,0,0,java.util.HashMap,The easiest data structure to use would be a HashMap.
22575814,2,1,0,java.util.HashMap,"Because you have 2 lines to read to map an ID to a name, I would recommend you to read 2 lines, call a split on each and store the second values in a HashMap like @Adeeb suggested."
22576909,1,0,1,java.util.HashMap,How to force HashMap to use identity (hash code)?
22576909,1,0,1,java.util.HashMap,"Earlier I have coded HashMap to store some objects, which was expecting to use identity while storing them."
22576909,1,0,1,java.util.HashMap,"Immediately my previous HashMap stopped to work, because objects were mutating and becoming unequal."
22576909,1,0,1,java.util.HashMap,May be there is a way to force HashMap to use identity despite the fact there are equals() and hashCode() methods defined?
22595186,2,0,0,java.util.HashMap,What you want to use is the HashMap or the TreeMap to implement a dictionary in Java.
22595186,2,0,0,java.util.HashMap,The HashMap class uses hashing to maintain the dictionary while TreeMap uses a Red Black Tree(a variant of the BST) to maintain the dictionary.
22584807,1,0,3,java.util.HashMap,HashMap Remove is not working.
22584807,1,0,3,java.util.HashMap,I've gone ahead and printed everything out (as you can see in my example code) so you know the values being used by the HashMap are correct.
22585196,2,1,3,java.util.HashMap,Let's say an Item is added to a HashMap with size 16.
22585196,2,1,3,java.util.HashMap,"Android's HashMap creates an entry in bucket 4, storing the actual hash (20) and a reference to the Item itself."
22585196,2,1,3,java.util.HashMap,"If we now run containsKey() using the same Item reference, Android's HashMap will look in the same bucket, 4."
22585196,2,1,3,java.util.HashMap,"If we however run remove() using the same Item reference, Android's HashMap again looks in bucket 4."
22585970,1,0,0,java.util.HashMap,Or should I just use a HashMap to throw all data into it and then new Gson().toJson()?
22587422,1,0,0,java.util.HashMap,HashMap in Tree structure in Java.
22587422,1,0,0,java.util.HashMap,I am looking for a container that would basically work like HashMap where I could put and get any of the entries in O(1) time.
22587497,2,0,1,java.util.HashMap,But you could create one that is a wrapper for a private HashMap and a private TreeMap with the same set of key/value pairs.
22587497,2,0,1,java.util.HashMap,"This gives a data structure that has get complexity of O(1) like a regular HashMap (but not put or other update operations), and a key Set and entry Set which can be iterated in key order ... as requested in the original version of this Question."
22587497,2,0,1,java.util.HashMap,"In this case, wrapping a HashMap and TreeMap is going to be very complicated if you need the resulting Map to conform fully to the API contract."
22587497,2,0,1,java.util.HashMap,So I suggest that you just use a HashMap and TreeSet of the key/value pairs ... and manually keep them in step.
22587427,1,0,0,java.util.HashMap,Insertion in HashMap not working properly.
22587427,1,0,0,java.util.HashMap,I am inserting a sorted object into a HashMap but its not getting sorted.
22587471,2,0,1,java.util.HashMap,"HashMap on the other hand, makes no such guarantee."
22587471,2,0,1,java.util.HashMap,"Therefore, when iterating over the keys of a HashMap, you can't be sure what order they will be in."
22587471,2,0,1,java.util.HashMap,"HashMap will be more efficient in general, so use it whenever you don't care about the order of the keys."
22587471,2,0,1,java.util.HashMap,"HashMap is specified to be O(1): 'constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets'."
22587479,2,0,0,java.util.HashMap,"HashMap is not sorted, It stores in Key-Value pairs."
22588060,2,0,2,java.util.HashMap,"I would suggest doing either of the following as a better solution to this problem:  Use a TreeMap, or if you need concurrency, use ConcurrentSkipListMap (this would be my number 1 choice for solving your problem) Have a TreeSet to contain the keys, and a separate HashMap to map between the keys and values  Create a class that encapsulates the mapping (i.e. a HashMap Decorator), which will handle the unique key checking recursively (again, the first approach is more desirable)"
22591441,1,0,0,java.util.HashMap,"I would use Array but  I see HashMap in many example, so I am thinking about: code."
22591482,2,0,1,java.util.HashMap,"You can simply use HashMap or MultiHashMapref from apache, dependent on your project requirements."
22591485,2,1,1,java.util.HashMap,"Your simplest and most straightforward option is to use a HashMap<Integer, Integer>()."
22591485,2,1,1,java.util.HashMap,"Note that HashMap itself isn't thread safe, and simultaneous operations on it will blow up (e.g."
22593762,1,0,0,java.util.HashMap,Are there any disadvantages of using a LinkedHashMap instead of a HashMap?
22593798,2,1,7,java.util.HashMap,"As the docs say, This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.."
22593807,2,0,0,java.util.HashMap,LinkedHashMap differs from HashMap in that the order of elements is maintained.
22593807,2,0,0,java.util.HashMap,Whereas a HashMap has no such overhead leading to a better performance than a LinkedHashMap.
22597705,1,0,1,java.util.HashMap,Adding element to a HashSet inside a HashMap.
22597705,1,0,1,java.util.HashMap,I have a HashSet which is inside a HashMap which in turn is inside another HashMap.
22597705,1,0,1,java.util.HashMap,"When I try to add elements to this HashSet under one key, the elements are added to all other keys of the outer HashMap."
22597705,1,0,1,java.util.HashMap,"Why are the elements getting added to the HashMap under ""B"" key?"
22597777,2,0,1,java.util.HashMap,"The keys ""A"" and ""B"" both ""point to"" the same HashMap."
22598031,1,0,2,java.util.HashMap,"I was thinking of using a HashMap, using new int[]{x_coord, y_coord} as key for each entry."
22600775,1,0,15,java.util.HashMap,HashMap type parameters.
22601071,2,0,11,java.util.HashMap,Passing a HashMap is a common practice in untyped scripting languages but is a bad practice in Java.
22774774,2,0,6,java.util.HashMap,"I take the liberty of skipping the ""smelly"" solutions - HashMap and beans, because you can clearly see their disadvantages."
22774774,2,0,6,java.util.HashMap,"They can really shine when the group is cohesive (like in Mark Phillips' answer), but they will cause problems otherwise (essentially acting just like a typed HashMap)."
22600802,1,0,0,java.util.HashMap,I have a HashMap where bad guy is an object containing all the information of a given badguy.
22600802,1,0,0,java.util.HashMap,"For example: If a user clicks on the screen, I need to check if it's within range of one of the Vector2's in my HashMap."
22601808,2,1,0,java.util.HashMap,"You can use a HashMap to keep the votes for every candidate, and update the winner as soon as you find a new winner (more votes than the current winner): code."
22605414,1,0,0,java.util.HashMap,"Convert CSV values to a HashMap key value pairs in JAVA However, I am trying to read a file of csv, in which there are multiple values for a given key."
22607246,1,0,0,java.util.HashMap,"I fill an ArrayList <'HashMap <'String, String>> with an AsyncTask and i set the adapter with my custom adapter , and i creat each view in getView() ."
22612212,2,0,0,java.util.HashMap,to get the item at the position of the click and i put the new value with the same name key in my HashMap like this :  code.
22613278,1,0,1,java.util.HashMap,I want to know How can i pass HashMap which contain String and double values from Action to javascript code ?
22618206,1,0,0,java.util.HashMap,Looks troublesome as I am already keeping HashMap with the thread and its id there.
22618206,1,0,0,java.util.HashMap,I wouldn't like keeping another HashMap for keeping ids and their fts.
22623340,2,0,0,java.util.HashMap,You can define your own entrySet() method similar to the one in Java's HashMap class.
22628668,2,0,5,java.util.HashMap,"Instead of forcefully casting to a HashMap, you should supply a HashMap to the collector."
22626977,1,0,1,java.util.HashMap,How to sort an HashMap using filterable.I need to get a list associate with my key search strings.
22626977,1,0,1,java.util.HashMap,I having List data inside HashMap.
22626977,1,0,1,java.util.HashMap,How i can add filter to my HashMap List?
22644178,2,0,1,java.util.HashMap,You can use a HashMap to store the number of time you have found every class: code.
22633346,2,0,1,java.util.HashMap,What I have seen happen is you can get a corrupted linked list in your underlying HashMap (for handling collisions) which points back to itself.
22633172,2,1,4,java.util.HashMap,"But if the question is ""What is not unlikely to happen when accessing a not-threadsafe HashMap with multiple threads?"""
22633172,2,1,4,java.util.HashMap,"According to the specifiction, the HashMap should contain each key at most once."
22633172,2,1,4,java.util.HashMap,But the call for adding a new entry to the HashMap eventually delegates to the call code.
22633172,2,1,4,java.util.HashMap,The bottom line is: Basically anything can go wrong when adding elements with multiple threads to a non-threadsafe HashMap.
22633826,1,0,0,java.util.HashMap,"How many method-calls, how many sysouts, how many HashMap#pushs."
22634305,2,1,3,java.util.HashMap,"How many method-calls, how many sysouts, how many HashMap#pushs (in 1 ms)  Empty method calls can be eliminated so only sizable method call matter."
22634305,2,1,3,java.util.HashMap,HashMap has a put() not push() and you can get around 1000 to 10000 of these in a mill-second.
22633959,2,0,9,java.util.HashMap,"As to:  How many method-calls, how many sysouts, how many HashMap#pushs (in 1 ms)  impossible to tell!"
22641867,1,0,0,java.util.HashMap,Will a HashMap let me accomplish this?
22641937,2,1,0,java.util.HashMap,"You might also look into using a HashMap of properties to their values, or like you said, the Properties object (which is pretty much just a Map itself)."
22644821,1,0,0,java.util.HashMap,HashMap is not adding duplicate keys.
22644849,2,0,7,java.util.HashMap,"HashMap doesn't allow duplicated keys,  If you don't provide hashcode() and equals() implementation it extends it from super class (for your case it is java.lang.Object), and that implementation provides same hashcode for same object and equals() on same object returns true  code."
22644960,2,0,0,java.util.HashMap,"See http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put%28K,%20V%29"
22646660,2,1,2,java.util.HashMap,"First of all, as pointed out in the comments, the implementation of HashSet actually uses a HashMap, so don't expect the set to be more memory efficient."
22646218,1,0,3,java.util.HashMap,"I'm not allowed to use Map, HashMap, TreeMap, Set, HashSet, StringBuffer or TreeSet in this."
22651369,1,0,12,java.util.HashMap,NullPointerException when adding to HashMap.
22651369,1,0,12,java.util.HashMap,I am getting a NullPointerException when adding data to a HashMap.
22651413,2,1,14,java.util.HashMap,"This is because HashMap.put(key, value) will return the previous value associated with key, or null."
22651931,2,0,0,java.util.HashMap,Use ConcurrentHashMap instead of HashMap.
22656166,1,0,0,java.util.HashMap,HotDog 3 CupCake 2  I created a class Food with a HashMap of all food and values.
22660055,1,0,1,java.util.HashMap,First i thought something like a HashMap in a HashMap but this looks ugly and I think it would be wrong.
22661338,2,1,0,java.util.HashMap,Use a custom class as a key in HashMap.
22663078,1,0,1,java.util.HashMap,"I should to search all keys in HashMap, that have values = null and delete them."
22663210,2,0,0,java.util.HashMap,"The ConcurrentHashMap is very similar to the HashMap class, except that ConcurrentHashMap offers internally maintained concurrency."
31304833,2,0,0,java.util.HashMap,Here 'map' is your concurrent HashMap.
22669885,1,0,6,java.util.HashMap,"I get a HashMap<String, ArrayList<HashMap$Node>>."
22671060,1,0,0,java.util.HashMap,"I want to put ""proptwoone"" in to a HashMap of type <String, ArrayList<String>>."
22676673,2,1,1,java.util.HashMap,And your HashMap will be under: code.
22676811,1,0,2,java.util.HashMap,I have a big HashMap in java storing mappings from String to Integer.
22677253,2,0,1,java.util.HashMap,"However, Java's built-in HashMap implementation uses separate chaining and every key-value pair has a separate class."
22677229,2,0,0,java.util.HashMap,"You could use Guava's ImmutableMap -- it's optimized for write-once data, and takes ~15% less memory than HashMap."
22679594,1,0,1,java.util.HashMap,I am experiencing a situation where I insert some information to hsqldb and the heap space used (even after GC) by HSQLDB is about 3 to 4 larger than if I kept it in a plain HashMap/LinkedList in java heap.
22680749,2,0,1,java.util.HashMap,"Should work... Now, if you want a stronger relationship between the HashMap and TableModel (so you could add content to the table and it would update the HashMap), you're going to need to use an AbstractTableModel and get your hands dirty mapping the content between the requirements of the model and the HashMap"
22692610,1,0,1,java.util.HashMap,HashMap types cannot find symbol.
22692610,1,0,1,java.util.HashMap,I have a class with some HashMap types: code.
22692610,1,0,1,java.util.HashMap,"If I modify declarations inserting raw types i.e. changing HashMap<String, List<Attribs> to HashMap<String, HashMap<String, String>> compiler stops to complain."
22692641,2,0,1,java.util.HashMap,"FragmentNode and Attribs are not a types, its a variables, you can't specify variables as types to HashMap."
22692641,2,0,1,java.util.HashMap,Or you could create a class that has Attribs HashMap just like: code.
22695739,1,0,0,java.util.HashMap,Keys mapping to same values in HashMap?
22701182,1,0,5,java.util.HashMap,"I have a Java HashMap which contains many entries, and the program doesn't work as expected because it says the map doesn't contain a particular entry, but that entry is supposed to be in the map."
22701639,2,0,0,java.util.HashMap,"Here is the method that LinkedHashSet#add(T) eventually invokes: HashMap#put(K, V): code."
22703544,1,0,0,java.util.HashMap,"The function getEntry of HashMap return null in debug,it look likes Entry e = table[indexFor(hash, table.length)]; e is null."
25773896,2,0,0,java.util.HashMap,Won't it be easier to use a HashMap?
22709871,2,1,7,java.util.HashMap,"If you replace your HashMap<U, Set<V>> by a HashMultimap<U, V> (they're equivalent, and the Multimap is easier to use), you can now use Multimaps.invertFrom() which will populate a Multimap<V, U>."
22710182,1,0,0,java.util.HashMap,I think (hope) that the cause of different order of print derives by a different sequence of iteration in the same HashMap at run-time and I looking for a validation by other people.
22710182,1,0,0,java.util.HashMap,"In the web, I read that the iteration order by a HashMap changes if the HashMap receives a modification: but what happens if the HashMap remains the same?"
22710325,2,0,1,java.util.HashMap,"HashMap API documentation states that  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
22710394,2,0,0,java.util.HashMap,"As Octopus mentioned, HashMap ""makes no guarantees as to the order of the map,"" and you shouldn't use it if order must remain consistent."
22710423,2,1,1,java.util.HashMap,"Hash map document says HashMap makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
22717005,1,0,2,java.util.HashMap,I know I can build a nice HashMap out of my CSV file like this: code.
22717005,1,0,2,java.util.HashMap,Can I do this with a simple HashMap?
22720725,1,0,1,java.util.HashMap,"Should I use ArrayList, List, LinkedList or HashMap with a list?"
22721385,1,0,1,java.util.HashMap,How to store two equal String or any object (with different references) in a HashMap/HashSet?
22721385,1,0,1,java.util.HashMap,"I have written following code, with two String object, but only one String is added in HashSet or HashMap: code."
22721385,1,0,1,java.util.HashMap,The output is: Text I know adding any object in HashMap or HashSet depends on equal() method: i.e. for both the String code.
22721385,1,0,1,java.util.HashMap,"that is why only one String is added in HashMap or HashSet(which is in the contract), but what is the workaround I wanted to add both the String as they are different object."
22721586,2,0,1,java.util.HashMap,"You can't iterate over HashMap directly, as there is no numeric index of values within HashMap."
22722220,1,0,0,java.util.HashMap,"Im creating a JAX-WS webservice on Wildfly 8.0 and consuming it on a VS2013 C# project, what I can't figure out is how can I map a HashMap to .net Dictionary."
22733359,2,0,1,java.util.HashMap,I don't think HashMap is interoperable; it also isn't a Java xml type known to JAXB (the framework which turns SOAP XML into java instances which is probably why it's not described in the WSDL.
22733359,2,0,1,java.util.HashMap,You can use the tips in this post to provide an adapter Java class which tells the JAXB runtime how to convert your HashMap into an xml structure.
22726488,2,1,1,java.util.HashMap,The official Sun/Oracle implementation of HashMap does the following.
22731706,1,0,2,java.util.HashMap,"I need convert HashMap to a String array, follow is my java code code."
22732311,2,1,2,java.util.HashMap,"board[i][j] is a char, not a char[][], you'll either need to add the whole board to the Map or change the declaration to HashMap<String, Character>"
22734798,1,0,0,java.util.HashMap,I already did it in JAVA with HashMap and it's ok but in C# ... Something like this : code.
22737870,2,0,2,java.util.HashMap,"The following is the list of some of the classes that implement the Map<K,V> interface:  AbstractMap ConcurrentHashMap ConcurrentSkipListMap EnumMap HashMap Hashtable IdentityHashMap LinkedHashMap TreeMap WeakHashMap"
22738154,2,0,1,java.util.HashMap,Here is the same logic with HashMap code.
22738335,2,0,0,java.util.HashMap,Looks like you know about Collections so I would suggest to use HashMap in such condition.
22743672,2,0,7,java.util.HashMap,The way without re-inserting all entries into the new map should be the fastest it won't because HashMap.clone internally performs rehash as well.
22743334,2,0,0,java.util.HashMap,"You can change doInBackground to return the HashMap and then in onPostExecute do what you want with the results PS change the generic parameters of AsyncTask to <String, String, HashMap> if you change the return type of doInBackground"
22743512,1,0,0,java.util.HashMap,Basically we have to do locking at individual bucket level(instead of whole HashMap)  so that concurrent update requires locks only for entries which got to same bucket.
22748185,1,0,0,java.util.HashMap,"From there, the search terms are pushed into a Hashmap and the NAMES.TXT is also pushed into the HashMap."
22748531,1,0,1,java.util.HashMap,"But there alot of conversation could be, so i my controller class i got field of class ""conversationSchedulers"" - it is HashMap where key is a username and value is current scheduler which sends new messages for conversation."
22750799,2,0,0,java.util.HashMap,"Instead of two arrays, just use a HashMap."
22750989,1,0,0,java.util.HashMap,Java multi threading HashMap.
22751834,2,0,0,java.util.HashMap,"Since you want to add a search feature, add all the Stock objects into a HashMap indexed by stock symbol for O(1) retrieval."
22753279,2,0,0,java.util.HashMap,If you want to iterate over the HashMap you can do below.
22828078,2,0,0,java.util.HashMap,This is an example with HashMap.
22754337,2,0,0,java.util.HashMap,Let me explain you how HashMap is working in this case.
22754337,2,0,0,java.util.HashMap,First you have overridden hashCode() method  HashMap will look it first.
22754337,2,0,0,java.util.HashMap,Now its a collision state hence HashMap will fall down to equals method to check it further that is again overridden by you.
24237904,2,1,2,java.util.HashMap,The result is a List of HashMap objects that represents an outline tree.
22759499,2,0,1,java.util.HashMap,"Why not implement a HashMap<String, ArrayList<String>>."
22765401,2,0,0,java.util.HashMap,I agree with eltabo's approach however it requires another activity to launch the url A different approach would be to launch the url on clicking the listview from the same activity without passing it to another one for webview launch This technique can be implemented using HashMap 1) Add the title and the link to HashMap code.
22765401,2,0,0,java.util.HashMap,we can make use of the position of the listview item clicked and use it to retrieve the corresponding url from the HashMap code.
22764871,1,0,0,java.util.HashMap,I am trying reset all values in a  HashMap to some default value if a condition fails.
22766335,2,0,3,java.util.HashMap,"However, when you use a raw type for your HashMap, all generics in the type undergo type erasure, and the entrySet method just returns a Set."
22767876,2,1,1,java.util.HashMap,Iterate Map or HashMap like this.
22768999,2,0,0,java.util.HashMap,- still HashMap works You need to be able to pick Elements are random indexes say 1st 4th and 5th First element?
22769832,1,0,0,java.util.HashMap,"I am comparing a Trie with a HashMap storing English words, over 1 million."
22769832,1,0,0,java.util.HashMap,"In this case, it's either a Trie and HashMap."
22770649,1,0,3,java.util.HashMap,Get Type of Entities in HashMap Java.
22770649,1,0,3,java.util.HashMap,I am trying to get the type of the key and value of a HashMap using reflection.
22772168,2,0,0,java.util.HashMap,"From Java Documentation  [Hashset]  implements the Set interface, backed by a hash table (actually a HashMap instance)."
22801217,2,1,0,java.util.HashMap,"I managed to fix the issue by switching from the Google Guava MapMaker() ConcurrentMap to the Java ConcurrentHashMap, except now I have to deal with the Java HashMap GC memory issue again..."
22776046,2,0,0,java.util.HashMap,additional suggestion: you might wanna look at this HashMap examples for even better implementation (using key and value concept)..
22777661,1,0,0,java.util.HashMap,How to get a BigDecimal from a HashMap in Drools 5.4.0.
22781234,2,1,3,java.util.HashMap,"For HashMap<Pair<Long, Long>>, type parameter K is inferred as Pair<Long, Long>."
22781580,1,0,0,java.util.HashMap,I see that HashSet's add method uses a put from HashMap : code.
22783030,1,0,0,java.util.HashMap,In Java is it possible to create HashMap that uses reference equality instead of equals() method?
22783060,2,0,1,java.util.HashMap,You can override the equals method of the objects you insert into the HashMap to test reference equality.
22783070,2,1,5,java.util.HashMap,This is a variant of HashMap in which == and System.identityHashCode() are used instead of Object.equals(Object) and Object.hashCode().
22783161,2,0,1,java.util.HashMap,(In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ?
22784231,1,0,0,java.util.HashMap,I'm new to Java (and not too comfortable with strong typing) and I have a method that takes in a HashMap.
22784742,2,0,0,java.util.HashMap,"You should first of all use interfaces not implementation, therefore use Map (and not HashMap) where possible."
22789993,1,0,0,java.util.HashMap,Parsing JSON and put it in HashMap.
22789993,1,0,0,java.util.HashMap,after this section i put this result in HashMap like this: code.
22799856,2,0,0,java.util.HashMap,"Contrary to the classical HashMap, the LinkedHashMap will preserve the key order when iterating."
22800626,1,0,0,java.util.HashMap,"Map<String, Integer> myDictionary = new HashMap<String, Integer>(); This is how i sort it out atm but it only sorts it alphabetically  code."
22800775,2,0,0,java.util.HashMap,"Then replace your tot_game_players array with a HashMap<String, Player> map, that you can then populate with the player information so that ""U1"" maps to Player(""U1"", ""A"", ""B"") and so on."
22806150,1,0,0,java.util.HashMap,any datatype can be suggested instead of HashMap.
22806288,2,0,3,java.util.HashMap,You can just pass in the whole HashMap if that is what you want.
22806288,2,0,3,java.util.HashMap,"Or you can retrieve values from the HashMap, and pass those in."
22806288,2,0,3,java.util.HashMap,"But if you want the key/value pairs, then it's best to just pass in the whole HashMap."
22809506,2,0,1,java.util.HashMap,However I suspect you might benefit from loading it in to (or just replacing with) a HashMap or SparseArray.
22810199,1,0,2,java.util.HashMap,"As you can see in the fragment of code below, I iterate over the JMS MapMessage properties, inserting each element into a HashMap which will be iterated to insert the tree elements of the screenshot."
22810199,1,0,2,java.util.HashMap,I know that HashMap doesn't necessarily store its items ordered but I tend to think that for the equal keysets inserted following the same order you should get equivalent iterations (concerning order) over its elements.
22810199,1,0,2,java.util.HashMap,EDIT  I thought the first part of this question was worth of its own question: Is the order of HashMap elements reproducible?
22810199,1,0,2,java.util.HashMap,It seems that HashMaps should not change but it is not guaranteed at all and it can change at the very fist moment HashMap implementation changes.
22813095,2,0,2,java.util.HashMap,Here example for sort HashMap based on string date code.
22812385,1,0,1,java.util.HashMap,nested HashMap not working properly.
22812385,1,0,1,java.util.HashMap,I am declaring HashMap inside HashMap but it take duplicate value for all key why i am not getting and this problem solve when i declare link inside loop My code... code.
22812459,2,0,0,java.util.HashMap,I think what you want is to put the nested HashMap construction inside the loop.
22813022,1,0,8,java.util.HashMap,Is the order of HashMap elements reproducible?
22813022,1,0,8,java.util.HashMap,"First of all, I want to make it clear that I would never use a HashMap to do things that require some kind of order in the data structure and that this question is motivated by my curiosity about the inner details of Java HashMap implementation."
22813022,1,0,8,java.util.HashMap,An example of that would be that calls to hashCode for any String object containing the value hello should return always: 99162322 Having an algorithm that always insert into an empty Java HashMap where Strings are used as keys the same values in the same order.
22813022,1,0,8,java.util.HashMap,"So, isn't it right that two HashMap objects with the same elements, inserted in the same order should be traversed (by an iterator) giving the same elements sequence?"
22813193,2,0,2,java.util.HashMap,"I think you are asking ""Is HashMap non-deterministic?""."
22813217,2,1,6,java.util.HashMap,"As far as I know the order (assuming we call ""order"" the order of elements as returned by values() iterator) of the elements in HashMap are kept until map rehash is performed."
22813217,2,1,6,java.util.HashMap,"Nevertheless, we should never rely on this statement because the internal implementation of HashMap is not a part of its public contract and is a subject to change in future."
22819370,2,0,0,java.util.HashMap,you will be able to use all of HashMap's methods.
22819370,2,0,0,java.util.HashMap,The difference is that HashMap is an implementation of the Map interface.
22819388,2,0,5,java.util.HashMap,"A Map<K, V> is an interface, a HashMap<K, V> is a class implementing the interface."
22819388,2,0,5,java.util.HashMap,"I always prefer the second option, unless you specifically want the charasterics of a HashMap<K, V>."
22819388,2,0,5,java.util.HashMap,"With the latter approach it is possible to switch out the HashMap<K, V> for another implementation of the Map<K, V> easily."
22819458,2,0,0,java.util.HashMap,"As far as i see from the javadoc, HashMap does not add any new methods, so for these two classes there is no difference."
22820843,1,0,0,java.util.HashMap,Como convetir una cadena de String a un HashMap.
22820843,1,0,0,java.util.HashMap,"Estoy intando recuperar un hashmap antes de que el activity se destruya al cambiar de orientación el dispositivo android, pero veo que no se puede pasar en el Bundle un HashMap pero solo tipo primitivos de datos, entonces estoy haciendo esto: code."
22820843,1,0,0,java.util.HashMap,no se como transformar de nuevo ese string en HashMap code.
22826326,1,0,0,java.util.HashMap,"I would like to use a HashMap to map (x, y) coordinates to values."
22827013,1,0,0,java.util.HashMap,I have an application which gets objects from a database and stores them in a HashMap roughly once a second.
22827605,2,1,2,java.util.HashMap,"If the HashMap is also to be used from multiple threads, use a thread safe version, such as ConcurrentHashMap."
22827652,1,0,1,java.util.HashMap,Will it affect HashMap performance or HashMap Accuracy ?
22827702,2,0,1,java.util.HashMap,Will it affect HashMap performance or HashMap Accuracy ?
22827714,2,0,2,java.util.HashMap,"Returning 1 all the time would improve the computation time of hashCode, but HashMap's performance would drop since it would have to resort to equals() more often."
22827865,1,0,3,java.util.HashMap,"In short, what it is that makes CHM not to throw ConcurrentModificationException, unlike HashMap."
22839299,2,1,0,java.util.HashMap,Then use a HashMap to map the media with its number of copies.
22839129,2,0,0,java.util.HashMap,As the others I would advise you to use a HashMap() for counting if you don't need the number for your media objects.
22838944,2,0,1,java.util.HashMap,"Instead of recording the number of medias inside the Media object, use a HashMap<Media, Integer> to store your data in this way: code."
22840170,1,0,6,java.util.HashMap,Map/HashMap don't have any stream or parallelStream such methods.
22843880,1,0,0,java.util.HashMap,Java - Issue with making HashMap available from Other Classes.
22844124,2,1,1,java.util.HashMap,"2) I personally would suggest this, import java.util.Map; import java.util.HashMap; code."
22851321,1,0,0,java.util.HashMap,Java - How to get an Integer associated with a String in a HashMap.
22851321,1,0,0,java.util.HashMap,I want to know how to get the Integer that is associated with the String in the HashMap people: code.
22862797,2,0,0,java.util.HashMap,by combining the return values of every hashCode of every String in the tuple) Create a HashMap[10][10] hashMapArray = ...  and initialize HashMaps in every Subarray with two nested for loops.
22854404,2,0,6,java.util.HashMap,This is possible with HashMap.
22854404,2,0,6,java.util.HashMap,See also  HashMap oracle docs
22859830,1,0,1,java.util.HashMap,There is a HashMap called flights and an ArrayList called planes.
22860094,2,0,0,java.util.HashMap,Create HashMap for planes and ArrayList of flights in stead.
22860094,2,0,0,java.util.HashMap,Edit in response to the comment:  You are using plane id's as keys to the HashMap.
22860094,2,0,0,java.util.HashMap,"the key, should be placed in the HashMap."
22860094,2,0,0,java.util.HashMap,"For storing flights, there were two choices  Aggregation: HashMap<Plane, List<Flight>> as suggested by Octopus Association: List<Flight> with Plane as a member of Flight class."
22859941,2,0,0,java.util.HashMap,Flights is a HashMap.
22861582,2,1,1,java.util.HashMap,"But what Still you can do you can, by extending the Map implementation as example -  HashMap<K,V> and implement such method like -  code."
22865496,2,0,0,java.util.HashMap,"It can be done in O(n) time (average case) and space by creating a HashMap<Integer,A> where the key is the ID, and the value is the A object."
22867038,1,0,2,java.util.HashMap,wordMap is a HashMap and contains somewhat around 5000 elements as well.
22867390,2,0,1,java.util.HashMap,A better way to do this is to use a HashMap and use contains() to determine if it exists in the HashMap.
22868170,1,0,1,java.util.HashMap,How to change the value of a key in HashMap?
22868170,1,0,1,java.util.HashMap,hello guys how can I change the value of a key in HashMap?
22870584,1,0,1,java.util.HashMap,"the problem is that  if the json is {""user"":""something""} content will be {user=something}, it is not a json is only toString method from HashMap."
22875102,2,1,1,java.util.HashMap,"According to the HashMap javadoc:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
22875106,1,0,0,java.util.HashMap,"It can be invoked on a HashMap, Hashtable, IdentityHashMap, TreeMap etc because these all implement Map."
22875158,2,0,1,java.util.HashMap,"When you change the parameter to HashMap<K, V> for example you can call it because HashMap overrides the clone() method with a public modifier."
22875158,2,0,1,java.util.HashMap,"Notice how I changed the parameter to HashMap<String,Integer>."
22875158,2,0,1,java.util.HashMap,The reason for why this works is very simple: HashMap defines its own clone() method.
22876271,2,1,3,java.util.HashMap,"Note that if you are doing this type of thing with the same classes frequently you might want to store the Method objects locally somewhere, like a HashMap."
22876139,1,0,0,java.util.HashMap,Class VS HashMap for more than 50 fields from file.
22876139,1,0,0,java.util.HashMap,Class object with 60 fields(POJO for each file) or HashMap for each file.
22876606,2,0,0,java.util.HashMap,Using HashMap/TreeMap with a specified Key and a value as 'Java object class'.
22878923,2,0,1,java.util.HashMap,Class object with 60 fields(POJO for each file) or HashMap for each file.
22877244,2,0,2,java.util.HashMap,This code converted the json string into HashMap successfully.
22877341,1,0,1,java.util.HashMap,"Main storage is HashMap<Long, MyDO> My processing can be done in basic foreach loops but i can optimize some of operations by creating indexes via mapping some object fields like HashMap<String, ArrayList<MyDO>> which will reduce iteration count for 30-100x but processing more like 2-5x in total So question is how much slower will be GC for ~10 millions long living objects if i have not one map i store them but 5 maps and thus creating like 5x times references to same objects?"
22878922,1,0,0,java.util.HashMap,Efficient way to implement HashMap: Java.
22878922,1,0,0,java.util.HashMap,"SO I was thinking of having a HashMap<Boolean, MyObject>."
22878922,1,0,0,java.util.HashMap,"So, is there a better way of passing these two objects, without having two either use a HashMap or having two parameters in the function signature?"
22883256,1,0,3,java.util.HashMap,"I'm having trouble with a homework, the thing is I have around 40.000 HashMap<Character,Character> objects stored in a ArrayList<HashMap<Character,Character>>object."
22883256,1,0,3,java.util.HashMap,"Each object HashMap<Character,Character> object represent a key for a substitution cipher."
22883256,1,0,3,java.util.HashMap,So one HashMap object might be: a->a; b->b; c->c; d->d; e->e; f->f; g->h; h->g which means that the g and h are swapped during encription/decryption.
22883256,1,0,3,java.util.HashMap,"When the program detects that say g->h It's a wrong substitution, I want to delete all the HashMap objects that contain this entry, not only the current element that I'm working with inside the loop and thus be able to avoid checking the keys one by one."
22884149,2,1,3,java.util.HashMap,Hashtable is a JDK 1.0 data structure; HashMap is preferred.
22884152,2,0,1,java.util.HashMap,"Also, consider using HashMap instead."
22884152,2,0,1,java.util.HashMap,See Differences between HashMap and Hashtable?
22884793,2,0,0,java.util.HashMap,"Third, as someone mentioned before, you should use HashMap, as it is much better."
22884526,1,0,1,java.util.HashMap,I noticed surprising(for me) difference between HashMap and EnumMap in 'generics behaviour'.
22884526,1,0,1,java.util.HashMap,Conclusion: Therefore for HashMap erasure fullfils but for same code with EnumMap - not.
24380007,2,0,0,java.util.HashMap,In HashMap we always need to traverse through linked list even if there is an existing linked list at particular index for checking against key.
22892642,2,0,0,java.util.HashMap,"The main method is Static (i.e. one instance per class), the HashMap is not static, that means you will have to instantiate the method."
22892691,2,0,0,java.util.HashMap,The above code will not compile because non static variable HashMap cannot be referenced in static context.Make sure try to add static modifier to HashMap.
22897201,1,0,0,java.util.HashMap,Populate ComboBox with one value of the HashMap(Object).
22897201,1,0,0,java.util.HashMap,So I created a HashMap like this: code.
22897201,1,0,0,java.util.HashMap,I also have a method to populate this HashMap: code.
22897305,2,1,0,java.util.HashMap,If you don't create new Producto then the same object is referenced twice in HashMap instead of 2 different Producto
22897903,1,0,0,java.util.HashMap,How to convert ... into a HashMap (Java)?
22897903,1,0,0,java.util.HashMap,Each key of HashMap is a table row & List<String> of each key will contain all values of that row.
22897903,1,0,0,java.util.HashMap,You don't need to use HashMap you can use String[][]?
22897974,2,0,0,java.util.HashMap,Add the rows and cell contents to a HashMap in the way you've already described.
22899087,2,0,1,java.util.HashMap,"You want to create (""new"") the HashMap outside of that loop, not inside where it seems to be now."
22899087,2,0,1,java.util.HashMap,"Within that loop, if the integer is already in the HashMap, you need to handle that differently than if it is the first time entered."
22899539,1,0,0,java.util.HashMap,"For example I have this Map : Map<String, String> relation = new HashMap<String, String>; which contains two concepts and relation between each other."
22899539,1,0,0,java.util.HashMap,"relation(""concept1"")=""AUTHETICATION""; realtion(""relation"")=""kind of""; relation(""concept2"")=""VALIDATION""; listRelation.add(relation); relation = new HashMap<String, String>; relation(""concept1"")=""ENCRYPTION""; realtion(""relation"")=""kind of""; relation(""concept2"")=""CRYPTHOGRAPHY""; listRelation.add(relation); And I create an other Map which contains concept and his instance like:  Map<String,String> inst; inst(""concept"")=""authentication""; inst(""instance"")=""topNet""; how could I create this in OWL."
22900630,2,0,1,java.util.HashMap,You've entirely missed the point of a HashMap if you're attempting to search through it.
22900630,2,0,1,java.util.HashMap,"A HashMap is designed to subvert the need to search, by using the value as the key."
22900630,2,0,1,java.util.HashMap,This is what is meant by HashMap having an O(1) complexity when searching.
22900630,2,0,1,java.util.HashMap,"Additionally (sorry), it has to be bilingual, could I simply have all the words in both languages in one HashMap and have a way to search through both?"
22900630,2,0,1,java.util.HashMap,Just add new entries to the HashMap.
22900630,2,0,1,java.util.HashMap,Extra (In your case Necessary) Reading  Read up on the HashMap.
22903041,2,0,0,java.util.HashMap,Use HashMap inbuit function put to insert keys into the HashMap and use get function to get the value of any particular key inserted into the HashMap.
22904628,2,0,0,java.util.HashMap,In HashMap already equals() method is overrriden.If you want to override object class equals() method eclipse shortcut key--->alt+shift+s+v Select the equals method click on ok.
22904576,1,0,1,java.util.HashMap,I have a function working in java such that HashMap has a store of key as String and value as ArrayList.
22904610,2,0,2,java.util.HashMap,"Regardless of whether you're using the same key, HashMap simply isn't thread safe for any writing:  Note that this implementation is not synchronized."
22904781,2,0,0,java.util.HashMap,"Agree with Jon Skeet  ""if there are different keys involved, two operations at the same time could both trigger internal map expansion, leading to problems"" But there can be specific scenario as ""HashMap is filled only at the start of application with data  like database connection parameters etc."
22912066,1,0,1,java.util.HashMap,Please not that i am creating a new object of HashMap when user logged In.
22913026,2,0,0,java.util.HashMap,HashMap doc.
22915437,1,0,1,java.util.HashMap,I'm trying to audit an Object that contains a HashMap.
22915437,1,0,1,java.util.HashMap,"The HashMap property is @Transient as and I've tried adding @NotAudited to it, but when I try to get a list of the Objects it throws the following error: code."
22915437,1,0,1,java.util.HashMap,I've tried it with another simpler Object without a HashMap and it works perfectly.
22916887,2,0,0,java.util.HashMap,"For example, Map map = new HashMap(); ... map.put(""desc"", ""something really important""); Map deser = new HashMap(); deser.put(""desc"", StringDeserializer.class); You could also use a deser, where the value would be the class name, then you just do a class loading by name http://www.tutorialspoint.com/java/lang/class_forname_loader.htm"
22918109,1,0,2,java.util.HashMap,Storing an Array in a HashMap as its value.
22918109,1,0,2,java.util.HashMap,I want to store a Float array as a value of the HashMap.
22918109,1,0,2,java.util.HashMap,So I have to use either the format mentioned above or use a HashMap which is again a over kill.
22918198,2,1,1,java.util.HashMap,"That array is an Object like any other value of the vFeatureHm map, so any bounds checking is irrelevant to the HashMap (although of course it can be performed at another part of your code)."
22918985,2,0,0,java.util.HashMap,The best option would be to change HashMap for ConcurrentHashMap.
22919931,1,0,0,java.util.HashMap,"There are nine Strings in this HashMap, each associated with a group: Greg, George, Fred, Marie, Ann, Julie, Alfred, Bob, and Julian."
22922985,1,0,0,java.util.HashMap,Tree Data Structure in HashMap.
22922985,1,0,0,java.util.HashMap,"FYI, I'm doing the JSON formatting in the second part of the code by traversing through the HashMap and formatting it to fit what I need for the JSON."
23092763,2,1,0,java.util.HashMap,"What you can do at runtime is read the entire file into a HashMap<String, List<String>>."
23092763,2,1,0,java.util.HashMap,"Once this one-time map creation has been done, you can then do a simple lookup to the HashMap for the term the user is interested in."
22931305,1,0,4,java.util.HashMap,"While I don't foresee using this particular class in a HashMap or similar as it's an intermediary between a similar RGBA class which uses ints for it's internal storage, I'm somewhat concerned about the general case of using floats in equality."
22934817,1,0,0,java.util.HashMap,Java SQL what is the best way to save class with HashMap attribute in MySQL database.
22934817,1,0,0,java.util.HashMap,"I don't know what's the best way to save a HashMap in the database (the HashMap can be very big) so I my first idea is to save the HashMap as a blob (in a column), an other idea was to save every value in the HashMap corresponding to the key but this would make it to large I thought."
22934817,1,0,0,java.util.HashMap,The error: HashMap cannot be cast to Clob
22935471,2,0,0,java.util.HashMap,"If your problem is the raw type List, which you shouldn't use, then you have to cast the row to a HashMap<String,Object>: code."
22935471,2,0,0,java.util.HashMap,"So, when you create your HashMap, you should not use getColumnName as key but the value for that column instead: code."
22935471,2,0,0,java.util.HashMap,"WARNING: I don't know what you wanna do with this, but it is very weird, since you'll have only one key and one value in the HashMap for the row."
22935471,2,0,0,java.util.HashMap,You might want to use a single HashMap containing all rows instead (and get rid of the List): code.
22935616,1,0,5,java.util.HashMap,Why hash method in HashMap.
22935616,1,0,5,java.util.HashMap,"This is critical because HashMap uses power-of-two length hash tables, that otherwise encounter collisions for hashCodes that do not differ in lower bits."
22935616,1,0,5,java.util.HashMap,"What I am not able to understand is,  1) Why HashMap uses power-of-two length hash tables?"
22935810,2,0,0,java.util.HashMap,"When the HashMap needs to resize it creates a new array of buckets, these buckets are accessed using hashCode() (with minor additional manipulation to map int hashCode to the number of buckets in hashMap)."
22936608,2,0,2,java.util.HashMap,The general method for HashMap.get(key) is as follows:  Call key.hashCode() to get a single integer that represents the object.
22937888,1,0,2,java.util.HashMap,Write HashMap to JSON in Java.
22937888,1,0,2,java.util.HashMap,In my project I have a HashMap.
22937888,1,0,2,java.util.HashMap,I want to output this HashMap to JSON.
22938392,1,0,0,java.util.HashMap,This throws a:  ClassCastException: java.util.HashMap cannot be cast to   alm.motiv.AlmendeMotivator.models.Challenge  I have no clue why java think I want to cast this to a hash map.
22939266,1,0,0,java.util.HashMap,"At this time, I'm successfully generating some JSON from a HashMap."
22939639,1,0,3,java.util.HashMap,HashMap Performance when overriding hashcode method.
22939639,1,0,3,java.util.HashMap,"In a HashMap, if I put custom objects as a key."
22939713,2,0,0,java.util.HashMap,Always returning 1 in hashCode() will degrade the performance of HashMap.
22939744,2,0,4,java.util.HashMap,If you are referring to the asymptotic time complexity then: since HashMap uses hashCode to calculate which bucket to use in the hashtable if you return 1 from hashCode you effectively make your HashMap's performance be like an (unsorted) LinkedList's performance.
22939744,2,0,4,java.util.HashMap,Returning random values will simply blow your HashMap up since equal objects will no longer have equal hashCodes.
22939744,2,0,4,java.util.HashMap,So to sum it up you lose:  Time complexity when searching your HashMap (from O(1) to O(n)) lookup in your HashMap (it won't work anymore)
22939762,2,0,0,java.util.HashMap,"If you always returned 1 (or any other constant value for all objects to be inserted), then the HashMap would internally degrade to be a ""linked list""."
22939762,2,0,0,java.util.HashMap,"If you returned random values, then the HashMap would simply become inconsistent."
22941715,1,0,5,java.util.HashMap,How to create a generic typesafe HashMap by class type?
22941715,1,0,5,java.util.HashMap,I'd like to create a HashMap that maps specific class types to one single specific new object.
22944213,2,0,1,java.util.HashMap,"If the only reason you're changing this is to use the above code, and you're having issues, you can just make it work with language level 6 by changing new HashMap<>() to new HashMap<String, String>()."
22944918,1,0,3,java.util.HashMap,Why does the code hang with HashMap.put() from multiple threads?
22945064,2,0,3,java.util.HashMap,"Quote from the docs for HashMap:  Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification."
22945064,2,0,3,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put(K, V)"
22945210,2,1,4,java.util.HashMap,Why does the code hang with HashMap.put() from multiple threads?
22945210,2,1,4,java.util.HashMap,You cannot use a HashMap with multiple threads without external synchronization.
22945210,2,1,4,java.util.HashMap,You could also use the Collections.synchronizedMap(new HashMap<>()); but the ConcurrentHashMap should give better performance.
22945210,2,1,4,java.util.HashMap,You are seeing a hang because one of the threads has a corrupted version of the HashMap -- probably a looped linked list where two hash entries are linked to each other or something.
22945210,2,1,4,java.util.HashMap,If you do a thread dump you will see that it is spinning while traversing the HashMap entries.
22945210,2,1,4,java.util.HashMap,The ConcurrentModificationException is only thrown if the HashMap class detects a modification.
22945210,2,1,4,java.util.HashMap,Each processor has its own memory cache and threads can easily see partially synchronized views of an object (your HashMap in this case) without proper memory synchronization.
22945268,2,0,1,java.util.HashMap,HashMap is not thread-safe.
22945268,2,0,1,java.util.HashMap,What happens is that HashMap.put needs to make changes to the internal data structures.
22949243,2,0,0,java.util.HashMap,"If you are going to be storing item codes that correspond to ShopItems, I suggest using a HashMap with item codes as the keys and ShopItems as the values."
22951210,1,0,1,java.util.HashMap,"I'm trying to pass a variable of the type: HashMap<Foo, HashSet<Bar>> to a method, which expects: Map<Foo, Set<Bar>> I think it should work, but I'm getting the following compile error: code."
22957854,2,1,8,java.util.HashMap,A fairer comparison would be between java.util.HashMap and std::unordered_map or java.util.TreeMap and std::map.
22961195,2,0,1,java.util.HashMap,However I suggest you to use a HashMap : code.
22962810,1,0,1,java.util.HashMap,"I have created a generic method which will take hibernate named query, a HashMap object which contain parameter name values for that named query in the following manner: The method signature is: code."
22962810,1,0,1,java.util.HashMap,studentDOB is a key that I will get from HashMap.
22965998,2,0,0,java.util.HashMap,"The signature of query.set parameter is void QueryInstance.setParameter(String, Object); You may use HashMap<String,Object> as parameter, iterate it in method and assign as per the mentioned method."
22970618,2,1,1,java.util.HashMap,is interpreted as an Array (or HashMap?!)
22970618,2,1,1,java.util.HashMap,or (if GSON interprets it as a HashMap): code.
22970618,2,1,1,java.util.HashMap,or (if GSON interprets it as a HashMap): code.
22975541,1,0,0,java.util.HashMap,How to pass in initialized HashMap as param?
22975541,1,0,0,java.util.HashMap,"How can I pass in a new HashMap in the most canonical (simplest, shortest hand) form?"
22975561,2,1,2,java.util.HashMap,This essentially derives a new class from HashMap and sets up values in the initializer block.
22975564,2,0,0,java.util.HashMap,"You can't call put and pass the HashMap into the method at the same time, because the put method doesn't return the HashMap."
22975665,2,0,0,java.util.HashMap,"HashMap< K,V>.put code."
22975665,2,0,0,java.util.HashMap,"As you can see, it does not return the type HashMap<?, ?>"
22975988,1,0,0,java.util.HashMap,How to get length of String[] array in a HashMap value.
22975988,1,0,0,java.util.HashMap,I'm making a HashMap to store menu names as a String[] array as a value of the Map.
22976541,1,0,0,java.util.HashMap,HashMap Mapped Value is slightly off.
22976541,1,0,0,java.util.HashMap,Code for HashMap: code.
22977825,2,1,1,java.util.HashMap,Use a HashMap if you plan to have a key/value design:  code.
22976655,1,0,0,java.util.HashMap,"Ok so, I have a method here that when the Entity hits the ground it saves the Location and the Block inside of a HashMap defined like so: code."
22977225,1,0,0,java.util.HashMap,HashMap: sorting key into alphabetical order with it's mapped values.
22977310,2,0,2,java.util.HashMap,"HashMap cannot be sorted, you should use some kind of a sorted map, like TreeMap, but maps can only sort by keys."
22977713,1,0,0,java.util.HashMap,Java null LinkedList from HashMap.
22977713,1,0,0,java.util.HashMap,"adjList is a HashMap with the key being a user-defined type UFnode and the value being a LinkedList of Pair<UFnode, Integer>."
22978052,1,0,0,java.util.HashMap,Sorting HashMap keys into alphabetical order.
22978064,2,0,2,java.util.HashMap,"If you want a Map with sorted keys, I wouldn't use a HashMap but rather a TreeMap, where the Map keys are sorted for you in their natural order (if the keys implement Comparable) or a chosen order if you use a Comparator."
22978664,1,0,0,java.util.HashMap,But for me now its very complicated to change my entire data structure from List to HashMap.
22978746,2,1,1,java.util.HashMap,If you have duplicate stength but unique color than Store the color as key and strength as value into HashMap and sort the HashMap according to value.
22982512,2,1,1,java.util.HashMap,"I would recommend mocking it with Mockito, then stubbing getAttribute and setAttribute to delegate to a HashMap, or some other suitable structure."
22982512,2,1,1,java.util.HashMap,"So in your test class, you'll have fields for   your mocked HttpSession,  a real HashMap<String,Object>  and you'll use Answer<Object> objects for each of getAttribute and setAttribute."
22982512,2,1,1,java.util.HashMap,Each Answer will just delegate the call off to the HashMap.
22984113,2,0,0,java.util.HashMap,"HashMap.Entry is just a tupel and not an iterable collection It means that you don't need the second for-each, because you can accsess the Node.serviceName directly by  code."
22985543,1,0,0,java.util.HashMap,I tried with HashMap and other things but it is not working for me.
22986975,1,0,0,java.util.HashMap,And I have to save my structure in a HashMap code.
22988741,2,0,2,java.util.HashMap,"This is not what you want, because you could pass a List<TreeMap<String,?>>which can not contain a HashMap for example."
22988620,1,0,0,java.util.HashMap,"My Attempt OccupancyCheckView Class So basically I create an object which in turn creates this Map: private Map<String, Grid> resultGrids = new HashMap<String, Grid>(); //where String is the title of the grid After it is created, I simply allow the user to grab it: code."
22989891,2,0,2,java.util.HashMap,"You can make a HashMap<String,Integer>."
22989899,2,0,0,java.util.HashMap,"You could use a HashMap<String,Integer>."
22989899,2,0,0,java.util.HashMap,"Looping through the array, you can check for each String if it is not already a Key of your HashMap, add it and set the value to 1, if it is, increase its value by 1."
22989899,2,0,0,java.util.HashMap,Then you have a HashMap with all unique Strings and an associated number stating their amount in the array.
22992609,1,0,0,java.util.HashMap,Printing out a HashMap using an Another HashMap's key as values.
22992609,1,0,0,java.util.HashMap,If I have a HashMap such as  code.
22992609,1,0,0,java.util.HashMap,and a HashMap such as code.
22992609,1,0,0,java.util.HashMap,How would I use the second HashMap as my key to print out something like... code.
22992641,2,0,2,java.util.HashMap,"Assuming your first HashMap is called firstMap and the second is secondMap, then navigate through the keys of secondMap to print the values stored on first map."
22994258,2,0,0,java.util.HashMap,"You can use a HashMap to, where the id would be the char sequence and the value would be the path or image component of that emoticon."
22995470,2,0,0,java.util.HashMap,Loop into your HashMap to find the one with most occurence..
22996355,2,1,5,java.util.HashMap,"To make it guaranteed, you'd have to consistently synchronize access to hashSet (presumably it's a java.util.HashMap) in order to prevent another thread from modifying the map between these operations."
22996355,2,1,5,java.util.HashMap,"Even if you simplify your code to eliminate the unnecessary check, it's still not safe to share a java.util.HashMap across threads without a memory barrier."
22997884,2,0,0,java.util.HashMap,"From what I recall, ""AWT-EventQueue-0"" exceptions are from when you do something asynchronous with the HashMap."
23001442,2,0,0,java.util.HashMap,Modify the HashMap key to fit your use case.
23005797,1,0,0,java.util.HashMap,When running on Java 1.7 Application sends a Data Value Object(the DVO consists of other DVOs and a HashMap) at server-side in debug mode I can see the DVO but when I want to put a new object(not NULL!!!)
23007942,1,0,2,java.util.HashMap,"Here's the problem: registeredClasses can't be HashMap<String, Dao<T, BigDecimal>> because I'd need to add the type parameter T to the DaoFactory class (it would be class DaoFactory<T>)."
23007942,1,0,2,java.util.HashMap,"But it is inside a static mathod (DaoFactory is a singleton), so I can't use T. So I use HashMap<String, Dao<?, BigDecimal>> registeredClasses instead of HashMap<String, Dao<T, BigDecimal>> registeredClasses."
23007984,1,0,3,java.util.HashMap,"Current Approaches Single pass in-memory A single pass approach, storing column values -> normalized_id values in an associative array (a Java HashMap in my case)."
23010034,2,1,4,java.util.HashMap,"If your songList variable is an ArrayList<HashMap<String, String>> however, you would need to use a Comparator<HashMap<String, String>>, which to me sounds like a potential design issue."
23013685,1,0,1,java.util.HashMap,Merging a Set and List to HashMap.
23013685,1,0,1,java.util.HashMap,I have one set whose keys are String and List of type String I want to make a HashMap out of this Set and List.
23023854,2,1,3,java.util.HashMap,Use Map and instantiate it by HashMap.
23025351,1,0,0,java.util.HashMap,I have a large HashMap that reads from a 3GB file.
23025864,2,0,0,java.util.HashMap,"I cannot be sure about the data you are reading from file a storing to HashMap, so my answer can not be concrete and specific."
23025864,2,0,0,java.util.HashMap,"HashMap structure has its own memory occupation Java split heap memory in more spaces: youg gen, old gen, perm gen (http://www.pointsoftware.ch/de/under-the-hood-runtime-data-areas-javas-memory-model/) so maybe you are not able to use all the 30g that you expect to use  My first suggestion is to add a log info that count how many lines of your file you are able to insert with -Xmx10g, then -Xmx20g, then -Xmx30g."
23025887,2,0,0,java.util.HashMap,"There are two forms, one where some_type is a primitive (int, char, double, etc), and another where some_type is an object class name (String, HashMap, MyClass, etc)."
23025713,1,0,0,java.util.HashMap,The Authors are stored in a HashMap (the key is the index).
23029161,1,0,0,java.util.HashMap,Please tell me what will be with old items in HashMap if I put more items than specify in capacity?
23029161,1,0,0,java.util.HashMap,i set capacity to 5.  but what will be with first 5 items and bitmap's if I put 10 items to this HashMap?
23029200,2,1,4,java.util.HashMap,"You're only specifying an initial capacity - the HashMap will grow as it needs to anyway, copying the contents internally."
23029200,2,1,4,java.util.HashMap,From the documentation:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
23029200,2,1,4,java.util.HashMap,"If many mappings are to be stored in a HashMap instance, creating it with a sufficiently large capacity will allow the mappings to be stored more efficiently than letting it perform automatic rehashing as needed to grow the table"
23031087,1,0,2,java.util.HashMap,"i have implemented this algorithm that creates a shape using mouse clicks and then u can fill the shape with a color using the boundary fill algorithm.... Only part of the shape is filled and then i get this error :      Exception in thread ""AWT-EventQueue-0"" java.lang.StackOverflowError         at java.util.HashMap.getEntry(Unknown Source)         at java.util.HashMap.get(Unknown Source)         at sun.awt.AppContext.get(Unknown Source)         at com.sun.java.swing.SwingUtilities3.getDelegateRepaintManager(Unknown Source)         at javax.swing.RepaintManager.getDelegate(Unknown Source)         at javax.swing.RepaintManager.addDirtyRegion(Unknown Source)         at javax.swing.JComponent.repaint(Unknown Source)         at java.awt.Component.repaint(Unknown Source) Any idea whats wrong?"
23031973,2,0,1,java.util.HashMap,You can use a HashMap for key/value pairs.
23035465,1,0,0,java.util.HashMap,Those are the tests that should run: import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; import com.fasterxml.jackson.databind.JsonNode; import org.junit.
23036796,2,0,0,java.util.HashMap,"What I would do is whenever a hashtag is logged, you would increment its value in a HashMap."
23036796,2,0,0,java.util.HashMap,"(Hehe, HashTag, HashMap?"
23036796,2,0,0,java.util.HashMap,"Every minute or hour or day, whatever you choose, you would reset the whole HashMap."
25167179,2,0,2,java.util.HashMap,"This covers the general case for any size list and should work with any types, just swap out the Integer::max and/or HashMap::new as desired."
23039325,2,0,0,java.util.HashMap,"I don't know your exact need, but you can use HashMap to store the values as key values pair."
23039325,2,0,0,java.util.HashMap,"which can reduce your some steps for this particular need  EDIT HashMap: hash map is a data structure which allows you to store the data in a key value pair, so you can fetch the value from the key by using get method, and for your case key is the customer id and and value is customer."
23039325,2,0,0,java.util.HashMap,tutorial : http://www.mkyong.com/java/how-to-use-hashmap-tutorial-java/ documentation : http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
23039414,1,0,1,java.util.HashMap,What does ReadTime mean in HashMap lookup while doing benchmarking?
23039414,1,0,1,java.util.HashMap,I am working on doing some performance test on insertion and read time on HashMap just for fun to see how the HashMap performance is coming as compared to other data structures.
23039414,1,0,1,java.util.HashMap,Now I am reading this file line by line and storing it in HashMap so I  am able to measure the insertion performance with the below code.
23039414,1,0,1,java.util.HashMap,Now I would also like to measure the read performance as well in the HashMap.
23039414,1,0,1,java.util.HashMap,I know how to get values from the HashMap but not sure with the read time what does it mean?
23039414,1,0,1,java.util.HashMap,It means how much time it takes to search  for one string from the HashMap?
23039414,1,0,1,java.util.HashMap,Should I benchmark how much time a single string lookup is taking from HashMap or something else?
23039414,1,0,1,java.util.HashMap,"Or In general, if I would like to measure ReadTime from HashMap how should I do it?"
23039492,2,1,0,java.util.HashMap,Its just a sample code to read-write random values in HashMap.
23039643,1,0,1,java.util.HashMap,HashMap returns null pointer for unknown reason.
23044820,2,0,0,java.util.HashMap,"When you fire the projectile, you should save the UUID of it in a HashMap."
23040216,1,0,2,java.util.HashMap,How to find size in Memory after insertion in HashMap?
23040216,1,0,2,java.util.HashMap,I am working on some performance test on HashMap insertion.
23040216,1,0,2,java.util.HashMap,Now I am reading this file line by line and storing it in HashMap so I  am able to measure the insertion performance with the below code.
23040216,1,0,2,java.util.HashMap,Now I would also like to measure size in memory after insertion in my above HashMap.
23040714,2,0,11,java.util.HashMap,"You can pull jol as the dependency, and feed your HashMap instance to it."
23154343,2,0,1,java.util.HashMap,"So as long as it's a row that corresponds to a total_count, it stores it in a HashMap (attributeID + "","" + value => total_count)."
23154343,2,0,1,java.util.HashMap,"So as soon as it starts receiving the other rows, all it has to do is retrieve the corresponding total_count from the HashMap and output UserID => total_count."
23154343,2,0,1,java.util.HashMap,"This solution is quite optimistic, as it assumes that your heap can handle your HashMap."
23044406,1,0,3,java.util.HashMap,"Other collection types like HashSet, HashMap and ArrayList are not allowed too."
23045088,1,0,0,java.util.HashMap,Mapping an ArrayList to a HashMap.
23045088,1,0,0,java.util.HashMap,I want to map these values into a HashMap with the colors as the key and the names as the mapped values.
23045446,2,0,1,java.util.HashMap,HashMap is more faster than List in search.
23047589,1,0,1,java.util.HashMap,In my list I have HashMap and Trie data structure.
23047589,1,0,1,java.util.HashMap,I am done with HashMap but not sure how to use Trie for below problem - I have a text file which contains 2 million english words with their frequencies in this format - code.
23047589,1,0,1,java.util.HashMap,Now I am reading this file line by line and storing it in HashMap - First splitted string goes as the key in the HashMap and next splitted string goes as the value in the HashMap and  so I  am able to measure the insertion performance with the below code.
23047589,1,0,1,java.util.HashMap,Now how would I implement Trie data structure to load the same thing in Trie as I  did for HashMap?
23048997,1,0,0,java.util.HashMap,removing entries from a HashMap in Java.
23048997,1,0,0,java.util.HashMap,Now what I am trying to do is remove all the empty strings entries from my HashMap.
23048997,1,0,0,java.util.HashMap,So my resulting HashMap would be code.
23048997,1,0,0,java.util.HashMap,generateFeedbackMap() is function which returns the HashMap in consideration StringIterator is a class which I have defined which iterates over through each character of my Strings.
23049386,2,0,0,java.util.HashMap,I just copied all my current entries from oldMap to a new defined HashMap which would contain at least one letter in their keys.
23049386,2,0,0,java.util.HashMap,So essentially I got rid of all the removing and iterating over strings and just use another HashMap instead as below code.
23049312,2,0,1,java.util.HashMap,This would actually be easier with a HashMap.
23059632,2,1,0,java.util.HashMap,Well it looks like MyBatis is trying to turn an entire result set into a HashMap.
23059632,2,1,0,java.util.HashMap,"I'm not sure what the solution is, but the alternatives would include:  increase the heap size (though that may just be putting off the problem), changing the query so that there are fewer results in the resultset (somehow) changing the way that your application is processing the results so that it doesn't need to load them into a huge HashMap ..."
23075775,2,0,0,java.util.HashMap,As Stephen said its main cause is HashMap.
23061451,2,1,1,java.util.HashMap,"If your nodes are unique with respect to their names, you can track them in a simple HashMap to reuse nodes instead of creating new."
23061451,2,1,1,java.util.HashMap,"Finally - don't try to do this if you have a massive number of nodes, since your HashMap will outgrow memory."
23061433,2,1,1,java.util.HashMap,"I would not directly use a HashMap, as the default methods it has will not allow for what you desire."
23061433,2,1,1,java.util.HashMap,I'd write my own collection based on the HashMap that would expose it's own put method.
23061433,2,1,1,java.util.HashMap,"Assume the internalMap is a private member of this collection class and is of type HashMap<Class<?>, List<?>>."
23065645,2,0,1,java.util.HashMap,";-) And concerning the changing of contained value: java.util.HashSet (respectivly the HashMap it holds) will calulate its own hash upon yours, and cache that."
23063777,2,1,7,java.util.HashMap,Use a switch statement or a HashMap.
23063797,2,0,1,java.util.HashMap,"Use a HashMap, with key as Integer, and value as text."
23072257,2,0,1,java.util.HashMap,You can use a HashMap.
23073951,2,0,1,java.util.HashMap,"In particular, HashMap<K, V> does not implement the SortedMap<K, V> interface."
23073951,2,0,1,java.util.HashMap,"Try creating a map-backed collection or iterator, that provides the ordering you require, and uses your original HashMap as its store."
23075576,1,0,2,java.util.HashMap,I encountered a problem about HashMap.
23075576,1,0,2,java.util.HashMap,"After some debugging with no result, I wrote a short piece of code to test the HashMap."
23075614,2,1,3,java.util.HashMap,Instead use a new instance of that object to do alternations or use a clone of the Object to place inside the HashMap.
23076186,2,0,2,java.util.HashMap,The behavior you're getting is normal due albeit confusing due to how HashMap is implemented.
23076186,2,0,2,java.util.HashMap,"Roughly, here how putting a value V with a key K works:  HashMap computes the hashcode H of the key K H is used as an index (trimming it if necessary) in an array where the values are stored: data[H] = Entry(K, V)  Afterwards, when you call get(K) or containsKey(K):  HashMap computes the hashcode H of the key It then checks if data[H] is not null and that it's key equals the key you provided If so, it returns the value V for get or true for containsKey  In you case, you called put with Point(0, 0)."
23076186,2,0,2,java.util.HashMap,The key is modified but HashMap can't detect it and so it won't move the entry to the correct index.
23076186,2,0,2,java.util.HashMap,Morale of the story: The keys used in a HashMap must be immutable or weird behavior would ensue.
23079840,1,0,2,java.util.HashMap,I thought of using a HashMap object that takes a 2d array as an argument and then creates its unique hash value.
23079840,1,0,2,java.util.HashMap,"Then I can see if the HashMap object contains whichever board state I am currently working with by using HashMap's "".contains()"" method."
23079840,1,0,2,java.util.HashMap,"What I am confused about is that the HashMap object takes ""key"" and ""value"" arguments."
23084161,2,0,1,java.util.HashMap,Sorry was not able to post the code...  To save your bean back to your document you will have to add a method wich loops through the HashMap and writes the values back to your document.
23095080,2,0,1,java.util.HashMap,"We can use a HashMap<String, ArrayList<Integer>> to efficiently store duplicate info."
23094918,2,1,2,java.util.HashMap,"For instance if you create a bunch of JLabel/JTextField associations, you could use a HashMap<String, JTextField> to associate the JTextField with a String."
23095258,1,0,0,java.util.HashMap,Convert JSON to HashMap using XStream.
23095258,1,0,0,java.util.HashMap,"I have a JSON String of the map form : {   ""Lucy"":{     ""id"": 456,     ""full_name"": ""GOOBER, ANGELA"",     ""user_id"": ""2733245678"",     ""stin"": ""2733212346""   },   ""Myra"":{     ""id"": 123,     ""full_name"": ""BOB, STEVE"",     ""user_id"": ""abc213"",     ""stin"": ""9040923411""   } } I want to convert it to HashMap with keys as ""Lucy"", ""Myra"" etc."
23095982,2,0,1,java.util.HashMap,The HashMap issue is relatively easy to handle.
23096033,2,0,0,java.util.HashMap,"One way to go about this (that I have previously used) is to create a HashMap which uses a String as the key, and a Map.Entry as the value."
23096033,2,0,0,java.util.HashMap,"This solution really only adds the ability to handle tasks that fail to execute correctly - in which case, assuming the number of potential tasks you wish to complete is reasonable, you may be better off simply handling the exceptions as they arise and maintaining a single HashMap of previous tasks (regardless of exit status)."
23096549,2,1,1,java.util.HashMap,Here is a modification using HashMap to accomplish that.
23098200,2,0,1,java.util.HashMap,(In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ?
23100294,1,0,0,java.util.HashMap,"As you can observe, the HashMap info is initialised if you pass true to Test's constructor."
23100357,2,1,3,java.util.HashMap,"There are two things here - the HashMap reference, and the HashMap object."
23100357,2,1,3,java.util.HashMap,"Then when you initialize the fields in the constructor, the actual HashMap object is created, which will again take up memory to store the object."
23100477,1,0,1,java.util.HashMap,How to calculate size in memory after inserting data in HashMap and LinkedHashMap?
23100477,1,0,1,java.util.HashMap,"I am working on some performance test on HashMap, LinkedHashMap insertion."
23100477,1,0,1,java.util.HashMap,Now I am reading this file line by line and storing it in HashMap and LinkeddHashMap so I  am able to measure the insertion performance and size in memory after insertion as well with the below code.
23100477,1,0,1,java.util.HashMap,"I have a single class file in which I have two methods, one for HashMap and other for LinkedHashMap performance test and they both are run sequentially, first of all HashMap test will run, then linkedHashMap test willl run - code."
23100477,1,0,1,java.util.HashMap,"There is a very strange problem I am seeing - For the HashMap performance test, I can see myHashMapMemory has some value in it but in the myLinkedHashMapMemory variable, it always has zero or negative value."
23105158,2,0,2,java.util.HashMap,"If you do not have any concurrency on this inner map, then you can declare it as HashMap."
23107181,1,0,0,java.util.HashMap,"How do I update ArrayList<HashMap<String, ?>>?"
23107181,1,0,0,java.util.HashMap,"in the type   HashMap is not applicable for the arguments   (String, String)"
23107370,2,1,3,java.util.HashMap,"Wildcard means ""value type parameter can be anything"" so HashMap<String, ?> is valid but here you're not able to put a String value into it."
23107370,2,1,3,java.util.HashMap,"Note: HashMap<String, ?> is same as HashMap<String, ?"
23107370,2,1,3,java.util.HashMap,"1 String class is final (you can't extend from it) - for this reason it's better to use HashMap<String, String> First approach with HashMap<String, ?"
23107540,2,0,0,java.util.HashMap,"Like so:  ArrayList<HashMap<String, String>> You can read more about it here: http://docs.oracle.com/javase/tutorial/extra/generics/wildcards.html and here: http://docs.oracle.com/javase/tutorial/extra/generics/morefun.html Hope it helps."
23111471,1,0,0,java.util.HashMap,HashMap get gives null with String as key.
23111471,1,0,0,java.util.HashMap,I've a problem with the get(Object key) method from HashMap.
23111471,1,0,0,java.util.HashMap,Update HashMap declaration: code.
23111523,2,1,1,java.util.HashMap,Unfortunately HashMap won't distinguish between a null value and no entry when performing a HashMap.get().
23111523,2,1,1,java.util.HashMap,Have you checked whether the key is contained in the map using HashMap.containsKey() ?
23116779,2,1,3,java.util.HashMap,A simpler method would be a replaceAll-like loop for the regex #\w+ together with a HashMap lookup.
23115784,1,0,2,java.util.HashMap,"I'm new in Java EE and I have a lot of questions... Now I've this question: Which way is better:  Create HashMap object as my HttpServlet class's variable and save information (parameters, attributes,..) in it and then take info from it (on submit HTML form); Take information from HttpSession object from doPost(...) method (from request object)."
23115856,2,1,1,java.util.HashMap,Moreover HashMap is not thread-safe in nature.
23115856,2,1,1,java.util.HashMap,"In worst case, HashMap in multi-threaded environment can cause for crashing your application."
23115856,2,1,1,java.util.HashMap,For details of HashMap race condition in multi-threaded environment see this!
23117138,1,0,0,java.util.HashMap,"I know about HashMap, but as I know we can`t get key by value, just value by key."
23122949,1,0,1,java.util.HashMap,"I have a cache implementation for which i have the KeyObject implemented So the cache is  HashMap<KeyObject , List<SomeObjects>> This KeyObject class ,say it has 2 variable a,b ; code."
23123056,2,0,0,java.util.HashMap,"Convert the your HashMap to JSON using the technique given here: How to convert hashmap to json object in java Then after transferring the string data, convert it back to HashMap using the Gson or Jackson library for Java."
23125548,1,0,0,java.util.HashMap,onResume and onPause method is just used to call the AsyncTask and clear the HashMap code.
23128901,2,0,0,java.util.HashMap,"From the HashSet Doc:  This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
23129387,1,0,3,java.util.HashMap,Get a list of key's in HashMap having key like 'some value'.
23129387,1,0,3,java.util.HashMap,"In Mysql we can query a table having clause "" WHERE name LIKE '%someName%' "", can we have the same functionality with HashMap in java,if so how can we achieve this more efficiently in a less time by not iterating over each element?"
23129437,2,0,1,java.util.HashMap,"There may be a way to achieve this functionality in Java, but HashMap will not do it."
23133039,1,0,0,java.util.HashMap,Many readers but not when writer available with HashMap java.
23133900,1,0,0,java.util.HashMap,"Add, Delete and find using HashMap."
23133900,1,0,0,java.util.HashMap,"Hi I am using HashMap to add, find and remove Customers."
23138838,2,1,8,java.util.HashMap,"After a bit of pain I've worked it out and hopefully this will be useful to others as well  You mustn't use HashMap or ArrayList - just use the interfaces Map and List, code should read: code."
23136805,2,1,1,java.util.HashMap,"You can maintain a Collection of the logged in user, I think a HashMap would be good enough for your purpose."
23138523,1,0,0,java.util.HashMap,"For example, remove an element from a HashMap while iterating it."
23138523,1,0,0,java.util.HashMap,"Since remove operation would not change the length of the underlying table in the HashMap, I think that's not an issue to the iteration."
23139116,2,0,2,java.util.HashMap,"Looking at your analysis for the HashMap case, you have to consider the internal state of the iterator object."
23139116,2,0,2,java.util.HashMap,"I haven't looked at any specific implementation code, but a typical HashMap iterator will have an index for a hash chain in the main hash array, and a pointer to a node within the hash chain:  A Map.remove won't change the hashmap size, so the chain index won't be invalidated."
23140224,2,0,3,java.util.HashMap,"To answer your edit: They come out unsorted because internally HashSet uses HashMap, that distributes the entries in buckets via some hashing algorithm."
23140907,1,0,0,java.util.HashMap,"Also, How do I take the ""value"" of the HashMap and add that to a JList?"
23140907,1,0,0,java.util.HashMap,"Thank you, this has been troubling me, everything I find about HashMap s is strings you enter in the code, not allowing the user to do so."
23151523,2,1,0,java.util.HashMap,Yes you can put the value from two JTextField s to the HashMap lm by using this code.
23151523,2,1,0,java.util.HashMap,You can use this to get the value from the HashMap.
23141981,2,0,0,java.util.HashMap,I suggest you store your data in HashMap where your word is key and value will be number of occurences You can check whether key is present in map.
23143259,1,0,2,java.util.HashMap,"I have found that even the Java developers use this practice in the JDK source code, e.g., Entry class inside the HashMap implementation: code."
23143326,1,0,0,java.util.HashMap,How can I add a value to an array by referencing the HashMap containing it in Java?
23143326,1,0,0,java.util.HashMap,"I think I need to see if thisExpectedBreed at i already exists and if it doesn't, make a new array and put that in the HashMap."
23143916,2,0,0,java.util.HashMap,"I needed to move the array and internal HashMap instantiations into the loop, as @John Gardner recommended: code."
23144345,1,0,0,java.util.HashMap,I'm doing an assignment using HashMap with GUI.
23145592,2,1,1,java.util.HashMap,"Your example involves allocating a whole HashMap and all its entries, and is several orders of magnitude more complicated."
23145592,2,1,1,java.util.HashMap,"The compiler has no idea how a HashMap works and it can't find out e.g., that after m.addAll(m1) the set m contains all member of m1."
23145186,1,0,0,java.util.HashMap,Is there any easier way than HashMap?
23148144,1,0,0,java.util.HashMap,iterator for  both HashMap and -LinkedHasMap (from HashSet) code.
23148144,1,0,0,java.util.HashMap,Research keySet() method: HashMap: code.
23148144,1,0,0,java.util.HashMap,LinkedHashMap cannot especial realization for keySet method and uses HashMap realization.
23148144,1,0,0,java.util.HashMap,map.keySet() returns  same type for HashMap and LinkedHashMap therefore invoke same newEntryIterator() method.
23149641,2,0,0,java.util.HashMap,HashSet.iterator() returns map.keySet().iterator() map.keySet() returns a HashMap.KeySet HashMap.KeySet.iterator() calls [HashMap.this.
23150698,1,0,0,java.util.HashMap,How do you take the values from two JTextField s and apply one to the key and one to the value of a HashMap?
23150764,2,0,0,java.util.HashMap,"If you can't find the value in the HashMap later on, then you might be searching for the wrong key?"
23151106,2,0,0,java.util.HashMap,"Store the values in a HashMap<Integer, String>."
23151106,2,0,0,java.util.HashMap,HashMap does not allow duplicate keys.
23158429,2,0,0,java.util.HashMap,"If you don't have problems with memory, or if the amount of users is not so high, I suggest you to read together both files only once when the program starts, and store the data in a HashMap using the user as key and the password as value: code."
23159571,2,1,0,java.util.HashMap,You could use a HashMap to loop through the data.
23159571,2,1,0,java.util.HashMap,"Your solution has O(n^2) complexity, if you use a HashMap you can get it in O(n)."
23159590,2,0,0,java.util.HashMap,It's best solved using HashMap: code.
23161294,1,0,0,java.util.HashMap,List of objects inside a HashMap issue.
23162927,2,1,3,java.util.HashMap,"Map (probably HashMap): Pros: Each location will be linked to an object per map, so lookup times will be ok. Cons: Lookup times will not be optimal, will use moderate amounts of memory."
23168177,2,1,0,java.util.HashMap,Now you should make your custom class instead of using HashMap code.
30114782,2,0,0,java.util.HashMap,"Since HashMap is already Serializable, there is no need to replace it."
30114782,2,0,0,java.util.HashMap,"Then you can just use HashMap<String,SerializableBitmap> instead of HashMap<String,Bitmap>."
23169156,2,0,0,java.util.HashMap,This is the demonstration of how HashSet/HashMap may work.
23170750,2,0,1,java.util.HashMap,"Since hash-table like structures (HashMap, WeakHashMap) use a computed hash to access the entry in constant complexity, the entire process is very fast."
23170583,1,0,0,java.util.HashMap,Add spinner to HashMap Android.
23170583,1,0,0,java.util.HashMap,"I have a ListView, and the list view is populated with an HashMap."
23170583,1,0,0,java.util.HashMap,How would I go about adding spinners to a HashMap in Android?
23170583,1,0,0,java.util.HashMap,Here is the code for my HashMap: code.
23171362,2,0,1,java.util.HashMap,"Internally, the HashSet is just wrapping a HashMap via the HashSet.map field."
23171827,2,0,3,java.util.HashMap,"see http://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html The value you are passing is not a maximum, it's just the starting size."
25412736,2,1,1,java.util.HashMap,Just checked the source code for the HashMap class.
23173031,2,0,1,java.util.HashMap,The runtime on this is M*N*(HashMap get/put time).
23173680,1,0,0,java.util.HashMap,"So Checkstyle is giving me crap about the protected HashMap I'm using, but for those looking at this question that understand it, you can see I don't have the problem of someone misusing that variable."
23173680,1,0,0,java.util.HashMap,"Potential answers: Ignore the checkstyle warning, or perhaps include an abstract init() method to initialize the HashMap then simply implement the getCost() method generically for all memebers of the enum."
23173876,1,0,0,java.util.HashMap,ContainsKey of HashMap does not work with a Custom Class as key.
23173876,1,0,0,java.util.HashMap,I have a custom class MarioState that I want to use in a HashMap.
23173876,1,0,0,java.util.HashMap,In my HashMap I want to store these states.
23173876,1,0,0,java.util.HashMap,"I know for this to work in my HashMap I have to implement the .equals() and .hashcode() methods, which is what I did (by letting them be automatically generated by the InteliJ IDE)."
23173876,1,0,0,java.util.HashMap,The code used when inserting states in the HashMap (additional information can be provided if necessary): code.
23173876,1,0,0,java.util.HashMap,"A screenshot when I'm in debug mode shows my table containing two keys with different values, but the keys itself are the same (but in the HashMap it is considered different)."
23174177,2,1,1,java.util.HashMap,"In this case, we'll use HashMap."
23174984,1,0,0,java.util.HashMap,Should I do a HashMap ?
23175236,1,0,0,java.util.HashMap,Or using HashMap will have the same/faster speed?
23175467,2,0,0,java.util.HashMap,later you are retrieving one by one so no need of sorted map you can use HashMap.
23175805,1,0,1,java.util.HashMap,"I can't see what it could be good for, but in the Java 8 version of HashMap there's even a corresponding check."
23176679,2,1,1,java.util.HashMap,I see I missed one part of the contract and also failed to see the reason why HashMap.comparableClassFor exists.
23176679,2,1,1,java.util.HashMap,I guess that the reason for HashMap.comparableClassFor is to support different implementations of a common superclass like code.
23177009,1,0,0,java.util.HashMap,Adding to a HashMap which its Value part is another HashMap.
23183685,2,0,0,java.util.HashMap,"I don't know of the canonical solution since I'm not a professional nor an academician, but possible solutions:  Create an ArrayList or other collection (a HashMap could work nicely here) of JButtons as well as a getter  method that uses either an int index (if an ArrayList) or a String (if a HashMap)."
23180334,1,0,0,java.util.HashMap,"Should I use an HashMap, JsonParser or something?"
23182614,1,0,3,java.util.HashMap,"no Map, HashMap, ArrayList etc) I may use Arrays, Java primitive Types and Java Strings."
23184599,1,0,0,java.util.HashMap,Implementation of type parameter in HashMap vs ArrayList.
23184599,1,0,0,java.util.HashMap,"HashMap<K,V> stores data as array of entry."
23188228,1,0,0,java.util.HashMap,Convert HashMap of integers into unique integer array?
23188228,1,0,0,java.util.HashMap,"How can I take the information stored in a HashMap<Integer, ArrayList<Integer>> and create unique arrays of values."
23188808,2,0,2,java.util.HashMap,"If you use a HashMap, it can be even faster once you get a large number of entries."
23189065,1,0,0,java.util.HashMap,java.lang.NullPointerException on Iterator with HashMap.
23189065,1,0,0,java.util.HashMap,The Client I'm searching exists in the HashMap so I don't know why I'm getting this error.
23189540,2,0,1,java.util.HashMap,"In a distributive setting a HashMap is normally sufficient for this type of data collection, and then a database does the sorting, not the HashMap itself."
23191001,2,1,1,java.util.HashMap,"Since you want to group by ID, you could take a look at the HashMap and add this line: Map<String, Double> map = new HashMap<String, Double>();  code."
23197923,1,0,1,java.util.HashMap,Turning a ResultSet into 2DArray/HashMap/Lists of Lists.
23198081,1,0,0,java.util.HashMap,Trying to print a binary tree vertically using HashMap in Java.
23199206,1,0,0,java.util.HashMap,Inconsistent HashMap between classes - Java.
23199206,1,0,0,java.util.HashMap,I have class A which has a HashMap as a public field: code.
23199206,1,0,0,java.util.HashMap,I thought there could be a problem with concurrency and I changed the HashMap to a Hashtable but it is still the same..
23199280,2,0,2,java.util.HashMap,"Therefore you have two options:  Wrap it into a synchronized map, with Collections.synchronizedMap(new HashMap<>());."
23202632,1,0,3,java.util.HashMap,"where compiledStylesheets is a HashMap (private, final)."
23202906,1,0,2,java.util.HashMap,"currentSession.get(String key) is a simple fetcher to fetch from a HashMap<String,Object> ...getSingleSlotHtml() code."
23204216,2,1,5,java.util.HashMap,"The Javadoc of ArrayListMultimap specifies: ""A HashMap associates each key with an ArrayList of values."""
23204216,2,1,5,java.util.HashMap,"So, like a HashMap, keys are ordered arbitrarily."
23208562,2,1,0,java.util.HashMap,"The solution offered below uses a Map, or more specifically a HashMap, for the outer list follows."
23209789,1,0,0,java.util.HashMap,"Good day all,  Considering the following code example: import java.util.HashMap; import java.util.Map; code."
23212240,2,0,1,java.util.HashMap,The most succint way I know is to define your map as an anonymous subclass of HashMap with an instance initializer: code.
23212028,2,0,0,java.util.HashMap,"If you want to map the X and Y position to the ArrayList, use a public HashMap which maps X and Y positions with ArrayList indexes as below(This mapping should be done initially) code."
23212028,2,0,0,java.util.HashMap,"And to get the X and Y position, iterate through all the ArrayList object , get the index and using the index get the X and Y value from the HashMap."
23214677,1,0,0,java.util.HashMap,"I have an ArrayList<HashMap<String, String>> which stores certain values associated with their keys."
23214762,2,0,1,java.util.HashMap,"Provide a Comparator<HashMap<String, String>> implementation that gives the ordering that you want, and use Collections.sort(List, Comparator) If you want to ""group"" in the usual sense, you cannot use that structure, you need another Map (using newId as the key)."
23216143,2,0,0,java.util.HashMap,"if you want it into a map order by counter you can use this:  Map(Integer, Bus) busPosition = new HashMap<>(); busPosition.put(buscount, new   Bus(splitted[0],splitted[1],splitted[2],splitted[3],splitted[4],splitted[5]));"
23219239,1,0,4,java.util.HashMap,"I get a ""Type safety: The expression of type HashMap needs unchecked conversion to conform to HashMap<String,Object>"" warning from the compiler."
23219239,1,0,4,java.util.HashMap,This is due to the fact that I'm losing the generic arguments when using HashMap.class While writing this question I actually stumbled upon this tutorial and thought of overloading the mapping method in the following way: code.
23219239,1,0,4,java.util.HashMap,Please note that I'm not looking for a solution specific to HashMap
23226216,2,1,0,java.util.HashMap,"The theory behind a map, which is what both the old Hashtable and the modern HashMap are, is that it maps from a specific key to a single value."
23226216,2,1,0,java.util.HashMap,"This code presumes that both Account and Person implement an equals and hashCode method that always gives the right answer: if I have two different objects that represent the same account, equals says they are the same and hashCode gives the same result for both of them, and once I put them into a structure like a HashMap or HashSet, their hashCode does not change."
23227266,1,0,3,java.util.HashMap,"...where mapperID is an ID string fetched from a HashMap object containing a list of all file IDs of relevance inside of Google Drive, fileBuilder.srcFile is a non null byte[] object."
23234528,1,0,0,java.util.HashMap,Group HashMap items according to a specific key.
23234768,2,0,0,java.util.HashMap,"I would suggest, instead of using an Arraylist<HashMap<string, string>> you use a HashMap<string, List<MyCustomObject>>."
23234579,2,0,2,java.util.HashMap,There is nothing built into Map or HashMap that supports anything like containsValue(int[]) but that would very easy to implement yourself.
23239956,2,0,1,java.util.HashMap,"However, Java, actually, has a EnumMap (it does implement regular Map interface) which is designed especially for use with enum type keys, and, as said in the documentation, it is likely to be faster than using HashMap."
23239252,2,0,1,java.util.HashMap,So basically you go for HashMap is you would like to introduce Object-Object relations in your code.
23240148,2,1,1,java.util.HashMap,"For a single application, a HashMap is serializable and can be saved to a file then read later."
23240148,2,1,1,java.util.HashMap,"You don't need to save your whole class, just the HashMap."
23240148,2,1,1,java.util.HashMap,Your class can still manage the HashMap.
23240148,2,1,1,java.util.HashMap,HashMap works on key-value pairs.
23240148,2,1,1,java.util.HashMap,"key = ""password"" and value = ""secret"") From what you describe, you have a set of known parameters you want to save, so when you load your HashMap you can lookup the values using the key, it is fast."
23240148,2,1,1,java.util.HashMap,But you can iterate on a HashMap if you needed to.
23244020,1,0,0,java.util.HashMap,"I'm working on HashMap i put two values (7,""value test 1"") (7,""value test 2) According to the specification java API HashMap put the first values is replaced by the second ."
23244150,2,1,3,java.util.HashMap,"Hash collisions (ie., keys with the same hashcode()) are handled correctly by the HashMap."
23244086,1,0,0,java.util.HashMap,"Given suitably correct details within the HashMap, r, in my mind, should return OK or 200?"
23245979,1,0,0,java.util.HashMap,I have Graph represent by Structure HashMap> graf; and i need to  go throught that hashmap and set and  remove some edges.
23248539,1,0,0,java.util.HashMap,HashMap java.util.ConcurrentModificationException.
23249140,1,0,1,java.util.HashMap,"How to create XML in Java, by using XSD and JSON or HashMap of elements/values as input."
23249140,1,0,1,java.util.HashMap,"I have a requirement for dynamically creating a XML, with given input parameters like XSD file and JSON string (if required JSON message can be converted HashMap object)."
23249140,1,0,1,java.util.HashMap,Java program should associate element name present in JSON string/HashMap object with the element name present in XSD and generate XML accordingly.
23255460,2,0,0,java.util.HashMap,"But in general, if you override equals don't forget to override hashcode, too, otherwise you will get terrible performance from Collections such as HashSet or HashMap."
23259045,2,0,0,java.util.HashMap,"If you don't care about the order of iteration over RepIDs (you didn't say), then you can use a HashMap rather than a TreeMap to save a bit of run time."
23304397,2,0,1,java.util.HashMap,You probably want the parameter type to be SortedMap so you don't accidentally pass in something like a plain HashMap for which there is no defined order.
23304397,2,0,1,java.util.HashMap,"If you didn't do that, you'd get a plain HashMap."
23263412,1,0,1,java.util.HashMap,From http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.remove%28java.lang.Object%29 Can see how the Oracle/Sun Java HashMap rehashes it self.
23276678,1,0,7,java.util.HashMap,"I do use a ConcurrentHashMap, but there are not very many HashMap$Node's so that shouldnt be the issue."
23286202,1,0,0,java.util.HashMap,Add new value if key already exists in HashMap.
23289238,2,0,1,java.util.HashMap,"If you don't want to use a HashMap (which is a good solution), you can use two loops."
23289052,2,1,3,java.util.HashMap,"You should use HashMap to store your data: Key=TrainName, Value=TrainObject."
23289052,2,1,3,java.util.HashMap,"Using a HashMap provides both an  easy and efficient way to check/disallow duplicates if(trainMap.contains(trainName){     System.out.println(""Error - train already exists""); }"
23294149,2,0,4,java.util.HashMap,If you take a look at the source code of HashMap.containsKey you'll find the following (taken from here: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.containsKey%28java.lang.Object%29 ) code.
23296361,1,0,1,java.util.HashMap,My java class reads in a 60MB file and produces a HashMap of a HashMap with over 300 million records.
23296629,2,0,5,java.util.HashMap,"You could use a TIntDoubleMap instead of your HashMap<Integer, Double> and a TIntObjectHashMap instead of your HashMap<Integer, …>."
23296629,2,0,5,java.util.HashMap,"Note that this calculation is rough, depends on the platform and implementation, and does not account for the memory used for the HashMap/T*Maps."
23303887,1,0,0,java.util.HashMap,Getting the first value with unknown key in a HashMap.
23303887,1,0,0,java.util.HashMap,I want to get the first value from my HashMap while I do not know the key for the value.
23304465,2,0,0,java.util.HashMap,"It's basically a HashMap that remembers the order in which things were inserted, so you can iterate them in the original order."
23307083,2,0,0,java.util.HashMap,"Either you are looking at a Map.add (Key,Value) then change Set<String> ser = new HashSet<String>(); to Map<String,String> ser = new HashMap<String,String>(); andser.add( (String) arr[0] , (String) arr[1] );toser.put( (String) arr[0] , (String) arr[1] );` else change ser.add( (String) arr[0] , (String) arr[1] ); to ser.add( (String) arr[0]);  ser.add(String) arr[1] );"
23314307,2,0,0,java.util.HashMap,"If someone is asking how to create a Key/Value object similar to a Dictionary in whatever language, they will likely get any of the java.util classes that implement the Map<K, V> interface, for example HashMap, TreeMap."
23314307,2,0,0,java.util.HashMap,"In this case telling someone to use a HashMap is not debatable, because the answer is as vague as the question."
23312809,2,1,4,java.util.HashMap,"If not, use the more general HashMap (which ""...provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets...""), or one of the other Map implementations, depending on your need."
23318656,1,0,2,java.util.HashMap,"Why does getting a missing key from java.util.HashMap[Long,Long] return 0L?"
23324759,1,0,0,java.util.HashMap,"I tried to put in a HashMap, if a shape is moving, boolean true, the rest will be false."
23329377,2,1,0,java.util.HashMap,Basically you can use a HashMap to wrap you LinkedList instances instead of using a LinkedList because it will let you select your items based on a key (the alphabet characters in your case) code.
23338067,2,0,1,java.util.HashMap,Have a loot at TreeMap put method and compare it with HashMap put method.
23338067,2,0,1,java.util.HashMap,TreeMap's version use compareTo method only instead of equals like in HashMap's put.
23338404,1,0,0,java.util.HashMap,Double mapping with HashMap.
23346833,2,1,1,java.util.HashMap,"Second way First, create a HashMap of Colors that contains all the colors you want: code."
23349982,2,0,1,java.util.HashMap,"use HashMap-s instead of ArrayList-s, will make code smaller, faster and a lot easier."
23350905,2,0,2,java.util.HashMap,"Instead reinventing the wheel or marking the methods to throw UnsupportedOperationException, extend from a class that already implements all the methods, like HashMap or LinkedHashMap, or a class that implements Map but doesn't implement it at all, like AbstractMap, and left empty the other methods: code."
23351418,2,0,0,java.util.HashMap,you can use a HashMap to store the result.
23351820,2,0,0,java.util.HashMap,"Use a HashMap<String, Double> in which the key is the category and the value is the total distance for that category."
23352281,1,0,0,java.util.HashMap,Iterating HashMap of HashMap in JSP in a Spring Application.
23352281,1,0,0,java.util.HashMap,I have the following HashMap which I want to iterate over and print the values.
23352362,2,1,1,java.util.HashMap,You can use JSTL to iterate over HashMap of HashMap.
23353625,2,0,0,java.util.HashMap,"If you want to access them by symbolic name instead of index, use a HashMap<String,String>."
23358440,2,1,0,java.util.HashMap,I'm trying to add an array to a HashMap using a method that is only passed in a HashMap key.
23358440,2,1,0,java.util.HashMap,"I take the key, extract an array already in the HashMap, make a clone of it, and then place that clone in the HashMap using the name of the instance as the key."
23362982,2,1,1,java.util.HashMap,"As Richard mentions it, you could also rewrite the switch with an HashMap: code."
23367076,2,0,0,java.util.HashMap,Use a HashMap and then if HashMap contains key you just increase the value associated to it.
23367108,2,0,1,java.util.HashMap,"You can use a combination of a HashMap to store the key/value, HashMap to the key/counter and a TreeMap<Integer, List<Key>> for the sorted list."
23370229,1,0,0,java.util.HashMap,"I know there may be other ways around this but I want to try and continue this way, I'm trying to make a simple list with a string, split as an array, and I'm trying to get an output such as:  [A, B, C, D, E, F, G, H]  I'm using a HashMap with a key to put in the array and then get an array list from it afterwards with the key ""mode"" currently, the output that I get is ""[mode, A, B, C, D, E, F, G, H]"" but I want to omit the key from the result, however I don't want to just do .split(""mode, "")   on the output,  I want to know if there is a way I can alter the original string:  String test = ""mode,A,B,C,D,E,F,G,H"";  so I can get an output as:  [A, B, C, D, E, F, G, H]  and not: [mode, A, B, C, D, E, F, G, H] what I am really trying to do.. but there is the same problem and I want to counteract the problem with regex,  this is basically ideas I got from another person's code - I am confused by the regex pattern here, if someone could explain the ?<= in the start of the pattern, it would help code."
23374987,2,1,0,java.util.HashMap,"May be drawMap(friendsArrayList); method putting data to friendsHashMap with same Id as you put data before on this line friendsHashMap.put(id,friendsArrayList); //Adding data to hash map if key are same then HashMap will override previous value with new one."
23377854,2,1,3,java.util.HashMap,"Create a HashMap as follows, code."
23377511,2,0,1,java.util.HashMap,This is because HashMap allows for null values.
23378619,2,0,0,java.util.HashMap,"From ConcurrentHashMap API: Like Hashtable but unlike HashMap, this class does not allow null to be used as a key or value."
23380394,2,0,1,java.util.HashMap,"If you'll be doing more HashMap actions (get, put) than accessing a sorted list, then you're better off just using a HashMap and sorting the values when you want to prune the collection."
23380394,2,0,1,java.util.HashMap,If that's the case then you're better off just filtering the HashMap based on whether the value meets a condition.
23378927,1,0,1,java.util.HashMap,Does a HashMap use a HashSet to store its keys?
23378927,1,0,1,java.util.HashMap,I'm wondering if a HashMap uses a HashSet to store its keys.
23378927,1,0,1,java.util.HashMap,"I would guess it does, because a HashMap would correspond with a HashSet, while a TreeMap would correspond with a TreeSet."
23378927,1,0,1,java.util.HashMap,"I looked at the source code for the HashMap class, and the method returns an AbstractSet that's implemented by some kind of Iterator."
23378927,1,0,1,java.util.HashMap,Now I'm unsure Could someone explain how the HashMap stores its keys?
23378988,2,0,2,java.util.HashMap,I'm wondering if a HashMap uses a HashSet to store its keys.
23378988,2,0,2,java.util.HashMap,"The opposite (using a Map to store Set elements) is possible, though, and this approach is being used: HashSet is implemented by using a HashMap (with a dummy value for all keys)."
23378988,2,0,2,java.util.HashMap,The set of keys returned by HashMap#keySet is implemented by a private inner class (HashMap.KeySet extends AbstractSet).
23378988,2,0,2,java.util.HashMap,"You can study the source for both class, for example on GrepCode: HashMap and HashSet."
23378988,2,0,2,java.util.HashMap,Could someone explain how the HashMap stores its keys?
23378988,2,0,2,java.util.HashMap,See also   How does Java HashMap store entries internally Hashmap and how this works behind the scene
23379087,2,0,2,java.util.HashMap,Blockquote  HashMap stores keys into buckets.
23379108,2,1,2,java.util.HashMap,You're actually asking two different questions:  Does a HashMap use a HashSet to store its keys?
23379108,2,1,2,java.util.HashMap,Does HashMap.keySet() return a HashSet?
23379108,2,1,2,java.util.HashMap,A HashSet is actually a wrapper around a HashMap; HashSet has the following member variable: code.
23379108,2,1,2,java.util.HashMap,"Now a HashMap stores it's data in an array of Entry objects holding the Key, Value pairs: code."
23380403,2,0,1,java.util.HashMap,HashMap.keySet() is a VIEW of the keys contained in this map.
23380403,2,0,1,java.util.HashMap,The data of the map is stored in Entry[] table of HashMap.
23383213,2,0,0,java.util.HashMap,"As Zoyd mentions in his comment, we also can use HashMap <Integer,Integer> to store the value and number of element pair, or TreeMap<Integer, Integer> to maintain their sorted orders."
23384610,1,0,1,java.util.HashMap,Can I use annotation as a key in a HashMap?
23384610,1,0,1,java.util.HashMap,"I want HashMap<CustomAnnotation, Integer> where Integer value is an index of last used element in a collection that CustomAnnotation has: code."
23384905,2,1,2,java.util.HashMap,You can use Annotation instances as HashMap keys.
23384702,2,0,3,java.util.HashMap,Your map is a raw HashMap.
23384708,2,0,2,java.util.HashMap,"Do this  Map<Integer, Integer> map = new HashMap<>(); (assuming you have Java 7+) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); (assuming you have Java 5+) When no using generics, the result of map.get() is Object which of course cannot be used with the + operator"
23386189,1,0,1,java.util.HashMap,"I done following code to do it,,but not able to store all UserMobile in single HashMap... code."
23387749,1,0,0,java.util.HashMap,"(Not just ""delhi to goa"", it can be ""delhi goa to"") Now, given these two strings, I want to get a HashMap with key value pair as  orgCity -> delhi  destCity -> goa  Here key is the string between %{ and } ."
23388812,2,1,2,java.util.HashMap,"I know I shouldn't do your work for you, but that exercise you propose was so interesting to me that I just couldn't resist: This method receives your two strings and gives you back a Map (ok, just change the return type if you REALLY want a HashMap instead): code."
23389207,1,0,2,java.util.HashMap,"For now I could have fixed the issue simply by making a HashMap, but as I do not know the extended need for the data stored at this point, I want to go the length in trying to do it right."
23392560,2,1,2,java.util.HashMap,You might want to store it in a new HashMap (or ImmutableMap or any other Map).
23395171,1,0,0,java.util.HashMap,"This question: Cassandra CQL3 composite key not written by Hadoop reducer seems to exhibit the kind of code I'm looking for, but it calls context.write with parameters of type HashMap, ByteBuffer and I'm not sure how I'd make context.write accept those params."
23395622,1,0,0,java.util.HashMap,HashMap which only stores last N elements.
23395622,1,0,0,java.util.HashMap,"I´m looking for a Java HashMap implementation, which only stores the last N inserted elements and drops the oldest elements, when it would exceed the limit N by adding more elements."
23398615,1,0,0,java.util.HashMap,How do I get a key from a HashMap by providing the value?
23398868,1,0,0,java.util.HashMap,This was logged using HashMap.toString() I need to convert it back to hashMap.
23399746,2,0,0,java.util.HashMap,"Make sure you are defining double [][] new_a = a and HashMap<Integer,double[][]> Store=new HashMap<Integer,double[][]>()outside of the loop."
23400006,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put(K,%20V)"
23404106,1,0,0,java.util.HashMap,Periodically saving a HashMap read out of a file.
23404106,1,0,0,java.util.HashMap,"), I intend to use a FileWriter to save the HashMap to a file."
23404106,1,0,0,java.util.HashMap,"Idea being, when the server application is first run, it pulls the saved HashMap into a instance for ""working storage""."
23404649,2,1,0,java.util.HashMap,You would have to lock access to the HashMap to avoid corruption.
23404192,2,0,0,java.util.HashMap,One thing you could do is have the autosaving mechanism live in a different thread that wakes up periodically and writes the HashMap using the FileWriter.
23404192,2,0,0,java.util.HashMap,One way you could do this is by creating an inner class that extends Runnable and has an instance variable that points to the HashMap that you want to write.
23404192,2,0,0,java.util.HashMap,One way to fix this would be to use ConcurrentHashMap instead of plain HashMap.
23406393,2,1,2,java.util.HashMap,"HashMap in java is a class which models a map data structure using hash-based implementation, that's why it's called HashMap."
23406458,2,0,0,java.util.HashMap,HashMap with some key value pairs is a data structure in Java.
23409358,1,0,0,java.util.HashMap,"Map: private final Map<SignVector, FakeSign> signs = new HashMap<>()  Equals method form SignVector for @home user code."
23409704,2,1,4,java.util.HashMap,Let's take a look a the underlying implementation of get for an HashMap.
23455910,2,1,0,java.util.HashMap,I've figured out a simpler way to do it: Create a HashMap like: code.
23410737,2,0,0,java.util.HashMap,you need to use the get(key) method of HashMap to get the value that is stored.
23410737,2,0,0,java.util.HashMap,"Each entry is HashMap is stored as a key/value pair using the put(key, value) method."
23410737,2,0,0,java.util.HashMap,You need to make the Hashmap as a class level variable and generate getter method for it and then call the getter method in another class by using the object of the class in which HashMap is stored.
23411604,2,0,0,java.util.HashMap,table.addCell might be throwing error because addCell might not take a HashMap object as an argument.
23411364,2,0,0,java.util.HashMap,"Declare hMap3 as Static, in your MainClass public static HashMap<String,String> hMap3; Create an instance in MainClass: hMap1=new HashMap<String, String>();  Access hMap3 in another package class, using this:  MainClass.hMap3 , or in your case: table.addCell(MainClass.hMap3); Make sure addCell method isn't ""non-static"": static public .. addCell() {}"
23418879,1,0,4,java.util.HashMap,How does a HashMap occupy memory?
23418879,1,0,4,java.util.HashMap,"Anyways, just like an ArrayList would have a contiguous memory allocation, a LinkedList would have a random memory allocation, how does HashMap occupy memory?"
23418879,1,0,4,java.util.HashMap,It's just about how a HashMap fits into the memory.
23419050,2,1,5,java.util.HashMap,"There is an underlying, contiguous array that backs HashMap."
23419050,2,1,5,java.util.HashMap,It would probably be best for you to take a look at the HashMap source for yourself.
23422298,1,0,0,java.util.HashMap,I have the following code in java file in which a HashMap is storing some data and i want it to be displayed as a template in a vm file.
23422298,1,0,0,java.util.HashMap,Why no data is fetched from HashMap into vm file?
23423437,2,1,4,java.util.HashMap,"For example, HashMap calls hashcode an object when it uses the object as a key; e.g."
23423437,2,1,4,java.util.HashMap,"If your object's hashcode changes while it is uses as a key in a HashMap, (etcetera) that is going to break the invariants of the HashMap (etc)."
23423437,2,1,4,java.util.HashMap,"For example, operations like HashMap.get may return the wrong answer  How default implementation of hashcode of Object returns same hashcode ?"
23423437,2,1,4,java.util.HashMap,"There are no callbacks, no listeners, nothing like that to tell you (or the HashMap) that a key's hashcode has changed."
23429631,2,0,0,java.util.HashMap,"The way I usually do this is with an interface, lets call it ConsoleProgram that takes string arguments and a HashMap that couples a string to a Program."
23430889,2,1,0,java.util.HashMap,You can use HashMap/HashTable etc for you own implementation of AttributeSet.
23431760,1,0,5,java.util.HashMap,HashMap's .containsKey() looks like this: code.
23432290,1,0,0,java.util.HashMap,How To Iterate HashMap in FreeMarker?
23433163,1,0,0,java.util.HashMap,(Point3f is an object from the library vecmath) Edit: I changed it to HashMap but now I get NullPointerException.
23438573,2,1,1,java.util.HashMap,In java.util.HashMap loadFactor plays the roles of target and max load simultaneously.
23436286,1,0,4,java.util.HashMap,"After that, sort them by name into a HashMap, and code a method that takes a name and returns an Action from the HashMap."
23447980,2,0,0,java.util.HashMap,A possibly more efficient way for you to go about this is to iterate over HashMap.entrySet().
23447980,2,0,0,java.util.HashMap,"This way, you get both the name and age in one shot without having to check the HashMap again for the age."
23448664,2,1,0,java.util.HashMap,"HashMaps could start sucking if you write a bad hashCode() function, though, so you want to be careful with that, although the implementers of Java's HashMap did do some magic behind the scenes to try to at least partially negate the effect of bad hashCode() implementations."
23448238,1,0,0,java.util.HashMap,Null Pointer exception when trying to return HashMap value in java.
23448238,1,0,0,java.util.HashMap,I'm working on my java project and get a null pointer exception message when trying to return HashMap value.
24338817,2,0,0,java.util.HashMap,Use HashMap to maintain a list of all the observer and its socket.
23452669,2,1,2,java.util.HashMap,"Unlike, say, a HashMap, an ArrayList does not need to use the hashCode() method since the order of the elements in an ArrayList is determined by the order in which they were inserted, and not by hashing."
23462842,2,0,0,java.util.HashMap,"I suppose that you would have to redesign your HashMap system, which I think is great, but it will have to map Strings to Colors."
23464161,2,1,2,java.util.HashMap,You can get this with an ArrayList/HashMap pair (where the map will store the index of objects in the list) if you make list removal unordered.
23464161,2,1,2,java.util.HashMap,"Depending on what object equality testing behavior you want, you maybe could swap out the HashMap for an IdentityHashMap for a little better speed."
23465685,1,0,0,java.util.HashMap,Using HashMap to store ObjectOutputStream to select the destination of the reciever in java server.
23469111,1,0,1,java.util.HashMap,Loading big HashMap from file gives java.lang.OutOfMemoryError(GC overhead limit exceeded).
23469111,1,0,1,java.util.HashMap,"The meaning is that for one string of type X, the file has on average 20-30 lines, each containing this string of type X plus one (different) string of type Y and the double value associated I want to load the file in an in-memory index HashMap < StringOfTypeX, TreeMap < StringOfTypeY, val > > I wrote a Java program using BufferedReader.readLine() in this program, the hashmap is initialized in the constructor using an initCapacity of 2 times the expected number of distinct strings of type X (the expected number of keys) I ran the program using: java -jar XXX.jar -Xms500G -Xmx500G -XX:-UseGCOverheadLimit the program seems to process file lines slower and slower: at first, it processes 2M lines per minute, but with each chunk of 2M lines, it gets slower and slower."
23469368,2,0,2,java.util.HashMap,HashMap and TreeMap uses about 24 extra bytes per entry.
23470928,1,0,0,java.util.HashMap,The processOrderMap is a ArrayList with HashMap Type.
23471451,1,0,1,java.util.HashMap,HashMap change Values Object.
23471498,1,0,0,java.util.HashMap,"Hej, I have a HashMap of the form HashMap<Tuple<String, String>, Integer> where I want to count the appearance of the first String in the tuple and save it as value."
23477356,2,0,2,java.util.HashMap,HashSet is based on HashMap and so it's behaviour is dependant on HashMap.
23477356,2,0,2,java.util.HashMap,HashMap in Java <= 7 using a linked list of keys/elements for the same bucket.
23477369,2,1,2,java.util.HashMap,HashSet internally uses a HashMap with the values being constants the the key being the set elements.
23487272,1,0,3,java.util.HashMap,"In Java 8 for the Really Impatient Horstmann writes:  If multiple threads modify a plain HashMap, they can destroy the   internal structure."
23487333,2,1,7,java.util.HashMap,"I am not exactly sure how much the implementation of HashMap has changed for Java 8, but I suspect that the basics still apply."
23491676,1,0,3,java.util.HashMap,How to load once (when Tomcat starts) some data (HashMap) to Tomcat's cache?
23491676,1,0,3,java.util.HashMap,I'm working on some Java EE application which has to find some data in HashMap.
23491676,1,0,3,java.util.HashMap,The problem is that I want to load this HashMap to Tomcat only once - when Tomcat starts and I don't know how to do this.
23492294,2,1,1,java.util.HashMap,Assuming that you want to load this HashMap only for one web application you can do it when container loads all settings for your app (after it reads web.xml file).
23492294,2,1,1,java.util.HashMap,"In its contextInitialized method create HashMap you are interested in, and add it as attribute to ServletContext."
23491811,2,0,2,java.util.HashMap,I suppose you want to load HashMap actually before when your web application start.
23498030,2,0,0,java.util.HashMap,According to Oracle Java 7 API : implementation of HashMap is not synchronized.
23498030,2,0,0,java.util.HashMap,"You can use Hashtable implementation or declare : private final Map<String, Integer> cnts = Collections.synchronizedMap(new HashMap<String, Integer>());"
23500856,2,0,0,java.util.HashMap,"Create a HashMap to hold Integer,List<helpers> code."
23500856,2,0,0,java.util.HashMap,Load the HashMap based on b values.
23500377,2,0,0,java.util.HashMap,"You should store your column two numbers in a HashMap, where the key is the column two number and the value is the frequency at which you've seen that number."
23507551,2,0,2,java.util.HashMap,"There are fancy ways of doing this directly from the Color class using reflection, but better to create a simple Map such as a HashMap<String, Color>, so that you can associate your Strings with the corresponding Color."
23508826,2,0,0,java.util.HashMap,"For example, I had to implement HashMap as part of a school assignment."
23508826,2,0,0,java.util.HashMap,"Turns out that a test to get a proper bucket had >> instead of <<, turning the HashMap into a LinkedList instead!"
23513180,1,0,1,java.util.HashMap,I'm facing problem only with using a map and I'm using a HashMap.
23516206,2,0,0,java.util.HashMap,You want a HashMap that will hold the current count for each word.
23524178,1,0,0,java.util.HashMap,HashMap to Java Class Object.
23524773,1,0,0,java.util.HashMap,Java Variadic Arguments and HashMap Constructor.
23524773,1,0,0,java.util.HashMap,I want to use a better constructor for HashMap so I wrote one like this: code.
23527163,1,0,0,java.util.HashMap,HashMap in service method of servlet.
23527163,1,0,0,java.util.HashMap,If a HashMap is created under the service method of the servlet than will it be thread safe?
23533659,2,1,2,java.util.HashMap,In that HashMap object is not creating.
23533044,2,0,0,java.util.HashMap,"By using HashMap specifically, I am allowed to have multiple list items"
23538635,2,0,0,java.util.HashMap,"For your JSON data, once you have a class (as above), I'd use GSON (https://code.google.com/p/google-gson/) to convert directly to Objects Then for your comparison, convert either your database or JSON data into a List (something from Collections, or a HashTable/HashMap (quicker for searching)) and use the Collections.contains(Object) (on the List) method and a contains count which you compare against the list's size."
23538665,2,0,0,java.util.HashMap,It is possible to search the values with keys for exemple but you cannot sort HashMap.
23538897,1,0,0,java.util.HashMap,I have a very complex scenario where i need to change the java objects(basically HashMap ) from jquery get Request and get the response and print that in the jsp.
23540722,1,0,0,java.util.HashMap,I have a complex scenario where i need to change the java objects(basically HashMap ) from jquery get Request and get the response and print that in the jsp.
23542238,2,1,2,java.util.HashMap,The simplest way to do this is to use some Pair class (that simply stores two parameters and implements hashCode and equals correctly) as the key of your HashMap.
23542506,2,0,0,java.util.HashMap,A HashMap maps one variable to one other variable.
23546426,1,0,2,java.util.HashMap,Generic HashMap with Lists and putIfAbsent.
23546426,1,0,2,java.util.HashMap,Is there a way of extending the HashMap class by some methods without creating a subclass?
23546733,2,1,2,java.util.HashMap,"Instance of your class will be also HashMap so you don't need to, or even shouldn't add another field just to support getOrAdd method because other inherited and not overridden methods will not be referring to map field but to this instance."
23546605,2,0,1,java.util.HashMap,You can just extend HashMap like this: code.
23548294,1,0,1,java.util.HashMap,My app currently reads in a JSON string from an external datasource and parses it into a HashMap of objects.
23765390,2,1,0,java.util.HashMap,"I ended up with a config table for items called ITEM_CONFIG (ITEM_ID, UI_PROPERTIES) On the UI_Properties I save a JSON string, which is mapped to a String propertie on the DAO model, but as a HashMap<String, Object> on the service model."
23549433,1,0,1,java.util.HashMap,While implementing HashMap: type mismatch when trying to program to interface.
23549433,1,0,1,java.util.HashMap,I am trying to implement my own version of HashMap.
23551227,1,0,0,java.util.HashMap,"i have a chat application in which user's contact's images are downloaded in sdcard and are put in a HashMap (url, localAddress), when i want to load contact list, for any contacts I use a function to find address of contacts' pictures on sdcard, three different state may occur  1- image found on sdcard then return path."
23551227,1,0,0,java.util.HashMap,"2- image don't download before and HashMap  return null, then download it."
23551227,1,0,0,java.util.HashMap,3- HashMap return a path but user deleted image from sdcard then remove key from Hashmap and download again.
23552788,2,1,3,java.util.HashMap,Option 2 : Store the employees in some fast searchable data structure like a HashMap  code.
23552953,1,0,1,java.util.HashMap,How do you update all the values in a HashMap?
23552953,1,0,1,java.util.HashMap,"I am using processing, and I have a HashMap, in which I want to be able to increment all the values by 1."
23552953,1,0,1,java.util.HashMap,"Thus, I want to increment all the values of this HashMap by one, regardless of key, every ""tick"" or frame."
23552953,1,0,1,java.util.HashMap,"Is there a way to increment all Integer Values of a HashMap, or, if not, another way of getting around this issue."
23554514,2,0,0,java.util.HashMap,"with .toMap), you'll be back in HashMap land again, and your sort will be gone."
23554208,1,0,0,java.util.HashMap,"Here is the breakdown of maps HashMap : the outer map represents various data feeds as the keys(ex:NDAQ,CBOE,NYSE,AMEX) HashMap the mid level map represents various tickers as the keys(ex:CSCO,INTC,MSFT..) HashMap: the outer map represents values of various statistical parameters (EX: mean, median, skew,kurtosis) as the keys and it is these Double values  that get updated every minute NOTE: All the keys in above 3 maps are pretty much known in advance (so maps dont grow or resize during runtime-it is only Double value in inner most map that gets updated every minute)"
23568066,2,0,2,java.util.HashMap,"It seems to me that this HashMap structure is being used simply for caching and lookups, and that the hierarchy is not otherwise relevant."
23554240,1,0,0,java.util.HashMap,"So for that, I have used HashMap."
23554240,1,0,0,java.util.HashMap,"As this HashMap have index as references, if any index gets changed in the linkedList nodes, it will get affected in the HashMap."
23554240,1,0,0,java.util.HashMap,Now how should I fetch mo object in O(1) time from the HashMap?
23555029,1,0,2,java.util.HashMap,How does hashCode work with a HashMap in Java.
23556786,2,0,0,java.util.HashMap,this you can use some library (like jackson) to convert d into HashMap
23564424,2,1,7,java.util.HashMap,Notes:  the original maps are modified - if this is undesirable you can create a new HashMap<>() in the merging part.
23563840,2,1,2,java.util.HashMap,This method is supported for   the benefit of hash tables such as those provided by HashMap.
23569871,1,0,1,java.util.HashMap,I just don't understand why it's noticing classes outside my project like java/util/HashMap.
23570706,2,0,0,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
23570706,2,0,0,java.util.HashMap,"So the ordering comes from the implementation of LinkedHashMap and not from extending java.util.AbstractMap<K,V> or java.util.HashMap<K,V>"
23570672,2,0,0,java.util.HashMap,"It also states how it is different from HashMap: ""This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries."""
23572926,2,0,2,java.util.HashMap,"Assuming you're trying to test whether the letters in a can be used to form an anagram of the test strings test and bet: I recommend making a dictionary (HashMap or whatever) of character counts from string a, indexed by character."
23573429,1,0,0,java.util.HashMap,Build XML for a HashMap.
23573429,1,0,0,java.util.HashMap,I'm not an expert at XML and am having trouble building a HashMap.
23573429,1,0,0,java.util.HashMap,"EDIT:  After loading the service wsdl into soapUI and viewing the call generated from there, I noticed that soapUI didn't know how to format the XML for the HashMap either."
23573429,1,0,0,java.util.HashMap,I modified my service to use an ArrayList instead of a HashMap and am able to generate the XML for an ArrayList successfully.
23573429,1,0,0,java.util.HashMap,"This will work for my problem, but if someone knows why I was unable to implement a HashMap, I would be curious to know the answer."
23574194,2,0,0,java.util.HashMap,You should implement hashCode() and equals() methods if you are going to use HashMap or HashSet.
23578194,2,0,0,java.util.HashMap,You can instead go for a HashMap<> and use key-value pairs.
23578194,2,0,0,java.util.HashMap,"Looks much cleaner, in my limited knowledge :) Source: Store an array in HashMap"
23593736,2,0,0,java.util.HashMap,"If you stored a reference to the MethodHandle in a HashMap against the name, you could reuse the for subsequent invocations."
23581481,2,0,0,java.util.HashMap,HashMap).
23581438,1,0,0,java.util.HashMap,When a client requests to chat with another client it looks for that user's username in the HashMap and if the other client agrees to chat then it connects the sockets.
23582611,2,0,1,java.util.HashMap,"A HashMap<Key,Value> would do it."
23582753,1,0,0,java.util.HashMap,"My problem is how to filter collections likeList<HashMap<String,Object>?"
23583348,1,0,0,java.util.HashMap,Create a list of single lists for use in a HashMap.
23583348,1,0,0,java.util.HashMap,"I try to implement a hashmap like HashMap<String,MyBigList> But I can't form my MyBigList."
23583348,1,0,0,java.util.HashMap,The following is the exact HashMap i'm trying to create.
23583946,1,0,0,java.util.HashMap,"Now I want to construct and HashMap of type <Department_Name,ArrayList<Age of emplyees>>."
23583946,1,0,0,java.util.HashMap,"Here the dperamtnet_name is the key and for each key I want list of age of employees I know that using Map<String,ArrayList<Integer>> emp = new HashMap<String,ArrayList<Integer>>() I can construct a multi hashmap but how do I put the age values for each key?"
23591567,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern-- Second, if you really do need to do this yourself, rather than layering your own locking strategy on top of HashMap, you're probably better off using ConcurrentHashMap, which provides support for multiple concurrent writers."
23591279,1,0,0,java.util.HashMap,"What i am doing::  I am getting data using cursor and adding them as Hashmap Object one-by-one to a ArrayList object and printing in log  What is happening::  I am able to move my cursor one by one and put the data into HashMap So there are 5 hashmap objects added to ArryList object  in turn ArrayList has 5 rows but the last entry of hashmap object is replaced in all the rows so  ex::   HashMap has objects 1,2,3,4,5 Now after the last iteration ArrayList has 5,5,5,5,5 instead it should be 1,2,3,4,5  Please check the logcat <-->ArrayListObject<--> has same entry many times even though i have the hashmap object has different entries, how can i resolve this, i am making some mistake in adding values to arraylist, how can i correct myself  mFragSortingHome.java code."
23594080,1,0,1,java.util.HashMap,How to output C++11 unordered_map/unordered_set and Java HashMap/HashSet values by input order?
23594080,1,0,1,java.util.HashMap,"And how to implement in Java(I test in HashSet/HashMap, keys are not ordered too)?"
23602042,1,0,0,java.util.HashMap,Convert HashMap with POJO as value to JSON String.
23606123,2,0,0,java.util.HashMap,I used java.util.HashMap.
23606123,2,0,0,java.util.HashMap,HashMap has an equals() and a hashCode() that are consistent with each other and follow the java.util.Map contract.
23608550,2,0,0,java.util.HashMap,"Replace HashMap<String, Info> information with List<Info> information"
23609880,1,0,0,java.util.HashMap,I want for example to be able to get/print the four integer values from the two HashMaps in the HashMap together in the loop.
23610109,2,1,0,java.util.HashMap,"First, I don't think it is a good idea to have a HashMap as a key in another HashMap."
23610109,2,1,0,java.util.HashMap,"), you would be better off  creating an class just for that and adding that class to a HashMap."
23610109,2,1,0,java.util.HashMap,One way to loop through a HashMap is to loop trhough its entry set.
23610109,2,1,0,java.util.HashMap,"So if h is a HashMap<Integer, Integer>, you loop as: code."
23610109,2,1,0,java.util.HashMap,"So, for a HashMap<HashMap<Integer, Integer>, HashMap<Integer, Integer>> called last code."
23610375,1,0,0,java.util.HashMap,Say I have a HashMap with string as the key and integer as a value code.
23610375,1,0,0,java.util.HashMap,"as their values are greater than 10 I have researched this and all the methods I found change the HashMap into TreeMap or something else, but this is for homework so I cannot change the HashMap"
23611987,2,0,1,java.util.HashMap,"If the map is small and iterating over it is an infrequent operation, one solution would be to just use a HashMap (for lookup speed) and then sort the entries every time you iterate."
23614212,1,0,2,java.util.HashMap,A constant HashMap?
23615147,1,0,1,java.util.HashMap,I've seen people use Map instead of HashMap to declare a HashMap.
23615147,1,0,1,java.util.HashMap,"Map mapName = new HashMap(); Whereas I'd normally use HashMap mapName = new HashMap();; The same for a a HashSet, I've seen Set setName = new HashSet();  used, whereas I'd normally use a HashSet setName = new HashSet() Same for ArrayList (List) and so on."
23615161,2,0,5,java.util.HashMap,HashMap is the name of a class that implements the aforementionned interface.
23615161,2,0,5,java.util.HashMap,"However, HashMap is not the only class to implement the Map interface."
23615161,2,0,5,java.util.HashMap,Java - HashMap vs Map objects http://docs.oracle.com/javase/7/docs/api/java/util/Map.html
23615194,2,0,0,java.util.HashMap,HashMap is an implementation of that interface.
23615228,2,0,3,java.util.HashMap,"As @AntonH mentioned, Map is the interface and HashMap is a concrete implementation of that interface."
23615228,2,0,3,java.util.HashMap,"This applies not only to alternative implementations in the core library (HashMap vs TreeMap, for example); but to other custom implementations too (someone might write a ListeningMap which has hooks to be notified when an entry is added, for example)."
23615228,2,0,3,java.util.HashMap,"If you wrote a method to accept a HashMap argument, then people could only ever pass it HashMaps."
23615228,2,0,3,java.util.HashMap,"So unless you really, specifically need for the value to be a HashMap (which is almost never the case), declaring your types as the broadest possible interface gives a lot of flexibility."
23616085,1,0,0,java.util.HashMap,"I started with a HashMap<String, int> In the first line of this sample code I created an ArrayList<String> with the keySet of the Hashmap."
23616085,1,0,0,java.util.HashMap,Then I attempted to create an ArrayList<Integer> with the entrySet of the same HashMap.
23622092,2,0,0,java.util.HashMap,I recommend you use a HashMap to link customer ids to names.
23622255,1,0,1,java.util.HashMap,"I've been trying to wrap my head around how data storage really works on app engine...  can i just continue to use a static HashMap<String, String> to store all the data?"
23627937,2,1,4,java.util.HashMap,Instead of Vector use ArrayList; instead of Hashtable use HashMap.
23627937,2,1,4,java.util.HashMap,"One difference to be aware of is that Vector and Hashtable are synchronized, while ArrayList and HashMap are not."
23627937,2,1,4,java.util.HashMap,"Most of the time you don't need synchronization; if you do, then you must take care to synchronize your ArrayList, and if you need a map, use ConcurrentHashMap instead of plain HashMap."
23627956,2,0,1,java.util.HashMap,"If you look at the online javadoc for Vector and Hashtable you'll see that they were the original implementation of ArrayList and HashMap, until the Collections framework came along, at which point they were retrofitted to implement interfaces from the Collections framework; this way, old classes that depended on those classes being there would not break."
23628017,2,0,0,java.util.HashMap,You should use HashMap instead and Collections.synchonizedMap() instead.
23628203,2,0,0,java.util.HashMap,No such public method in HashMap.
23628203,2,0,0,java.util.HashMap,You could use debug mode in your IDE to watch HashMap.table.
23629233,1,0,1,java.util.HashMap,If concatenation of strings is used still new string would be created   If new class StringTuple is used still it would need to be created  I can use Guava Cache or HashMap but memory consumption and performance should be optimized.
23630854,1,0,1,java.util.HashMap,In an application we are using an LRU(Least Recently Used) cache(Concurrent HashMap Implementation) with Max-size constrain.
23631023,2,0,0,java.util.HashMap,For PHP associative array you should use Map type in Java (HashMap or TreeMap).
23632227,1,0,0,java.util.HashMap,Iterating and Printing content of a HashMap with nested array in a jsp.
23632227,1,0,0,java.util.HashMap,"I have a HashMap created in the following manner, code."
23632227,1,0,0,java.util.HashMap,How can I print the content in the HashMap with the nested Array?
23692229,2,1,0,java.util.HashMap,"I have managed to get the solution thanks to StanislavL and Shaded answers so the complete solution is illustrated below, The HashMap is defined as following, code."
23632270,1,0,0,java.util.HashMap,I found that Time complexity for Java HashMap resizing is O(n).
23632270,1,0,0,java.util.HashMap,Case 1: HashMap m = new HashMap() (did it four times)  : code.
23632270,1,0,0,java.util.HashMap,Case 2: HashMap m = new HashMap(67108864) : code.
23632270,1,0,0,java.util.HashMap,EDIT : I just add this add argument of my jvm :  -Xms14g -Xmx17g -verbose:gc Case 1: HashMap m = new HashMap()  : code.
23632270,1,0,0,java.util.HashMap,Case 2: HashMap m = new HashMap(67108864) : code.
23632529,1,0,0,java.util.HashMap,"I have defined  final HashMap<String, String> map = new HashMap<String, String>();   map.put(key, myURL.toString()); How could I loop through the hashmap to check if a duplicate exist?"
23632579,2,0,1,java.util.HashMap,"Check the class javadocs, you'll see that there are two methods contains key and containsvalue http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html"
23633991,1,0,0,java.util.HashMap,Cannot cast HashMap type to object which is HashMap itself and has HashMap object inside.
23633991,1,0,0,java.util.HashMap,Now I modified the method to pass HashMap back to (method in) controller: showHTMLResponse method: code.
23633991,1,0,0,java.util.HashMap,"Problem: This line:   dslrErrors = (HashMap<>)dslrHashMap.get(""dslrErrors"");  and this: @ModelAttribute(""dslrErrors"") HashMap<?> dslrErrors How to properly cast HashMap element/object and assign to Model so the View would be able to access it?"
23635137,2,1,1,java.util.HashMap,"The following line does not compile, due to HashMap taking two generic parameters (as said by Tom G in a comment) code."
23639889,2,0,4,java.util.HashMap,"If we wish to have a (sparse) mapping of integers to objects, we'd use something along the lines of HashMap<Integer, Object>."
23644786,1,0,0,java.util.HashMap,"It returns proper HashMap or List In that ResultMap, I have an element named 'service_id' which should replace '_id' in mongo."
23647580,1,0,1,java.util.HashMap,HashMap and the peek in the sort phase or the TreeMap approach
23647732,2,1,1,java.util.HashMap,"If it's a batch job, a TreeMap won't use extra memory like HashMap."
23655021,2,0,1,java.util.HashMap,"//Intialize outside the loops Map<String, Integer> counter = new HashMap<String, Integer>();  //Inside loop Integer val = counter.get(word); if(val == null){     counter.put(word, 1); } else {     counter.put(word, ++val); } Print the values again using for-each loop and keySet for(String key : counter.keySet()){     System.out.println(key + "" : "" + counter.get(key)); }  However in step 3 you need to consider the case-sensitivity of the key."
23658987,2,0,0,java.util.HashMap,"like one hashmap Map<String, Integer> words = new HashMap<String, Integer>(); and then you can use this map by following way code."
23659433,1,0,0,java.util.HashMap,HashMap in Java.
23660682,1,0,0,java.util.HashMap,Iterate values of HashMap only once.
23660682,1,0,0,java.util.HashMap,I've a HashMap with several entries.
23660682,1,0,0,java.util.HashMap,I want to iterate over all the values of HashMap.
23660682,1,0,0,java.util.HashMap,I want to modify the HashMap while iterating (adding and removing entries).
23661758,1,0,0,java.util.HashMap,HashMap - Doesnot get excepted output.
23662080,2,1,1,java.util.HashMap,The value in your mainMap is a reference to a HashMap object.
25713707,2,0,0,java.util.HashMap,"If you are confused, this may help: This line will create a HashMap object, and assigned a subMap reference to it."
25713707,2,0,0,java.util.HashMap,"HashMap  subMap  = new HashMap(); subMap-------->[hashObject] This line will add ""one"" as key, and subMap ""reference"" as value     mainMap.put(""one"", subMap); so,      mainMap.put(""one"", subMap---------------> [hashObject] Then you prints the value assign to key ""one"" i.e. {21=122, 13=124, 14=152, 11=12} Now, you are putting values to the same HashMap object [hashObject] code."
25713707,2,0,0,java.util.HashMap,"which is the same HashMap object, no new object is created and both ""one"" and ""two"" has value, a reference referring to the same object."
23672518,2,0,0,java.util.HashMap,"So if you're restricted to native Java, you might want to take a look at the CharacterName class and see if you can get something into a HashMap<String, Character>."
23673719,1,0,0,java.util.HashMap,I looked at big classloader dump and I see that the biggest retained size in it has HashMap resourceEntries.
23676508,2,0,0,java.util.HashMap,"You could use HashMap<String, Integer> to store words and frequencies where key is a word and value is frequency of the word."
23679608,1,0,0,java.util.HashMap,class uses a non-entity [class java.lang.Boolean] in HashMap?
23680040,2,0,0,java.util.HashMap,"By default, JYaml converts a sequence to java.util.ArrayList and a mapping to java.util.HashMap."
23687547,2,0,1,java.util.HashMap,"the straightforward solution is to read line by line from your file and split by ;, then you got each number as string, finally put them into a HashMap<String, Integer>, if the key exists, just +1 the value."
23687650,2,0,0,java.util.HashMap,"Here is an example: Map<String, Integer> counts = new HashMap<String, Integer>();  Split each line using String.split() (specifically line.split("";"")."
23692801,2,0,0,java.util.HashMap,Two tips here:   You really didn't need a HashMap for the Student class.
23692801,2,0,0,java.util.HashMap,"HashMap is used whenever you want to store several values of the same kind, but with different indicators, so you can find one value easily."
23695884,2,0,1,java.util.HashMap,HashMap is not thread-safe by default.
23695919,2,0,0,java.util.HashMap,"Check this code, if you have used normal HashMap, that would give you an exception: code."
23696907,2,0,0,java.util.HashMap,Implemented using the Split and HashMap.
23697049,1,0,2,java.util.HashMap,Calculate mean of HashMap values after insertion.
23697049,1,0,2,java.util.HashMap,I want to efficiently calculate two means of values of a HashMap each time a new key/value pair is inserted.
23697049,1,0,2,java.util.HashMap,"Suppose we currently have this HashMap<Double, Double>: code."
23700466,1,0,1,java.util.HashMap,There is a module engine that will create modules at the start of the app's instance and stores these modules in a HashMap where [key=name; value=Module].
23701517,2,0,0,java.util.HashMap,This uses the toString() method of the HashMap which build one large string in memory for the whole output.
23703328,1,0,0,java.util.HashMap,It doesn't compile; I need to import java.util.HashMap;.
23703328,1,0,0,java.util.HashMap,"It's exactly the same—except with String instead of HashMap—so it shouldn't compile, right?"
23703328,1,0,0,java.util.HashMap,"The ""obvious"" answer is because String is used far more often than HashMap, but then shouldn't ArrayList be ""implicitly imported""?"
23703341,2,1,6,java.util.HashMap,The obvious answer is because String is used far more often than HashMap.
23703342,2,0,3,java.util.HashMap,"However, ArrayList and HashMap are in the java.util package and, as you already know, need to be imported (or they could be fully qualified) if used."
23706568,2,0,1,java.util.HashMap,"That said, I am fairly certain that there are some values that would be problematic with a.equals(b) being true and a.hashCode() == b.hashCode() being false that may still occur at edge conditions for the proper bit patterns - this would make some things (like HashSet and HashMap) 'unhappy' (and would likely make a good question somewhere."
23711068,2,0,0,java.util.HashMap,"In your Operation class:  change the ArrayList<Produit> produits ... to Map<Long,Produit> = new HashMap<>() (Also i would recommand you making it static, to ensure the you keep the same list across the board) Add a private static Long idCounter=0L  Then when you Add a new Produit, do: code."
23711963,1,0,1,java.util.HashMap,"I have a HashMap where the keys are the TextView objects in the layout, so I am going to go through them and update their corresponding EditText objects, using the corresponding values in the HashMap."
23715264,1,0,0,java.util.HashMap,"Consider the iteration below: requestScope.scriptdataset is of type  List<HashMap<String, List<HashMap<String, Object>>>> code."
23715264,1,0,0,java.util.HashMap,"May 17, 2014 8:51:16 PM org.apache.catalina.core.ApplicationDispatcher   invoke SEVERE: Servlet.service() for servlet jsp threw exception   javax.el.PropertyNotFoundException: Property 'ChildName' not found on   type java.util.HashMap$Entry  at   javax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:266)     at   javax.el.BeanELResolver$BeanProperties.access$300(BeanELResolver.java:243)     at javax.el.BeanELResolver.property(BeanELResolver.java:353)    at   javax.el.BeanELResolver.getValue(BeanELResolver.java:97)  at   org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:104)     at org.apache.el.parser.AstValue.getValue(AstValue.java:183)    at   org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)     at   org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:967)     at   org.apache.jsp.WEB_002dINF.views.menudetails_jsp._jspx_meth_c_005fout_005f0(menudetails_jsp.java:221)     at   org.apache.jsp.WEB_002dINF.views.menudetails_jsp._jspx_meth_c_005fforEach_005f2(menudetails_jsp.java:190)     at   org.apache.jsp.WEB_002dINF.views.menudetails_jsp._jspx_meth_c_005fforEach_005f1(menudetails_jsp.java:150)     at   org.apache.jsp.WEB_002dINF.views.menudetails_jsp._jspx_meth_c_005fforEach_005f0(menudetails_jsp.java:110)     at   org.apache.jsp.WEB_002dINF.views.menudetails_jsp._jspService(menudetails_jsp.java:72)     at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at   org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)     at   org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:390)     at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at   org.apache.catalina.core.ApplicationFilterChain.internalDo  In the code shown above if change   <c:out value=""${record['ChildName']}""/> to <c:out value=""${record}""/> It is displaying all data of the inner list which assures me that the iteration is okay but how should I get the values of the inner hashmap by key."
23715681,1,0,1,java.util.HashMap,"For example, the HashMap has four constructors."
23715731,1,0,0,java.util.HashMap,and when i look into a eclipselink sources i find HashMap with Class as a key: org.eclipse.persistence.internal.sessions.AbstactSession.getDescriptor(Class): code.
23715731,1,0,0,java.util.HashMap,And i find that identityHash of class in HashMap and Todo.class is a different.
23715731,1,0,0,java.util.HashMap,UPDATE: find that classes in descriptors HashMap have a link on org.springframework.instrument.classloading.SimpleInstrumentableClassLoader@14bb2297 but my Todo object have another one: sun.misc.Launcher$AppClassLoader@58644d46
23716186,2,1,1,java.util.HashMap,Also you should read the Javadoc of both classes to have an overview of the availables methods for both classes:  HashMap ArrayList
23715937,1,0,0,java.util.HashMap,"I want to add another user in registration JSP file to my HashMap which is created in my homepage, but it seems the another HashMap is being created when I'm trying to register user."
23715937,1,0,0,java.util.HashMap,How to access the HashMap from homepage JSP file in another?
23715991,2,0,0,java.util.HashMap,Use ConcurrentHashMap instead of HashMap because it's in Application scope and that can be accessed simultaneously by multiple threads at a time and it results in ConcurrentModificationException.
23716877,2,1,5,java.util.HashMap,"As stated by @Slanec, Java 8 made some changes to HashMap that reduced the performance drop for heavy collisions to O(lg n) instead of O(n) for Comparable keys, so there was no longer a need for alternative String hashing."
23717505,2,1,3,java.util.HashMap,"Note that if you had wanted the Map to iterate in order by age, you can replace HashMap with TreeMap above, with the realization that your insertions and accesses will be O(log n) instead of O(1)."
23718474,1,0,0,java.util.HashMap,JSP/JSTL converting HashMap returned by JavaBean to String.
23718474,1,0,0,java.util.HashMap,I am no expert in JSP technology and looking for some help here to access HashMap from bean.
23718474,1,0,0,java.util.HashMap,"Not sure what I am missing, but any pointers would be appreciated gr8ly I am sure I am returning HashMap from my class, following is my main method, which works as expected code."
23723815,2,0,3,java.util.HashMap,"If you do need the order to be random, then you can run Fisher--Yates where, instead of using an array, you use a HashMap that stores only those mappings where the key and the value are distinct."
23720620,1,0,0,java.util.HashMap,the getA method simply stores all the unique data into HashMap and it accomplishes its job.
23720764,2,1,1,java.util.HashMap,"I guess, good possibility is to store data from HashMap into database (or file) to be persistent and to achieve your goal of running second method in 2 hours later."
23720764,2,1,1,java.util.HashMap,"But, if you do not want to use persistent data storing and you also do not want to close your app and backup your data in this way, there are other possibilities to make this HashMap to be  visible throughout your application (maybe visibility between classes), appropriate method to do it is to set it as static and public (or protected)."
23720764,2,1,1,java.util.HashMap,Second possibility to avoid this approach is to use Singleton deign pattern with using this HashMap as its attribute.
23722011,1,0,2,java.util.HashMap,"However, with a HashMap I know that in constant time I can simply use the key as a String and return any non-null object, making this operation faster."
23722011,1,0,2,java.util.HashMap,"However, I am not keen on filling a HashMap where the value is completely arbitrary."
23722033,2,1,4,java.util.HashMap,"However, I am not keen on filling a HashMap where the value is completely arbitrary  You don't have to: Java provides a HashSet<T> class, which is very much like a HashMap without the value part."
23723455,2,0,1,java.util.HashMap,"For example, you could use a HashMap<Integer, Book> to allow rapid look-up by Id."
23724712,2,0,0,java.util.HashMap,"If MsgID is unique, then it would be useful to use a HashMap with a key,value pair of (MsgID,CanTrace) Then you would be able to access the dataByte using -  (CanTrace)(map.get(MsgID)).dataByte"
23735853,2,0,0,java.util.HashMap,"Simple the HashMap's toString method prints the value excatly like your json but without the double-quotes("")."
23742663,1,0,0,java.util.HashMap,"I want to execute map.put(""Hello"",""All"") on each HashMap in nestedMap."
23747825,2,0,1,java.util.HashMap,This is because your killable HashMap does not contain the name of the damaged player.
23745399,1,0,0,java.util.HashMap,"From a server perspective, when should I excatly use Redis instead of a DS like HashMap or ConcurrentHashMaps."
23747396,1,0,0,java.util.HashMap,Custom class does not work as HashMap key.
23748254,1,0,1,java.util.HashMap,I have a HashMap I'd like to persist and have fast access to.
23750109,1,0,0,java.util.HashMap,"here is my code<%             out.println(""<input type='textarea'>"");             String initial = ""netbeans,eclipse,maven,ant,notepad,gedit"";             //HashMap<String, Integer> cache = new HashMap<String, Integer>();             HashMap<Integer, String> result = new HashMap<Integer, String>();             result.put(2, ""maven"");             result.put(0, ""netbeans"");             result.put(1, ""eclipse"");             result.put(4, ""notepad"");             result.put(3, ""ant"");             result.put(5, ""gedit"");             Map<Integer, String> treeMap = new TreeMap<Integer, String>(result);             out.println(treeMap);         %>  This is my demo.jsp page.Thanks for your help."
23750250,1,0,0,java.util.HashMap,"I am retrieving a HashMap from a servlet request with some arrays, their names would be Items1, Items2, ItemsN."
23750250,1,0,0,java.util.HashMap,"I'll never know the HashMap size exactly, so I want to create variables with <c:set/> tag iterating a <c:forEach/> loop because I don't want to create them manually like this: code."
23788786,2,0,0,java.util.HashMap,I'll never know the HashMap size exactly.
23750637,1,0,0,java.util.HashMap,"I've used HashMap<String, String> before, but it removes duplicate."
24078733,2,0,0,java.util.HashMap,I managed to solve this problem by using HashMap instead.
24078733,2,0,0,java.util.HashMap,"Since HashMap stores unique key-value, this is useful."
23757961,2,0,1,java.util.HashMap,You can do this in many other ways but I do this way  Get data from Databases Convert it to HashMap Create a JaxB detail class matching your schema Create a constructor in the JaxB class which accepts the HashMap and assign the data to the variables in JaxB Convert JaxB object to XML/JSON by Marshaling Write to a file if you want  If your new to Jax-B view this tutorial here!
23761677,1,0,1,java.util.HashMap,Mechanism of Java HashMap.
23761677,1,0,1,java.util.HashMap,"I guess Java's HashMap is a hashtable, therefore I'm wondering what mechanism does HashMap use (chaining or probing)?"
23761677,1,0,1,java.util.HashMap,"I need to implement simplest HashMap with get, put, remove."
23762213,2,1,1,java.util.HashMap,1: before java 1.8 HashMap uses separate chaining with linked lists to resolve collisions.
30593635,2,0,0,java.util.HashMap,HashMap works on the principle of Hashing.
23762889,2,0,0,java.util.HashMap,HashMap uses keys to find elements.
23762889,2,0,0,java.util.HashMap,"For example if your key is ""a"" and your value to enter is ""ILOVEJAVA"" java defines the hashCode 97 with using your key ""a"" and enters the element in HashMap with index 97."
23762889,2,0,0,java.util.HashMap,So you need to override natural hashCode() method and write a new one for your new unique object to be a kay for an HashMap.
25785577,2,0,0,java.util.HashMap,We know  HashMap stores key-value pair in Map.Entry (we all know) HashMap works on hashing algorithm and uses hashCode() and equals() method in put() and get() methods.
25785577,2,0,0,java.util.HashMap,"(even we know this) When we call put method by passing key-value pair, HashMap uses Key **hashCode()** with hashing to **find out the index** to store the key-value pair."
23762890,2,0,1,java.util.HashMap,"The problem there is T. You are adding a constraint to your method saying that T should extends HashMap<?, M>."
23762890,2,0,1,java.util.HashMap,"Long story short, you can use a Class<HashMap> to build a new instance, not bounded to any type."
23772102,1,0,2,java.util.HashMap,"This can be easily implemented if we keep a HashMap with the cache entries by (key,value) and a separate list that contains the elements' key and time of use."
28435220,2,0,0,java.util.HashMap,In order to avoid this i'm maintaining HashMap>.
23772103,2,1,6,java.util.HashMap,We need to be able to update the items' last access time from the HashMap without searching.
23772103,2,1,6,java.util.HashMap,"A HashMap with (Key,Pointer) pairs and a doubly linked list which will work as the priority queue for deletion and store the Values."
23772103,2,1,6,java.util.HashMap,"From the HashMap, we can point to an element in the doubly linked list and update its' retrieval time."
23772103,2,1,6,java.util.HashMap,"Because we go directly from the HashMap to the item in the list, our time complexity remains at O(1) For example, our doubly linked list can look like: code."
23772103,2,1,6,java.util.HashMap,"The entries' values will be stored in the list and when we we query the HashMap, we will get a pointer to the list."
23772103,2,1,6,java.util.HashMap,"On put(key,value), if the cache is full, we need to remove the item at the left-most side of the list from both the list and the HashMap."
23779163,1,0,0,java.util.HashMap,potential resource leak (unassigned Closeable) with a HashMap.
23779163,1,0,0,java.util.HashMap,I have one static HashMap for my entire system which contains some object's references; let's call it myHash.
23780310,1,0,0,java.util.HashMap,hashCode() method using HashMap.
23780310,1,0,0,java.util.HashMap,"Do I have to override hashCode() method, if I'm going to customize HashMap?"
23780378,2,1,4,java.util.HashMap,You have to override both hashCode() and equals() of the class A if you're going to use A as key in HashMap and need another form of equality than reference equality.
23782604,1,0,0,java.util.HashMap,I want to reproduce one scenario in which there are two threads accessing a shared HashMap.
23783494,2,0,0,java.util.HashMap,"If you just need a CocurrentModificationException to be thrown, you could implement your own Map implementation (HackedMap) to remove items from the HashMap when the HashMap tries to copy values from your HackedMap"
23782859,1,0,0,java.util.HashMap,"(Unsynchronized ArrayList and HashMap are the standard implementations in Java, except if synchronization is really needed.)"
23782859,1,0,0,java.util.HashMap,I'm asking for two reasons:  I would prefer to use the standard implementations ArrayList and HashMap like anywhere else.
23784808,2,0,0,java.util.HashMap,"Aye, parse the html and add the pairs to your map that might look like: HashMap<string,string> mymap = new HashMap<string,string>(); Adding pair:  mymap.put(""firstname"",thefirstname); mymap.put(""lastname"",thelastname);"
23786672,2,0,0,java.util.HashMap,"But before all you have to change method signature to public static void LoadAllHashmapWords(List<HashMap<String,Integer>> m) otherwise you would have to use a cast."
23790423,1,0,1,java.util.HashMap,String Vs Stringbuffer as HashMap key.
23790480,2,0,2,java.util.HashMap,"The way that Map works (specifically HashMap) is that it utilizes an object's hashcode, not the contents of the class."
23790485,2,1,3,java.util.HashMap,StringBuilder/Buffer is also mutable which is generally not a good idea to use as a key for a HashMap since storing the value under it can cause the value to be inaccessible after modification.
23790580,2,0,0,java.util.HashMap,"HashMap only allows unique keys, if it is String, it invokes the default equals() method to compare string equality, the two strings you provided are equal, so the second put() will keep the same key and overwrite the value The two StringBuilder instances are objects, to compare those two instance are meaningfully equal, you have to override hashCode() and equals() method, or they will compare the object references, it will be treated equal only those two objects refer to the same address in heap"
23792145,2,1,2,java.util.HashMap,Please test if you can get all 5 entries that you have already put into the HashMap.
23793468,2,0,2,java.util.HashMap,Simply use HashMap that also use overridden equals() and hashcode() method for comparing.
23801867,2,0,1,java.util.HashMap,"The HashMap is unordered, therefore you can't get the first 100 pairs."
23802029,2,1,1,java.util.HashMap,"Since HashMap doesn't store the elements in order, the first 100 elements you try to get using the keySet() may not be actually be the first 100 inserted."
23807401,2,0,0,java.util.HashMap,"In any case, if you are indeed using json-simple, as seems to be the case, then JSONObject is a subclass of HashMap and JSONArray a subclass of ArrayList."
23807388,1,0,2,java.util.HashMap,I am looking for the most optimized solution there is since my keys are very similar though unique for a specific value and I am not sure if using a generic Map implementation like HashMap is efficient enough to handle this case.
23807388,1,0,2,java.util.HashMap,In case there is no optimized way I could always use a HashMap with replicated values for each group of keys which I would like to avoid.
23807675,2,1,5,java.util.HashMap,"HashMap is actually what you need, and the issue is that you misunderstand what it does."
23807675,2,1,5,java.util.HashMap,In case there is no optimized way I could always use a HashMap with replicated values for each group of keys which I would like to avoid.
23807675,2,1,5,java.util.HashMap,HashMap does not store a copy of the value for each key mapping to that value.
23807675,2,1,5,java.util.HashMap,HashMap stores a reference to the Java object.
23807675,2,1,5,java.util.HashMap,"A HashMap<Integer, BigExpensiveObject> where every key is mapped to the same BigExpensiveObject takes exactly the same amount of memory as a HashMap<Integer, Integer> where every key is mapped to the same Integer."
23807601,1,0,12,java.util.HashMap,"This is obviously not thread-safe as if one thread comes when someMap is null, goes on to initialize the field to new HashMap and while its still loading the data in the map, another thread does a getValue and doesn't get the data when one might have existed."
23807722,2,1,19,java.util.HashMap,As soon as you complete the line someMap = new HashMap... then someMap is no longer null.
23808973,1,0,9,java.util.HashMap,How to remove an element of a HashMap whilst streaming (lambda).
23809129,1,0,0,java.util.HashMap,What are the not thread-Safe cases when using HashMap in Java?
23809129,1,0,0,java.util.HashMap,Can you give some unsafe cases for the HashMap.
23811484,2,0,0,java.util.HashMap,"This means you will no longer be able to retrieve it from the HashMap that has had the prior state when it was put, and it effectively disappears from the prior HashMap."
23811484,2,0,0,java.util.HashMap,Whenever you update state you should put it in the HashMap relevant for the new state.
23816525,1,0,2,java.util.HashMap,But I need to map the HashMap to attributes in xml like: code.
23817165,2,0,3,java.util.HashMap,"As Luiggi Mendoza said in comments, it's HashMap constructor if you need a prof for your teacher code."
23817269,1,0,4,java.util.HashMap,"HappyDay class will be stored as a key in HashMap, I override hashCode() and equals() methods, and add System.out.println(""invoking hashCode()"" + this.happyHour); and System.out.println(""invoking equals()""); to check whether the method is invoked or not."
23817269,1,0,4,java.util.HashMap,"The Main class is to put two HappyDay instances into HashMap, after insertion(put() method), I invoke hm.containsKey(hd2), as I quoted from JavaDoc, it should call hashCode() first and then call equals(), but the output is code."
23817397,2,0,4,java.util.HashMap,The source code for HashMap tells what's going on.
23817358,1,0,0,java.util.HashMap,An OrderlineBean contains the attributes quantity (Integer) and article (ArticleBean) A Cart has the attribute orderlines of type HashMap() The following part of the jsp results in a correct rendered form.
23824684,1,0,0,java.util.HashMap,"the problem is i want to make the ResponseJson class to be dynamic and the data attribute to be unique (sometimes i need ArrayList<Something> other times HashMap<String, String>) works for converting my JSON result."
23828721,2,1,0,java.util.HashMap,The iterator that is return for Multimap.values() is a proxy(composite iterator) for HashMap and ArrayList  As a quick hacky ugly fix you can just shyncronize on that multimap.
23827599,1,0,1,java.util.HashMap,How to Set a HashMap from jsp to Action.
23827599,1,0,1,java.util.HashMap,I have a HashMap in my Action class: code.
23827723,2,0,1,java.util.HashMap,Trying to set values in a HashMap in a JSP file is a very bad idea.
23827723,2,0,1,java.util.HashMap,You can post the data to the server side (All input values from JSP) and then get the values from request to store in a HashMap collection as per your requirement would be a better option.
23828358,1,0,1,java.util.HashMap,The order of elements in the HashMap Java.
23828374,2,0,3,java.util.HashMap,Java HashMap doesn't keep any order.
23828401,2,0,0,java.util.HashMap,"From HashMap's javadoc:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
23828425,1,0,7,java.util.HashMap,Is there a HashMap implementation in Java that produces no garbage?
23828425,1,0,7,java.util.HashMap,"It came to my attention that java.util.HashMap produces garbage for the GC when used on my high-performance system, which basically is a selector reading from the network."
23828425,1,0,7,java.util.HashMap,"Is there an alternative to java.util.HashMap (i.e. does not even need to implement java.util.Map, in other words, it can have its own API) that I can use that will leave no garbage behind?"
23829047,2,1,1,java.util.HashMap,In the case of a java.util.HashMap the culprit is: code.
23828628,2,0,8,java.util.HashMap,"For example, their HashMap doesn't create the Entry objects until they really need to."
23829236,1,0,1,java.util.HashMap,MyBatis parameter from HashMap.
23833656,1,0,4,java.util.HashMap,"When starting up my application, I read them and put them all into a HashMap, taking the property name as key to find it easier later."
23838352,1,0,0,java.util.HashMap,Essentially all it is is a HashMap that stores the teams by name.
23838352,1,0,0,java.util.HashMap,"Problem: I have a function in TeamManager, ""getTeam(String teamName)"" which returns a reference to a Team object in the HashMap."
23838352,1,0,0,java.util.HashMap,"• I could implement a periodic write to the persistence layer, but this is a bandaid fix... • I could get rid of the HashMap entirely from TeamManager and make it only reference what is in the persistence layer, but this adds overhead... • I could try to move all setters for accessing team data to TeamManager in order to control when things are updated where, but this would touch too many classes and take too much time..."
23841142,1,0,1,java.util.HashMap,What is the difference between two approaches to iterate a HashMap.
23841142,1,0,1,java.util.HashMap,Please explain what is the difference between the approaches to traverse a HashMap: code.
23842117,1,0,0,java.util.HashMap,Searching String Array item in a nested HashMap.
23842117,1,0,0,java.util.HashMap,"I have a nested HashMap (outer_map), which has another HashMap inside of it as a value (inner_map), such implemented as code."
23849239,1,0,0,java.util.HashMap,Access a HashMap from a separate jar.
23849239,1,0,0,java.util.HashMap,"So I have this code in JarFile1.jar: public static HashMap<String, Double[]> myHashMap = new HashMap<String, Double[]>(); How would I access that variable in a separate JarFile2.jar using import?"
23853691,1,0,1,java.util.HashMap,Safe access to multithreaded HashMap Java.
23853691,1,0,1,java.util.HashMap,I have a loop that runs every few seconds which has access to the HashMap and adds the elements to an array in the order of values (it actually does quite a bit more but that is irrelevant).
23853918,2,1,3,java.util.HashMap,Change the Map to a HashMap and control the concurrency yourself (write a wrapper class).
23855878,1,0,0,java.util.HashMap,How to print an HashMap in Swing?
23855878,1,0,0,java.util.HashMap,"I'm trying to build a program that gets inputs from the user by JOptionPane.showInputDialog() and store it in an HashMap<String, Integer>."
23855878,1,0,0,java.util.HashMap,But the problem is that i want to print all the HashMap keys and values in a swing component (JList or JTable or something else) but i don't know wich is better and simple to use.
23855878,1,0,0,java.util.HashMap,I just saw that this error appears just when i print the HashMap with the input given from JOptionPane.showInputDialog().
23855878,1,0,0,java.util.HashMap,If i set the HashMap key and values inside the code it works perfectly.
23859223,2,0,0,java.util.HashMap,HashMap is of generic type.
23859223,2,0,0,java.util.HashMap,But if you want to specify the type of Key & values in HashMap you can specify it by writing class name.
23859223,2,0,0,java.util.HashMap,"So you should write something like this HashMap map=new HashMap(); map.put(""string1"",new Test());"
23859686,1,0,0,java.util.HashMap,HashMap/TreeMap sorting my keys.
23859686,1,0,0,java.util.HashMap,"Using a HashMap, I am storing the date and the pollenIndex, which is how high pollen levels are that day on a scale of 0.0 - 10.0. code."
23859686,1,0,0,java.util.HashMap,One issue is that HashMap sorts the data for me.
23859686,1,0,0,java.util.HashMap,"As you can see, HashMap sorts my dates keys, resulting in Monday coming first, and Tuesday last."
23859686,1,0,0,java.util.HashMap,"I may be using the HashMap incorrectly, so my friend suggested I use TreeMap, however, the result of that was this: code."
23859718,2,0,2,java.util.HashMap,HashMap does not sort the data; it hashes the keys to assign the data to buckets!
23859729,2,1,4,java.util.HashMap,(1) java.util.HashMap makes no guarantees about order.
23859729,2,1,4,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
23860050,1,0,0,java.util.HashMap,"In the Object is a HashMap from Integer to Integer, thats altering very often."
23860050,1,0,0,java.util.HashMap,"But after the second, third, ... execution, the newUser Object always reads the old Object (the HashMap contains the old Values from the first communication)."
23866832,2,0,0,java.util.HashMap,These are the most important data types and they generally offer great performance with ArrayList and HashMap.
23868273,1,0,5,java.util.HashMap,HashMap / TreeSet combination inconsistency.
23870164,1,0,2,java.util.HashMap,"os.println(modulusMap.get(requestName));     os.println(exponentMap.get(requestName)); Client attempting to write the data to a variable:      pubModulusString = is.readLine().trim();     BigInteger pubModulus = new BigInteger(pubModulusString);     HashMap<String, BigInteger> modulusMap = new HashMap<String, BigInteger>();     modulusMap.put(message.substring(1), pubModulus);     String pubExponentString = is.readLine(); I have tested the sending of data as just a print stream and it is working perfectly."
23872945,1,0,0,java.util.HashMap,How to sort a complex HashMap structure in Java?
23875102,2,0,0,java.util.HashMap,"If you're thinking all this Map.Entry<List<String>, HashMap<List<String>, Long>> stuff is awkward, you're right."
23891605,2,1,1,java.util.HashMap,"I have decided to maintain a HashMap<String, Document> to contain my Document classes and switch between them."
23885895,2,1,2,java.util.HashMap,"This may be easiest using a HashMap, unless of course there's some way of calculating one from the other or something like that."
23888225,2,1,2,java.util.HashMap,The issue is that you are not assigning the HashMap to `resultp that has the information you want to display code.
23890013,2,0,4,java.util.HashMap,"The thing is they needed two types of Map for concurrent work, an O(1) HashMap and an O(log n) tree."
23890503,1,0,0,java.util.HashMap,How to display HashMap Key in jsp/jstl.
23890503,1,0,0,java.util.HashMap,I have set a HashMap on request as follows  code.
23890503,1,0,0,java.util.HashMap,I am alerting HashMap in My jsp as follows code.
23890503,1,0,0,java.util.HashMap,But if I try to get key of this HashMap as follow then nothing is alerted.
23891080,2,0,0,java.util.HashMap,Read detained description here on How to loop through a HashMap in JSP?
23891287,2,1,0,java.util.HashMap,"Yes, HashMap is commonly used to store cached data and retrieve it when needed."
23895715,1,0,0,java.util.HashMap,i'll get an error:  org.springframework.beans.NotReadablePropertyException: Invalid   property 'owners' of bean class [java.util.HashMap$Values]: Bean   property 'owners' is not readable or has an invalid getter method:   Does the return type of the getter match the parameter type of the   setter?
23896723,1,0,0,java.util.HashMap,I know that the  result should come as HashMap.
23901716,2,0,1,java.util.HashMap,That is not possible in java (as far as I know) I suggest you using HashMap (or a List) for storing that.
23904518,2,0,2,java.util.HashMap,It sounds like what you're looking for is a HashMap().
23912182,2,1,4,java.util.HashMap,"You can even create a HashMap for all values below four or above seven, store there 1+154+10373+385990+80 entries and use only 2 bits per value."
23912182,2,1,4,java.util.HashMap,"All the remaining tuples would map to the 256th value, telling you that you have to look in a HashMap for the rare tuple value."
23913287,1,0,0,java.util.HashMap,HashMap initialization.
23926405,2,0,6,java.util.HashMap,"This reduces the O(1) access/whatever time for a HashMap to O(n), significantly reducing performance."
23926405,2,0,6,java.util.HashMap,"HashMap was rewritten in Java 8 to use ad-hoc TreeMaps for Comparable keys if there were too many collisions for any particular bucket, meaning that performance went from O(1) to O(lg n) instead of O(1) to O(n) -- a significant improvement."
23927296,2,1,2,java.util.HashMap,"You override contains() by saying that your list contains a given object if this object is a HashMap and happens to contain the same value for the ""part_no"" key as another map in the list."
23931455,2,0,0,java.util.HashMap,I will need a HashMap because the dialog OnClickListener returns and integer value of the clicked item and i should associate the numbers with the mac addresses of the devices in order to connect.
23930792,2,0,1,java.util.HashMap,"Then I would create a HashMap lets call it sessions, mapping the hour to the session object."
23930317,2,0,1,java.util.HashMap,You can use HashMap code.
23932645,2,1,0,java.util.HashMap,"Secondly for Operator precedence you can use HashMap<Character, Integer> hm=new HashMap<>(); code."
23938360,2,1,0,java.util.HashMap,"You check to see if the Result: entry is in the map, and add the result to the ArrayList stored at the key specified in Relation: but you don't check to see if the ID already exists in the map before creating a new HashMap."
23938360,2,1,0,java.util.HashMap,"If the line contains ID: you create a new HashMap at whatever key is defined in ID:, even if there already exists one."
23938360,2,1,0,java.util.HashMap,"Suppose you have a result, and you add it to a new list, and then later you want to add something else to the list of result, you never get the list out of the HashMap to add it, you just make a new ArrayList each time."
23943937,1,0,0,java.util.HashMap,"I figured I can just use a HashMap for this and GSON would figure it out, but I'm not sure what I would name the field..."
23944195,2,1,1,java.util.HashMap,You can feed Gson with a HashMap (or if children order is important a LinkedHashMap) than you iterate over the entries or the keys normally as you would do to any other map.
23944422,1,0,0,java.util.HashMap,Malformed binary serialization of HashMap.
23944422,1,0,0,java.util.HashMap,"I wrote some code to serialize a HashMap<String,Double> by iterating entries and serializing each of them instead of using ObjectOutputStream.readObject()."
23950492,1,0,2,java.util.HashMap,Let's say a HashMap.
23951254,2,0,1,java.util.HashMap,"Simply convert the JSON string into HashMap<String, Object> then populate any type of custom structure by simply iterating it or create a constructor in each custom object class as shown below to populate the fields."
23951148,1,0,2,java.util.HashMap,How to Convert Stream Stream> to HashMap Array HashMap[]?
23951148,1,0,2,java.util.HashMap,"Please advice, how to Convert Stream Stream<HashMap<String, Object>> to HashMap Array HashMap<String, Object>[] ?"
23951206,2,1,5,java.util.HashMap,"The expression HashMap[]::new is an array constructor reference, which is a kind of method reference."
23951875,1,0,0,java.util.HashMap,Map to HashMap with custom classes throws exception net.sf.cglib.beans.BulkBeanException.
23951875,1,0,0,java.util.HashMap,so when for value in result HashMap I use another ResutMap I got odd exception: code.
23951875,1,0,0,java.util.HashMap,For 'key' in HashMap this behavior is not actual.
23954718,2,1,2,java.util.HashMap,What your looking for is HashMap
23956154,1,0,1,java.util.HashMap,"References to generic type ArrayList should be parameterized on 'JSONArray.add' Type safety: The method put(Object, Object) belongs to the raw type HashMap."
23956154,1,0,1,java.util.HashMap,"References to generic type HashMap should be parameterized on 'JSONObject.put'  On a side note, how can I prettify my JSON?"
23959849,2,0,5,java.util.HashMap,The HashMap buckets take into account only the key portion of the entry: code.
23959849,2,0,5,java.util.HashMap,The hashCode and equals of Map.Entry have very little relevance: they would be used only if you wanted to hash entries outside the HashMap itself.
23959959,2,0,0,java.util.HashMap,HashMap doesn't use it).
23959959,2,0,0,java.util.HashMap,A class making use of SimpleEntry will need to override part of the definition to handle setValue() if that is needed by its entrySet() implementation (Take a look at HashMap for an example how its handled).
23961586,1,0,0,java.util.HashMap,I am trying to convert a JSON String into a HashMap.
23962881,1,0,0,java.util.HashMap,How to handle out of memory exception while working with HashMap.
23962881,1,0,0,java.util.HashMap,I am using a HashMap which stores 1000 entries at a time.
23962881,1,0,0,java.util.HashMap,After processing the records I call clear() method and loads 1000 fresh entries for same HashMap reference.
23969704,2,0,0,java.util.HashMap,"I guess the memory leak isn't related to HashMap, but somewhere else."
23964946,2,1,2,java.util.HashMap,Simply load the properties file in Servlet and move the values into HashMap and store it as application attribute.
23971268,1,0,0,java.util.HashMap,"For my current setup I am using a HashMap to store the string and it's associated ""place-in-the-order"" string."
23971363,2,0,1,java.util.HashMap,If you want to supply your Box object directly insead of pulling out the StatusLevel or have a secondary sort by another property like time or alphabetically you should implement your own Comparator Also you may want to look into SortedMap or other Map that keeps its order so you don't have to resort a HashMap every time as it does not guarantee order.
23977876,2,1,7,java.util.HashMap,A HashMap does use equals() to compare keys.
23978040,2,1,1,java.util.HashMap,"But if you use a HashMap for your bucketList, you can add items to your bucket in constant time, which will give you an algorithm with O(n) instead of O(n^2) complexity ."
23979603,2,0,1,java.util.HashMap,"Let's consider HashMap instances, for example: code."
23979603,2,0,1,java.util.HashMap,"Since HashMap instances are mutable, and both a and b refer to the same object, any changes we make to that object through the a reference are visible through the b reference, since they're pointing at the same object."
23980640,1,0,0,java.util.HashMap,"As changing the HashMap from HashMap<String,Object> to HashMap<Integer,Object> gives an error  ParseCloud function (js) code."
23987116,2,0,2,java.util.HashMap,"Process it one character at a time to identify tokens you are interested in, and use a lookup table (HashMap) to convert each token to the desired output."
23989237,2,0,2,java.util.HashMap,"Directly from the JavaDocs  If a thread-safe implementation is not needed, it is recommended to   use HashMap in place of Hashtable."
23990510,1,0,15,java.util.HashMap,"by extending HashMap, or surrounding every call to put with if map.contains(key)), but I prefer using something ready-made that keeps my code clean."
23998539,2,1,0,java.util.HashMap,"You can use just a HashMap, or better use a TreeMap so the entries are sorted by date."
23992835,2,0,0,java.util.HashMap,Alternatively you can use HashMap instead of Hashtable.
23992835,2,0,0,java.util.HashMap,Here are the differences: Differences between HashMap and Hashtable?
23996513,2,0,11,java.util.HashMap,Note that I'd likely avoid Hashtable in preference to HashMap.
24002382,1,0,1,java.util.HashMap,How can an object get its key from a HashMap?
24002382,1,0,1,java.util.HashMap,Suppose I have a chessboard defined with a HashMap code.
24002382,1,0,1,java.util.HashMap,But the Position object is going to be used for HashMap.
24010595,1,0,2,java.util.HashMap,How to Remove Curly Braces in HashMap Android.
24010772,2,1,3,java.util.HashMap,"You do not need an ArrayList of HashMap, if the purpose it's just printing the key and the value of the HashMap code."
24010987,1,0,0,java.util.HashMap,Unable to add a HashMap in an Arraylist without deleting the previous element.
24015709,2,0,0,java.util.HashMap,Build a HashMap or another Basic Class which hold several childs.
24027482,1,0,3,java.util.HashMap,Create a HashMap to keep track of all element counts and whether or not they are in MinHeap.
24027482,1,0,3,java.util.HashMap,When reading a new integer:  check if it is in HashMap:  Increment the count in HashMap also if it is check if it is in Heap :then Increment the count there also and heapify.
24027545,2,0,5,java.util.HashMap,Skip the heap and just create the HashMap.
24027545,2,0,5,java.util.HashMap,"After you've created the HashMap, you can iterate through it and put all the elements in an array."
24027896,2,0,0,java.util.HashMap,"You could simply MergeSort the array (O(k log k) time), and then run through the array once creating your HashMap (O(n) time))."
24030747,1,0,0,java.util.HashMap,Loading same value in inner HashMap.
24030747,1,0,0,java.util.HashMap,I am trying to enter the below statement into HashMap code.
24030843,2,0,0,java.util.HashMap,Solution: Use ConcurrentHashMap insted of HashMap to solve ConcurrentModificationException.
24036002,1,0,1,java.util.HashMap,I am trying to build a giant HashMap of HashMaps.
24036065,2,1,1,java.util.HashMap,Since you create a new HashMap for each inner reference there is no need to clone it.
24036065,2,1,1,java.util.HashMap,What you are doing here is simply putting a new object to a reference: s = new HashMap<>(); So in short each HashMap you create this way will be a different object and the s variable holds a reference to the current one you are working with.
24037045,2,0,0,java.util.HashMap,Use a HashMap like so: code.
24039021,1,0,1,java.util.HashMap,Check if HashMap was modified (values added or modified).
24039021,1,0,1,java.util.HashMap,I have a method that iterates over the HashMap to get the total integer number of all of the values.
24039021,1,0,1,java.util.HashMap,I would like to avoid iterating over the entire map and finding the sum if the HashMap wasn't changed since the last time this method was called on.
24039021,1,0,1,java.util.HashMap,How do I check whether new values or old values were modified in a HashMap?
24039115,2,0,4,java.util.HashMap,"Extend HashMap; override the methods that change values, and set a flag indicating that some value has changed."
24041875,1,0,0,java.util.HashMap,"I have a program that reads a .txt file, creates a HashMap containing each unique string and its number of occurrences, and I would like to create an ArrayList that displays these unique strings in descending order in terms of their number of appearances."
24046704,1,0,0,java.util.HashMap,How do I annotate a class that extends a HashMap for XML Marshalling.
24046704,1,0,0,java.util.HashMap,How do I annotate a class that extends a HashMap for XML Marshalling using JAXB.
24046874,2,1,6,java.util.HashMap,"A hash map is just one way that a switch statement could be compiled, but in any case, you can imagine having duplicate cases as trying to have multiple values for the same key in a regular HashMap."
24053040,1,0,1,java.util.HashMap,"But , what I can not understand , in the second scenario , when the instance level object is reffered through another extra object (i.e: object1 .object1_innerObject.someMap = new HashMap<String,String>()) , it has another extra object in the stack , right ?"
24062615,2,0,1,java.util.HashMap,"In this code, you evaluate object1.object1_innerObject (call it t1), then new HashMap<String,String>() (call it t2), and finally the assignment is performed, t1.someMap = t2."
24063207,1,0,0,java.util.HashMap,"on click of search button, I capture all input fields in a HashMap<String,String> and pass it as input parameter to a method which further calls a service exposed by an external application."
24065932,2,1,3,java.util.HashMap,"Alternatively, depending on how your map is initialized, you might want to consider creating an enum for your key values, use an EnumMap instead of a HashMap, and have your get() method take this enum rather than a free-form String."
24065434,1,0,0,java.util.HashMap,"Why are String, Integer and other wrapper classes considered good keys in HashMap?"
24065434,1,0,0,java.util.HashMap,"I found below answers - String, Integer and other wrapper classes are natural candidates of HashMap key, and String is most frequently used key as well because String is immutable and final,and overrides equals and hashcode() method."
24065434,1,0,0,java.util.HashMap,"Immutabiility is required, in order to prevent changes on fields used to calculate hashCode() because if key object return different hashCode during insertion and retrieval than it won't be possible to get object from HashMap."
24065434,1,0,0,java.util.HashMap,"Since equals() and hashCode() method is used during reterival of value object from HashMap, its important that key object correctly override these methods and follow contact."
24065434,1,0,0,java.util.HashMap,If unequal object return different hashcode than chances of collision will be less which subsequently improve performance of HashMap.
24065452,2,0,1,java.util.HashMap,A HashMap deals with a key's hashCode() value.
24065666,2,0,3,java.util.HashMap,"The mapping part it's quite easy, you can use a HashMap."
24065595,1,0,0,java.util.HashMap,"how to get only one key in a HashMap with ""similar"" keys."
24067159,1,0,2,java.util.HashMap,"Java HashMap, get(key) method doesnt work."
24067159,1,0,2,java.util.HashMap,I'm trying to create a PhoneBook class that uses a HashMap in Java.
24067159,1,0,2,java.util.HashMap,"I'm not getting null values; HashMap definitely contains the key(s) I am searching for, but the values associated with the key(s) are not being returned."
24067920,2,0,1,java.util.HashMap,You could use a HashMap to store that data and avoid the if-statement all together.
24071696,2,0,0,java.util.HashMap,I assume:  You have tested that the ArrayList in loadBans is not empty - before blaming the HashMap.
24073079,2,0,0,java.util.HashMap,"Store them in a HashMap, where the key is the name of the field."
24073079,2,0,0,java.util.HashMap,Then use your HashMap to retrieve the fields and call the constructor: code.
24072926,1,0,1,java.util.HashMap,"""HashMap$Entry cannot be cast to X"" when trying to extract values from Map with a loop."
24072926,1,0,1,java.util.HashMap,"However I get error indicated that ""java.util.HashMap$Entry cannot be cast to Car"" code."
24073031,2,0,2,java.util.HashMap,HashMap#values() returns a Collection<T> which you can then supply directly to the ArrayList constructor.
24074736,1,0,0,java.util.HashMap,"I get following Error  Type mismatch: cannot convert from HashMap<String,ArrayList<String>> to Map<String,List<String>> code."
24078182,2,0,1,java.util.HashMap,The java HashMap use the hashCode of the object for fast comparison - it fallback on equals when the key collide (@see HashMap.getEntry(Object key)).
24080943,2,0,0,java.util.HashMap,"Like Guarev mentioned, a HashMap is probably your best bet."
24079807,2,0,0,java.util.HashMap,"You can use reflection, however, in your case you only have String values, and thus it would also make sense to use a HashMap (for instance): code."
24080810,2,0,1,java.util.HashMap,Here is how you would do it using a HashMap: code.
24082407,2,0,1,java.util.HashMap,"Well HashSet is implemented as HashMap wrapper in OpenJDK, so you won't win in memory usage comparing to solution suggested by aRestless."
24082085,1,0,0,java.util.HashMap,"on the other hand when i execute my application with cmd>java -jar appli\dist\appli.jar it's work good  i recompiled my Programme with -Xlint:Unchecked and i got this warning :  warning: [unchecked] unchecked call to put(K,V) as a member of the raw type java.util.HashMap                 portMap.put(curPort.getName(), curPort); 1 warning here is my method : code."
24085653,1,0,0,java.util.HashMap,"To do so, I created a class called MultilingualString which associates a Language with a String (and so extends HashMap<Language, String>) as followed : code."
24086338,2,0,1,java.util.HashMap,"Secondly, you can create a HashMap for your presenters, with the imageref as the key : code."
24087026,2,0,0,java.util.HashMap,Loop through the ArrayList and check each HashMap: code.
24091340,2,0,0,java.util.HashMap,"You need to read data, insert them to a data structure like a HashMap(as objects, that's the key point) and then by using ORM technologies, like hibernate insert them to a database."
24096964,1,0,0,java.util.HashMap,Reading from file into HashMap.
24096964,1,0,0,java.util.HashMap,I'm trying to fill my HashMap with Strings from the text file (zadania.txt) .
24100755,2,0,0,java.util.HashMap,Here is another option to read your *.txt File and put it into a HashMap code.
24099036,1,0,0,java.util.HashMap,Then I created a HashMap and InputStream in the Java code and placed the input stream into the hash map!
24101142,1,0,6,java.util.HashMap,And then I cache the result in a HashMap.
24107879,2,0,0,java.util.HashMap,"As long as the reference to the HashMap object is not published (is not passed to another method), it is threadsafe."
24109782,2,0,0,java.util.HashMap,You can use normal HashMap with normal keys then use a timer thread that will clear the old values in the HashMap.
24111649,1,0,0,java.util.HashMap,"Currently, I am using perlin noise to generate data for 3d chunks (16x16x16 short arrays) which are contained in a HashMap."
24111802,2,1,0,java.util.HashMap,"please Use ArrayAdapter<HashMap<String, String>> instead of ArrayAdapter<String> code."
24111803,2,0,0,java.util.HashMap,"But in your code, the foodList variable you pass for that argument is of type ArrayList<HashMap<String, String>>."
24119128,2,1,2,java.util.HashMap,HashMap is the basic class used for this.
24119128,2,1,2,java.util.HashMap,Check out the full HashMap API here.
24125505,2,0,2,java.util.HashMap,now your launcher class public class Game {     Map locations = new HashMap(); code. }
24134433,2,0,0,java.util.HashMap,"You can try HashMap<String,String> address without using extra Address POJO class as well if it's structure is also not known."
24137133,2,0,0,java.util.HashMap,A HashMap shouldn't throw that exception.
24137133,2,0,0,java.util.HashMap,The only explanations I can think of are:  Your application has a race condition caused by two threads reading / updating that HashMap object without proper synchronization.
24137133,2,0,0,java.util.HashMap,Something is using reflection to tinker with the HashMap's internal data structures.
24137133,2,0,0,java.util.HashMap,There's a bug in HashMap for that version of Android.
24136858,2,1,6,java.util.HashMap,"...because both of Thing's members, map1 and map2 end up pointing to a single HashMap instance."
24143818,2,0,2,java.util.HashMap,Create a HashMap mapping strings to Action objects: code.
24149035,1,0,0,java.util.HashMap,Modifying one of HashMap key.
24149373,2,0,2,java.util.HashMap,You need to understand how a HashMap works.
24149373,2,0,2,java.util.HashMap,"When you put a key in a HashMap, containing N buckets, the hashCode of the key is used to find the appropriate bucket."
24149460,2,0,1,java.util.HashMap,"HashMap tries to search for matching object, but based on hashCode, it finds out, that there is no object stored in the bucket corresponding to hashCode value = 8."
24149460,2,0,1,java.util.HashMap,The hashCode is 6 again and HashMap manages to find the right bucket and using equals method - find the object.
24149394,1,0,0,java.util.HashMap,Why is HashMap#get Returning an Object Rather than a String?
24151521,1,0,1,java.util.HashMap,It seems to me that any scenario where I instantiate a HashMap using an interface for a key-type would work contrary to the idea of the map.
24151521,1,0,1,java.util.HashMap,If I put 2 objects of different MyInterface implementations into the map then they will both operate on their own hashCode() implementations and the entire underlying logic of the HashMap no longer makes sense.
24151645,2,0,0,java.util.HashMap,they will both operate on their own hashCode() implementations and the entire underlying logic of the HashMap no longer makes sense  I guess by that you meant hash collision.
24156674,2,0,0,java.util.HashMap,"like this.. Map < String, List< String>> map = new HashMap< String, List< String>>(); code."
24156432,2,0,1,java.util.HashMap,That is because you are referencing only one instance of List object to the HashMap.
24156432,2,0,1,java.util.HashMap,When the reference to the List change the Values of the HashMap changes.
24156432,2,0,1,java.util.HashMap,That last value you added to the list after you clear it will be the values of all the data in your HashMap solution: Create a new instance of List every time you add to the HashMap
24156522,2,0,1,java.util.HashMap,"You need to create a list before putting in HashMap, code."
24156993,2,1,4,java.util.HashMap,"If you care the performance of all there items and you never issue deletions / update, then probably the easiest is to use HashMap and ArrayList together to represent your data as clustered-index."
24156993,2,1,4,java.util.HashMap,"Each insert is an insertion to HashMap + an append to ArrayList, and the value of the HashMap is the index of the ArrayList."
26036465,2,0,0,java.util.HashMap,it uses HashMap to hold enum values and HashMap doesn't support case insensitive keys.
24159918,1,0,1,java.util.HashMap,libGDX - Using a HashMap causes growing HeapSize and Out of Memory on Android Phone.
24159918,1,0,1,java.util.HashMap,I'm facing a problem with a fast growing heap size because of using a HashMap.
24159918,1,0,1,java.util.HashMap,Is it because of the singletons or because using a HashMap with that types is not recommended?
24160776,1,0,1,java.util.HashMap,I have a HashMap and I want to pass its values to the reduce function in hadoop via overoloading the run method.
24160900,1,0,0,java.util.HashMap,Each catalog have a HashMap (it may be changed to List) of IImageProvider.
24161335,2,1,1,java.util.HashMap,"You didn't paste the Map definition, but you should use typed parameters - i.e. Map<String, List<String>> accountsByReport = new HashMap<String, List<String>>(); so you don't need to do casting after .get In fact you pasted it."
24161335,2,1,1,java.util.HashMap,"Use: private Map<String, List> accountByReport; Refer to http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html"
24171109,1,0,0,java.util.HashMap,"I always used a HashMap<Gene,Occurrences)  If a Gene is encountered for the first time, I add them with a value(count) as 1,If it is already present, I just lookup and increment the (value)count by 1.While, I intent to think that this looks like the easiest solution,I'm wondering if this is the most efficient solution to keep track of the occurrences."
24173729,2,1,1,java.util.HashMap,That is because you added the Class name as a value to the HashMap.. try this code.
24173729,2,1,1,java.util.HashMap,will create a new instance of HammerBonus to add as a value to the HashMap.
24173739,2,0,2,java.util.HashMap,This method is supported for the benefit of hash tables such as those provided by HashMap.
24173802,2,0,3,java.util.HashMap,This is noted in HashMap#containsKey implementation.
24175692,2,0,1,java.util.HashMap,"As far as learning about the basic data structures, these are the most basic ones that come to mind:  List / ArrayList Set / TreeSet Stack HashMap  There are TONS of questions about all the above on this site (and tons of tutorials on teh interwebz)."
25921366,2,1,0,java.util.HashMap,That way you can store the tags in perhaps a set or HashMap instead of an enum and therefore be much less limited in tag choice.
24181826,1,0,0,java.util.HashMap,"Strange HashMap results - Java,Hadoop."
24936843,2,0,0,java.util.HashMap,JPA/JDO is more for RDBMS but Google datasore is more like a HashMap.
24192762,2,0,0,java.util.HashMap,Then you can set a value like in a HashMap like this code.
24198567,1,0,1,java.util.HashMap,Java : Good Candidate for Key in HashMap.
24198567,1,0,1,java.util.HashMap,"I have two questions : A) Is there any Issue(Performance or Other) , while I put element in HashMap with primitive data type for above declare HashMap for example  code."
24198567,1,0,1,java.util.HashMap,B) Which is good candidate for HashMap if I have number(int) as a Key String OR Integer
24198610,2,1,1,java.util.HashMap,"Java HashMap relies on two things:  the hashCode() method, which returns an integer that is generated from the key and used inside the map the equals(..) method, which should be consistent to the hash calculated, this means that if two keys has the same hashcode than it is desiderable that they are the same element."
24200197,1,0,3,java.util.HashMap,Why HashMap Takes capacity as capacity <<= 1;.
24200197,1,0,3,java.util.HashMap,I want to know why HashMap always takes a size which is multiple of 2 and why other collections do not?
24201187,2,0,0,java.util.HashMap,Try using the TreeMap instead of HashMap it has the method for getting the last entry which will give you the entry which has the highest value of key.
24200995,1,0,0,java.util.HashMap,"I need sort ArrayList of HashMap, this is my code: code."
24201395,2,0,2,java.util.HashMap,"Up to you ... With that approach you do not need an ArrayList<HashMap<String, String>> anymore, but simply use a List<Fidu> (by the way, for the variable's types always use the interface and not an implementation)."
24202161,2,0,1,java.util.HashMap,"In your main code, when reading your CSV files you can fill a HashMap that maps an ISBN to a book, and a similar one for magazines, which you can use to retrieve a book or magazine by ISBN: code."
24204683,1,0,0,java.util.HashMap,"But on inspecting the object, its size is 3 but the values added in the HashMap are always only a and b."
24206211,2,0,0,java.util.HashMap,I would put them in a HashMap.
24206211,2,0,0,java.util.HashMap,Then while reading from the rs result set I would look up the ids from the names in the HashMap.
24212717,1,0,4,java.util.HashMap,HashMap with ArrayList.
24212717,1,0,4,java.util.HashMap,I have a java question about a HashMap with an ArrayList in it.
24212717,1,0,4,java.util.HashMap,"The key is a string and the value is the ArrayList (HashMap<String, ArrayList<Object>>) I am given a list of multiple keys and I need to put the corresponding values into the ArrayList, and I'm not sure how to do it."
24214376,1,0,0,java.util.HashMap,"One of the parameters in json object being sent over to meteor is HashMap<String, MyObject> converted as gson.toJson(HashMap<String, MyObject>)."
24214376,1,0,0,java.util.HashMap,"HTML - i can display the whole block of data ( gson.toJson(HashMap<String, MyObject>) as above) code."
24214376,1,0,0,java.util.HashMap,"Is this conversion gson.toJson(HashMap<String, MyObject>) unparsable or there is another way of displaying besides what i've tried?"
24217522,1,0,1,java.util.HashMap,How to map a HashMap that contains ArrayList.
24217522,1,0,1,java.util.HashMap,"I am thinking that maybe I will need to create other Entities to facilitate this, like maybe a ListOfLessons, that will contain the ArrayList<Lesson> in order to shorten the HashMap to :  code."
24218305,1,0,1,java.util.HashMap,I wrote separate modules for all by storing informations in **HashMap.
24218305,1,0,1,java.util.HashMap,"My doubts :-  I used numbers of HashMap for smaller modules to store meaning of keys, just like - triple means 3 times, double means 2 times and all."
24218305,1,0,1,java.util.HashMap,But this has limitation that if I need to add anything I have to add that entry in HashMap.
24221759,1,0,1,java.util.HashMap,"I tried using a HashMap to do this, and the table displayed fine, but the HashMap has no ordering so I can't tell it which number to add one to."
24221977,2,0,0,java.util.HashMap,You could keep your HashMap in which the key is a hidden view in your listview rows.
24341846,2,0,4,java.util.HashMap,Way too many classes (in JDK itself) have hashCode() overridden so in cases on not inlined HashMap alike structures the invocation is performed via vtable - i.e. slow.
24234298,2,0,2,java.util.HashMap,A HashMap is very good for use as a sparse array.
24234298,2,0,2,java.util.HashMap,"For a HashMap, put and get is guaranteed O(1)."
24234162,2,1,4,java.util.HashMap,"In that case consider using a hash table instead of an array (HashMap<Integer, T> in Java)."
24238770,1,0,0,java.util.HashMap,"for static HashMap<String, String>: code."
24239077,2,0,1,java.util.HashMap,"If your keys can be described by an enum, then it could be worth using EnumMap rather than HashMap for at least the following reasons:  EnumMap is optimized for enum keys EnumMap is likely to perform better than HashMap when using enum as key object Since EnumMap doesn't call hashCode method on keys, there is no chance of collision."
24243092,1,0,13,java.util.HashMap,Java HashMap put() implementation.
24243092,1,0,13,java.util.HashMap,"java.util.HashMap has an implementation of the put method, which has the following code inside it : code."
24250563,2,0,2,java.util.HashMap,If that would not work for you and you like the idea of a separate property for each account then consider using a HashMap to store an account name to property variable.
24254111,2,1,3,java.util.HashMap,"HashSet defines:  Object header - 8 bytes long serialVersionUID - 8 bytes Object PRESENT - 8 bytes HashMap<E, Object> map - 8 bytes  HashMap defines (in Java 8) (ignoring things that are created on demand, like EntrySet):  Object header - 8 bytes long serialVersionUID - 8 bytes int DEFAULT_INITIAL_CAPACITY - 4 bytes int MAXIMUM_CAPACITY - 4 bytes int TREEIFY_THRESHOLD - 4 bytes int UNTREEIFY_THRESHOLD - 4 bytes int MIN_TREEIFY_CAPACITY - 4 bytes int size - 4 bytes int modcount - 4 bytes int threshold - 4 bytes float DEFAULT_LOAD_FACTOR - 4 bytes float loadFactor - 4 bytes Node<K, V>[] table - 8 bytes  Node defines:  Object header - 8 bytes int hash - 4 bytes + 4 bytes padding K key - 8 bytes V value - 8 bytes Node<K, V> next - 8 bytes  Node<K, V>[] should have a size of 2048, if I remember how HashMap works."
24254111,2,1,3,java.util.HashMap,"So the HashSet should be:  32 bytes for just HashSet 64 bytes for just HashMap 40 bytes per Node<K, V> inside Node<K, V>[] * 1000 nodes = 40000 bytes 16400 bytes for Node<K, V>[] inside the HashMap  Total: 56496 bytes for the HashSet, without taking into account the String contents  So at least by my calculations, the total space taken should be somewhere around 144496 bytes -- about 141 kilobytes (kibibytes for the pedantic)."
24254250,1,0,1,java.util.HashMap,"So far I am considering three options for the ""backend"" of this API:  enum + EnumMap pure enum HashMap  1 and 2 are basically the same but 1 is in case I need to reuse the enum for other uses."
24256113,2,0,0,java.util.HashMap,"Alternatively, you can use these approaches: memory-out-of-error Memory Leak and Out of memory Error using List,LinkedList and HashMap Memory Leak and Out of memory Error using LRU Cache Memory Leak and Out of memory Error using Disk LRU Cache"
24257609,2,1,1,java.util.HashMap,"If efficiency is what you are looking for then  use  HashMap that it has O(1) speed, Also iterate the array of integers in enhanced forloop because it is slightly faster than ordinary forloop code."
24257658,2,0,1,java.util.HashMap,"If you do not want to use hashing (HashSet or HashMap), you can first sort the array."
24261409,2,0,1,java.util.HashMap,Use HashMap or ConcurrentHashMap based on whether you want your data to be threadsafe or not.
24261416,2,0,1,java.util.HashMap,[22]  You can use HashMap as they are better and a good option instead of HashTable.
24261372,2,0,0,java.util.HashMap,"In general, HashMap will be a better option in terms of efficiency, as it's not synchronized."
24263313,2,0,0,java.util.HashMap,"You could wrap the list up in a class which also has a HashMap<String, List<MyObj>>."
24263671,1,0,0,java.util.HashMap,"How I am doing is as follows: I made a HashMap mp<String1, HashMap<String2, Integer>> where String1 is my geocode (""[40.323243 -70.435443]"") , String2 is my Hashtag in tweet and Integer is my occurence of that Hashtag."
24263671,1,0,0,java.util.HashMap,"( doing regex and doubleParse for getting my geocodes into numbers) If geocodes are closer to each other then i am extracting my nested HashMap which contains my Hashtags, For threshold_tweetssim, i am checking the minimum lenth of respective Hashtags and overlapping, then divide the overlapping(which is count of my overlapped hashtags) by minimum length of respective tweet."
24263779,1,0,0,java.util.HashMap,Why is there no map.get(index) in a Java HashMap ?
24263779,1,0,0,java.util.HashMap,To access the first key's value in a HashMap I have to put the keys into a list then  list.get(0) and then pass that to map.get(list.get(0)); I feel this is clumsy.
24263779,1,0,0,java.util.HashMap,"What would be the right approach to access, say, the ""first or second element"" from a  HashMap?"
24263779,1,0,0,java.util.HashMap,"(please do not suggest ""convert HashMap to LinkedHashMap and access it by Iterating)."
24263855,2,0,1,java.util.HashMap,HashMap is not ordered: index i in a HashMap does not mean anything.
24263890,2,0,1,java.util.HashMap,"See http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html: ""This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."""
24264408,2,0,3,java.util.HashMap,"Asking for ""the first elemet"" of a HashMap does not make sense, because the order can (and will, in general) change as elements are added and removed."
24264408,2,0,3,java.util.HashMap,"This is explained in the documentation for HashMap   ""... makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."""
24263899,2,0,0,java.util.HashMap,HashMap internally uses Set.
24271993,2,0,1,java.util.HashMap,Create a new Object that contains these two Boolean values (create a new class or use an ArrayList/HashMap/etc) AtomicBoolean  Option 1: code.
24273902,2,1,1,java.util.HashMap,Create an if statement that checks if the category is 1 and if it is then add the to the HashMap if it is not then do not do anything continue to the next json object.
24273891,1,0,4,java.util.HashMap,"I realize I can just try and use a HashMap with name as the key to find all unique entries, but I get the feeling there is a better way to solve this."
24274201,2,0,1,java.util.HashMap,Alternatively the idea you already considered of dropping them into a HashMap seems pretty straightforward and will give the behaviour you need.
24275724,1,0,0,java.util.HashMap,I have the following several HashMap initializations (previously defined elsewhere): code.
24275891,2,1,3,java.util.HashMap,The array will use one word for each HashMap reference and ~3 words for the object header.
24275891,2,1,3,java.util.HashMap,That is trivial compared with the space occupied by the HashMap objects.
24275891,2,1,3,java.util.HashMap,"FWIW, I can't think of a better approach1 than using array of HashMap objects."
24275891,2,1,3,java.util.HashMap,"The ArrayList alternative would be better if the number of HashMap objects was dynamic, but you are replacing a group of instance variables, so it offers no clear advantages for your use-case2."
24288450,2,0,1,java.util.HashMap,How about using a HashMap for your particular case :  code.
24279344,1,0,0,java.util.HashMap,One of the program tries to serialize a HashMap into the file whereas the other program tries to read the same HashMap.
24279775,1,0,0,java.util.HashMap,Is it safe to delete HashMap's entry when iterating over its values?
24279832,2,1,4,java.util.HashMap,"From the HashMap javadoc:  The iterators returned by all of this class's ""collection view methods"" are fail-fast: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException."
24279832,2,1,4,java.util.HashMap,"From the javadoc for HashMap#values():  The collection supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Collection.remove, removeAll, retainAll and clear operations."
27395623,2,1,1,java.util.HashMap,"But remember not to use it in Job class, for it use ExecutingJobsManager(a JobListener) to put the running job to a HashMap, which run before the job class, so use this method to check job is running will definitely return  true."
24283379,1,0,0,java.util.HashMap,"I tried a HashMap<Set<String>, Set<String>> already but mutating keysets goes wrong, as described here: http://stackoverflow.com/a/2393748/2346207"
24286517,1,0,0,java.util.HashMap,I can see that readValue() has been overridden but how can a string be converted to a HashMap?
24286761,2,1,2,java.util.HashMap,If the filterStr is compatible to be converted to a HashMap this will method will do it.
24287317,1,0,0,java.util.HashMap,Displaying HashMap key & value in JSP display table.
24288183,1,0,1,java.util.HashMap,"I read the JSON from a web service and converted all the JSON objects to HashMap<String, String> using GSON."
24290452,1,0,1,java.util.HashMap,"The method replace(String, ArrayList<>) is undefined for the type HashMap."
24290452,1,0,1,java.util.HashMap,"Note: invertedLists is a HashMap<String,ArrayList<Posting>> We checked in my project; I am using JavaSE-1.6 and she uses JavaSE-1.7."
24290609,2,0,0,java.util.HashMap,"There is no method replace(K,V) for  a HashMap<K,V>, in Java 7 , you have to use JDK 8 for this."
24291226,2,0,0,java.util.HashMap,"Instead of array use a HashMap, where string is the column name."
24292048,2,1,2,java.util.HashMap,it is because HashMap 's equal() implementation provides deep equal checking while guava Cache doesn't provide this equal method it uses it from Object
24297280,2,0,0,java.util.HashMap,"you can try this in Java using HashMap i will give you an example, it might not be the same but the logic is in it."
24305890,1,0,1,java.util.HashMap,I am trying to create a HashMap that will contain an integer as a key and a list of strings as a value: code.
24310672,2,0,1,java.util.HashMap,A HashMap will quickly identify a small potentially equal subset.
24311423,1,0,1,java.util.HashMap,It always want to use HashMap.
24311423,1,0,1,java.util.HashMap,Is there a way to turn the data into the object I want instead of a HashMap?
24311830,2,0,0,java.util.HashMap,What object is added to the HashMap?
24312015,1,0,0,java.util.HashMap,Which to choose for developing application if i am           printing records of user in jsp page from servlet?which to choose among the following  HashMap Hash Table
24312095,2,0,0,java.util.HashMap,"Favour HashMap if you do not need concurrency (i.e. the map will only be used by one thread)  As for the JSP question, it really depends."
24312095,2,0,0,java.util.HashMap,"If you create it in a request, then get rid of it when you're done, and it's never used in another thread, then just use HashMap."
24312933,2,1,1,java.util.HashMap,"As the Javadocs says - If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
24312933,2,1,1,java.util.HashMap,Difference between Hashtable and ConcurrentHashMap : ConcurrentHashMap only locked certain portion of Map while Hashtable lock full map while doing iteration ConcurrentHashMap is designed for concurrency and improve performance while HashMap which is non synchronized by nature can be synchronized by applying a wrapper using Collections.synchronizedMap().
24312933,2,1,1,java.util.HashMap,Difference : ConcurrentHashMap do not allow null key or null values while HashMap allows null key.
24315840,1,0,1,java.util.HashMap,"In this code, I'm hoping to update a HashMap with the most recent version of a given path's contents, with the absolute path as string being used as the key."
24318586,2,0,0,java.util.HashMap,(this is just to keep things tidy) then I would recommend using a Map or HashMap instead of a treeMap (However I am unfamiliar with treeMap) EDIT: just change Persons.getKey() to newPersons.getKey() You were trying to call it statically.
24322088,2,0,0,java.util.HashMap,"Or use a HashMap, but that is probably overkill."
24322095,1,0,0,java.util.HashMap,I want to marshal and unmarshal like below:  I want to unmarshal xml from <keyName>value</keyName> to  HashMap code.
24325203,1,0,0,java.util.HashMap,I tried also with HashMap instead of WeakHashMap since i red that objects must be referenced but without any luck.
24325703,2,0,1,java.util.HashMap,"There are two advantages:  It doesn't allow duplicates HashSet internally assumes a HashMap, hence retrieval is faster."
24326693,1,0,0,java.util.HashMap,Java how to create a custom Exception to limit the size of a HashMap.
24326693,1,0,0,java.util.HashMap,"I have a method which inserts new items to a HashMap, I want to limit the size of the HashMap by throw an exception when the size of the HashMap is larger than a specific value, say 100, below is my implementation: code."
24331502,1,0,2,java.util.HashMap,"LinkedHashMap vs HashMap, LinkedHashSet vs HashSet."
24331502,1,0,2,java.util.HashMap,I understand that LinkedHashMap extends HashMap and LinkedHashSet extends HashSet.
24331502,1,0,2,java.util.HashMap,Why don't we always use LinkedHashMap instead of HashMap and why don't we always use LinkedHashSet instead of HashSet?
24331558,2,1,9,java.util.HashMap,"If you do not need the insertion order maintained, you do not have to ""pay"" for it, and use lighter-weight HashSet<E> and HashMap<K,V> instead."
24331775,2,0,0,java.util.HashMap,"For most of the high-level solutions your observation is quite accurate--the LinkedHashMap would have virtually no impact over a HashMap, but for low-level, fast running apps (On a small scale think MineCraft real-time graphics--or on a large scale consider a distributed web cluster at Google)."
24340349,2,0,0,java.util.HashMap,Using HashMap/Table needs extra space.
24337993,2,0,0,java.util.HashMap,"I might be misunderstanding exactly what you're trying to achieve, but I think it'd be simplest to put all those document Elements into a HashMap<String, Elements>."
24337766,2,1,3,java.util.HashMap,"The diference lies in the Class used to generate the iterator, you can't expect that the same iterator implementation work on, for instance, a HashMap and a TreeMap equally."
24337766,2,1,3,java.util.HashMap,"Check this source codes for the classes you worked with, and look for the iterator implementation: ArrayList: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/ArrayList.java TreeMap: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/TreeMap.java?av=f AbstractList: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/AbstractList.java?av=f HashMap: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java?av=f"
24341653,2,0,1,java.util.HashMap,"(either size difference between two lists or very first non existing value) also, hashset doesnt rely on parents method but on isEmpty of backing HashMap (which again overrides isEmpty like ArrayList)"
24341469,2,0,3,java.util.HashMap,It rely on isEmpty from the internal HashMap.
24341469,2,0,3,java.util.HashMap,And HashMap's implementation is the same as the one in ArrayList
24343981,1,0,2,java.util.HashMap,"I could use Java Collections to create a simple synchronized HashMap and use putIfAbsent(...), but that doesn't give me the benefit of weak values."
24509462,2,0,0,java.util.HashMap,"create your own WeakReference and use it in HashMap<key,weakObj> ."
24344659,2,0,2,java.util.HashMap,"HashSet internally stores values as part of HashMap's key and it puts a dummy value as value Check the source code, relevant portions extracted: code."
24344849,1,0,0,java.util.HashMap,The output is from a HashMap.
24349400,2,1,4,java.util.HashMap,"You can only have one entry per key in a Hashtable (or HashMap, which is what you should probably be using - along with generics)."
24350495,1,0,1,java.util.HashMap,"Afaik, there are no wildcards in C#, so I cannot write HashMap<Tag<?>,?> here."
24352059,2,1,3,java.util.HashMap,"If you do need names then make them keys in a HashMap<String, Node> or similar."
24356372,2,1,1,java.util.HashMap,To create the HashMap you can do something like: code.
24358729,2,0,1,java.util.HashMap,Use a TreeMap object instead of HashMap.
24359263,1,0,0,java.util.HashMap,Compare and return HashMap for given value.
24360481,2,0,0,java.util.HashMap,"To keep track of a string already searched and made null, we will use a HashMap like this."
24360622,1,0,0,java.util.HashMap,HashMap Entry class's recordAccess() method is empty body.
24360690,2,0,2,java.util.HashMap,It has a method body in the Entry subclass used by LinkedHashMap (which is a subclass of HashMap).
24360690,2,0,2,java.util.HashMap,The method exists in the base Entry class in order to be able to use common code in the base HashMap class.
24363847,1,0,0,java.util.HashMap,When debugging java applications I sometimes would like to call methods on an object that is contained in a complex structure (like getting the second element of an Iterator on a object in a HashMap).
24363966,2,1,0,java.util.HashMap,"However, for existing objects like HashMap, you have to unfold its internal structure."
24375096,2,0,4,java.util.HashMap,A classic HashMap may be replaced with an open address hash table.
24372348,2,0,2,java.util.HashMap,"When you try to iterate through the HashMap, you're going to get a strange order."
24372375,2,0,2,java.util.HashMap,"If you only have a HashMap, there's no reliable way of figuring out that 1 is ""first"" short of iterating through every key, because internally the keys could be: code."
24372375,2,0,2,java.util.HashMap,"From the HashMap javadoc:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
24372375,2,0,2,java.util.HashMap,So using a HashMap really doesn't make sense because the extra work you'd have to do anyways makes a HashMap less efficient than a heap in the end.
24372375,2,0,2,java.util.HashMap,"Now, if you really wanted to use a HashMap, you could:  Grab the EntrySet, sort by key, then get the first value."
24372375,2,0,2,java.util.HashMap,"At this point might as well skip the HashMap and implement the heap ""normally"", though, because otherwise you're basically doing the same thing but with the added complication of splitting your data between an ArrayList and HashMap."
24372405,2,1,3,java.util.HashMap,The problem with that implementation is that it doesn't take advantage of the HashMap capabilities to easily access any element given the key.
24372405,2,1,3,java.util.HashMap,"Therefore, implementing a queue with a Map would be very memory intensive, without the clear advantage of the HashMap search."
24372405,2,1,3,java.util.HashMap,"Note that the HashMap won't store your items organized in neat crescent order, even if your keys are numeric Strings or Integer."
24376373,1,0,0,java.util.HashMap,"I'm using Caldroid Lib to create a custom calendar inside my Android App, i need to load data from my Web Server, i have an asynctask that fills a HashMap and then i put that data inside an arraylist like this: code."
24378195,2,0,1,java.util.HashMap,"A Map is not a Collection, so use a HashMap."
24387900,2,1,2,java.util.HashMap,"2) the use of Map<Integer, Integer> cache = new HashMap<Integer, Integer>(); instead of HashMap cache = new HashMap();."
24387900,2,1,2,java.util.HashMap,"c) The functionality we are after here is that of the Map interface, which HashMap happens to be an implementation of."
24387900,2,1,2,java.util.HashMap,"Unless the referencing code relies on HashMap specific methods (unlikely), it is good practice to declare your variables as the corresponding collection interface (like List for ArrayList etc."
24381369,2,0,0,java.util.HashMap,A HashMap is an array of linked lists.
24388299,2,0,1,java.util.HashMap,"I don't know much about jPcap (and I remember reading somewhere - here that you should rather use jNetPcap) but I would use a HashMap<String,TCPPacket> the tcp conversation according to store the conversation, the String key being for instance String.join('."
24387305,1,0,1,java.util.HashMap,Is it better to specify HashMap's initial capacity when it is not a power of 2 than to not specify at all?
24387305,1,0,1,java.util.HashMap,Suppose I know the exact number of key-value pairs that will go in the HashMap and I know that it is not a power of 2.
24387607,2,0,3,java.util.HashMap,If you look at the java.util.HashMap source code (java 1.7) (you can find in the src.zip file in the JDK's directory) you will see that the HashMap's put method uses the inflateTable method to create an array that stores HashMap's entries and the method always increases the capacity of the HashMap to a power of two that is greater than (or equal to) the size that you specified.
24388662,2,1,3,java.util.HashMap,You should consider the initial capacity a hint to the HashMap of approximately what data to expect.
24388662,2,1,3,java.util.HashMap,"Thinking of this initial capacity as a hint, rather than an instruction you expect HashMap to follow, may help you see that the optimization you're describing is unnecessary."
24388662,2,1,3,java.util.HashMap,"HashMap is designed to behave well in all normal circumstances, and so while providing an initial capacity can help marginally, it's generally not going to have huge impacts on your code unless you are building many new large maps all the time."
24388662,2,1,3,java.util.HashMap,"As documented, you could introduce some unnecessary slowdowns if you specified too large of an initial capacity:  Iteration over collection views requires time proportional to the ""capacity"" of the HashMap instance  However in practice the wasted memory of allocating such large maps would likely cause problems for you sooner than the slightly slower iteration speed."
24388662,2,1,3,java.util.HashMap,Be sure you read Why does HashMap require that the initial capacity be a power of two?
24388662,2,1,3,java.util.HashMap,Here's some quick inspections I did using Scala's REPL (and some personal utility functions) to inspect what's going on inside HashMap (Java 1.7): code.
24390515,2,0,2,java.util.HashMap,There is no benefit of using this class over a simple HashMap.
24390515,2,0,2,java.util.HashMap,"In Java 7, HashMap does not provide the operations putIfAbsent, etc."
24390515,2,0,2,java.util.HashMap,This needs only two lookups and works with an ordinary HashMap.
24401320,1,0,0,java.util.HashMap,Nested HashMap Structure.
24401320,1,0,0,java.util.HashMap,First one is Option Type with Keys- Call and Put and value as another HashMap ExpiryDate which points to Strike which again points to Date which finally points to Closing Price.
24401603,2,0,0,java.util.HashMap,"Each of the maps inside the for is an instance of HashMap, with the correct generics."
24405118,1,0,1,java.util.HashMap,I have a HashMap matching a String with a double and I try to sort it by values using a TreeMap after some modifications on thoses values.
24406541,1,0,0,java.util.HashMap,"I am passing a HashMap<String, Object> to the server."
24406935,2,0,0,java.util.HashMap,On the top of my mind I can think you can do  Create a HashMap.
24413686,1,0,0,java.util.HashMap,How to get string from gson in HashMap which is represented below.
24413686,1,0,0,java.util.HashMap,"Now how to get String, elements from HashMap<String,Object> resp?"
24414664,2,0,3,java.util.HashMap,"Use a HashMap<String, JournalArticle> data structure."
24414664,2,0,3,java.util.HashMap,"Edit: on a second thought, I think you can do some-kind-of ""like"" queries (just like the like clause in SQL), but the efficiency is not going to be too good, because you are iterating through all the keys in the HashMap whenever you do a query."
24416170,2,0,1,java.util.HashMap,and then convert the HashMap back to a list.
24417625,2,1,2,java.util.HashMap,"Keep a HashMap<Integer, List<Group>>, keyed on the size of the group in question."
24417682,2,0,0,java.util.HashMap,Start with a hash based container such as a HashMap and for each element in the array first check if it is present in the container and if not add it.
24419489,1,0,2,java.util.HashMap,I didn't want to use it because I think that run() is called only once at each machine (it doesn't run concurrently) so I would not have any problem with a simple HashMap but if I replace the concurrentHashMap with the simple HashMap I am getting an error (concurrentModificationError).
24421461,2,0,0,java.util.HashMap,"There are a few caveats, though:  Maps generally require you to define additional methods (hashCode() in addition to equals() for HashMap, and some form of comparator for TreeMap) The keys for a map should not be mutable, although for Track objects I can't really see that being an issue You get another collection to eat up memory."
24421416,2,0,1,java.util.HashMap,"Perhaps you can try using a HashMap linked that links that ""int"" with the object."
24421454,2,0,0,java.util.HashMap,As mentioned in the other answers try using HashMap.
24423337,2,1,0,java.util.HashMap,if you want to maintain the sorting order then use TreeMap instead of HashMap.
24426329,1,0,0,java.util.HashMap,I need a HashMap with the signature code.
24426838,2,1,2,java.util.HashMap,"If you're asking about Java's implementation, HashMap does cache the set after the first call to keySet()."
24433184,1,0,0,java.util.HashMap,I am implementing a class Pair to use it as a key with two-values for a HashMap.
24434788,1,0,2,java.util.HashMap,"I am a bit confused about instance creating since I started to learn Generics because I realize for example, you can create a HashMap like this, code."
24434788,1,0,2,java.util.HashMap,While I can also declare instance hashmap like this since HashMap is implemented from Map Interface code.
24435050,2,1,7,java.util.HashMap,The second uses generics in the declaration and ENSURES that only String keys and values will make their way into your HashMap instance at compile time.
24435074,2,0,1,java.util.HashMap,"Your first line, HashMap hashmap = new HashMap() works because you're using raw types."
24435074,2,0,1,java.util.HashMap,The only difference between that and your second instantiation of HashMap is that you are providing some restrictions on what the types of your keys and values can be.
24441134,2,0,0,java.util.HashMap,"HashMap<String, Object> attributes Thus you don't have to modify your structure or enum if new attributes are added."
24437594,1,0,0,java.util.HashMap,Getting random value from java HashMap in O(1) time.
24437594,1,0,0,java.util.HashMap,"All I have read these links, Is there a way to get the value of a HashMap randomly in Java?"
24438323,2,1,1,java.util.HashMap,In short a HashMap is not designed for this purpose.
24440042,1,0,0,java.util.HashMap,"Map Type , HashMap constructor."
24440042,1,0,0,java.util.HashMap,Why we use Map reference type but HashMap constructor like in example: code.
24440342,1,0,0,java.util.HashMap,"Update1: After computing the hashmap on backend, I tried saving it in datastore, but I got an error stating ""java.util.HashMap is not a supported property type""."
24445075,1,0,6,java.util.HashMap,Storing multiple values with same key in HashMap.
24445075,1,0,6,java.util.HashMap,I had an interview today and my interviewer asked me that how can I store multiple values having the same key in HashMap?
24445075,1,0,6,java.util.HashMap,I gave her the following solution in how I will be using HashMap:  code.
24445075,1,0,6,java.util.HashMap,The interviewer said that this is one way of using the HashMap but there is another way in which I won't be requiring ArrayList or any other data structure.
24447782,2,0,2,java.util.HashMap,"hashCode(): This method returns a hashCode() value as an Integer and is supported for the benefit of hashing based java.util.Collection classes like Hashtable, HashMap, HashSet etc."
24451963,1,0,0,java.util.HashMap,"Ah, I haven't written the Algorithm for creating the HashMap yet, because I wanted to see if I get something like { ""0"", ""0"", ""0"", ... } or { ""0,"", ""0,"", ""0,"", ... } back."
24455397,1,0,0,java.util.HashMap,Efficiency regarding storing HashMap values vs. referencing values.
24464621,1,0,0,java.util.HashMap,"I have a HashMap of ""buttons"" which can be clicked with the key being the location (x and y coordinates) of the button."
24468360,1,0,1,java.util.HashMap,Hot to port entrySet() method from HashMap to trove4j?
24469840,2,0,2,java.util.HashMap,"I am pretty sure it never ""hits the time equal to a value within the HashMap"" as you say."
24469840,2,0,2,java.util.HashMap,"But HashMap is not ThreadSafe, for thread safety there is ConcurrentHashMap."
24476054,1,0,0,java.util.HashMap,"I have a digraph data structure which uses list representation(HashMap<Vertex, ArrayList<Vertex>> ); source vertex as the key and an ArrayList of destination vertices as the value."
24476054,1,0,0,java.util.HashMap,"My problem is that after dfs is completed and when I iterate through the keys of the HashMap [graph.keySet()] , there are still few Vertices which are not labeled, But when I iterate though the explored set which is aHashSet<Vertex>, all the possible vertices are labeled(Accurately)."
24476054,1,0,0,java.util.HashMap,(I can only use the HashMap to retrieve the labels of the vertices) Note: I believe this is relevant to using mutable objects as keys in HashMaps.
24646540,2,1,0,java.util.HashMap,"MapDB has Data Pump for fast BTreeMap import, HashMap will be supported in MapDB 1.4 eventually."
24486318,1,0,4,java.util.HashMap,HashMap Object reference confusion.
24486318,1,0,4,java.util.HashMap,But I had some problems with my application so I tried to debug it to see how HashMap works practically.
24486318,1,0,4,java.util.HashMap,I changed the value of String s right before Iterating the HashMap and it still shows the old value.
24486318,1,0,4,java.util.HashMap,That shows to me that HashMap DOES NOT work with object reference?
24486785,2,1,2,java.util.HashMap,Their is nothing wrong with the HashMap.
24486785,2,1,2,java.util.HashMap,HashMap still contains the old string reference.
24486588,2,0,2,java.util.HashMap,Now you are making a list of addresses it can be HashMap or List of anything.
24487391,1,0,0,java.util.HashMap,Will ConcurrentHashMap with concurrencyLevel as 1 work as HashMap.
24487391,1,0,0,java.util.HashMap,If this is the case then can I say that it will work like HashMap in case of concurrency .i.e.
24487524,2,0,2,java.util.HashMap,"There's no guarantee 1 would be the actual value used, and rather than behaving as a regular HashMap it may mean it would be less efficient to use if you actually used it from more than 1 thread."
24487646,1,0,0,java.util.HashMap,"I use this universal validation method for my Lists, but in one method I use a HashMap."
24487646,1,0,0,java.util.HashMap,"With this HashMap I again want to check the same (not null, nor empty): code."
24488727,1,0,1,java.util.HashMap,If we get HashMap and HashTable we know Hashtable is synchronized on the table while access to the HashMap isn't.
24496949,1,0,4,java.util.HashMap,Benchmarking Java HashMap Get (JMH vs Looping).
24496949,1,0,4,java.util.HashMap,"L2 cache reference is roughly 7 nanoseconds, but the HashMap with 10 million Long keys and values well exceeds L2."
24496949,1,0,4,java.util.HashMap,I believe doing that run I had used a HashMap with far fewer entries and that the faster lookups did make sense.
24503325,1,0,1,java.util.HashMap,HashMap is not rehashed as per the default values.
24503325,1,0,1,java.util.HashMap,As per the Java docs  An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
24503325,1,0,1,java.util.HashMap,"As per the above, the threshold value for HashMap is 12(16 * 0.75) and HashMap should be rehashed while putting 13th element."
24503325,1,0,1,java.util.HashMap,I created an empty HashMap and put 16 elements in it.
24503764,2,1,5,java.util.HashMap,I found the answer in the source code of HashMap (Java 7).
24503764,2,1,5,java.util.HashMap,That actually means that the HashMap implementation changed from Java 6 to Java 7 (due to performance reasons).
24507239,2,1,0,java.util.HashMap,"First, I am guessing that this List<String> newList = new ArrayList<String>(); should be inside the loop you are updating your HashMap otherwise as @tobias_k mentioned you are inserting the same value to every key."
24506734,2,0,0,java.util.HashMap,"If you need to save the values for posterior treatment just replace for a HashMap, like below: code."
24510189,2,1,7,java.util.HashMap,Methods such as ArrayList.reserve(int) and HashMap(int) must allocate storage for future use.
24510412,1,0,0,java.util.HashMap,"I don't want to have to add a HashMap to my Java object, I'd like to figure out a way to get gson to convert it properly."
24510586,2,0,0,java.util.HashMap,You can put the object in an HashMap and after you can convert this to a List: code.
24514078,1,0,1,java.util.HashMap,"): http://i.stack.imgur.com/edChq.png The problem is that when I try to restore the table after a rotation for example, the last row is repeated throughout the table, even though the data being passed to addEmotionRow() from the HashMap is correct (different for each row): http://i.stack.imgur.com/7zfkr.png Here's how I save and restore the rows."
24514078,1,0,1,java.util.HashMap,To save I iterate through the table rows and put the data into a HashMap: code.
24515940,1,0,1,java.util.HashMap,get() method for HashMap.
24518633,2,0,0,java.util.HashMap,"Besides the alternatives of using explicit factory methods, you could pass in a HashMap for your parameters."
24520650,2,0,0,java.util.HashMap,"I don't know if it suits your needs, but (at least) a faster solution would be using a HashMap."
24522277,2,0,1,java.util.HashMap,"As you can see from the code of HashMap, it check for null first, because the hashcode not changed(length of name doesn't change), and then == is compared (as David say)."
24522088,2,0,0,java.util.HashMap,Also HashMap has an optimization where it performs reference equality before using equals().
24522858,2,0,0,java.util.HashMap,"David Wallace has provided simple to the point answer Mine is explaination of HashMap working in bit detail, So it might help others."
24522858,2,0,0,java.util.HashMap,In HashMap the objects are stored in groups called buckets (of keys).
24522858,2,0,0,java.util.HashMap,"When get() method is called, the HashMap locates the bucket with same hashCode of the given key, if found then on each of the object in bucket it first uses simple == equality check to see if given key and object in bucket are same objects, if not then equals() method equality check to find for exact object."
24522858,2,0,0,java.util.HashMap,"So, if the key object content is changed after a key (Dog object) is used to store (put) the key-value pair into the HashMap, it may not be possible find/retreive the original object (sometimes it may)."
24522858,2,0,0,java.util.HashMap,"Assuming only k1, k2 and k3 are put into the HashMap, when get(k3) is called (now having name ""1234"") will result in looking for a bucket that holds objects with hashCode 4."
24522858,2,0,0,java.util.HashMap,"Remember here the same object k3 which was used to put is changed, so the change reflects in HashMap also, it is the same one object."
24522858,2,0,0,java.util.HashMap,"Infact, HashSet uses HashMap behind the scene."
24522858,2,0,0,java.util.HashMap,Also while existing entry is retrieved (get() called) it has to compare with all the objects in the HashMap until it finds a match.
24522108,2,0,3,java.util.HashMap,"Since the HashMap has the exact object that you're looking for, it doesn't need to call equals to verify that the object is the right one."
24522108,2,0,3,java.util.HashMap,"When you get an object from a HashMap, first the hashCode is evaluated to find the right bucket."
24522108,2,0,3,java.util.HashMap,"In Java 7, the key part of the code, in the get method of HashMap is  code."
24522386,2,0,1,java.util.HashMap,The HashMap will always compare the objects using the hashCode before the equal method.
24522163,2,0,1,java.util.HashMap,See the java.util.HashMap.get method code.
24522657,2,0,1,java.util.HashMap,Another way would be using the HashMap Code :  code.
24527128,2,0,1,java.util.HashMap,"If all objects return the same hashcode, you'll have a collision for each object you add to the HashMap."
24529834,1,0,0,java.util.HashMap,"Map -> HashMap, etc.)."
24531457,1,0,0,java.util.HashMap,How to keep Java HashMap in final class from being removed when Android application is closed and rerun?
24534842,1,0,0,java.util.HashMap,Monitor HashMap update using thread.
24534842,1,0,0,java.util.HashMap,That thread needs to sleep and wake up every 10 minutes and check to see if the HashMap is updated.
24535079,2,0,0,java.util.HashMap,"Using the default HashMap implementation this wouldn't be very easy: you'd have to keep a copy of the HashMap as the thread last saw it, and then do a deep comparison between the last-seen state and the current state."
24535079,2,0,0,java.util.HashMap,What I would do is subclass HashMap and add a getLastModified method.
24535502,2,0,0,java.util.HashMap,"Use a HashMap, for each each item."
24540610,1,0,4,java.util.HashMap,"Are size(), put(), remove(), get() atomic in Java synchronized HashMap?"
24540610,1,0,4,java.util.HashMap,"I checked the Java API and the documentation of HashMap doesn't seem to mention which are atomic, so I'm not sure which are."
24540751,2,0,4,java.util.HashMap,A HashMap is not guaranteed to have atomic operations.
24548656,1,0,1,java.util.HashMap,unchecked call to add(E) as a member of the raw type ArrayList and HashMap.
24548656,1,0,1,java.util.HashMap,"HashMap uses generics, but the other objects JSONObject JSONArray don't."
24556366,1,0,0,java.util.HashMap,"""generateRec"" populates a HashMap<String, Set<String>> ""getRecById"" returns the value of Map populated by ""generateRec"" I'd like to persist the value of rec within the jvm and so do not want it to be garbage collected."
24558336,1,0,1,java.util.HashMap,I tried creating an AppletStub that contains a HashMap and setting the applet's applet stub and that works just fine.
24563149,2,0,3,java.util.HashMap,"You can search about ConcurrentHashMap, in the documentation, and you will see that the retrieval operations generally do not block, so they act just like in a normal HashMap."
24565996,1,0,0,java.util.HashMap,I want to load these objects into a HashMap.
24569786,1,0,0,java.util.HashMap,How to retrieve HashMap using JSTL forEach loop.
24572469,1,0,0,java.util.HashMap,Return HashMap using SOAP in java.
24574350,1,0,3,java.util.HashMap,Is it possible to make some specific keys of a HashMap read-only?
24574350,1,0,3,java.util.HashMap,"I provide my own methods to add, get and remove keys of this HashMap."
24574350,1,0,3,java.util.HashMap,EDIT: I know I can extend HashMap and override the put method.
24574350,1,0,3,java.util.HashMap,I thought there could be a way to merge an UnmodifiableMap in a HashMap such that the keys from UnmodifiableMap will remain read-only in the new HashMap and the other keys will have all operations supported on them.
24574726,2,0,0,java.util.HashMap,"One of these map will be an unmodifiable map and will contain your read-only keys, the other will be a regular HashMap."
24574539,2,0,6,java.util.HashMap,"As Andre mentions, you can inherit from HashMap or other Map implementations."
24581948,1,0,1,java.util.HashMap,"I am making a simple 2D java sidescroller, and right now, I have a HashMap where I have a class Location as the key, and Entity as the value."
24582406,2,1,1,java.util.HashMap,"Removing an object from a HashMap will do nothing to the thread, and it will continue to run unless you explicitly stop it."
24585347,2,0,2,java.util.HashMap,"For your task I recommend to introduce a new method to your adapter class, something like setData(ArrayList<HashMap<String, String>> newData) that will update underlying adapter's data structure and internally call notifyDataSetChanged after that."
24599136,1,0,2,java.util.HashMap,"I see a couple of issues with this naive approach:  HashMap is not thread safe, it might not be an issue since no two threads will ever operate on the same key, but I'm not sure."
24607619,2,0,1,java.util.HashMap,You should read the documentation of List and Map (respective HashMap) to see how to use them.
24613352,2,0,40,java.util.HashMap,"This is perhaps clearer in HashMap, which happened to be updated in Java 8."
24613352,2,0,40,java.util.HashMap,In the Java 7 HashMap you can find this: code.
24611909,1,0,0,java.util.HashMap,"Issue in NOT being able to supply HashMap as ""value"" for a given key in applicationContext.xml."
24611909,1,0,0,java.util.HashMap,"When tried,I am getting error saying cannot convert from String to HashMap."
24623205,1,0,0,java.util.HashMap,"ComboBoxes, TVs, and LVs require an ObservableArraylist, however, so how am I supposed to get that out of a HashMap?"
24625637,1,0,0,java.util.HashMap,Send HashMap with webservice and ksoap2.
24625637,1,0,0,java.util.HashMap,"Now, how can I send a HashMap (like below) to server ensemble?"
24633610,2,0,1,java.util.HashMap,"The Scala documentation claims ""effectively constant"" add and lookup times for its immutable HashMap."
24633610,2,0,1,java.util.HashMap,"I am, however, a bit skeptical of the Scala HashMap performance claims."
24633355,1,0,0,java.util.HashMap,How to copy the static one(A) hashmap values to static another(B) hashmap but if change any value in B Hashmap the should not be reflect in the A HashMap Example code.
24636089,1,0,0,java.util.HashMap,"I have a HashMap<String, LinkedHashMap<String,String> that is fairly long (not an issue) and I'm trying to make sure things look correct before I use the data inside it."
24637052,2,0,7,java.util.HashMap,"Your class doesn't implement #hashCode nor #equals - failing the implementation contract of HashMap (and HashSet too, since it's backed by HashMap internally)."
24637052,2,0,7,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Since your elements use Object.hashCode()/equals(), the value of the fields of the object aren't taken into account, the only thing that actually matters is the memory address of the object [since it's the only thing differentiating objects without explicit hashCode()/equals()]."
24640304,1,0,0,java.util.HashMap,Getting values for nested HashMap.
24643862,1,0,0,java.util.HashMap,"Right now I have a method that reads the excel file and places each row of data in an arraylist (ArrayList<HashMap<String,String>>) entry which has a hashmap to map the field name (column heading) and the value."
24645669,1,0,0,java.util.HashMap,Setting up timeouts for every entry that are present in a HashMap.
24645669,1,0,0,java.util.HashMap,I have a HashMap in which I want to do a specific action for an entry that is added in the HashMap after a time period.
24646644,1,0,0,java.util.HashMap,Difference between HashMap and List.
24646644,1,0,0,java.util.HashMap,"Now i tried to replace this List<NameValuePair> code with HashMap<String,String>  but i couldn't ."
24646644,1,0,0,java.util.HashMap,when i should use List and when i should use HashMap code.
24646722,2,0,2,java.util.HashMap,A HashMap (in Java an implementation of the java.util.Map interface and in theory referred to as hashtable) allows you access in O(1) while in a list of n pairs you have O(n) access time.
24646730,2,0,1,java.util.HashMap,"The constructors of UrlEncodedFormEntity (http://developer.android.com/reference/org/apache/http/client/entity/UrlEncodedFormEntity.html) only accept List as parameter so the compiler will refuse to use a HashMap (of any kind) Besides that, two Strings no not make a NameValuePair (http://developer.android.com/reference/org/apache/http/NameValuePair.html) ;)"
24647001,2,0,0,java.util.HashMap,extends NameValuePair> not HashMap and to create result using format() ie following algorithm code.
24646767,2,0,1,java.util.HashMap,HashMap is collection of key/value pair and one should use it when one wants to retrieve and insert values based on Key.
24648956,1,0,0,java.util.HashMap,HashMap in hibernate contains himself.
24651053,1,0,1,java.util.HashMap,It gives me error as follow java.lang.ClassCastException: java.util.HashMap cannot be cast to com.mongodb.DBObject My Json string look's as follow  code.
24651451,2,0,1,java.util.HashMap,"You have to create a new instance of the HashMap at every iteration, otherwise you will override the value for a given key, if an entry already exists"
24654620,2,0,0,java.util.HashMap,First you get a set of Entry-Objects out of your HashMap.
24654760,1,0,0,java.util.HashMap,Retrieve data from HashMap>>.
24654760,1,0,0,java.util.HashMap,"I have data that is currently being stored in a HashMap<String, ArrayList<HashMap<String, String>>>  I am looking to get a certain value of the ArrayList<HashMap<String, String>>> where the Key is of value ""FieldName1""."
24654760,1,0,0,java.util.HashMap,"edit*** The reason HashMap<String, ArrayList<HashMap<String, String>>> is used is because what I am trying to do is process an excel file."
24655373,2,0,0,java.util.HashMap,"I would say you can use the index of the ArrayList, which will return the HashMap object, and then compare the key and value of the one HashMap with the other one's key and value."
24658463,2,0,0,java.util.HashMap,You could create a new HashMap and save the latest version for each No inside that hashmap.
24658593,2,0,0,java.util.HashMap,"Heres one way Keep a  Map<String,Integer> lowestAmongMaps = new HashMap<String,Integer>(); In your for loop, add the lowest value for each key to this map.. basically, something like this code."
24663655,2,0,1,java.util.HashMap,"Just use: HashMap<Long, String> map = new HashMap<Long, ArrayList<String>>(); If you want to add something to it just code."
24663619,1,0,0,java.util.HashMap,Creating a HashMap of type .
24663619,1,0,0,java.util.HashMap,"I have another managed bean requirement to create a HashMap Application Scope but this time it needs to be of a type String, Object."
24663619,1,0,0,java.util.HashMap,"The code below works to load and store the HashMap, but I am having trouble retrieving the the data."
24668224,1,0,1,java.util.HashMap,How can I override HashMap's putAll to call put on each  pair?
24668224,1,0,1,java.util.HashMap,"I am trying to override PutAll in order to loop through the  pairs and call put on them, since I am using a custom HashMap object."
24670495,1,0,1,java.util.HashMap,"Like fitting the email strings with their ""email"" key in an array (or HashMap?)"
24671022,2,0,1,java.util.HashMap,Hash data structures - such as HashSet or HashMap - use the hash code for fast determining the bucket in which the objects are stored.
24673567,1,0,6,java.util.HashMap,Change to HashMap hash function in Java 8.
24676184,2,1,4,java.util.HashMap,As you noted: there is a significant performance improvement in HashMap in Java 8 as described in JEP-180.
24676184,2,1,4,java.util.HashMap,"Basically, if a hash chain goes over a certain size, the HashMap will (where possible) replace it with a binary tree."
24675694,1,0,0,java.util.HashMap,NullPointer exception when adding ObjectInputStream to a HashMap.
24675694,1,0,0,java.util.HashMap,Here is the HashMap and ObjectInputStream: code.
24675748,2,1,0,java.util.HashMap,Maybe change your declaration to:  private HashMap clientInputs= new  HashMap();
24678582,2,0,1,java.util.HashMap,You need to use the concrete class HashMap or one of the other implementations of Map as well.
24678587,2,0,0,java.util.HashMap,HashMap).
24678599,2,0,2,java.util.HashMap,"You will want to pick a concrete implementation of Map, like HashMap."
24678894,1,0,1,java.util.HashMap,I have multiple WebViews stored in a HashMap which I need to be able to show/hide at any time.
24682153,2,0,0,java.util.HashMap,"If that won't work, use a HashMap."
24682298,1,0,0,java.util.HashMap,What is the best way to convert a TreeSet to populate a HashMap?
24682298,1,0,0,java.util.HashMap,What is the best way to convert a TreeSet to populate a HashMap using Java ?
24684753,1,0,0,java.util.HashMap,"I have a Hashmap defined by ArrayList<HashMap<Spanned, String>>(); As you can see I have a Spanned String and a normal string that I want put into a listview in two columns as the following code should do."
24688472,1,0,0,java.util.HashMap,"I have a ArrayList<HashMap<String,String>> that I am using the toString() method on to store in a database."
24688472,1,0,0,java.util.HashMap,"Here is the method I want to use to convert a string to a HashMap<String, String>:  code."
24689826,2,1,1,java.util.HashMap,"In convertToStringToHashMap, when you put your data into HashMap, the old value will be replaced since they have same key for each records, such as comment, last_name, etc."
24689632,1,0,0,java.util.HashMap,"I am converting a string to a HashMap<String, String>."
24689632,1,0,0,java.util.HashMap,"This works fine on items that do not have any spaces, but as soon as I add a space to one of the values, it rearranges the order of the keys and values of the HashMap."
24689632,1,0,0,java.util.HashMap,Here is the method I use to convert the final string to a HashMap:  code.
24689785,1,0,0,java.util.HashMap,"In the Following Java Program I am storing 3 threads in a HashMap, I have created 3 objects of Th class which is extended from Class Thread (I have tried by Implementing the Runnable but it is also not working!"
24690343,2,0,0,java.util.HashMap,You can also try similar solution as below:- import java.util.HashMap; import java.util.Random; public class TestingThreads { code. }
24693820,1,0,0,java.util.HashMap,Java : How to sort values of a HashMap with generic Key and Value?
24695397,1,0,0,java.util.HashMap,"The above object representation deserializes the JSON response and represent as a Key-Value pair in HashMap but issue is representing ""attributes"" and ""Address"" subdocuments."
24695397,1,0,0,java.util.HashMap,"In the above HashMap their value is being represented as the respective JSON subdocument whereas I would prefer to have Attributes subdocument gets mapped to an Attribute object and similarly Address subdocument mapped to an Address object in the HashMap, something like: code."
28938991,2,0,0,java.util.HashMap,"Do not forgot the following initialization of JAXBContext : HashMap<String, Object> props = new HashMap<String, Object>(); props.put(JAXBRIContext.XMLACCESSORFACTORY_SUPPORT, true); JAXBContext jaxbContext = JAXBContext.newInstance(new Class[] { clazz }, props);  The 2nd solution is to override the AnnotationReader of JAXB, that way you can return the annotations you want, depending on the Class, Field, etc..."
28938991,2,0,0,java.util.HashMap,"That is done that way :  HashMap<String, Object> props = new HashMap<String, Object>(); props.put(JAXBRIContext.ANNOTATION_READER, new CustomAnnotationReader()); JAXBContext jaxbContext = JAXBContext.newInstance(new Class[] { clazz }, props); RuntimeInlineAnnotationReader is final and cannot be overriden... so you will have to copy the code."
24705242,2,0,1,java.util.HashMap,You're adding two new entries to your HashMap.
24705242,2,0,1,java.util.HashMap,"It's best to stick with the convention because the next guy is going to say.. What in the dancing f@!k is this?, when they're trying to wonder why your HashMap implements method chaining."
24709978,2,1,0,java.util.HashMap,"Apart from this, if you are allowed to collections then I would   suggest you to use HashMap instead atleast you can rid of this ugly   if-else"
24710530,1,0,1,java.util.HashMap,I have a graph which stores it's edges using a HashMap as follows : code.
24710921,2,0,0,java.util.HashMap,Instead of Map myTasks = new HashMap(); with which you don't need to typecast.
24711822,1,0,0,java.util.HashMap,"These instances are referenced from one instance of ""java.util.HashMap$Entry[]"", loaded by """""
24718995,1,0,0,java.util.HashMap,Iterating over HashMap of HashMap.
24718995,1,0,0,java.util.HashMap,where:     HashMap wordCountforFile = new HashMap(); code.
24720471,2,0,1,java.util.HashMap,But this is not always safe because it can cause ClassCastException if an entry is not of type String & HashMap.
24719004,2,1,3,java.util.HashMap,This is wrong because you didn't specify the generics for the HashMap temp.
24723993,1,0,2,java.util.HashMap,I then search through the HashMap using; code.
24724030,2,0,2,java.util.HashMap,"Why not just use a single HashMap<String,ArrayList<Position>> that maps the words to the occurrences?"
24729843,2,0,3,java.util.HashMap,"If I understand your question, the issue is you can't chain the HashMap put, code."
24729851,2,0,0,java.util.HashMap,"Reason, HashMap's put method signature is as below code."
24729851,2,0,0,java.util.HashMap,You are setting null to setExtras where as it is expecting a HashMap
24730106,2,0,2,java.util.HashMap,"The HashMap relies on it to spread the entries evenly across buckets, otherwise it degrades into a linked list."
24731785,2,0,0,java.util.HashMap,"I would use SortedMap instead of HashMap and check if tailMap(""discount"").firstKey().stratsWith(""discount"")"
24731572,1,0,1,java.util.HashMap,Basically each animal would have to 'register' itself by entering it's name and deserializer (implements Deserializer interface) object into a HashMap.
24733840,1,0,0,java.util.HashMap,"However in this class I want an instance of a HashMap<int, Greeting> which stores all my object of type Greeting."
24736320,1,0,1,java.util.HashMap,HashMap: Find next lower key.
24736320,1,0,1,java.util.HashMap,I am currently storing marshalling libraries for different client versions in a HashMap.
24786096,2,0,0,java.util.HashMap,(I used linkedHashMap and NOT HashMap to keep the ordering).
24741815,1,0,1,java.util.HashMap,java: convert HashMap with dynamic keys to Bean.
24741815,1,0,1,java.util.HashMap,"and the JavaBean has a property of type HashMap, where value_1 is mapped to Bean1 and some analogous value from input map is mapped to Bean2."
24742311,1,0,0,java.util.HashMap,"( Creating a HashMap of type <String , Object> ) I have defined a class  code."
24742690,2,1,5,java.util.HashMap,"You might get values in a single method, cache them into HashMap(s) and get them from the map when you need."
24742878,1,0,1,java.util.HashMap,"I'm trying to understand java.util.Collection and java.util.Map a little deeper but I have some doubts about HashSet funcionality: In the documentation, it says: This class implements the Set interface, backed by a hash table (actually a HashMap instance)."
24743013,2,0,0,java.util.HashMap,Each value that is added to the HashSet is used as a key to the backing HashMap with this PRESENT object as the value.
24744200,2,1,4,java.util.HashMap,"When you put to your HashMap, it doesn't add a copy of your 2D ArrayList, it adds the reference to it."
24747149,2,0,0,java.util.HashMap,"That being said, your question has already an answer in How to iterate an ArrayList inside a HashMap using JSTL?."
24746498,2,1,0,java.util.HashMap,Use a HashMap as suggested by PoByBolek and Starfire1337.
24755224,2,1,2,java.util.HashMap,"As far as space complexity goes, no additional space (beyond the Iterator) is required by retainAll, but your invocation is actually quite expensive space-wise as you allocate two new HashSet implementations which are actually fully fledged HashMap."
24762397,1,0,0,java.util.HashMap,I have some HashMap: code.
24763197,2,1,4,java.util.HashMap,"You need to use specific HashMap<SearchConfig, SearchDataEntity> or HashMap<SearchConfig, String> in your RPC calls."
24763197,2,1,4,java.util.HashMap,"On a separate note, the best practice is to use HashMap instead of Map for RPC calls."
24765619,2,0,0,java.util.HashMap,"In case you were wondering, a HashMap is a type of map that used the int hashCode() method to quicken key value access, but that's a more high level topic that's irrelevant to the issue at hand."
24769151,2,0,0,java.util.HashMap,"Java has built in map classes, the most likely for your purposes being java.util.HashMap."
24768694,1,0,0,java.util.HashMap,How can I create a HashMap that dynamically calls other Java classes?
24768694,1,0,0,java.util.HashMap,"I am attempting to create a HashMap<Integer, Class>, and am not being successful."
24769661,2,0,2,java.util.HashMap,"Per http://processingjs.org/reference/, Processing.js doesn't support java.util.Collections, only (most of) the base language plus a few things out of the Collections library such as ArrayList and HashMap."
24769926,2,0,0,java.util.HashMap,Fetch the HashMap in your web service class and pass on the same as method argument to your non Java EE classes.
24771793,1,0,4,java.util.HashMap,The final output of the code is produced from a keySet() of some HashMap.
24771793,1,0,4,java.util.HashMap,Just in the beginning of 1.7's HashMap.java: code.
24831873,2,1,0,java.util.HashMap,"A quick look through the sources showed that in 1.7, HashMap indeed has non-deterministic behavior, and each instance seeds the hashes of the elements with some random value."
24771938,1,0,0,java.util.HashMap,"I need to parse it in a way with which I can receive the value of clid by knowing the value of client_nickname, for example, with something like clid.get(""Alessandro"") to receive 1, and clid.get(""Braden"") to receive 2, possibly with a HashMap<String, Integer>."
24773541,2,0,1,java.util.HashMap,"You can use a HashMap<String, Integer> to do what you want."
24774964,2,0,0,java.util.HashMap,"a container for mappings from integer to character: In java there's lots of map implementations, I propose the HashMap, used like this: code."
24775234,2,0,0,java.util.HashMap,"For arbitrary indexing, you would need to use a Java HashMap: code."
24775719,2,0,2,java.util.HashMap,"If they do not form a contiguous range (large, empty spaces), use a Map (if you need some kind of sorting and consistent ordering, use TreeMap; use HashMap otherwise)  In the second case, you are creating an array and initializing it at the same time, and then iterating its elements."
24778264,1,0,1,java.util.HashMap,How to split big HashMap into smaller ones.
24778264,1,0,1,java.util.HashMap,"One HashMap<String, Integer> has size of 50,000 entry; moreover, it is not fit to the memory at once."
24778264,1,0,1,java.util.HashMap,Splitting the Big HashMap will add value to the old application and future pipeline system.
24778264,1,0,1,java.util.HashMap,"Actually, splitting operation is now mondetary for the pipeline system; however, for old application, I have started to read how to fine-tune HashMap internal structure."
24779013,2,0,0,java.util.HashMap,"If you have a HashMap<String, Integer> that you are using to represent word frequencies, there should be no problem representing 50,000 entries."
24779013,2,0,0,java.util.HashMap,"(If my mental arithmetic is correct, a HashMap has an overhead of something like 8 words per entry ... plus the space occupied by the key and value objects."
24779013,2,0,0,java.util.HashMap,"But to answer your Question, there is no method or class in the Java standard library for splitting a HashMap into smaller HashMaps."
24779401,1,0,1,java.util.HashMap,Here is the location of my HashMap :  code.
24788547,2,0,1,java.util.HashMap,Use a HashMap: code.
24790497,1,0,1,java.util.HashMap,Is using HashMap to count map by iteratively updating the values a good practice?
24790606,2,1,3,java.util.HashMap,For most cases HashMap is adequate.
24796299,1,0,0,java.util.HashMap,Java HashMap containsKey function.
24796299,1,0,0,java.util.HashMap,Somebody please tell me the function containsKey() of HashMap that how does it work internally.
24805133,2,1,0,java.util.HashMap,You could use a HashMap where the key is Preference#type and the value is List<Preference> code.
24805664,1,0,0,java.util.HashMap,How to get the first element of HashMap.
24805664,1,0,0,java.util.HashMap,"The idea is that there is HashMap that is filled with a loop ""for"" with data from the database."
24805664,1,0,0,java.util.HashMap,"Further, this parameter (HashMap) is passed to listViewContent then created adapter and eventually fills the listView."
24805664,1,0,0,java.util.HashMap,Here is my code blocks:     HashMap block code.
24805703,2,0,1,java.util.HashMap,"HashMap doesn't have a concept of ""first""."
24807067,2,1,1,java.util.HashMap,"For example you can use a HashMap<Integer, Date> (or store milliseconds instead of date)."
24809159,1,0,1,java.util.HashMap,Remove from HashMap if a key is not in the list.
24811094,2,0,0,java.util.HashMap,The simplest solution is to use another structure such as LinkedList which (only if you are interested in serial accesses) or a HashMap which may have a high insertion cost.
24814634,2,1,18,java.util.HashMap,Have a look at the implementation of AbstractMap which is used by classes such as HashMap: code.
24814634,2,1,18,java.util.HashMap,Comparing two different types of Maps toString fails miserably when comparing a TreeMap and HashMap though equals does compare contents correctly.
24816930,2,0,0,java.util.HashMap,How about a class and a private static HashMap?
24821565,1,0,0,java.util.HashMap,How to map dynamic json value to HashMap in Pojo.
24824887,1,0,0,java.util.HashMap,Scala HashMap containsValue method.
24824979,2,0,0,java.util.HashMap,containsValue is never going to be an efficient operation as it cannot use any of the special magic in HashMap.
24828673,2,0,1,java.util.HashMap,"Thankfully, there's a class that you can use that does exactly what you want: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html For some tutorial, read : http://www.tutorialspoint.com/java/java_hashmap_class.htm"
24828650,2,0,2,java.util.HashMap,"What you need is a Map implementation, like HashMap."
24832078,2,0,0,java.util.HashMap,(Passed HashMap Instead of View)
24834939,2,0,0,java.util.HashMap,"P.S: This is my first response, sorry if its not pretty Edit: If you want to keep the order when outputting then construct a TreeMap instead of a HashMap."
24836649,1,0,0,java.util.HashMap,How to store a HashMap in a database whose values are Arrays?
24836649,1,0,0,java.util.HashMap,I'm trying to store a HashMap that will contain Arrays as values.
24837160,2,1,1,java.util.HashMap,HashMap is key => value.
24845926,1,0,0,java.util.HashMap,I even used ArrayList as keys to HashMap and succeeded in accomplishing my task.
24846579,1,0,0,java.util.HashMap,I want to add a HashMap to each ArrayList in a loop.
24848489,2,0,0,java.util.HashMap,I also don't think you need a HashMap.
24848347,2,0,2,java.util.HashMap,You don't need a HashMap for this.
24848757,1,0,1,java.util.HashMap,"That HashMap has a small size, also if the update function invokes every 1000 ms we can see the above exception being thrown."
24850765,2,0,1,java.util.HashMap,"You create just one object of ArrayList and put it multiply times into the HashMap so you have many references to the same object in your HashMap, but you want more than one ArrayList object so you have to create them in your loop."
24852451,2,0,1,java.util.HashMap,Create a static HashMap and store you mapping there.
24852854,1,0,1,java.util.HashMap,Printing a HashMap to Excel using jxl API.
24852854,1,0,1,java.util.HashMap,I want to print a HashMap onto an Excel Sheet.
24852854,1,0,1,java.util.HashMap,"However, I am unable to print all the fields of the HashMap."
24868393,2,0,0,java.util.HashMap,There is a 1 in 16 chance that it will print Jenny because a newly crated HashMap has a default size of 16.
24858711,2,0,1,java.util.HashMap,A possible explanation (taking one possible implementation of HashMap): The HashMap class in its internal implementation puts objects (keys) in different buckets based on their hashcode.
24858711,2,0,1,java.util.HashMap,"Only in this case it is guaranteed the proper, expected and consistent working of HashMap."
24860831,2,0,1,java.util.HashMap,Put your History objects into HashMap: code.
24863281,1,0,2,java.util.HashMap,Casting HashMap Key Iterator to AbstractIterator.
24866075,1,0,0,java.util.HashMap,"HashMap) in dump, it prints all the elements of that object along with their full class name, type, modifiers and value (if set)."
24866075,1,0,0,java.util.HashMap,The dump generated if we pass a HashMap to dump is attached: code.
24868058,1,0,0,java.util.HashMap,Render a HashMap from JSP and display in a Table.
24868058,1,0,0,java.util.HashMap,I have called that class and exposed the HashMap that I want in my servlet class.
24874256,1,0,2,java.util.HashMap,"This returns me a HashMap(Date, Long) with the following:     TODAY, 2     YESTERDAY, 1 I actually want the following result:     TODAY, 66%     YESTERDAY, 100% Thanks in advance."
24878041,2,1,2,java.util.HashMap,"HashMap<String,String> implies your object contains only top level string properties like: code."
24886389,2,0,0,java.util.HashMap,"It isn't a dynamic Bean, but I would use a HashMap: code."
24887825,1,0,0,java.util.HashMap,HashMap UUID or String as key?
24887908,2,1,1,java.util.HashMap,"Storing UUID itself via HashMap<UUID, MyObject> will conserve the space compared to HashMap<String, MyObject>."
24889698,1,0,1,java.util.HashMap,I have recently looked into the source code of HashSet Collection class and found out that It is backed by HashMap.
24889698,1,0,1,java.util.HashMap,HashSet is delegating all its method calls to HashMap.
24892149,2,0,1,java.util.HashMap,"As long as params and names don't contain spaces - you can get all of them, split at ""="" key and add key/value pairs to the HashMap."
24896577,1,0,1,java.util.HashMap,"HashMap value and variable value match, but are not considered equal."
24896577,1,0,1,java.util.HashMap,"I have a method that is called every time a player right-clicks a chest (Minecraft item), and if this block's location matches one of the values in the HashMap, it should check to see that the player's username matches the key in the HashMap."
24896577,1,0,1,java.util.HashMap,HashMap and block (b) location values (what the `println()'s output): HashMap value: code.
24896577,1,0,1,java.util.HashMap,HashMap from the DeathChestManager class: code.
24897986,1,0,0,java.util.HashMap,Store Long[] and Integer[] in the same HashMap using Generics.
24897986,1,0,0,java.util.HashMap,I need to store arrays of different types of numerical data in a HashMap.
24897986,1,0,0,java.util.HashMap,"I have tried to store these in a HashMap<String,Variable<Number>> map using: code."
24898016,2,0,4,java.util.HashMap,"With a HashMap<String,Variable<?"
24900645,2,0,0,java.util.HashMap,From the Oracle Java documentation (http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html)  Note that this implementation is not synchronized.
24901004,2,0,1,java.util.HashMap,Are you interested to know why HashMap is not thread-safe?
24901004,2,0,1,java.util.HashMap,"For latter question (which is the one you explicitly asked in the question), here is the reason: By inspecting HashMap's source code, there is a transfer() method which is responsible to move the entries from the old table to the new one: code."
24901004,2,0,1,java.util.HashMap,"Due to HashMap have no gaurantee on the order of iteration, implementation do no need to maintain any order."
24900705,1,0,0,java.util.HashMap,"Android, Mandrill and Parse.com: Java ClassCastException: HashMap cannot be cast to a class."
24900705,1,0,0,java.util.HashMap,Nowhere does there seem to have been a HashMap used.
24900705,1,0,0,java.util.HashMap,Has Mandrill returned a HashMap?
24903134,1,0,0,java.util.HashMap,Time expended for HashMap get() is higher first time.
24903134,1,0,0,java.util.HashMap,I have been doing some performance checks with HashMap on Java.
24911179,1,0,0,java.util.HashMap,I want it to extend a HashMap.
24913831,1,0,0,java.util.HashMap,Is there an efficient way to check if a key stored in a HashMap is equal to a test key when the keys are `String[]`?
24917053,1,0,0,java.util.HashMap,collecting HashMap> java 8.
24917053,1,0,0,java.util.HashMap,I want to be able to convert a List to a HashMap where the key is the elementName and the values is a list of something random (in this case its the Element Name).
27429258,2,0,0,java.util.HashMap,"To get the filename of the uploaded file   Map files = new HashMap(); session.parseBody(files); Log.d(TAG, files.toString());   Then you can access the file"
24923787,1,0,1,java.util.HashMap,Random access for HashMap keys.
24923787,1,0,1,java.util.HashMap,I need to randomly access keys in a HashMap.
24923787,1,0,1,java.util.HashMap,"Right now, I am using Set's toArray() method on the Set that HashMap's keySet() returns, and casting it as a String[] (my keys are Strings)."
24923835,2,1,1,java.util.HashMap,"There is no facility in a HashMap to return an entry without knowing the key so, if you want to use only that class, what you have is probably as good a solution as any."
24923835,2,1,1,java.util.HashMap,Keep in mind however that you're not actually restricted to using a HashMap.
24923835,2,1,1,java.util.HashMap,"If you're going to be reading this collection far more often than writing it, you can create your own class which contains both a HashMap of the mappings and a different collection of the keys that allows random access (like a Vector)."
24923835,2,1,1,java.util.HashMap,"If you wanted to go the whole hog, you could have your current HashMap, a Vector of the keys, and yet another HashMap mapping the keys to the vector indexes."
24923835,2,1,1,java.util.HashMap,"You already have the code for creating the array, you just have to create your wrapper class which provides whatever you need from a HashMap (and simply passes most calls through to the HashMap) plus one extra function to get a random key (using the array)."
24925591,1,0,0,java.util.HashMap,I have a HashMap where i store last read time of multiple sources which i needs to be backed up to a file.
24930086,1,0,2,java.util.HashMap,"From what I'v read I see:  Whenever two objects are the same in terms of equals() method, their hash code must be the same Whenever two objects are not the same in terms of equals() method, we have no guarantee for theid hashcode(), i.e. it might be the same, it might be different when we use HashMap.put(key, value) HashMap compares objects by their equal() method."
24930235,2,1,2,java.util.HashMap,Your point #3 comes too soon: HashMap compares for equality only when the hashCode is the same.
24930235,2,1,2,java.util.HashMap,HashMap checks hash code first to determine the placement of the object in a bucket.
24930235,2,1,2,java.util.HashMap,"The regular HashMap keeps only items with identical hash codes (modulo a certain number) in the same bucket, and checks equality only for objects within the same bucket."
24930218,1,0,0,java.util.HashMap,Attempt 2: Since I am not using a primitive type in HashMap tried below approach.
24936799,2,0,0,java.util.HashMap,"In general(Not only for days), use a HashMap to store the condition as key and selection as value as below, code."
24938461,1,0,0,java.util.HashMap,"I have multiple clips which should be played, and to save RAM, I decided to store them in HashMap for later use."
24939965,1,0,0,java.util.HashMap,"The reason I'm maintaining two maps is that I dispatch a task to different servers, and I maintain the original task object in one HashMap<String, Task>, and at the same time I manage the response status in another HashMap<String, HashMap<InetAddress, TaskResponse>."
24942172,1,0,1,java.util.HashMap,I know that HashMap doesn’t allow duplicate keys (It does allow duplicate values).
24942310,2,1,3,java.util.HashMap,"In each iteration of the while loop, the code is creating a new HashMap instance and filling it with only one entry that maps a String key (""AllSongs"") to the Song object."
24942310,2,1,3,java.util.HashMap,"In this case, using a HashMap seems redundant."
24942310,2,1,3,java.util.HashMap,"The key concept here is that there are many HashMap (each iteration creates one), as opposed to having a ""global"" HashMap."
24944716,1,0,0,java.util.HashMap,A HashMap is supposed to be used to pass params and I keep getting a NullPointerException rather I use null or just an empty HashMap.
24944716,1,0,0,java.util.HashMap,But there's nothing to put in the HashMap.
24944906,1,0,0,java.util.HashMap,"So then I tried using a hashmap like this, HashMap<String, Object> map = new HashMap<String, Object>(); Which I could then do map.get(""1"") but then now I can't call any of the methods for the class in question."
24947796,2,0,0,java.util.HashMap,"You could use a hashmap: HashMap mySet = new HashMap() and then fill it with the appropriate sets: (new Integer(1), ""January"") (new Integer(2), ""January"") (new Integer(3), ""January"") (new Integer(4), ""April"") (new Integer(5), ""April"") then your code looks like: code."
24947796,2,0,0,java.util.HashMap,"You can also make a function which populates your HashMap, thereby making it easy to maintain."
24956614,2,1,1,java.util.HashMap,One possibility is that you dont use HashMap or HashSet  but TreeMap and TreeSet.
24958638,2,0,1,java.util.HashMap,"Because HashMap#values() return a java.util.Collection and you cant cast Collection into ArrayList, thus you get ClassCastException."
24958638,2,0,1,java.util.HashMap,where as in case of ArrayList(HashMap.values()) ArrayList constructor takes Collection as an argument.
24958638,2,0,1,java.util.HashMap,Thus you wont get ClassCastException when you pass HashMap.values() as an argument to ArrayList.
24958638,2,0,1,java.util.HashMap,"HashMap#values(): check the return type in the source, as ask yourself, can a java.util.Collection be casted into java.util.ArrayList ??"
24959693,1,0,0,java.util.HashMap,"Because of some imports i can't serialize my Response (its needed for GWT), so i have to manually make some HashMap (which can be serialized) and fill all fields from deep structure."
24960979,2,0,1,java.util.HashMap,A HashMap only stores one value per key (which is unique) the old value is overwritten with the new one.
24960988,2,0,0,java.util.HashMap,"No, HashMap does not store multiple values for the same key."
24960990,2,0,0,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put(K,%20V)"
24964996,1,0,0,java.util.HashMap,Read a CSV file and create a HashMap.
24965070,2,1,2,java.util.HashMap,Yes if you have one CSV file has a mapping of the model number to something you can load that into a HashMap with the key being the model number and the value whatever it is you want to show instead.
24965070,2,1,2,java.util.HashMap,To initialize a HashMap; code.
24965070,2,1,2,java.util.HashMap,For more info on HashMap; http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
24967783,1,0,0,java.util.HashMap,"Now when I approached this problem first, I had the idea to create a HashMap<String, String[]> that would map the name of the command to an array of the argument types."
24974504,2,0,1,java.util.HashMap,"One possible solution, create a Map, such as a HashMap<Icon, Icon>."
25065395,2,0,0,java.util.HashMap,I would suggest using java.util.properties which loads properties from a file into a HashMap and allows you to pull values.
24982487,1,0,3,java.util.HashMap,I'm currently working with the jedis Database library and a HashMap.
24982487,1,0,3,java.util.HashMap,I'm in need for a method to deserialize a class from a HashMap.
24985822,2,0,0,java.util.HashMap,Seems like a good use for HashMap.
24985925,1,0,0,java.util.HashMap,In my first step I am attempting to create a HashMap with strings of colors as the key and their corresponding android color as the value.
24986926,2,1,0,java.util.HashMap,The point of a HashMap is you can store a key of any value without having to create a huge array.
24986926,2,1,0,java.util.HashMap,"With a HashMap, it will use considerably less memory to store a key like Integer.MAX_VALUE."
25006141,2,0,0,java.util.HashMap,"After that, I think you can depend on the in-memory data structures such as HashMap."
24992050,1,0,0,java.util.HashMap,Is it good practice to save them into an HashMap?
24992701,1,0,3,java.util.HashMap,I want a HashMap where the keys are ordered in the way I added them.
24992789,2,0,4,java.util.HashMap,You can emulate the behaviour you need by extending HashMap and using your own List for the iteration order.
24992837,1,0,0,java.util.HashMap,I have a HashMap> and I would like to store its values in a mysql table.
24992837,1,0,0,java.util.HashMap,"Each key in the HashMap corresponds to a column of the table, while the ArrayList contains the values for that column."
24993621,2,0,0,java.util.HashMap,"The Map (and HashMap) contract for the keyset is :  If the map is modified while an iteration over the set is in progress   (except through the iterator's own remove operation), the results of   the iteration are undefined."
24993471,2,0,0,java.util.HashMap,"HashMap The implementation of HashMap keeps track of structural modifications to the Map:  The number of times this HashMap has been structurally modified Structural modifications are those that change the number of mappings in the HashMap or otherwise modify its internal structure (e.g., rehash)."
24993471,2,0,0,java.util.HashMap,This field is used to make iterators on Collection-views of the HashMap fail-fast.
24997868,1,0,0,java.util.HashMap,"The work thread saves the socket of the user in a HashMap<id,socket> in a class called ConnectionManager and then listens in an infinite loop for further messages from the client."
25000655,1,0,1,java.util.HashMap,"I have the attributes and values in a HashMap(attributes, value) But since each node is representing one object, the call to AttributeLabelProvider (implements ITableLabelProvider) method getColumnText(Object element, int columnIndex) only happens once."
25000655,1,0,1,java.util.HashMap,* here I can only pass either keySet() or values() because my attributes are in a HashMap.
25002020,2,0,1,java.util.HashMap,"HashMap<String, Object> map = new HashMap <String, Object> (); will give you a very simple map with a key type of String and Value type of Object."
25002101,2,1,2,java.util.HashMap,"If no, HashMap is good solution."
25002101,2,1,2,java.util.HashMap,"Just rembember to set low capacity value in your HashMap:  Thus, it's very important not to set the initial capacity too high (or   the load factor too low) if iteration performance is important."
25002101,2,1,2,java.util.HashMap,It combines high performance of HashMap with being thread-safe.
25002101,2,1,2,java.util.HashMap,Edit: Here is an interesting comparison of different HashMap implementations.
25002101,2,1,2,java.util.HashMap,"It seems, that, at least for primitive types, there are faster alternatives than built-in HashMap."
25002229,2,0,2,java.util.HashMap,"If you want a compact Map you can use the Map map = Collections.synchronizedMap(new HashMap<>()); if you don't need thread safety, drop the Collections.synchronizedMap  And if you want the collection to use as little memory as possible you can do something like this."
25002229,2,0,2,java.util.HashMap,"Map map = new HashMap<>(4, 1.0f); This will store 4 key/values (or more) using a minimum of memory."
25002229,2,0,2,java.util.HashMap,It will be about half the size of an empty standard HashMap.
25003745,1,0,1,java.util.HashMap,how to compare two HashMap>.
25003745,1,0,1,java.util.HashMap,"i want to compare data read from an excel file(key is column 1, value is column 2) that is being put into a HashMap with data obtained from SQL query."
25003745,1,0,1,java.util.HashMap,"At first i did it using HashMap< String, String> because i had to compare only < key, value> pairs, but now i have to compare < key, list> and i am a little stuck."
25003745,1,0,1,java.util.HashMap,"When i run the excel reader, it puts the values ""blue, yellow"" very nice under ""car"" key in the HashMap."
25003745,1,0,1,java.util.HashMap,"Last question: how can i improve the code to compare two HashMap(String, List< String>), or how can i do this better step by step?"
25016679,2,0,1,java.util.HashMap,"You could also use a HashMap<CustomClassKey, CustomClass>, where CustomClassKey is a simple class containing the two fields identifying your CustomClass instances."
25017192,2,0,0,java.util.HashMap,"Or, per the HashMap and LinkedHashMap Javadocs -   if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException."
25020987,2,0,0,java.util.HashMap,"This is a more complicated variant, created using TreeMap(a HashMap which order the keys)."
25023585,2,0,1,java.util.HashMap,The hash code is taken modulo the array length to generate an in-bounds index (HashMap in particular first applies a secondary hash function to the given hash code to protect against poorly written hash functions).
25025569,2,0,0,java.util.HashMap,I'm assuming they simply want to make it more clear to the user of LinkedHashMap that it implements Map (otherwise the user would have to look at the declaration of HashMap to find this out).
25025935,1,0,0,java.util.HashMap,HashMap of Retrofit Classes with Dagger.
25025935,1,0,0,java.util.HashMap,"In my app I have a HashMap to store built classes (like a cache) for RetroFit, but now I'm moving to DI with Dagger and I'd like to know how can I achieve the same behaviour."
25029106,2,1,2,java.util.HashMap,"The compiler can infer the type parameters from the left side of the assignment and you can skip them altogether while creating the object HashMap<String, HashMap<String, Child>> parentMap = new HashMap<>();  In older versions of Java, you could resord to Guava's Maps class and its newHashMap method."
25029106,2,1,2,java.util.HashMap,"HashMap<String, HashMap<String, Child>> parentMap = Maps.newHashMap(); Another thing you could possibly do is create a type that implements a certain specification of the generic HashMap."
25029106,2,1,2,java.util.HashMap,"Addendum You should also note that you're effectively binding your API to a specific implementation of the Map interface (HashMap), or even worse, in case of introducing the new class (HashMapStringChild), to a specific, non-standard implementation."
25029106,2,1,2,java.util.HashMap,"Then you could keep your reference types general and use HashMap<String, Child>, TreeMap<String, Child>, HashMapStringChild or literally any other implementation mapping a String to a Child interchangeably, while keeping the code short."
25032776,2,0,0,java.util.HashMap,You can create some DTO instead of HashMap.
25032778,2,1,0,java.util.HashMap,"EDIT2: changed Map<String, String> hashMap to HashMap<String, String> hashMap EDIT3: changed toArray call EDIT4: Here is a whole example: code."
25032813,1,0,0,java.util.HashMap,ArrayList with HashMap Vs ArrayList with Class.
25032813,1,0,0,java.util.HashMap,and Where HashMap structure is  code.
25035161,2,1,1,java.util.HashMap,There are couple of ways: Way-1: Create instance variable (class-level) of HashMap contact and then you can use it anywhere within class inclusing onCreate and getContacts method.
25037383,1,0,1,java.util.HashMap,"I've resorted to using a HashMap, since its .contains() method is fast."
25037383,1,0,1,java.util.HashMap,"I was thinking that once the HashMap gets more than N keys or a key gets more than N entries, I could write it somewhere and clear it."
25041315,1,0,0,java.util.HashMap,I have implemented a method to split HashMap type container into same size of chunks.
25043102,2,1,0,java.util.HashMap,The other problem is that you can't simply create new HashMap<>() to fill your array (what if your map isn't a HashMap ?
25042226,2,0,0,java.util.HashMap,HashSet internally uses HashMap and HashMap is an implementation of hashtable data-structure.
25044819,2,0,1,java.util.HashMap,"In the first iteration, you should fill a HashMap of the symptoms hashed against the number of occurrences in the ArrayList."
25044819,2,0,1,java.util.HashMap,"However, you may want to use a thread-safe HashMap data structure if you are reading and writing to the HashMap from multiple threads."
25049584,1,0,0,java.util.HashMap,Can I use String[] as HashMap values in Java?
25049584,1,0,0,java.util.HashMap,I want to create a HashMap whose values are String[]'s.
25049584,1,0,0,java.util.HashMap,Each three-value set constitutes a HashMap value (String[]).
25052077,1,0,1,java.util.HashMap,It's working but not the HashMap.
25052077,1,0,1,java.util.HashMap,Well I dunno about that but I think that would work if the HashMap is configured.
25052077,1,0,1,java.util.HashMap,The original HashMap that is in my code is connected to a database.
25052077,1,0,1,java.util.HashMap,The reason why the buttons are disabled is because they don't have names which should come from the HashMap and since I don't know how to work it out it'll be like that.
25055619,2,0,2,java.util.HashMap,Then you can use users as an ArrayList as you are getting an Object by default from the HashMap.
25067429,2,1,3,java.util.HashMap,"Approach: HashMap You can use a HashMap to store the String, Integer pair (e.g."
25071246,2,0,0,java.util.HashMap,"Update: If those are your markers, consider keeping them in a list or something like that, a HashMap of (title,position) elements for instance."
25071948,1,0,1,java.util.HashMap,HashMap and Hashcode.
25071948,1,0,1,java.util.HashMap,"Ideally, as per the definition, HashMap does not allow duplicate keys; but I couldn't understand the following logic."
25072367,2,0,1,java.util.HashMap,HashMap isn't working correctly because you modify values that affect the results of equals and hashCode.
29732601,2,1,1,java.util.HashMap,The easiest and also for me most readable solution would be to create an wrapper/container Class which contains a HashMap (key/value) like this: code.
25079093,1,0,3,java.util.HashMap,Lock writes to HashMap.
25079093,1,0,3,java.util.HashMap,I have a HashMap which is being updated asynchronously.
25079445,2,0,0,java.util.HashMap,What about wrapping your HashMap into a class where you put some kind of  code.
25079323,1,0,1,java.util.HashMap,Storing HashMap in ArrayList - can't decode Bitmaps upon displaying.
25079323,1,0,1,java.util.HashMap,"I have an ArrayList which stores a HashMap of Bitmaps, but when I try to display them with ListView adapter it shows this error(and yes I am absolutely sure that Uri is correct and links to an image): code."
25079323,1,0,1,java.util.HashMap,EDIT: Added FOR loop and corrected HashMap statement placement.
25082697,2,0,1,java.util.HashMap,"This as opposed to ""simpler"" languages, where there is no choice of implementation (Map with implementations HashMap, TreeMap)."
25083592,2,1,6,java.util.HashMap,"If navigation order won't matter, then use HashMap as implementation, otherwise use LinkedHashMap or TreeMap."
25084659,1,0,0,java.util.HashMap,Java retrive returnd ArrayList to HashMap.
25084659,1,0,0,java.util.HashMap,i want to fetch this return ArrayList and fill HashMap but i can not program this part of project Defined map as Method in class: code.
25084659,1,0,0,java.util.HashMap,how to retrive getFavorite() and fill HashMap?
25085054,1,0,1,java.util.HashMap,"Error Unchecked call to 'put(K, V)' as a member of raw type 'java.util.HashMap'."
25085054,1,0,1,java.util.HashMap,"I am getting the error  ""Unchecked call to 'put(K, V)' as a member of raw type 'java.util.HashMap'"" This is the line that shows the error code."
25086668,2,0,1,java.util.HashMap,"I would probably create a custom class that contains a HashMap, as well as a priority queue of the objects that are also stored in the HashMap."
25086668,2,0,1,java.util.HashMap,"After that, you can have an internal private thread of some kind that sleeps until the next time the first object in the priority queue needs to be removed from the queue and also removed from the HashMap."
25086668,2,0,1,java.util.HashMap,"No need to loop through the HashMap, or check values at a certain rate."
25090218,2,0,1,java.util.HashMap,"For example, you might have a large, long-lived ArrayList or HashMap that needed to be expanded."
25089800,1,0,1,java.util.HashMap,"I thought, that a HashMap<String, Boolean> would be the correct way on doing this."
25089864,2,1,1,java.util.HashMap,You could do a mix of Observer-Observable and a HashMap.
25089864,2,1,1,java.util.HashMap,"In the beginning, clients register themselves as Observers or the HashMap, and when something changes in the Map then a message would be sent to all Observers."
25091615,1,0,0,java.util.HashMap,I am trying to retrieve data from an arraylist of HashMap but it is always showing null.
25094386,1,0,1,java.util.HashMap,How to convert from java.util.HashMap to android.content.ContentValues?
25094386,1,0,1,java.util.HashMap,"I thought that my android independat version can use a HashMap<String,Object> insead of ContentValues and create code to convert between both."
25095363,1,0,0,java.util.HashMap,Should Two HashMap Store in the same order if I am inserting the same thing at the same time.
25095363,1,0,0,java.util.HashMap,"If I use two HashMap, store the same thing in that in the same order."
25095363,1,0,0,java.util.HashMap,Can i confirmly say that both the HashMap has stored the data in the same order.
25095429,2,1,1,java.util.HashMap,"You will not get same order if for instance result of hashcode will depend on time (which is wrong implementation of hashcode method), this kind of hashcode will break HashMap (it will not be able to correctly find its elements)."
25095452,2,0,2,java.util.HashMap,"If both HashMap instances are instantiated with the same values (size, load factory) and then values with keys are inserted in the same order, then iteration order of the entries will be the same."
25095573,2,0,0,java.util.HashMap,"For example, instead of a HashMap, use a TreeMap and create an appropriate key or sort method."
25095410,2,0,1,java.util.HashMap,HashMap makes no guarantee of order but TreeMap does.
25097237,2,0,1,java.util.HashMap,"By the way, it is better to declare tableHand as Map instead of HashMap, and initialize it with new HashMap<>()."
25100134,1,0,1,java.util.HashMap,I know that there is the need of a HashMap with utteranceId to identify the utterance.
25100134,1,0,1,java.util.HashMap,My important variables (for tts and the HashMap) are: code.
25101348,2,0,1,java.util.HashMap,"Here is an example of the contents inside my HashMap<String, String>: code."
25104688,2,0,1,java.util.HashMap,Now use TreeMap instead of HashMap but pass String.CASE_INSENSITIVE_ORDER comparator when creating the instance: code.
25107694,2,0,1,java.util.HashMap,"You can come up with unsafe ways to use a ConcurrentHashMap, and you can come up with thread-safe ways to use a plain HashMap."
25111760,1,0,0,java.util.HashMap,HashMap unit conversion program fails to identify key.
25113430,1,0,0,java.util.HashMap,"I see that in the implementation of put method of HashMap class, the table bucket is got using int i = indexFor(hash, table.length); and then it adds an entry to that bucket - 'i' if the hashcode and the key are not equal."
25501210,2,0,0,java.util.HashMap,"check the HashTable implementation ,its not exactly as the HashMap, but you will get the idea about basic hashing."
25113752,1,0,1,java.util.HashMap,"why ""t"" is not a capital tetter like ""M"" in HashMap & ""S"" in HashSet?"
25113771,2,0,1,java.util.HashMap,Map is a interface while HashMap is a implementation of it.
25113779,2,0,3,java.util.HashMap,"HashMap, TreeMap are implementation of Map interface, so Hash-Map and Tree-Map as HashSet & TreeSet are implemenataion of Set interface."
25113795,2,0,1,java.util.HashMap,Since Map and Set are interfaces and hence HashMap and HashSet have capitals... and there is no such collection interface named Table as such..  Full conversation
25115832,1,0,1,java.util.HashMap,"and iI have a HashMap<String, Parent>."
25115832,1,0,1,java.util.HashMap,Using com.google.gson.Gson I have converted this HashMap to Json: code.
25115832,1,0,1,java.util.HashMap,In another class I want to retrieve this HashMap: code.
25115832,1,0,1,java.util.HashMap,The problem is that I want to cast the values of HashMap which are instanceOf Child1 to Child1.
25117713,1,0,1,java.util.HashMap,Why doesn't the Java library provide `HashSet.get(Object o)` and `HashMap.getKey(Object o)`.
25117713,1,0,1,java.util.HashMap,The question is: Why doesn't the Java library provide HashSet.get(Object o) and HashMap.getKey(Object o) methods that return the actual instance in the map providing an equal instance?
25117713,1,0,1,java.util.HashMap,-> bad answer Use a HashMap instead of a HashSet I don't need a map and I think it's not adequate to return a map in a method like getHouses().
25117713,1,0,1,java.util.HashMap,"Here are the questions:  Is the best solution the use of HashMap<House, House> instead of HashSet<House>?"
25146999,2,1,0,java.util.HashMap,"To fix this, you could use a HashMap, a HashMap stores values, for keys."
25146999,2,1,0,java.util.HashMap,"Make sure that you check if the HashMap contains a key before you get it, though, or you may get a NullPointerException: code."
25127708,2,0,1,java.util.HashMap,"Alternatively to the array, you can use a HashMap, whose key is a letter and whose elements are again HashSets of possible words."
25127708,2,0,1,java.util.HashMap,"In case you don't, the proposed structures are still adaptable: in fact, the array (or the HashMap) is not going to change, while the HashSet also offers constant add time."
25132623,1,0,0,java.util.HashMap,How to convert String to HashMap in Java.
25132623,1,0,0,java.util.HashMap,i want to convert string to HashMap.
25132623,1,0,0,java.util.HashMap,"my output of string(""v value"") :    “u1” “u10” “u2” “u41” “u3” “u10” “u4” “u81” “u5” “u10” “u6” “u10”   “u7” “u31” “u8” “u11”  i need to convert this string(v Value) into HashMap<string,String>(like key,value pair).how to do that?"
25132680,1,0,0,java.util.HashMap,Now I have created an HashMap and rendered it in the jsp page .
25132680,1,0,0,java.util.HashMap,This is how I Have crated the HashMap In Application Level : code.
25136877,2,0,1,java.util.HashMap,"By default, JYaml converts a sequence to java.util.ArrayList and a mapping to java.util.HashMap."
25137922,2,0,4,java.util.HashMap,"Take a look at Java's HashMap source code and see how the keys are stored, that might give you an idea for your case"
25138216,2,0,0,java.util.HashMap,"Sorry to say, I don't need to use HashMap with rollNo as key."
25138424,2,0,1,java.util.HashMap,HashSet : It internally maintains the data in HashMap.
25139340,2,0,5,java.util.HashMap,This method is supported for the benefit of hash tables such as those provided by HashMap.
25154789,2,0,0,java.util.HashMap,"First note that, there is absolutely no difference in compiled bytecode between new HashMap<String, List<String>>() and new HashMap<Integer, String>() and new HashMap(), because they are the same after type erasure."
25141714,1,0,1,java.util.HashMap,I have a huge HashMap data structure that I want to compress its values and write them and hashmap keys as byte on files.
25141714,1,0,1,java.util.HashMap,"I defined my hashmap as HashMap<String, ArrayList<Posting>> The Posting is defined: code."
25144097,2,0,0,java.util.HashMap,"I think a HashMap is exactly right, since you have a collection of dynamic key/value pairs you wish to store in your Cards instnaces."
25145216,1,0,1,java.util.HashMap,Jersey 2.0 HashMap conversion to/from Json.
25145216,1,0,1,java.util.HashMap,It seems that Jersey 2.0 isn't able to convert a map stile Json attribute in the corresponding Java data structure Object (HashMap).
25147565,1,0,3,java.util.HashMap,Each vertex has an ArrayList of other vertices that it is connected to (and has a HashMap data structure as well for other purposes).
25147565,1,0,3,java.util.HashMap,"I would not think that I need to make a custom writeObject method since ArrayList and HashMap already have their own implementations, which are called upon serialization."
25149556,2,0,0,java.util.HashMap,"Here's an idea using String.split(), that puts the result in a HashMap so you can easily pull out the parameters by key name."
25154627,2,0,1,java.util.HashMap,A simple HashMap for every student is enough to hold the mappings between subjects and grades.
25156824,1,0,0,java.util.HashMap,"I want to put them into HashMap<String, SomeDataSource> code."
25182744,2,0,0,java.util.HashMap,"If this cannot work, then, bearing the scalability limitations that you mention, I would store the reducer's values in a HashMap<String,Double> buffer with keys being the left parts of ""=>"" and values being their numeric values."
25182744,2,0,0,java.util.HashMap,"You could gain some more space by storing only the left part of ""=>"" as keys of the HashMap, as the right part is always the reducer's input key."
25161231,2,0,0,java.util.HashMap,Perhaps you can register each child in a HashMap with the time that they started.
25162738,2,0,0,java.util.HashMap,"After the User typed in the name string for an obj Object, you could for example use a HashMap<String, Object> to store the user input: code."
25166233,1,0,0,java.util.HashMap,"In the codes below, classIdentifier is a string of the class name (i.e. ""com.example.TestClass""), and maps is a HashMap that stores the data read from the csv file."
25167823,1,0,2,java.util.HashMap,I am trying to randomly generate 'n' number of items from a HashMap where 'n' is determined by the user.
25167885,1,0,0,java.util.HashMap,"I want to make a HashMap with String as key, and a value that represents a class that implements ICommand."
25167885,1,0,0,java.util.HashMap,"I want to do this as I want to get a command as a string, check if that command exists (is loaded in the HashMap), create an instance of that command, and run it."
25172235,2,0,2,java.util.HashMap,"If you were dealing with a large and/or variable number of pools, you could instead use a HashMap<ManaType, int> keyed by ManaType with values representing the cost for that mana type."
25172235,2,0,2,java.util.HashMap,"When casting the spell, you would then iterate the HashMap<ManaType, int>, deducting each mana cost from the player's mana pool and voiding the casting if any of the mana costs cannot be paid."
25177379,1,0,3,java.util.HashMap,"Which is better HashMap vs POJO ( Getter Setter , Model Class) in Java and Android."
25177379,1,0,3,java.util.HashMap,"In some cases i suffered the operation at that time, We can use the both HashMap or Model Class (POJO) as a ArrayList Generic Like ArrayList<HashMap<K,V>>() OR ArrayList<ModelName>()."
25177379,1,0,3,java.util.HashMap,"Suppose i have 2 variable both are string in POJO class, and same both are for HashMap."
25177379,1,0,3,java.util.HashMap,"in this case i have to take two object of ABC class, And in HashMap with List object it will... code."
25177379,1,0,3,java.util.HashMap,in this case i have to use two object of HashMap.
25177759,2,0,2,java.util.HashMap,"Also, even using a HashMap, where the objects are easily fetched using the hashCode value, the access is slower than to a Java Bean attribute... and you have always to ensure that those objects have a good hashCode() generator."
25178133,1,0,1,java.util.HashMap,"I looked in the ctxt object via the debugger, I can see my Project object in the _objectIds HashMap but I can't really access to it..."
25182159,1,0,3,java.util.HashMap,Adding an element to an HashMap causes ArrayIndexOutofBoundsException in java 1.7.0_45.
25183826,2,1,4,java.util.HashMap,"The simplest fix would be to have a Friend.fromFullName static method, which perhaps looked the Friend up in a HashMap<String, Friend>."
25195319,1,0,1,java.util.HashMap,"I am looking for a data structure where I need to store values and then to retrieve it based on key.But in my case my key and value will be same, so I can't use HashMap."
25896492,2,0,0,java.util.HashMap,"We can use HashMap with <key,key> instead of <key,value> in this case."
25196259,2,0,1,java.util.HashMap,"You can reverse the HashMap by iterating over the EntrySet, as shown below: code."
25198755,1,0,0,java.util.HashMap,Where the HashMap's key values are equal to the names of the properties in my FinancialTransaction class but the values are all strings.
25201378,1,0,0,java.util.HashMap,"I tried to initialize it in each function, but when you have, for example 15 functions and instead of integer you have big HashMap it's too expensive to initialize it every time."
25206897,1,0,0,java.util.HashMap,I have the following situation-  I am creating a HashMap using generics.
25206897,1,0,0,java.util.HashMap,Then I extract the keys in the HashMap and print out the corresponding values.
25209004,2,0,0,java.util.HashMap,"did you want the full code or just the concept I would say create a  //string is the Key and object is the object you want to map to like a count or something //you can also use generics if using java HashMap hashMap = new HashMap(); where all they keys are the set of words then for every word in these files just do hashMap.get(""thewordyouneedtolookup"");"
25215437,1,0,1,java.util.HashMap,Getting integer in HashMap without Iterating.
25215437,1,0,1,java.util.HashMap,Am I able to get all Strings based off an integer without iterating through the whole HashMap?
25215471,2,0,1,java.util.HashMap,There is no way to do this with a HashMap other than iterating.
25215475,2,0,0,java.util.HashMap,"To get the data, you coud use HashMap<Integer, List<String>> as construction."
25219686,1,0,0,java.util.HashMap,HashMap insert during iteration.
25219686,1,0,0,java.util.HashMap,"With an ""ordinary"" HashMap, this would obviously lead to a ConcurrentModificationException, this is why I am using a ConcurrentHashMap."
25220247,2,0,1,java.util.HashMap,HashMap does not gurantee ordering of elements Use LinkedHashMap(entry order) or TreeMap (sorted order) if ordering is requrired.
25220248,2,0,2,java.util.HashMap,The order in which you'll receive elements from a HashMap is not guaranteed.
25220298,2,0,0,java.util.HashMap,Because HashMap use Hashing function for storing elements..  order is decide by Hashing function..
25224515,2,0,1,java.util.HashMap,"For this, we can use a HashMap."
25224515,2,0,1,java.util.HashMap,"That creates a list, so we can store a player's ID next to the Integer object (Since we can't use primitives in a HashMap, we use the Integer object) that represents it's bleeding task."
25226416,1,0,4,java.util.HashMap,I have two HashMap.
25226547,2,0,2,java.util.HashMap,Map firstMap = new HashMap();     Map secondMap = new HashMap(); code.
25226868,2,1,1,java.util.HashMap,Here's a basic HashMap graph implementation that follows your pattern.
25226752,1,0,2,java.util.HashMap,Using a HashMap and reflection to call methods with variable argument types.
25227441,2,0,2,java.util.HashMap,"Failure to do so will result in a violation of the general contract   for Object.hashCode(), which will prevent your class from functioning   properly in conjunction with all hash-based collections, including   HashMap, HashSet, and Hashtable."
31096841,2,0,0,java.util.HashMap,"Based on the code in Jersey 2.18 version, The class JerseyInvocation use a predefined HashMap to validate HTTP method and its Entity as below: code."
25230218,2,0,0,java.util.HashMap,"If you are only searching elements by ID, an HashMap could be a good solution (constant-time complexity for all basic operations)."
25230221,2,1,2,java.util.HashMap,"If you are searching a collection by key, you should generally use a HashMap, which finds items in the map based on their key in expected O(1) time."
25230793,2,0,1,java.util.HashMap,You can use HashMap if you are using ID as keys
25235004,1,0,0,java.util.HashMap,HashMap Inside Hashmap printing involving strings?
25235004,1,0,0,java.util.HashMap,I need to be able to get a value from a HashMap that is inside another HashMap.
25235004,1,0,0,java.util.HashMap,"I need to be able to call ""desc1"" from the string ""roomA"" that is in the HashMap rooms."
25235048,2,0,1,java.util.HashMap,"rooms is a HashMap that maps a string to HashMap<String, String>."
25235048,2,0,1,java.util.HashMap,"So every .get(...) you call on rooms has a return type of HashMap<String, String>."
25235048,2,0,1,java.util.HashMap,"Calling .get(...) on anything of HashMap<String, String> returns a value of type String, which is what you're going for."
25235048,2,0,1,java.util.HashMap,"returns a HashMap<String,String>, and  code."
25235016,1,0,1,java.util.HashMap,Process HashMap> to match the String of the HashMap.
25235016,1,0,1,java.util.HashMap,"So, how do I get the actual string (key) from the HashMap<String, Integer> in order to check if the delimited 'genres' string contains it and also use it to get the ARGB integer for the genre colour?"
25237111,1,0,1,java.util.HashMap,"Currently am thinking of adding each ScheduledExecutorService  into HashMap , key been the task object & value been the ScheduledExecutorService  using SingleTon desgin pattern."
25245371,1,0,1,java.util.HashMap,We need to lock a method responsible for loading database date into a HashMap based cache.
25249219,2,0,0,java.util.HashMap,"If you want something that more closely matches what I think you are after, either change the context of your root class, or maybe use a List instead of a HashMap in your container class."
25247874,2,1,10,java.util.HashMap,It is backed by a HashMap where the key is the Object.
25247874,2,1,10,java.util.HashMap,"The contains method calls (indirectly) getEntry of HashMap, where key is the Object for which you wish to know if it's in the HashSet."
25247874,2,1,10,java.util.HashMap,"As you can see below, two objects can be stored in the HashMap/HashSet even if their key is mapped to the same value by the hash function."
25250791,1,0,2,java.util.HashMap,Usage of HashMap in a multi-threaded environment for regular update.
25251978,2,0,3,java.util.HashMap,I.e. it uses synchronization just like a synchronized HashMap as has the same limitation.
25252667,2,0,0,java.util.HashMap,"If you can hash the nodes, create a HashMap> and put them into it, then scan through the values."
25252889,2,0,0,java.util.HashMap,Add instances of that interface to a HashMap using the Integer value as the key of the Map.
25260952,1,0,0,java.util.HashMap,java.util.HashMap.
25263713,2,0,0,java.util.HashMap,Maybe better with a static HashMap.
25263242,2,0,0,java.util.HashMap,You can use a HashMap Example: code.
25263253,2,0,1,java.util.HashMap,HashMap) with the key representing the name of the variable and the map's value representing the variable's value.
25274287,2,0,0,java.util.HashMap,"Store it in a HashMap<String, integer> code."
25274789,1,0,0,java.util.HashMap,After inserting one element in HashMap() i can't insert anything more - always duplicate key.
25284978,2,0,1,java.util.HashMap,"For example, use a HashMap from the action (SUBMIT, ...) to an object that implements an interface."
25285490,1,0,0,java.util.HashMap,How to add a List of integers and a List of Triples into a HashMap in java?
25285490,1,0,0,java.util.HashMap,"I want to write a code to put (List<Integer> , List<Triple>) as a (key, value) into a HashMap : Map <List<Integer> , List<Triples>> ptList = new HashMap<>(); Triples are three integer values."
25287445,1,0,0,java.util.HashMap,Populating a HashMap with an Array.
25287445,1,0,0,java.util.HashMap,"I am trying to use an Array to populate a HashMap, and when I run the program my print out shows up null, which indicates that it isn't populating for me."
25291401,2,1,0,java.util.HashMap,"By default, Storm can serialize primitive types, strings, byte arrays, ArrayList, HashMap, HashSet, and the Clojure collection types."
25292712,2,1,5,java.util.HashMap,"Eg, you can't change a load operation to load a reference to a HashMap onto the ""stack"" when the eventual user of the loaded reference will be assuming it's a String."
25293128,1,0,1,java.util.HashMap,How to add HashMap to ArrayList.
25293160,2,1,7,java.util.HashMap,You are using the same key each time you are adding an element to the the arraylist with the same reference to the HashMap thus changing its values.
25293160,2,1,7,java.util.HashMap,Solution: create a new instance of HashMap each time you want to add it to the ArrayList to avoid changing its values upon calling addProd code.
25302223,1,0,0,java.util.HashMap,How to send String[] As value of HashMap to REST.
25302223,1,0,0,java.util.HashMap,I am trying to send a HashMap to Magento REST API From Android.
25307163,1,0,0,java.util.HashMap,Set x elements in HashMap.
25307163,1,0,0,java.util.HashMap,"In my android project I have a HashMap<LinearLayout, Boolean> hashmap."
25309106,2,0,0,java.util.HashMap,You can use TreeMap instead of HashMap if you want to maintain the order.
25310053,1,0,2,java.util.HashMap,I was going through the internal structure of HashMap and got stuck in the concept of how a bucket stores multiple objects.
25310053,1,0,2,java.util.HashMap,"As HashMap is an array of Entry objects, every index of array is a bucket."
25310053,1,0,2,java.util.HashMap,"On Adding a new key-value pair  If we are adding a value with a key which has already been saved in HashMap, then the value gets overwritten."
25310299,2,0,0,java.util.HashMap,"HashMap maintains an array: Entry[]; each element of that array represents a ""bucket""."
25310173,2,0,0,java.util.HashMap,Java HashMap uses a linkedlist for buckets (but not a java.util.LinkedList).
25310173,2,0,0,java.util.HashMap,If a class hard codes the hashCode() method to a single value; instances of such a class loaded into a HashMap the structure will degenerate into a linkedlist.
25310201,2,0,2,java.util.HashMap,This is about HashMap in Oracle JDK 1.7.0.55.
25323481,2,1,1,java.util.HashMap,Performance-wise once you load them they are (almost) as quick as ListResourceBundle - the simple reason being HashMap is used internally to keep the translations.
25328562,2,0,0,java.util.HashMap,"If you need to know all distinct Students (pair: first name + surname), you need to override getHashCode() and equals methods and use HashSet, HashMap"
25331596,1,0,1,java.util.HashMap,xStream deserialisation of HashMap> XML File.
25331596,1,0,1,java.util.HashMap,"Even ONLY the simplier HashMap<Coordinate, String> alone does not work (HashMap<String, List<String>> so not seems to be the problem with generics or so on...) Greatings D."
25332022,2,1,18,java.util.HashMap,"Here's the source code from OpenJDK 7, with equality optimization indicated (from HashMap, the underlying implementation of HashSet): code."
25332023,2,0,8,java.util.HashMap,A HashSet uses a HashMap as its backing mechanism for the set.
25332069,2,0,3,java.util.HashMap,"Looking through the source code of HashSet it is using HashMap for all of its operations and the add method performs put(element, SOME_CONSTANT_OBJECT)."
25333755,2,1,4,java.util.HashMap,"You are looking for HashMap, since it is a unique number value you can use that as a key and use the get method of the HashMap to directly get the value without iterating on it."
25336558,2,0,1,java.util.HashMap,use a HashMap for that.
25336546,1,0,0,java.util.HashMap,Why entryset in HashMap calls entryset0?
25336546,1,0,0,java.util.HashMap,Why entryset in HashMap calls entryset0 instead of directly writing  code.
25336629,2,1,0,java.util.HashMap,This is to insulate the implementation of HashMap from the effects of someone overriding the entrySet() method in a subtype.
25336629,2,1,0,java.util.HashMap,The JIT compiler is likely to inline the call ... except in the case where there is a subclass of HashMap that does override entrySet().
25338845,2,1,0,java.util.HashMap,Now - what was wrong in your app:  Define the proper holder for your accounts i.e. HashMap that will hold the information about all accounts and will be able to find them by accountNumber.
25338845,2,1,0,java.util.HashMap,"HashMap<Integer, Account> accountMap = new HashMap<Integer, Account>(); This one should be inside your while loop, as you want your user to do multiple tasks."
25337281,1,0,0,java.util.HashMap,In the above code #this is resolving into root HashMap
25338833,2,0,0,java.util.HashMap,"It is intended to be more memory efficient than using a HashMap to map Integers to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping."
25339072,1,0,0,java.util.HashMap,"At the moment my implementation uses a HashMap, where I put taken Connection with the System.currentTimeInMillis(), and then my daemon thread regularly checks that time not to exceed 5 seconds."
25340143,1,0,1,java.util.HashMap,I've written a hashcode function for this class and for some reason the hashmap is not properly recognizing when a key is actually present in the HashMap.
25340476,2,0,2,java.util.HashMap,"In fact, the array is an array of list (eg: two keys may have the same hash code, and that's where the equals method is used) but I don't want to go down the full implementation of HashMap/Set in Java."
25342079,1,0,0,java.util.HashMap,"Any suggestion to avoid concurrentmodificationException as well as retaining reference to lits will be appreciated  sample code is below public boolean func(HashMap> plits,....) { code."
25354080,2,1,1,java.util.HashMap,Maybe the fact that you used the abstract class Map instead of a concrete implementation (HashMap in the above code) explains that Jackson has some difficulties when trying to fill this structure...
25357381,2,0,0,java.util.HashMap,"So there are 2 more solutions to use only one variable :  You can browse in your arraylist to look for the person having the personID, and remove this one You can replace your arraylist by the HashMap, which could work depending what usage you hve of it."
25359394,2,1,2,java.util.HashMap,"For Simplicity, let us understand what is the difference between HashMap and LinkedHashMap."
25359394,2,1,2,java.util.HashMap,HashMap: It gives output in Random orders means there is no proper sequence how we have inserted values.
25359394,2,1,2,java.util.HashMap,Let us see a small example: with HashMap code.
25359394,2,1,2,java.util.HashMap,"but this is not the case in LinkedHashMap Just replace the ""HashMap"" with ""LinkedHashMap"" in the above code and see it will display the output in Sequential order like 1=Rohit will be displayed first then the others in sequence."
25357529,2,0,2,java.util.HashMap,"But its basically a HashMap that also has a linked list, so you can have a consistently ordered iteration through it."
25357530,2,0,1,java.util.HashMap,But HashMap doesnt maintain order.
25360728,2,0,0,java.util.HashMap,Can you please check this one :When to use HashMap over LinkedList or ArrayList and vice-versa Lists represent a sequential ordering of elements.
25360728,2,0,0,java.util.HashMap,"When you add items to a HashMap, you are not guaranteed to retrieve the items in the same order you put them in."
25360728,2,0,0,java.util.HashMap,"There are subclasses of HashMap like LinkedHashMap that will maintain the order, but in general order is not guaranteed with a Map."
25361324,2,0,0,java.util.HashMap,Have you considered using a HashMap for your problem: put the name in the key and the counter in the value.
25364254,1,0,1,java.util.HashMap,"Hey my problem is that in my AsyncTask method doInBackground I have defined a return type of ArrayList<HashMap<String, String>> and in my code I then return menuItems which is type ArrayList<HashMap<String, String>>."
25364254,1,0,1,java.util.HashMap,"I have seen a similar situation where it said that not all exits support the return ArrayList<HashMap<String, String>> but looking at my code I cant see where I return anything other than ArrayList<HashMap<String, String>> any help would be greatly apppreciated."
25364397,2,1,1,java.util.HashMap,"In the try block you do return menuItems (of type ArrayList<HashMap<String, String>>) but you do it within a for loop which will end up with the loop iterating exactly once before returning the menuItems object to the caller, ending the method call (and since it's probably not what you want, you should get that menuItems out of the for loop)."
25365753,2,0,0,java.util.HashMap,"If you override only one of them, you can break your HashMap, since when it searches for a key, it first calculates the hash value based on hashCode(), and then iterates over the keys sharing this hash value to check which one of them equals the requested key."
25366651,1,0,0,java.util.HashMap,I cant figure out a searchterm that doesnt lead me to the Properties or HashMap entries.
25366924,1,0,0,java.util.HashMap,"I find this difficult, because the code required to represent a JSON object uses a object that is of a HashMap type which requires unique keys."
25375380,1,0,0,java.util.HashMap,I have to store value of subbody1 and subbody2 in HashMap.
25376979,1,0,0,java.util.HashMap,"This code conversion is because I am using stjs project, which does not run java code - for example System, HashMap, ArrayList et cetera."
25379340,1,0,5,java.util.HashMap,"I’d like to use java.util.HashMap and java.util.PriorityQueue in Nashorn script, where I need to use particular custom object as a key in the HashMap, and also use HashMap.containsKey() to check if there is a key in the Map (another option is to check if the object in a Collection.contains(Object o))."
25379446,1,0,1,java.util.HashMap,got turned into     HashMap s = new HashMap(); the same thing happened to Lists and Collections generally.
25379957,2,0,0,java.util.HashMap,Iterating through the list is O(myModuleList.size()) whereas using Map.get() is O(1) for a HashMap or O(log(myModuleList.size())) for a TreeMap.
25379957,2,0,0,java.util.HashMap,"So, if you are optimizing for performance, then using a HashMap would be the best solution."
25379957,2,0,0,java.util.HashMap,"In almost all cases, you should reach for a HashMap by default unless you also need to iterate over the elements in key order, in which case it would make sense to use a TreeMap."
25379957,2,0,0,java.util.HashMap,"So, the short answer is that you should use a HashMap."
25379957,2,0,0,java.util.HashMap,"For a very large number of elements (which is not the case that you are describing), it's possible to improve the space usage of the HashMap (albeit at the expense of speed) by tuning the load factor and initial capacity (though you will not need to do this in ordinary usages)."
25384045,2,0,1,java.util.HashMap,HashMap would be the best one.
25384074,2,1,2,java.util.HashMap,An ArrayList or an HashMap would be fine if your keys are Integer.
25384074,2,1,2,java.util.HashMap,"Otherwise, if they are String, HashMap only would fit."
25384177,2,0,1,java.util.HashMap,"If you need a Map and you do not need a SortedMap, HashMap is almost always the right choice."
25384177,2,0,1,java.util.HashMap,Note that one of the constructors of HashMap has an argument telling it the initial size of the map.
25389215,1,0,3,java.util.HashMap,"The vectors are stored in a a Java HashMap<String, Vector>, where Vector is la4j class for sparse vectors."
25391729,2,0,0,java.util.HashMap,"Instead, you can split your space into regular hypercubic grid so that average grid cell contains under 20 vectors, and store the cells in HashMap<List<Integer>, List<Vector>> where the keys are integer coordinates of the grid cell, and values are list of vectors that are inside the corresponding cells."
25395753,1,0,1,java.util.HashMap,I have a static HashMap to which I'm adding a new item like so: code.
25398698,1,0,1,java.util.HashMap,"At this stage I only have the Application class, Subject class (HashMap of student and Integer mark), and Student."
25400689,2,1,3,java.util.HashMap,"You're using a HashMap<Integer, Integer>, which takes a lot of memory for the boxed ints."
25403314,1,0,0,java.util.HashMap,I have a HashMap which takes in a String as the Key and an ArrayList of Elements as the Value.
25408120,1,0,1,java.util.HashMap,Java - Best way to update HashMap value - Pass by value/reference related.
25408120,1,0,1,java.util.HashMap,I have a HashMap with some data.
25408120,1,0,1,java.util.HashMap,"As such, the function on the second line should properly update the Double array in the HashMap... which would then seemingly make the map.put() on the third line redundant."
25408120,1,0,1,java.util.HashMap,"Looking at other people's HashMap related code, they always seem to be using the put() method."
25412100,2,0,0,java.util.HashMap,(HashMap allows null values.)
25408146,2,0,1,java.util.HashMap,"If you're modifying the object referenced by the reference value that you retrieved from the HashMap, there is no point replacing its entry in that same HashMap."
25408426,1,0,0,java.util.HashMap,"My initial idea was based on the fact that a date range and room should always determine the customer: (DateRange, Room) -> Customer This would be easy to accomplish using a database, but I was hoping to stick with some sort of native data structure if at all possible, so I started by using a hashmap indexed with a Reservation object as a key and a Customer object as a value: HashMap<Reservation, Customer> schedule; The Reservation object would contain a start date, end date, and room object."
25411087,1,0,12,java.util.HashMap,A similair question was already asked: Disadvantage of increasing number of partition in Java Concurrent HashMap?
25416114,1,0,1,java.util.HashMap,"I am trying to read in a small RCFile (~200 rows of data) into a HashMap to do a Map-Side join, but I having a lot of trouble getting the data in the file into a usable state."
25416251,1,0,0,java.util.HashMap,What's wrong with this Java HashMap?
25418477,1,0,0,java.util.HashMap,"Then I see an error :          13:28:07.555 WARN  - [JOURNAL_FLUSHER] WARNING Journal flush operation took    62,034ms       last 8 cycles average is 7,754ms         Exception in thread ""main"" org.sonar.runner.impl.RunnerException: Unable to execute Sonar     at org.sonar.runner.impl.BatchLauncher$1.delegateExecution(BatchLauncher.java:91)     at org.sonar.runner.impl.BatchLauncher$1.run(BatchLauncher.java:75)     at java.security.AccessController.doPrivileged(Native Method)     at org.sonar.runner.impl.BatchLauncher.doExecute(BatchLauncher.java:69)     at org.sonar.runner.impl.BatchLauncher.execute(BatchLauncher.java:50)     at org.sonar.runner.impl.BatchLauncherMain.execute(BatchLauncherMain.java:41)     at org.sonar.runner.impl.BatchLauncherMain.main(BatchLauncherMain.java:59)        Caused by: java.lang.OutOfMemoryError: Java heap space     at java.util.HashMap."
25418477,1,0,0,java.util.HashMap,(HashMap.java:209)     at java.util.HashSet.
25423039,1,0,5,java.util.HashMap,"I think this is bad, because the consumer of that method will lose the potential power of HashSet, HashMap or whatever (by not be able to call set.get(hash) )."
25424639,2,0,2,java.util.HashMap,Use HashMap instead of it.http://developer.android.com/reference/java/util/HashMap.html  Correct method should be as below code.
25426429,1,0,0,java.util.HashMap,Expected Output: Return all the traversal Paths in the form of HashMap or List type code.
25427669,1,0,0,java.util.HashMap,"Hey basically what I wish to do is take a number of ArrayList<HashMap<String, String>> menuItems and pass it to my onPostExecute method so to do this I intended to create an array of menuItems and pass it through...this is the code I used to do this code."
25430398,2,1,2,java.util.HashMap,"You would need a separate Map, one that is a Map<String, Character>, and again a HashMap<String, Character> would work well, fill it with el  If this is a school assignment, then I believe that this is the solution."
25430870,1,0,2,java.util.HashMap,Save HashMap data into SQLite.
25430870,1,0,2,java.util.HashMap,For now I keep the data from Json into HashMap.
25430870,1,0,2,java.util.HashMap,Is there any option that I can use to save the data from HashMap into SQLite?
25433575,1,0,0,java.util.HashMap,Java HashMap.get(key) and TreeMap.get(key) usage of equals and compareTo methods.
25433663,2,1,2,java.util.HashMap,"In short, HashMap.get(key) calls hashCode method of key and then calls equals method of key TreeMap.get(key) calls the compareTo method of your key class or calls the compare method of the Comparator object that you would have passed to the constructor of TreeMap"
25434001,1,0,1,java.util.HashMap,"I have a list of hash map say ""HashMap map"" whose size is 4."
25435571,2,0,1,java.util.HashMap,"If the set of fields names may differ between objects, a HashMap<String, String> would do for string keys and string values."
25436615,1,0,1,java.util.HashMap,"I'm trying to mock the ""application"" object of the ActionContext with a HashMap."
25437341,1,0,1,java.util.HashMap,GAE w/ Objectify - Can you query a HashMap?
25437341,1,0,1,java.util.HashMap,"In GAE, when using Objectify, can you query a HashMap?"
25437341,1,0,1,java.util.HashMap,"Does not seem to work where the hashMapfieldName is a HashMap<String, String>."
25438926,2,0,1,java.util.HashMap,I am not sure what Objectify does for HashMap.
25438926,2,0,1,java.util.HashMap,"But as per the docs, HashMap is not a supported field type in Datastore."
25438926,2,0,1,java.util.HashMap,"So to my knowledge, HashMap cannot be queried as there is no indexes created for it."
25439629,2,0,3,java.util.HashMap,You can't put duplicate keys in HashMap.
25440174,2,1,0,java.util.HashMap,You can store your data in a HashMap.
25440174,2,1,0,java.util.HashMap,You can insert a key-value pair in your HashMap as soon as you find a 'unit' first time.
25440174,2,1,0,java.util.HashMap,"Now again when inserting the next record from excel, check if the new 'unit' already exists in the HashMap."
25441723,1,0,0,java.util.HashMap,HashMap delete entry AND position.
25441723,1,0,0,java.util.HashMap,In my HashMap there are some entries.
25441723,1,0,0,java.util.HashMap,"But I don't ""only"" want to delete the entry but the whole ""position"" of the HashMap so that there is no blank space between it."
25441723,1,0,0,java.util.HashMap,"In the end the HashMap shouldn't have any value anymore (I think it will be null then, won't it?)"
25441947,2,0,0,java.util.HashMap,Understanding how HashMap works here Link.
25442492,2,0,0,java.util.HashMap,Because after a certain time I need to check if the HashMap is empty.
25442043,2,1,1,java.util.HashMap,You really need to see HashMap#remove()
25441780,1,0,1,java.util.HashMap,"what is the use of syntax HashMap, something>."
25442498,2,1,2,java.util.HashMap,"From a typing perspective, this means that the keys to the HashMap can be any type that implements Comparable irrespective of the type parameter."
25442246,2,0,0,java.util.HashMap,"Technically, for a HashMap, it is not useful to enforce keys to implement Comparable<?> in any case because HashMap will internally not use the compareTo method of the Comparable interface."
25442160,1,0,1,java.util.HashMap,Itereate HashMap with HashSet as values.
25442160,1,0,1,java.util.HashMap,I've got HashMap with HashSet as value How to iterate over it ti reseive result like: code.
25443941,2,0,0,java.util.HashMap,"I doubt what you published is valid code because Map or HashMap takes 2 parameter types i.e. Map<K, V>."
25443994,2,0,0,java.util.HashMap,"In first example of HashMap, we will create and add object into our Map."
25443994,2,0,0,java.util.HashMap,Following code will create HashMap with keys of  type String and values of type Integer with default size and load factor.
25443994,2,0,0,java.util.HashMap,alternatively you can create HashMap from copying data from another Map or Hashtable as shown in below example: code.
25443994,2,0,0,java.util.HashMap,"You can also supply load factor (percentage of size, which if fulled trigger resize of HashMap) and initialiCapacity while creating instance by using overloaded constructor provided in API."
25443994,2,0,0,java.util.HashMap,Here is an example of adding key and value in Java HashMap: code.
25443983,1,0,0,java.util.HashMap,I tried HashMap but it is not suitable.
25444320,2,1,4,java.util.HashMap,"The alternative in this situation is a HashMap, which is better than a SparseArray if you've got lots of items."
25444320,2,1,4,java.util.HashMap,"It is generally slower than a traditional HashMap, since lookups require a binary search and adds and removes require inserting and deleting entries in the array."
25447380,2,1,2,java.util.HashMap,Java docs If you want to change the size dynamically then you should use an ArrayList or you could also use a HashMap Android docs on ArrayList
25449987,2,0,0,java.util.HashMap,"Intended use of HashMap is not sorting, but still you can check from this topic to find some possibilities and ideas -and possibly the answer- here."
25449902,1,0,0,java.util.HashMap,Isn't it necessary to  types for Hashtable and HashMap in java?
25449902,1,0,0,java.util.HashMap,I have seen numerous examples for HashMap as well as Hashtable (in java) where they are declared as: code.
25450916,1,0,0,java.util.HashMap,I tried with HashMap and TreeMap.
25453492,2,1,3,java.util.HashMap,"For instance, that's the behavior you'll see in a HashMap."
25453602,2,0,1,java.util.HashMap,"A LinkedHashMap just keeps track of insertion order of the keys, and iterates in that order--it wouldn't improve performance over using a HashMap."
25456057,2,0,0,java.util.HashMap,"I want to count similar words, (how many times written) in arrList1 and arrList2  How about using a Map<String, Integer> like TreeMap or HashMap to save words without duplicates and their associated count-number?"
25458490,2,0,1,java.util.HashMap,"That's because hashCode represents 'weak equality', objects that are equal must have the same hashCode (to be correctly found by HashMap for example), but the reverse is not true."
25458492,2,0,0,java.util.HashMap,You can use for loop and store in HashMap.
25460478,2,0,1,java.util.HashMap,"Then, instead of using a HashMap, you can directly use ArrayList<News> to save."
25463507,1,0,0,java.util.HashMap,I also tried to use HashMap instead of put individual parameters but results no good.
25466032,1,0,0,java.util.HashMap,Allow JComboBox to accept List or HashMap instead of String[].
25466032,1,0,0,java.util.HashMap,Each city is stored inside a HashMap which holds the name as key(as there are no duplicates) and it's postcode.
25466032,1,0,0,java.util.HashMap,"Example: hashMap.put(""City"", ""AAA"") Now my issue would be to represent the HashMap OR List<String> inside the JComboBox itself."
25466085,1,0,0,java.util.HashMap,I get the data to the adapter via my DbHandler into a HashMap .
25473044,1,0,0,java.util.HashMap,I am trying to find the most efficient answer (without using a HashMap) to the problem: Find the most frequent integer in an array.
25473315,1,0,0,java.util.HashMap,"Java multi-threading atomic reference assignment In my code, there  HashMap<String,String> cache = new HashMap<String,String>(); code."
25473451,1,0,1,java.util.HashMap,Why can I not use the public methods from other classes on an object that I got from a HashMap?
25475056,2,0,1,java.util.HashMap,You can check this post about the same subject: How can I convert JSON to a HashMap using Gson?
25479633,2,0,0,java.util.HashMap,If you want to get values in HashMap by its key there is no complexity.
25484547,1,0,0,java.util.HashMap,I have the following HashMap: code.
25484653,2,0,2,java.util.HashMap,"If your key is of type HashMap<Integer, String> you can't query the map with a key of type String which unique_schemas.containsKey(mapkey.get(0)) would do, since mapKey.get(0) would return the string value for key 0, if it exists."
25489823,2,0,0,java.util.HashMap,Currently I am planning to create a HashMap<> from my list where key = pojo.getAccountId()  This sounds like a fine option.
25495274,1,0,0,java.util.HashMap,Merge all HashMap> values into a List.
25495452,1,0,0,java.util.HashMap,"If I have a java Hashtable or HashMap and load a bunch of entries with a set of keys, if I ""clear()"" it and then reload it with other entries using a subset of the same keys, will it reuse the same table-memory without thrashing?"
25495577,2,0,1,java.util.HashMap,"Indeed, the code of HashMap#put starts with: code."
25495577,2,0,1,java.util.HashMap,"The main advantage of the clear method is to not set the HashMap to its initial capacity, avoiding any useless resizing."
25497019,1,0,0,java.util.HashMap,Jax-rs/Jersey Bean Validation on HashMap.
25497019,1,0,0,java.util.HashMap,I have a resource that accepts a HashMap of SomeBean: code.
25499915,2,0,1,java.util.HashMap,"If you want to search them really quick by Id, I would prefer to take a HashMap<Integer,User> rather than List."
25501988,1,0,4,java.util.HashMap,"Can HashMap serialized in 1.7, be used in 1.6?"
25502192,2,1,11,java.util.HashMap,In the HashMap class both the Java version 6.0 and 7.0 the serialVersionUID is the following: code.
25502192,2,1,11,java.util.HashMap,"Moreover, even Java 8.0 has the same serial version UID for HashMap and also Java 5.0 (and even 1.4), which means you can read/write HashMaps with Java 1.4-5-6-7-8 without any problems."
25505648,1,0,1,java.util.HashMap,That is when I sort oslist on the basis of date HashMap my other HashMaps also gets sorted out correspondingly.
25505867,2,0,0,java.util.HashMap,"You can reuse your Comparable DateObject inside this function, but remember that you ALSO have to say to Collections.sort() how do you want to compare one HashMap with another."
25507295,2,1,4,java.util.HashMap,"If you wish to treat the indices of the list as keys to find the values stored in the list, you might be better off using a HashMap<Integer,String>."
25508321,2,1,1,java.util.HashMap,"If ""COMMIT"" follows end, then replace the top of the stack, with the popped HashMap."
25517451,1,0,0,java.util.HashMap,"""Any does not take parameters"" - storing Unit functions in a Scala HashMap."
25517451,1,0,0,java.util.HashMap,I am trying to store a function in my actions HashMap.
25517451,1,0,0,java.util.HashMap,"How do I store a function into a HashMap, then call it at a later time?"
25517948,2,1,1,java.util.HashMap,"To store a function of type () => Unit in your actions map you should declare the the type to be HashMap[String, () => Unit]."
25521007,2,0,2,java.util.HashMap,"It's because the Map you're putting them into is a HashMap, which isn't sorted."
25521007,2,0,2,java.util.HashMap,"There's no guarantee of the ordering of results you'll get out of the HashMap, even if you put them in in the right order."
25522667,2,0,0,java.util.HashMap,"First of all,the code System.out.println(""Details :"" + details); simply print your HashMap contents using Key and Value toString() method."
25527518,2,0,0,java.util.HashMap,"Computing the maximum directly instead of creating a throw-away HashMap<String,Integer> map could save quite some time, and so could moving Sets.newHashSet(result) out of the loop."
25527342,1,0,0,java.util.HashMap,If its initialize with 23 than why its not able to find Object from HashMap?
25527656,1,0,0,java.util.HashMap,HashMap display in JSP from Controller Springs.
25527656,1,0,0,java.util.HashMap,I am newbie to Springs and currently stuck at displaying HashMap Value to JSP page .
25533478,1,0,4,java.util.HashMap,Excluding indexes from a HashMap.
25537165,1,0,3,java.util.HashMap,"HashMap's KeySet, EntrySet, and values are null while table is not empty."
25537575,1,0,0,java.util.HashMap,I read the file with the code below and then created a HashMap with String as Key (to save customer name) and value as another HashMap (to save the category (name of category as key and price as value)) code.
25537722,1,0,0,java.util.HashMap,Using ConcurrentHashMap makes it simpler but I want to try with HashMap.
25539351,1,0,1,java.util.HashMap,If two objects of the same class have the same hashCode in Java then how would they be stored in a HashMap / HashTable?
25539402,2,0,0,java.util.HashMap,"Nor does returning a constant 1 break HashMap, but it does severely effect performance."
25539475,2,0,0,java.util.HashMap,how would they be stored in a HashMap / HashTable?Hashcode does not reside in the memory anywhere.
25543891,1,0,0,java.util.HashMap,Sort this HashMap by key?
25543891,1,0,0,java.util.HashMap,"I want to be able to sort the below HashMap by key, I have tried code like the following: code."
25543891,1,0,0,java.util.HashMap,The HashMap and it's key's: code.
25544198,2,0,0,java.util.HashMap,You have two way to achieve this: a.Use HashMap but convert the keySet into TreeSet code.
25543963,2,0,0,java.util.HashMap,keySet() is a non static method so you have to call keySet() on instance of HashMap.
25543975,2,0,2,java.util.HashMap,"You are making a call to the ""keySet()"" method using ""HashMap"" as if this is a static method."
25545963,2,1,4,java.util.HashMap,"There is HashTable but since it is synchronized it means more overhead than HashMap, so unless you need synchronization stick to HashMap or TreeMap if you need sorting."
27428697,2,0,0,java.util.HashMap,"To move the uploaded file to internal/external storage, all you need to do is:  Implements TempFileManagerFactory Implements TempFileManager Implements TempFile finally after creating server, call   server.setTempFileManagerFactory(new FileFactory());   To get the filename of the uploaded file   Map files = new HashMap(); session.parseBody(files); Log.d(TAG, files.toString());   Then you can access the file"
25559461,2,0,1,java.util.HashMap,I don't think a HashMap maintains insertion order.
25560932,2,0,1,java.util.HashMap,Using a HashMap to map the String name to a generic interface (void run( Object input )) Using an event dispatcher mechanism to alert listeners of input request.
25568492,1,0,0,java.util.HashMap,How to set ArrayList with HashMap in AlertDialog?
25575831,1,0,2,java.util.HashMap,Coding Map values to interface - Declare Map > and assign HashMap>().
25579735,2,0,0,java.util.HashMap,"If it is mandatory that the polynomials are stored in an ArrayList then:  get the user to refer to the polynomials by number (i.e. position in the list) instead of by name, or create a hashmap that maps from names to positions in the list, or store the polynomials in BOTH an ArrayList<String> AND a HashMap<String, String>."
25579751,2,0,0,java.util.HashMap,and to use the HashMap code.
25580477,1,0,0,java.util.HashMap,I can use a HashMap but I need to be able to extend the the collections with more values like this: code.
25580573,2,0,2,java.util.HashMap,"what @gla3dr's comment mean is that HashMap<String,List> sample = new HashMap<String,List>();  then you put data in your list."
25580754,1,0,0,java.util.HashMap,Convert a String to HashMap.
25641068,2,0,0,java.util.HashMap,"if you really have small images, you can get the pixels directly during onCreate() or even better create a Buffer (maybe a HashMap or a List) before you start the Activity..."
25585608,2,0,1,java.util.HashMap,"The HashMap eventually stores the key-value pairs in a table, and it uses the hashcode of the given key to compute the index within the table for its mapped value."
25586025,1,0,0,java.util.HashMap,The problem is that I can not fill the HashMap and/or ArrayList properly.
25591402,1,0,1,java.util.HashMap,"right now i'm using this code to load the following text file into a HashMap but i want to upload the .txt file to dropbox and have it read from the dropbox link, is this possible?"
25594351,1,0,0,java.util.HashMap,It is a HashMap.
25594426,2,0,3,java.util.HashMap,"To preserve insertion order when iterating use a LinkedHashMap instead of a HashMap, and to go in reverse do this: code."
25596301,1,0,0,java.util.HashMap,"However, I now have another object FooMap (Simple HashMap) which is identical to Foo in terms of properties, except not all the attributes exist."
25597211,1,0,0,java.util.HashMap,I have a HashMap that gets created in my method code.
25598491,1,0,2,java.util.HashMap,Why size of HashMap is not changing after removing large amount (~80%) of keys?
25598491,1,0,2,java.util.HashMap,"I need to use a HashMap whose keys are of Long datatype and values are some user-objects, defined as: code."
25598491,1,0,2,java.util.HashMap,"And if I replace list1' by aBitSetvariable and set thel^thbit instead of addingltolist1' and then create dummy HashMap with the objects of this class, then the results about memory are different."
25598491,1,0,2,java.util.HashMap,"Surprisingly, the memory is reclaimed after remove operation on HashMap."
25599723,1,0,0,java.util.HashMap,HashMap generics.
25601544,1,0,1,java.util.HashMap,"Insert "")"" to complete Expression error while new HashMap as parameter."
25601580,2,1,5,java.util.HashMap,HashMap constructor missing the parenthesis code.
25602347,2,0,1,java.util.HashMap,"Or you could use one HashMap<String,String> to perform lookups resulting in ""SEE"" or ""CEE""."
25602347,2,0,1,java.util.HashMap,"The generation of the HashMap<String,String> (and putting data into it) should only be executed once (at startup)."
25602347,2,0,1,java.util.HashMap,"This will increase performance with a factor equal to the number of elements you put into the HashMap<String,String> (in this case 14)."
25602519,2,0,0,java.util.HashMap,"3) Another significant difference between HashSet and TreeSet is that , HashSet is backed by HashMap while TreeSet is backed by TreeMap in Java."
25606202,2,0,1,java.util.HashMap,"For a HashMap to work, you need to implement both equals and hashCode."
25605948,2,0,0,java.util.HashMap,"Also, you will need to override the hashCode method in your class Fraction in order to use HashMap."
25609232,1,0,2,java.util.HashMap,"Since I dont like the auto generated code by xStream for a BiMap, I thought it might be a good Idea to convert a BiMap into a HashMap and serialize just the HashMap and when deserializing it, I just read in the HashMap again and convert it back to a BiMap."
25609840,1,0,0,java.util.HashMap,I used a HashMap to store a players name and the value of there profile.
25609840,1,0,0,java.util.HashMap,"HashMap<String, String> temp = new HashMap<String, String>(); for(String s : dataFile.getConfigurationSection(""users"").getKeys(false)) {         temp.put(s, dataFile.getString(""users."""
25610054,2,1,0,java.util.HashMap,"HashMap is not limited, your problem is probably you have repeating keys.."
25609897,2,0,2,java.util.HashMap,"HashMap is not limited, provided to have a load factor is increased."
25609897,2,0,2,java.util.HashMap,"In Sun's JVM, HashMap uses an array which is a power of 2."
25609897,2,0,2,java.util.HashMap,And the largest number of elements you can have before the HashMap will try to double its size to 2^31 (which it cannot do) is (2^30 * loadFactor) or about 700 million for the default load factor.
25618452,1,0,0,java.util.HashMap,"castToMapOf() is making some assumptions:  (1) The map can't be trusted to be homogeneous (2) Redesigning to avoid need for casting or instanceof is not viable (3) Ensuring type safety in an fail early manner is more important than the performance hit  (4) Returning Map<String,String> is sufficient (rather than returning HashMap<String, String>)  (5) The key and value type args are not generic (like HashMap<String, ArrayList<String>>)   (1), (2) and (3) are symptoms of my work environment, beyond my control."
25618452,1,0,0,java.util.HashMap,"(4) Is difficult to overcome because even if a HashMap.class was passed into a Class<M> I haven't been able to figure out how to return a M<K, V>."
25619888,2,0,2,java.util.HashMap,You can use HashMap and also can maintain the number occurences as value.
25622706,2,1,2,java.util.HashMap,"You want your Map to store the question number and its JPanel, so let's have Map<Integer, page1> map = new HashMap<Integer, page1>(); Fine, now put all your questions here."
25622858,1,0,1,java.util.HashMap,Is that the right way to do it and if yes what is the best way to transform the InputStream into KEY => VALUE HashMap?
25623351,2,0,4,java.util.HashMap,HashMap.hashCode() can only be used to tell if the map did changed (if the hashcode changes).
25623351,2,0,4,java.util.HashMap,"Proving the hascode-based method wrong: If the map contains Strings as values for example, we can change a value to a different String having the same hashcode easily, that way HashMap.hashCode() won't change."
25681631,2,0,0,java.util.HashMap,After consider them I have decided to keep Enumeration design but adding HashMap Matt suggestion and a lazy inizialitation for parsers in each identifier.
25625867,1,0,0,java.util.HashMap,EDIT: changed HashMap to TreeMap.
25626040,2,0,1,java.util.HashMap,"Option A: With List you have full control of your elements which would be much better for your case, all you have to do(if you even have to do so..) is implement your own grouping method for specific fields inside MyObject Option B: Would be to use HashMap as it has it's own sorting methods to sort your objects label."
25627408,1,0,1,java.util.HashMap,"Now, the data structure that naturally came to my mind was to use a java.util.HashMap to store the computed data, using a combination of column and row values converted to string as keys."
25627408,1,0,1,java.util.HashMap,It took around 2580 milliseconds with java.util.HashMap only to store and retrieve keys once.
25628140,2,0,1,java.util.HashMap,"Now, the data structure that naturally came to my mind was to use a java.util.HashMap to store the computed data, using a combination of column and row values converted to string as keys."
25628140,2,0,1,java.util.HashMap,"as a key for your HashMap, where @Value is a Lombok annotation generating all the boring stuff like equals, hashCode and the constructor."
25630187,2,1,1,java.util.HashMap,"extends Number>, a HashMap<String, List<Number>> is not a Map<String, List<?"
25635697,2,0,0,java.util.HashMap,You can use a String key and append each of the coordinates/points to the String so by the time you put the same coordinate it wont put it to a separate location in the HashMap.
25635738,2,0,0,java.util.HashMap,Then you could use this as the key to the HashMap.
25638189,1,0,0,java.util.HashMap,"Say a maintain a map like :  HashMap<Object,int> uniqueObjectMap."
25638260,2,0,3,java.util.HashMap,"Next, HashMap has a separate hash() method which Applies a supplemental hash function to a given hashCode (of key objects), which  defends against poor quality hash functions."
25638298,2,0,1,java.util.HashMap,If you will refer to same then it ll not throw an error because when HashMap get same key then it's related value will be overwrite.
25638298,2,0,1,java.util.HashMap,If the same key is exist in HashMap then it will be overwritten.
25642717,1,0,0,java.util.HashMap,Bob 19) and add to the HashMap.
25644464,1,0,0,java.util.HashMap,For example HashMap#toString() outputs something like this: code.
25644464,1,0,0,java.util.HashMap,"I created a custom class that extends HashMap and wrote my own toString() method, which leads to my real problem: code."
25644751,2,0,0,java.util.HashMap,Don't extends HashMap rather use String.subString() method on HashMap.toString() code.
25654232,1,0,1,java.util.HashMap,"I'm brute-forcing it now with a series of if statements, but I'd like to clean it up with some sort of HashMap and a loop."
25655930,1,0,0,java.util.HashMap,How to use 2 keys for get or set value on HashMap or ArrayList.
25655930,1,0,0,java.util.HashMap,But ArrayList And HashMap didn't support 2 keys for value Any Idea!!
25658031,2,0,0,java.util.HashMap,The problem is that you are passing an Arraylist of HashMap where SimpleAdapter wont have any idea on which data is to put in the layout of the ListView items.
25658812,2,0,1,java.util.HashMap,Concurrent modification will cause unpredicted in HashMap out put and you will experience with ConcurrentModificationException  .
25661729,1,0,2,java.util.HashMap,Main difference between HashMap and ConcurrentHashMap in the case of non-select operation?
25661729,1,0,2,java.util.HashMap,"As per my knowledge while performing non-select operation in HashMap and ConcurrentHashMap , the ConcurrentHashMap blocks the entire Segments(by default-16)?"
25661973,2,0,2,java.util.HashMap,"The difference is that HashMap is not thread-safe, which means that if you have several threads using it you need to take care of concurrent operations yourself."
25662082,2,0,0,java.util.HashMap,ConcurentHashMap has different structure than simple HashMap.
25662958,2,0,0,java.util.HashMap,"Why not just keeping two structures: Stack<String> and check, whether it contains or not filename_x, and second structure - your hashmap HashMap<String, String>?"
25662869,1,0,0,java.util.HashMap,Add amount of all person with same id from HashMap.
25669845,1,0,1,java.util.HashMap,"The source code of java.util.HashMap#put(Object, Object) is code."
25678284,1,0,2,java.util.HashMap,"How to search through values in a HashMap to find the highest value, and return both that value and key?"
25679121,1,0,0,java.util.HashMap,How do I explain Insert performance for HashMap in Java 8 and Java 7.
25679121,1,0,0,java.util.HashMap,I was going through Java 8 HashMap improvements which shows search performance improvement by around 20 % using Binary tree.
25682082,2,1,4,java.util.HashMap,"Note that the Java 8 HashMap requires slightly more memory and when measuring the initialization cost only, even slightly more memory requirements may have a big impact ."
25679850,1,0,0,java.util.HashMap,Partitioning concurrent HashMap.
25679850,1,0,0,java.util.HashMap,"I am looking like partitioning the concurrent HashMap, but dont know exactly what data structure to use."
25681716,1,0,1,java.util.HashMap,pages is a private HashMap member.
25684132,2,0,1,java.util.HashMap,"You should be using a HashMap instead of a Hashtable, unless you know exactly why a Hashtable is good for your situation."
25684132,2,0,1,java.util.HashMap,"So, never use Hashtable when a HashMap will do."
25684202,2,0,6,java.util.HashMap,You can provide an initial capacity in the HashMap constructor: code.
25684202,2,0,6,java.util.HashMap,"On the other hand, if you really only need a single-entry map and you're in a performance-sensitive situation, I would suggest you might not want to use HashMap at all."
25684202,2,0,6,java.util.HashMap,"If your code depends on having a HashMap rather than a Map, you should check whether you really want that top be the case."
25691374,1,0,1,java.util.HashMap,"I am new to HashMap, so I'm struggling with the code:  // create an arrayList to store values code."
25691374,1,0,1,java.util.HashMap,"HashMap with Multiple Values Key = 'some other input detailing the name of the next item' has values: [+1 item, +1 item] Key = 'some sort of user input detailing the name of the item' has values: [+ 1 item, + 1 item, + 1 item] but I haven't given the user a chance to input the number of items or the cost...."
25732663,2,1,0,java.util.HashMap,"and finally the StatsPrinter class, which leverages the data structure of the HashMap of ShoppingEntry's to print the desired statistics code."
25692704,2,0,1,java.util.HashMap,"IntBuffer's hashCode, equals, and compareTo methods depend on its contents, so they will work as HashMap or TreeMap keys."
25696108,1,0,2,java.util.HashMap,"I get:  ""Exception in thread ""main"" java.lang.ClassCastException: java.util.HashMap$Entry cannot be cast to java.lang.Integer?"
25696174,2,0,0,java.util.HashMap,howmanytimestheitemappears[i] is of type HashMap$Entry.
25696189,2,1,0,java.util.HashMap,First of all you have a problem with your HashMap declaration and initialization: Its better to give what types you are storing in your hashmap like: code.
25696524,1,0,1,java.util.HashMap,Performance of HashMap.
25696524,1,0,1,java.util.HashMap,"I can store the 450 strings in HashMap<String, Integer> and on arrival of the string, I can query HashMap to get the identifier."
25696773,2,0,0,java.util.HashMap,"Use HashMap<Integer, String>."
25697558,1,0,0,java.util.HashMap,Passing both HashMap and ArrayList values to view file.
25697558,1,0,0,java.util.HashMap,I am using Spring MVC and I am trying to pass both HashMap and ArrayList values to my view file.
25697609,1,0,3,java.util.HashMap,HashMap having null as key.
25697609,1,0,3,java.util.HashMap,How HashMap internally differentiate between null and 0 as key.
25697609,1,0,3,java.util.HashMap,If yes then both should go in same bucket at index 0 and there should be one value in the HashMap but this is not how HashMap works.
25697609,1,0,3,java.util.HashMap,what is the hash code for null key in HashMap?
25697887,2,0,0,java.util.HashMap,"This is possible because single Entry in the HashMap is not just key-value pair but also has a next field, so it's sort of simple linked list and adding of new entry looks as follows: code."
25697644,2,1,4,java.util.HashMap,and there should be one value in the HashMap   Incorrect.
25697644,2,1,4,java.util.HashMap,This is guaranteed by the Map and HashMap specification; i.e. the javadocs say that there will be a separate entry for each distinct key.
25697644,2,1,4,java.util.HashMap,"Prior to Java 8, the way that HashMap handles collisions is to chain together all of the entries that hash to the same bucket."
25697644,2,1,4,java.util.HashMap,"The HashMap.get(key) logic will iterate the chain for the relevant bucket, looking for an entry that matches the key."
25700609,2,0,1,java.util.HashMap,"The best you could do would be, when you create your objects, to put them into a big HashMap<Integer,Object> that maps hash codes to instances."
25700949,1,0,0,java.util.HashMap,"To create this pair, I have used HashMap<String, Set<String> allInfo, and implemented the concatanation as; code."
25703386,1,0,2,java.util.HashMap,I've noticed lately programmers tend to avoid creating classes to pass data around and simply move it using JSONObject if available or a basic HashMap.
25703386,1,0,2,java.util.HashMap,"So instead of creating class called Address, they would store it all in JSONObject/HashMap and pass it around as Object later casting to appropriate type."
25703759,1,0,0,java.util.HashMap,How to send/receive HashMap to/from database using Java and JDBC?
25703759,1,0,0,java.util.HashMap,"One of my Colleague, has configured Java and Mysql to {send/receive} = [IN/OUT] parameters as HashMap and returns the result as HashMap."
25708396,2,1,1,java.util.HashMap,The implementation of HashMap does not provide any order of the items.
25704701,2,0,0,java.util.HashMap,HashMap won't sort the data by key.
25706786,2,1,1,java.util.HashMap,"If you can't add parent pointers to the states, then just maintain a HashMap with the same information called something like previous."
25707497,2,0,0,java.util.HashMap,"(The obvious approach would be to create a wrapper class for HashMap that checked the map's size, etcetera each time you called put.)"
25707497,2,0,0,java.util.HashMap,"However, the regular HashMap class doesn't work that way."
25707906,1,0,0,java.util.HashMap,HashMap Iteration infinite loop.
25712591,1,0,5,java.util.HashMap,I need to convert a Java HashMap to an instance of TreeMap (including map contents) code.
25714520,1,0,1,java.util.HashMap,filling HashMap within loop.
25714520,1,0,1,java.util.HashMap,I read that HashMap takes references of objects and doesn't copy values to store data.
25714520,1,0,1,java.util.HashMap,But I think it's a very annoying behaviour because I can't fill a HashMap with a straighforward for loop...
25714623,2,1,0,java.util.HashMap,"First of all, in Java, all objects are accessed by reference - there is nothing special about the HashMap here."
25714623,2,1,0,java.util.HashMap,"If, at a later point, you no longer hold any reference to the HashMap object, it may be destroyed by the GC, and the GC may also decide to destroy the key and the value, if they were only referenced by the Hashmap."
25714623,2,1,0,java.util.HashMap,"You can't do map.put(10), because HashMap doesn't have a method with a compatible signature."
25714623,2,1,0,java.util.HashMap,The only put method that exists for HashMap expects two parameters.
25714902,1,0,0,java.util.HashMap,Java removing from HashMap and writing changes in file.
25714902,1,0,0,java.util.HashMap,"So here I have code I have HashMap made up by the words in file, I am adding words and writing them on file and it works, but when I use my remove function for some reaseon doesnt do anything here is the code :  code. }"
25714931,1,0,0,java.util.HashMap,I am trying to solve the above problem to solve the following HashMap problem.
25718338,2,0,0,java.util.HashMap,You should save the hours worked and the names of your employees in a HashMap.
25718338,2,0,0,java.util.HashMap,http://en.wikipedia.org/wiki/Hash_table For an explation of a HashMap.
25718338,2,0,0,java.util.HashMap,"After storing your values you can sort the HashMap like it is explained in the following link: How to sort a Map<Key, Value> on the values in Java?"
25718434,2,0,1,java.util.HashMap,"Create with Map> employeeHours = new HashMap>() Add to using employeeHours.put(name, hours)  Sorting java.util.Collections.sort is all you need."
25718370,2,0,0,java.util.HashMap,Your HashMap is as follows: code.
25718370,2,0,0,java.util.HashMap,You can put a AllItem object inside this HashMap.
25718370,2,0,0,java.util.HashMap,you are putting a String inside the HashMap hence it is giving error.
25718388,2,0,0,java.util.HashMap,"it's because you declared HashMap<String, AllItem> and you try to putall_Items.put(TAG_ITEM_NAME,item_name); which would probably be HashMap<String, String>()."
25718650,2,0,1,java.util.HashMap,"Also best practice dictates you should also implement hashCode() which is typically needed when using your object to behave correctly as a key in a HashMap  I see you implemented java.lang.Comparable, this is only typically used to allow sorting using Collections.sort."
25719643,1,0,1,java.util.HashMap,A HashMap would be good for that.
25721008,1,0,0,java.util.HashMap,Replacing the strings in text with values of the key in HashMap.
25728222,2,0,1,java.util.HashMap,"(b) your in-memory form is something like a java HashMap If the data is very simple then (b) is probably best, but it only allows you to do one kind of query, which is hard-coded."
25726016,1,0,0,java.util.HashMap,HashMap<> error.
25726016,1,0,0,java.util.HashMap,"Whenever i try to compile this function it gives an error at line 10  --> ErrorMessage : CandidateCode.java.10: illegal start of type static HashMap hm = new HashMap<>(); 1 error I'm trying to compile it on an website's compiler, but when i use netbeans it works completely fine."
25726039,2,0,5,java.util.HashMap,"Either change the project properties and make it compile with 1.7+ or change the code to : static HashMap<Integer, Integer> hm = new HashMap<Integer,Integer>(); Note : how to check compiler version."
25726073,2,0,1,java.util.HashMap,"change it to HashMap hm = new HashMap<Integer, Integer>();"
25728007,1,0,0,java.util.HashMap,I'm Trying to send a Object with a HashMap to a Client via Rest form a Glassfish server.
25728007,1,0,0,java.util.HashMap,Now I want to put a extenden Object in the HashMap and send it to the Client.
25728007,1,0,0,java.util.HashMap,And now I wanted to test what happens if i put the child-object in the HashMap and send it to the client.
25733591,1,0,1,java.util.HashMap,"Environment  Spring MVC 3.2.5 Jackson 2.2 Hibernate 3.5.4  ERROR     Estado HTTP 500 - Could not write JSON: failed to lazily initialize a collection of role: com.javalabs.web.dao.Task.actions, no session or session was closed (through reference chain: java.util.HashMap[""actions""]->java.util.ArrayList[0]->com.javalabs.web.dao.TaskAction[""task""]->com.javalabs.web.dao.Task[""actions""]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.javalabs.web.dao.Task.actions, no session or session was closed (through reference chain: java.util.HashMap[""actions""]->java.util.ArrayList[0]->com.javalabs.web.dao.TaskAction[""task""]->com.javalabs.web.dao.Task[""actions""]) Error trace code."
25735513,2,0,1,java.util.HashMap,HashMap or Red-Black Tree may help you!
25735513,2,0,1,java.util.HashMap,"HashMap,a String as key, and it's ocurrance as value; RBT(Red-Black Tree) also could do this."
25740297,1,0,0,java.util.HashMap,An imagefile and a file are added to two different folders in the server .Once i press the download button in the client(as shown in the screenshot) I want to download the file that refers the corresponding image from server.Is this possible by utilising  java.util.HashMap and pairing imagefile and the corresponding file?
25742104,2,0,3,java.util.HashMap,Data structures like HashMap and HashSet use hashCode to speed up things tremendously.
25742014,1,0,0,java.util.HashMap,Get first and last element from a HashMap.
25762355,2,0,0,java.util.HashMap,"So, you want to test a method which uses a HashMap structure for refering to some added objects and you want to test, if this method delivers some ordering in this structure?"
25762355,2,0,0,java.util.HashMap,"HashMap doesn't deliver any meaningful ordering at all and if that method should deliver some ordering, it is simply broken - implementation is faulty."
25742204,2,0,2,java.util.HashMap,First and last element concepts not applicable to Hash-based structures like HashMap and HashSet.
25742204,2,0,2,java.util.HashMap,Replace HashMap to LinkedHashMap (and modify .getSampleResults()) to return LinkedHashMap and check this question for futher details java linkedhashmap get first or last entry .
25742272,2,0,0,java.util.HashMap,There is no such a thing as a first and last element in a HashMap.
25742272,2,0,0,java.util.HashMap,"This process puts the Hash in HashMap, and in fact the more chaotic it is, the better the performance."
25742279,2,0,0,java.util.HashMap,HashMap has no such thing as order.
25742279,2,0,0,java.util.HashMap,"From HashMap javadoc:  This class makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time."
25742320,1,0,0,java.util.HashMap,I have an application running on tomcat and I have a static pool (HashMap) where I am storing an object each time a thread is created in tomcat through a request and I am deleting the entry from the HashMap when the thread dies.
25748763,1,0,0,java.util.HashMap,"I have a HashMap called List<String, Intger> wordFreqMap whose size is 234 code."
25749552,1,0,1,java.util.HashMap,"I mean that it can have any amount of layers inside, from very simple array of NameValuePair<String,String> to complex structure like HashMap<String,Object>."
25749552,1,0,1,java.util.HashMap,"Adding details: for example, if I know, that inside the ObjectNode I will always find just HashMap<String,String>, and that's all, I can just do: code."
25791711,2,1,0,java.util.HashMap,"It is without any recursion and I used HashMap where I shouldn't, but it's as a proof of concept and intended to be refactored."
25749630,1,0,2,java.util.HashMap,I could not figure out how to really use the above HashMap.
25752910,1,0,0,java.util.HashMap,Java HashMap get() method not returning element.
25752910,1,0,0,java.util.HashMap,"Using expressions in the NetBeans debugger I have figured that a value should definitely be returned from a HashMap (backoffMap), but I only get null."
25752910,1,0,0,java.util.HashMap,The key in the HashMap does not have a null value according to NetBeans.
25753293,2,1,2,java.util.HashMap,Did you modify the object after it was inserted into the HashMap?
25753401,2,0,0,java.util.HashMap,You can use a HashMap in Java instead and you get something slightly better.
25753401,2,0,0,java.util.HashMap,You might look at Trove or something for a HashMap whose values are ints instead of Integers.
25753544,2,0,0,java.util.HashMap,As for a tighter bound: --Use a HashMap instead of a TreeMap.
25753544,2,0,0,java.util.HashMap,--Iterate over the entries in your HashMap.
25754101,1,0,0,java.util.HashMap,-> can i replace somehow the 6D array and store the variable in 1D array or int variable.. -> I tried HashMap with key as list and value as Integer but eventually it is taking more time because HashMap internally uses Array.
25756494,1,0,1,java.util.HashMap,"Element is a separate enum set and the idea is to loop through it and to add the values to the HashMap<Element, Double> multipliers outside of the method."
25758597,1,0,0,java.util.HashMap,But the problem comes in where have a HashMap that I need to populate the Select: code.
25761992,1,0,1,java.util.HashMap,"I had an interview and interviewer has asked one question Interviewer - Why should we override hashCode and equals method for a class, if we are going to use this class's object as HashMap key."
25761992,1,0,1,java.util.HashMap,How HashMap uses hashcode and equals methods internally (Bucket logic).
25764436,2,0,1,java.util.HashMap,"The HashMap<K,V>.keySet() delivers all keys."
25767169,1,0,2,java.util.HashMap,"MyObject has an String name, which is the key in my HashMap."
25772645,2,0,0,java.util.HashMap,"Creating and garbage collecting TaggedLoggers would be nearly free, so there's no real benefit to caching them, but since TaggedLoggers uses a HashMap instead of a ConcurrentHashMap there is the potential, if it is called from multiple threads, for difficult to debug problems up to and including an infinite loop if two threads try to resize the map larger at the same time."
25774068,2,0,1,java.util.HashMap,"Since the JDK implementation of [Linked]HashMap does not permits you to override the equals/hashCode implementation, the only other ways are:  a wrapping object like this: code."
25774068,2,0,1,java.util.HashMap,"If you want to take the challenge, you can create a basic implementation using delegation/decoration over another HashMap (this could be another kind of map, like LinkedHashMap): code."
25774068,2,0,1,java.util.HashMap,But perhaps the best (for the memory) would be to rewrite the HashMap to directly use the handler instead of a wrapper.
25775792,2,0,0,java.util.HashMap,"Use a HashMap, then:  if your httpcode wasn't already in the map, insert it with count = 1. if your httpcode already exist in the map, then increase its counter code."
25777490,2,0,0,java.util.HashMap,"Instead of using HashMap, uses IdentityHashMap  ... in an IdentityHashMap, two keys k1 and k2 are considered equal if   and only if (k1==k2)."
25777490,2,0,0,java.util.HashMap,(In normal Map implementations (like HashMap)   two keys k1 and k2 are considered equal if and only if (k1==null ?
25777159,1,0,1,java.util.HashMap,Currently I have solved this problem using HashMap type technique given below in test1.
25777159,1,0,1,java.util.HashMap,But HashMap considers each new object as a new entry regardless of the contents within the object.
25779746,2,0,0,java.util.HashMap,"Your task you can simplify by using any JAVA tootkit for JSON, take look into this example: Check it out... For more understanding on JSON and how to parse it, check this: If you read the javadoc of JSONObject#get(String) which is actually HashMap.get(String), it states Returns: the value to which the specified key is mapped, or null if this map contains no mapping for the key Your JSON does not contain a mapping for the key time."
25779995,1,0,0,java.util.HashMap,I have Employee class and want to use this class as a key in HashMap and value of that map will be a string.
25780098,2,1,3,java.util.HashMap,UPDATE Please check the javadoc for more information but high level the HashMap chooses a bucket to put the value in based on the hashcode of the key.
25781541,2,0,0,java.util.HashMap,"Consider using a java.util.HashMap<Button, File> and calling hashMap.get(actionEvent.getSource()).getName() to get the file name."
25782149,2,0,0,java.util.HashMap,"To explain further, since you are likely to be adding to the HashMap the key will not remain constant and thus will no longer serve it's purpose as a key."
25782163,2,0,3,java.util.HashMap,A HashMap can be modified so should not be used as a key.
25782163,2,0,3,java.util.HashMap,This is very simplified but lets say you have a HashMap H containing two buckets.
25782163,2,0,3,java.util.HashMap,Whenever you add an Object to the HashMap it looks at that objects hashCode.
25782163,2,0,3,java.util.HashMap,"This is why the hashCode must be constant for any object being used as a key in a HashMap, as otherwise you can ""lose"" these keys."
25785841,2,0,0,java.util.HashMap,If you need to keep things in the same order you put them into the collection then use a LinkedHashMap instead of a HashMap as the HashMap may change the order.
25785987,1,0,0,java.util.HashMap,Users are added to a HashMap when they connect to the server via the client.
25785987,1,0,0,java.util.HashMap,The HashMap is updated everytime a user connects.
25786467,1,0,0,java.util.HashMap,I have tried asking but I got it in HashMap form.
25786589,2,0,0,java.util.HashMap,Or you can use HashMap.
25790160,2,0,0,java.util.HashMap,"However, and I don't recommend this, you can keep a registry of objects (a HashMap maybe), perform the deserialization, check if the registry contains the object, and replace it with the existing one."
29824241,2,0,0,java.util.HashMap,"(http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/CountDownLatch.html) SparseArray is similar to HashMap, but more memory-efficient for smaller sets."
25791787,1,0,2,java.util.HashMap,I get the following error when trying to pass a HashMap to my MainActivity class (TabooCards implements Serializable).
25791787,1,0,2,java.util.HashMap,"I read around here that HashMap is serializable, and that any Objects contained in the HashMap must also be serializable."
25792929,1,0,1,java.util.HashMap,"Keys and values ​​are stored in the HashMap, and as a parameter of the input string using a variable of StringBuffer class type: code."
25794381,1,0,0,java.util.HashMap,But I I'm getting a 'true' on instanceof HashMap and a 'false' on instanceof LinkedHashMap.
25794381,1,0,0,java.util.HashMap,"Not sure what's the problem in my original class, since there are not even any imports to HashMap and cachedPlansById only gets instantiated once, so not sure how it gets shadowed."
25795488,2,0,0,java.util.HashMap,The problem was that I changed the object type from HashMap to LinkedHashMap using hot deploy while debugging.
25794475,2,0,1,java.util.HashMap,But this code returns both true As child is in fact an instance of Parent so obviously LinkedHashMap object will be an instance of its superclass HashMap and secondly LinkedHashMap will obviously be an instance of LinkedHashMap  code.
25796949,2,0,0,java.util.HashMap,A HashMap will hold the custom characters that you want to use to print the number.
25800304,1,0,0,java.util.HashMap,Is it better to just use a HashMap then and use toString method on int[] array to serve as a key?
25815496,2,0,0,java.util.HashMap,Looks like you want to see how to add and retrieve objects from a HashMap code.
25800555,1,0,0,java.util.HashMap,Java: Using a HashMap as a sparse vector.
25800555,1,0,0,java.util.HashMap,"I am using HashMap with integer keys,  code."
25801441,1,0,0,java.util.HashMap,Note that i am creating multiple jdbcTemplates in this way and maintaining them in a HashMap.
25804499,1,0,0,java.util.HashMap,I have implemented this version which (unfortunately) uses autoboxing and HashMap as proposed in some answers including this one: code.
25804499,1,0,0,java.util.HashMap,As you can see this uses a HashMap with keys the Double values of the original array and as values the indices of the original array.
25805914,1,0,0,java.util.HashMap,How to get values of some specific range of keys in HashMap in Java?
25805914,1,0,0,java.util.HashMap,How to get values of some specific range of keys in HashMap in Java?
25805914,1,0,0,java.util.HashMap,Suppose I have a HashMap having keys and values as follows: code.
25806047,2,0,2,java.util.HashMap,Either:  Loop through the list of keys you want and query the HashMap for the value corresponding to that key (be aware some may be null).
25806047,2,0,2,java.util.HashMap,Loop through the entrySet of the HashMap looking to see if the key is one that you want.
25810876,2,1,1,java.util.HashMap,You should be able to modify the code to use a HashMap of ArrayLists for the model data.
25810219,2,0,4,java.util.HashMap,"But I think this is not really a good idea, and using a HashMap may be a better idea."
25811167,2,1,2,java.util.HashMap,Put all elements from list1 into a HashMap index by name.
25813994,1,0,0,java.util.HashMap,HashMap to XML syntax.
25814818,1,0,0,java.util.HashMap,"in my Custom Adapter, I retrieve data from server by json and keep them in ArrayList<HashMap<String, String>> MyCustomAdapter constructor is like this: code."
25814983,2,1,1,java.util.HashMap,"Since you are using an ArrayList<HashMap<String, String>> an not a cursor/contentprovider your adapter won't be automatically notified automatically by changes on the underlying data."
25818401,2,1,8,java.util.HashMap,"It can now determine from the left side of the assignment <String, Object> through the call to Collections.synchronizedMap to the diamond operator in the parameter to that call, new HashMap<>()."
25818314,2,0,0,java.util.HashMap,It's because you are trying to pass new HashMap<>() to method of Collections class.
25820180,2,1,1,java.util.HashMap,"The reason it appears to have six elements at all is because you modify the contents of the List after you add it to the hash, something you're never supposed to do with a HashMap or HashSet."
25820180,2,1,1,java.util.HashMap,"If you add an object reference to a HashMap or HashSet, and later modify the object in a way that changes the hash code, you will screw up the workings of the hash."
25826586,2,1,2,java.util.HashMap,See HashMap.
25829078,2,0,0,java.util.HashMap,"We'll create four trees; codons starting with T, with A, with C, and with G. We'll store these trees in a HashMap for convenient retrieval by their starting character."
25828888,1,0,0,java.util.HashMap,HashMap.containsKey() returns false.
25850382,2,1,0,java.util.HashMap,"ConcurrentLinkedQueue is wait-free (i.e. lock-free and threads won't starve) and doesn't perform any copying If you want to maintain a set instead of a list, then you can have multiple threads add objects to the ConcurrentLinkedQueue and have a single thread poll the queue and add the objects to an unsynchronized HashMap; this may be more efficient than using a ConcurrentHashMap."
25843919,1,0,1,java.util.HashMap,Store JSON array value in HashMap and remove duplicate.
25843919,1,0,1,java.util.HashMap,"I am parsing it and trying to store in HashMap, but the key value is duplicating."
25844043,2,1,1,java.util.HashMap,"I would suggest the HashMap be of type <String,List<String>> so allowing you to store items with the same mandatory_tag in the same list under 1 key."
25865205,2,0,0,java.util.HashMap,"In those cases, I'd like to use a custom HashMap: code."
25860902,2,0,1,java.util.HashMap,Here is one way to do this (consult the documentation for applying as HashMap): code.
25988299,2,0,4,java.util.HashMap,"A little more hint, you can use the HashMap<Integer,List<String>> where the Integer value is hashCode as you calculated and the List<String> is the collection of actual value got by forming the String from coutrycode + year + price ."
25861173,2,0,0,java.util.HashMap,Check HashMap documentation for details.
25861173,2,0,0,java.util.HashMap,Below is the documentation for HashMap constructors that you have used :  HashMap()   Constructs an empty HashMap with the default initial capacity (16) and   the default load factor (0.75).
25861173,2,0,0,java.util.HashMap,HashMap(int initialCapacity)   Constructs an empty HashMap with the specified initial capacity and   the default load factor (0.75).
25861179,2,0,0,java.util.HashMap,The version of HashMap constructor with an initial size argument is there for performance reasons - the semantics of the map are unaffected.
25861182,2,0,0,java.util.HashMap,The firs one constructs an empty HashMap with the default initial capacity (16) and the default load factor (0.75).
25861182,2,0,0,java.util.HashMap,The other one Constructs an empty HashMap with the specified initial capacity and the default load factor (0.75)  (viz in your case 1).
25862306,1,0,1,java.util.HashMap,When we know that HashMap is allowed to put null value and key.
25862338,2,1,3,java.util.HashMap,"Although individual keys and values in a HashMap are allowed to be null, the map argument to putAll is not."
25862338,2,1,3,java.util.HashMap,The documentation of HashMap.putAll says:  throws NullPointerException - if the specified map is null  You can use a non-null empty map if you want to putAll 0 entries.
25862353,2,0,0,java.util.HashMap,"HashMap allows null value, but the entire object should not be null."
25862369,2,0,0,java.util.HashMap,"If we look in the source, the first line of HashMap.putAll(Map<K, V> map) is int numKeysToBeAdded = m.size(); Since m in above line is null, a NPE is thrown."
25863972,2,0,1,java.util.HashMap,"eg:   HashMap and TreeMap extend AbstractMap which implements Map ArrayList and LinkedList extend AbstractList which implements List HashSet and TreeSet extend AbstractSet which implements Set  In your code, you should declare your variables as the interface where possible."
25864061,2,0,1,java.util.HashMap,"Then you add additional functionality to the concrete collection classes like ArrayList , HashMap, HashSet which extend these Abstract Classes."
25865330,2,0,1,java.util.HashMap,You can store your values in a HashMap.
25865330,2,0,1,java.util.HashMap,HashMap is a collection consisting of key-value pairs.
25865330,2,0,1,java.util.HashMap,Now you can get the racer objects from your HashMap by calling the getMethod and putting the name as parameter in it.
25865330,2,0,1,java.util.HashMap,This method should return the HashMap of racers.
25865330,2,0,1,java.util.HashMap,In your main method you create a new HashMap: code.
26457684,2,1,4,java.util.HashMap,"If so, then you can retrieve the value object from your Session HashMap and apply it to your current connection."
25874457,1,0,3,java.util.HashMap,Can there be a HashMap with 3 different types in Java?
25874457,1,0,3,java.util.HashMap,I have a HashMap like code.
25874533,2,0,2,java.util.HashMap,You can then use that as the value type of your HashMap.
25877338,2,1,0,java.util.HashMap,because you are missing <> after HashMap.
25878017,1,0,5,java.util.HashMap,How can a TreeMap entry be cast to HashMap.Entry?
25878086,2,1,9,java.util.HashMap,"Although you are accessing it on HashMap, Entry is actually a (implicitly static) member type declared in Map."
25881551,2,0,0,java.util.HashMap,"A fun data structure you would be able to use here is a Map (more specifically in Java, a HashMap)."
25884547,1,0,0,java.util.HashMap,"I am using lower version of java Mean I am blackberry developer in which java 1.4 used  (Java version that RIM used that there is no ArraryList, HashMap present."
25885551,2,0,0,java.util.HashMap,"there are gaps), then HashMap is not a suitable data structure."
25886065,2,1,1,java.util.HashMap,A HashSet (and HashMap) offers O(1) complexity.
25886065,2,1,1,java.util.HashMap,You can read more about the concept of capacity and load factor in the Javadoc of HashMap.
25886061,2,0,1,java.util.HashMap,"The huge number of map entries you see are most probably the internals of BasicDBObject (ranked #6 in your dump), which extends HashMap."
25887378,1,0,0,java.util.HashMap,fetching from LinkedHashMap HashMap based on index.
25889698,1,0,0,java.util.HashMap,Void Class in HashMap as a Value object.
25889698,1,0,0,java.util.HashMap,I know the basic that a HasMap is a Key-Value pair but I want to have a HashMap with keys only(No Values)  I want to put  below java snippet in my complex method(i.e HashMap with only Keys and no value associated to those Keys).
25889808,2,0,1,java.util.HashMap,A HashMap is a Map which is a Key-Value-pair.
25889743,2,0,0,java.util.HashMap,"If you really need to use a HashMap for whatever reason, you can just add null values instead of void."
25895202,1,0,0,java.util.HashMap,"I have tried the following :- In each subflow I used <json:json-to-object-transformer returnClass=""java.util.HashMap"" /> and then I used <set-payload value=""#[groovy:payload.inject([:]) {result, part -> result.putAll(part); result}]"" />  I have taken the following as a reference :- I merge two different payloads into one payload But no use .."
25900105,1,0,0,java.util.HashMap,I am trying to parse a text file and store the first word as the key to a HashMap and store the remaining words as its value.
25900226,1,0,0,java.util.HashMap,I was just seeing the difference between a HashMap and HashTable.
25900226,1,0,0,java.util.HashMap,"Other than the obvious synchronized and unsynchronized difference, I noticed that HashTable extends the Dictionary class while HashMap implements Map."
25902178,2,0,0,java.util.HashMap,We are expected to use HashMap and other implementations of Map interface introduced in Java 1.2.
25900483,1,0,0,java.util.HashMap,"For example, if I perform some shortcut on import java.util.HashMap; in a class, I want Eclipse to show the lines where I instantiate HashMaps and call HashMap methods in that class."
25903137,1,0,13,java.util.HashMap,Java8: HashMap to HashMap using Stream / Map-Reduce / Collector.
25908446,1,0,1,java.util.HashMap,"I have a JSONArray which adds data to list = new ArrayList<HashMap<String, String>>(); The list display is working fine."
25909311,1,0,0,java.util.HashMap,"Once these analyses are completed, the resultant objects are placed in a HashMap with the original objects as keys, i.e. HashMap<AnalyzedObject, AnalysisResult>  Due to the nature of relationships in the underlying data model, I get a lot of duplicate tasks, which obviously do not need to be reprocessed."
25914283,2,0,6,java.util.HashMap,You don't have to use a HashMap.
25917531,1,0,2,java.util.HashMap,HashMap with multiple Value.
25917597,2,0,1,java.util.HashMap,"Try HashMap<Key, List<Value>>  You will need to manage the list, creating if it doesn't exist already, and adding to it if you need."
25919793,2,1,1,java.util.HashMap,"The $ is a separator that indicates that there is a nested class HashIterator inside the HashMap class, and that there is an anonymous inner class (the fourth one, it looks like) inside the SessionsFragment class."
25920991,1,0,1,java.util.HashMap,Java method returning HashMap with dynamic object.
25920991,1,0,1,java.util.HashMap,I have several TSV files and want to read them and populate in a HashMap of   [first field --> other fields in an object].
25927427,1,0,0,java.util.HashMap,So I think I need help in making use of HashMap or List (Arraylist) to generate the below complicated JSON.
25929722,2,1,1,java.util.HashMap,"From other side (what I would prefer), you have to read the file during startup and store information in application cache (like HashMap etc.)."
25930119,1,0,0,java.util.HashMap,"Do I need to create a Model class which contains all the fields from the query, or can I use some sort of HashMap?"
25931128,2,1,2,java.util.HashMap,And use matcher.group(1) as key to your HashMap in a while (matcher.find()) {..} loop.
25932827,2,0,0,java.util.HashMap,When you put NULL to HashMap there is special check if you are trying to put NULL as key (called putForNullKey()).
25933619,2,0,0,java.util.HashMap,HashMap does not call  hashcode when null is passed as key and null Key is handled as special case.
25933619,2,0,0,java.util.HashMap,put Method: HashMap puts null key in bucket 0 and maps null as key to passed value.
25933619,2,0,0,java.util.HashMap,Linked list data structure used by HashMap (a static class in HashMap.java) static class Entry implements Map.Entry {          final K key;          V value;         Entry next;         final int hash;  } In Entry class the K is set to null and value mapped to value passed in put method.
25932862,2,0,1,java.util.HashMap,"That is why it returns same value, cause all keys you are providing are null and are in the same bucket of your HashMap."
25932793,2,0,0,java.util.HashMap,A HashMap can only store one value per key.
25932793,2,0,0,java.util.HashMap,"Null doesn't have any hashcode, but is tolerated as key in the HashMap (there are other Map implementations which don't allow Null as key)."
25933318,1,0,0,java.util.HashMap,"I'm very new to this, unable to figure out why the property class shows ""HashMap"" instead of showing ""com.agent.Test"" or ""com.agent.Test2""?"
25934463,1,0,0,java.util.HashMap,Remove Transitivity relation using HashMap.
25940950,2,0,1,java.util.HashMap,"Note: Your Employee class should give access to name field either through getter method or change it to public  There are other alternatives, but it depends on your requirements and tradeoff's between speed, space, readability, resources etc One thing i can think of is HashMap, which has constant time lookup in average case code."
25948540,2,1,1,java.util.HashMap,The Javadocs provide some insight into the performance of the implementations provided by Java: http://docs.oracle.com/javase/7/docs/api/java/util/TreeMap.html http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Beyond that writing some benchmarks and comparing different implementations will give you more insight.
25949153,2,1,1,java.util.HashMap,"Myself, I found it easiest to create two enums, a Hat enum and an Earrings enum, then create a Head class that holds the values of these two enums, and importantly overrides Object's equals and hashCode methods so it will work well in a HashMap."
25949153,2,1,1,java.util.HashMap,"I then associate each Head object with an ImageIcon in a HashMap, and in my ActionListener select the correct icon using this HashMap."
25951555,2,1,6,java.util.HashMap,(You can also use a HashMap instead of the multidimensional array.)
25951555,2,1,6,java.util.HashMap,"Pop one off, and call it P. Then:  Look in your array or HashMap to see if P has been solved."
25952080,2,0,0,java.util.HashMap,"To keep track of the object now, you can use a HashMap."
25955841,2,0,3,java.util.HashMap,"Check out hashtable data structure for example (in Java, you can take a look at HashMap or Hashtable) For example, you have a structure, let's call it CartoonCharacter, holding these pairs like:  This key-value relationship would look something like: code."
25957421,1,0,0,java.util.HashMap,Preserving inserting order in HashMap & tutorial sample.
25957421,1,0,0,java.util.HashMap,According to this question: How to preserve inserting order in HashMap?
25957421,1,0,0,java.util.HashMap,"HashMap makes no guarantees as to the order of the map; in particular,   it does not guarantee that the order will remain constant over time."
25957814,2,0,0,java.util.HashMap,"It's much better to do this with a HashMap<Integer,String>."
25957814,2,0,0,java.util.HashMap,"Use a loop to fill the HashMap with .put(), perhaps from a file."
25960006,2,0,0,java.util.HashMap,"convert your list into a Hashset and this will do the trick, since hashsets doesn't allow duplicate values to be stored but in case of HashMap and if there's a duplicate, it replaces the old value with the new one."
25970702,2,1,2,java.util.HashMap,"Edit: please change the parameters list of your view so that you accept a Map and not a HashMap (like this Map[String,String])."
25970539,2,1,3,java.util.HashMap,"Simple implementations could be to use HashMap, which have O(1) acess time for most cases, but the factor is relatively high."
25970539,2,1,3,java.util.HashMap,"Implement a Map interface that provides T getData(Vertex) and void setData(Vertex, T) One implementation of that interface could be backed by a HashMap<Vertex,T> but the one I was suggesting actually only stores an integer index that is used to index into the Object[] arrays at the vertices."
25970539,2,1,3,java.util.HashMap,This should perform a lot better than a HashMap based approach and does not require the boxing and unboxing for storing the data in the Object[].
25970045,1,0,1,java.util.HashMap,"As far as I know, a .properties-file can only be used in the same way as a HashMap, with a key-value pairing of only Strings."
25970880,2,0,0,java.util.HashMap,Just use myJsonObj.toString() instead of myJsonObj.toJSON() Your problem happens because a JSONObject is stored as a HashMap to allow the programmer to reach values with methods based on keys.
25970880,2,0,0,java.util.HashMap,You can figure that json attributes are stored as a HashMap<JsonElement>
25972810,2,0,0,java.util.HashMap,"The following code shows a class derived form HashMap, Its constructor may answer your query  code."
25995992,2,0,0,java.util.HashMap,In the tJavaRow component I created a new HashMap and inside that map I put the db table record.
25995992,2,0,0,java.util.HashMap,After that I put that HashMap instance to globalMap in the same tJavaRow component.
25974291,1,0,0,java.util.HashMap,i am just synchronizing the HashMap using Collections.synchronizedMap(map); then adding values to the map as shown below.
25977531,2,0,0,java.util.HashMap,You should always use entrySet() method when iterating over keys and values of an HashMap.
25985543,2,1,1,java.util.HashMap,"Almost all the Java Collection is mutable like ArrayList, HashMap and so on, but Scala Seq, List, Map, it will be imported as an immutable collection, so you need to convert these all the time by using Scala.collection.JavaConversion._."
25980539,1,0,0,java.util.HashMap,why a set returns unordered values even since it implements a HashMap internally?
25980539,1,0,0,java.util.HashMap,can anyone tell me why a set returns unordered values even since it implements a HashMap internally ?
25980600,2,0,0,java.util.HashMap,"According to the documentation for HashMap:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
25983775,1,0,0,java.util.HashMap,HashMap - getting all the values associated with a key.
25983775,1,0,0,java.util.HashMap,I created a HashMap where each key contains an ArrayList as a value.
25984470,2,0,0,java.util.HashMap,"PS: By the way, a HashMap usually has a Key and a Value, If you wanna store just a String you should use a Set instead."
25989304,2,0,0,java.util.HashMap,"Having said that, using a HashMap will allow you to store the two parts of the line separately while maintaining the link between them."
25989304,2,0,0,java.util.HashMap,"If you wish to retain insertion order into the map, substitute HashMap for a LinkedHashMap."
25989823,1,0,2,java.util.HashMap,"But, how the output is in sorted order even though I have used HashMap()?"
25989950,2,0,0,java.util.HashMap,HashMap hashes the key (which is an Integer in this case) and uses that hash as an array index.
25989950,2,0,0,java.util.HashMap,What all that means is: you shouldnt be surprised that the HashMap is acting this way.
25989951,2,0,0,java.util.HashMap,The HashMap provides no guarantee as to the order of the items stored.
25990215,2,1,0,java.util.HashMap,"If you look into the source of HashMap.put(), you can see that the hash table index of the object is determined like this: code."
25990215,2,1,0,java.util.HashMap,The toString() method of HashMap iterates over the hash table and the elements in each index of the hash table.
25990013,2,0,0,java.util.HashMap,As suggested by others HashMap never guarantees the insertion order while fetching.Since the official doc says to not rely you might find occasions when it would not retain the order so better code likewise.
26055509,2,0,6,java.util.HashMap,"EDIT: If you need to map HashMap to more complicated structure, you can always use ""intermediate"" class."
25996709,2,0,0,java.util.HashMap,"List<Object> or HashMap<Object,Object> obj; or something of that sort.Maybe if you know all the kinds of Objects that will be held in that data structure you can use the method getClass() within a switch statement to find out what class the Object belongs to."
25996718,1,0,0,java.util.HashMap,HashMap reference not changing.
25996718,1,0,0,java.util.HashMap,I have created a new HashMap Object say.
25998955,2,1,9,java.util.HashMap,"You may as well be using a HashMap with synchronized or synchronizedMap() to lock the whole table (which is what you do when wrapping operations in synchronized, since the monitor implied is the entire object instance.)"
26003451,2,1,4,java.util.HashMap,"Why not just schedule your processing method for 5 minutes from now via ScheduledExecutorService or your favorite scheduling mechanism, and save the event in a HashMap<User, Event> member variable."
26003451,2,1,4,java.util.HashMap,"At the end of your processing method, delete the event for this user from your HashMap, and the next event to come in will be stored and scheduled."
26005366,2,0,1,java.util.HashMap,"If you load your dictionary into a HashMap, you can test each candidate substring (""wunderground"", ""underground"", ""nderground"", ""derground"", ..., ""wundergroun"", ..., ""under"", ... ""ground"", ...) very quickly, specifically, in O(1) time."
26006743,1,0,0,java.util.HashMap,"Hi everyone i am new here and i would like your help on this task, i dont have much experience working with HashMap Actually i am receiving this String with the next value   String value1             = ""DA45:1|DA33:2|DA25:3"";  actually i have code."
26019959,1,0,2,java.util.HashMap,Is HashMap really randomized?
26019959,1,0,2,java.util.HashMap,Is the retrieval of entries from HashMap really randomized?
26020448,2,0,2,java.util.HashMap,What happens when you call the get method on a HashMap for a non-null key:  The hashCode() method for your key is called.
26020448,2,0,2,java.util.HashMap,Because the buckets are simply a java array of HashMap.Entry objects the resulting integer can be used as a plain array index.
26020448,2,0,2,java.util.HashMap,So you can see that an efficient use of the HashMap will try to minimise the number of entries that end up together in a bucket.
26020243,1,0,1,java.util.HashMap,"My Android app is receiving json from google places api.In that rating is usually float value.so when i receive this rating as double data type in following code it says The method put(String, String) in the type HashMap is not applicable for the arguments (String, double).so I need to to convert this p.rating to string in order to add hashmap to arraylist to pass it as key,value pair.how I can achieve that."
26025236,1,0,2,java.util.HashMap,HashMap different bucket index for a key possible?
26025236,1,0,2,java.util.HashMap,My concern was to check how Java HashMap gets the same index for a key.
26025236,1,0,2,java.util.HashMap,I tried to reproduce the indexing algorithm of HashMap.
26025236,1,0,2,java.util.HashMap,"So for same key I am getting different index, as length of HashMap changes."
26025332,2,0,0,java.util.HashMap,"Considering just these operations, you could implement it thanks to a HashMap<java.awt.Point,SomeType>, but I don't think it already exists this way."
26026363,1,0,1,java.util.HashMap,"My guess, without diving into the actual code, is that limiting the size of the HashMap simply leads to higher probability of collisions, though I would have thought a core data structure would handle this a bit more gracefully."
26028101,2,0,0,java.util.HashMap,"As you can see, the instance returned by that method is a java.util.HashMap; you can add more than the number of elements you requested; and collisions are handled just fine."
26028101,2,0,0,java.util.HashMap,"In fact, if you look at the source, that method is just a wrapper around the HashMap constructor."
26026738,2,0,0,java.util.HashMap,"Since ImmutableMap knows that the number of entries it contains will never change, it tends to be possible for it to optimize its size better than a mutable HashMap."
26026424,1,0,1,java.util.HashMap,HashMap speed greater for smaller maps.
26026424,1,0,1,java.util.HashMap,"This may be a strange question, but it is based on some results I get, using Java Map - is element retrieval speed greater in case of a HashMap, when the map is smaller?"
26026424,1,0,1,java.util.HashMap,"I have some part of code that uses containsKey and get(key) methods of a HashMap, and it seems that runs faster if number of elements in the Map is smaller?"
26026424,1,0,1,java.util.HashMap,"My knowledge is that HashMap uses some hash function to access to certain field of a map, and there are versions in which that field is a reference to a linked list (because some keys can  map to same value), or to other fields in the map, when implemented fully statically."
26026424,1,0,1,java.util.HashMap,"Can it be that the execution time is smaller, because individual search inside HashMap is smaller, so is there sum?"
26027381,2,0,0,java.util.HashMap,With HashMap there are overloaded constructors with extra settings.
26027381,2,0,0,java.util.HashMap,Constructs an empty HashMap with the specified initial capacity and load factor.
26027381,2,0,0,java.util.HashMap,"For a specific key class used with a HashMap, having a good hashCode can help too."
26026923,2,0,0,java.util.HashMap,"What you can do to make your program more efficient, is build a HashMap<Character, String> of hex characters to binary strings: code."
26028388,1,0,1,java.util.HashMap,So I've implemented a HashMap to store 3 values in.
26028388,1,0,1,java.util.HashMap,Both of these are stored in the HashMap.
26029181,1,0,0,java.util.HashMap,I am aware that HashMap get/put operations are O(1).
26382975,2,1,3,java.util.HashMap,"As from what I've investigated in the JSONObject source code, you can see that it uses a HashMap internally, and as you know HashMap doesn't keep any order."
26382975,2,1,3,java.util.HashMap,"public JSONObject() {       this.map = new HashMap<String, Object>();  } You have 2 alternatives:  Modify the current JSONObject source code so that the map is initialized with a LinkedHashMap."
26479306,2,0,0,java.util.HashMap,You can download the source code from http://www.json.org/java/ and modify JSONObject.java using TreeMap instead of HashMap.
26037613,2,0,0,java.util.HashMap,I think the O(n) intended solution is a HashMap.
26037613,2,0,0,java.util.HashMap,"OK, maybe I should have explained the algorithm: for each a[i], check if (x-a[i]) is in the HashMap."
26037613,2,0,0,java.util.HashMap,"If not, add a[i] to the HashMap and continue."
26047603,2,0,0,java.util.HashMap,This is where something like a HashMap works well.
26047603,2,0,0,java.util.HashMap,"With the HashMap idea, we can take any integer you can think of and use that as a key, and then associate its count c as the value you fetch from the key."
26064682,2,0,2,java.util.HashMap,I would instead suggest a HashMap which allows you to associate your Strings with the Integers they map to.
26065471,2,0,0,java.util.HashMap,You could use a HashTable or HashMap with the key as the Hash of the first + last name.
26070172,2,0,0,java.util.HashMap,"Assuming you're using something like HashMap<ArrayList<K>,V>:  Here's how it works."
26070172,2,0,0,java.util.HashMap,"When you search for a key, HashMap computes the hash code of the key."
26071940,2,0,0,java.util.HashMap,"you can use an array of Object class like  Object[][] ob = {{""One"", 1},{""Two"", 2}, {""Three"", 3}}; Note: to access the values you will need to cast the values to the required type (string does not need to be cast explicitly)  OR you should use HashMap Like code."
26071940,2,0,0,java.util.HashMap,"use its put(String, Integer) method to insert the values and get(index) to access the values Note: You cannot store the primative types in a HashMap but you will have to use Integer instead of int and later you can change it to int."
26071692,1,0,1,java.util.HashMap,About Java HashMap: when key is a Set.
26071692,1,0,1,java.util.HashMap,"I have a toCopy HashMap that's of the form HashMap<String, Set<Integer>>."
26080606,2,1,2,java.util.HashMap,"It is blocking for the duration of the call, but all the call has to do essentially is HashMap.add() with a bit of error checking."
26073989,1,0,0,java.util.HashMap,"How to cache HashMap data for ""n"" number of iteration."
26073989,1,0,0,java.util.HashMap,Question 1) Which is the best approach extending HashMap or writing a class which holds a HashMap Question 2) Write the code for the above problem.
26075027,2,1,0,java.util.HashMap,"1st question: I would also compose with HashMap, instead of extending it, because your Cache system ISN'T a HashMap ; it just HAS a HashMap."
26075667,1,0,0,java.util.HashMap,JDK HashMap was too slow.
26077151,1,0,1,java.util.HashMap,Multiple key on HashMap: it deletes existing values?
26079844,2,0,2,java.util.HashMap,"You want to sort items by value, this can't be done by default in an HashMap nor a TreeMap."
26079898,2,0,2,java.util.HashMap,"A HashMap<String, Pair> for the forward mapping."
26085353,1,0,1,java.util.HashMap,Is LinkedHashMap converted to HashMap because of ResponseBody annotation?
26085919,2,0,0,java.util.HashMap,"I have also face same problem when I have used HashMap in my application, it doesn't guarantee that it will receive in same order in which we add them."
26087015,1,0,1,java.util.HashMap,how to create HashMap or Arraylist which will contain all java class's constants.
26087015,1,0,1,java.util.HashMap,"I just want all this String values in static ArrayList or HashMap where Integer in HashMap will be 0,1,2,3....1000."
26096091,2,1,2,java.util.HashMap,"=> Start traversing LL1 and set the frequency to 0 for all the NumbersBy the time all values in LL1 is iterated, you have all the Numbers present in HashMap with frequency = 0 code."
26096091,2,1,2,java.util.HashMap,"=> Now start looping through the LL2, pick the numbers using them as key and increment the value by 1.By the time all values in LL2 is iterated, you have all the common numbers present in both LL1 and LL1 inside HashMap havingfrequency > 0 code."
26092768,1,0,1,java.util.HashMap,Can't compare HashMap key value to Scanner input.
26092768,1,0,1,java.util.HashMap,I'm trying to compare a key value from a HashMap to an index of an array generated from user input.
26096180,1,0,1,java.util.HashMap,I am following this question  How to generically implement calling methods stored in a HashMap?
26099942,2,0,0,java.util.HashMap,You can use HashMap.
26108035,1,0,6,java.util.HashMap,At initialization I read in the whole file and create a large HashMap which will be later used to look strings up.
26111066,2,1,3,java.util.HashMap,"Very little per-entry memory overhead, much less than in standard HashMap and ConcurrentHashMap Good configurable concurrency via lock striping, if you already need, or are going to parallelize text processing in future."
26124193,2,0,0,java.util.HashMap,"To convert from your list, you could use a HashMap as גלעד ברקן suggested."
26109997,1,0,1,java.util.HashMap,"But my problem is that HashMap/Map supports only 1 key, and 1 value."
26113655,2,1,4,java.util.HashMap,"Integer overrides hashCode() and equals() appropriately, which is all that's required for non-identical objects to be looked up in a HashMap."
26121078,1,0,0,java.util.HashMap,WeakReferences in a HashMap.
26121078,1,0,0,java.util.HashMap,I want to store a HashMap of Callbacks.
26121524,1,0,1,java.util.HashMap,"On the server, under beans I can see the callStatistics bean, with the HashMap Attribute."
26122215,2,0,0,java.util.HashMap,"If you want to sort on a predefined order (i.e., you've got some fixed ordering of strings in mind), then you could do it like this:  Set up a HashMap<String,Integer> sortTable."
26122215,2,0,0,java.util.HashMap,"When you compare two String instances s and t, you look both up in your HashMap and compare them by the value they map to."
26122294,2,1,1,java.util.HashMap,"Even if the data structure is not the same (Set, HashSet) instead of (Map, HashMap) I personally think the following is the best discussion and should clarify all your doubts: Efficiency of Java ""Double Brace Initialization""?"
26124328,2,0,1,java.util.HashMap,"Also good, because faster for a bigger number of timers would be a HashMap/HashTable: code."
26124949,1,0,0,java.util.HashMap,"My inclination is to wrap a HashMap<String, String> in an object that provides typed accessor functions, using the hash key to identify both each configuration item and the version of the item."
26127225,1,0,1,java.util.HashMap,Display all the collisions in HashMap.
26127225,1,0,1,java.util.HashMap,I'm new to HashMap in java.
26127225,1,0,1,java.util.HashMap,"I read that the values in HashMap are not over written, instead, they are maintained in a link list."
26127242,2,0,4,java.util.HashMap,"Different keys might have the same hash code, which causes them to be stored in the same linked list inside the HashMap, but the keys in the map are all unique."
26128041,1,0,0,java.util.HashMap,That means the HashMap which stores the player keys does not contain the player.
26130492,2,0,3,java.util.HashMap,"In at least some cases, the answer is, ""Yes, it works like a HashMap."""
26137639,1,0,0,java.util.HashMap,"For my case, HashMap implementation will be enough."
26139154,2,0,1,java.util.HashMap,"In general, the way to ""sort a HashMap"" is to copy the keys, values or entries collection into an array, and then sort the array; e.g."
26139154,2,0,1,java.util.HashMap,"using one of the Arrays.sort methods In your case, you want to extract the collection provided by the HashMap.entrySet() method, using a Comparator that orders the Map<K,V>.Entry objects by value and then by key."
26140207,2,0,0,java.util.HashMap,we can not implement sorting on either KEY OR VALUES in HashMap.
26144771,1,0,0,java.util.HashMap,What is the purpose of the for loop in HashMap.put(Entry k) implementation of the Collections Framework?
26144771,1,0,0,java.util.HashMap,My understanding of the HashMap JDK implementation is that the Key of the Entry object to be put in the HashMap bucket is used to find a place in the Entry[] table field of the HashMap object.
26145965,1,0,0,java.util.HashMap,"I am writing a program in Java in where I have a HashMap<String, Deque<Integer>> info;  My data is a list of Wikipedia pages that were visited with an hour time period, along with a count of how many times each was visited."
26145965,1,0,0,java.util.HashMap,This data gets stored in the HashMap from above with the page name as key and the Deque updated hourly with the number of visits that hour.
26145965,1,0,0,java.util.HashMap,I want to have one thread ThreadRead that reads input files and stores the info in the HashMap.
26145965,1,0,0,java.util.HashMap,And then one ThreadCompute thread for each key in the HashMap that consumes the associated Deque.
26146357,2,1,2,java.util.HashMap,There should be exactly one instance to guard the whole HashMap.
26147519,1,0,1,java.util.HashMap,Entry undefined in HashMap iteration loop.
26147806,2,0,3,java.util.HashMap,: Try to program variables using the interfaces (Map instead of HashMap).
26152243,2,1,1,java.util.HashMap,I feel like you are seeing the HashMap#toString() output of code.
27885043,2,0,0,java.util.HashMap,"Instead,  you can simple Implement shopping cart process as the HashMap in java it will be of the form :  code."
26163448,1,0,0,java.util.HashMap,Java how to convert JSONArray to HashMap recursively?
26166706,2,1,2,java.util.HashMap,"This is perhaps one of the crazier uses of the HashMap, but I daresay it might actually be practical."
26166706,2,1,2,java.util.HashMap,"First we're going to need a HashMap of JComponents as keys, mapped to their boolean visibilities as values, as a field."
26166706,2,1,2,java.util.HashMap,We go ahead and throw those buttons into the HashMap at the end of the constructor where we instantiate the panel.
26170545,2,0,0,java.util.HashMap,If you want to drop generification and get O(1) complexity use HashMap to get it code.
26171658,2,1,0,java.util.HashMap,"For the LevelX instances to be usable in a HashMap, you will need to override hashCode and equals methods."
26171584,2,0,0,java.util.HashMap,"Your Map foo reference is not generic (it is raw), so compiler can't safely assume that it will always hold HashMap<Character,Integer> (it can also hold HashMap<String,Integer>)."
26172070,2,0,0,java.util.HashMap,function of HashMap to get all values then use  code.
26172131,1,0,0,java.util.HashMap,Retrieving a key from HashMap based on part of certain strings in the key?
26172131,1,0,0,java.util.HashMap,Task: Read a XML file to create a Template; I am reading this XML file as mentioned below and putting it in a HashMap.
26172131,1,0,0,java.util.HashMap,I am hence looking to find a way to get all keys ending with Uppercase alphabets after the last period in the Key from the HashMap(Or possibly any other options)
26172362,1,0,0,java.util.HashMap,Android: HashMap to ActionBar Tabs.
26172362,1,0,0,java.util.HashMap,The goal is to generate as many Tabs as there are pairs in an HashMap.
26172362,1,0,0,java.util.HashMap,"I have a mHashMap = HashMap<String,Object> For each element of this hashmap, I want to create an actionbar tab:  Tab name is the Key Tab content is an Object  Each tab contains a fragment (Fragment needs to receive the tag of the tab), that is generated based on the information it receives."
26172362,1,0,0,java.util.HashMap,"I had an approach with a List and a FragmentStatePagerAdapter, but it doesn't work anymore as I don't think the method: public Fragment getItem(int position) is compatible with HashMap."
26175524,1,0,0,java.util.HashMap,The original purpose is to retrieve a sorted-by-value list of items in a HashMap.
26177272,1,0,0,java.util.HashMap,"Stack trace  org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: could not initialize proxy - no Session (through reference chain: java.util.HashMap[""usage""]->viewmodel.ProductUsageViewModel[""collectionNumber""]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: could not initialize proxy - no Session (through reference chain: java.util.HashMap[""usage""]->viewmodel.ProductUsageViewModel[""collectionNumber""])     at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:238)     at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:208)     at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:153)     at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:138)     at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:71)     at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)     at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:781)     at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:721)     at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)     at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)     at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)     at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)     at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:863)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:646)     at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)     at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)     at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:154)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:50)     at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)     at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)     at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)     at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)     at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)     at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at CORSFilter.doFilter(CORSFilter.java:25)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:313)     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     at java.lang.Thread.run(Unknown Source) Caused by: com.fasterxml.jackson.databind.JsonMappingException: could not initialize proxy - no Session (through reference chain: java.util.HashMap[""usage""]->viewmodel.ProductUsageViewModel[""collectionNumber""]) Could any one help me to get rid of that exception please.."
26178887,1,0,1,java.util.HashMap,"Using a gson, I convert the json data to a HashMap (String,String)  but now What should I use with prepareStatement , setString() or setObject() ?"
26179960,1,0,1,java.util.HashMap,Java HashMap to store different objects.
26179960,1,0,1,java.util.HashMap,I have a problem with HashMap.
26179960,1,0,1,java.util.HashMap,"Is there any way to store object from different classess in one HashMap, which doesn't require casting to use other (extended) methods ?"
26180632,1,0,0,java.util.HashMap,Why are there so many null mappings in HashMap?
26180632,1,0,0,java.util.HashMap,"While doing some debugging, I realized that the HashMap's table I use had many empty mappings, why is that ?"
26180632,1,0,0,java.util.HashMap,"For example, the HashMap had a size of 471.189, when it had a table=HashMap$Entry<K, V>[1048576], which is about 2.2 times more than needed."
26180765,2,0,4,java.util.HashMap,"When you debug, you see the empty space in the HashMap, and that's normal, even 'healthy'."
26180765,2,0,4,java.util.HashMap,"As the hash table (HashMap) gets filled up, it will 're-map' the data in to a bigger hash table."
26181188,1,0,0,java.util.HashMap,How to map HashMap keys to a select in thymeleaf?
26181188,1,0,0,java.util.HashMap,I have a HashMap which looks pretty much like this.. code.
26186497,2,0,1,java.util.HashMap,Map Interface has various implementions:   HashMap : The HashMap class uses a hashtable to implement the Map interface.
26186497,2,0,1,java.util.HashMap,"LinkedHashMap:This class extends HashMap and maintains a linked list of the entries in the map, in the order in which they were inserted."
26186497,2,0,1,java.util.HashMap,Read about HashMap Read about TreeMap Read about LinkedHashMap  source for visual presentation
26186401,2,0,1,java.util.HashMap,It seems that a lot of my answers use HashMap these days.
26188243,2,0,0,java.util.HashMap,"Please not that you will need to change ""String"" in the for loop to the data type held by the HashMap."
26188532,1,0,2,java.util.HashMap,How would I go about iterating through a nested HashMap?
26188532,1,0,2,java.util.HashMap,The HashMap is setup like this: code.
26188532,1,0,2,java.util.HashMap,"If for instance my HashMap looked like this (the following is not my code, it's just to simulate what the contents of the hashmap could be) code."
26188665,1,0,0,java.util.HashMap,Using HashMap values of HashSet type.
26188665,1,0,0,java.util.HashMap,I have some problem using HashMap values of HashSet type.
26188665,1,0,0,java.util.HashMap,"After completion, the HashMap will look like followd: code."
26190959,1,0,0,java.util.HashMap,and Also put each thread of the connection into a HashMap to store the Objects of threads.
26190959,1,0,0,java.util.HashMap,Here's the problem: I can't get returned keyset of the HashMap into Iterator.
26191782,1,0,4,java.util.HashMap,I'm using a separate HashMap to contain all parts of the object graph so that I can write the deep copy functionality as generally as possible.
26191898,2,0,5,java.util.HashMap,"The point of using the Identity versions is that if two objects in your graph are the same as determined by .equals(), but different instances as determined by ==, then a HashSet and HashMap would identify the two, and you'd end up joining things together that shouldn't be joined."
26193272,1,0,0,java.util.HashMap,Assigning a HashMap to a variable within JSP.
26193272,1,0,0,java.util.HashMap,"I have my controller Servlet creating an object and placing it into a HashMap and I'm forwarding this to my JSP as an attribute, in my JSP I wish to set this HashMap to a variable, how am I able to do this?"
26193427,1,0,0,java.util.HashMap,"I send every object to that layers by calling layerHandler.objectReceived(object); LayerHandler then need to store this object in its HashMap (im using Object because objects which will be stored there are not same type...(Car and Bicycle)) LayerHandler has other method called actionFired(String message, Object object); Second parameter 'object' belongs to Car or Bicycle class and is already stored in LayerHandler's HashMap."
26193427,1,0,0,java.util.HashMap,"When this method occures, I need to find related object which is stored in HashMap."
26193427,1,0,0,java.util.HashMap,"Im not going to show whole structure of my project here, but Im using HashMap for a reason."
26193427,1,0,0,java.util.HashMap,"(I know ArrayList get(Object obj) method would be nice here, but I must use HashMap) I need to know, whether toString() will always returns same value which wont change over time so I will be able to use that as a key for my HashMap."
26195082,2,0,0,java.util.HashMap,"There is no restrictions to have different types of keys in the HashMap, if you provide correct implementation of hashCode+equals."
26195082,2,0,0,java.util.HashMap,"You should override hashCode+equals methods in your key-object classes (Car, Bicycle, ...) Use these objects directly as keys in your HashMap"
26195035,1,0,0,java.util.HashMap,HashMap adding all items even when duplicate.
26200969,2,0,1,java.util.HashMap,"A HashSet is backed by HashMap which mean that it delegates it operations like add, remove, etc."
26200969,2,0,1,java.util.HashMap,"to HashMap .Now When you call set.add(""a""); then  code."
26200969,2,0,1,java.util.HashMap,"is called, which in turn calls HashMap#put code."
26200969,2,0,1,java.util.HashMap,"is true and it then increments the modCount(which stores the number of times the HashMap has been structurally modified), checks if we need to resize the map and then call afterNodeInsertion and returns null  Now when you call set.add(""b""); then the same logic runs again but this time the condition inside final V putVal method  code."
26202956,1,0,3,java.util.HashMap,1)  class HashMap : transient volatile int modCount;?
26203191,1,0,0,java.util.HashMap,Maybe an <ArrayList> or a HashMap like code.
26203803,1,0,0,java.util.HashMap,"I have an ArrayList<HashMap<String,String>> and I want to sort it."
26205208,2,0,0,java.util.HashMap,"Consider using static HashMap<Character, Student> finalHashMap = new HashMap<>()"
26205661,2,0,1,java.util.HashMap,"Otherwise, you're likely looking at the speed for random access of the HashMap."
26205661,2,0,1,java.util.HashMap,The HashMap doesn't store things in a given order - it just sticks them whoever the hash function says to put them.
26205661,2,0,1,java.util.HashMap,There's a variation of the HashMap which is the subclass LinkedHashMap.
26205661,2,0,1,java.util.HashMap,"Not only does it have the fast lookup of the HashMap, but it also stores a linked list along side the HashMap."
26205661,2,0,1,java.util.HashMap,"In general though, you want either a HashMap or a TreeMap depending on how you want to get the data out of the Map."
26206476,1,0,1,java.util.HashMap,Could anyone explain me what happen behind the scenes when a duplicate value is put into HashMap ?
26206500,2,0,4,java.util.HashMap,The value of a HashMap entry has no bearing on where the entry is placed or how it is retrieved.
26206500,2,0,4,java.util.HashMap,"To clarify, the value will be copied in each HashMap Entry."
26206500,2,0,4,java.util.HashMap,HashMap doesn't care about values.
26206500,2,0,4,java.util.HashMap,"the HashMap will construct two Entry objects, which will both hold (and therefore copy) the value of v1, and store those in its underlying structure."
26212101,1,0,1,java.util.HashMap,How to use backreference of a String-replacement as a key for a HashMap in Java?
26212101,1,0,1,java.util.HashMap,"I'd like to search for Strings that are enclosed by ${...} and use those Strings as keys for a HashMap, that contains the values I'd like to use for replacing the ${...}."
26212101,1,0,1,java.util.HashMap,"(How) is it possible, to use the backreference as a key for the HashMap?"
26212130,2,0,2,java.util.HashMap,Now next steps are:  Compile the string regex to make a Pattern object Create Matcher instance by passing in your string input to compiled Pattern object (i.e. Matcher matcher = pattern.matcher(stringInput)) Run a while (matcher.find()) {...} loop Inside the loop access matcher.group(1) (i.e. backreference) as the key to your HashMap  Putting it altogether: code.
26215223,1,0,2,java.util.HashMap,It is rather a usual HashMap.
26216844,2,0,1,java.util.HashMap,"In this version the put(...) is called in within the instance initializer of the class before the doubled {{, i.e. on the HashMap."
26220333,2,1,0,java.util.HashMap,*; import   java.util.HashMap; import java.util.Map; public class ReadEntry { code. }
26220791,1,0,1,java.util.HashMap,Is it possible to use @Valid with @HashMap created from JSON payload?
26220791,1,0,1,java.util.HashMap,Since my payload is completely dynamic I created a HashMap to hold it.
26220791,1,0,1,java.util.HashMap,I was wondering if I could use @NotEmpty or a similar annotation if I extend HashMap to a custom class that simply verifies if that property exists.
26259056,2,1,1,java.util.HashMap,"But since the payload is dynamic, in this case a HashMap, you need some sort of custom validation."
26224592,2,0,0,java.util.HashMap,"As suggested by Vighanesh Gursale you could also use a HashMap, if your data has a natural key."
26225877,1,0,0,java.util.HashMap,"The ArrayList type work very good, but, is possible that JAVA read the second response (Response) type?, the Response type is a array with keys, I have tried with HashMap but not working."
26229954,1,0,0,java.util.HashMap,How to mock a method that is expected to return HashMap?
26229954,1,0,0,java.util.HashMap,"I have a method that is expected to return a result of type HashMap, and I need to unit test it."
26230225,1,0,0,java.util.HashMap,HashMap - getting First Key value.
26230225,1,0,0,java.util.HashMap,below are the values contain in the HashMap code.
26230286,2,0,0,java.util.HashMap,"I say ""first"" because HashMap entries are not ordered."
26230430,2,0,0,java.util.HashMap,"Note that you should note that your logic flow must never rely on accessing the HashMap elements in some order, simply put because HashMaps are not ordered Collections and that is not what they are aimed to do."
26230259,2,1,6,java.util.HashMap,But you need to know HashMap not grantee the insertion order.
26233035,2,1,0,java.util.HashMap,Do you want to create one HashMap with user and the sum of time that may appear anywhere in the two lists?
26238242,2,0,1,java.util.HashMap,"Sure, you could just always use HashMap and HashSet and that would be fine a lot of the time; but, there are trivial examples where those selections are probably the worst choices."
26240540,1,0,2,java.util.HashMap,While in my parent class I have a method that will store those in a HashMap.
26378916,2,1,1,java.util.HashMap,"I found a solution, the Play Framework provides request level storage for arbitrary objects using Http.Context.current().args I'm using this HashMap to store my custom debug storage class so that I can access it throughout a request anywhere in my application."
26241471,2,0,2,java.util.HashMap,A HashMap would give you O(1) lookups.
26241471,2,0,2,java.util.HashMap,None of your clients need know that you've chosen a HashMap as the underlying implementation for your Dictionary.
26241955,1,0,0,java.util.HashMap,As you can see the second hash map is being converted into a string and not being added as a HashMap Does anyone know what could be causing the inconsistency in parsing the HashMaps?
26242980,2,1,3,java.util.HashMap,hashCode is generally used in data structures just as HashMap.
26242883,1,0,0,java.util.HashMap,Creating a HashMap with unique keys and values asArrayList.
26242883,1,0,0,java.util.HashMap,I am trying to create a HashMap from an ArrayList of Student objects.
26242883,1,0,0,java.util.HashMap,The HashMap should be: code.
26243740,1,0,0,java.util.HashMap,Java - how to remove duplicating entries from HashMap?
26243740,1,0,0,java.util.HashMap,I have a HashMap in Java:  code.
26243844,2,0,2,java.util.HashMap,"There is no need to do that, HashMap takes care of that automatically."
26243824,2,0,2,java.util.HashMap,You cannot remove duplicates from a HashMap because there are no duplicates in a HashMap in the first place.
26245561,1,0,2,java.util.HashMap,"For speed it seems that at a count of <= 5, TreeMap seems equal or better than HashMap for retrieval and ""auto trims"" when nodes are removed."
26245561,1,0,2,java.util.HashMap,"I would think a HashMap uses for each entry the memory overhead of the hash/handle array including memory above the load factor full of null entry handles, and the object overhead and handle storage for the key and the value in the ""Entry[+internal fields if any]""."
26245892,2,0,3,java.util.HashMap,"https://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures TreeMap and HashMap use approximately the same amount of memory per entry, though it's true that TreeMap has a slightly smaller constant overhead for the map itself."
26268036,2,0,0,java.util.HashMap,I also did the interleaved key/value array with Binary search which performed worse than the simple list as the extra overhead of all the invoking of Comparable.compare() method on the keys ate all the gains and it preformed no faster than HashMap at smaller sizes and got much worse as it got bigger.
26268036,2,0,0,java.util.HashMap,I simply replace it with a hash map when it gets bigger than 8 and if the HashMap gets below a size of 5 I revert back to the list map.
26252014,2,0,2,java.util.HashMap,Advantages of this approach:  I bet this would be much faster than HashMap/TreeMap on sizes 1..3-5 depending on your key's equals() complexity Use absolute minimum memory to hold the data Could be easily specialized for primitive keys/values  Disadvantages:  GC pressure on map puts/removes  I hope it's clear how removes could be implemented for Map1/Map2/../BigMap.
26252014,2,0,2,java.util.HashMap,"Additional opportunities:  For size between 5 and 12 very-very simple open-addressing hash table implementation (with constant modulo 16) could be used instead of HashMap, with size stored as byte."
26246242,2,1,1,java.util.HashMap,I would suggest using a HashMap instead.
26246242,2,1,1,java.util.HashMap,"HashMap, however, does not have a containsAll method, but you can get a set of the keys(ingredients) and then call Set.containsAll."
26246856,2,0,0,java.util.HashMap,"In Java, something like HashMap<Integer, Integer>."
26250795,1,0,0,java.util.HashMap,"I don't know if it is important, but I want to sub-class HashMap for the params, so that it becomes like this: code."
26251075,1,0,0,java.util.HashMap,Later within a transaction block I will add an ArrayList of Boli instances to the HashMap field of MyBean.
26274568,2,1,0,java.util.HashMap,"If you have a HashMap, you should be able to just use get for retrieving the token: code."
26259732,1,0,0,java.util.HashMap,"I also noticed java -verbose showing that all jars are loaded from correct location   [Loaded javax.xml.parsers.SAXParserFactory from c:\jdk1.7.0_25\jre\lib\rt.jar] but when RUN_APP.exe is used, I see a lot of    [Loaded java.util.HashMap$1 from C:\Program Files\Java\jre7\lib\rt.jar] which is not in my path."
26260922,2,0,0,java.util.HashMap,HashMap would be a better approach to your implementation:  code.
26262664,2,1,2,java.util.HashMap,"bind values[] to each key  It might make more sense to use a HashMap to do that mapping for you, since that's what it's for."
26266878,1,0,0,java.util.HashMap,"I've tried this way: Before code read this: I keep strings in HashMap < String, String > that's why my code contains get(...) etc."
26267490,1,0,0,java.util.HashMap,HashMap string key.
26267490,1,0,0,java.util.HashMap,I have the following HashMap code.
26271547,2,0,0,java.util.HashMap,"In order to be a key in a HashMap you need to override hashCode(), something like code."
26272767,1,0,0,java.util.HashMap,I am trying to persist a sub-classed HashMap in a database using Hibernate and JPA annotations.
26274431,1,0,0,java.util.HashMap,HashMap is showing only last entry.
26274431,1,0,0,java.util.HashMap,Only last entry of HashMap is getting displayed.
26277878,1,0,1,java.util.HashMap,Is HashMap still the best one to store this Verb Object?
26282121,2,0,0,java.util.HashMap,"General overview of steps: Create a HashMap<String, Integer> Read the file one word a time."
26282121,2,0,0,java.util.HashMap,"If it doesn't exist in your HashMap, add it and change the count value assigned to 1."
26282470,1,0,0,java.util.HashMap,"That's how I append from my HashMap <String, String> storage: code."
26284707,1,0,1,java.util.HashMap,"Firstly, I fill my HashMap with Key -> Value and Key1 -> Value1."
26284948,1,0,0,java.util.HashMap,"At the moment, I use a HashMap<String, String> and a SimpleAdapter object to display user data in my ListView, but now I want to replace the HashMap<String, String> with an ArrayList<User>(); containing real user objects."
26284948,1,0,0,java.util.HashMap,How is it possible to replace the HashMap with the ArrayList?
26285483,1,0,2,java.util.HashMap,HashMap InputStream / Scanner Server Problems.
26285483,1,0,2,java.util.HashMap,"Commands that should be accepted:  put [string] [int]   - this should store a string (key) and int (value) in the HashMap get [string]   - this should return the int associated with this string keyset   - return all keys values   - return all values mappings   - return all mappings bye   - quit the client help   - doesn't do anything yet, but will list all commands and their syntax  The professor gave us much of the code for the server, but I think there may be errors in it because I keep getting exceptions on the Scanner."
26287801,1,0,0,java.util.HashMap,The problem is that I'm stuck in the moment when I try to populate the HashMap with the words and the number of occurences.
26287801,1,0,0,java.util.HashMap,I was trying to use Iterators the make to modifications to the HashMap but I ended up with the same exception.
26287894,2,1,4,java.util.HashMap,The Hashtable (and HashMap) already implement collision resolution by storing multiple keys that map to the same bucket number.
26287894,2,1,4,java.util.HashMap,"For the Hashtable (or HashMap) to find a key that already exists in the map, the hash codes are used to find the bucket, but equals is used to distinguish any distinct keys in the same bucket."
26288123,2,1,4,java.util.HashMap,"Using HashMap instead of HashSet HashSet uses HashMap in its implementation, let's just do the same: get rid of the ""shell"" HashSet: code."
26288123,2,1,4,java.util.HashMap,"As expected the HashSet with big initial capacity and the HashMap solutions are slightly faster, and all other solutions fall behind."
26291655,1,0,1,java.util.HashMap,"It uses a HashMap> where the first State is the current state, the string in the map is the symbol that causes transition, and the state in the second map is the state it goes to."
26292053,2,0,1,java.util.HashMap,Converting Json to HashMap code.
26292155,1,0,0,java.util.HashMap,Plain Json String to HashMap.
26292155,1,0,0,java.util.HashMap,There are quite a few questions raised to convert json to HashMap.
26292155,1,0,0,java.util.HashMap,"The following code will convert the direct values or Array of values, into a HashMap."
26292806,2,0,1,java.util.HashMap,Use HashMap#get(key) method code.
26296947,2,1,3,java.util.HashMap,"The strange thing is when i call the hashmap with, the order is   completly an other and the keys doesnt fit to the insertion :  HashMap does NOT maintain the order of insertion but there is an alternative called LinkedHashMap that maintains the insertion order."
26297304,2,0,3,java.util.HashMap,"Following are 4 common implementation of Map interface in Java, HashMap: No ordering & No preservation of insertion order on keys/values LinkedHashMap: Preserves the insertion order TreeMap: Ordered by the key HashTable: Unlike HashMap, it is synchronized Refer here for better understanding with examples."
26302360,2,0,0,java.util.HashMap,I really missed seeing the forest for the trees here---thinking about the purpose of hashCode() without putting it in the context of HashMap.
26302360,2,0,0,java.util.HashMap,"When m is a HashMap, the complexity of m.get(k) is O(1), whether the keys can be ordered or not."
26302673,2,1,1,java.util.HashMap,"In a Map (HashSet uses a HashMap internally), there are buckets and in each bucket is a linked list."
26302673,2,1,1,java.util.HashMap,You can probably view here for more information: How does a HashMap work in Java?
26303519,1,0,0,java.util.HashMap,"Here is my problem: I use a HashMap<String, String> and a SimpleAdapter object to display user data in my ListView, but now I want to replace the HashMap<String, String> with an ArrayList<User>(); containing real user objects."
26306150,2,0,1,java.util.HashMap,"In this case, I'll just use a HashMap."
26306147,1,0,0,java.util.HashMap,"Error Messages are:  In Dog Class File:  Multiple markers at this line     - A cannot be resolved       to a type     - A cannot be resolved       to a type In Animal Class File : Multiple markers at this line     - A cannot be resolved to a type     - A cannot be resolved to a type     - Incorrect number of arguments for type Map<K,V>; it cannot be parameterized with arguments       <HashMap<String,A>> The data type of the keys in HashMap will always be a String but the data types of values would be random, hence I am trying to use Generics."
26306494,2,0,0,java.util.HashMap,"Here are the two example solutions:     Map<String, ?> data = new HashMap <String, ?>(); or     Map<String, Object> data = new HashMap <String, Object>(); The same thing has to be applied to the map in your Dog class."
26309685,1,0,0,java.util.HashMap,I have a HashMap.
26311798,2,0,2,java.util.HashMap,"To answer your question about ""though both were implemented using the same buckets concept"": HashMap has only a hash table, whereas a LinkedHashMap has both a hash table and a linked list; by-key lookups use the hash table and iterations use the linked list."
26311798,2,0,2,java.util.HashMap,"The tradeoff with LinkedHashMap is that you have to keep an extra linked list (in addition to the hash table, which both HashMap and LinkedHashMap have), which is extra space usage."
26312961,1,0,0,java.util.HashMap,How Java implement lazy initialization for HashMap?
26320455,1,0,0,java.util.HashMap,"I'm trying to build a container type called ListNamed, which is essentially a list, but one that allows element lookups by name, where multiple elements can have the same name, and in which case the lookup would return the first element found with a matching name (that's why I can't use a HashMap -> order matters, and keys are not-unique)."
26320893,2,0,2,java.util.HashMap,"Failure to do so violates the general contract for the hashCode method, and any classes that use the hash code, such as HashMap will not function properly."
26322519,1,0,0,java.util.HashMap,User defined Key Class for HashMap.
26322519,1,0,0,java.util.HashMap,I want to use HashMap to help count a pair element's number.
26322519,1,0,0,java.util.HashMap,I applied my Pair class to a HashMap code.
26323752,2,0,0,java.util.HashMap,"The first call to Singleton.getSharedInstance() creates a HashMap<String,Object> in part 1."
26323752,2,0,0,java.util.HashMap,"In part 3 getSharedInstance() accesses a map HashMap<String,Object>, thus popValue() returns an Object which cannot be cast to a String as the error says."
26325544,1,0,0,java.util.HashMap,"It is really odd, because in my if-statement I do check if the HashMap with the participants contains the player key."
26331088,2,0,0,java.util.HashMap,The much better question to ask requires that you include the name of the class it can't find: java.util.HashMap$Entry.
26327806,2,1,1,java.util.HashMap,"Declare a map as HashMap<String, Integer>."
26331187,1,0,2,java.util.HashMap,Clear HashMap Values While Retaining Keys.
26331187,1,0,2,java.util.HashMap,"My HashMap is <String,String>, so should I just loop through and replace each value with a null?"
26331271,2,0,3,java.util.HashMap,I would keep it simple and collect the headers in a list or set then create a new HashMap at each line by looping over the list  instead of trying to recycle the same map.
26331279,1,0,0,java.util.HashMap,"and they don't do anything special, (ie access non-java files or use any dynamically generated code), there's a method that cleans up and validates the CSS, its wrapped into a ComponentPosition object and then it is put unceremoniously into the HashMap."
26331279,1,0,0,java.util.HashMap,Why can't I access this HashMap and do edits on the values already mapped by a key without changing the key itself.
26331861,1,0,1,java.util.HashMap,filtering entries of HashMap and iterate over values.
26331861,1,0,1,java.util.HashMap,I have useed a HashMap to implement a graph  code.
26332062,2,0,2,java.util.HashMap,"One straightforward improvement over the algorithm you have posted would be to collect the head elements of the map into a list, rather than reconstructing a HashMap with just the head elements in it: code."
26333601,1,0,0,java.util.HashMap,I tried saving each view to a HashMap called views: code.
26334698,1,0,0,java.util.HashMap,"Here's my problem i have two data structure one : countMark = new HashMap<Pair<String, String>, Integer>(); and the other which is the inverse orderMark = new TreeMap<Integer, List<Pair<String, String>>>();."
26336146,2,1,1,java.util.HashMap,"All you need is to check if there are methods that using same non-threadsafe resources (i.e. HashMap in the field, or something)."
26364700,2,0,0,java.util.HashMap,"I'm afraid to misunderstand what you want to get, precisely I don't get to the meaning of 'how to read from the class' Nevertheless if I understand it correctly, you may want to use Java Collections Framework .like as HashMap or TreeMap."
26337169,1,0,0,java.util.HashMap,I am trying to get a value from a HashMap via a custom class I have created.
26337169,1,0,0,java.util.HashMap,I Have a HashMap called coordsJCB and when I try to get the JCButton (a custom swing button) it says it cannot find it.
26337169,1,0,0,java.util.HashMap,"However this will not help me as I don't want to compare 2 instances of 'Coordinates', I need to get a value from the HashMap by passing it an instance of Coordinates."
26337215,2,1,1,java.util.HashMap,The HashMap's key set hashes its elements and compares them by hash.
26337606,1,0,0,java.util.HashMap,Compare strings using HashMap.
26337652,2,1,0,java.util.HashMap,HashMap would make sense if you want each unique name to serve as key.
26338647,1,0,0,java.util.HashMap,"To complete this anyway: Just declare a Hashmap HashMap<Integer, Position> on a customized Document and safe in it all created Positions releated to the order of their creation..."
26342580,1,0,0,java.util.HashMap,Current Problem: I've build a HashMap to save and retrieve some key and values.
26342580,1,0,0,java.util.HashMap,The HashMap code.
26343320,2,0,0,java.util.HashMap,"If these are in an object, then you can make a nested HashMap, for example mapping manIds to (maps of sessionIds to (maps of Userids to (max,min))) where max, min might be the object which contains the max/min value or they might be the values themselves - that's up to you and what you need."
26346470,1,0,0,java.util.HashMap,"states is a HashMap of states for the algorithm, and isGoal() is a method that sets each state's boolean flag, depending upon its heuristic value."
26348476,2,0,5,java.util.HashMap,"Analogue to using a database index, you can use a HashMap instead, and map entities by their ids: code."
26353621,2,0,3,java.util.HashMap,HashMap or HashSet should work quite well for this.
26353887,1,0,0,java.util.HashMap,how to create threads dynamically using HashMap in Java.
26358403,2,0,3,java.util.HashMap,You could use a HashMap.
26364767,2,0,1,java.util.HashMap,You're not using the HashMap correctly.
26364767,2,0,1,java.util.HashMap,"This means that rather than HashMap<String,Utente> you want HashMap<Integer,Utente>."
26367488,2,0,2,java.util.HashMap,If you look in the java HashSet implementation you discover that it simply uses a HashMap internally: code.
26367488,2,0,2,java.util.HashMap,"This avoids the effect that each programmer uses its own ""favorite Set implementation"", or, even worse, does a lengthy research what is the actually best HashSet implementation to use ;) Does Oracle have an open bug ticket for the poor HashMap?"
26367488,2,0,2,java.util.HashMap,Not every HashMap replacement may have the exact same semantics as the orginal HashMap.
26367488,2,0,2,java.util.HashMap,"So, I personally would never replace java.util.HashMap just ""by default""."
26366256,1,0,0,java.util.HashMap,Java HashMap containsKey() fails.
26366256,1,0,0,java.util.HashMap,"I have a Java HashMap<String, String>."
26366256,1,0,0,java.util.HashMap,I also use multiple callables to call HashMap.containsKey() for the 100 known keys.
26376824,2,1,0,java.util.HashMap,All my issues were solved by simply changing my use of HashMap() to ConcurrentHashMap().
26369052,2,0,0,java.util.HashMap,"Probably the easiest way, from this point, is to use a HashMap to index all the components in your form, by name: code."
26373870,2,0,1,java.util.HashMap,"Currently the movie object is looked up using the movie name, so a lookup based solution should work, Example: Create a HashMap with key as lower_case(movie-name) and value as Movie object, this will be used to lookup/find whether a movie is available."
26373870,2,0,1,java.util.HashMap,Let movieMap be the HashMap something like the following: code.
26379091,2,0,0,java.util.HashMap,"When you create a temporary HashMap, you can reduce it to O(m+n) and gain a lot for big inputs."
26378484,2,0,0,java.util.HashMap,Don't use raw types as you are using here HashMap exporter.setParameter is deprecated instead use SimpleExporterInput.
26378484,2,0,0,java.util.HashMap,"Than you have to specify the $P{paramNam} for static text you are using as column header.If it is blank which simply means you haven't defined the parameters in jasper report.So,declare parameters and pass key of HashMap<String,String> mapped with value you want to display."
26378850,1,0,0,java.util.HashMap,HashMap - operations.
26378850,1,0,0,java.util.HashMap,How can I put this 5 people in a HashMap (or any other collection) with their respective criterias and sub criterias: code.
26379131,2,0,0,java.util.HashMap,"I don't see where you need to access a specific person by a key, so you don't need a HashMap, just a List."
26384896,2,0,0,java.util.HashMap,"See here for details http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put%28K,%20V%29"
26385065,2,0,3,java.util.HashMap,"You need to start by working out what exactly you're wanting to achieve, and whether a HashMap is the right tool for the job."
26385065,2,0,3,java.util.HashMap,"A HashMap is a type of Map, and the point of a Map is to allow you to assign a value to a key."
26385065,2,0,3,java.util.HashMap,"If you're trying to get out a value you've overwritten, what that suggests to me is that you didn't really want a HashMap in the first place, and you'd have been better off with something that allows you to store multiple values for a given key."
26385065,2,0,3,java.util.HashMap,"But forget about hash collisions: they're something that's internal to HashMap, and they get sorted out for you by the HashMap so that you don't really have to worry about them."
26384860,2,0,1,java.util.HashMap,"See:  The Documentation for HashMap Thus, if you want the old one: code."
26390812,1,0,1,java.util.HashMap,Overridden hashCode() function is not called by any of HashMap methods.
26390812,1,0,1,java.util.HashMap,Objects of this class are added to a HashMap with name field as Key.
26390812,1,0,1,java.util.HashMap,I thought HashMap internally calls hashCode() in case of put and get().
26390834,2,0,6,java.util.HashMap,"When you put something in a HashMap, the hashCode() method is called on the key, not the value."
26392094,1,0,0,java.util.HashMap,jquery accessing java HashMap in spring Model.
26392094,1,0,0,java.util.HashMap,"I need to populate another field based on that selection, and a HashMap object also present inside the Model contains the value for the selection as key."
26392094,1,0,0,java.util.HashMap,"Able to extract value of drop down selection, but getting the corresponding value from HashMap is problematic and have tried/researched a number of approaches."
26392602,1,0,5,java.util.HashMap,"For each Map value, I've tried and failed with:  Casting to ScriptObject or ScriptObjectMirror Casting to Map or List Accessing JO4/NativeArray methods directly ScriptUtils.wrap() / ScriptUtils.unwrap()  I've tried overriding the HashMap.put() method, but it appears not to be converted to a ScriptObjectMirror on assignments, only on explicit function calls: code."
26392672,1,0,1,java.util.HashMap,Other option I have is to create a cache(HashMap) of these error codes loaded from a properties file or from a database.
26395284,2,1,0,java.util.HashMap,"You can still index your data, just add an additional HashMap<Your_Class, Integer> map to store the index of a particular  data."
26399809,2,0,1,java.util.HashMap,"As you care for efficency, you should use HashMap instead of TreeMap."
26399567,2,1,2,java.util.HashMap,"Just like Seelenvirtuose mentioned: If you want search performance: HashMap, if you want your elements to be sorted use TreeMap."
26399567,2,1,2,java.util.HashMap,In search performance goes to HashMap.
26400746,1,0,1,java.util.HashMap,I have a List instance called words and a HashMap instance called map.
26400746,1,0,1,java.util.HashMap,I have certain words on the list and count them to save on the HashMap.
26400746,1,0,1,java.util.HashMap,The HashMap has count as value and word as key.
26400797,2,0,1,java.util.HashMap,Yes thats because you instantiate a new HashMap for every word:  code.
26403327,1,0,0,java.util.HashMap,I am passing values to the report using HashMap.
26403936,1,0,0,java.util.HashMap,Java sort HashMap values which are List.
26403936,1,0,0,java.util.HashMap,I got the HashMap: code.
26403936,1,0,0,java.util.HashMap,I need to sort the List of Values inside the value of this HashMap.
26405175,2,0,1,java.util.HashMap,"Yes HashMap is the better choice,but use your Animal as a key here code."
26410622,1,0,0,java.util.HashMap,"This is a very generic question, I am just taking an example of Java HashMap."
26410622,1,0,0,java.util.HashMap,I know in this scenario HashMap is the best structure ) Usecase2: I want to get all the values.
26410622,1,0,0,java.util.HashMap,"I tried to Google it, all i got is best ways to iterate a HashMap."
26411066,2,1,1,java.util.HashMap,"Instead of storing all your Data instances in an array, you can consider storing them in a HashMap, assuming you are working with Java."
26413124,2,1,3,java.util.HashMap,"For example, if we use Map instead of HashMap, we can later change the code to use a different Map implementation such as ConcurrentHashMap by only changing one place in our code."
26414211,1,0,0,java.util.HashMap,HashMap of HashMaps Not Populating as Expected.
26417498,2,1,1,java.util.HashMap,"I assume that the HashMap, Item corresponds to the inventory and backpack corresponds to a user."
26417641,2,0,0,java.util.HashMap,"I think if you create classes for each item, you can add an ID field also then you won't need a HashMap."
26417641,2,0,0,java.util.HashMap,https://www.youtube.com/watch?v=jU5ACV5MucM - Collections & ArrayList https://www.youtube.com/watch?v=-JOSjIan2g0 - HashMap
26418055,1,0,0,java.util.HashMap,"The problem occured when i tried to implement this to the Android apps, where i POST those payload/parameter using a HashMap."
26418055,1,0,0,java.util.HashMap,"HashMap cant store two values under the same key, so i cant do something like : code."
26418325,1,0,0,java.util.HashMap,Is there any way I can modify the HashMap values of a particular key while iterating over it?
26418369,2,0,0,java.util.HashMap,"The problem in the code your presented isn't modifying the HashMap, it's modifying the ArrayList while iterating it."
26418985,2,1,1,java.util.HashMap,HashMap does not provide any way to manipulate keys without iterating over them.
26418985,2,1,1,java.util.HashMap,"Note that it is necessary to create a new Set of the entry set because quoting from the javadoc of HashMap.entrySet():  If the map is modified while an iteration over the set is in progress (except through the iterator's own remove operation, or through the setValue operation on a map entry returned by the iterator) the results of the iteration are undefined."
26418786,2,0,1,java.util.HashMap,If there is no way to trim() keys before adding to HashMap then you have to do something like following: code.
26419842,1,0,2,java.util.HashMap,"What I decided to to is to convert the ArrayList<HashMap<String, String>> into JSONArray so that I can parse the JSON next time I need it since I can't store the ArrayList> as string and bring it back on its original form."
26425049,1,0,1,java.util.HashMap,I'm needing to get a unique method identifier to use as a key on a HashMap.
26427224,1,0,0,java.util.HashMap,"So that I can do  moc = new HashMap<Long, Set<Long>>();"
26430996,2,0,1,java.util.HashMap,A HashSet is backed by a HashMap.
26430996,2,0,1,java.util.HashMap,"In fact, the key in the internal HashMap is the value you use in HashSet#add(E)."
26430996,2,0,1,java.util.HashMap,"So this is the equivalent of getting the internal HashMap, getting the HashMap#keySet, and then getting an iterator over that."
26430996,2,0,1,java.util.HashMap,"So that might be a little more explanation than you were looking for, but to your issue: There is no HashSet#get function, there is no HashSet#KeySet function, there is no HashMap#contains function so I recommend you read through the HashSet documentation at http://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html and HashMap documentation http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html before going any further."
26432069,2,0,3,java.util.HashMap,"You're looking for a HashMap, which maps keys to their values."
26434156,2,0,1,java.util.HashMap,You can use a HashMap to associate each button with some custom data object.
26439102,1,0,0,java.util.HashMap,Get elements from HashMap in Java?
26439102,1,0,0,java.util.HashMap,"I currently have the following code, which gets a table from a webpage, and put the elements into a HashMap (I think)."
26439102,1,0,0,java.util.HashMap,"How do I go about getting the dog name out of the HashMap and looping through every dog to work out how many 1st, 2nds and 3rds it has?"
26442212,1,0,0,java.util.HashMap,get Java byte[] from HashMap.
26446398,2,0,1,java.util.HashMap,"Your pairs variable is a Map Entry variable, but the value if it is probably a HashMap according to the description of your problem."
26446398,2,0,1,java.util.HashMap,Try HashMap names = (HashMap) pairs.getValue();.
26447725,2,0,0,java.util.HashMap,"You can use HashMap<String, Type> if you don't want to allow duplicates."
26448840,2,0,0,java.util.HashMap,"Is there any way to catch the KeyNotFoundException in Java HashMap  No, because there is no such exception in Java."
26448840,2,0,0,java.util.HashMap,HashMap is O(1) for key operations.
26448834,1,0,0,java.util.HashMap,How to use Java reflection with HashMap parameter?
26448834,1,0,0,java.util.HashMap,I'm having trouble trying to use a HashMap as an object parameter using Java Reflection.
26448834,1,0,0,java.util.HashMap,"The ""doThis"" method takes in two strings such as HashMap."
26448834,1,0,0,java.util.HashMap,What do I do if the parameter is a HashMap that takes two strings?
26449481,2,1,0,java.util.HashMap,I am assuming that the value part of the HashMap is Race.
26450901,2,1,2,java.util.HashMap,You only create one HashMap instance  code.
26450901,2,1,2,java.util.HashMap,"You have to call keyValuePair = new HashMap<String, String>(); before each time you initialize a new map to be added to the list."
26452209,1,0,4,java.util.HashMap,I'm newbie to mustache and was wondering how to iterate over HashMap using mustache given this Map code.
26455105,1,0,1,java.util.HashMap,"Also, I've decided to store the results of the sequencer on the hard disk so I can compute more numbers (and make sure that they all converge to 1), I do this every time the HashMap that is storing the results reaches 400,000 (a reasonable size on my computer, about 1GB/8GB) key/value pairs, then load in the next 400,000."
26455105,1,0,1,java.util.HashMap,"Class being stored in the HashMap<BigInteger, FinalSequencerReport<BigInteger>>: code."
26455711,1,0,0,java.util.HashMap,"I'm sure I'll come up with a few workarounds myself, probably involving reflection or a careful HashMap; but this isn't the first time I've run into a problem like this one, and I'm curious."
26456983,1,0,0,java.util.HashMap,I couldn't make Gson to parse my HashMap with a custom object so i made a manual fix (i even posted here and didn't have any answer).
26458027,2,0,0,java.util.HashMap,Then the conversion calculation would be: From Value * From Conversion * 1/To Conversion For instance from 1 GBP to Euro would be: 1 * 1.60 * (1/1.29) = 1.24  If  you store all of your rates in a HashMap then you can avoid the switch statements completely.
26460047,1,0,1,java.util.HashMap,I'm getting a NullPointerException in my HashMap containing multiple keys.
26460180,2,0,0,java.util.HashMap,"As per the java docs HashMap.put(K key, V value) returns  code."
26460065,2,1,5,java.util.HashMap,".put(user, new HashMap<String, ArrayList<HashMap<String,String>>>()) would return null if the user key wasn't already in the map."
26460065,2,1,5,java.util.HashMap,"Even if you don't get NullPointerException, you wouldn't get the behavior you want, since the second put (.put(info, new ArrayList<HashMap<String, String>>())) would be performed on the old value."
26461727,2,1,5,java.util.HashMap,"Define one HashMap with Marker as key and Alert as value and when you create new Marker to add on map at time add this Marker as key in HashMap and respective Alert data from alertsList,get specific Alert data from HashMap when particular Marker info window clicked."
26464207,2,0,6,java.util.HashMap,"If you still want to implement it in Java (which is temporary anyways if you don't store it somewhere after execution), I would highly recommend to use a HashMap."
26464207,2,0,6,java.util.HashMap,Complexity of retrieval from a HashMap is O(1) while ArrayList's complexity is O(n) for same operation.
26467427,1,0,1,java.util.HashMap,"I am looking to store them into a HashMap< File, File > by pairs."
26467453,2,0,1,java.util.HashMap,"Instead of putting them in an unordered Map like HashMap, I would put the elements in a TreeMap because it sorts it's keys."
26472071,1,0,2,java.util.HashMap,Why isn't HashMap's get declared as get(K key) rather than get(Object key).
26472071,1,0,2,java.util.HashMap,"I'd made an error retrieving a value from a HashMap that was declared to be String,IDName but I passed an Integer by mistake."
26472071,1,0,2,java.util.HashMap,If HashMap had declared get(K key) rather than get(Object key) I suspect the compiler would have caught this error.
26474545,1,0,0,java.util.HashMap,"I have a wordcount program where I am reading from a character array, and inserting every word found (checking for blankspace) into a HashMap<Character[], Integer>, where the first parameter is the word, and the second parameter is the number of times it has been found."
26474545,1,0,0,java.util.HashMap,I do this because inserting an ArrayList into a HashMap is quite problematic when check for equality.
26474876,2,0,0,java.util.HashMap,"In this case it shouldn't be too problematic if there are different classes of objects used as keys, because HashMap relies on the hashCode and equals methods, and those don't throw exceptions if they are properly written."
26478646,1,0,1,java.util.HashMap,Adding to a linkedList in a HashMap.
26479394,1,0,0,java.util.HashMap,I had skipped the login of Insertion of Data into the HashMap for now code.
26482430,1,0,0,java.util.HashMap,Will we still get the expected behavior if we use HashMap?
26482430,1,0,0,java.util.HashMap,But what will happen if we use HashMap with overloaded equals()?
26482447,2,1,2,java.util.HashMap,"Now, as for HashMap - HashMap calls equals to compare keys."
26482447,2,1,2,java.util.HashMap,"Therefore, if you define an equals() method with a parameter whose not Object, this method will be ignored by HashMap."
26483230,1,0,2,java.util.HashMap,"Debugging the code I see that the java vm hangs doing an HashMap.get(Object) operation (here is the link to the stackTrace), and I suppose this is the well known concurrency issue on HashMap (see this java bug report)."
26483230,1,0,2,java.util.HashMap,In particular I see that the cacheKeys value of org.eclipse.persistence.internal.identitymaps.UnitOfWorkIdentityMap is an instance of HashMap and not ConcurrentHashMap.
26485710,1,0,0,java.util.HashMap,"I am using a HashMap<Integer, Integer> structure for the collection and a BoundedPriorityQueue<Feature> for the top k bins."
26485792,1,0,0,java.util.HashMap,"What I'm trying to do: My method receives a HashMap, with the key being a long Vendor (a class I've created to represent a customer of my company) ID, and the value being the Vendor object itself."
26492999,2,0,0,java.util.HashMap,What you need if I understand is a HashMap.
26494197,1,0,1,java.util.HashMap,I am learning about HashMap class and wrote this simple program.
26495230,2,1,1,java.util.HashMap,"As an extension to my comment, this sounds like a practical use of HashMap."
26495230,2,1,1,java.util.HashMap,"Using what you've given us, the below code would populate the users HashMap."
26496895,2,0,2,java.util.HashMap,You will have to put them in the HashMap manually.
26496947,2,0,2,java.util.HashMap,"If you are using Java 1.7 or above, you can omit the types in the HashMap instantiation."
26621081,2,0,0,java.util.HashMap,What you'd want to do is create and keep reference to a HashMap object.
26621081,2,0,0,java.util.HashMap,The actual signature of the HashMap you'd want to use would be Map.
26621081,2,0,0,java.util.HashMap,Here's the current documentation on HashMap: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html.
26621081,2,0,0,java.util.HashMap,"You could either use an external database, like SQL, or, if you're 100% sure that your use cases and userbase will never, ever, change, you could just hardcode account objects into your prototype and check user login attempts against the keys in the HashMap."
26503325,1,0,0,java.util.HashMap,I was looking for a way to load some data from DB into a HashMap and make that map available for all root resource classes and some additional provider classes (implementation of ContainerRequestFilter to be more precise).
26504445,2,0,1,java.util.HashMap,"This class contain ListView Initialization and Custom Adapter as inner class also make temp HashMap ArrayList for ListView 3 items,implementing ListView item click listener."
26504884,2,1,5,java.util.HashMap,"That means that it's not going to add in extra comparisons just to check that your implementation is consistent, any more than a HashMap is going to call .hashcode() on everything twice just to check it gives the same result both times."
26508286,2,0,0,java.util.HashMap,"So rather than having a two-dimensional array, you could have a HashMap<Character,List<Double>> that maps the row onto the list of grades for that row."
26508286,2,0,0,java.util.HashMap,"Once you've extracted a String representing a particular grade (say, String gr = ""e77.5"") then you can add to the list inside your HashMap gradeMap like this: code."
26508380,1,0,0,java.util.HashMap,JAVA HashMap duplicates.
26512178,1,0,3,java.util.HashMap,"Currently, I have a HashMap of 'class name' to 'class object' for all my available java fixtures."
26512178,1,0,3,java.util.HashMap,Then I would simply compare the two HashMaps and make sure the parsedMethodsFromFitnesseMap HashMap is a subset of the availableJavaClassesMap HashMap.
26513812,2,0,0,java.util.HashMap,you can just roll out your own by extending Java's HashMap to keep track of the minimum element.
26514197,2,0,0,java.util.HashMap,"In general, once they have been inserted into a Collection, you should be wary of modifying them, especially if that Collection is a HashMap."
26515241,2,1,2,java.util.HashMap,"I'd strongly recommend implementing .hashCode() as well, in case you want to use a HashMap later on (otherwise you'll hit a similar problem)."
26517713,1,0,0,java.util.HashMap,Simple method for a HashMap seems correct but it is not working.
26517713,1,0,0,java.util.HashMap,"I'm getting a NullPointerException, when my submittedAnswers() method calls the countAnswers() method, but I have checked my HashMap and it contains the correct information."
26518826,1,0,0,java.util.HashMap,Make hibernate collections a HashMap instead of List or Set.
26540277,2,0,1,java.util.HashMap,"Then you need to know that, Java's HashMap is going to be resized whenever number of entries are larger than certain threshold (have a look in capacity and loadFactor in Javadoc)."
26522901,2,0,0,java.util.HashMap,"You can retrieve HashMap Keys using: myMap.keySet() function, like this: code."
26522901,2,0,0,java.util.HashMap,"Or, you can iterate through the HashMap like this: code."
26536599,1,0,0,java.util.HashMap,"So I have this HashMap: HashMap<String,HashMap<Float,HashMap<Float,String>>> But I'm not to sure how to add and remove elements from the most deeply nest structure."
26536599,1,0,0,java.util.HashMap,"Thanks :) Update: Thanks for the help, But how can I just put on the first level of the HashMap?"
26552975,2,1,1,java.util.HashMap,Then put a HashMap in the last level: code.
26536642,2,0,1,java.util.HashMap,"Having HashMap<String,HashMap<Float,HashMap<Float,String>>> map and without accounting for null values, just follow the logical sequence that you would formulate in your mind to access the inner map and translate to the following code: code."
26536648,2,0,0,java.util.HashMap,So first you will do a get on the first HashMap with a String as key.
26536648,2,0,0,java.util.HashMap,"It will return you an HashMap<Float,HashMap<Float,String>>."
26536648,2,0,0,java.util.HashMap,You will then do a get on that HashMap with a Float as key.
26536648,2,0,0,java.util.HashMap,"It will return a HashMap<Float,String>."
26536648,2,0,0,java.util.HashMap,"You will finally do a get on that HashMap with a Float as key and there, you have the String you want."
26536648,2,0,0,java.util.HashMap,Same thing with a put instead of get on the last HashMap to insert a value.
26536667,2,0,0,java.util.HashMap,"First layer is a HashMap<String, HashMap>, so let's get."
26536667,2,0,0,java.util.HashMap,"We've got another HashMap back, so what do we do?"
26536667,2,0,0,java.util.HashMap,This is the value in the deeply nested HashMap.
26537454,2,0,3,java.util.HashMap,"There is nothing to stop you doing it with a HashMap<Character,Integer> if you want to do it as an exercise, though it's more heavyweight than it needs to be for this: code."
26538300,1,0,0,java.util.HashMap,"Here are the codes: In this class I created a getRules where I pass a HashMap where the key is the name of the field, and the value in the rules attached to it."
26539675,1,0,0,java.util.HashMap,"im getting errors for: static Map firstNameMap;firstNameMap = new HashMap<>();  - cannot find symbol firstNameMap.put(""A"", ""Cho""); -  usage of static non final variable during initialization"
26540271,2,0,2,java.util.HashMap,"First, I'd suggest using a HashMap, mapping the first letter to names, instead of the arrays."
26541047,1,0,1,java.util.HashMap,"How to input object Goods to ArrayList<HashMap<String, Object>> ?"
26541047,1,0,1,java.util.HashMap,"Because I want input ArrayList<HashMap<String, Object>> to  SimpleAdapter code."
26541296,2,0,0,java.util.HashMap,"The point to note, is that just like every new Goods object needs to be created using new Goods(), each new goodsList needs to be created also using new HashMap<String, Goods>()."
26546954,2,0,0,java.util.HashMap,In Java this can be achieved by Map interface and the heavily used implementation of this interface is HashMap.
26546993,2,0,1,java.util.HashMap,"Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not."
26548400,2,0,0,java.util.HashMap,"HashMap is not thread-safe, and you are not protecting it adequately."
26550967,2,0,0,java.util.HashMap,"@Test public void test() {     FieldsWrapper fieldsWrapper = mock(FieldsWrapper.class);     HashMap() map = new HashMap();     map.put(""id_object"", CMsgField(""id_object"", ""100""));     stub(fieldsWrapper.getFields()).toReturn(map); code. }"
31918532,2,0,7,java.util.HashMap,"), then I need a genericy key-value map structure that will dynamically resize, like java.util.HashMap."
26552067,1,0,1,java.util.HashMap,"Meaning I can use it in an HashMap<Type, TypeHandler>."
26552318,1,0,0,java.util.HashMap,I have a HashMap made ​​in this way:  code.
26552839,1,0,0,java.util.HashMap,java.lang.ClassCastException: java.util.HashMap cannot be cast to com.Pau.ImapNotes.Miscs.OneNote.
26581928,2,1,1,java.util.HashMap,"Identify the file by its name, read it and put contents in a static HashMap<code,name> and use it to replace codes in the incoming lines of actual twitter data file in the map method."
26559768,1,0,0,java.util.HashMap,I am trying to use a Java HashMap.
26563213,1,0,2,java.util.HashMap,I'd like to do sth similar in Scala so I created instance of Scala HashMap (or Java ConcurrentHashMap) and tried to add some tuples: code.
26564788,1,0,0,java.util.HashMap,HashMap in Java programming.
26565606,1,0,2,java.util.HashMap,What's the difference between these ways of initializing a HashMap?
26565606,1,0,2,java.util.HashMap,"I used a HashMap for my program and it works fine, but I don't understand the difference between these initializations of HashMap."
26565606,1,0,2,java.util.HashMap,Let's say I'm implementing a HashMap with a character as a key and an integer as a value.
26565697,2,1,5,java.util.HashMap,Anything involving HashMap or Map without a type argument (the angle brackets < and > and the part between them) is a raw type and shouldn't be used.
26565699,2,0,2,java.util.HashMap,Map/HashMap on left side declares how your 'alphabet1' variable should be considered: either as Map (interface) or HashMap (instance of concrete class).
26565741,2,0,1,java.util.HashMap,(1) initializes a HashMap without using generics but uses an unsafe cast to a HashMap with generics afterwards.
26565741,2,0,1,java.util.HashMap,(2) Initializes a HashMap with generics and declares a variable of the type HashMap with generics.
26565741,2,0,1,java.util.HashMap,"Here, the compiler uses type inference to infer the genrics of the HashMap from the declaration of the left hand side."
26565741,2,0,1,java.util.HashMap,"(3) Initialzes a HashMap with generics, but the variable alphabet1 does not reuse the generics information."
26565741,2,0,1,java.util.HashMap,"Thus, you can not access the methods on this HashMap value in a generic manner (e.g., you will get a value cast to an java.lang.Object when calling alphabet1.get('a') and not cast to an Integer)."
26565741,2,0,1,java.util.HashMap,"(4) is similar to (3) but here, the alphabet1 is typed with Map instead of HashMap."
26565741,2,0,1,java.util.HashMap,"Thus, you cannot access methods being defined in HashMap but not in its super interface Map."
26565741,2,0,1,java.util.HashMap,"(5) is similar to (3), it does not use generics for initializing the HashMap."
26565741,2,0,1,java.util.HashMap,(6) is similar to (4) and does not use generics for initializing the HashMap.
26566328,1,0,0,java.util.HashMap,"The adapter is a simple BaseAdapter, which takes in an ArrayList<HashMap<String, String>>."
26567676,1,0,2,java.util.HashMap,Get value from HashMap>.
26567676,1,0,2,java.util.HashMap,"For an ExpandableListView I want to build a HashMap<String, ArrayList<String>> where String is the name of a category and ArrayList<String> the names of animals belonging to that category."
26567676,1,0,2,java.util.HashMap,I populate the HashMap as such: code.
26567676,1,0,2,java.util.HashMap,"All keys I put in the HashMap are there, but the ArrayList I want to get with (for example) map_groups_childs.get(""Insekten"") is empty."
26568789,1,0,2,java.util.HashMap,ArrayList.contains() vs HashMap.containsKey() vs HashMap.get().
26568789,1,0,2,java.util.HashMap,Does HashMap.containsKey()?
26568789,1,0,2,java.util.HashMap,"I know HashMap.get() doesn't need to, but is that why it is the most efficient?"
26568802,2,1,9,java.util.HashMap,Does HashMap.containsKey() iterate?
26568802,2,1,9,java.util.HashMap,But HashMap.containsKey() now uses getNode().
26568802,2,1,9,java.util.HashMap,HashMap.containsKey() vs HashMap.get() Since these both delegate the bulk of their work to the same method (genEntry() in 7 & getNode() in 8) I don't think you'll see much performance difference between them.
26572104,2,0,2,java.util.HashMap,"For instance, you know that there will be a Map interface and an implementation of it called HashMap, so if you need a hash map in your application code, there's one ready and waiting for you."
26578997,2,0,2,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
26579512,1,0,0,java.util.HashMap,Trying to use HashMap to associate letters to numbers.
26579512,1,0,0,java.util.HashMap,"I'm trying to link each letter of the alphabet to a number, and then iterate through a string and letter by letter print the letter values from the HashMap."
26579626,2,0,1,java.util.HashMap,"The problem here is that your HashMap contains String keys, but you try to get a Character from it."
26579626,2,0,1,java.util.HashMap,Also note that I typed the HashMap.
26581085,1,0,1,java.util.HashMap,"Any help/guidance greatly appreciated UPDATE I'm trying to implement an iterator for a custom HashMap, and need to implement the next() method - the structure of my code is: code."
26581201,1,0,0,java.util.HashMap,Java HashMap in prtocol buffer.
26581654,1,0,4,java.util.HashMap,I am thinking of using a HashMap which stores only one copy of the word and then subsequently increments the value if the same word is encountered again.
26585948,2,0,1,java.util.HashMap,of unique words can fit in memory : maintain a TreeSet or HashMap with count and read words one by one and add the count in HashMap.
26582229,2,0,3,java.util.HashMap,"If you use HashMap, you get O(M) complexity, but the output list is not ordered ... and it doesn't work for the ""complicated"" approaches."
26587606,2,1,0,java.util.HashMap,"You can use a HashMap<KeyObject,KeyObject> in which the key is the same as the value."
26595750,2,0,0,java.util.HashMap,You can override get(Object key) when you create your HashMap .
26599345,1,0,1,java.util.HashMap,HashMap yields same hashCode for different contents.
26599345,1,0,1,java.util.HashMap,"However, if I create a HashMap with the name as index and the Variable as value, the assertion fails, ie they compare the same."
26599441,2,1,1,java.util.HashMap,Oracle's implementations of both AbstractMap.Entry and HashMap.Entry define hashCode as: code.
26599441,2,1,1,java.util.HashMap,The HashMap is sort of a symbol table which I really like to index by name.
26599517,2,0,1,java.util.HashMap,The HashMap.Node implementation (which HashMap#hashCode() uses)  of hashCode() is code.
26601920,1,0,0,java.util.HashMap,Convert Java String to HashMap Object.
26601920,1,0,0,java.util.HashMap,"I have created an application for converting the HashMap object to String, its working fine, The problem which i am facing is that i want to convert the HashMap string again back to HasMap object, when i tried that by using the following code , I am getting exception as shown below code."
26604675,2,0,0,java.util.HashMap,I would recommend using a HashMap.
26604675,2,0,0,java.util.HashMap,Create a HashMap and loop through A and B putting anything you see into the map.
26606206,1,0,0,java.util.HashMap,Store HashMap on MongoDB.
26606206,1,0,0,java.util.HashMap,"So, my point is, how to save HashMap in MongoDB?"
26610363,2,1,4,java.util.HashMap,"If you need the map-like property (mapping from String to Integer), then you could write a class that internally keeps everything in both a PriorityQueue and a HashMap."
26610363,2,1,4,java.util.HashMap,"When you insert, you insert into both; when you remove the minimal element, you pop from the PriorityQueue, and that then tells you which element you also need to remove from your HashMap."
26615541,2,0,0,java.util.HashMap,"I assume that you can handle reading and parsing the input file yourself, or that you intent to work that out separately, since your question specifically asks about ""HashMap help"" and says that you have a problem using HashMap to solve this problem."
26617343,2,0,1,java.util.HashMap,map is just a key and value so HashMap makes very little sense Java does not let you define data structured this way.
26617872,2,0,2,java.util.HashMap,Use a HashMap to count the number of times a given card rank appears in the hand.
26621907,1,0,1,java.util.HashMap,"How to avoid HashMap ""ConcurrentModificationException"" while manipulating `values()` and `put()` in concurrent threads?"
26621907,1,0,1,java.util.HashMap,Code: I have a HashMap code.
26621907,1,0,1,java.util.HashMap,It seems that the toArray() method in one thread is actually iterating over the HashMap and a put() modification in other thread occurs.
26621907,1,0,1,java.util.HashMap,"Question: How to avoid ""ConcurrentModificationException"" while using HashMap.values().toArray() and HashMap.put() in concurrent threads?"
31415308,2,0,0,java.util.HashMap,I would use ConcurrentHashMap instead of a HashMap and protect it from concurrent reading and modification by different threads.
26621950,2,1,2,java.util.HashMap,Use a ConcurrentHashMap instead of a HashMap.
26623367,2,0,2,java.util.HashMap,"LinkedHashMap very similar to HashMap, but it adds awareness to the order at which items are  added or accessed, so the iteration order is the same as insertion order  depending on construction parameters."
26623367,2,0,2,java.util.HashMap,LinkedHashMap extends HashMap.
26623367,2,0,2,java.util.HashMap,This constructor constructs a insertion-ordered Linked HashMap with the same mappings as the specified Map.
26623160,2,0,2,java.util.HashMap,On the other hand HashMap doesn't maintain any order or keys or values.
26623160,2,0,2,java.util.HashMap,In terms of Performance there is not much difference between HashMap and LinkedHashMap but yes LinkedHashMap has more memory foot print than HashMap to maintain doubly linked list which it uses to keep track of insertion order of keys.
26623160,2,0,2,java.util.HashMap,A HashMap has a better performance than a LinkedHashMap because a LinkedHashMap needs the expense of maintaining the linked list.
26623160,2,0,2,java.util.HashMap,Let's take a look their API documentation: The HashMap is a hash table with buckets in each hash slot.
26623160,2,0,2,java.util.HashMap,"Iteration over collection views   requires time proportional to the ""capacity"" of the HashMap instance   (the number of buckets) plus its size (the number of key-value   mappings)."
26623160,2,0,2,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
26623216,2,0,0,java.util.HashMap,HashMap makes absolutely no guarantees about the iteration order.
26623216,2,0,0,java.util.HashMap,LinkedHashMap will iterate in the order in which the entries were put into the map LinkedHashMap also requires more memory than HashMap because of this ordering feature.
26623217,2,0,1,java.util.HashMap,"Use a HashMap if you don't care, and a LinkedHashMap is you care."
26623713,1,0,2,java.util.HashMap,I used to thing that HashSet is a pretty fast data structure implementation because it uses hashes (and is implemented via HashMap in its turn).
26624183,1,0,2,java.util.HashMap,Second question: my current challenge is to accurately reflect the population of currently-polling callers in the HashMap.
26624183,1,0,2,java.util.HashMap,"When a caller stops polling, I need to remove its entry from the HashMap."
26624183,1,0,2,java.util.HashMap,"A caller can leave for three reasons: 1) the 3600 seconds elapse and so it times out, 2) another application component looks up the caller in the HashMap and calls asyncResponse.resume(""MESSAGE""), and 3) the HTTP connection is broken for some reason, such as somebody turning off the computer running the client application."
26624183,1,0,2,java.util.HashMap,"The challenge, as I said, is to use these two callbacks to remove no-longer-polling callers from the HashMap."
26624183,1,0,2,java.util.HashMap,"Since it receives an asyncResponse instance as a parameter, I can use that to remove the corresponding entry from the HashMap, like this: code."
26624183,1,0,2,java.util.HashMap,"As a result, it seems the only solution is to run through the HashMap entries checking for done/cancelled ones and removing them, like the following."
26625096,1,0,0,java.util.HashMap,Hello In my web application I am maintaining list of URL authorized for user in a HashMap and compare the requested URL and revert as per the authorization.
26633360,1,0,0,java.util.HashMap,"I currently have a HashMap with two values, Trap and Dog."
26636178,1,0,4,java.util.HashMap,A common pattern I am encountering is a need to refresh a collection like a List or a HashMap from a database but don't want values added or removed from it in between refreshes.
29291614,2,0,1,java.util.HashMap,"If you have a serialized class (like a HashMap) in the request body and you want to prevent encoding that (like in vezikon's and my problem), you can create a custom Gson with disabled escaping using: code."
26640526,1,0,0,java.util.HashMap,How to sort HashMap by key order?
26640526,1,0,0,java.util.HashMap,The hashmap is of type HashMap.
26640896,1,0,0,java.util.HashMap,"I have a HashMap availableGovernates  holding  the key(id) and value as a governate object am trying to populate the cities menu based on the choosen governate  , the  value of (form.governate)passed  to the function getGovAvaiableCities is null when I check but after submitting , form.governate is set code."
26641281,1,0,0,java.util.HashMap,Why does a String returned from a HashMap not match although it is identical to System.out?
26645927,2,1,2,java.util.HashMap,"And, unless the Point gets reused, you use the memory for candidate and the Map.Entry in your HashMap."
26646260,2,0,1,java.util.HashMap,"So your HashMap would not simply work, and instead of saving memory you would not only create a new Point each time, but also add an entry to your HashMap and perform unnecessary calculations."
26646850,2,0,0,java.util.HashMap,Try to store to in a HashMap with key data and value the created class.
26646850,2,0,0,java.util.HashMap,If the method is called first check if a class with this type is already in the HashMap.
26649111,1,0,1,java.util.HashMap,"I was going through the tutorials and saw that hashcode() is mainly used in HashMap,HashTable and HashSet."
26657867,2,0,1,java.util.HashMap,"Create a HashMap from int (representing the week number) to Set<Project>, then iterate over your projects and for each one, put it into the map at the right place."
26658293,1,0,0,java.util.HashMap,Can Java's HashMap overflow silently?
26658293,1,0,0,java.util.HashMap,"In Java, can a java.util.HashMap<Key, Value> overflow silently, so content is deleted without me receiving an exception or some other notification?"
26658293,1,0,0,java.util.HashMap,"I meant can it exceed the physical hardware memory, not the reserved memory for the HashMap object."
26658385,2,0,3,java.util.HashMap,"From the docs   When the number of entries in the hash table exceeds the product of   the load factor and the current capacity, the hash table is rehashed   (that is, internal data structures are rebuilt) so that the hash table   has approximately twice the number of buckets  A HashMap will never ""overflow"", it will simply resize."
26659018,2,0,2,java.util.HashMap,See Theoretical limit for number of keys (objects) that can be stored in a HashMap?
26663411,1,0,1,java.util.HashMap,Java HashMap in methods.
26663411,1,0,1,java.util.HashMap,Is it possible to have a method requiring a HashMap and be able to provide any HashMap with Strings as keys?
26663471,2,0,3,java.util.HashMap,"Also, you can define a HashMap as follows: code."
26663471,2,0,3,java.util.HashMap,HashMap.
26663475,2,0,0,java.util.HashMap,extends T> Requiring HashMap is programing to an implementation rather than an interface.
26665897,1,0,0,java.util.HashMap,"I'm using spring to control this, and the value in question is a HashMap."
26666318,2,0,1,java.util.HashMap,The best approach would be to use a HashMap and put all the dictionary words in that.
26666287,2,0,0,java.util.HashMap,"But if you're trying to come up with a HashMap implementation for a specific purpose that doesn't expose generic parameters, you can do that by extending a parameterized HashMap."
26666287,2,0,0,java.util.HashMap,You can extend HashMap like this: code.
26666187,2,0,0,java.util.HashMap,There is no way that you can write a HashMap<Foo> for any single argument Foo.
26666187,2,0,0,java.util.HashMap,HashMap expects two type parameters; messing around with Map.Entry will not change that.
26668135,1,0,0,java.util.HashMap,Sadly that solution won't allow the HashMap to 'find' the provider when it comes time to look it up.
26668135,1,0,0,java.util.HashMap,"In Java HashMap, how to enforce a generic type to be a subclass  Neither look like what we are looking for (yet)."
26671737,2,0,0,java.util.HashMap,"Just for You to try    Create a HashMap with <Character, Integer > Go through each String, if Character is found twice, increment the count.."
26672883,1,0,0,java.util.HashMap,What happens when weak referenced object is put itno HashMap as key?
26674729,1,0,3,java.util.HashMap,This will cause all the HashMap keys to have the same index.
26674760,2,1,2,java.util.HashMap,"Different keys may have the same hashCode, but if all the keys have the same hashCode, your HashMap would become a linked list, which defeats the purpose of using this structure in the first place."
26674760,2,1,2,java.util.HashMap,You can see it for yourself in a HashMap implementation : code.
26679184,2,0,0,java.util.HashMap,"If you need to access elements from a collection that have a unique attribute, it is better to use a HashMap instead, with that attribute as key."
26680007,2,0,0,java.util.HashMap,"Regarding to your post, using a HashMap appears to a good solution."
26680007,2,0,0,java.util.HashMap,"In addition, if we suppose that you need also to search a fruit using the fruitID into your set, HashMap will make the search time barely constant."
26681058,1,0,0,java.util.HashMap,But how is this any different than a HashMap?
26681902,1,0,1,java.util.HashMap,I know how to call an ArrayList into a method but not how to call a HashMap and how only look at the Strings.
26681936,2,0,3,java.util.HashMap,Now if you want them in the same order you put them in the Map you must use LinkedHashMap instead of HashMap code.
26682281,2,0,1,java.util.HashMap,"Note here I'm assuming the type of the map is HashMap<string,int> since that's what your example looks like."
26683086,2,1,1,java.util.HashMap,"A simple, slightly hacky way you could do this without defining your own types would be to store these in a HashMap, with a string combining the Q_ID and the Type_Question as a single concatenated string, like so: code."
26684954,1,0,1,java.util.HashMap,"It seems a complete waste of CPU and memory to use a HashMap with all the overhead to begin with, but also the bad performance calculating an advanced hash value for each key lookup."
26684954,1,0,1,java.util.HashMap,"The use-case here is very well-defined and doesn't change much, furthermore; it would be trivial to replace a very cheap map with a HashMap in case (something that will never happen) there will be a very large amount of new keys suddenly."
26684981,2,1,1,java.util.HashMap,"There won't be a dramatic memory overhead since as far as I know, an HashMap is initialized with 16 buckets and then doubles its size each time it rehashes, so in the worst case you would have 12 exceeding buckets for your map, so this is no big deal."
26684981,2,1,1,java.util.HashMap,"The only backdrop for HashMap is that it is unsorted, but as far as I am concerned, I consider it the default Map implementation in Java when I have no particular requirement about the order."
26684981,2,1,1,java.util.HashMap,To conclude : use HashMap !
26686574,2,1,3,java.util.HashMap,HashMap does not need keys to be Comparable but still implements Map interface.
26686587,2,0,0,java.util.HashMap,"Declare a HashMap of arrays in the form HashMap<String, int[]> (that is if your data are integers)."
26691146,2,1,7,java.util.HashMap,"Implementations of Map in general do not have a specified iteration order, so you should not write programs that depend on the order of elements in for example a HashMap."
26691146,2,1,7,java.util.HashMap,"It's possible that if there is more memory available (for example because you use a 64-bit JVM instead of a 32-bit JVM, with different memory settings), HashMap behaves differently."
26692578,2,0,0,java.util.HashMap,"Second way is using a HashMap, where you store per each character the value, count the chars, update the value in the map accordingly and then simply go through the map and print those out (now that I am thinking about it, SortedMap will be better)."
26695496,2,0,0,java.util.HashMap,This example uses an HashMap to record prices: code.
26695513,2,0,0,java.util.HashMap,"So one technique is to store the strings you want to use in a HashMap, then look them up to get the rest of the info that you need."
26695513,2,0,0,java.util.HashMap,"That puts all your strings into a HashMap, plus a new object FoodItem which stores any additional relevant information you'd need to process the food item."
26695513,2,0,0,java.util.HashMap,"When the user enters a food name, just look it up in the HashMap."
26695513,2,0,0,java.util.HashMap,"Here I added a trim() to get rid of any white space, which would cause the string to be not found since HashMap only return exact matches."
26697559,1,0,0,java.util.HashMap,"I would prefer to make a class called ""Point"", with the appropriate fields and store them in one of collection types (HashMap?"
26700824,1,0,7,java.util.HashMap,"Im trying to use a HashMap but getting the error: ""The type java.util.Map$Entry cannot be resolved."
26703107,2,0,0,java.util.HashMap,"If on the other hand you need to perform certain actions when a check box has been checked, you could always use a Map<JCheckBox, Runnable> such as a HashMap, and then run the Runnable if the check box is selected."
26711576,2,0,4,java.util.HashMap,Use a HashMap with key=neededPosition (=count) value=position in arr Init the map like this: code.
26711850,2,0,1,java.util.HashMap,"To answer the question in the title anyway: If your array is sparse, use a map (TreeMap or HashMap) of Long or BigInteger: code."
26713530,1,0,2,java.util.HashMap,"After calling this procedure, I have all the results stored in a HashMap and I can output the results to screen or file."
26716809,2,0,2,java.util.HashMap,You can use a HashMap in your case  it will have a String keys and HashSet values.
26717559,2,0,1,java.util.HashMap,"HashMap has a convenient method called entrySet(), which lets you access a collection of key-value pairs."
26825947,2,0,0,java.util.HashMap,So I manually copied and pasted all 31 cookies and their content into a HashMap.
26724622,2,1,1,java.util.HashMap,From HashMap documentation:  code.
26726726,2,0,2,java.util.HashMap,"Check what put() will do in the docs for HashMap Using a list as value for your map, you can try the following: code."
26735269,2,0,0,java.util.HashMap,What happens if one day you decide to use a HashMap instead of an ArrayList... etc.
26737802,1,0,0,java.util.HashMap,HashMap ContainsKey vs contains.
26739693,2,0,4,java.util.HashMap,A HashMap will internally use the key's hash code to efficiently do the get/put operations.
26740709,2,1,0,java.util.HashMap,Creating Two-Dimensional Array http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html http://www.tutorialspoint.com/java/java_hashmap_class.htm Questions to ask yourself: How many values?
26740709,2,1,0,java.util.HashMap,Memory overhead of Java HashMap compared to ArrayList For simplicity I would probably use the 2d array approach if it more closely models the structures you're creating.
26741811,2,0,2,java.util.HashMap,"If a action and parameter will always be a 1-to-1 mapping (an action will only ever have one parameter), then your basic premise should be fine (though I'd recommend HashMap over Hashtable as it's faster and supports null keys) If you will have many parameters for a given action, then you want Map<String, Set<String>> - where action is the key and each action is then associated with a set of parameters."
26759423,2,1,1,java.util.HashMap,"However, we can parse it only once to build something more reliable, easier for a machine to understand:  Oh yes, now it is really easy to parse: its called with params.length parameters, you set them in a HashMap or whatever representing your scope, then you call the ""function"" * with parameters 2 and the expression *(a,b), which is another function, so we call it by passing a and b to the ""function"" *."
26759423,2,1,1,java.util.HashMap,"To do this, we use the Scope object (or a HashMap<String, double> for what it matters)."
26742850,1,0,0,java.util.HashMap,I have a simple object I would like to use as a key in my HashMap.
26744368,1,0,0,java.util.HashMap,"So, I am iterating through a HashMap of Strings and Booleans."
26745488,2,1,0,java.util.HashMap,"The .generate() method would take a Class<?> parameter, and would maintain a HashMap mapping classes to most recently given out identifiers."
26747189,1,0,0,java.util.HashMap,Returning an element from the HashMap.
26747189,1,0,0,java.util.HashMap,In my current assignment we are working with HashMap.
26747189,1,0,0,java.util.HashMap,"Return an Album from the HashMap if it exists, or null otherwise."
26747208,2,1,3,java.util.HashMap,"As per the HashMap API:  Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
26749055,2,0,3,java.util.HashMap,You appear to be using raw types and Hashtable instead of a HashMap.
26749480,1,0,0,java.util.HashMap,"Now I add this into a HashMap<String, Object> which is then added to ArrayList<HashMap<String, Object>>."
26749924,1,0,0,java.util.HashMap,HashMap.containKey return wrong value.
26749924,1,0,0,java.util.HashMap,Iam  writing a java method which given a string of keywords will return a HashMap.
26749924,1,0,0,java.util.HashMap,The key to the HashMap is an object of type subXMLdoc which I called docpart.
26749924,1,0,0,java.util.HashMap,The value part of HashMap is an Array List of Term_with_Pos objects.
26749924,1,0,0,java.util.HashMap,The method returns the followings two columns output: The first column is the key of HashMap while the second column is the value part of the HashMap code.
26749965,2,0,0,java.util.HashMap,HashMap use hashCode of your object.
26749951,2,0,1,java.util.HashMap,"You need to also override hashCode, especially for the key of a HashMap."
26753106,2,0,0,java.util.HashMap,Take HashMap which hold all position and Boolean for is click or not : code.
26753106,2,0,0,java.util.HashMap,Check HashMap contain this position mean this position item clicked base on change background as well Boolean value in HashMap : code.
26758425,1,0,4,java.util.HashMap,If the size of the HashMap reaches to the max value (e.g.
26758425,1,0,4,java.util.HashMap,That will defeat the purpose of using concurrent HashMap).
26759920,1,0,1,java.util.HashMap,"Safely pass HashMap values, without value collection escaping."
26762658,2,0,6,java.util.HashMap,"Depending on your needs there are several options, some being:  Use a TreeMap instead of a HashMap either temporarily or as a replacement."
26762658,2,0,6,java.util.HashMap,"Use a TreeSet to sort the keys, then iterate over the keys and extract the values from the HashMap."
26773129,2,0,0,java.util.HashMap,"Define your custom HashMap to hold color name and color code Like : Set/Get Color Name :     HashMap colorNameMap = new HashMap();     colorNameMap.put(""#000000"",""black""); code."
26772924,2,0,1,java.util.HashMap,you need to do that manually by mapping color code to its Name by creating simple HashMap object and map color code with specific names.you can get few color with names here  http://www.color-hex.com/color-names.html +1 for code in above comment its using same colors as Link content lists
26776106,1,0,3,java.util.HashMap,I have a HashMap like below: code.
26776182,2,0,0,java.util.HashMap,"Use a SortedMap, such as a TreeMap instead of a HashMap."
26778279,1,0,0,java.util.HashMap,How do I get out the corresponding key of the value in that HashMap.
26778279,1,0,0,java.util.HashMap,I don't think there's a getKey()     method for a HashMap.
26787609,2,1,2,java.util.HashMap,"Otherwise, you can do the mapping with a HashMap."
26790425,2,1,5,java.util.HashMap,"The class does seem relatively frivolous the way it is now; however:  It lets them refer to HashMap<String, Object> as MapHelper which is shorter and guarantees consistency."
26790425,2,1,5,java.util.HashMap,"Extending HashMap as a top-level class makes the generic type arguments reified, that is, they are available at runtime through reflection."
26790441,2,0,0,java.util.HashMap,"The purpose of the class is to prevent you from having to hardcode HashMap<String, Object> every place you want to use that type of map (it increases abstraction)."
26790642,1,0,0,java.util.HashMap,And why is it accumulated in a HashMap?
26793280,1,0,1,java.util.HashMap,How to implement a HashMap from a string input.
26793468,2,0,0,java.util.HashMap,Use a list as the value of the HashMap.
26793468,2,0,0,java.util.HashMap,When you search a keyword you can return the list with all the Activity_ids that matches the keyword Example:  Input: 1 - soccer game | 2 - badminton game This is what HashMap will look like code.
26796381,2,0,1,java.util.HashMap,If you need to return the respone alone from the controller method.However you cant print the HashMap directly in the ajax response on your jsp.
26798725,1,0,1,java.util.HashMap,"placeHolderRegister is an instance of HashMap<String, List<ContentAccessor>> ; it associates lists of ContentAccessor instances with their corresponding placeholder keyword."
26799266,1,0,1,java.util.HashMap,in my android application I have HashMap of LinkedBlockingQueue: code.
26799451,1,0,3,java.util.HashMap,I have a HashMap which I want to convert to XML: code.
26805564,1,0,2,java.util.HashMap,A sort of replication of you will… I start with looping all documents in the Domino database and store them in a HashMap with UNID as key and Document object as value:  code.
26806062,1,0,0,java.util.HashMap,public HashMap displayBookList() throws RemoteException;
26808062,1,0,1,java.util.HashMap,I want to loop through the alphabet with a for loop and add each letter to my HashMap code.
26808062,1,0,1,java.util.HashMap,"doesn't work for me, because my HashMap is of form code."
26808196,2,0,1,java.util.HashMap,"First problem: When you work with a HashMap, you are supposed to map a key to a value."
26808196,2,0,1,java.util.HashMap,"The second problem is that a HashMap, like all java collections, only takes objects - both as keys and as values."
26809537,1,0,0,java.util.HashMap,ArrayList .get faster than HashMap .get?
26809537,1,0,0,java.util.HashMap,"that is, to say, that HashMap.get(key) should be faster than ArrayList.get(index) simply because the ArrayList has to traverse every element of the collection to reach its value, whereas the HashMap does not."
26809537,1,0,0,java.util.HashMap,"After 2-3 warmup cycles, testing shows that ArrayList.get() takes around 56 ns, while HashMap.get() takes around 68 ns."
26809537,1,0,0,java.util.HashMap,Is my HashMap all eaten up with collisions?
26809614,2,0,3,java.util.HashMap,"HashMap's get, on the other hand, first must hash its argument, then it must traverse the bucket to which the hash code corresponds, testing each element in the bucket for equality with the given key."
26809640,2,0,0,java.util.HashMap,"Both ArrayList and HashMap are backed with arrays, HashMap has to compute a hash code of the key from which it derives the index to use for accessing the array while for accessing an and element in the ArrayList using get you provide the index."
26809940,2,0,0,java.util.HashMap,Big O for HashMap is O(1+α).
26813556,1,0,0,java.util.HashMap,"I am trying to first couple itemTypeList and priceList in a HashMap<String[], Double[]> and then somehow associate it with Parent item Can someone please help me with the following:  A mature high level design approach for the application (more details would be appreciated as I am a n00b to design patterns) The best way to associate and implement various type of Parent items, sub-items and their price  Any other criticism is most welcome!"
26820044,1,0,0,java.util.HashMap,What for we need to check this condition Float.isNaN(loadFactor) in HashMap constructor ?
26820044,1,0,0,java.util.HashMap,"Do not we get a compilation error immediately when will create the new HashMap(int initialCapacity, float loadFactor) if loadFactor is not number?"
26820252,2,0,1,java.util.HashMap,"First read in the ""big"" text file and split each line into a HashMap entry with the number as the key and the remainder as the value, and the second loop would read the File1, split it into an array with two elements, look up the number in your HashMap, and replace the number with the value from the HashMap, and write out the results to a new file."
26820252,2,0,1,java.util.HashMap,http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-int- http://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html
26820312,2,0,1,java.util.HashMap,"I think the most efficient way to do this would be to read the second file first, and then create a HashMap of all the values where the key would be the first column and the values would be the second column."
26820312,2,0,1,java.util.HashMap,"Then, in the first file, do the same splitting, and then perform a replace using the HashMap you just created."
26821532,1,0,3,java.util.HashMap,"To me, it seems to be a good idea rather than a bad one-- the hashCode-s vary as the values vary across objects, and these hashCodes are ""normalized"" before they are spread out into the buckets of a HashMap/HashSet-- so that the hashCode-s of the entries do not form a bias on which bucket the entry will go in."
26821958,2,0,1,java.util.HashMap,But in this case you might be better of using a HashMap which assigns a value (in your case a product) to a key (in your case its name).
26822923,2,0,1,java.util.HashMap,"There are basically two ways: (assuming your keys are of type String and your values are of type Object)  Instead of HashMap<String, Object> use HashMap<String, Collection<Object>> Use MultiMap<String, Object> from commons collections or guava."
26832474,2,1,0,java.util.HashMap,You have to fill that HashMap with the parameters you want.
26826014,1,0,1,java.util.HashMap,But there is one problem - the size of HashMap is not equal to the size of vector of costs.
26830505,1,0,1,java.util.HashMap,"The getAllReceivers() method returns an ArrayList of HashMap<String, String>s that have all of my data."
26835610,1,0,0,java.util.HashMap,"How do I fill my HashMap with information from my database, and then add it to my Jasper Report?"
26835610,1,0,0,java.util.HashMap,I am trying to get my HashMap parameters to be populated with information from my database.
26836168,1,0,3,java.util.HashMap,Do HashMap values need to be immutable?
26836168,1,0,3,java.util.HashMap,"I understand that keys in a HashMap need to be immutable, or at least ensure that their hash code (hashCode()) will not change or conflict with another object with different state."
26836168,1,0,3,java.util.HashMap,"However, do the values stored in HashMap need to be the same as above*?"
26836168,1,0,3,java.util.HashMap,* The idea is to be able to mutate the values (such as calling setters on it) without affecting the ability to retrieve them later from the HashMap using immutable keys.
26836232,2,0,2,java.util.HashMap,The values of a HashMap do not need to be immutable.
26836216,2,0,1,java.util.HashMap,An entry was put in a cache (backed by a HashMap).
26837586,1,0,0,java.util.HashMap,How can I add more than one database record to my HashMap?
26837586,1,0,0,java.util.HashMap,I have a HashMap that I am using to store information from my database.
26837586,1,0,0,java.util.HashMap,These strings are then used in the HashMap.
26837586,1,0,0,java.util.HashMap,"For example, one of my lines of code for my HashMap is parameters.put(""CertificateCode"", CertificateCode);."
26837586,1,0,0,java.util.HashMap,"From what I'm beginning to understand, the first parameter of the HashMap allows the application to know WHERE to put the information, and the second parameter tells the HashMap WHAT information to put in."
26837586,1,0,0,java.util.HashMap,"I noticed that if I try to run a loop through these lines of code, it will simply replace an existing value in the HashMap with the new one, thus only displaying the last record from my database."
26837586,1,0,0,java.util.HashMap,How would I go about making the HashMap allow for the storage of multiple database records?
26837586,1,0,0,java.util.HashMap,I thought it might work if I added an array list to the HashMap.
26841900,2,0,0,java.util.HashMap,"HashMap wont allow duplicate keys, when you try to insert value for a key which is already present inside the map then it will overwrite the key value with the new one."
26844151,2,0,0,java.util.HashMap,"Map <String, NodeList> config = new HashMap <String, NodeList>();"
26844670,2,0,0,java.util.HashMap,"If you want to keep the same lining, you could probably read both strings of a line, saving them in a HashMap, as in the first string parsed saved as the key and the second as the value"
26850095,1,0,4,java.util.HashMap,"Now I have a test class where create two car objects, and call the equals method and then put each instance of car into a HashMap."
26850095,1,0,4,java.util.HashMap,"However even though each instance returns the same hashCode, when I add them to the HashMap, it keeps two objects int the Map, whereas I would expect the second put to replace the first object in the map ???"
26850139,2,1,14,java.util.HashMap,"Essentially, you have provided an overload instead of an override, so HashMap keeps calling the equals from the base class."
26852412,1,0,1,java.util.HashMap,I'm trying to take user inputs and sort data into multiple ArrayLists inside a HashMap without the use of MultiMap.
26853228,2,0,0,java.util.HashMap,Java: iterate through HashMap.
26856336,1,0,4,java.util.HashMap,Searching through HashMap coordinates.
26856336,1,0,4,java.util.HashMap,The cities are stored in a HashMap like the following: code.
26856336,1,0,4,java.util.HashMap,However my problem is I do not know how to search through the HashMap and get the closest city.
26856917,1,0,0,java.util.HashMap,Assuming the data stored in HashMap like this code.
26858824,2,0,1,java.util.HashMap,Those are the methods used to locate a key in the HashSet/HashMap.
26868452,2,0,0,java.util.HashMap,"all what you need to do is change your code little bit, instead List define map   Map> items = new HashMap<>();   and other change is in your while loop where you are creating item code."
26870357,1,0,2,java.util.HashMap,Use Java HashMap multiple Type.
26870444,1,0,1,java.util.HashMap,"Now I want to use a HashMap<K, V> inside my class."
26871483,1,0,1,java.util.HashMap,"I want to create a HashMap if Registers, where its key is the register type and its value is the register itself."
26883474,1,0,1,java.util.HashMap,HashMap n-dimensional using a recursive function.
26883474,1,0,1,java.util.HashMap,I don't know how to make a matrix n dimensional using  HashMap.
26883474,1,0,1,java.util.HashMap,The idea is to enter a number which indicates the dimension of the matrix and from this make a recursive function which creates the n-dimensional HashMap.
26883642,2,0,0,java.util.HashMap,"4) In all cases, create array[position] as a new HashMap 5) Call back the function with parameters (position+1, dimension) Hope this helps"
26891508,1,0,0,java.util.HashMap,Unmarshall XML object List into HashMap with XMLAdapter.
26891508,1,0,0,java.util.HashMap,"What I want is to convert the List< Field2 > to be HashMap< String, Field2 > where the String key will be the xmlTag value from the Field2 object."
26894616,2,0,2,java.util.HashMap,"and in readIn(File selection), use Object temp instead of HashMap<String, Object> temp You might want to add some instanceof checks before doing an unchecked type conversion whenever you use readIn()"
26896276,2,0,0,java.util.HashMap,"You could do something like this in a lot of different ways, you could use something like a HashMap, which allows you to store a key with a value of the key (A word could be the key, and the definition the value), you could create an SQLite database so that the cards would be stored on the device and easily reloadable on each start up of the app."
26899701,2,0,0,java.util.HashMap,Use HashMap The basic Idea is loading all the values into a hashtable.
26899708,2,0,0,java.util.HashMap,"Just iterate through the list and keep a HashMap<String,Integer> that counts how many times the string has appeared, eg."
26902801,1,0,0,java.util.HashMap,How to sort HashMap based on property of key object when values of Hashmap are same?
26902801,1,0,0,java.util.HashMap,"I have a HashMap with objects of a class (obj1, obj2, obj3) as keys and java.util.Date (date1, date2, date3)as values."
26902801,1,0,0,java.util.HashMap,"The HashMap is already sorted based on the values, i.e., based on the date objects."
26902801,1,0,0,java.util.HashMap,"Now, When the values of HashMap are same, i.e., when there are same dates as values, I need to check the name of the key object (obj.name) and sort the HashMap based on name propery of key object."
26902801,1,0,0,java.util.HashMap,"For example, I have the below HashMap code."
26902801,1,0,0,java.util.HashMap,"Then finally I need to sort the HashMap to get the keySet in the order [obj1,obj3,obj2,obj4], since keys obj2 and obj3 have same date values and hence to be sorted based on name property of key objects."
26903891,1,0,0,java.util.HashMap,Hi I am working with HashMap in java and i have a scenario where i have to compare 2 HashMaps HashMap1 :  Key: BOF   Value : SAPF Key: BOM   Value : SAPM Key: BOL   Value : SAPL HashMap2 : Key: BOF   Value : Data1 Key: BOL   Value:  Data2  And after comparing these two hashmaps my resulting hashmap will contain the Key as a Value of First HashMap1 and Value as a Value of second HashMap2.
31694818,2,0,1,java.util.HashMap,TO compare two HashMap object you should override equals and hashcode method.
26904056,2,0,0,java.util.HashMap,HashMap has an method called entrySet() that returns an object that represents the content of the map as a set of key-value pairs.
26904689,1,0,2,java.util.HashMap,What if a HashMap is full?
26904993,2,0,2,java.util.HashMap,From HashMap API 1)  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor.
26904787,2,0,8,java.util.HashMap,"Update: Internally HashMap has Node<K,V>[] table."
26904787,2,0,8,java.util.HashMap,"by applying a modulo) Update: HashMap calculates the bucket index like this: (size - 1) & hash, hash is the return value of the key's hashCode() method, which doesn't depend on the map itself."
26907867,2,0,2,java.util.HashMap,a HashMap where each Button is mapped to its corresponding TextField.
26907867,2,0,2,java.util.HashMap,"When the Button gets a click, just do a lookup in your HashMap, pull the respective TextField and do with it whatever is needed."
26910383,2,0,0,java.util.HashMap,I implemented a dataserver using Spring Framework where I needed my own entity class and to make sure that I could save my Entity bean objects into a HashMap I had to override equals() and hashCode() in my Entity definition class.
26910343,1,0,0,java.util.HashMap,IllegalArgumentException - Google Guava convert String to HashMap.
26910343,1,0,0,java.util.HashMap,I am trying to convert the following String into a HashMap as it has key-value pairs: code.
26916271,2,1,23,java.util.HashMap,"It's definitely not a bug, it is entirely because of the anonymous inner class inheriting from HashMap: code."
26916271,2,1,23,java.util.HashMap,What you're doing is creating an anonymous class that extends HashMap within your Scope class.
26916271,2,1,23,java.util.HashMap,"Since it inherits from HashMap, java.util.Map.Entry shadows scope.Scope.Entry."
26913648,1,0,0,java.util.HashMap,I am trying to understand the HashMap implemintation.
26913742,2,1,1,java.util.HashMap,"In that implementation of a HashMap, the data structure was backed by an array of linked lists of entries."
26915137,2,1,5,java.util.HashMap,"put and get are thread safe in the sense that calling them from different threads cannot corrupt the data structure (as, e.g., is possible with a normal java.util.HashMap)."
26916863,2,0,0,java.util.HashMap,"Loop through each of the ""user-group"" XML nodes in your Java program, create a map implementation, you can use a HashMap, with key - ""clerk"" value will be a POJO bean defining a ""rule"" For example here is your ""Rules"" class - code."
26916863,2,0,0,java.util.HashMap,"Now you can use this HashMap anywhere in your program, to implement the rules."
26918167,1,0,0,java.util.HashMap,I would like to convert an ArrayList<HashMap> to an ObservableList and place it in my TableView.
26918167,1,0,0,java.util.HashMap,"Placing the items in the TableView works, it just doesn't display the values from the HashMap."
26918434,1,0,0,java.util.HashMap,MyBatis query result in a HashMap?
26918434,1,0,0,java.util.HashMap,"For the below query,           SELECT MSGS.MSGTYPE,count(*) as NOOFRECORDS       FROM SCHEMA.MESSAGES MSGS      GROUP BY MSGS.MSGTYPE      What would be the equivalent in Mybatis mapper so that I can get a Result as a HashMap Holding MSGS.MSGTYPE as the key and NOOFRECORDS as the value ?"
26921131,2,0,0,java.util.HashMap,You should use a HashMap.
26921133,1,0,0,java.util.HashMap,HashMap>.
26921133,1,0,0,java.util.HashMap,I am trying to get HashMap store a String and a ArrayList<String>.
26921133,1,0,0,java.util.HashMap,Does someone knows why the HashMap is not storing the key/values the way I want too?
26923577,2,0,0,java.util.HashMap,I'd say your easiest way is to create a class that extends your targetMap implementation (HashMap in this case).
26924628,1,0,6,java.util.HashMap,"Key is of type Integer, at insertion of 13th to 15th element HashMap capacity remains as 16 and threshold remains same as 12, why ?"
26924628,1,0,6,java.util.HashMap,"HashMap with key of type String - HashMap<String, String> or a custom class - Map<Employee,Integer> show expected behaviour at 13th insertion"
26927971,2,1,3,java.util.HashMap,Looks like this behaviour is due to change in internal implementation of HashMap PUT method in recent version of Java 7.
26927971,2,1,3,java.util.HashMap,"After going through source code of multiple versions, found an answer to my question HashMap put method calls addEntry() to add a new entry - code."
26927971,2,1,3,java.util.HashMap,jdk7-b147 HashMap.addEntry method looks like -  code.
26927971,2,1,3,java.util.HashMap,"So, in recent versions of Java, HashMap may not be resized based on threshold alone."
26927971,2,1,3,java.util.HashMap,"If bucket is empty entry would still go in without resizing HashMap Java 8 may have different behaviour, source code of version 8-b132 shows PUT is completely re implemented - code."
26925920,2,1,1,java.util.HashMap,"You are iterating only once on each value, and once on the values in the HashMap."
26925978,2,0,1,java.util.HashMap,To use a Hash collection you need to use HashSet is duplicates are ignored and HashMap if duplicates are not ignored.
26927426,2,0,1,java.util.HashMap,You can put it into HashMap and then just get it from there ;)
26927655,2,0,0,java.util.HashMap,"You're defining a property ext1 on a HashMap, which it doesn't have, so Hibernate will look for those properties."
26928282,1,0,0,java.util.HashMap,HashMap replaces entrys.
26928534,2,0,0,java.util.HashMap,"To ensure no new HashMap is assigned, in general one might start with a one-time initialisation."
26934315,1,0,0,java.util.HashMap,Access the inner most element of a hashmap of type HashMap> hyponyms;.
26939967,1,0,1,java.util.HashMap,How much memory (if it is) is used by HashMap on JUST declaration (like in code above)?
26940890,2,0,3,java.util.HashMap,You can replace your 2D array with a java.util.HashMap.
26948661,1,0,0,java.util.HashMap,Initialize a HashMap Variable in iReport.
26948661,1,0,0,java.util.HashMap,I read here: I want to use java.util.HashMap as variable in JasperReport these steps to set the variable properties: set the following properties on the variable: code.
26950218,1,0,0,java.util.HashMap,How can I extend HashMap with a specific class.
26951385,1,0,4,java.util.HashMap,"In Java, you import HashMap; and import ArrayList;, etc."
26951422,2,0,2,java.util.HashMap,"HashMap, ArrayList, etc are objects."
26954824,1,0,1,java.util.HashMap,I have also a class named Item.java to put it on the HashMap and put it to session to be able to use it on my next JSP.. here is my JSP that im trying to open  code.
26956171,1,0,0,java.util.HashMap,search string in HashMap combine ArrayList on android.
26956171,1,0,0,java.util.HashMap,"but after I use HashMap combine ArrayList, the indexOf function seems not working."
26956187,2,1,0,java.util.HashMap,Therefore you have no reason to expect that listItem.indexOf(word.text) would find it in a List that contains HashMap instances.
26956187,2,1,0,java.util.HashMap,It looks like you are storing word.text as one of the values of a HashMap stored in the list.
26956187,2,1,0,java.util.HashMap,"To search for a HashMap in the List that contains this value you have to iterate over all the Maps in the List, and for each Map, iterate over all its values."
26956187,2,1,0,java.util.HashMap,"Perhaps a better data structure would be HashMap<String,HashMap<String, Object>, where the key is taken from word.text and the value is the HashMap you currently store in the list."
26956721,2,1,1,java.util.HashMap,"These methods are private anyway, so it shouldn't matter to the user of the HashMap."
26959545,1,0,0,java.util.HashMap,Why does changing the hashcode of an object used as a key in a HashMap make a lookup return null?
26959657,2,1,3,java.util.HashMap,The HashMap class maps keys to values by running the hashCode of the key through a hash function.
26959572,2,0,1,java.util.HashMap,This is why the contract for HashMap specificaly states that you should not use keys whose hashCodes can change.
26961462,2,1,2,java.util.HashMap,"HashMap<String, Player> sorted structure for scoreboard (Player & score), e.g."
26963690,1,0,1,java.util.HashMap,Below is the relevant code of a HashMap data structure.
26965134,1,0,0,java.util.HashMap,Fixing a ClassCastExeption in a HashMap.
26968190,2,0,0,java.util.HashMap,The first version is faster and more compact if only because you're not redundantly accessing the HashMap more than once.
26966156,2,0,0,java.util.HashMap,"create method bound variable is create a reference to the HashMap value, then you use reference to de equeals, when you do end of the method, JVM will be callback all memory used by this method."
26971027,2,0,1,java.util.HashMap,"Try to use HashMap with floor as key and flat list as value : Note : Your Json response is invalid in some flat json object like when ""Floor plan"" not came in flat json after ""Flat_type"" (,) comma is invalid  code."
26970829,2,0,0,java.util.HashMap,"If your 'Floor' is unique, you can use HashMap."
26971174,1,0,1,java.util.HashMap,"In Java, I have a HashMap containing objects (which can be serializable, if it helps)."
26971174,1,0,1,java.util.HashMap,"Elsewhere on a network, I have another HashMap in another copy of the application that I would like to stay in sync with the first."
26976500,2,0,2,java.util.HashMap,"Not to my knowledge, but one may make ones life easier by extending from TreeMap or HashMap."
26977148,1,0,0,java.util.HashMap,"Why we can use, for example, HashMap which is implemented from Map?"
27073265,2,0,1,java.util.HashMap,"If it does, then the metadata fields I want are saved in a HashMap object, which is later persisted in the database."
26980773,1,0,0,java.util.HashMap,I need to put some data from HashMap into xml.
26996213,2,0,1,java.util.HashMap,"You are not measuring shift, but rather HashMap.put."
26983864,1,0,0,java.util.HashMap,I want to create a HashMap where each Key could have multiple Values.
26983973,2,1,3,java.util.HashMap,"You should use Map<K, List<V>> map = new HashMap<>(); Instead of map.put(k, v), you will do something like this: code."
26986587,1,0,6,java.util.HashMap,"Hi I'm wondering if it is possible to access the contents of a HashSet directly if you have the Hashcode for the object you're looking for, sort of like using the HashCode as a key in a HashMap."
26986587,1,0,6,java.util.HashMap,"The reason I was pretty reluctant to use a HashMap is because I would need to convert the primitive ints I'm mapping with to Integer objects as a HashMap only takes in objects as keys, and I'm also worried that this might affect performance."
26986754,2,0,2,java.util.HashMap,"HashSet is internally backed by a HashMap, which is unavailable through the public API unfortunately for this question."
26986777,2,0,0,java.util.HashMap,A typical implementation of HashSet uses a HashMap as its internal data structure.
26986777,2,0,0,java.util.HashMap,"The HashMap has an array, which is indexed by the key's hashcode mapped to an index in the array."
26989158,2,1,2,java.util.HashMap,The common implementation of HashSet is backed (rather lazily) by a HashMap so your effort to avoid HashMap is probably defeated.
26989158,2,1,2,java.util.HashMap,"On the basis that premature optimization is the root of all evil, I suggest you use a HashMap initially and if the boxing/unboxing overhead of int to and from Integer really is a problem you'll have to implement (or find) a handcrafted HashSet using primitive ints for comparison."
26987481,1,0,0,java.util.HashMap,"But in case of hashing(HashSet, HashMap etc), we need to override hashcode and equals method."
26987540,2,0,0,java.util.HashMap,"Both equals and hashcode is used to compare equality of objects, primarily inside hash based collections such as Hashtable and HashMap."
26994046,2,0,0,java.util.HashMap,"(Source wiki) But in case of hashing(HashSet, HashMap etc), we need to override hashcode and equals method Yes, until and unless you're using your class instance as a key in any map implemented classes."
26992795,2,0,0,java.util.HashMap,"For example if the ""code""-field is unique in each set, create a HashMap where the key refers to ""code"" and the value is the Equi referenct."
26992795,2,0,0,java.util.HashMap,You can then iterate over your States and query the HashMap for a matching Equi.
26992795,2,0,0,java.util.HashMap,You may also introduce a second HashMap with the occurValues as keys.
26993833,1,0,0,java.util.HashMap,"Should this HashMap contain the key ""myKey"" ?"
26994430,1,0,0,java.util.HashMap,I think that Loop inside the two collections and transform in HashMap is not performatic...
26999663,1,0,0,java.util.HashMap,HashMap initialization in java.
26999663,1,0,0,java.util.HashMap,I have a question about HashMap creation.
26999663,1,0,0,java.util.HashMap,Is there a simple and fast way of HashMap creation?
26999663,1,0,0,java.util.HashMap,"EDIT: And yes, I know how to initiate a HashMap."
27001901,2,1,2,java.util.HashMap,"A PROPERLY IMPLEMENTED two-way HashMap (In this case, a HashBiMap) indeed has a runtime complexity of O(1) for containsKey and containsValue."
27010799,1,0,0,java.util.HashMap,"To make it simple, assume that I'm storing the information in Plugin A's HashMap."
27012294,1,0,0,java.util.HashMap,Java get Array from HashMap.
27012294,1,0,0,java.util.HashMap,"I'm currently calling a service using XML-RPC and get a HashMap<Object, Object> response."
27015304,2,0,1,java.util.HashMap,Also note that you won't be incurring any overheads by doing so because a HashSet is implemented in terms of a HashMap in almost exactly the same way.
27025984,2,0,0,java.util.HashMap,The Java equivalent to this is a HashMap.
27030372,2,1,3,java.util.HashMap,I doubt HashMap is the data structure you may want to use in this case.
27031294,1,0,0,java.util.HashMap,HashMap sorting.
27031294,1,0,0,java.util.HashMap,"i.e If  HashMap={(it,2),(worst,1),(the,2),(of,2)} , The output should be::  code."
27032081,2,0,0,java.util.HashMap,"You doesn't need HashMap, take it easy."
27032130,2,0,0,java.util.HashMap,Update: Changed reference from HashMap to interface Map.
27037863,1,0,16,java.util.HashMap,"As far as I can tell, this is not due to the java.util.HashMap and java.util.ArrayList changes as results are the same when bootstrapping u40 with u25's HashMap and ArrayList classes and these changes are simply too minor for this kind of difference."
27037863,1,0,16,java.util.HashMap,"Nor is this related to the HashMap concurrency regression as the application is single threaded and the regression was fixed in u40.. Hotswap optimizations don't seem to be the issue either, as running with -Xbatch and -Xcomp produces the same results (assuming server compilation is the same between these JDKs)."
27040422,2,1,0,java.util.HashMap,"Map specification:  HashMap - simple key/value pairs, unsorted, can't find insert order LinekdHashMap - unsorted, but keeps insert order TreeMap - sorts keys, but can't find insert order"
27040304,1,0,0,java.util.HashMap,"and I'm keeping some available and selected subjects (List<String>) for each role in HashMap<String, List<String>>."
27041010,1,0,1,java.util.HashMap,"I can send the index fine and retrieve it from the HashMap, i know this because i use System.out.println to check."
27043615,2,1,1,java.util.HashMap,You can use a HashMap to store prime number power pairs code.
27044524,1,0,0,java.util.HashMap,For every map job I need to have a HashMap initialized for say  making a decision based on dictionary lookup.
27045038,1,0,1,java.util.HashMap,Would it be:  use a ConcurrentHashMap<> object create a normal HashMap<> object and wrap this in a Collections#unmodifiableMap call?
27045038,1,0,1,java.util.HashMap,Only retaining a reference to the unmodifiableMap and not the original HashMap<>.
27046368,1,0,0,java.util.HashMap,"If i use HashMap what can be the key  and value ,  I have designed all other classes and methods but cant able to find a way to solve time slot collision problem code."
27253823,2,1,2,java.util.HashMap,The HashMap stores the information I get from visiting AST code.
27057134,1,0,0,java.util.HashMap,A class that extends HashMap when adding new variable can't be write to json.
27057134,1,0,0,java.util.HashMap,ResultContentExt extends HashMap and has it's own variable testInt.
27069566,1,0,3,java.util.HashMap,ArrayList vs HashMap - Lots of Iterating and Object Manipulation.
27069566,1,0,3,java.util.HashMap,"I am aware that ArrayLists are much better with iteration, while object manipulation and duplicate checking is better handled by strictly using a HashMap."
27070745,1,0,0,java.util.HashMap,"I have a map like:  Map<String, MyMessage> map = new HashMap<String, MyMessage>();  After I do: code."
27071840,1,0,0,java.util.HashMap,"I currently have a class extending HashMap that holds the data, with a few extra methods for the data manipulation."
27071840,1,0,0,java.util.HashMap,My current method is to have another ini file mapped to another HashMap key-value pair that I translate the ini key names in.
27073907,2,1,1,java.util.HashMap,If you have a fixed set of fields an Object will be smaller than a HashMap.
27073907,2,1,1,java.util.HashMap,The HashMap has to store the keys as Strings for each instance.
27073907,2,1,1,java.util.HashMap,Accessing a HashMap requires computing the hash for the given field and then access an element in an array.
27075089,2,0,3,java.util.HashMap,"It is possible to get intermittent NPE's if you update a HashMap with one thread and read it with another, and you don't synchronize properly."
27074622,1,0,1,java.util.HashMap,I am having a problem showing my key and value from my HashMap in which the value is in User Defined Class here is the error that shows   Student.class: code.
27076604,1,0,2,java.util.HashMap,"Currently I have hashmap of this type  private HashMap<String, ArrayList<allProperty>> fData; So The data is coming from server in every 5 second."
27076815,2,1,2,java.util.HashMap,So you can call .add on this object and it will be updated in HashMap Try this: code.
27078047,1,0,0,java.util.HashMap,"Everybody knows that it's better to use an immutable class as key in HashMap, and if we change object state then the JVM recalculates the hash code for that object."
27078092,2,0,0,java.util.HashMap,"If you use an object of the following class in a HashMap, and call setState while it's in the map, you will have problems."
27079668,1,0,0,java.util.HashMap,"tags is an ArrayList of Tag objects, tagsMap is a HashMap of the type HashMap(String, Tag)."
27081127,1,0,0,java.util.HashMap,HashMap with double as key.
27081127,1,0,0,java.util.HashMap,I found this post on stackoverflow that Double in HashMap states:  I was thinking of using a Double as the key to a HashMap but I know floating point comparisons are unsafe  But I can't really find out why it is unsafe to use doubles as key in your hashmap.
27083382,2,0,0,java.util.HashMap,"Although, in case of Hashtable you probably want to use the newer HashMap instead."
27084510,2,0,0,java.util.HashMap,"If you know, or can estimate, the number of unique words then you should use this number in the HashMap constructor (so you don't grow the map many times)."
27084510,2,0,0,java.util.HashMap,"If you use a HashMap, you can achieve a runtime that grows linearly with N (you save yourself the factor of logN)."
27085327,1,0,2,java.util.HashMap,"I originally used a HashMap<Point,Pointable> to correlate each Point to a Pointable, which was able to quickly able to access the answer in O(n) time."
27085327,1,0,2,java.util.HashMap,"However, it is now necessary to recalculate the HashMap multiple times in the generation of a level."
27085327,1,0,2,java.util.HashMap,"At this point, is it still more efficient to use the HashMap (in consideration of generation and access) or should another method be used, such as a set of 2-D interval trees?"
27097913,2,1,1,java.util.HashMap,"At this point, is it still more efficient to use the HashMap (in consideration of generation and access) or should another method be used, such as a set of 2-D interval trees?"
27097913,2,1,1,java.util.HashMap,"With a few points, the HashMap wins in a typical scenario, with thousands of them, the overhead of updating the points dominates."
27097913,2,1,1,java.util.HashMap,"If so, then it'll be surely way faster then the HashMap, especially for updating (unless it gets really huge)."
27097913,2,1,1,java.util.HashMap,"Your linking from Point to Room is external, but this hardly changes anything (except for keeping Point smaller and possibly cleaner and adding the tiny overhead of a HashMap to each access)."
27086986,1,0,0,java.util.HashMap,"The code is designed in such a way that a particular function takes name of one entity, downloads its resource page, then processes it to mine some attributes and puts them in a global HashMap."
27087584,2,0,0,java.util.HashMap,because you have created  Map map1 = new HashMap(); can be of any type(not just string) so java is not allowing you to downcast it.
27093598,2,0,1,java.util.HashMap,"Then the main GUI could hold a collection of these, perhaps an array or an ArrayList or a HashMap, all depending on how you'd want to access your buttons."
27094247,1,0,0,java.util.HashMap,I have several threads trying to increment a counter for a certain key in a not thread-safe custom data structure (which you can image to be similiar to a HashMap).
27098451,2,0,1,java.util.HashMap,"You can use a HashMap<Character, List<String>> to store your lists with a character key."
27104259,1,0,3,java.util.HashMap,How come my HashMap have a duplicate key?
27104259,1,0,3,java.util.HashMap,"We have a class named Subscriber, that extends ""HashMap""."
27104259,1,0,3,java.util.HashMap,"Our program is updating the ""status"" value by calling a method on the Subscriber, that does a simple put to the HashMap."
27104259,1,0,3,java.util.HashMap,"Our program can be running for multiple days (weeks) without any issues, but some times we have seen strange behaviour in some other parts of the system, that uses data from the HashMap."
27104781,2,0,1,java.util.HashMap,Although this may not be the problem you are facing (a multi-threading issue is much more likely) this is a real answer to the question How come my HashMap have a duplicate key?.
27115145,2,0,0,java.util.HashMap,Used HashMap for storing param + name and parsed it by using .split.
27107875,2,0,0,java.util.HashMap,Create HashMap with Key as Long and value as List<String>.
27107875,2,0,0,java.util.HashMap,"Use put method of HashMap, as below."
27113045,1,0,1,java.util.HashMap,//where locksMap is a HashMap with key String (tableName) and value ReentrantReadWriteLock (Lock).
27124328,2,1,0,java.util.HashMap,"Although we can search every time from root using depth-first or breadth-first approach, it would be far more effective to store added nodes in HashMap, especially if our menu structure is large."
27128247,1,0,0,java.util.HashMap,HashMap Duplicate Values - Identify the duplicates.
27128247,1,0,0,java.util.HashMap,I understand that HashMap doesn't allow insertion of duplicate values and it replaces the last duplicate value with the latest entry.
27128324,2,1,1,java.util.HashMap,Assuming the value of your HashMap is of type String : code.
27128353,2,0,2,java.util.HashMap,"Well, the answer can be found in the API description of HashMap: The put method returns the value that was previously associated with the key."
27128416,2,0,1,java.util.HashMap,Override the HashMap this is an example code.
27128286,2,0,3,java.util.HashMap,"HashMap does not support duplicate keys, which are hashed."
27128286,2,0,3,java.util.HashMap,"According to the HashMap implementation of Map's public V put(K key, V value);, the method put will return the original value for a given key if any, or null."
27132289,2,1,1,java.util.HashMap,"Next, you'll want to extend HashMap and override the entrySet() method to return the entry set sorted by keys descending."
27130872,1,0,0,java.util.HashMap,"I am using a number of variables to this XSLT as a Map called 'data'(Map<String, Object> data = new HashMap<String, Object>();) ."
27134163,1,0,0,java.util.HashMap,Javafx TreeTableView with HashMap values.
27136712,2,1,2,java.util.HashMap,I don't think it's valid to store an ArrayList in a HashMap where a String is expected.
27136712,2,1,2,java.util.HashMap,"I would've said that that code should fail, but I guess it must be succeeding, since it's not failing for you, and so what I'm assuming is happening is that when you insert it into the HashMap Java is actually calling toString() on it behind the scenes to cast it to String."
27136712,2,1,2,java.util.HashMap,So the value sitting in the HashMap is not actually an array; it was a string from the moment it was inserted.
27138574,2,1,4,java.util.HashMap,If you want to place constraints on your HashMap type you will have to express those constraints in the form of generic type parameters.
27140827,2,1,0,java.util.HashMap,"Then on the outer class you keep track of what's happening on the HashMap(which may be redundant, but good to have for another thing) Another solution would be the ArrayList placeholder to be of the type ""Person"" or ""Node""."
27140644,2,0,0,java.util.HashMap,Make a HashMap that maps canonical words to lists of words.
27140717,1,0,0,java.util.HashMap,There are about 1000 items in the HashMap and I want the computation to be as fast as possible.
27140750,2,0,0,java.util.HashMap,"You could technically use int[] as a key in a HashMap in Java (you can use any kind of Object), but that won't work well, as arrays don't define a useful hashCode method (or a useful equals method)."
27141023,2,0,0,java.util.HashMap,hashmap functions can be found in  https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Creating a hashmap is easy.. it goes as   code.
27141685,1,0,0,java.util.HashMap,"The second section is my room class, Implement a class to maintain information about a room including: a description of the room (String), an item (Item) and a list of all adjacent Rooms (HashMap)."
27141726,2,0,2,java.util.HashMap,Maybe you can use a HashMap Example: code.
27142974,2,1,2,java.util.HashMap,"If we take, for example, HashMap of Java, it uses the hashCode() of the key and applies a supplemental hash function on it (to defend against poor quality hash functions)."
27142974,2,1,2,java.util.HashMap,"Therefore, even if the hash function would return a unique value for each key (which it is not required to), HashMap would still normalize that value to a much smaller index of the storage of the HashMap."
27143444,1,0,2,java.util.HashMap,HashMap throws ConcurrentModification even if using iterator.remove() to remove node.
27143444,1,0,2,java.util.HashMap,I've got a ConcurrentModificationException when operating a HashMap.
27143444,1,0,2,java.util.HashMap,I've reviewed the relevant method in HashMap.
27145425,2,0,1,java.util.HashMap,"And remember a HashMap can only store one object for a given key, so no need to iterate over all values."
27147325,1,0,1,java.util.HashMap,Java HashMap return value not confirming with my understanding of equals and hashcode.
27147564,2,0,0,java.util.HashMap,The java.util.HashMap implementation does not replace the existing key when it is equal to the key supplied in the put() call.
27147405,2,1,2,java.util.HashMap,"The key wasn't replaced since as far as HashMap is concerned, e and e2 are identical."
27147410,2,0,2,java.util.HashMap,The Javadocs for HashMap state for the put method:  Associates the specified value with the specified key in this map.
27149085,1,0,2,java.util.HashMap,In both cases I can use a HashMap instead of an ArrayList.
27149685,2,0,3,java.util.HashMap,"If you want to check if there is the word in any LinkedList in the HashMap, you should do something like : code."
27150066,1,0,0,java.util.HashMap,"When i study HashMap source code, i found the HashMap class have many static variable, sush as: code."
27150134,2,1,0,java.util.HashMap,"However, as some people have pointed out, in this particular case you shouldn't need to care about the fields (perhaps unless you are extending HashMap for an own implementation)."
27151796,2,0,0,java.util.HashMap,one another possible solution is to use a HashMap like this to name the ArrayLists: code.
27153564,1,0,0,java.util.HashMap,Annotation to add the latest field value into HashMap.
27153564,1,0,0,java.util.HashMap,"I would like to write Annotation in Java, to keep the value of given field in HashMap."
27153564,1,0,0,java.util.HashMap,"For example, using @Keepdata (Keepdata is an annotation) on specified field will store the latest value of the field value in the HashMap."
27154508,1,0,6,java.util.HashMap,Statistics for java HashMap.
27154508,1,0,6,java.util.HashMap,During the lifecycle of a Java HashMap is there a way to determine how many collisions/chaining occured.
27154508,1,0,6,java.util.HashMap,How many times the HashMap was resized and how long each resize event took?
27154508,1,0,6,java.util.HashMap,"I checked source code for HashMap(1.6), and it looks like it can be extended to add the above functionality to it."
27157297,2,0,0,java.util.HashMap,That's a better solution than extending HashMap as you keep using the real classes your current application is using and thus don't have any side effects.
27157269,2,0,0,java.util.HashMap,"Instead of using a 2D array, I'd recommend using another data structure like HashMap, or HashTable: https://docs.oracle.com/javase/7/docs/api/java/util/Hashtable.html."
27157161,2,1,2,java.util.HashMap,"It would be just one iteration by using HashMap ...  Algo 1) traverse each row of 2D array 2) myHashMap.add(arr[i][1], arr[i][0]) // add(key,value) 3) repeat"
27157596,1,0,0,java.util.HashMap,"I have a HashMap<String, String> with their name and description Somewhat follow up from: Throw Exception or prevent it?"
27158140,1,0,0,java.util.HashMap,"I'm having trouble mapping the data into groupCache, let alone building the personCache Note there are two ""layers"" of HashMap."
27158140,1,0,0,java.util.HashMap,So I need to have HashMap to keep track of these arrays of numbers locally and need to update my array list as frequency as I can.
27158955,2,1,2,java.util.HashMap,(*)  You should also forget Hashtable and use HashMap instead.
27161164,2,0,2,java.util.HashMap,"In the GUI portion of my program, I would associate a BufferedImage with each Planet, probably using a HashMap<Plant, Image>."
27164316,1,0,0,java.util.HashMap,Android Spreadsheet data into ArrayList HashMap populate ListView.
27164316,1,0,0,java.util.HashMap,"I have a public google spreadsheet that I am pulling data from and loading into an  ArrayList < HashMap < String, String > >  then I am trying to populate it into a custom ListView."
27164316,1,0,0,java.util.HashMap,In my getView() I've been trying to iterate through the HashMap and populate the listview.
27164316,1,0,0,java.util.HashMap,This is the code I am using to pull individual Rows from the spread sheet and put it into a HashMap: code.
27166577,2,0,1,java.util.HashMap,Define custom HashMap with char as key and int as value : code.
27168330,1,0,0,java.util.HashMap,"Referred http://examples.javacodegeeks.com/java-basics/exceptions/java-util-concurrentmodificationexception-how-to-handle-concurrent-modification-exception/ http://www.journaldev.com/378/how-to-avoid-concurrentmodificationexception-when-using-an-iterator How to avoid HashMap ""ConcurrentModificationException"" while manipulating `values()` and `put()` in concurrent threads?"
27169951,2,0,1,java.util.HashMap,"Depending on your usage patterns and performance requirements, you could also build a copy-on-write map using a volatile HashMap delegate."
27168461,2,1,1,java.util.HashMap,HashMap is not thread safe.
27172322,1,0,0,java.util.HashMap,Find If HashMap contains a value or not and delete that value only.
27172322,1,0,0,java.util.HashMap,At first the HashMap would be looking like: code.
27172322,1,0,0,java.util.HashMap,"Now I want to find the value ""B"" in HashMap and want to delete this value from arraylist which is present in hashmap."
27173897,1,0,0,java.util.HashMap,I have created a HashSet and a HashMap and I am currently unsure as to whether I need to now declare a constructor.
27178593,1,0,1,java.util.HashMap,"I'm doing a batch insert with hibernate, everything is ok with it, its configured as it should, its batching insert, i checked on mysql log to see the instructions, but the problem is, even after i flush the session, it doesn't release the memory, just a little, i used a profile to check and all the memory is being hold by a HashMap, even after i clear this hash map."
27180063,2,1,2,java.util.HashMap,"Couple more points:  If you do not need to store the elements in the order they were added, use HashMap rather than LinkedHashMap, since former is faster."
27180063,2,1,2,java.util.HashMap,"When you create instance of container in Java, you are better off using interface (like Map, List or Set) in the left part of assignment and implementation (like HashMap, ArrayList etc.)"
27180063,2,1,2,java.util.HashMap,"use HashMap instead of LinkedHashMap as I suggested above), you only need to change one line of your code where you create this container, rather than change all places where this container is used."
27185523,1,0,0,java.util.HashMap,Performance issues when HashMap is used as Cache.
27185523,1,0,0,java.util.HashMap,"Case 1 : One HashMap with 1,00,000 entries  Case 2 : Two HashMaps with 50,000 entries each."
27185523,1,0,0,java.util.HashMap,Is it feasible to replace one HashMap of large number of entries with two HashMaps of lesser number of entries?
27186989,2,0,0,java.util.HashMap,here is some heads up on hash map:  Don't use too complex objects as key (in my opinion using object string as key is as far as you should go for HashMap.
27185799,2,0,2,java.util.HashMap,"The memory requirements should be similar for the two cases (since the HashMap storage is an array of Entries whose size is the capacity of the map, so two arrays of 50K would take the same space as one array of 100K)."
27185799,2,0,2,java.util.HashMap,"Therefore, I would suggest using a single HashMap."
27186063,2,0,1,java.util.HashMap,"The performance difference between using one or two HashMaps should not matter much, so go for the simpler solution, the single HashMap."
27186063,2,0,1,java.util.HashMap,"Often, using a HashMap as a cache is a bad idea, because it keeps a reference to the cached objects alive, thus basically disabling garbage collection."
27187348,2,0,2,java.util.HashMap,"One is the ability to properly use objects in hash-based data structures, i.e. as value in a HashSet or a key in a HashMap."
27187118,2,0,0,java.util.HashMap,"Create HashMap, put to this map all chars from first word with zero value."
27187849,1,0,0,java.util.HashMap,"We check if the property is NOT a SoapObject (which means it has a simple String name and a String value), in which case we simply put the name and value into a HashMap as a key-value pair."
27187849,1,0,0,java.util.HashMap,"PROBLEMS:  Now, the problem is that the HashMap the method returns is created inside this method, so each time the method is recursively called, the HashMap is recreated and the previous data is lost."
27187849,1,0,0,java.util.HashMap,"Even if I create the HashMap outside this method and simple write data to it from the method, the problem will be that there will be no distinction as in which name value pairs have come from which level of nesting (e.g."
27187849,1,0,0,java.util.HashMap,"will be stored like HashMap = {id=>25323205, name=>Cric, version=>1.0, id=>445}."
27192663,2,0,6,java.util.HashMap,HashMap should be used.
27192663,2,0,6,java.util.HashMap,"when you put ""cloth"" into HashMap as a value, it is not duplicated in memory."
27192663,2,0,6,java.util.HashMap,just reference is written into HashMap.
27193682,2,0,0,java.util.HashMap,"Another (probably better) way could be to store all of your variables in a HashMap < Object, String >."
27193682,2,0,0,java.util.HashMap,"So you would add all of your objects to this HashMap with a string that is the same as its variable name, then in your other method call the hashmap's get(Object key) method to find the string that goes with each object."
27193550,1,0,4,java.util.HashMap,"If, for example, I change the converter to accept HashMap and pass a HashMap as the source, then it works."
27199140,2,1,2,java.util.HashMap,"the camel-jdbc component expects SQL text, so the body should contain an insert statement... so, you need to parse the results from your select stmt which returns ArrayList<HashMap<String, Object>>...the split() gets you to HashMap<String, Object>, so you can extract those map values using camel-simple... something like this... code."
27198642,2,0,1,java.util.HashMap,It is true that HashMap doesn't preserve insertion order.
27198700,2,0,0,java.util.HashMap,You can copy the entries from the HashMap to a collection that preserves order (like a List) and then sort them based on the keys (in reverse order).
27198732,2,1,2,java.util.HashMap,"Yes, via a Map<String, SomeType> such as a HashMap<String, SomeType>."
27201344,2,0,0,java.util.HashMap,"If you're worried about the cost of String comparison, you could create a HashMap of fieldNames to fieldIntegers somewhere and convert the ArrayList of  Strings to an ArrayList of Integers at the start of the checking method, which would save you most of the String comparison penalty."
27204250,1,0,1,java.util.HashMap,Transform HashMap to HashMap>().
27204250,1,0,1,java.util.HashMap,"Is it possible to transform this HashMap<String, String> contact to HashMap<String, List<String>>() contact?"
27204889,2,1,2,java.util.HashMap,"The safest is to create a new HashMap when one does not exist for the ""H"" key, instead of using t."
27204792,1,0,1,java.util.HashMap,Sort HashMap of ArrayList Based on ArrayList5 Size.
27204792,1,0,1,java.util.HashMap,"I need to return the keys of my HashMap, based on the size of the corresponding value's ArrayList."
27210096,1,0,0,java.util.HashMap,Java HashMap returning null when object and value are present.
27210096,1,0,0,java.util.HashMap,I am trying to get a Point2D.Double out of a HashMap for a java game.
27210762,2,0,0,java.util.HashMap,"So for example, even though you could argue that all the of those collections would have a deterministic iteration order provided that they are not mutated between repeated iterations, because you think it would not make sense to implement it that way, the only real answer strictly adhering to the Java API Specification would be all except HashMap and HashTable."
27210762,2,0,0,java.util.HashMap,"The reason for answering this is that of all of them, according to the Java API Specification, the only classes that give no guarantee on the iteration order are those two I mentioned (HashMap and HashTable)."
27211398,2,1,1,java.util.HashMap,"I suggest you use a HashMap<String, String> instead of Hashtable<String, String> and program to the Map<String,String> interface, I would also suggest you use try-with-resources, finally make sure to store something in your Collection before you serialize it."
27211582,1,0,0,java.util.HashMap,Why can I not create a HashMap with 'long' types in Java?
27211597,2,1,3,java.util.HashMap,"you're using primitives rewrite to HashMap<Long,Long> x = new HashMap<>()"
27211625,2,0,3,java.util.HashMap,"In Java, types with generic type parameters, such as HashMap, only accept types that inherit from Object."
27211625,2,0,3,java.util.HashMap,"long does not inherit from Object, so you can't use it with HashMap."
27221762,2,0,0,java.util.HashMap,You can do something different using HashMap.
27221658,2,1,4,java.util.HashMap,"Here an object can be associated with a String by means of a Map such as a HashMap<String, String> which is similar to an array or ArrayList that uses a String as its index rather than a number."
27229496,1,0,0,java.util.HashMap,Why does Java HashMap contain null values in the debug view.
27229496,1,0,0,java.util.HashMap,"I got a HashMap<Integer, Set<Term>> (Term is a class which only contains a String) the normal toString() shows this:   When I click the table property of the HashMap I get this:  My Question now, why are there null values in the table toString() ?"
27229566,2,0,2,java.util.HashMap,Think of this as a growth reserve the HashMap automatically creates for you.
27229566,2,0,2,java.util.HashMap,Read more: https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
27229594,2,0,2,java.util.HashMap,The HashMap stores its entries in a hashtable.
27229594,2,0,2,java.util.HashMap,You lose all advantages of the HashMap if collisions are too frequent.
27229594,2,0,2,java.util.HashMap,"Too full, and your HashMap would be no better than a LinkedList (yes, LinkedList, not ArrayList)."
27229601,2,0,1,java.util.HashMap,The HashMap uses internally an array to store the entries.
27229601,2,0,1,java.util.HashMap,"This internal array is typically larger than the number of elements you store in the HashMap -- otherwise, the array would have to be resized every time you add an element to it."
27229612,2,1,2,java.util.HashMap,HashMap is a Map implementation that's crucial feature is constant time O(1) lookup.
27229612,2,1,2,java.util.HashMap,When you initialise the HashMap it's creating a fixed length array that it will expand when your entries exceed the current array's size.
27229612,2,1,2,java.util.HashMap,"Edit: @kutschkem has pointed out that java.util.HashMap expands its fixed length array when the number of entries is around 80% of the current array's size, rather than when the entries exceed the current array's size."
27229618,2,0,1,java.util.HashMap,The toString() function provided doesn't skip over them because seeing them was useful to the folds debugging the HashMap implementation.
27229618,2,0,1,java.util.HashMap,"If you want to see the contents without the nulls, you'll have to write your own display function, either by subclassing HashMap and overriding toString() or by providing a convenience function somewhere in your code."
27230539,1,0,0,java.util.HashMap,"However, I have the problem that at some point the RAM is not enough because the HashMap has too many entries."
27230651,1,0,0,java.util.HashMap,JavaFX fill 1 column with data of HashMap.
27230651,1,0,0,java.util.HashMap,I'm trying to fill a TableView with data of a HashMap(just the value not the key).
27231864,2,1,6,java.util.HashMap,"You'll notice that it compiles, even though HashMap<Number, String> is not a type that is assignable to Map<String, JComponent>."
27230938,1,0,0,java.util.HashMap,Why HashMap insert new Node on index (n - 1) & hash?
27230938,1,0,0,java.util.HashMap,"Why HashMap insert new Node on the index: tab[(n - 1) & hash] Where hash = key.hashCode() ^ key.hashCode() >>> 16 And n = tab.length of array of Node<K,V>."
27230938,1,0,0,java.util.HashMap,Why HashMap not put the Node just like that: tab[hash] ?
27234137,2,0,5,java.util.HashMap,The code is not correct due to the fact that the read from the HashMap is not guarded by any lock.
27237854,1,0,0,java.util.HashMap,It appears that the Stripes Framework ValidationErrors object is based on a HashMap.
27238166,2,0,0,java.util.HashMap,If you do this alot for specific objects it might be easier to use a HashMap so you don't have to iterate through the list to grab a specific named Object.
27238487,2,0,0,java.util.HashMap,"Instead, if you want to index and look up elements by a certain attribute such as the name, use a HashMap<Name, YourType> to find them."
27238487,2,0,0,java.util.HashMap,"You can then use a HashSet to look for reference equality, and a HashMap or TreeSet to index them by any specific attributes."
27238427,2,0,1,java.util.HashMap,"I suggest checking out JDK's own code for HashMap, specifically the resize method and these lines: code."
27239456,1,0,0,java.util.HashMap,Have a look:   I found that the initialization of the mModified HashMap inside the SharedPreferences editor class had an error - it was highlighted red in intellij (Their are actually alot of errors showing up in Intellij).
27240082,1,0,0,java.util.HashMap,i assume not because other ways the HashMap store won't be storing all the values... please someone explain to me how and why that piece of code works...
27240192,1,0,0,java.util.HashMap,How can I make the icon to get an image from res/drawable... depending on the type (ListData[i][2] inserted in the HashMap)?
27241181,2,1,2,java.util.HashMap,"First thing you need to understand, there is no such thing as ""first"" value in HashMap."
27242832,2,0,0,java.util.HashMap,char ch[] = s.toCharArray();         Map map = new HashMap(); code.
27246748,1,0,0,java.util.HashMap,This is the code that parses the incoming data into a HashMap where field names are mapped to their respective values.
27249328,2,0,0,java.util.HashMap,"This is a little unclear, but I think what you're looking for is a HashMap."
27249328,2,0,0,java.util.HashMap,"If the idea is to put the names and times into a data structure so that you can later search by name, then you want a HashMap<String,String> map, and then code."
27251480,1,0,5,java.util.HashMap,Why is the initial capacity in HashMap 16 (power of two) and the initial capacity of Hashtable 11(prime number)?
27251577,2,0,5,java.util.HashMap,"For HashMap, the index in the array that stores the entries of the Map is calculated this way (where h is calculated from  the hashCode of the key): code."
27251922,1,0,0,java.util.HashMap,I create Index with HashMap based on following code and I want to use this idea to implement the index with lucene.
27251922,1,0,0,java.util.HashMap,The HashMap is fill by calling following method: code.
27251922,1,0,0,java.util.HashMap,Then I convert this implementation in way so I can use Lucene instead of HashMap.
27253165,2,0,0,java.util.HashMap,"I would work with a HashMap, whereas the meaning is element -> count!"
27254436,2,0,0,java.util.HashMap,"If you want to insert Strings into the HashMap, define it as follow: code."
27254468,2,0,1,java.util.HashMap,You have a HashMap that maps String to ArrayList<String>.
27254468,2,0,1,java.util.HashMap,"Based on your example behavior, you want a HashMap that maps String to String (i.e. put(""001"", ""DM""); Now, assuming you have that: code."
27263346,2,1,1,java.util.HashMap,"Which means that if you have specified a variable inside of your Mapper/Reducer class, like from your example myHashMap will be accessible from with in it's own JVM i.e. for example if your job requires 10 Reducers then each Reducer instance will create it's own HashMap."
27263346,2,1,1,java.util.HashMap,"To further clarify, reduce() method is not a concurrent method but rather will be executed sequentially in a single Reducer JVM instance so your HashMap will not be accessed concurrently."
27281511,2,1,2,java.util.HashMap,"On the other hand, using @Singleton DAOs means you have to access the EntityManager through a Provider in every method, which involves looking up the EntityManager in a HashMap in a ThreadLocal somewhere."
27273853,1,0,0,java.util.HashMap,"I use : Map<String, AttributeValue> item = new HashMap<String, AttributeValue>();  ArrayList<Map<String,AttributeValue>> maps = new ArrayList<Map<String,AttributeValue>>(); I use CSVReader to reading file and store values in ListOfMap code."
27273946,2,0,0,java.util.HashMap,You'll have to instantiate a new HashMap() instead of calling clear() on the existing one.
27273946,2,0,0,java.util.HashMap,"Otherwise you'll simply clear the HashMap inside of the List as well, because they refer to the same object."
27274612,1,0,0,java.util.HashMap,the modedHash class extends HashMap which is used to compare the actual values keys.The getDuplcate method checks the List and output only duplicates.
27277197,2,0,2,java.util.HashMap,"An obvious solution is to use a HashMap<String, Account> map."
27277197,2,0,2,java.util.HashMap,"check this: https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html Then to get Account1 you do: map.get(""Account1"");"
27280724,1,0,0,java.util.HashMap,This loads 2 navigation links from the constructor into the HashMap.
27282351,1,0,0,java.util.HashMap,"i have a jscrollpanel and a jList on it and i am filling a ArrayList<HashMap<String, String>> with content."
27282351,1,0,0,java.util.HashMap,"thanks and regards UPDATE i am sorry when i was not clear enough:  i think my problem is too simple so i will explain it the most simple way: i have an object: ArrayList<HashMap<String, String>> and i am filling it with data."
27282351,1,0,0,java.util.HashMap,"i want to reuse the object i created, because i dont want to re-execute the method i was using for the creation of the ArrayList<HashMap<String, String>> object."
27282657,2,1,1,java.util.HashMap,where borrowersMap is a HashMap code.
27288951,2,0,0,java.util.HashMap,The HashMap will have string as the key and arraylist as the value.
27290079,1,0,0,java.util.HashMap,"This is perfectly doable in a simple HashMap<INPUTTYPE, OUTPUTTYPE>, but hash logic is pointless, since i'm going to iterate on all values, and never search in the map, while it would be nice to keep the order of the test cases (pairs of (input, expected))."
27291224,2,1,0,java.util.HashMap,Use Reflection is better but also u can use of Hashmap Use OF HashMap  code.
27291061,1,0,1,java.util.HashMap,Convert a ResultSet into List of HashMap in java.
27291061,1,0,1,java.util.HashMap,"I have a resultset (returned by a stored procedure) like -  I need a List of HashMap, and HashMap will be made of individual (distinct by combination of FirstName, LastName and Id)  students records."
27291061,1,0,1,java.util.HashMap,Below image will describe the structure of HashMap.
27291061,1,0,1,java.util.HashMap,"So, basically in this example, I need a list of 3 HashMap."
27291061,1,0,1,java.util.HashMap,List of HashMap is the best way I can think of for required XML structure.
27291061,1,0,1,java.util.HashMap,"[Update]: I think I should use list of Objects, not list of HashMap."
27292952,2,1,1,java.util.HashMap,"You don't need a HashMap and/or a List of HashMap to create a xml file You can do this easily with JAXB, provided you create the correct data objects."
27294761,1,0,2,java.util.HashMap,"HashMap internally uses Node array vs Hashtable internally uses Map.Entry array, Why is this internal difference?"
27294761,1,0,2,java.util.HashMap,"HashMap internally uses Node<K, V> array vs Hashtable internally uses Map.Entry<K, V> array,  Why  this internal difference: HashMap is using Node inner class with Map.Entry implementation."
27294761,1,0,2,java.util.HashMap,"Is there any specific reason to use HashMap is using Node<K,V> array instead of Map.Entry<K,V> array ?"
27296746,2,0,0,java.util.HashMap,"HashTable, which precedes HashMap provides a private class implementation of it, which is only accessible inside the HashTable class."
27296746,2,0,0,java.util.HashMap,"Therefore, it would have been impossible to use it in HashMap."
27301429,1,0,0,java.util.HashMap,"ArrayList to HashMap with (key, Array)."
27301429,1,0,0,java.util.HashMap,"Okay, so I have seen a lot of questions on this topic, to convert an ArrayList to a HashMap where the value is not an array."
27303510,2,0,0,java.util.HashMap,A better approach might be to create a HashMap from each string with each letter as the key and the number of times it occurs as the value.
27304065,2,0,1,java.util.HashMap,"ArrayListMultimap uses a HashMap<K, Collection<V>> as implementation of the backing Map<K, Collection<V>>: code."
27304065,2,0,1,java.util.HashMap,And HashMap doesn't preserve the order of the insertion of the elements.
27553067,2,1,2,java.util.HashMap,"You can change your resultList to an ArrayList<HashMap<String, String>>, so that you can store both the place id and the description."
27553067,2,1,2,java.util.HashMap,"Also change your public class PlacesAutoCompleteAdapter extends ArrayAdapter<String> to public class PlacesAutoCompleteAdapter extends ArrayAdapter<HashMap<String, String>> In addition, change your  code."
27305818,1,0,1,java.util.HashMap,Sorting a HashMap based on an index in an ArrayList using a generic function.
27305818,1,0,1,java.util.HashMap,So I'm trying to sort a HashMap that contains the person's name (key) and their age and height in cm.
27305818,1,0,1,java.util.HashMap,The HashMap is set up like this: code.
27319240,1,0,0,java.util.HashMap,HashMap with incorrect equals and HashCode implementation.
27319240,1,0,0,java.util.HashMap,HashMap get(Key k) method calls hashCode method on the key   object and applies returned hashValue to its own static hash   function to find a bucket location(backing array) where keys and   values are stored in form of a nested class called Entry (Map.Entry).
27319240,1,0,0,java.util.HashMap,HashMap's internal hash Method defends against poor quality hash   functions.
27319240,1,0,0,java.util.HashMap,"In this case, the hash method of the HashMap,  code."
27319706,2,0,0,java.util.HashMap,"The HashMap works like this: 1) Index of table cell in which (Key,Value) will save calculates as key.hashCode();  2) Keys in HashMap compare by equals() or by reference comparing."
27319706,2,0,0,java.util.HashMap,"So, in your situation all pairs of (K,V) will store in one cell of HashMap table as LinkedList."
27319281,2,1,2,java.util.HashMap,HashMap has a little trick where it compares object references before using equals.
27319281,2,1,2,java.util.HashMap,"Since you're using the same object references for adding the elements and for retrieving them, HashMap will return them correctly."
27319281,2,1,2,java.util.HashMap,See Java 7 source here (Java 8 did a pretty big revamp of HashMap but it does something similar) code.
27321217,2,0,2,java.util.HashMap,"Note that even with HashMap, keySet() will return Set but toArray() will still be Object[] and therefore needs to be casted: code."
27325107,2,1,0,java.util.HashMap,"As Hristo said, you should use a HashMap code."
27324718,1,0,0,java.util.HashMap,Logger in HashMap.
27324718,1,0,0,java.util.HashMap,"My problem is when I do some extress test sending a lot of requests to the server, I printed the count variable in every request, which is expected to have the value of 1 but instead of that is getting the value of 2 and 2 files with the name mylog_{id}.log, mylog_{id}.log.1 Is posibble that loggerMap is empty before create the first Logger and assigning to the HashMap and another thread is getting false in  LoggerLocator.loggerMap.containsKey(id)?"
27325105,2,0,0,java.util.HashMap,Create a HashMap code.
27325898,2,0,0,java.util.HashMap,Here is some code that uses a HashMap to store the IPs and a regex to match them in each line.
27325669,2,0,1,java.util.HashMap,The key word to search for is HashMap in this case.
27325669,2,0,1,java.util.HashMap,A HashMap is a list of key value pairs (in this case pairs of ips and their count).
27327775,2,0,0,java.util.HashMap,"Then when you need to translate from one to the other, split up the words in the sentence, and for each word, check the appropriate dictionary/HashMap."
27329069,2,0,1,java.util.HashMap,"When you define a subclass of HashMap, you prevent the JIT compiler from optimizing away the dispatching on certain method calls in certain situations."
27332632,2,0,0,java.util.HashMap,How about creating a second TreeMap or HashMap code.
27333292,1,0,0,java.util.HashMap,"I am creating a HashMap, putting some values more in  my original code."
27333655,2,1,0,java.util.HashMap,"Use a cast, use intent.putExtra((Serializable) sonucList); Use a specific class, declared it like this: ArrayList<HashMap<String, Object>> sonucList = ...; Create a type parameter that implements both, List and Serializable, i.e. <SerializableList extends List & Serializable>, and use SerialiableList instead of List."
27333385,1,0,1,java.util.HashMap,I would like to sort my HashMap (or TreeMap) by values.
27333385,1,0,1,java.util.HashMap,However whenever I put in all my entries from the HashMap again I get duplicates.
27333766,2,0,0,java.util.HashMap,I'm on mobile and I do think you are only asking for some advice/buzzwords to get a hang on.. Store the bullet points in a HashMap  You could have multiple levels of items in that HashMap .
27334494,1,0,1,java.util.HashMap,Space Complexity of HashMap when iterating over an Array in linear time.
27334607,2,1,2,java.util.HashMap,Your loop adds at most n-1 key/value pairs to the HashMap.
27334607,2,1,2,java.util.HashMap,"Therefore, the space complexity is O(n), since the HashMap internal storage consists of an array whose size would reach a power of 2 close to n (assuming you didn't give the HashMap an initial capacity that is much larger than n), and each element of the array is a linked list with an O(1) average number of elements."
27335243,1,0,0,java.util.HashMap,I have a HashMap using classes as keys and values that links a class (key) with another class that takes an instance of the key class as the only argument for its constructor.
27336084,1,0,0,java.util.HashMap,Why does java.util.HashMap use a linked list internally.
27336084,1,0,0,java.util.HashMap,"My conceptual understanding of a java.util.HashMap is as follows:  Its main asset over other Map implementations is constant lookup time, assuming there are no collisions."
27336084,1,0,0,java.util.HashMap,"Based on point 2, HashMap has to expand an array, an operation which is surely linear."
27338258,2,1,1,java.util.HashMap,"http://openjdk.java.net/jeps/180 As of Java 8, HashMap does fall back to a binary tree if there are enough collisions."
27336307,1,0,0,java.util.HashMap,Java HashMap: A Bug in JVM or I am doing wrong?
27336307,1,0,0,java.util.HashMap,In the code below:-  Create the HashMap and add some elements.
27336307,1,0,0,java.util.HashMap,Create second HashMap taking the mapping of first.
27336307,1,0,0,java.util.HashMap,Modify the second HashMap.
27336307,1,0,0,java.util.HashMap,First HashMap is modified along with?
27336362,2,1,3,java.util.HashMap,"You're making a shallow copy of the original HashMap: the list references are copied, then their items."
27336362,2,1,3,java.util.HashMap,"As @jon-kiparsky explained nicely in a comment:  This may be obvious, but just for completeness: since a HashMap stores objects, not primitives, your maps store references to objects."
27336540,2,0,1,java.util.HashMap,"HashMap with the numbers as keys, and their count as values."
27337148,1,0,1,java.util.HashMap,"As I have the records mapped to objects, I'm going to store these two kinds of objects in collections (HashMap<Integer, NodeBean> for NodeBean, ArrayList<ConnectionBean> or an array for ConnectionBean)."
27337508,1,0,0,java.util.HashMap,HashMap or TreeMap for small set sizes.
27337508,1,0,0,java.util.HashMap,"I understand the time complexity of HashMap vs TreeMap, but what about small set sizes  in critical code paths ?"
27337508,1,0,0,java.util.HashMap,"For a set size of 1, the lookup time for a TreeMap should be faster than for a HashMap."
27339089,1,0,0,java.util.HashMap,Fastest way to arrange sort and print large HashMap?
27339111,2,1,1,java.util.HashMap,Here is a basic implementation for the data structure HashMap: code.
27342701,2,1,0,java.util.HashMap,You can fix the exception by changing the HashMap to ConcurrentHashMap.
27342151,1,0,0,java.util.HashMap,I am trying to group a List of events into dates with a HashMap but i'm having problem achieving it.
27342151,1,0,0,java.util.HashMap,So every events that matches a key will be stored inside a List in the HashMap.
27342184,2,0,1,java.util.HashMap,"You could use a HashMap<Date,List<Events>> to achieve this."
27342607,1,0,0,java.util.HashMap,Exporting afterNodeAccess from HashMap.
27342607,1,0,0,java.util.HashMap,In my program I have a class which extends HashMap.
27342607,1,0,0,java.util.HashMap,I'd like to execute some method after any modification made on HashMap nodes.
27342607,1,0,0,java.util.HashMap,It seems like HashMap has some interesting methods: code.
27343069,2,1,2,java.util.HashMap,"If you would overwrite the 3 mentioned methods, which are callbacks for LinkedHashMap, you have no guarantee, that these methods are still existing in the next Java version EDIT Summary of the considerations from the comments Use delegation instead extending Hashmap If you implement the Map interface (without extending HashMap, only use an internal HashMap object for delegation) you will automatically get informed by the compiler if the interface is changed when you change your java version."
27343069,2,1,2,java.util.HashMap,"If you extend HashMap and override protected methods, you lost this advantage."
27343069,2,1,2,java.util.HashMap,So writing only a delegation of HashMap gives you not the ability to add code after every modification.
27347196,1,0,0,java.util.HashMap,How do I display values from a HashMap associated with the key into an ArrayList?
27350034,1,0,1,java.util.HashMap,HashMap ConcurrentModificationException.
27352497,1,0,1,java.util.HashMap,How to pass HashMap value to list.
27352789,2,0,4,java.util.HashMap,"If you search by the key alone (i.e. map.containsKey(key)), you should use a HashMap."
27352789,2,0,4,java.util.HashMap,"If it is determined by the key alone, you should use a HashMap."
27354481,1,0,0,java.util.HashMap,HashMap has only one key and Value code.
27354584,2,0,2,java.util.HashMap,"And you dont need to use HashMap also, as you have only 1 key value pair."
27356035,1,0,3,java.util.HashMap,"I have the following key-value system (HashMap) , where String would be a key like this ""2014/12/06""."
27359584,2,0,0,java.util.HashMap,For your reference Sort Array in Java If you want to make easy then you can create an object for each player and keep it in HashMap.
27359584,2,0,0,java.util.HashMap,You can do that using an HashMap in java with key as your player Name - String and Value as an object that contains all the information about the player you need to have.
27359184,1,0,5,java.util.HashMap,"Can't add (int, double) pair to HashMap."
27359184,1,0,5,java.util.HashMap,"which adds the key-value pair (v, Double.MAX_VALUE) to a HashMap called distances that is in the class DistanceQueue."
27361628,2,0,0,java.util.HashMap,"May be you need :   private HashMap<Integer, Page> pageList;"
27395775,2,0,0,java.util.HashMap,The simplest way to implement a lookup is with a HashMap or some other kind of Map.
27395775,2,0,0,java.util.HashMap,"The trick is to store all your names and times in the HashMap, with code something like this."
27395775,2,0,0,java.util.HashMap,"It's then easy to retrieve a time from the HashMap, if you have the name."
27370566,1,0,0,java.util.HashMap,"EDIT: I just changed the TreeMap to HashMap and now it works a litttle bit but still doesn't do what I need it to do.. Hey,this is something I have been stuck on for a really long time."
27370566,1,0,0,java.util.HashMap,"Upon changing to HashMap it now prints out like this: [[today, day], [me, and], [so, if], [in, for], [for, you], [top, in], [sent, receive], [for, many], [on, top], [or, on], [do, do], [side, so], [so, when], [under, on], [many, much], [to, do], [row, on], [for, when], [when, become], [dog, house], [toy, your], [many, is], [won, do], [become, inside], [why, to], [to, spell], [me, you], [school, under], [too, your], [hit, high], [can, do], [is, to], [for, how], [receive, get], [on, me], [animal, your], [to, animal], [inside, to], [your, for], [cat, many], [who, me], [spell, word], [do, cat], [house, live], [how, can], [your, who], [word, sent], [to, today], [canvas, word], [on, for], [low, ball], [which, many], [animal, if], [much, mouse], [live, living], [your, sent], [if, how], [high, kill], [ball, hit], [if, so], [in, side], [get, which], [you, if], [so, for], [do, if], [get, toy], [so, row], [if, to], [to, if], [win, won], [how, when], [inside, in], [dog, squirrel], [you, to], [and, you], [so, or], [word, school], [mouse, for], [for, why], [day, dog], [squirrel, fish], [your, if], [cat, dog], [for, which], [to, when], [more, for], [to, your], [which, cat], [living, canvas], [kill, win], [you, low], [when, inside], [fish, animal], [do, so], [many, more], [to, too], [when, to]]  This is the map it is entering into: private Map<ArrayList<String>, Map<String, Integer>> map;"
27374489,2,1,5,java.util.HashMap,"If it is a HashMultiset, for example, then it is backed by a HashMap."
27374489,2,1,5,java.util.HashMap,"For details about how that is more efficient than iterating through the whole collection, take a look at this answer: How does a HashMap work in Java?."
27376129,1,0,1,java.util.HashMap,"I first check if an argument is present in the string, then I attempt to extract the argmument's name, and then I replace the whole pattern by the arguments value contained in an HashMap : code."
27377791,1,0,0,java.util.HashMap,"Now For getting live payments we have a business merchant account in US and we have linked that Bank to our Paypal account , and when i am providing credentials for that Business account for REST API Transactions it is throwing an Error  Error code : 401 with response : Server returned HTTP response code: 401 And the code Causing this error is : Map sdkConfig = new HashMap();         sdkConfig.put(""mode"", ""live""); code."
27384261,1,0,5,java.util.HashMap,In HashMap why threshold value (The next size value at which to resize) is capacity * load factor.
27384261,1,0,5,java.util.HashMap,In HashMap why threshold value (The next size value at which to resize) is capacity * load factor.
27384604,2,0,1,java.util.HashMap,The HashMap implementation allows you to set the load factor.
27384604,2,0,1,java.util.HashMap,"For any given instance of HashMap, you get to choose the appropriate load factor for your particular situation."
27384604,2,0,1,java.util.HashMap,"As an aside, your concept of a ""full"" HashMap is a little skewed."
27384604,2,0,1,java.util.HashMap,You could use a HashMap with a load factor of 1 billion and it would (probably) never grow beyond a capacity of 16.
27384604,2,0,1,java.util.HashMap,"There is no problem with setting load factor to 1.0, which would result in a rehash operation when you add the 17th element to a default-sized HashMap."
27384645,2,1,5,java.util.HashMap,"On the HashMap it says:  As a general rule, the default load factor (.75) offers a good tradeoff    between time and space costs."
27384645,2,1,5,java.util.HashMap,"Higher values decrease the space overhead    but increase the lookup cost (reflected in most of the operations of the    HashMap class, including get and put)."
27387166,1,0,1,java.util.HashMap,"Now, I'm pretty sure about what should I do in order to interpret a statement: 1) Lexical analysis to turn a statement into a sequence of tokens 2) Syntax analysis to get a symbol table (HashMap with the variables and their values) and a syntactic tree (to perform the GET statements) to 3) perform an inorder visit of the tree to get the results I want."
27387637,2,1,5,java.util.HashMap,"You shouldn't return a constant value, since it would make a very poor hashCode when used in classes such as HashMap and HashSet."
27388463,1,0,3,java.util.HashMap,HashMap and concurrency- different keys.
27388722,2,0,0,java.util.HashMap,"With ConcurrentHashMap you have more chances for simultaneously add, because it locks only basket where element will be inserted instead of locking whole HashMap."
27388478,2,0,0,java.util.HashMap,"No, simply synchronizing the method of a HashMap will not allow two threads to add a key-value pair at the same time, they have to wait and go one at a time."
27402367,2,0,0,java.util.HashMap,Read-only access to a HashMap is safe: you can have multiple threads call the get method with no synchronization at all and nothing breaks.
27389149,1,0,0,java.util.HashMap,"The HashMap is initialized as a Integer as the key, and a LinkedList of Strings as its value."
27390281,1,0,4,java.util.HashMap,"HashMap.remove() synchronized by using String.intern() on the Key, does this even work?"
27390281,1,0,4,java.util.HashMap,"But even if this would work, I suspect that code to be broken given that HashMap javadoc states:  If multiple threads access a hash map concurrently, and at least one   of the threads modifies the map structurally, it must be synchronized   externally."
27390736,2,1,7,java.util.HashMap,This is not sufficient to safely access a HashMap from multiple threads.
27390736,2,1,7,java.util.HashMap,"Before long, your HashMap will be corrupt."
27390736,2,1,7,java.util.HashMap,This is the only robust way to prevent internal corruption of a HashMap being accessed from multiple threads.
27390736,2,1,7,java.util.HashMap,"See also: Java synchronized block vs. Collections.synchronizedMap  As an aside, lets suppose for the sake of argument that synchronized(key.intern()) was a reasonable way to concurrently access a HashMap."
27409401,2,1,0,java.util.HashMap,The cache is a simple HashMap that tracks whether a path exists between two DAG vertices.
27391942,1,0,0,java.util.HashMap,Java Linked HashMap.
27391966,2,1,1,java.util.HashMap,"First, HashSet is not a HashMap."
27392076,2,0,0,java.util.HashMap,using a HashMap) that converts the short abbreviations to actual textual descriptions.
27393565,2,0,1,java.util.HashMap,"I'm also going to assume this object is (mostly) immutable, since implementing .hashCode() for mutable objects is generally a bad plan (at the very least, you have to be careful about putting mutable objects in a HashSet or as keys in a HashMap)."
27397686,2,0,3,java.util.HashMap,It's a HashMap that also maintains a linked list of the entries in the order the keys were added to the map.
27398327,2,0,1,java.util.HashMap,"A HashMap is simpler and faster, is not thread safe."
27399332,1,0,4,java.util.HashMap,HashMap null value issue.
27403022,2,0,0,java.util.HashMap,Note that using a HashMap has a speed advantage over an array during lookup.
27403022,2,0,0,java.util.HashMap,The complexity of HashMap lookup is O(log(n)) while that of an array is O(n).
27403133,2,0,1,java.util.HashMap,"the HashMap<K,V> class, with String as the key type and Integer as the value type."
27405169,1,0,3,java.util.HashMap,Restrict HashMap to accept a particular string key.
27405169,1,0,3,java.util.HashMap,How can we restrict a HashMap to accept a particular string key.Restriction here can have one of following meanings-1.
27405169,1,0,3,java.util.HashMap,But the condition is that it should be implemented without overriding put method of HashMap and without using if condition while adding an entry to given map.
27405169,1,0,3,java.util.HashMap,"Suppose I have a HashMap m and I want to restrict a particular string key ""myKey""."
27405321,2,0,1,java.util.HashMap,"If you're interested in real ways to restrict a HashMap's keys, you should use Guava's ForwardingMap and extend its .put*() and .putAll() methods, throwing an IllegalArgumentException ""if some property of the specified key or value prevents it from being stored in this map""."
27405321,2,0,1,java.util.HashMap,"Even if you don't use Guava, you should prefer the decorator pattern to extending HashMap directly."
27405412,2,0,1,java.util.HashMap,"Edit: The definition of the HashMap cannot be changed, so this approach would no longer be applicable."
27405999,2,0,0,java.util.HashMap,"With a decorator, the decorator and the decorated class normally share an interface i.e. Map, so implementing a custom put(k, v) and passing all other methods through to the decorated HashMap may be acceptable as you are not directly overriding the put(k, v) method of HashMap."
27406912,2,0,0,java.util.HashMap,"For example, Properties cannot ever implement its property storage in HashMap form or any other form other than a HashTable."
27406553,2,1,4,java.util.HashMap,These classes have some design flaws and were replaced by ArrayList and HashMap or similar others.
27406450,1,0,0,java.util.HashMap,HashMap scrollObject = new HashMap(); code.
27406704,2,1,0,java.util.HashMap,"Then you may achieve your grouping functionality using HashMap, i.e.: code."
27406571,1,0,0,java.util.HashMap,"In the following problem, my variable graph has the following structure: HashMap<Integer, ArrayList<Integer>>."
27408806,1,0,0,java.util.HashMap,HashMap MySQL - Best Practice.
27409866,1,0,0,java.util.HashMap,Java: How can I make a clone of a HashMap of ArrayList ?
27410681,2,0,2,java.util.HashMap,"Instead of creating a matrix addressed with x and y coordinates, returning a Value, create a HashMap<Coordinates, Value>, where Coordinates is a simple class holding x and y."
27410910,1,0,0,java.util.HashMap,use inner class as a generic parameter to HashMap.
27410910,1,0,0,java.util.HashMap,"In a main project, I need to define a HashMap holding objects of type B."
27410910,1,0,0,java.util.HashMap,"Tried this way:     HashMap<String, A.B> map = new HashMap<String, A.B>() But it compiler complains that B is not visible."
27411639,1,0,0,java.util.HashMap,Login User if values exist in HashMap.
27411758,2,0,0,java.util.HashMap,"Since your HashMap stores the username and password as values, youll want to compare the entered values to the keys ""username"" and ""password"" corresponding values."
27412981,2,0,0,java.util.HashMap,It might be easier to use a HashMap to store your data: code.
27415919,2,1,1,java.util.HashMap,"You need to make a new HashMap instance and populate it each iteration, like so: code."
27417746,2,0,0,java.util.HashMap,(If Java 7 you can use use the diamond operator without specifying the types like new HashMap<>()).
27419301,1,0,0,java.util.HashMap,How to put key/values into a HashMap from StringBuilder using loop?
27419301,1,0,0,java.util.HashMap,"I need to populate a HashMap<String, String> with values I take from part of a StringBuilder, then take the keys and add them into an ArrayList<String>, then print the list."
27419301,1,0,0,java.util.HashMap,"I've never created a HashMap before, so maybe I'm missing something."
27419617,2,1,1,java.util.HashMap,"I would recommend to use a Map<Integer, String> myAlphaNum = new HashMap<Integer, String>(9); and in your loop myAlphaNum.put(Integer.parseInt(alphaNum.substring(i, ++i)), alphaNum.substring(i, ++i));."
27428358,1,0,0,java.util.HashMap,"Description with words: I tried to imitate the example from the PrimeFaces Showcase, since I also have HashMaps inside of a HashMap."
27429589,1,0,1,java.util.HashMap,"I created a Singleton instance of the HashMap in both the application and the client thinking it would be the same instance, but after printing both Objects to the console, I am seeing that they are two separate instances and thus do not contain the same data."
27429589,1,0,1,java.util.HashMap,Does anyone know how to make the HashMap accessible from the app and from the client?
27429589,1,0,1,java.util.HashMap,"After firing up the Jetty server, when I run the client, the console reads, Object not found which tells me that that there are, in fact, two separate HashMap instances."
27431467,2,1,6,java.util.HashMap,"And you can add extra logic that logs whenever someone writes to the field, or prevents certain threads from writing, or whatever... you can change the type of a field from a HashMap to a TreeMap if your getter abstracts it away and just returns a Map... etc."
27433773,2,0,1,java.util.HashMap,"If you need to identify individual images with strings, you could create a HashMap."
27433773,2,0,1,java.util.HashMap,"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html You can retrieve all key values (in your case,the names) via the method keySet() Edit: Here's a working example class, derived from yours, but only with the relevant fields: code."
27436619,1,0,0,java.util.HashMap,Here are the results:  Run 1 average: 385 (HashMap lookup) Run 2 average: 914 (Looping through values) Run 3 average: 0   (Array (byte))  Run 4 average: 0   (Array (int)) Run 5 average: 314 (Switch)  and the code: code.
27437940,1,0,4,java.util.HashMap,Using HashMap Value to remove object from TreeSet.
27437940,1,0,4,java.util.HashMap,I have a HashMap where key is a character and value is some user-defined object.
27437940,1,0,4,java.util.HashMap,The number of entries in HashMap and TreeSet are equal.
27437940,1,0,4,java.util.HashMap,Later on I want to retrieve a object from HashMap using user supplied character input.
27437940,1,0,4,java.util.HashMap,"Upon retrieving object from HashMap, I want to delete the same object from the TreeSet."
27438308,1,0,1,java.util.HashMap,"This has to work for any object (including that of Java's own classes or any API like String, HashMap, HttpServlet, etc)."
27446120,1,0,0,java.util.HashMap,HashMap if containsValue infinite loop issue.
27447681,2,0,0,java.util.HashMap,"First, you create a HashMap variable called user... and, in the if block, you created a MainObj.User variable called user too."
27447681,2,0,0,java.util.HashMap,"So, the user created in if block is automatically removed when the if block finish, and the return value is the empty HashMap."
27451254,2,0,1,java.util.HashMap,"Probably what you are looking at is Mapping the username to an ArrayList Something like: Map<String, List<String>> map = new HashMap<>(); That way you may use it like this: code."
27451296,2,0,0,java.util.HashMap,"Map<String, List<String> map = new HashMap<>();  map.put(username, list);"
27451338,1,0,0,java.util.HashMap,"Three dimensional array, HashMap, Map or something else?"
27456249,1,0,0,java.util.HashMap,How to improve the complexity of HashMap iteration?
27456249,1,0,0,java.util.HashMap,"I implemented a custom HashMap class (in C++, but shouldn't matter)."
27458547,2,0,1,java.util.HashMap,Use HashMap and a seperate list as below: code.
27458597,1,0,0,java.util.HashMap,I am trying to check the (now)HashMap books to see if the book ID from the getId() method match the bookID of the book object.
27458597,1,0,0,java.util.HashMap,How Should I go about Iterating over my HashMap with the Book object?
27458597,1,0,0,java.util.HashMap,"This is my HashMap: HashMap<String, String> books = new HashMap<String, String>();  code."
27458769,2,0,0,java.util.HashMap,"As there are no Books in the HashMap, you will never be able to get a Book object out of it."
27458769,2,0,0,java.util.HashMap,"If you want to identify Book objects with String objects, a HashMap works, but you have to set it up in this way: code."
27458769,2,0,0,java.util.HashMap,"Making the association of an ID to an object in a HashMap works, but is very lose."
27460279,1,0,0,java.util.HashMap,Time complexity of keySet().iterator().next() in classes HashMap and LinkedHashMap?
27460279,1,0,0,java.util.HashMap,I am trying to figure out what's the time complexity to get the first key in HashMap and LinkedHashMap java collections classes using the method keySet().iterator().next().
27460279,1,0,0,java.util.HashMap,The order in HashMap is not important.
27460279,1,0,0,java.util.HashMap,I have been digging in both classes source and looks like that:  In HashMap it iterates over all entries until if finds a non null one.
27460279,1,0,0,java.util.HashMap,"UPDATE: According to the test I did, both HashMap and LinkedHashMap seem to perform in O(1) because the execution time doesn't increase when number of elements increase in power of 2: code."
27460624,2,0,0,java.util.HashMap,"Looking at the code, for HashMap you find (in HashIterator class): code."
27463271,2,0,0,java.util.HashMap,You can do something like this: Create a hashmap for the student data HashMap<StudentData> and put all the user input into the HashMap.
27463271,2,0,0,java.util.HashMap,"If you do not want any key to recognize data, I'd use Vector<StudentData> Once you have collected all the data, iterate through the HashMap/Vector and write it to the file."
27464713,2,0,0,java.util.HashMap,"I do not know why you would use a HashMap: if you have just a list with all Account objects, you have all information you need."
27464713,2,0,0,java.util.HashMap,"You are using the class Hashtable, but it is recommended to use HashMap<Key, Value>."
27464443,1,0,0,java.util.HashMap,I was looking at java source code in HashMap class.
27464530,2,0,2,java.util.HashMap,The threshold value is setted by the variable static final int TREEIFY_THRESHOLD = 8; in HashMap.java
27465172,2,1,1,java.util.HashMap,"Seriosly, there is no problem to initialize a HashMap in the constructor  as long as you don't start a thread which uses these variables or  call a method which do that or, also evil, call a overridable method in the constructor."
27466629,2,0,1,java.util.HashMap,` Why don't you use HashMap in place of list?
27466629,2,0,1,java.util.HashMap,id will be key and Passenger object will be the value in HashMap..
27467550,1,0,1,java.util.HashMap,Add the player to a HashMap with the menus that he will be using.
27467550,1,0,1,java.util.HashMap,"When the player leaves, remove him from the HashMap and destroy the menu instances."
27467550,1,0,1,java.util.HashMap,"It goes normal up to step 2, however the events on step 3 seem to get registered equal to the amount of keys inside the HashMap."
27471123,2,0,0,java.util.HashMap,"HashMap<String, String> map = new HashMap<String, String>(); creates a new, empty, HashMap instance."
27471256,2,0,0,java.util.HashMap,"Eran's suggestion (using HashMap<String, List<String>>) is also a good one if you want to store multiple Strings per key."
27472681,2,0,0,java.util.HashMap,Explenation: Outer {} block means that this instance is of an anonymous class extends HashMap.
27472712,1,0,1,java.util.HashMap,and visual VM shows : 2 million of instances of Integer these objects are equals but Map stores all of them  Just for history logging I coded chiastic-security's solution and test it to compare with HashMap: code.
27472712,1,0,1,java.util.HashMap,VisualVM heap dump for CompactMap:   test HashMap : code.
27472712,1,0,1,java.util.HashMap,VisualVM heap dump for HashMap:
27473141,2,1,4,java.util.HashMap,"The trick is to keep hold of a HashMap<K,V> map to hold your real mappings, and another HashMap<V,V> canonical to make sure your values don't end up containing two equal but non-identical references."
27473199,1,0,2,java.util.HashMap,"Every implementation I've tried has been suboptimal and not stream-like, as I kept falling back on using a plain HashMap holding ImmutableList.Builder values, and when I'm done populating I would loop through it and convert it into ImmutableList values by calling build() and putting it in a new map."
27479857,1,0,3,java.util.HashMap,How to sort a HashMap in ascending order.
27485794,1,0,14,java.util.HashMap,Java iterate over ArrayList with HashMap in it.
27485794,1,0,14,java.util.HashMap,But how can I loop through the ArrayList to get the key and value from the HashMap?
27486083,2,0,17,java.util.HashMap,"This cannot work, because your current map is of type HashMap<Object, Object>."
27486270,1,0,1,java.util.HashMap,"public static JasperPrint createRefundPrint(Ticket ticket, HashMap map) throws Exception {         final String FILE_RECEIPT_REPORT = ""/com/floreantpos/report/template/RefundReceipt.jasper""; code."
27487291,2,1,1,java.util.HashMap,"HashMap's order is unspecified, but not random."
27487291,2,1,1,java.util.HashMap,"If you enter the same keys into a HashMap, in the same order, then you'll get the same result each time."
27487291,2,1,1,java.util.HashMap,"It gives the implementers freedom to perform whatever hashing algorithm they want, resolve conflicts in whatever way is convenient, resize the HashMap's buckets without regard to maintaining order, etc."
27487163,2,0,1,java.util.HashMap,HashMap is internally using Hashing algorithm.
27490255,1,0,0,java.util.HashMap,Put HashMap into ListVIew with section headers.
27490255,1,0,0,java.util.HashMap,I have a HashMap of this data: code.
27491476,1,0,1,java.util.HashMap,"I'm entering user input via telnet into a HashMap, then trying to display that info into a JTextArea."
27491476,1,0,1,java.util.HashMap,"When I hit run, the GUI launches and the initial HashMap is posted to the GUI."
27491476,1,0,1,java.util.HashMap,"But when I update the HashMap values, they don't show in the TextArea."
27491476,1,0,1,java.util.HashMap,"Once I enter score, which is the HashMap value, I print the HashMap in the cmd window, and it shows the HashMap as expected, but the GUI textField doesn't change: code."
27491476,1,0,1,java.util.HashMap,"Here is Scores, where the HashMap is stored: code."
27495393,1,0,0,java.util.HashMap,"What I can say is that the HashMap ""filterOptionsMap"" is correct and there is no duplication in it or the ""filterHeaderList"" Any help would be greatly appreciated."
27495393,1,0,0,java.util.HashMap,As requested here is some additional code related to the HashMap: code.
27497517,2,0,3,java.util.HashMap,"say the map is HashMap nameMap, and change the code like this: code."
27498063,2,0,0,java.util.HashMap,Looping through HashMap using Iterator: code.
27498415,2,0,0,java.util.HashMap,Here is how to iterate through a HashMap and get all the keys and values: code.
27497925,2,0,1,java.util.HashMap,You need to actually store the value back to the HashMap.
27499650,1,0,2,java.util.HashMap,Json to HashMap.
27499650,1,0,2,java.util.HashMap,"I have the following as a json output, how do I convert it to a HashMap using Gson: code."
27501768,2,0,2,java.util.HashMap,"However, if you use the most common implementations of these interfaces (ArrayList, HashSet and HashMap) all of the values will be stored internally as Objects (which include boxed primitives like Integer as well as array types like int[]."
27506177,1,0,1,java.util.HashMap,"I did not have code so far, but I thought the following would work:  Read two or more files and add each row to a HashMap<Integer,String> //Integer = lineNumber, String = data, so that each file gets it's own HashMap Iterate through all indices and add the data to a new HashMap."
27506335,1,0,1,java.util.HashMap,"I use the code below to read in the data in a text file and create a HashMap<Vertex, ArrayList<Vertex>> object below."
27506975,2,0,0,java.util.HashMap,"You could make a HashMap<Long, Vertex> in which you will use the node as key, and the vertex object as value."
27513023,1,0,0,java.util.HashMap,Something like a HashMap?
27513325,2,0,0,java.util.HashMap,I'd suggest a Map [HashMap] as you can then access the argument values via their Keys.
27516723,1,0,1,java.util.HashMap,Java: Is it not possible to use an iterator to iterate a HashMap of objects and change attributes of objects?
27516723,1,0,1,java.util.HashMap,"I have an object class Dgraph, which is HashMap<Vertex, ArrayList<Vertex>>."
27516723,1,0,1,java.util.HashMap,UPDATE : Below is the code that I used to create the HashMap.
27516723,1,0,1,java.util.HashMap,"I thought I was creating a HashMap such that if two Vertex objects with the same node value appear in the key and in the value , they would share the same memory address and point to the same Vertex Object (i.e. there should only be one Vertex Object)."
27516864,1,0,0,java.util.HashMap,"Ex : @SessionAttributes(types = {HashMap<    String, String    >.class}) I tried the above approach but giving a syntax error."
27517097,1,0,2,java.util.HashMap,Sorting HashMap with User Input Arraylists.
27517097,1,0,2,java.util.HashMap,Hey guys I'm having trouble figuring out how to sort my HashMap and I wanted to see if you guys could figure it out.
27518493,1,0,0,java.util.HashMap,"I want fetch a key based on the particular value from HashMap In the following program, I try to find Maximum length of a word in a Sentence."
27518493,1,0,0,java.util.HashMap,I'm using HashMap to store word as key and length of the word as value.
27518589,2,0,0,java.util.HashMap,"Use TreeMap instead of HashMap, TreeMap will automatically sort on the basis of key, which is in this case is length of words."
27518563,1,0,2,java.util.HashMap,Inheritance: Proper initialization to store values into a HashMap.
27518563,1,0,2,java.util.HashMap,"I am working with separate programs, one will read in a .txt file and then that same program will store the read in values into another program containing a HashMap."
27518563,1,0,2,java.util.HashMap,"The program that contains the HashMap, is named Hero.java and is an abstract class."
27518563,1,0,2,java.util.HashMap,"With that in mind, I would like to know the proper way to transfer the files read in from my GameDriver.java over to the HashMap."
27518999,1,0,0,java.util.HashMap,How to improve search in an array of HashMap.
27518999,1,0,0,java.util.HashMap,A search in any HashMap (or any hash based data structure) requires a single hash operation i-e O(1).
27518999,1,0,0,java.util.HashMap,"I was wondering since array is a collections of consecutive memory locations, therefore there could be an efficient method to reduce the search from O(n) to O(1) in array of HashMap."
27518999,1,0,0,java.util.HashMap,The most memory efficient way is to keep them separate is using array of HashMap.
27519106,2,0,0,java.util.HashMap,"Go Go For java.util packages, Go Go for Java Collections look at set (Hashset, enumset) and hash (HashMap,linkedhash...,idnetityhash..) based implementations."
27519322,1,0,0,java.util.HashMap,Java - Reading a file and loading in HashMap - How to reduce time?
27519322,1,0,0,java.util.HashMap,I'm loading the records into a HashMap with a particular field as key and another field as the value.
27519322,1,0,0,java.util.HashMap,"But, parsing the field and load into HashMap seems to take hours."
27537734,1,0,4,java.util.HashMap,"How to get the two highest values in a HashMap, making a ranking."
27537734,1,0,4,java.util.HashMap,"I cannot return the both 2 highest values, as I tried, because it seems to not be possible to remove only one value with the same key, and I also tried to swap them ( making a HashMap was also not the best option)."
27537888,2,0,2,java.util.HashMap,Any Map (including HashMap) can only store one value for any key.
27538194,2,0,1,java.util.HashMap,"Thanks for the help everyone, I ended up making a HashMap with links to the previous nodes, and traversed that back to the start."
27541011,1,0,3,java.util.HashMap,I am trying to read in values to a HashMap from a Driver program to a separate abstract program.
27547365,1,0,0,java.util.HashMap,JAXB HashMap @XmlIDRef unmarshall.
27547365,1,0,0,java.util.HashMap,I have one HashMap that contains objects from class A and B. I only want to save the ID from the objects in my XML.
27547746,1,0,0,java.util.HashMap,"Split a sentence into two words and store as key, value in HashMap."
27547746,1,0,0,java.util.HashMap,"I need to split a sentence into two strings, the first string store as key and the second string store as value in HashMap."
27547746,1,0,0,java.util.HashMap,"I want to store the first string (4562) as key, and the second string store as value in HashMap."
27549742,1,0,1,java.util.HashMap,Adding HashMap to marker to display image doesn't return the correct image for that specific marker.
27549742,1,0,1,java.util.HashMap,So this is my code up until this point: I created the HashMap: code.
27553777,2,1,0,java.util.HashMap,"I am not sure from your edit of what you are exactly doing, but it seems you're not using HashMap as you would need to."
27553777,2,1,0,java.util.HashMap,You should also create a local bitmap before adding it to the HashMap: code.
27549864,1,0,2,java.util.HashMap,"My idea would be to have something like a HashMap<Callable,HashMap<List<Objects>,Object>> where you would store the previous answers and look them up later on.I think this can be somehow done with lambda expressions but i'm not that familiar with them.I'm not quite sure how to write this method and would appreciate some help."
27551097,1,0,0,java.util.HashMap,How to modify variable class from HashSet or HashMap of Class.
27551097,1,0,0,java.util.HashMap,I have a HashSet and a HashMap of Class.
27551097,1,0,0,java.util.HashMap,"so I have a class Data, then I create HashSet of Data and HashMap of Data then do population."
27552059,1,0,0,java.util.HashMap,Now in a method I am creating this HashMap and passing into other method something like  code.
27556585,2,0,0,java.util.HashMap,"You are trying to cast session.getAttribute(""lessons""), which is a java.util.HashMap$EntrySet into a LessonSelection."
27558929,1,0,0,java.util.HashMap,"And then put them to a HashMap kvmap using kvmap.put(K, ValueClass);  My understanding is that the way to do that is: I have to parse the string of K using jp.getCurrentName(), and then get ValueClass using: mapper.readValue(jp, ValueClass.class)."
27559124,1,0,2,java.util.HashMap,Double command execution with instanceof and HashMap.
27559124,1,0,2,java.util.HashMap,"After having some problems managing separate HashMaps for each child class, I decided to try using instanceof to make things simpler with a HashMap of the Parent class that will include any number of each of the child classes."
27560778,2,0,2,java.util.HashMap,"To clarify, this is not specific to HashMap rather any java Map."
27560779,2,0,0,java.util.HashMap,It looks like you want both the keys and values present in a HashMap.
27561808,2,1,3,java.util.HashMap,"You can make the search more efficient if you maintain a HashMap<String,Node> that gives you a Node by its name."
27561906,1,0,1,java.util.HashMap,Trying to add Integers in HashMap but not working.
27562828,1,0,0,java.util.HashMap,Converting Parameters Array into HashMap.
27562828,1,0,0,java.util.HashMap,Now I need to convert it to HashMap.
27570307,1,0,0,java.util.HashMap,"Is it possible to inspect data type of value while iterating through HashMap<String,Object>?"
27573796,2,0,3,java.util.HashMap,"If you take a look at the HashMap API:  This implementation provides constant-time performance for the basic operations (get and put), assuming the hash function disperses the elements properly among the buckets."
27573853,2,0,0,java.util.HashMap,But there are interesting implications that when we consider HashMap in a generic sense.
27577757,2,1,0,java.util.HashMap,[ You can have threads to handle client's incoming messages separately] Use hash map to do the mapping [ http://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html ] and use Unique client ID's so you will not get any collisions.
27580981,1,0,3,java.util.HashMap,"I have a HashMap<Foo,ArrayList<Bar>> and I want that when I get the ArrayList associated to a key and add some value to it."
27583067,2,0,1,java.util.HashMap,"You can use the Table class from the Guava library, which allows you to index values on two coordinates: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html If you have more than two coordinates, one good solution is to create a class that has fields for all of your coordinates, and to use instances of this class as keys in a regular Java HashMap."
27583560,1,0,1,java.util.HashMap,I want to use this as a key for a HashMap.
27583560,1,0,1,java.util.HashMap,But the HashMap still uses the two instances as if they were different keys.
27583588,2,0,4,java.util.HashMap,"Note that it is not strictly required for two instances that are not equal to have different hash codes, but the less collisions you have, the better performance you'll get from you HashMap."
27588007,2,1,2,java.util.HashMap,"There are more implementations of Map than just HashMap, and you might want to synchronize access to any of them."
27591530,2,0,2,java.util.HashMap,If you are using HashSet or HashMap classes then you also need to override hashCode() method.
27592050,1,0,1,java.util.HashMap,"HashMap, String> in JSP access."
27600812,1,0,2,java.util.HashMap,"Java - Millions of records, HashMap throws OutOfMemoryError."
27600812,1,0,2,java.util.HashMap,"Hence, I chose a HashMap, so that I can get the values for each key, easily."
27600812,1,0,2,java.util.HashMap,"Hence, the HashMap throws OutOfMemoryError."
27600812,1,0,2,java.util.HashMap,EDIT: I need to do this similar HashMap Loading  for 4 such files :( I need all the four.
27601131,2,0,3,java.util.HashMap,"In a HashMap<Integer, Integer>, every entry uses like 24+16+16 bytes."
27601131,2,0,3,java.util.HashMap,"So you can roughly estimate >56 bytes per int->int entry in Java HashMap<Integer, Integer>."
27604461,2,0,0,java.util.HashMap,"This solution has linear runtime, if you use a HashMap as replacement holder."
27602206,2,0,2,java.util.HashMap,"When you store primitives in a HashMap (or any Collection), they are boxed into their reference types."
27610797,2,1,2,java.util.HashMap,It depends on the exact implementation of a HashMap<T>.
27615862,2,0,3,java.util.HashMap,"Your code won't throw an ArrayIndexOutOfBoundsException, for it's a HashMap."
27615862,2,0,3,java.util.HashMap,"As per the documentation of the get() method of HashMap:  public V get(Object key) Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
27615862,2,0,3,java.util.HashMap,"So if the HashMap does not contain a value for ìndex, if will return null, no problem there."
27615862,2,0,3,java.util.HashMap,"EDIT If your HashMap was a List, and you added 10 elements, and you called get(25) on the List, then you'd get an ArrayIndexOutOfBoundsException."
27621597,1,0,1,java.util.HashMap,Android Out Of Memory error with 20MB text file in HashMap.
27621597,1,0,1,java.util.HashMap,(Beginner Android Question: ) I'm loading a 25MB thesaurus text file into a HashMap but I get an Out Of Memory Fatal Exception.
27621597,1,0,1,java.util.HashMap,"Would it be sensible to split the text file into a number of smaller ones (say 26, one for each letter) , and then read these from text file to HashMap as needed by the program ?"
27623009,1,0,2,java.util.HashMap,"Java HashMap.get() returns null when I create a new instance of an object as a key For the above link, it seems that the HashMap returns null when the key is not existed in the map."
27624281,2,1,2,java.util.HashMap,"If you just need to store them in memory for use later, you could use a HashMap with the cheque number being your key."
27632076,1,0,0,java.util.HashMap,I need to find a way of saving a HashMap to string to save in my SQLite database to retrieve on a later stage.
27632076,1,0,0,java.util.HashMap,Here is my HashMap: code.
27632763,2,0,1,java.util.HashMap,You can store your HashMap in your Database by converting it into String using Gson library.
27633021,1,0,3,java.util.HashMap,"So as you can see this code does not work to save the HashMap and the Bitmap  So could some one please help me with this, or atleast give a tutorial (with something similar to saving bitmap and HashMap in similar circumstances that what i am trying to do."
27637077,1,0,1,java.util.HashMap,where stored HashMap now I want receive its value  code.
27640533,2,0,2,java.util.HashMap,"HashMap<Integer,V> is a rather bad choice."
27646912,2,0,0,java.util.HashMap,Now iterate through your HashMap and fill the values in object of class Age.
27646768,2,0,2,java.util.HashMap,"If each call to hashCode for the same instance returns a different value, you can't expect your HashMap to locate your keys."
27647030,2,0,2,java.util.HashMap,"and use it as a key for your map: Map<ThreeKey, Object> map = new HashMap<>();"
27647451,2,0,1,java.util.HashMap,Example: the key in a HashMap.
27647451,2,0,1,java.util.HashMap,"See this question for more: HashMap and int as key There are other good reasons, such as a ""int"" field in a database, which could be NULL as well."
27647717,1,0,2,java.util.HashMap,"I have requirement where a Map is of the type HashMap<String, Object>."
27647717,1,0,2,java.util.HashMap,"Though using Object helps solve my problem, I have to typecast every time i try to get(key) from the HashMap."
27655783,2,1,1,java.util.HashMap,"Use HashMap, it should solve your problem http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html"
27656190,1,0,0,java.util.HashMap,"This answer addresses this issue  However when I check the source code of the org.json.JSONObject file, it uses LinkedHashmap and not the HashMap and in the many many answers I read online, using linkedHashMap solves the problem."
27656324,2,0,0,java.util.HashMap,"You should use a HashMap wrapper with the city as a key, so you group your students according to their cities eg code."
27657341,2,0,2,java.util.HashMap,"However, I should add that in Java 8, HashMap and HashSet were improved to replace long hash chains with binary trees in the case where the key type implements Comparable."
27657341,2,0,2,java.util.HashMap,If the key type implements Comparable then the worst case complexity of get on a HashMap or HashSet is O(logN).
27659009,2,0,0,java.util.HashMap,"If your intention is to do task and owner lookups, you should also consider using HashMap."
27661666,2,0,1,java.util.HashMap,"I'd just take the long returned from getTime(), and use that as a key in your HashMap."
27670731,2,1,1,java.util.HashMap,"Since java.util.HashMap uses parameter.equals(key) in it's implementation of containsKey() (rather than key.equals(parameter)), this one strange result shows up in the given situation."
27666725,1,0,3,java.util.HashMap,"This is designed to be somewhat of a swearing filter so I'll let you assume the words in the List, An example of input would be ""You're a <curse>"", the output would be ""You're a *****"" for this word, though this may not always be the case and at some point I may be reading from a HashMap<String, String>where the key is the capture group and the value is the replacement."
27666963,1,0,0,java.util.HashMap,How to serialize HashMap as ArrayList as JSON?
27666963,1,0,0,java.util.HashMap,I have a model that have a HashMap as you seen below: code.
27667120,2,0,0,java.util.HashMap,"This is probably the easiest way to do it, since if you want to use a JSON library, you have to either modify the output (not recommended since it imposes bad maintainability), or write a custom serializer/deserializer for HashMap, which will be more complicated."
27667025,1,0,0,java.util.HashMap,"Why is it neither giving any  ClassCastException for HashMap<plant, Integer> a = (HashMap<plant, Integer>) object;  nor  true for a.keySet().contains(plant.rose) ?"
27667163,2,0,0,java.util.HashMap,your cast actually is casting it to HashMap and therefore there is no error.
27667086,1,0,0,java.util.HashMap,The Sring arrays are using to populate the ArrayList which are passed to the HashMap to fill my report.
27669714,1,0,1,java.util.HashMap,The list with SimpleAdapter works but i decided to change the listview and use my own adapter that extends ArrayAdapter and create my own listItem and not the HashMap.
27674669,1,0,1,java.util.HashMap,"Currently, I'm using TreeMap to store some x and y coordinates but the iteration is very slow compared to an ArrayList or HashMap."
27674669,1,0,1,java.util.HashMap,LinkedHashMap has almost the same speed of a HashMap and I can iterate the keys in the insertion order (I need insertion order or order by comparator as it is done in TreeMap) but I don't have a submap() method.
27675156,2,0,1,java.util.HashMap,"As HashMap is unordered, a subMap has no meaning."
27681264,2,1,0,java.util.HashMap,"After a few test HashMap, LinkedHashMap and TreeMap are way slower than ArrayList and I wanted to use them just for the ability to create subMaps()."
27676149,2,0,3,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
27706329,2,0,2,java.util.HashMap,"I don't think either will beat HashMap's performance by a large margin, though if it really matters, you are probably best off by benchmarking."
27704759,2,0,0,java.util.HashMap,"To make sure it can be used as a key in a HashMap<DataIdentifier, List<String>>:  override public int hashCode() to return a hash code which is derived from both the actionId and the deviceId and  override boolean equals(Object other) to return true when both actionId and deviceId are the same."
27714689,2,0,0,java.util.HashMap,Better would be to experiment with HashMap vs TreeMap for the concrete instantiation of the indices.
27711483,2,0,3,java.util.HashMap,"For example, UnifiedMap uses half the memory of HashMap and UnifiedSet uses a quarter of the memory of HashSet."
27710632,2,0,1,java.util.HashMap,"But if you really insists on solving this, you could sub-class HashMap (or any other Map), override its put method, and handle duplicates using whatever mechanism you want."
27714502,1,0,2,java.util.HashMap,"All of my interfaces are abstract, and stored in an HashMap<>."
27714555,1,0,3,java.util.HashMap,"I'm thinking of creating HashMaps for <X, Point> and <Y, Point> but I'm wondering is HashMap good for doing this, because I will be taking points in a range, based on values from x_min to x_max and y_min to y_max."
27714555,1,0,3,java.util.HashMap,"Is there a faster way to get a range of values from a HashMap, or some other type of data structure?"
27714771,1,0,2,java.util.HashMap,json to HashMap.
27714771,1,0,2,java.util.HashMap,into a HashMap.
27719561,2,0,2,java.util.HashMap,"But It won't work if you want to insert your object into HashSet, HashMap collections."
27719937,1,0,2,java.util.HashMap,"I want to build a HashMap of Date objects so whenever I have two different Date objects of the same Date value (day,month,year, .. ) the Hashmap doesn't replace the past value with the new one."
27729448,2,0,0,java.util.HashMap,"Set and Map on the other hands, does not allow duplicates (of keys for Map), but they also do not define the order of iteration, they are unordered by default, with HashSet/HashMap being the counter example."
27731644,2,1,3,java.util.HashMap,then use a HashMap<Class<?
27733231,2,1,1,java.util.HashMap,"Implementation suggested by TomTom The keys in this HashMap are ""LOOKING_DIRECTION"" + ""GLOBAL_MOVE_DIRECTION"" tuples and the values you get are a left/right/.. in form of west/east/.. (these directions are not globally but subjective) and at the same time the looking direction for the next step."
27736184,2,0,0,java.util.HashMap,Maybe you could check out HashMap?
27736184,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
27736210,2,0,0,java.util.HashMap,"If I am using HashMap, I can have something like HashMap<String, ArrayList<Integer>>, where String key is the Team Name and the ArrayList<Integer> will have Goal difference, wins and losses."
27736210,2,0,0,java.util.HashMap,"Using the HashMap has another advantage that since the keys have to be unique, you can't have the same Team Name twice."
27736257,2,0,1,java.util.HashMap,For example:  A HashMap would give you fastest lookup.
27738379,2,0,0,java.util.HashMap,One common reason is so that the Object will work if we add it to a collection like a HashMap.
27738837,1,0,0,java.util.HashMap,"Where the sessionCreate, it will create a new worker and put it inside a HashMap."
27747428,1,0,0,java.util.HashMap,I have a pretty straight forward code to sort HashMap based on values not on keys (Copied from SO but the e.g.
27747491,2,0,0,java.util.HashMap,"A sorted HashMap makes no sense, and it will break the hashing algorithm."
27750404,2,0,1,java.util.HashMap,"(The OP has confirmed that the error message referred to HashMap$Node, not HashSet$Node)."
27750321,2,1,2,java.util.HashMap,Explanation I believe you typed the error message wrong; I think it should be this (emphasis added by me):  Caused by: java.lang.ClassCastException: java.util.HashMap$Node cannot be cast to ***.*****.
27750321,2,1,2,java.util.HashMap,******.objects.ObjectA  The reason for the error is that a Java HashSet is backed by a Java HashMap with null for values.
27750321,2,1,2,java.util.HashMap,Internally a HashMap uses the HashMap$Node class to store it's elements: code.
27750321,2,1,2,java.util.HashMap,Java apparently finds the first match to an Object that it can find and decides that the internal HashMap$Node class that stores elements would be a suitable match for an Object (because it is).
27750321,2,1,2,java.util.HashMap,It then proceeds to iterate over and give you HashMap$Node's instead of the actual values that you want.
27750321,2,1,2,java.util.HashMap,That is probably the cause of your ClassCastException - you got HashMap$Node instead of the Objects you wanted.
27752198,2,0,2,java.util.HashMap,"An inner class is perfectly fine here, see for example the implementation of java.util.HashMap that uses (in JDK8 at least) an inner class called Node used to represent linked lists."
27753184,1,0,0,java.util.HashMap,Java HashMap add new entry while iterating.
27753184,1,0,0,java.util.HashMap,In a HashMap code.
27753284,2,0,1,java.util.HashMap,HashMap defines no order over which its entries will be iterated over.
27753189,2,0,0,java.util.HashMap,"HashMap uses fail-fast iterator, which throws ConcurrentModificationException when the collection is updated while iterating."
27754377,1,0,10,java.util.HashMap,"Why HashMap with generic declaration "" does not accept value ""new Object()"" in the put method?"
27754377,1,0,10,java.util.HashMap,It is very clear for me that I can add new Object() as a value in HashMap because of the map declaration to be of type < ?
27755473,2,0,2,java.util.HashMap,"super ArrayList> m can be reference for many maps, like  HashMap<Object,  ArrayList> HashMap<Object,  List> HashMap<Object,  Object>  but these maps have their own purpose, which is to hold precisely these types   ArrayList  List  Object  or their subtypes, but never their super-types because super-types may not have all necessary members (methods/fields) which their subtypes have."
27759527,1,0,17,java.util.HashMap,Using Java 7 HashMap in Java 8.
27759527,1,0,17,java.util.HashMap,I've checked the profiler and the most time consuming operation is HashMap.get.
27759527,1,0,17,java.util.HashMap,"I suspect the changes are due to the HashMap modification in Java 8, but it may not be true, as I have changed some other parts."
27759527,1,0,17,java.util.HashMap,Is there an easy way that I hook in the original Java 7 HashMap into my Java 8 application so that I only change the hashmap implementation to see if I still observe the change in performance.
27760442,2,1,20,java.util.HashMap,This will be used by HashMap to construct balanced tree in case of conflicts.
27761498,1,0,4,java.util.HashMap,I was going through the source code of the java.util.HashMap class and noticed that the explicit no-arg constructor expects two constants: code.
27761512,2,0,3,java.util.HashMap,"This is useful when defining masks or, in the HashMap situation, when allocating an amount of objects for which a power of two is a better optimizable value (by caching and similar low level issues)."
27762175,1,0,1,java.util.HashMap,Using HashMap for Node & Graph Data Structures.
27762175,1,0,1,java.util.HashMap,I never saw any textbook using HashMap for Node or Graph classes.
27762233,2,0,0,java.util.HashMap,The HashMap implementation in Java has specific assumptions about hashcode/equality contracts and I think most textbooks try to avoid such details.
27762696,2,0,1,java.util.HashMap,"You HashMap key, i.e, ChartData cateVal = new ChartData(x, y); creates a new object everytime  it is called."
27763184,1,0,1,java.util.HashMap,"This is a follow-up question for ""Using Java 7 HashMap in Java 8""."
27763516,2,0,4,java.util.HashMap,"It seems that in Java 8 the HashMap implementation got more complex, presumably it was optimized for better asymptotic performance in some scenarios."
27769009,1,0,0,java.util.HashMap,Then I add them into a HashMap and I want that HashMap to be sent to all players.
27769103,1,0,4,java.util.HashMap,java.io.NotSerializableException: java.util.HashMap$Node.
27769103,1,0,4,java.util.HashMap,I have also not been able to find an inner class with the alias Node in HashMap.
27774606,1,0,2,java.util.HashMap,How to send a HashMap with DatagramPacket?
27774606,1,0,2,java.util.HashMap,When I replace list with a HashMap why it do not work?
27774606,1,0,2,java.util.HashMap,How can I send the HashMap if I can't send it this way?
27780999,1,0,0,java.util.HashMap,"JAXB unable to marshal type ""java.util.HashMap""."
27780999,1,0,0,java.util.HashMap,"Now I am getting error saying  ""unable to marshal type ""java.util.HashMap"" as an element because it is missing an @XmlRootElement annotation""."
27786027,2,1,8,java.util.HashMap,"This is most significant for things like TreeMap, where the first loop would actually be O(n log n) and the second loop would be O(n), but even for HashMap, get has a constant-factor cost that could be avoided with the second loop."
27790377,1,0,0,java.util.HashMap,Java HashMap vs int[].
27790377,1,0,0,java.util.HashMap,"I plan to replace it with a HashMap, and was wondering if this was a better idea than making the array arbitrarily larger (eg."
27790377,1,0,0,java.util.HashMap,"Also, what are the main differences between a HashMap and an integer array?"
27790377,1,0,0,java.util.HashMap,"In this case, only odd keys are used in the HashMap/array."
27790505,2,1,3,java.util.HashMap,"There are several differences, but the short answer is that an array is likely to work better for dense keys and a HashMap for sparse keys."
27790505,2,1,3,java.util.HashMap,"The memory cost per key that you use will be 32 bits for the array, but several times that for the HashMap."
27790505,2,1,3,java.util.HashMap,"The memory cost per key that is in the range but that you don't use is also 32 bits for the array, but can be close to zero for the HashMap."
27790505,2,1,3,java.util.HashMap,Array access will be faster than HashMap access.
27790505,2,1,3,java.util.HashMap,"Define two classes that each implement the interface, one using the array and the other using a HashMap."
27790505,2,1,3,java.util.HashMap,"For the HashMap, you can also experiment with the HashMap constructor arguments."
27791213,2,1,1,java.util.HashMap,There are three options worth considering:    Java's HashMap TRIE  Java's IdentityHashMap  The first option is simple to implement but provides not the best possible performance.
27791616,1,0,0,java.util.HashMap,I am trying to make an adjacent list of Graph using HashMap and Generics.
27794090,1,0,1,java.util.HashMap,I am using HashMap to add products into the cart and then iterate over them while displaying the values on the cart page.
27794090,1,0,1,java.util.HashMap,Here the first arguments in the HashMap is ProductID which is String and the second argument is the Product object itself.
27794090,1,0,1,java.util.HashMap,Am I using the correct Collection class i.e. HashMap for storing values or is there any other collection  object which could solve this inconsistent display issue that I am facing?
27796932,1,0,4,java.util.HashMap,I need to put about 20 million entries into a HashMap.
27796932,1,0,4,java.util.HashMap,I chose TLongObjectHashMap as per :Why is Java HashMap slowing down?
27797784,2,0,0,java.util.HashMap,I do not belive JDK built-in HashMap can not deal with this.
27809378,2,1,3,java.util.HashMap,"Use a simple loop like the following to get a sense of how fast your map really is (I used HashMap because I don't have the Trove library installed; it took approximately 2 minutes to fill the map with 100,000,000 entries)."
27797067,1,0,0,java.util.HashMap,"I have created a simple login application using JSP form and displaying HomePage through a Servlet.I have also created a HashMap inside servlet which stores a couple of username and passwords.When a user enters username and password it is compared with those present inside the map and appropriate message is displayed.But the problem here is the HashMap is initialized after user hits the Login button i.e,when servlet program starts up.I want to initialize the map before hand and when ever user logs in the comparison with map should take place,instead of initialising map after Logging in.Kindly help me how I can go about it."
27797146,2,0,2,java.util.HashMap,"This way, the HashMap will be populated, when the class is registered."
27804936,2,0,0,java.util.HashMap,You can also try the below approach of using HashMap code.
27804652,1,0,4,java.util.HashMap,"What's interesting is that before the line where I get the NPE, the print statement prints out the correct value for the HashMap returned by getCountForAllPresents()."
27804652,1,0,4,java.util.HashMap,"The only other strange thing that I've noticed, is that when I go through the testGetCountForAllPresents() method using BlueJ's built in debugger, I notice that giftList3 doesn't appear in the santaMap HashMap in santasSelector, yet the print statement still prints the correct counting, implying it must know about giftList3."
27804652,1,0,4,java.util.HashMap,"I should explain that santaMap is a HashMap, with a Child object as key and a GiftList object as the value."
27805937,2,1,3,java.util.HashMap,This means that banana1 and banana are two distinct keys in any HashMap that will use them as a key.
27805937,2,1,3,java.util.HashMap,"But remember, santaMap itself is a HashMap."
27805234,2,0,0,java.util.HashMap,"is mostly used for assigning from some defined value like:     Map m = new HashMap(); And using  is not good, because you need to explicitly cast it(which means that you know your runtime type beforehand)."
27809881,2,0,5,java.util.HashMap,"a HashMap) at the freezing point, to map the indexes to the nodes."
27813133,2,0,0,java.util.HashMap,"To retain the values in map, There are multiple ways: 1) Create HashMap as instance variable and use same object to call sample method."
27813133,2,0,0,java.util.HashMap,2) Second way is to create HashMap in your main class and pass it to sample method as Naman pointed.
27816096,2,0,1,java.util.HashMap,Okay convert both classes into HashMap like code.
27815137,1,0,0,java.util.HashMap,creating HashMap keys setter and getter dynamically.
27815137,1,0,0,java.util.HashMap,"etc... and I have read somewhere that I should use HashMap.but how can I create setters and getters for each key of HashMap  so that I can add values from these user1,user2..(dynamically generated) text fields.I am using jQuery Jtableable."
27818004,2,0,0,java.util.HashMap,HashMap class has a inner class called Entry.This Entry have key value as instance variable.
27818044,2,0,0,java.util.HashMap,"If two key have the same hashCode (which doesn't mean they are identical), they will be stored in the same linked list inside the HashMap (assuming you are asking about HashMaps), and the value to be returned will be determined be comparing all the keys that have the same hashCode with the requested key (using equals)."
27820512,1,0,0,java.util.HashMap,How do I return the right string from my HashMap feed.
28050377,2,0,0,java.util.HashMap,All my datastore HashMap keys shall commence with a GAE ID assigned to my account.
28050377,2,0,0,java.util.HashMap,"The above datastore objects shall be implemented as individual HashMaps with the following codes concatenated to the GAE ID:    ""R"" - Registry; ""N"" - RegistrationNumbers; ""S"" - Subscriptions...  Next, a HashMap Unique ID is appended to each key...  1) I am at the point where I need advice on what Eclipse Project should I > use to build the .war file I need to deploy my servlets to the GAE   server?"
27824858,1,0,3,java.util.HashMap,"The problem I am facing: The program compiles and works fine, car names are being stored in the HashMap as I wanted."
27828446,1,0,0,java.util.HashMap,Creating a Real Map with HashMap in Java.
27828446,1,0,0,java.util.HashMap,I have started by creating a HashMap: key => Coordinates value => Hotel code.
27828446,1,0,0,java.util.HashMap,"Obviously if I want to use HashMap, I DO NOT want to iterate all the Hotels."
27831747,2,0,2,java.util.HashMap,"HashMap<Integer,Integer> would be able to represent your collection if you store the value as the key and the number of times that value appears as the value in the map."
27834317,1,0,1,java.util.HashMap,"I want to convert it into a HashMap (maybe), which should give me values in below format."
27834777,2,0,1,java.util.HashMap,You can use composite key in HashMap<> to add your bean object.
27834777,2,0,1,java.util.HashMap,"I have iterate your bean list and add bean object to HashMap if not present with the key ( combination of id-name ) with adding new values list with present bean's value value, if bean is already there than take values list and add value to that list."
27835313,1,0,0,java.util.HashMap,"For this, I'm iterating over all PDFields in the document and setting the correct values which are stored in my HashMap (aParameter)."
27836664,1,0,0,java.util.HashMap,How HashMap retrives different values if Key's hashcode is same but equals method return false.
27836664,1,0,0,java.util.HashMap,I'm not able to understand on working pattern of HashMap.
27836664,1,0,0,java.util.HashMap,Now i use ValueObj1 and Valueobj2 as value in a HashMap with Keys Obj1 and Obj2 respectively.
27836664,1,0,0,java.util.HashMap,My question how HashMap picks  Valueobj2  for Obj2 and  ValueObj1 for Obj1.
27836722,2,0,6,java.util.HashMap,A HashMap/HashSet implements per bucket a list of keys (on the case of a Map together with the values).
27836722,2,0,6,java.util.HashMap,"In case of a HashSet it means the key is found, in case of a HashMap, it returns the other side of the tuple: the value."
27836722,2,0,6,java.util.HashMap,The memory of a HashMap thus works like: code.
27836722,2,0,6,java.util.HashMap,"But the point of a HashMap is that one hopes, that the number of hash-collisions to use the correct term (number of keys sharing the same bucket) is very low."
27836722,2,0,6,java.util.HashMap,"Worst-case however, a HashMap can achieve, the same performance as an ArrayList/LinkedList of entries, but given the hash-function has been designed decently, the odds are very low."
27836858,2,0,2,java.util.HashMap,HashMap works by dividing its content into buckets based on the hash value of the key.
27836923,2,0,0,java.util.HashMap,"HashMap get() function If key is not null then , it will call hashfunction on the key object."
27837086,2,0,0,java.util.HashMap,"which is an ArrayList of HashMap, and in your AsyncTask you are try to assign the return value of getJSONArray, which in turn is a JSONArray, to this object, causing the compile time error Change code."
27837581,1,0,5,java.util.HashMap,"and we can use this to create an instance of HashMap, like this: code."
27837679,2,0,2,java.util.HashMap,"So when the compiler is done with your code, the map will be the equivalent of HashMap<Object, Object>()."
27838064,2,0,0,java.util.HashMap,"produtos= new HashMap<String, ArrayList<String>>() produtos it has no values it is blank."
27838604,1,0,0,java.util.HashMap,Once connection established each connection will be stored into HashMap.
27839197,1,0,1,java.util.HashMap,The second approach is that putting the ArrayList elements into a HashMap and finding the frequency code.
27839382,2,0,0,java.util.HashMap,"As Eran points out, if you are concerned about performance and you will be making this call many times then the HashMap will save you time."
27841194,2,1,2,java.util.HashMap,Propable duplicate of: Iterate through a HashMap
27841225,1,0,5,java.util.HashMap,"Java 8 Lambda, filter HashMap, cannot resolve method."
27841350,2,1,12,java.util.HashMap,"The message is misleading but your code does not compile for another reason: collect returns a Map<String, Integer> not a HashMap."
27842945,2,0,1,java.util.HashMap,You can simply use HashMap or similar implementation.
27848146,2,0,1,java.util.HashMap,"Instead of using a List<String> try using a HashMap<String, String>."
27848146,2,0,1,java.util.HashMap,If you need to see more documentation :HashMap Documentation
27848411,2,0,1,java.util.HashMap,As Dott Bottstein said a HashMap might be what you are looking for.
27848411,2,0,1,java.util.HashMap,"That's not a problem for the HashMap or the List<Vehicle> idea, but it wouldn't work with the List<String[]> idea."
27848551,1,0,0,java.util.HashMap,HashMap not saving entries.
27848551,1,0,0,java.util.HashMap,"My problem is that, I'm trying to make a resource loader that saves past textures to a HashMap with their locations as their key."
27848573,1,0,3,java.util.HashMap,"I have a string but cannot parse it into Map string s=""sakib hasan : 3 : sumon ali : 4 : tutul : 100 I need to create a HashMap from above string."
27848573,1,0,3,java.util.HashMap,"sakib hasan,sumon ali,tutul,shila akter should be KEY of HashMap and 3,4,100,1, should be VALUEs of KEYs."
27848696,1,0,2,java.util.HashMap,How can I check that entered username and password comply with the data in my HashMap?
27848759,2,0,0,java.util.HashMap,You can obtain values connected with specific key in HashMap with  code.
27850467,2,0,1,java.util.HashMap,"ADDITIONAL NOTE : if you see the elements are not ordered , it's because HashMap doesn't maintain an order, you should change to Map<String, Integer> amap = new LinkedHashMap<String, Integer>(); to see the ordered version of your elements."
27851645,1,0,0,java.util.HashMap,HashMap Values Erased In Multiple Function Calls.
27851645,1,0,0,java.util.HashMap,"I am using the Java HashMap class as a ""cache"" for a language parser."
27851645,1,0,0,java.util.HashMap,"To make our parser more efficient, we thought of storing this ArrayList object in a HashMap, mapped onto the output parse."
27851645,1,0,0,java.util.HashMap,"After inserting the object into the HashMap, the printed value of the HashMap contains the key (ArrayList) and the value (Parse)."
27851645,1,0,0,java.util.HashMap,"It's also not that the HashMap gets wiped each iteration, because I print it out on each function call, and the keys stay there."
27852118,1,0,1,java.util.HashMap,"For example, I have  a HashMap <String, Object>, where Object can be another HashMap<String, Object>."
27852152,2,0,0,java.util.HashMap,You can start by checking whether the type of object is a HashMap and then check its length whether it has more contents or not.
27853878,2,0,1,java.util.HashMap,try using atleast HashMap for maintaining the translation data.
27856989,1,0,0,java.util.HashMap,Why HashMap of requestParameters returning hashcode value.
27857301,1,0,1,java.util.HashMap,I want to retrieve the data dealer's name customer's name and Pcs from HashMap to EditText and then want to update delivery status and remarks in the same table .Please tell me if I am doing something wrong.
27857694,2,1,0,java.util.HashMap,The simplest way you can get it is by reading keys of HashMap(); code.
27862809,1,0,0,java.util.HashMap,"After splitting the string, and mapping the string using put() method from HashMap(),when I try to get a specific mapped in key,it returns all mapped in values with "":"" from the string."
27865113,1,0,0,java.util.HashMap,different ways of sorting ArrayList of of HashMap.
27865113,1,0,0,java.util.HashMap,"I have an arraylist of HashMap<String, String>  code."
27866112,2,1,5,java.util.HashMap,"The ArrayList adds a reference to the HashMap that you've added, not a copy."
27866112,2,1,5,java.util.HashMap,You're adding the same HashMap to the ArrayList 3 times.
27868173,2,0,1,java.util.HashMap,"At first sight it might be tempting to use a for-loop instead of an Iterator, but  you will need an Iterator if you want to modify the elements in your HashMap while iterating over them!"
27867695,1,0,0,java.util.HashMap,"I have a global variable masterList, which is a HashMap."
27867695,1,0,0,java.util.HashMap,"I have a recursive function, generateAnagram that puts ArrayLists of anagrams in this HashMap with the number of words in the list as the value."
27867695,1,0,0,java.util.HashMap,"However, the HashMap starts to mess up after the first call,and previous ArrayLists are overriden with the new one I'm trying to add, but the previous value remains."
27867750,2,0,2,java.util.HashMap,It's not a good idea to use an ArrayList as the key of a HashMap.
27867750,2,0,2,java.util.HashMap,"Each time you change the content of the ArrayList (by adding or removing elements), its hashCode would change, so even if it's already in the HashMap, get() and containsKey() won't find it, and put() will add it again."
27867785,2,1,1,java.util.HashMap,"Better still, store an immutable collection to ensure your hash doesn't get messed up in the HashMap: code."
27867915,2,0,0,java.util.HashMap,"I expect the binSearch to be the fastest (less Object overhead) when using the standard HashMap implementation, where you map the number with its order value."
27868006,2,0,1,java.util.HashMap,"You can maintain a ArrayList<Integer> which has O(1) index lookup to store all your ints and the (index -> int) relationship and a HashMap<Integer, Integer> which also has O(1) lookup to store the (int -> index) relationship."
27868012,2,0,0,java.util.HashMap,"If you need both to be O(1), you should create an array of sorted ints / longs / BigIntegers or whatever you need for lookup one way, and then a HashMap of ints / longs / BigIntegers to its position index"
27868088,2,0,1,java.util.HashMap,"considering the update in the question that insertions and deletions need to supported, this can be achieved by using a HashMap where key = order, value = value at that order 2) Another reverse HashMap where key = value , value = order  Then you can have O(1) lookup time for both the cases."
27867857,2,0,0,java.util.HashMap,"If I understand correctly, you're looking for something like a HashMap."
27875255,2,0,0,java.util.HashMap,"If you don't like the idea of defining a seperate class just to keep an entry's question and possible answers, you can consider using a HashMap and using it in a similar manner as suggested above."
27875266,2,0,0,java.util.HashMap,HashMap array2 = new HashMap(); ...
27877450,2,0,1,java.util.HashMap,"If you are just looking for some data structure to handle this kind of data, I will offer using a HashMap of ArrayLists like this: code."
27879007,2,1,0,java.util.HashMap,"If you absolutely need to associate an object with a String, then consider using a Map<JTable, String> such as a HashMap."
27879762,2,0,2,java.util.HashMap,"So it increases the value first, and then puts it in the HashMap."
27881550,2,1,0,java.util.HashMap,You need to synchronize your access to the HashMap as many RPC requests can be handled in parallel by multiple threads.
27881550,2,1,0,java.util.HashMap,Suggest you replace HashMap with ConcurrentHashMap or put synchronize on the em method.
27883634,1,0,6,java.util.HashMap,"I want to use ByteBuddy to instrument the code so that when calling doSomething in m, it will automatically put the value of foo and bar into a HashMap, pretty much something looks like: code."
27887343,2,0,0,java.util.HashMap,"You can make a HashMap<Character, Integer>."
27887349,2,0,1,java.util.HashMap,I would suggest using a HashMap.
27890275,1,0,1,java.util.HashMap,This for loop in HashMap uses redundant Object reference k?
27895955,1,0,4,java.util.HashMap,Option 1: Map doc= new HashMap(1); code.
27896163,1,0,1,java.util.HashMap,"HashMap offMap = new HashMap();  offMap.put(""price"", Integer.valueOf(offer.getPrice())); My question is why this code is giving error when compiled in jdk1.4 and not in jdk1.6."
27898207,2,0,2,java.util.HashMap,HashSet is backed by a HashMap.
27898207,2,0,2,java.util.HashMap,"The HashMap (source) contains an array (called table) of Entry objects, and each Entry has a next field, which can be used to form a linked list of entries for that bucket."
27900034,2,1,0,java.util.HashMap,Here is a method that shows you how you could read some files in a directory and then make use of a nice data structure called HashMap.
27900034,2,1,0,java.util.HashMap,This HashMap contains as key the filename and as value it has the content of the designated file.
27900034,2,1,0,java.util.HashMap,Have a nice day and I hope you can adapt this code to your needs... aka... not using the main method but instead calling it upon application start... and then by using references to the HashMap from within your UI you can populate your lists.
27900406,1,0,1,java.util.HashMap,HashMap get performance with simple and complex key.
27900406,1,0,1,java.util.HashMap,so I wrote a small program to test get operation in HashMap.
27900406,1,0,1,java.util.HashMap,"Actually for code in block 1 hashcode is calculated by my code as well as implementation of HashMap, but still the performance is better than block 2 where hashcode of the Set is computed only by implementation of HashMap."
27901000,2,1,2,java.util.HashMap,The performance of get() depends on two things:  The performance of the parameter key objects hashCode() method The performance of the existent key objects equals() method  Take a look at the documentation of HashMap.get().
27901000,2,1,2,java.util.HashMap,"In a HashMap, the number of keys to compare is reduced by using it's hash."
27901000,2,1,2,java.util.HashMap,The implementation of HashMap then has a couple of possible key objects it has to compare (ideally only one).
27900540,2,0,1,java.util.HashMap,"I have no idea what you are trying to do with this code, but as to your question, when the key of the HashMap is a Collection (as in your HashMap<Set<String>, Integer>), the hashCode calculation requires iteration over all the elements contained in the Collection, so it would take more time than calculating a hashCode that depends on a constant number of properties."
27903076,2,0,0,java.util.HashMap,I would propose to use a HashMap to keep all the mappings and then replace them like shown in the snippet code.
27906895,2,0,0,java.util.HashMap,Why don't you use a HashMap instead?
28198743,2,0,0,java.util.HashMap,"However, when you set up the HashMap with your values, you could of just put string values in, and MVEL would of ""auto converted"" it."
27904593,2,0,3,java.util.HashMap,"Move the Map<String, Object> rm = new HashMap<String, Object>(); line inside the for loop, as the first statement and your issue should go away."
27904614,1,0,0,java.util.HashMap,"I have a HashMap< String, List< Integer>>."
27904614,1,0,0,java.util.HashMap,Is it possible for me to display a dropdown box in velocity based on the String keys in the HashMap and when the user makes its selection to display the List< Integer> below the dropdown?
27905045,2,0,0,java.util.HashMap,A HashMap contains tries to find a key with the same hashCode (and equals) as the one you provided.
27905045,2,0,0,java.util.HashMap,"As you create a new instance of Fraction, it will never be the same as the one already in the HashMap."
27908972,2,0,0,java.util.HashMap,"By reading the values at the appropriate indexii (very sophisticated plural form of index) with HashMap.get(""a"") and then incrementing the value by one, we have a nice little letter counter... without the need to predefine numa=0 and so forth."
27910249,2,0,0,java.util.HashMap,"For simple data like states of a country which are within a few hundred entries, a simple HashMap would suffice and using memcache is an overkill and in fact slower."
27910253,2,0,0,java.util.HashMap,It will be much faster as a HashMap because it is stored in memory and the lookup can be done via the jvm by it's reference.
27912164,1,0,0,java.util.HashMap,Cannot retrieve previously fetched HashMap data.
27912976,1,0,0,java.util.HashMap,Convert HashMap keys from String to int.
27912976,1,0,0,java.util.HashMap,I have a HashMap and a properties file that holds key/values.
27912976,1,0,0,java.util.HashMap,"Properties file stores keys/values in this format ""4,5=2"" I have built a method that loads properties from the file and it puts the pair of ""keys/value"" into a HashMap Array(String, Integer)."
27914989,2,1,0,java.util.HashMap,"you can do this more efficiently (in O(n log n)) time by either first sorting the values before counting, or use a HashMap<String,Integer> to count the instances."
27916645,2,0,6,java.util.HashMap,"The reason LinkedHashMap maintains insertion order while HashMap doesn't, despite the fact that all but 4 methods are inherited, is that it's very cleverly written."
27916645,2,0,6,java.util.HashMap,"Most implementation-specific operations are members of HashMap.Entry, not HashMap."
27916645,2,0,6,java.util.HashMap,LinkedHashMap has a private static class LinkedHashMap.Entry which extends the static class HashMap.Entry of HashMap.
27916645,2,0,6,java.util.HashMap,"When you call put or remove, for example, the code for LinkedHashMap can be the same as the code for HashMap because it is the entries themselves that keep track of before and after information."
27961394,2,0,1,java.util.HashMap,"The application is very simple and just fills up a HashMap, why there is no way that old gen would be 100% full when jstat -gcutil says so."
27924441,2,0,2,java.util.HashMap,"In that case it is more efficient (when you call the function) to create a HashMap of String values to Method calls, like this: code."
27926225,2,0,0,java.util.HashMap,"You can use Java HashMap using <K,V> pairs."
27926225,2,0,0,java.util.HashMap,"Map<K,V> map = new HashMap<K,V>()."
27927702,1,0,1,java.util.HashMap,"Hy, I have a list of objects inserted into an ArrayList by a HashMap code."
27927702,1,0,1,java.util.HashMap,and I get the error on the line with the code: HashMap ul2 = (HashMap) jaxbUnmarshaller.unmarshal(reader); I have tried also: UsersList ul2 =(UsersList) jaxbUnmarshaller.unmarshal(reader); But the same error occurs.
27930599,2,0,4,java.util.HashMap,"HashMap (and HashSet) do an additional hashing on the value returned by hashCode, but this additional hashing doesn't change the value for such small numbers as you added to the HashSet."
27930599,2,0,4,java.util.HashMap,The initial capacity of a HashSet/HashMap is 16.
27935827,1,0,1,java.util.HashMap,"why I need to override for direct access of value in Hash map.That is if insert data into hashmap as follow HashMap,I could get value by giving the Key as Integer ,would get Object as Value.In this case is it necessary to Override equals() and hashCode() method?Please give suggestion."
27935852,2,0,1,java.util.HashMap,"No, you don't need to override anything to use an object as a value in a HashMap."
27939991,2,1,2,java.util.HashMap,You can use the following class which stores your data in a HashMap and is able to convert it to a two dimensional string array.
27939698,1,0,0,java.util.HashMap,In a HashMap I am getting all parameters and it's respective values successfully and have set that Map like: code.
27940176,1,0,1,java.util.HashMap,but the issue with that was that since these classes extend AbstractMap the serializable output is a HashMap rather than my original object!
27940176,1,0,1,java.util.HashMap,Now you would expect the extra object to be of the type UserScore but since it was sent via intent and is a subclass of AbstractMap it is in fact a HashMap.
27940345,1,0,2,java.util.HashMap,Does the best choice depend in the number of objects stored in the HashMap(s)?
27940930,2,1,2,java.util.HashMap,"If you have a large number of object, the choiche of a two dimensional HashMap may add a little overhead to your memory footprint, but as I don't know your costraint (# of object and memory available) I can't say if you need to go for the flattening"
27941486,2,0,2,java.util.HashMap,Does the best choice depend in the number of objects stored in the HashMap(s)?
27941486,2,0,2,java.util.HashMap,Read this and pay attention to the advice on getting the capacity right: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
27940624,1,0,0,java.util.HashMap,HashMap's method hashCode and it's effects.
27940694,2,1,0,java.util.HashMap,"The hashCode of a HashMap is a function of the entries in the map, but calling map.hashCode() as you do doesn't have much meaning."
27940694,2,1,0,java.util.HashMap,The main use of the hashCode method by the HashMap class is to determine in which bucket of the HashMap a key should be stored and searched for.
27940694,2,1,0,java.util.HashMap,This is done by calling hashCode for the key you are putting/searching for in the HashMap.
27940694,2,1,0,java.util.HashMap,"BTW, here's the calculation of hashCode for the entries you put in your Map :  The hashCode of the HashMap is the sum of the hashCodes of the entries."
27943549,1,0,0,java.util.HashMap,"I have a program that will pass a HashMap(Let say groupIdBefore) to a new Activity, And in this Activity I will get some data from Database and stored it in HashMap (ListGroupId ) Then, I want to create a checkbox alertDialog, this AlertDialog will shows some data from ListGroupId, then I want to compare ListGroupId and groupIdBefore, if value of ListGroupId is equal with groupIdBefore, Then (when the checkbox AlertDialog is shown) the checkbox is set Checked, otherwise the checkbox is left unchecked."
27946492,1,0,0,java.util.HashMap,Java Mbean attributes from HashMap.
27946492,1,0,0,java.util.HashMap,My idea was to put all properties/ attributes in a HashMap but I have no Idea how this could work because how would the interface look or is there another way?
27952437,1,0,0,java.util.HashMap,Remove keys from HashMap by passing a List of keys - Java API method or Utility for the same?
27953731,1,0,4,java.util.HashMap,My performance test involves creating a million of these objects and throwing them into a HashMap.
27956850,1,0,0,java.util.HashMap,HashMap equivalent in trove?
27956850,1,0,0,java.util.HashMap,"I was previously using a hash map to store totalSize = 2^N double array entries, as follows:  final Map myTable = new HashMap(totalSize);  I was wondering if there is an equivalent class in Trove?"
27956850,1,0,0,java.util.HashMap,or if there is a way to use Class TIntDoubleHashMap that makes the same collection as myTable HashMap?
27968721,2,0,1,java.util.HashMap,"I was trying to Initialize the HashMap for Markers and MyMarker object inside setsVetMarkers() method, when I initialize the HashMap on the top problem is solved."
27966765,1,0,2,java.util.HashMap,How to save a HashMap (as object property) to the Datastore.
27966765,1,0,2,java.util.HashMap,"However, I also want to store a HashMap containing String keys and String values with information on the tests they have completed."
27966765,1,0,2,java.util.HashMap,I hope to perform this in a way where I don't have to create an entire class and new Datastore index just for the HashMap.
27968961,1,0,1,java.util.HashMap,I have an List<String> in a HashMap as value.
27968961,1,0,1,java.util.HashMap,When I loop through the HashMap and remove items from the list of a particular key it updates the lists mapped to all the keys in the map.
27970742,2,0,0,java.util.HashMap,There are multiple implementations available where one of them is the java.util.HashMap.
27970742,2,0,0,java.util.HashMap,"The HashMap offers fast access to you elements and you can also iterate the available keys, values or entries."
27970742,2,0,0,java.util.HashMap,The HashMap does not hold the order.
27971490,2,1,2,java.util.HashMap,"HashMap<String, Integer> in Java for each individual character in the word, increase its count in the map by one create a counter for odd-numbered letters, e.g."
27975805,1,0,0,java.util.HashMap,Key of a HashMap is a pair of integers.
27975805,1,0,0,java.util.HashMap,I have some key/value pairs stored in a HashMap.
27978962,2,0,2,java.util.HashMap,"Actually keys in HashMap is a similar thing to values in HashSet, there is no big difference between them."
27978962,2,0,2,java.util.HashMap,Once these methods correctly defined - you can use Employee class itself as a HashMap key with no doubts.
27978962,2,0,2,java.util.HashMap,We can create HashSet and HashMap: code.
27978962,2,0,2,java.util.HashMap,"Going further to the source code of the HashSet - we see that it actually use a HashMap inside and add our values as a HashMap's keys with a dummy internal object as each Map's entry value, check the constructor and add method: code."
27984168,2,0,1,java.util.HashMap,"I think all of the operations you mentioned need sub-linear time to run with this solution, except which can't be faster (iteration on ~n elements will always take ~n time) Example solution with HashMap and LinkedList: find: HashMap.get(key) holds the index in your list, key is your element."
27984168,2,0,1,java.util.HashMap,"log(n) time remove: LinkedList.remove(HashMap.get(key)),  HashMap.remove(key), and your element is gone."
27984580,2,0,3,java.util.HashMap,When you put something in a HashMap which is already present it becomes overwritten.
27984580,2,0,3,java.util.HashMap,"Therefore, just HashMap#put does exactly what your meessing HashMap#replace function would do."
27993819,1,0,0,java.util.HashMap,HashMap vs Switch statement performance.
27993819,1,0,0,java.util.HashMap,A HashMap essentially has O(1) performance while a switch state can have either O(1) or O(log(n)) depending on if the compiler uses a tableswitch or lookup switch.
27993819,1,0,0,java.util.HashMap,then it would use a tableswitch and clearly have a performance advantage over a standard HashMap.
27993819,1,0,0,java.util.HashMap,"What would provide more throughput, a lookupswitch or HashMap?"
27993819,1,0,0,java.util.HashMap,Does the overhead of the HashMap give the lookupswitch an advantage early but eventually tapers off as the number of cases/entries increase?
28117975,2,0,1,java.util.HashMap,"Now that you're using simple HashMap, I assume that you'll take care of thread-safety by either synchronizing or change it to ConcurrentHashMap :)"
27995416,1,0,0,java.util.HashMap,Check values of HashMap .
27996192,2,1,4,java.util.HashMap,"A better approach is to use a HashMap to flag elements to keep, then add based on that."
27996386,2,0,1,java.util.HashMap,Complexity: expected O(N) --as the groupingBy would use a HashMap.
27996434,2,0,0,java.util.HashMap,I would suggest HashMap where key can be objectId-attributeName and value will be integer value as you have to do retrieval based on key.
27999223,1,0,0,java.util.HashMap,how to pass HashMap from Action class to jsp page?
27999223,1,0,0,java.util.HashMap,I need to pass HashMap or LinkedList from Action class to jsp page to displaying all records.
27999610,2,0,0,java.util.HashMap,"You better use: Map<Integer,SomeObject> map = new HashMap<Integer,SomeObject>(); The key is used to keep the line number from the text file"
28000451,2,1,4,java.util.HashMap,Consider for example what would happen if you added a second caller of the Test constructor that actually passes a HashMap.
28003859,2,0,0,java.util.HashMap,"It could be done very easily using mapping, for example a HashMap, for this case: code."
28006997,2,1,1,java.util.HashMap,The HashMap has correct values stored.
28006997,2,1,1,java.util.HashMap,"Also, instead of using multiple for loops you can use tracker (HashMap) to keep track: code."
28008263,1,0,0,java.util.HashMap,"HashMap< HashMap, Integer > keeping track of sets."
28008263,1,0,0,java.util.HashMap,"I'm generating HashMap and I want to keep track of how many HashMaps of each kind I am generating by putting them in another HashMap< HashMap< String,Integer >, Integer > where the value is the frequency."
28008292,2,0,0,java.util.HashMap,"Since you are using a HashMap as key, you should change : code."
28008292,2,0,0,java.util.HashMap,"A HashMap is equal to another HashMap if all their entries are equal, which means all their key/value pairs are equal."
28008292,2,0,0,java.util.HashMap,"You should also note that if you change any of the inner Maps used as keys in the outer Map, the outer HashMap wouldn't calculate a new bin for that key based on the new value of the hashCode, and therefore you may encounter a situation of two identical keys in your outer Map."
28008292,2,0,0,java.util.HashMap,That's a good reason not to use a HashMap (or any mutable object) as the key of a HashMap.
28008742,1,0,0,java.util.HashMap,Can you loop through a HashMap like you can in an ArrayList?
28008742,1,0,0,java.util.HashMap,Can you loop through a HashMap like you can in an ArrayList?
28008779,2,0,0,java.util.HashMap,"In a HashMap, the key can't be repeated, so you don't have to iterate over the Map for that purpose."
28008779,2,0,0,java.util.HashMap,"In your HashMap<String, Integer>, the same name can't appear more than once."
28008893,2,0,1,java.util.HashMap,HashMap never has duplicated keys.
28010856,1,0,0,java.util.HashMap,Trying to convert a HashMap into a scala ListMap.
28010856,1,0,0,java.util.HashMap,"The Map that I want to override is being injected via a DI, and what I have is a java.util.HashMap."
28011755,1,0,0,java.util.HashMap,"by this code whatever I add in HashMap is getting copied in list,but when I remove from ArrayList it's not reflecting in map."
28011813,2,1,1,java.util.HashMap,"See http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#values() Collection<Employee> ls = emp.values(); If you remove something from this Collection, it will be removed from the HashMap as well."
28011813,2,1,1,java.util.HashMap,Of course this new ArrayList has no idea of you HashMap.
28017045,1,0,0,java.util.HashMap,I want to filter the data from srcFile and place it a HashMap and Vector but I first need to find an effective and clean way to figure out if the line starts with alpha characters.
28017218,1,0,1,java.util.HashMap,"At first I had my serialized map cast to my created class DataMaps and DataMaps<T> but those did not work, so I went and tried to convert the serialized data to the HashMap my class extended and still get the error."
28029795,1,0,3,java.util.HashMap,I'm trying to store a mapping of strings to functions in a HashMap and I'm struggling with getting the typing right.
28030251,1,0,0,java.util.HashMap,Java - HashMap();.
28030251,1,0,0,java.util.HashMap,"How do I make a HashMap, that maps     Integer or int to a class instance of a class that extends a specified Class: code."
28030251,1,0,0,java.util.HashMap,"This gives a error: Cannot instantiate the type HashMap<Integer,?"
28032729,1,0,0,java.util.HashMap,Java: Getting index of 2 highest values in HashMap.
28037195,2,0,1,java.util.HashMap,"Need to iterate twice, one for TreeMap and then for HashMap code."
28037059,2,0,0,java.util.HashMap,"Your HashMap seems to be holding an object of some class, which is depicted here: code."
28038972,2,0,0,java.util.HashMap,You may also want to use a TreeMap instead of a HashMap if you want to iterate by month.
28039503,2,0,1,java.util.HashMap,"If you don't bother for file names, you can change the implementation from HashMap to ArrayList and modify the for loop accordingly."
28039647,1,0,2,java.util.HashMap,while I was going through the source code of java.util.HashMap I found declaration of init.
28039647,1,0,2,java.util.HashMap,"This method is called in all constructors and pseudo-constructors (clone, readObject) after HashMap has been initialized but before any entries have been inserted."
28040793,2,0,0,java.util.HashMap,"Create a HashMap<Integer, ArrayList<YourObject>> - each time you got the same object by the object Id put it in the map by it's and add it to the ArrayList"
28042996,1,0,1,java.util.HashMap,"Both the ClassA declarations are giving errors, first suggesting that Map constructor be changed to HashMap and second asking to replace InterfaceA generic to ImplmntsInterfaceA."
28043089,2,1,5,java.util.HashMap,"Otherwise a HashMap<String, ImplmntsInterfaceA> really isn't a valid argument for it."
28043103,2,0,0,java.util.HashMap,"Eg: HashMap<String, InterfaceA>."
28043103,2,0,0,java.util.HashMap,"You can change your constructor to following to accept  HashMap<String,ImplmntsInterfaceA> Eg: code."
28045321,1,0,0,java.util.HashMap,how to map value of HashMap onto RadioButtons.
28045321,1,0,0,java.util.HashMap,i m using Hashmap method to get Values from list String (HashMap).
28045737,2,1,2,java.util.HashMap,"In HashMap, insertion and lookup operations have time complexity of O(1), they'll have almost the same performance, but the first code is much more readable, don't waste your time about performance, go with the first."
28047641,1,0,0,java.util.HashMap,I read about HashMap and it says insertion order is not maintained.
28047671,2,0,2,java.util.HashMap,"It would appear at first glance from your example code that HashMap's output ordering of a given set of Strings will always be the same depending on input order because:   HashMap uses hashCode hashcode on a string is consistent for any given String †  However, the Java HashMap in it's current form may change the ordering as more elements are inserted (changing the hash table size), or for different insertion order of the same String set."
28047671,2,0,2,java.util.HashMap,"Ordering is completely destroyed for the HashMap, and maintained for the LinkedHashMap."
28047671,2,0,2,java.util.HashMap,"TLDR: Value-based hashCodes (such as those from String) in your current JRE's HashMap implementation are a distracting case where, because of your chosen implementation's (also internal state-based) determinism, you may start to think all HashMaps give a consistent ordering based on the hashCode."
28048064,2,0,2,java.util.HashMap,The natural implementation of HashMap loses information on what order it's elements got inserted into the Map.
28048064,2,0,2,java.util.HashMap,This doesn't say anything about two identically filled HashMap's contents and order of contents.
28050626,1,0,0,java.util.HashMap,"For larger files the int lineCounter I am using in my HashMap<Integer,String> seems to ""jump""."
28050626,1,0,0,java.util.HashMap,The first entry of the HashMap symbolizes the line number and the second entry of the HashMap symbolizes the data.
28050626,1,0,0,java.util.HashMap,"I've debugged the lineCounter (upper 50%, because before everything works normally) of the HashMap and I got the following when using System.out.println(this.lineCounter);: code."
28050626,1,0,0,java.util.HashMap,I'm using this 2 methods to modify the HashMap: code.
28051393,2,1,2,java.util.HashMap,"You mention using a HashMap to hold your Map<Integer, String> of line numbers + json entries, but HashMap does not maintain insertion order for entry iteration."
28052993,2,0,0,java.util.HashMap,"If you can, use a Map (HashMap, TreeMap) to quickly find an element."
28052997,2,0,0,java.util.HashMap,"If you want this type of functionality, you could try a Map such as HashMap."
28053016,2,0,1,java.util.HashMap,As others have said this isn't all that efficient and a HashMap will give you fast lookup.
28053091,2,0,0,java.util.HashMap,If you really need to search by name consider looking into HashMap.
28052977,2,0,0,java.util.HashMap,"If you want to search by name, a HashMap<String,Customer> would be more appropriate."
28052977,2,0,0,java.util.HashMap,This is less efficient than using a HashMap.
28053936,2,0,0,java.util.HashMap,Bundle is essentially HashMap.
28053936,2,0,0,java.util.HashMap,HashMap in itself is a low-level data abstraction.
28053936,2,0,0,java.util.HashMap,You may want to construct your DTO around a HashMap but it's an implementation detail.
28053404,1,0,3,java.util.HashMap,The HashMap m_phis a kind of typesafe heterogenous container.
28057529,2,0,1,java.util.HashMap,Have you considered using a HashMap for this?
28057529,2,0,1,java.util.HashMap,A HashMap is a List Object that stores 2 objects inside of it.
28058676,2,0,1,java.util.HashMap,A HashMap is a way to map keys of any one type you choose to values of any one (possibly different) type you choose.
28058676,2,0,1,java.util.HashMap,"Since HashMap implements the more generic interface Map and the interface contains all of the operations you normally need to do, it is customary to write the declaration as Map<String, Double> atomicMasses = new HashMap<String, Double>();."
28058822,1,0,0,java.util.HashMap,I'm trying to read from a file and pass the output as tokens to a HashMap object.
28060813,2,0,1,java.util.HashMap,I would suggest to store the String as soon as they are generated rather than storing in a HashMap.
28063426,2,0,1,java.util.HashMap,"Getting data: Download iText (PDF tool), open all pdf's you want to scan, read the text inside of them, make a HashMap to store word -> count(word)."
28064709,2,0,8,java.util.HashMap,"You override equals if you are using classes that rely on equals, such as HashMap, HashSet, ArrayList etc... For example, if you store elements of your class in a HashSet, you must override hashCode and equals if you want the uniqueness of elements to be determined not by simple reference equality."
28064715,2,1,55,java.util.HashMap,"Because all standard collections (ArrayList, LinkedList, HashSet, HashMap, ...) use equals when deciding if two objects are equal."
28074199,2,0,2,java.util.HashMap,"A class like HashMap<T,U> needs to have some means of identifying which item in the collection, if any, should be considered equivalent to a given item."
28074199,2,0,2,java.util.HashMap,"It would have been possible to omit equals and hashCode() from Object, and have types like HashMap only be usable with key types that implement an equatable interface that includes such members; code which wishes to use collections of references keyed by identity would have to use IdentityHashMap instead."
28074199,2,0,2,java.util.HashMap,"Such a design would not have been unreasonable, but the present design makes it possible for a general-purpose collection-of-collections type which uses HashMap to be usable with things that are compared by value as well as by identity, rather than having to define a separate types for collection-of-HashMap and collection-of-IdentityHashMap."
28074199,2,0,2,java.util.HashMap,"An alternative design might have been to have a GeneralHashMap type whose constructor requires specifying a comparison function, and have IdentityHashMap and HashMap both derive from that; the latter would constrain its type to equatable and have its identity functions chain to those of the objects contained therein."
28065286,1,0,0,java.util.HashMap,My code looks like that: I am adding all components to HashMap like Panels.
28069286,1,0,1,java.util.HashMap,Problems with getting back rotated images from HashMap.
28069286,1,0,1,java.util.HashMap,"In the display function i have the following arguments - createFrame(JDekstopPane where_to_put_the_image, File img, BufferedImage image) HashMap - all_chosen_images is the global HashMap storing all the images Really hope for your help."
28072401,1,0,0,java.util.HashMap,"Goals and Assumptions :  Input Key will be unique - there won't be any duplicate key, so hash code might be used in design if it helps constant lookups, no need to handle hash code collisions Value should be accessible in constant time by passing key as input No of pairs in a line is always same so no need to bother about dynamic re-  size of the data structure we'll be accessing one row at time using key and get the corresponding value  Note :- I'm already aware of HashMap and its internal implementation in java."
28072401,1,0,0,java.util.HashMap,"I've only two ideas   Using HashMap is the most obvious solution Having a list of     Pair objects with key,value as instance variables and do a binary     search in the sorted list which is O(logn) + some time for the     equals check I'm looking if there's a better way than this :) Any ideas / thoughts on this ?"
28072617,2,0,2,java.util.HashMap,"HashMap will give you the constant time lookups, you don't care about resizing, and plus you do not have to write/test the implementation as its already been done."
28072617,2,0,2,java.util.HashMap,I've used HashMap in dozens of applications and unless you are dealing with massive scale I don't see any reason for you to roll your own implementation or go searching for another.
28072617,2,0,2,java.util.HashMap,Most Java developers understand the SDK HashMap implementations and its trade-offs.
28078134,2,0,0,java.util.HashMap,"As everyone insists, you should be using a HashMap, but for the sake of the question, let's try this (untested): code."
28079508,2,1,0,java.util.HashMap,"For example Map<String, Integer> map = new HashMap<String, Integer>();."
28083665,1,0,1,java.util.HashMap,The occurrences can then be put in a HashMap that contains the String Date as key and # of occurrences as value.
28087254,2,1,5,java.util.HashMap,"With an ArrayList the hanging is a very unlikely option, but other structures (such as HashMap, LinkedList, ...) are less forgiving."
28092285,2,0,1,java.util.HashMap,...I could call a method which would put that jlist's name in a HashMap or call another method to alter the list as a whole.
28092285,2,0,1,java.util.HashMap,"I don't have any idea what do you mean alter the list as whole or why do you want to put that jlist's name in a HashMap, so I'm not able to help you any further."
28095434,1,0,0,java.util.HashMap,"Java Collections HashMap, value changes unexpectedly."
28097902,1,0,0,java.util.HashMap,"How can I enforce de-serialize json string, to have HashMap as class members?"
28097967,2,1,1,java.util.HashMap,"But if you're using Map, why do you care if it's a LinkedHashMap or a HashMap?"
28102538,1,0,1,java.util.HashMap,I thought of taking HashMap of Person with personid as the key and Person object as value.
28103746,2,1,1,java.util.HashMap,Make sure that you initialize the size of the HashMap with the number of Persons (so you don't have to rehash as you put the Persons into the Map).
28103072,1,0,0,java.util.HashMap,"How can I print the value of my HashMap  like this: String hashMapValues = PHOTO_IDS.get(all values); hashMapValues output as : id1, id2, id3, id4, id5 code."
28103110,2,1,1,java.util.HashMap,Refer HashMap#entrySet() java documentation for more information.
28106284,2,0,1,java.util.HashMap,"Either load the user and country mapping and store somewhere in Static HashMap, remember to update the map if any changes done in mapping, can store same at session level."
28107508,1,0,0,java.util.HashMap,But i am getting below exception   java.io.NotSerializableException: com.core.shi.core.folder.BaseClass$5     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1180)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)     at org.zkoss.zk.ui.AbstractPage.writeObject(AbstractPage.java:232)     at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)    at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)     at java.util.LinkedList.writeObject(LinkedList.java:1118)   at   sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)  at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:438)     at   org.zkoss.zk.ui.impl.DesktopImpl.writeObject(DesktopImpl.java:1044)     at sun.reflect.GeneratedMethodAccessor118.invoke(Unknown Source)    at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)     at java.util.HashMap.writeObject(HashMap.java:1100)     at   sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)  at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:438)     at org.zkoss.util.CacheMap.writeObject(CacheMap.java:633)   at   sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)     at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)     at   org.zkoss.zk.ui.http.SimpleSession.writeThis(SimpleSession.java:433)     at   org.zkoss.zk.ui.http.SerializableSession.writeObject(SerializableSession.java:71)     at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)    at   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at   java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:975)     at   java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)     at   java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)     at   java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)     at   java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)     at   com.csdcsystems.amanda.servlet.AmandaSessionFilter.sizeof(AmandaSessionFilter.java:88)     at   com.csdcsystems.amanda.servlet.AmandaSessionFilter.testSerializability(AmandaSessionFilter.java:73)     at   com.csdcsystems.amanda.servlet.AmandaSessionFilter.doFilter(AmandaSessionFilter.java:55)     at   org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at   org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at   org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at   org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at   org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at   org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at   org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at   org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)     at   org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at   org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at   org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)     at   org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)     at   org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)     at   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at   org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:722)  Could someone please tell me what is meaning of  BaseClass$5 ?
28110339,2,1,1,java.util.HashMap,"If this returns the values of a say, HashMap or HashSet, they may be returned in one order on this system, and in another order on that system."
28110793,2,0,0,java.util.HashMap,"You could maybe create some Player class to store all player data, and put Bag in it to hold items for example in: HashMap<String, Item> itemsByName; and always check when adding a new item to it if size 2 is not over exceeded."
28117002,2,0,0,java.util.HashMap,"FWIW, there are much more smarter ways to do this, such as using a HashMap, but I'm assuming you haven't covered more advanced data structures in your Java course yet, and you probably need a solution with arrays."
28117002,2,0,0,java.util.HashMap,"However, I completely recommend using HashMap."
28117346,2,0,1,java.util.HashMap,"Yes, you can use an array (regardless of element type) as a HashMap key."
28117279,1,0,0,java.util.HashMap,Iterating HashMap in order.
28117279,1,0,0,java.util.HashMap,I have a HashMap.
28117279,1,0,0,java.util.HashMap,"What's the best way to iterate over the elements of the HashMap, in numerical order of the keys?"
28117279,1,0,0,java.util.HashMap,"I considered changing to TreeMap, but did not do that since it may actually increase the load in creating the Map (as TreeMap is O(n), HashMap is O(1))."
28117331,2,0,1,java.util.HashMap,You can't iterate over a HashMap in order.
28117358,2,0,2,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
28117419,2,1,4,java.util.HashMap,So you need to decide whether you want to pay the cost upfront with a TreeMap or when required and keep using a HashMap.
28118167,1,0,2,java.util.HashMap,"Error  Error:(38, 45) java: incompatible types: inference variable R has   incompatible bounds       equality constraints: java.util.Map       upper bounds: java.util.HashMap,java.lang.Object"
28121922,2,1,1,java.util.HashMap,You can use a HashMap as follows.
28122251,2,0,1,java.util.HashMap,HashMap is the most general.
28124285,1,0,0,java.util.HashMap,I thought of taking up all key value pairs from request HashMap and concatenating the joints via & and =.
28125197,1,0,0,java.util.HashMap,Generics in HashMap implementation.
28125435,2,0,2,java.util.HashMap,"read it as follows: ""This is an instance creation expression of the type HashMap<Integer, String>."
28125435,2,0,2,java.util.HashMap,"At runtime this expression will yield a reference to an instance of the HashMap class."""
28125435,2,0,2,java.util.HashMap,"As long as the compiler can precisely track what you do with the result of that expression, it can maintain the knowledge that this is indeed a HashMap<Integer, String>, but no further than that."
28129808,1,0,1,java.util.HashMap,How i get Value from HashMap?
28130463,2,0,0,java.util.HashMap,"Knowing that, it's pretty trivial to just store unit vectors at whatever your required granularity is in a hashmap and multiply by d After you've decided on your granularity, just pre-calculate a HashMap like so: code."
28130463,2,0,0,java.util.HashMap,A HashMap lookup and a multiplication is WAY more efficient than even a single trig operation.
28133463,1,0,0,java.util.HashMap,Same hashCode but two different entries in HashMap.
28133463,1,0,0,java.util.HashMap,"What I know is: While inserting elements in the HashMap, Java checks value of hashCode and inserts that element in inside the HashMap and while retrieving the object from HashMap, Java checks the value of HashCode and retrieved the object that has the value generated from that HashCode."
28133463,1,0,0,java.util.HashMap,"So, if we add that modal again and again, why entries in HashMap are increasing?"
28133693,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#entrySet()
28134665,2,1,2,java.util.HashMap,"When you use one of your custom classes as a key in a HashMap (Sentence class in your case), you must override equals and hashCode."
28135290,2,1,2,java.util.HashMap,"When you use one of your custom classes as a key in a HashMap (as you do with the Sentence class), you must override equals() and hashCode()."
28135290,2,1,2,java.util.HashMap,"Otherwise, two sentences that you consider to be identical may be considered by HashMap to be distinct keys."
28135285,1,0,0,java.util.HashMap,"My arraylist is declared as ArrayList> I want to sort it basically by two ways, One is By rating which is a field in HashMap and second is App availaibility."
28136428,2,0,2,java.util.HashMap,"Create a new Map<String, IAnimal> from the dogMap you want to pass: new HashMap<String, IAnimal>(dogMap) and pass that object to validate."
28137629,2,1,0,java.util.HashMap,And   disaster strikes when instances of this class are put in a hash-based   collection like HashSet or HashMap (as map keys).
28136572,2,0,4,java.util.HashMap,A HashMap has no order.
28138473,1,0,0,java.util.HashMap,EDIT: My Item objects are stored in a HashMap.
28141591,1,0,0,java.util.HashMap,How i can add data from database to HashMap in Spring and Hibernate.
28141591,1,0,0,java.util.HashMap,I would like to know how i can add data from database to HashMap in Spring with Hibernate to choose this in dropdown in JSF file.
28141591,1,0,0,java.util.HashMap,And i want add list values to HashMap : code.
28141591,1,0,0,java.util.HashMap,what i can do to  add data from database to HashMap in Spring with Hibernate to choose this in dropdown in JSF file?
28147889,1,0,2,java.util.HashMap,"I have a static HashMap that is populated on application startup, and refreshed daily."
28154108,1,0,2,java.util.HashMap,I have test cases that require to mock HashMap class but it appears that JMockit encounters difficulties when mocking it.
28154108,1,0,2,java.util.HashMap,"If I replace the HashMap with any POJO, JMockIt can mock it and the test will succeed."
28155896,2,1,3,java.util.HashMap,"The mock parameter is null because of a bug in JMockit, affecting certain widely-used JRE classes (including ArrayList, HashMap, and a few others) if they happen to be mocked."
28155896,2,1,3,java.util.HashMap,"The same rule should apply to subclasses of AbstractCollection, HashMap, etc., as they too are merely data holders that should not be mocked."
28157236,1,0,0,java.util.HashMap,Kryo Serialization with nested HashMap with custom class.
28157236,1,0,0,java.util.HashMap,"I am trying to user kryo to serialze a custom class which itself contains some custom objects, more specifically a HashMap of custom objects."
28160928,1,0,2,java.util.HashMap,"Using HashMap> to classify numbers, but the set misses the first value."
28163425,1,0,0,java.util.HashMap,Serializing HashMap with a custom serialized object.
28163425,1,0,0,java.util.HashMap,"I declare the HashMap, inside the ActionHandler class: code."
28163425,1,0,0,java.util.HashMap,"The only time I put something in the HashMap, is when I call: code."
28166955,2,0,1,java.util.HashMap,"If you look for a non-java.io related method, starting from the deepest stacktrace entry, you will find java.util.HashMap.writeObject which is responsible for storing the objects contained in the Map."
28166955,2,0,1,java.util.HashMap,"The HashMap needs to rehash all elements when restoring the map, which may cause hashCode and equals invoked on incomplete objects in the case of cyclic object graphs."
28170355,2,1,3,java.util.HashMap,"Use a HashMap<Integer,List<String>>."
28171909,2,0,3,java.util.HashMap,The best way in my opinion is if you se HashMap since you can get element at O(1).
28175247,1,0,0,java.util.HashMap,Does it make sense to have a ConcurrentHashMap or should I go with a HashMap?
28175311,2,1,2,java.util.HashMap,"Otherwise, HashMap should do (given the information you've provided)."
28175311,2,1,2,java.util.HashMap,"Based on reading your pseudo code, I get the impression that you are not working on different threads and therefore HashMap should suffice."
28177447,1,0,0,java.util.HashMap,"I prefer HashMap but not HashMap<String, Object>."
28177447,1,0,0,java.util.HashMap,"OR  Can I send both as String in HashMap<String, String> and convert String to Integer while inserting into the Query?"
28178469,1,0,0,java.util.HashMap,"I tried to do this using HashMap , but i didn't got the desired output."
28179471,1,0,1,java.util.HashMap,"I heard, that load factor in HashMap reinstates the buckets to other location and it's better to keep it at 0.75, so that when the size touches 0.75*present capacity the array of buckets reallocates to twice the present capacity For instance, we have capacity 16; the array reallocates when the size become 16*0.75 = 12."
28179595,2,1,1,java.util.HashMap,HashMap performs best when there is a low collision rate.
28182301,2,0,3,java.util.HashMap,"Its better use it like:  Map<Long, HashSet<Long>> hm = new HashMap<Long, HashSet<Long>>(); Always remember that Java Generics is used to work with Object and thier methods, so no premetive types are allowed."
28182332,2,0,0,java.util.HashMap,For more info look at: How does a HashMap work in Java?
28182332,2,0,0,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html
28183800,1,0,1,java.util.HashMap,They just use a HashMap of ints and LinkedLists.
28196927,2,0,1,java.util.HashMap,"Since you know that your HashMap has a key set of type String, you'll need to cast the result of it.next() to String: code."
28200152,1,0,0,java.util.HashMap,In short I would like to know if their is any particular annotation or way which I can use simply to avoid a particular data (in this case the HashMap) to not go to generated XML when I do marshalling Snippet of XML which gets generated on marshalling   code.
28206055,1,0,0,java.util.HashMap,"The HashMap isn't empty, however following the append to the StringBuffer object sbf, when I print wordToSignature(""cab"") in main, it returns nullnullnull."
28206055,1,0,0,java.util.HashMap,"When I test the append without word.charAt(i), it performs the append and the value in the HashMap is printed."
28208003,1,0,0,java.util.HashMap,How to instantiate a new object from an abstract class containing an instance of a HashMap?
28208003,1,0,0,java.util.HashMap,"However, I have a HashMap instance inside my abstract class that I want to retrieve objects from."
28211090,1,0,0,java.util.HashMap,Pushing objects from an abstract class' subclass to a stack using HashMap?
28219930,1,0,0,java.util.HashMap,"For example, my HashMap looks like this: code."
28219958,2,0,1,java.util.HashMap,HashMap already hashes its keys.
28221044,2,1,1,java.util.HashMap,There is a few way to go about this... extending a HashMap to suit your needs is an elegant one.
28220879,2,0,2,java.util.HashMap,"Sine you are using a HashMap to store your JBlockedPerGTs as keys, it is crucial that JBlockedPerGT#hashCode() is overridden properly (and as a consequence, equals should be overridden too)."
28222116,2,0,1,java.util.HashMap,"Create a HashMap of  where user id is the key, and user is the value."
28222869,2,0,0,java.util.HashMap,I am trying to parse the response to a HashMap object.
28227400,2,1,2,java.util.HashMap,"If you just want to compare occurrences, you can use a map such as a HashMap, TreeMap, or any other implementation."
28228445,1,0,2,java.util.HashMap,Construct new HashMap by compressing the other map with stream().
28228445,1,0,2,java.util.HashMap,"I need to get new HashMap<Integer, Set<Integer>> which is {10: [100,101], 20:[200,201]} from {100: [100], 101: [101], 200:[200], 201:[201]} using stream() I try below code but of course does not work."
28228554,2,0,3,java.util.HashMap,"If it's HashMap<Integer,Integer>, my code should work as is."
28228554,2,0,3,java.util.HashMap,"If it's HashMap<Integer, Set<Integer>> where the Set<Integer> contains just one integer (as in your example), you can change entry.getValue() to entry.getValue().iterator().next() to get that single integer."
28235777,1,0,0,java.util.HashMap,HashMap put method.
28235777,1,0,0,java.util.HashMap,"To my understanding, when a collision happens the HashMap asks whether the to value are the same with .equals(Object) and if they are not the two values are stored in a LinkedList."
28235777,1,0,0,java.util.HashMap,"Apart form this, java HashMap API states:put  code."
28235913,2,0,0,java.util.HashMap,A collision occurs when the hash of of a key already exists in the HashMap.
28235913,2,0,0,java.util.HashMap,"If the keys are the same, then the old key-value in the HashMap is overwritten."
28236747,2,0,0,java.util.HashMap,As it happens HashMap in Java uses a linked-list to store multiple values for which the hash-code of the key is placed in the same 'bucket' as one or more other keys.
28237262,1,0,0,java.util.HashMap,Reorder a HashMap by its greater key.
28237309,2,1,3,java.util.HashMap,"You can create a  TreeMap<k,v>  with the existing HashMap code."
28246339,1,0,0,java.util.HashMap,What is a correct way to initialize a HashMap in a class that doesn't have a main()?
28246369,2,0,0,java.util.HashMap,You can also return your HashMap: code.
28246379,1,0,2,java.util.HashMap,HashMap in Java Eclipse Proposals Window.
28246379,1,0,2,java.util.HashMap,When I press Ctrl+Space to select from the proposal window for HashMap it does not show anything.
28247030,1,0,0,java.util.HashMap,I have a large HashMap for storing POJOs.
28253440,1,0,2,java.util.HashMap,"The way I did it and how far I have gone:  I read into a HashMap<Integer,String> a list of all my classes with a SimpleFileVisitor."
28255665,2,1,6,java.util.HashMap,One problem is that you won't be able to find that object in a HashSet or a HashMap (when that object is a key in the Map) if its hashCode changes after to add it to the Collection.
28261248,1,0,0,java.util.HashMap,"This problem occured when I stopped ""caching"" the fragments in HashMap (FirstFragment was keeping the reference)."
28261457,1,0,2,java.util.HashMap,Java : HashSet vs. HashMap.
28261457,1,0,2,java.util.HashMap,The first idea was to use HashMap since the methods get and remove of this container are more suitable to the uses I need.
28261457,1,0,2,java.util.HashMap,"But, I came to see the use of HashMap is pretty memory consumable which is a major problem, so i thought switching to HashSet will be better because it only uses <E>, and not <K,V> per element, but when I looked at the implementation i learned it uses an underlying HashMap!"
28261457,1,0,2,java.util.HashMap,Is HashMap memory wasteful?
28261457,1,0,2,java.util.HashMap,Is HashSet just as wasteful as HashMap?
28261635,2,0,0,java.util.HashMap,It is true that HashSet uses just as much memory as HashMap.
28261635,2,0,0,java.util.HashMap,HashMap is concerned with storing/retrieving (put/get) of values per key.
28261635,2,0,0,java.util.HashMap,"While HashMap/HashSet store data in an array that is usually slightly larger that the number of elements, this shold not be too much of a problem because the load factor is .75."
28261635,2,0,0,java.util.HashMap,This means that a HashMap will grow when the number of elements reaches 75% of the size of the underlying array.
28261635,2,0,0,java.util.HashMap,"A bigger concern than a large map would be lots of empty maps, since the default size of a HashMap is 16."
28261594,2,0,3,java.util.HashMap,"You are correct that HashSet is implemented using HashMap, so you will not save any memory by using HashSet instead."
28261594,2,0,3,java.util.HashMap,Is HashMap memory wasteful?
28261594,2,0,3,java.util.HashMap,Is HashSet just as wasteful as HashMap?
28261594,2,0,3,java.util.HashMap,You will gain no memory efficiency by using HashSet instead of HashMap.
28261619,2,0,2,java.util.HashMap,"HashSet is built on top of a HashMap< T, Object >, where value is a   singleton ‘present’ object."
28261619,2,0,2,java.util.HashMap,"It means that the memory consumption of aHashSet is identical to HashMap: in order to store SIZE values, you need 32 * SIZE + 4 * CAPACITY bytes (plus size of your values)."
28263518,1,0,2,java.util.HashMap,I need to filter a HashMap code.
28264585,1,0,2,java.util.HashMap,Now i need to get the previous and next sibling of this node and get their keys in order to save them in a HashMap.
28267422,1,0,1,java.util.HashMap,"It appears that HashMap< String, Object > sent from GAE server is seen as JsonMap on Client."
28267478,2,0,6,java.util.HashMap,The location an element is stored in the HashMap depends on the hashCode of that element at the time it is added.
28274857,2,0,1,java.util.HashMap,key.equals() will be called much more times in ImmutableMap.build() than HashMap.put() (in a loop).
28274857,2,0,1,java.util.HashMap,"And key.hashCode() is called same times, both HashMap.put() and ImmutableMap.build()."
28274857,2,0,1,java.util.HashMap,key.equals() are called a few times during HashMap.put() (Good hash algorithm leads a few collision).
28274857,2,0,1,java.util.HashMap,"HashMap.put() calls String.equals() 2 times, while ImmutableMap.build() calls 3000 times."
28269269,2,1,1,java.util.HashMap,For example HashMap uses simple iteration once hashCode has been used as an index in the array and compares the key via equals to each item with the same hash.
28269269,2,1,1,java.util.HashMap,So performance optimisations to try if you wish to stick with the standard Java HashMap:  Make sure your hash function provides as close as possible to even distribution.
28269269,2,1,1,java.util.HashMap,When you have a lot of data HashMap will be expanded many times.
28269196,1,0,0,java.util.HashMap,Reverse order based on value with HashMap?
28269196,1,0,0,java.util.HashMap,The HashMap used is:     code.
28269352,2,0,0,java.util.HashMap,"Some of them (like TreeMap) sort by key, some of them (like HashMap) don't sort at all."
28269226,2,0,1,java.util.HashMap,HashMap are only pairs of key/value and are in no way ordered.
28273212,1,0,2,java.util.HashMap,Get minimum key and Integer of HashMap> with java 8 way.
28273212,1,0,2,java.util.HashMap,"I know how to get minimum key and element from HashMap<T, Double>: code."
28273212,1,0,2,java.util.HashMap,"But, I can not get the key and Set in HashMap<T1, Set<T2>> for the Set containing the minimum value: code."
28283259,1,0,0,java.util.HashMap,My solution: The socket will be opened from singleton bean[SB] and saved in HashMap for further usage.
28284931,1,0,2,java.util.HashMap,"but suppose instead of a simple Date object, I have an ArrayList of HashMap<String,Object>, in the following format."
28284931,1,0,2,java.util.HashMap,How can i sort this ArrayList of HashMap based on date value without using a new instance of Comparator in TreeSet ?
28285054,2,1,4,java.util.HashMap,How can i sort this ArrayList of HashMap based on date value without using a new instance of Comparator in TreeSet ?
28285054,2,1,4,java.util.HashMap,"You could write a subclass of HashMap which implemented Comparable for itself, but that would seem a bit odd to me."
28285068,2,0,1,java.util.HashMap,"But the HashMap class is not Comparable, so you must supply a custom Comparator so the TreeSet knows how you want to sort them."
28285070,2,0,1,java.util.HashMap,"Instead of using HashMap you could create a class that contains mydate, mystring, mystring2 and implements a Comparable interface."
28287656,2,0,0,java.util.HashMap,Convert the List into a HashMap code.
28288546,1,0,0,java.util.HashMap,How to copy HashMap (not shallow copy) in Java.
28288546,1,0,0,java.util.HashMap,"I need to make a copy of HashMap<Integer, List<MySpecialClass> > but when I change something in the copy I want the original to stay the same."
28288637,2,0,0,java.util.HashMap,"You are making a copy of the HashMap itself, so changing the HashMap copy will not change the original HashMap (i.e. adding or removing entries), but because the objects you have stored are not primitive types, the List that you retrieve with a given key will be the same whether retrieved from the first or the second Map."
28288637,2,0,0,java.util.HashMap,"If you want the actual List to be a separate copy, you will have to do as you said: iterate over the entry set of the HashMap and create a copy of each List manually, adding it to the new map as you go."
28288641,2,1,0,java.util.HashMap,"It will have copies of the Lists from your original map, but those Lists will refer to the same List objects, so that a modification to a List from one HashMap will appear in the corresponding List from the other HashMap."
28288641,2,1,0,java.util.HashMap,"There is no deep copying supplied for a HashMap in Java, so you will still have to loop through all of the entries and put them in the new HashMap."
28288641,2,1,0,java.util.HashMap,"If you want to modify your individual MySpecialClass objects, and have the changes not be reflected in the Lists of your copied HashMap, then you will need to make new copies of them too."
28288810,1,0,0,java.util.HashMap,"What I have tried When I look for collisions - not react to them as shown in the above code - I tried to implement a HashMap in which I put a String - either ""left"" or ""right"" - to the key Entity.getID() which returns a unique name, like so (after the lines of code that are relevant are // <<<) : code."
28291305,1,0,2,java.util.HashMap,"I need to be able to perform the following functions:  containsKey(String key) get(String key).add(int value) put(String key, singletonList(int value)) entrySet().iterator()  I originally was just using a HashMap<String, ArrayList<Integer>> where singletonList is a function that creates a new ArrayList<Integer> and adds the given value to it."
28292258,2,1,2,java.util.HashMap,"MapDB has excellent performance comparable to java.util.HashMap and other collections, but is not limited by GC."
28297636,2,0,1,java.util.HashMap,"However, this says nothing about the contents of the HashMap - this would not be thread safe and different threads may see different or inconsistent content unless you use synchronized code blocks."
28300404,1,0,1,java.util.HashMap,"Keywords    java.util.concurrent.ConcurrentHashMap$Segment[]   org.apache.openejb.core.WebContext   org.apache.catalina.loader.StandardClassLoader @ 0xa34f0cf0  And when I run shutdown.sh, I have the following in catalina.out  org.apache.catalina.loader.WebappClassLoader   checkThreadLocalMapForLeaks SEVERE: The web application [/projeto-bim]   created a ThreadLocal with key of type   [org.apache.shiro.util.ThreadContext.InheritableThreadLocalMap] (value   [org.apache.shiro.util.ThreadContext$InheritableThreadLocalMap@5720d785])   and a value of type [java.util.HashMap] (value   [{org.apache.shiro.util.ThreadContext_SECURITY_MANAGER_KEY=org.apache.shiro.web.mgt.DefaultWebSecurityManager@2d258973,   org.apache.shiro.util.ThreadContext_SUBJECT_KEY=org.apache.shiro.web.subject.support.WebDelegatingSubject@7b62f42c}]) but failed to remove it when the web application was stopped."
28300901,1,0,2,java.util.HashMap,When to use TreeMap instead of HashMap.
28300901,1,0,2,java.util.HashMap,That being said it can also be implemented by using a HashMap and sorting it every time before iteration.
28300901,1,0,2,java.util.HashMap,All told we have a total run time of O(n*log(n) + m*log(m) + r*log(n-m)) With HashMap we have the following implementation: code.
28300901,1,0,2,java.util.HashMap,"My question therefore is, what is the use case where a TreeMap is better than a HashMap?"
28300901,1,0,2,java.util.HashMap,"Is it only better if you need to iterate over the map many (let's say k) times (in which case, if k is >> log(n) the run time for TreeMap will be O(k*(n-m)) whereas for HashMap will be O(k*(n-m)*log(n-m)))?"
28300901,1,0,2,java.util.HashMap,"Regardless, if you are only performing O(log(n)) iterations (this does sound like such a sane use case), HashMap will outperform TreeMap."
28301148,1,0,0,java.util.HashMap,I have then added example data into each HashMap through the constructor.
28301148,1,0,0,java.util.HashMap,"Item2, This is another item, 5.10 instead of Printing out all the stuff out from the first HashMap followed by the second and followed by the third."
28301199,2,0,2,java.util.HashMap,"It would make more sense to create a Product class having productID, description and price, and only use a single HashMap instead of 3. code."
28301814,2,0,0,java.util.HashMap,In a HashMap you map a value to a fix key.
28301814,2,0,0,java.util.HashMap,You would need a HashMap.
28301814,2,0,0,java.util.HashMap,This HashMap has a String as Key and a String as value.
28307042,1,0,1,java.util.HashMap,i've got a HashMap: code.
28308341,1,0,2,java.util.HashMap,sort a TreeSet with HashMap as its type.
28308341,1,0,2,java.util.HashMap,I want to sort this treeset based on the Integer value from HashMap.
28308893,2,0,1,java.util.HashMap,"As written (""sort this treeset based on the Integer value from HashMap""), this requirement either doesn't make sense, or refers to a complicated/confusing design."
28312095,1,0,0,java.util.HashMap,ImageAdapter returning NullPointerException from HashMap put method.
28312095,1,0,0,java.util.HashMap,I am getting a NullPointerException when try to add String value to a HashMap in Adapter class: code.
28312155,2,0,0,java.util.HashMap,You have initialized the 'HashMap' outside the class.
28312232,2,0,0,java.util.HashMap,"However, HashMap<String,String> map = new HashMap<String, String>(); is not defined within the class and hence the error."
28316918,2,0,0,java.util.HashMap,What is needed is a HashMap with Global scope (that was why I originally declared it outside the class).
28316918,2,0,0,java.util.HashMap,The LogCat line now correctly indicates the increasing size of the single HashMap on every iteration.
28312776,1,0,0,java.util.HashMap,And I don't know how to remove elements from HashMap method.
28315593,2,0,0,java.util.HashMap,"Just simple list.add(555) Instead of ArrayList you can use Map, SortedMap, HashMap, TreeMap."
28319557,1,0,0,java.util.HashMap,OR b) add in Results class a map Map tcRankMap = new HashMap();.
28338230,2,0,0,java.util.HashMap,Map if order is important prefer LinkedHashMap if order is not your primary concern then opt for HashMap
28328339,2,0,0,java.util.HashMap,"As @Ascalonian said, you can use Map or HashMap."
28333807,1,0,1,java.util.HashMap,"I am working on a game that uses several HashMap<Point, Integer> to store values assigned to coordinates."
28333807,1,0,1,java.util.HashMap,"As I don't need the key-value relation from the HashMap anymore, I simply put it into an ArrayList."
28333807,1,0,1,java.util.HashMap,With the HashMap I had this: code.
28333807,1,0,1,java.util.HashMap,"Should I stay with the HashMap and use something like HashMap<Point, GameTile> ?"
28333807,1,0,1,java.util.HashMap,Edit: I went with a HashMap which works as a charm right now.
28333849,2,0,0,java.util.HashMap,If you have a small number of tiles compared to n2 then I think the HashMap is indeed your best option.
28333929,2,0,2,java.util.HashMap,Your HashMap implementation was far superior to iterating.
28333929,2,0,2,java.util.HashMap,Should I stay with the HashMap and use something like HashMap ?
28333929,2,0,2,java.util.HashMap,Indexing into an ArrayList is going to be much faster than using a HashMap.
28333966,2,0,1,java.util.HashMap,"Alternatively you can use a HashMap<char, int> to store your letters, so that accessing them is a bit easier: code."
28337492,1,0,0,java.util.HashMap,"Now, as you can see I have a HashMap inside each state."
28337492,1,0,0,java.util.HashMap,"This HashMap is the one I'm supposed to use for the blind search, but heres my problem: code."
28339913,2,0,0,java.util.HashMap,"With finalList=dataCoa; you create a shallow copy, so every reference you have using finalList (i.e. each value in your HashMap) points to the same List dataCoa and you change dataCoa whenever changing a value in finalList."
28342760,1,0,0,java.util.HashMap,"Now, as you can see I have a HashMap inside each state."
28343006,1,0,0,java.util.HashMap,"Now I have created the following ArrayList ""filterData"", which will be included in the HashMap ""myMap"": code."
28346818,1,0,1,java.util.HashMap,How to get all element of a bucket in HashMap.
28346818,1,0,1,java.util.HashMap,As we know HashMap keep all data in buckets(calculate bucket location on basis of hashCode()).
28346973,2,0,5,java.util.HashMap,You cannot get all elements of a bucket of a java HashMap.
28346973,2,0,5,java.util.HashMap,"That's because the bucket is a concept which is internal to the implementation of a HashMap, and therefore not exposed by HashMap."
28346973,2,0,5,java.util.HashMap,(There are no public methods of HashMap that deal with the concept of a bucket.)
28347081,1,0,0,java.util.HashMap,Copy a searched Object & Key from one HashMap into another.
28347081,1,0,0,java.util.HashMap,"I currently have a products HashMap set up with a product ID as the string, and the Product class as the entitys(description of the item, price of item)."
28347081,1,0,0,java.util.HashMap,"This will allow an id to be typed into the parameter(""Cel403"" or ""Pi342"") and will then look through the HashMap (Maybe an iterator?)"
28347081,1,0,0,java.util.HashMap,I want it to then COPY the (id)String and attached Product object into another HashMap called 'scanned'.
28347081,1,0,0,java.util.HashMap,I can then run the scan method numerous times to add more products into the newly created 'scanned' HashMap.
28347081,1,0,0,java.util.HashMap,The 'scanned' HashMap will then contain the scanned objects with the id and i will be able to calculate the total cost of the items within the scanned HashMap.
28358699,2,0,0,java.util.HashMap,HashMap is designed to aid constant lookups using hashcode() and equals() of the key you use to put some value into map.
28358699,2,0,0,java.util.HashMap,"If you look at the internal structure of HashMap, it's nothing but an array."
28358699,2,0,0,java.util.HashMap,HashMap.values() returns a Collection with the iterator implemented to traverse each element in HashMap providing access to Value object in each iteration.
28358699,2,0,0,java.util.HashMap,I think the reason for not having a getValue() is to encourage the purpose HashMap is intended for - near constant time look ups using hashcode & equals of some key.
28358699,2,0,0,java.util.HashMap,"If you're doing this value lookup way too many times, you lose the advantage of constant lookups offered by HashMap."
28358281,2,0,1,java.util.HashMap,"Also, the interface would typically be generic as well: HashMap<K,V> implements Map<K,V>"
28360610,2,0,0,java.util.HashMap,I understand what you'd like to do and unfortunately HashMap in Java doesn't work that way.
28362583,1,0,1,java.util.HashMap,"Recently there was a major memory overload, and one of the things was a 120MB object stored in StackTraceDeobfuscator.java ConcurrentHashMap<String, HashMap<String, String>> symbolMaps field."
28369458,1,0,6,java.util.HashMap,How to fill HashMap from java property file with Spring @Value.
28369458,1,0,6,java.util.HashMap,"Is it possible to use Spring @Value, to map values from properties file to the HashMap."
28369458,1,0,6,java.util.HashMap,But I need to map custom values in HashMap expirations.
28413642,2,1,3,java.util.HashMap,"And when I want to map all properties that begin with specifix value to HashMap, with @Value annotation: code."
28370899,2,0,2,java.util.HashMap,"Is it possible to use Spring @Value, to map values from properties file to the HashMap?"
28369925,2,1,3,java.util.HashMap,"Even from one invocation to another, if you put the same key/value pair or value in a HashMap or HashSet respectively, there is no guarantee whatsoever that the ordering of entries will remain the same between two invocations."
28370773,1,0,1,java.util.HashMap,The method synchronizedMap(HashMap) is undefined for the type Collections.
28374203,2,1,0,java.util.HashMap,"That said, would it be possible/convenient for you to just remove the call to synchronizedMap from your client code (and just use the HashMap that you're passing in directly)?"
28372439,2,0,3,java.util.HashMap,It works like a HashMap that has a doubly linked list running through its Map.Entry items.
28372439,2,0,3,java.util.HashMap,You can use the list for iteration and being a HashMap it will give you O(1) lookups.
28378556,2,0,1,java.util.HashMap,"Several things... 1) The HashMap class is generic and can take type parameters to make it a bit easier to use: HashMap<String, Operator>."
28385142,2,0,0,java.util.HashMap,"In one contrived example, if data were backed by a HashMap and multiple threads call various set methods concurrently, it could lead to an infinite loop."
28387712,2,0,0,java.util.HashMap,I would guess that users (your HashMap) is null
28390379,2,0,0,java.util.HashMap,My suggestion is to use the following strategy:  1st step: create a HashMap http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html  where you will save each line of the CSV you read.
28391828,2,0,1,java.util.HashMap,This is still cheaper than the original HashSet which delegates to HashMap which creates an entry for each element stored.
28392228,2,0,3,java.util.HashMap,"A HashMap is not ordered, so there is no 5th value of the map."
28394155,2,1,4,java.util.HashMap,Closest thing to that would be using HashMap.
28396008,2,1,1,java.util.HashMap,HashMap.
28401241,1,0,5,java.util.HashMap,In the example below I am using a HashMap.
28401241,1,0,5,java.util.HashMap,"I have been thinking of using TreeMap instead of HashMap, just to avoid overriding the hashCode because I have no idea how to do it properly."
28401363,2,0,3,java.util.HashMap,"When this happens, parts of the standard library like HashMap and TreeMap will suddenly start to behave very strangely."
28405981,1,0,0,java.util.HashMap,I want to prepare a HashMap in such way that  code.
28407307,1,0,1,java.util.HashMap,how to clear objects (HashMap) to be garbage collected - Java.
28407405,2,0,4,java.util.HashMap,"HashMap#clear will throw all entries out of the HashMap, but it will not shrink it back to its initial capacity."
28407405,2,0,4,java.util.HashMap,"If you do not intend to re-use the HashMap (with roughly the same amount of data), just throw away the whole HashMap instance (set it to null)."
28408795,2,1,1,java.util.HashMap,It looks like you are trying to implement something similar to HashMap (though HashMap uses an array and not an ArrayList).
28409818,1,0,2,java.util.HashMap,Hibernate: HashMap with a List of Objects Annotation.
28409818,1,0,2,java.util.HashMap,I thought about saving a HashMap in my Project entity  code.
28412784,2,0,5,java.util.HashMap,From the documentation for HashMap  Note that this implementation is not synchronized.
28480374,2,1,0,java.util.HashMap,"To resolve the issue, I've made the trim method synchronized and replaced usage of HashMap with ConcurrentHashMap and ArrayDeque with LinkedBlockingDeque (Concurrent Collections FTW!)"
28417232,1,0,0,java.util.HashMap,A singleton session Bean called StateAuctionFrontEnd  In the StateAuctionFrontAnd there is a HashMap and the methods for put and remove element from HashMap.
28423843,1,0,0,java.util.HashMap,What is the declaration that need to use when using HashMap ?
28423843,1,0,0,java.util.HashMap,Currently I'm doing a task that involves HashMap.
28423843,1,0,0,java.util.HashMap,And what I'm doing right now is to insert 3 variable in the HashMap.
28423843,1,0,0,java.util.HashMap,"the error is at the code mapAvMode.get(mode); where it says Type mismatch: cannot convert from HashMap<String,Drawable> to String."
28423907,2,0,1,java.util.HashMap,"Your avMode variable is a type String while the object return by mapAvMode is HashMap<String,Drawable>."
28423907,2,0,1,java.util.HashMap,"In a HashMap, the first parameter is the key (here String) and the second is the value (here Drawable)."
28423907,2,0,1,java.util.HashMap,"If you want to get the String value from this HashMap, you should do : avMode = mapAvMode.get(mode).get(yourParam); Update : sorry, I gave a wrong information."
28423907,2,0,1,java.util.HashMap,"mapAvMode.get(mode) will return a HashMap<String, Drawable> and if you write this :  mapAvMode.get(mode).get(yourParam);."
28423907,2,0,1,java.util.HashMap,So your avMode variable must be either a HashMap and this line will work : avMode = mapAvMode.get(mode) or it must be a Drawable and this line will work: avMode = mapAvMode.get(mode).get(yourParam);
28423914,2,0,0,java.util.HashMap,"returns a drawable that you are type casting to String change your avMode to drawable it will solve your problem,HashMap.get(key)is used to get the value on the basis of the key you passed,here our value is drawable."
28433791,2,1,3,java.util.HashMap,"If you always returned a new map, then there would be no way to choose between a HashMap or a LinkedHashMap, for example."
28429154,1,0,0,java.util.HashMap,"How to get value from HashMap depending on key name, while we are passing custom class objects as key and value."
28429891,2,0,0,java.util.HashMap,If you are going to use some class as key in HashMap or HashSet you need to add methods equals() and hashCode() to it.
28442385,1,0,0,java.util.HashMap,Breadth First Search using HashMap>.
28442385,1,0,0,java.util.HashMap,"Any help would be appreciated, just looking for a new way of thinking about how to loop through the HashMap."
28443840,1,0,0,java.util.HashMap,"I've been looking at Java Collections and Entities, where what I've written is a giant ArrayList<Item> and several HashMap<Item>"
28445622,2,0,1,java.util.HashMap,"Since you already have the Player object containing all the properties you need, why not put it in a HashMap instead of Arraylist, considering if you have a key to identify the specific Player?"
28449678,1,0,0,java.util.HashMap,I've been tipped about HashMap but have no idea how to do that.
28649407,2,0,1,java.util.HashMap,"If we had properly implemented equals() and hashcode() methods, the code would run fine even with the infinite loop as we would only have one element inside the HashMap."
28455181,2,1,3,java.util.HashMap,allows me to write new HashMap() rather than new java.util.HashMap() etcetera.
28455148,1,0,2,java.util.HashMap,Can I convert ArrayList<HashMap> type to List<Map> in Java?
28455148,1,0,2,java.util.HashMap,"I have two interfaces with two different but similar types - ArrayList<HashMap> and List<Map>, and I need to pass data from one interface to another."
28455171,2,0,5,java.util.HashMap,I would change the interface that accepts/returns an ArrayList<HashMap> to accept/return a List<Map> instead.
28455251,2,1,9,java.util.HashMap,then you are not allowed to pass in a List<HashMap> (which includes ArrayList<HashMap>).
28462658,1,0,3,java.util.HashMap,I'm trying to get a 'teaser' of a given String and put it as value into a HashMap.
28465872,2,0,0,java.util.HashMap,"If you need to store a key and a value, use HashMap code."
28466574,2,0,0,java.util.HashMap,Array(if you know the index) HashMap(if you kow the key)  HashMap looks like an easy way to implement your problem.
28482757,2,0,1,java.util.HashMap,"As we discuss above: Try to save your Marker object in the HashMap, and then calling markers.remove() instead of map.clear, finally use your code above to add additional markers."
28467634,1,0,0,java.util.HashMap,How to make Hibernate Spring Repository to return HashMap.
28467634,1,0,0,java.util.HashMap,Is there a way to get it HashMap  instead of List.
28523896,2,0,2,java.util.HashMap,"in a HashMap, and then assign the values."
28468154,1,0,0,java.util.HashMap,EDIT: Is there any way to do this without HashMap?
28468243,2,0,3,java.util.HashMap,"When you create your cat objects, put them in a HashMap: code."
28468890,1,0,0,java.util.HashMap,per-key lock other than whole map lock in HashMap.
28469190,2,0,0,java.util.HashMap,"If you use HashMap, you will have less code."
28469179,1,0,1,java.util.HashMap,"edit: Also, is there anything against having a HashSet<> and a HashMap<> containing the same class references?"
28469179,1,0,1,java.util.HashMap,"I've noticed that the HashSet<> is far more efficient at iterating than the HashMap<> and have been keeping a Map for lookup and a Set for iterating, is this bad practice?"
28470337,2,0,1,java.util.HashMap,Then iterate the array and store the value as key in a HashMap and values as a count of occurrences.
28470386,2,0,2,java.util.HashMap,Using a HashMap as a counter is more elegant than keeping a separate variable for each item.
28477595,2,0,0,java.util.HashMap,"The easiest way I can think of doing this is: (if it's me, I won't bother digging into the Gson parsing mechanism :-) )   parse the string/json to a general HashMap<Object, Object> map modify the specific key-values as you like."
28477595,2,0,0,java.util.HashMap,PS: You can parse a general HashMap from string by code like this: code.
28479941,2,0,4,java.util.HashMap,"The m reference is typed Map and so you can only use it to access the things the Map interface defines, but the object it's referring to is a HashMap instance."
28483509,1,0,0,java.util.HashMap,"So I have an ArrayList that want to make a HashMap of the occurrences of the pairs so B,C = 1 after running through ArrayList1 below."
28483509,1,0,0,java.util.HashMap,"I was planning on using HashMap< String, HashMap< String,Integer >> so that key in parent hashmap would be B and the child key would be C so the pair B,C = 1 after running through ArrayList1."
28490663,1,0,0,java.util.HashMap,Java HashMap iteration Map.Entry<> vs Entry<>.
28490663,1,0,0,java.util.HashMap,I am new to Java and writing java on a Mac using HashMap.
28491143,2,0,4,java.util.HashMap,HashMap makes absolutely no guarantees about the iteration order.
28491148,2,0,2,java.util.HashMap,"If you want an ordered HashMap, use LinkedHashMap"
28494495,2,1,2,java.util.HashMap,"This is how HashMap works ... though in Java 8, the linked list can be a binary tree."
28494495,2,1,2,java.util.HashMap,"In Java, the HashMap, Hashtable and related classes, use the key's equals method to differentiate keys with the same hashcode."
28494653,1,0,2,java.util.HashMap,"I'm creating a matrix in Java, which:  Can be up to 10,000 x 10,000 elements in the worst case May change size from time to time (assume on the order of days) Stores an integer in the range 0-5 inclusive (presumably a byte) Has elements accessed by referring to a pair of Long IDs (system-determined) Is symmetrical (so can be done in half the space, if needed, although it makes things like summing the rows harder (or impossible if the array is unordered)) Doesn't necessarily need to be ordered (unless halved into a triangle, as explained above) Needs to be persistent after the app closes (currently it's being written to file)  My current implementation is using a HashMap<Pair<Long,Long>,Integer>, which works fine on my small test matrix (10x10), but according to this article, is probably going to hit unmanageable memory usage when expanded to 10,000 x 10,000 elements."
28494653,1,0,2,java.util.HashMap,I'm thinking of switching back to a bog standard 2D array byte[][] with a HashMap lookup table for my Long IDs.
28495178,1,0,0,java.util.HashMap,I am trying to load a map from .properties file into a HashMap the properties file has the following: code.
28496684,1,0,0,java.util.HashMap,I have a List of HashMap objects in which hashMap object contains property name as key and value of property as value list>.
28496684,1,0,0,java.util.HashMap,How to convert each of these HashMap object into an object of my POJO class.?
28508931,2,1,5,java.util.HashMap,Alternative 3:  Your code abuses reduce by mutating the HashMap.
28513617,2,1,1,java.util.HashMap,Create a HashMap where the 1st String is the day of the week and the 2nd String is your link/url.
28517275,1,0,1,java.util.HashMap,As far as my understanding goes RMI registry maintains a HashMap sort of data structure that stores name and stub mapping where stub is essentially an Object - Atleast that what we get when we call Naming.lookup().
28517730,1,0,1,java.util.HashMap,Cassandra Hadoop MapReduce : java.lang.ClassCastException: java.util.HashMap cannot be cast to java.nio.ByteBuffer.
28518607,1,0,1,java.util.HashMap,entry is a HashMap entry.
28521437,2,0,0,java.util.HashMap,"Then, you would loop through the exams array a second time, saving every entry that has final exam type, using the indices saved in the HashMap."
28523964,2,1,1,java.util.HashMap,HashMap will apply the hash function on hashCode and will store the data in random bucket and hence when iterating over the hashMap you wont get the way you inserted the element into map.
28525476,2,0,1,java.util.HashMap,"If finding objects by association is what you need, HashMap from an artificial ID to the mutable object is the way to go."
28530760,2,0,2,java.util.HashMap,"One possible cause is that the reconstructed HashMap may not have the same capacity (number of buckets) as the original one, which might increase the frequency of hash collisions or (if the size is increased) decrease locality of main memory access (resulting in more cache misses)."
28530760,2,0,2,java.util.HashMap,"If this is indeed the case, try copying the data into a new HashMap with an appropriate loadFactor."
28530760,2,0,2,java.util.HashMap,"As for why serialization does not maintain capacity: HashMap customizes its serialization format (it makes no sense to serialize null for every empty table element) by providing writeObject and readObject methods, and ignores the capacity it finds in the input stream: code."
28533609,1,0,2,java.util.HashMap,HashMap Odd Behavior in Android.
28533609,1,0,2,java.util.HashMap,I have created a HashMap for an Android application and add objects as needed with the addVaue() function below.
28533874,2,1,0,java.util.HashMap,The only thing I can think of is that the remove() method for the HashMap is being called somewhere.
28533792,1,0,0,java.util.HashMap,How much Heap memory my HashMap would occupy?
28533792,1,0,0,java.util.HashMap,"If I have HashMap like below having 1000 entries inside, how much memory my HashMap will occupy on JAVA, 64 bit machine?"
28534010,2,0,0,java.util.HashMap,"For Java 8, the entry size depends on whether the HashMap uses a linked list or a binary tree for the hash chains."
28535917,1,0,1,java.util.HashMap,I can't do a HashMap because possible repetitions in object names.
28543192,1,0,1,java.util.HashMap,Can't invoke HashMap's getEntry via reflection on Java 8.
28543281,2,0,5,java.util.HashMap,getEntry() was never part of the public API for the HashMap class.
28543329,2,0,1,java.util.HashMap,Why on earth are you or who for you using reflection to get a private method to get an element from the HashMap?
28548928,2,0,2,java.util.HashMap,"If you use a HashMap, no."
28555345,2,0,0,java.util.HashMap,"You can either use apache commons DefaultedMap implementation In Java 8, you can use Map.getOrDefault You can always implement your own  HashMap to return default value for non-found keys?"
28555473,1,0,1,java.util.HashMap,"So, a HashMap wouldn't work here I think."
28558487,2,0,0,java.util.HashMap,"Instead, you can use HashMap in Java."
28559596,2,0,4,java.util.HashMap,"For a sparse array, a HashMap is an excellent choice."
28560167,1,0,0,java.util.HashMap,SimpleAdapter on HashMap does not work properly.
28560167,1,0,0,java.util.HashMap,"Which I use to populate an ArrayList<HashMap<String, String>> in order to diplay the json's items into a ListView."
28561499,2,0,1,java.util.HashMap,"Use a TreeMap instead of HashMap, which automatically sorts according to the key's natural order."
28561499,2,0,1,java.util.HashMap,"Note that it is better to declare the list and map variables to the interfaces, not the implementation, i.e. h is declared of type Map instead of HashMap, and a of type List."
28561615,2,0,1,java.util.HashMap,"To sort an ArrayList, let Events implement Comparable (simply compare the two IDs in the compareTo function) and you can sort it by Collections.sort(a); I am not sure I understand you HashMap problem correctly, but as manouti said, I would use a TreeMap (a HashMap is usually unsorted by definition)"
28562422,2,1,1,java.util.HashMap,"I am posting a code snippet, I think this will certainly help you  Map<String, List<String>> map = new HashMap<String, List<String>>(); //Add elements in map         Collection<List<String>> list = map.values();         List<String> values = new ArrayList<String>();         for (List<String> listValues : list) {             values.addAll(listValues);         }         for (String key : map.keySet()) {             if (!values.contains(key)) {                 System.out.println(""key ---->"" + key);                 System.out.println(""Values ------->"");                 for (String value : map.get(key)) {                     System.out.println(value);                 }             }         }"
29741320,2,1,3,java.util.HashMap,This would make the hashCode method   essentially useless and make Area objects nearly useless as keys in a   HashMap or Hashtable.
28564023,1,0,1,java.util.HashMap,"I have a HashMap to String Type Converter in my jar, say A.jar but a similar converter exists in another jar, B.jar (exposed by a third party in the same server) but I always want my type converter(present in A.jar) to get invoked in my camel route, when I call  code."
28564429,1,0,0,java.util.HashMap,"To handle multiple customers I'm using a synchronized HashMap when the key is a composition between the customer_id and the payment_method_id and the value is a POJO, containing the token and a creation date."
28566819,1,0,0,java.util.HashMap,In the Instance the features are represented with a HashMap.
28566819,1,0,0,java.util.HashMap,"So if I'm classifying a film review for example a feature might be a HashMap of (""funny"", 2), 2 being the occurrence of the word ""funny"" Although there's probably a better way I'm iterating over my instances to try and convert them to Weka Instances."
28567558,1,0,0,java.util.HashMap,This JFrame reads from a config file after initializing it and the entries of the config file will be copied to a HashMap.
28567558,1,0,0,java.util.HashMap,"I have a button to put further ""local"" entries into the HashMap (so the config file won't be touched after reading from it once)."
28574788,2,1,3,java.util.HashMap,"You could use a HashMap, to store the player that sent the duel request to a player: code."
28574788,2,1,3,java.util.HashMap,"If you wanted to check if a UUID exists in the HashMap, you could use duels.containsKey(uuid) Make sure to never store Player objects inside of HashMaps, because it can cause memory leaks if the player leaves the server, for instance."
28575818,1,0,2,java.util.HashMap,We know that EnumSet and EnumMap are faster than HashSet/HashMap due to the power of bit manipulation.
28611251,2,1,1,java.util.HashMap,"First, lets talk about HashMap (HashSet uses a HashMap internally, so they share most behavior); a hash-based data structure is powerful because it is fast and general."
28611251,2,1,1,java.util.HashMap,"Because of this, we can do better than HashMap; specifically, we can map every possible value to a unique integer, meaning we don't need to compute a hash, and we don't need to worry about hashes colliding."
28611251,2,1,1,java.util.HashMap,"Note that this is conceptually no different than a standard HashMap, it's simply avoiding a few computations."
28611251,2,1,1,java.util.HashMap,So how much faster than HashMap is EnumMap?
28611251,2,1,1,java.util.HashMap,"HashMap is already a very efficient data structure, so any optimization on it will only yield marginally better results."
28611251,2,1,1,java.util.HashMap,"In particular, both HashMap and EnumMap are asymptotically the same speed (O(1)), meaning as they get bigger, they behave equally well."
28611251,2,1,1,java.util.HashMap,This is the primary reason why there isn't a more general data-structure like EnumMap - because it wouldn't be worth the effort relative to HashMap.
28611251,2,1,1,java.util.HashMap,HashMap is so efficient that attempting to create a separate data structure for a very limited number of cases would add far more complexity than value.
28579824,2,1,1,java.util.HashMap,A simple way would be to iterate over the HashMap using a for each loop like: code.
28587205,2,1,1,java.util.HashMap,A HashMap would be the way to go.
28598017,2,1,1,java.util.HashMap,"If you wanted to get the target of a duel request from the selecting HashMap, you could use: code."
28598017,2,1,1,java.util.HashMap,"Also, you will have to switch around the order in which items are in the HashMap."
28592414,1,0,0,java.util.HashMap,"The problem is that Child is HashMap<Child, Object> but when I put Child.set(Child.children, Child.getChild().toArray()); to Map and then convert the Map object with Google Gson to Json it breaks with error: code."
28593301,2,1,5,java.util.HashMap,Here's a solution using a HashMap to reduce the number of if statements code.
28593441,1,0,1,java.util.HashMap,How to get key position from a HashMap in Java.
28593467,2,0,2,java.util.HashMap,From the HashMap JavaDocs:  Hash table based implementation of the Map interface.
28593467,2,0,2,java.util.HashMap,"(The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)"
28593467,2,0,2,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
28593479,2,0,2,java.util.HashMap,The keys on a Map and a HashMap are not ordered.
28596445,2,0,1,java.util.HashMap,The time values will be stored in different List<Double> for each entry in the HashMap<>.
28599940,1,0,0,java.util.HashMap,"Each line is a record of a transaction, for every new user encountered a list is made to store all of that users transactions and each list is put into a HashMap."
28601962,1,0,0,java.util.HashMap,The parentClass would then have a getFilter(String fileExt) method which selects the correct Class out of a HashMap or something similar.
28603807,2,0,2,java.util.HashMap,"You can use a HashMap<String,MyPojo> instead of a Set<MyPojo>."
28606414,2,0,1,java.util.HashMap,"It sounds like you need a HashMap<String,Player> to store the references to the Players you create."
28611973,2,0,3,java.util.HashMap,I'd add the objects to a HashMap where the name is the key and MyClass is the value being stored.
28612005,2,0,2,java.util.HashMap,"If you used a HashMap however, you could check the map for an element before adding it to the Map which is an O(1) operation."
28612005,2,0,2,java.util.HashMap,"It would look something like this: HashMap<String, MyClass> map = new HashMap<String, MyClass>(); when you add an element: code."
28612030,2,0,0,java.util.HashMap,"An even better solution would be to create a HashMap, on which you could say e.g."
28612171,1,0,0,java.util.HashMap,List and HashMap group.
28612171,1,0,0,java.util.HashMap,I have reached at a stage after reading some input files where I have an Array List of objects which includes a number and a color and from the other side I have a HashMap which includes these numbers with names associated.What I want to do is compare the numbers in these two collections and in the end group them by name.That's what I have at the moment and the output I want to succeed.
28612171,1,0,0,java.util.HashMap,INPUT HashMap  names        1-Bill 2–John 3-Jason 4-Jack 5-Michael 6-Chris ArrayList numbers    2-red 3-yellow 1-green 2-pink 2-gold 1-pink 4-brown DESIRED OUTPUT code.
28612639,2,0,0,java.util.HashMap,"Do change like  Convert map value as List like  HashMap<String , List<String>> theEnd =new HashMap<String ,List<String>>  First loop should be on names, than on numbers."
28613440,2,0,0,java.util.HashMap,"Or you can consider just using the built in HashMap<Integer, Worker> with the workers ID as the key's and then Worker as the value"
28614731,1,0,0,java.util.HashMap,Parse Json fields in Java and store as Array of HashMap.
28614731,1,0,0,java.util.HashMap,I want to parse it and store as Array of HashMap.
28615939,1,0,1,java.util.HashMap,"There are even some counterintuitive facts such as a HashSet being more memory hungry than a HashMap, since a HashSet contains a HashMap inside (http://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html)."
28619539,1,0,1,java.util.HashMap,I have been attempting to create a class that will go through a file and create a HashMap based on the values it finds and that can also write a HashMap to the same file with changed values incorporated with new and already existing ones.
28619539,1,0,1,java.util.HashMap,"The reading of the file into a HashMap is working, however, when I attempt to write said HashMap back to the file with different values and keys, the file does not change what so ever."
28620987,1,0,0,java.util.HashMap,Android HashMap Extract Different Objects.
28620987,1,0,0,java.util.HashMap,I have a method (below) that accepts a HashMap to insert into a database.
28620987,1,0,0,java.util.HashMap,"The objects in the HashMap are a mixture of Strings, ints and doubles."
28621049,2,0,1,java.util.HashMap,"""I get a NullPointerException as soon as it hits the first int"" It looks like you tried to insert int primitive type in the HashMap."
28621049,2,0,1,java.util.HashMap,You should instead either convert them to Integer or String objects before inserting them in the HashMap.
28621623,2,0,0,java.util.HashMap,"str, int, boolean, str, int, bool and create each Node object and put it in HashMap if object has names or in HashTable incase no names."
28623827,1,0,0,java.util.HashMap,Json string to HashMap can not deserialize.
28629072,1,0,0,java.util.HashMap,HashMap One key with multiple values without knowing what values you get.
28640574,2,1,2,java.util.HashMap,2: The use of of a HashMap keyed with MIDIEvent for currentEvents is a poor choice and inefficient.
28637466,2,0,1,java.util.HashMap,If you want to use a HashMap...
28637466,2,0,1,java.util.HashMap,Include the package that houses the HashMap class Declare variables of the type HashMap  Either as instance fields of a class or as local variables in a method/function  Use the variables you declared
28972158,2,0,0,java.util.HashMap,"If you are looking for a way to declare the HashMap at the time of declaration and you dont want the initialization to be in a method or block, you can use the following: code."
28638537,1,0,0,java.util.HashMap,Iterating twice over HashMap Java.
28638537,1,0,0,java.util.HashMap,I have a HashMap declared as  code.
28638537,1,0,0,java.util.HashMap,"Now in some other function I want to iterate over the HashMap again, so I did this code."
28639541,1,0,0,java.util.HashMap,Sorting an ArrayList / HashMap with key.
28639541,1,0,0,java.util.HashMap,and a HashMap code.
28639572,2,1,4,java.util.HashMap,inverted_index is a HashMap and HashMap is not sorted.
28642467,1,0,1,java.util.HashMap,Not one HashMap if you know other possibilities please to tell me
28642472,2,0,6,java.util.HashMap,"You can use a HashMap<Integer,List<String>>."
28646505,2,0,2,java.util.HashMap,"Instead, you can use HashMap."
28646772,2,0,1,java.util.HashMap,"At that point, the code that checks to see if it's in the HashMap will kick in, and the get_ID method will start taking longer as it continues to check values looking for an unused one."
28646686,2,1,1,java.util.HashMap,"hashCode is used by data structures that require a hashing function (HashSet, HashMap, etc...)."
28651337,1,0,1,java.util.HashMap,"I'm working on a program that takes in commands as string data and passes it to the correct handler, as defined by a HashMap."
28651337,1,0,1,java.util.HashMap,The value part of the HashMap is an object that implements the interface AbstractHandler.
28652993,1,0,0,java.util.HashMap,"My apparent options are..  Return the entire ConcurrentHashMap (sample code below--this sounds dangerous to me, given that CHMs are meant to be used by only one thread at a time) Create a new HashMap every time you want to return the whole thing."
28653155,2,1,5,java.util.HashMap,"The reason that we do this is that for HashTable, HashMap, HashSet, LinkedList and more, you can't access elements efficiently by index."
28654442,2,0,0,java.util.HashMap,is that your code is not dependent on the implementation of HashMap nor its API.
28654442,2,0,0,java.util.HashMap,If you later decide to substitute the HashMap for another implementation of the Map interface such as EnumMap then the only part of your code that changes is that line.
28654442,2,0,0,java.util.HashMap,"and then decided to change from HashMap to EnumMap, you'd have to: 1) Go all over your code and change every instance of HashMap to EnumMap."
28654442,2,0,0,java.util.HashMap,2) Redesign your code entirely if you depended on functionality that is present in HashMap and not EnumMap.
28654959,2,0,2,java.util.HashMap,"You don't need a try/catch block; HashMap.get will return null on an absent key, as specified in its Javadoc."
28654968,2,0,0,java.util.HashMap,What Try/Catch block should I use for HashMap.get()?
28655024,2,0,0,java.util.HashMap,"You really don't need to use try/catch for get method of HashMap because it doesn't throws any exception, BUT you can mark the create, select and delete methods as throws custom exception when id not found or index.get(id) be null: code."
28662442,1,0,0,java.util.HashMap,"There is a ""top-level"" class A on which I therefore can perform a CASCADE.ALL but I have a problem with a sub-object of Class B and a HashMap field."
28691264,2,0,0,java.util.HashMap,"A workaround is to use statementHandler.prepareResultSet(""SELECT * FROM"", resultMock, new HashMap());."
28679980,2,0,1,java.util.HashMap,"You could use a simple  HashMap<Parent, List<Child>> to allow multiple values to be stored with each parent key -simply append children as needed to the keyed list."
28677954,2,0,0,java.util.HashMap,"You can simply read the items one time and create a HashMap of (name, id)."
28677954,2,0,0,java.util.HashMap,"And then iterate on the items again and assign the parent id, getting it from the HashMap."
28680950,2,0,0,java.util.HashMap,"All Objects have method hashCode(), called by HashSet, HashMap, ecc.. You can override this method to define your own logic code."
28680462,1,0,0,java.util.HashMap,"I managed to do it with a HashMap, where String is the Rep Name and Integer is the count... but all the sudden I need to do a further breakdown of the postal code, so now I'm suddenly messing around with a 2D HashMap>, which seems like a nuisance to handle."
28681215,1,0,0,java.util.HashMap,"I have stored in an ArrayList() called trips which includes register flightNo(String) , country(String) , people(int) and from the other in a HashMap(float,String) called distances where the String is the country and the float is the distance.I want to compare the two collections(by checking the destination) and if is the same have an output where I get the flightNo ,destination,distance , people and another attribute(calculated from the distance and the passengers)."
28681215,1,0,0,java.util.HashMap,"The other input is like HashMap(float , String) in which float is the distance and the String is the country.It looks like this: code."
28681371,2,0,2,java.util.HashMap,"The HashMap documentation clearly states that  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
28681372,2,0,1,java.util.HashMap,"HashMap doesn't preserve order:  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
28681378,2,0,1,java.util.HashMap,HashMap does not guarantee ordering of any kind.
28681388,2,0,1,java.util.HashMap,"http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
28681435,2,0,0,java.util.HashMap,HashMap: Undefined ordering of its elements.
28681435,2,0,0,java.util.HashMap,"So, HashMap makes no guarantee about it's iteration order."
28682692,1,0,0,java.util.HashMap,"in java, HashMap getKey() why I have to call toString to have string type?"
28683074,2,0,2,java.util.HashMap,"It is build up with HashMap inside, which doesn't guarantee original keys order."
28687804,1,0,1,java.util.HashMap,"I want to fill up a HashMap<Integer,Double[]> code."
28693615,2,0,4,java.util.HashMap,"The equals() method is used by the Java system classes, for example in HashMap."
28693615,2,0,4,java.util.HashMap,"Since every object may be stored in HashMap, every object needs an equals() method."
28696106,1,0,0,java.util.HashMap,HashMap.get() returns null even though element exists.
28696106,1,0,0,java.util.HashMap,"From within my code, I add an entry to a HashMap."
28696106,1,0,0,java.util.HashMap,The problem was with the put() method of HashMap that takes as its first argument the key and then the value.
28699223,1,0,1,java.util.HashMap,Can we use HashMap to store shared data in HttpSession?
28699223,1,0,1,java.util.HashMap,We are using HashMap to store data in HttpSession (Jetty).
28699615,2,1,2,java.util.HashMap,Just replacing HashMap with ConcurrentHashMap may not be enough for that.
28701005,2,0,0,java.util.HashMap,With cloning I mean to copy the keys of the HashMap into a new Set and iterate over the set.
28701005,2,0,0,java.util.HashMap,Within the loop you can access the the HashMap value by the key you iterate over.
28704959,2,0,1,java.util.HashMap,"If you write a lot and only need to grab an iterator occasionally, try using a regular HashMap and then the method that you have that returns the iterator can simply make a new SortedMap, using the comparator, and push the data into the new map, but this is expensive, so would only be done if you really don't read often, don't have that much data, and can stand the wait on that read operation."
28709769,1,0,2,java.util.HashMap,I have an HashMap : code.
28713284,2,1,1,java.util.HashMap,From memory: the HashSet is actually backed by a HashMap and the basic look up process is:  Get the key hash it (hashcode()) hashcode % the number of buckets Go to that bucket and evaluate equals()  For a Set there would only be unique elements.
28713284,2,1,1,java.util.HashMap,http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/HashMap.java#HashMap.containsKey%28java.lang.Object%29 Also note that the Java 8 code has been updated and this explanation covers pre Java 8 codebase.
28713322,2,0,4,java.util.HashMap,The index is determined by hash & (array.length - 1) because the length of the Java HashMap's internal array is always a power of 2.
28718112,1,0,1,java.util.HashMap,I need to represent a java.util.HashMap (HashMap).
28720558,1,0,3,java.util.HashMap,Synchronized HashMap vs ConcurrentHashMap write test.
28720558,1,0,3,java.util.HashMap,I have written the write test for HashMap and ConcurrentHashMap.
28720558,1,0,3,java.util.HashMap,But the result has shown that HashMap a little more faster then ConcurrentHashMap.
28721843,2,0,0,java.util.HashMap,"The article you linked doesn't state that ConcurrentHashMap is generally faster than a synchronized HashMap, only that it scales better; i.e. it is faster for a large number of threads."
28721369,2,1,1,java.util.HashMap,"As such, HashMap is normally significantly faster than ConcurrentHashMap."
28731470,2,0,1,java.util.HashMap,"As I discussed above, you can try to save the what-you-want-remove marker in an ArrayList or in a HashMap."
28739943,2,1,0,java.util.HashMap,"There is no item in phaille2 that matches the key CYRILLE (there is only an item for ILL), so the HashMap returns null, and this is what you return."
28740992,1,0,0,java.util.HashMap,How can I get a specific value from a HashMap in Java.
28740992,1,0,0,java.util.HashMap,"I'm trying to get the value ID from the HashMap but I'm not getting there, this is the code code."
28740992,1,0,0,java.util.HashMap,"I'm trying to use the ID of HashMap 'perguntasmap2' and use that ID for the id2 in the DELETE , more specific code."
28741116,1,0,3,java.util.HashMap,I have two questions: 1- If the initializations of the structures (as an ArrayList and as an HashMap) are the best choises between the huge amount of Java structures.
28741214,2,0,1,java.util.HashMap,1- If the initializations of the structures (as an ArrayList and as an HashMap) are the best choises between the huge amount of Java structures.
28741345,2,1,2,java.util.HashMap,"HashMap has very good performance, but if you need sorted data you could use TreeMap instead."
28746512,1,0,0,java.util.HashMap,Alphanumeric sorting of ArrayList with HashMap.
28746512,1,0,0,java.util.HashMap,"I think it's useful to add that all the objects in my ArrayList are mapped strings: ArrayList<HashMap<String, String>> [edit] I have my array: ArrayList<HashMap<String, String>> al I then store the object: code."
28748246,2,0,0,java.util.HashMap,"I have an ArrayList<HashMap<String, String>>."
28748246,2,0,0,java.util.HashMap,I want to sort the ArrayList by one object in the HashMap.
28748246,2,0,0,java.util.HashMap,My HashMap has more than 1 object in it so I want to retain the entire index of the Array.
28748246,2,0,0,java.util.HashMap,"i.e., 1,2,3,4,... A,B,C,D,... References: http://sanjaal.com/java/206/java-data-structure/alphanumeric-string-sorting-in-java-implementation/  TL;DR Solution: In my custom Comparator function public int compare(object firstObj, Object secondObj) I needed to change the String values to HashMap object references/values."
28748246,2,0,0,java.util.HashMap,Once I did this I used Collections.sort to sort by the HashMap comparator rather than the Arrays.sort (Collections handles ArrayList/HashMaps).
28754022,1,0,0,java.util.HashMap,HashMap?
28756285,1,0,0,java.util.HashMap,Reading file into HashMap.
28758479,2,0,0,java.util.HashMap,If you can use a HashMap instead of String you could do something like this :  code.
28760866,2,0,2,java.util.HashMap,Java's HashMap implementation relies only on lower-end bits of the hashcode to select the bucket.
28760866,2,0,2,java.util.HashMap,"However, this code's motivation has expired long ago because HashMap already does its own bit spreading."
28764299,1,0,0,java.util.HashMap,Java HashMap inserts NaN.
28764299,1,0,0,java.util.HashMap,I'm trying to save some Double values with an Integer as an Index to a HashMap.
28768313,1,0,3,java.util.HashMap,"I'd like to call these things empty in my Java application:  null String of zero length 0 Integer, Float or Double false Any array of zero length Empty ArrayList or HashMap  Java has, for example, toString convention."
28768313,1,0,3,java.util.HashMap,"In my Settings class I operate with HashMap<String, Object>."
28770416,1,0,1,java.util.HashMap,Externalization Java Object - HashMap.
28770416,1,0,1,java.util.HashMap,"I am not sure, what is the best way to externalize a java HashMap, since I would know at reading time, how many keys are there and if any value is null."
28946135,2,0,0,java.util.HashMap,(In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ?
28777243,2,0,0,java.util.HashMap,"here is your code modified to read the file and populate a HashMap, in this case I am using a TreeMap to sort the hex fields in order, see if this works for you, public class FP extends JFrame implements ActionListener { code."
28779844,2,0,0,java.util.HashMap,"However, it is a good practice to override them properly, should you use this object as a key for HashMap (for example) in the future."
28779908,1,0,1,java.util.HashMap,How to fetch list from HashMap > to another list.
28779908,1,0,1,java.util.HashMap,"How to fetch list from HashMap > to another list in Android Suppose Hashmap<String, List<String>> myHashMap has values: code."
28780802,1,0,1,java.util.HashMap,Why HashMap method returns null object reference?
28780802,1,0,1,java.util.HashMap,"I've tried to make a HashMap method to get SQLite database data, but when I call the method it returns null reference that made my Android app stop working."
28780802,1,0,1,java.util.HashMap,This my code: HashMap method: code.
28781011,1,0,1,java.util.HashMap,Java using HashMap with switch statement.
28785151,1,0,0,java.util.HashMap,: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object java.util.HashMap.get(java.lang.Object)'.
28788716,2,0,0,java.util.HashMap,Here's an example of how you could achieve your desired result using a java.util.HashMap to get the maximum indices of tokens in the strings.
28795978,2,0,0,java.util.HashMap,There is no way to change HashMap content without calling put() or other mutation methods.
28798532,2,0,2,java.util.HashMap,See How can I convert JSON to a HashMap using Gson?
28797837,1,0,1,java.util.HashMap,"Then the fromJComponent method would look up some HashMap<Type, Type> and find whether there's a valid implementation for given JComponent."
28798671,1,0,0,java.util.HashMap,Adding items to a HashMap while looping with Iterator.
28798671,1,0,0,java.util.HashMap,"I have a program that loops through a HashMap using an Iterator, and inside the loop, I'm adding to the HashMap - which is causing a ConcurrentModificationException."
28798671,1,0,0,java.util.HashMap,The HashMap is set up like this -  code.
28799565,2,1,4,java.util.HashMap,Probably you're looking for HashMap.
28799565,2,1,4,java.util.HashMap,"This can help:  Create static HashMap<String, String> DIGITS and use put(""0"", ""zero""); put(""1"", ""one""); //etc.. to initialize it."
28800994,1,0,0,java.util.HashMap,Capitalize specific character from HashMap String.
28804085,1,0,1,java.util.HashMap,"I think the complexity isO(n), because that it go through the array only once and HashMap using fixed time to get an element."
28806313,2,1,3,java.util.HashMap,"Please note that above solution prints keys in a random order, due to usage of HashMap internally."
28807803,1,0,0,java.util.HashMap,Tried some annotation like @JsonDeserialize(as=HashMap.class) without success.
28808964,2,0,1,java.util.HashMap,"You can choose from Hashtable, HashMap, TreeMap based upon your subsequent need."
28808964,2,0,1,java.util.HashMap,In order to choose between first two see difference between HashSet and HashMap in Java.
28810845,2,0,1,java.util.HashMap,Make a HashMap (Key => Number Value => count times) Increase value every time when you find the number.
28818518,1,0,0,java.util.HashMap,How do I add up BigDecimals contained in a HashMap with Java 8?
28818518,1,0,0,java.util.HashMap,What is the easiest way to add to a BigDecimal contained in a HashMap in Java 8?
28818519,2,1,8,java.util.HashMap,Advantages to the Java 8 approach:  No need to initialize the original value (BigDecimal.ZERO) No need to refer to the old value (HashMap::get) and add it It's clean
28819683,2,0,0,java.util.HashMap,"What I'd do:  Read all the rules into a HashMap<String, String> for the left hand side and the right hand side."
28821040,2,0,0,java.util.HashMap,by  either using an import statement such as import java.util.Map;  or referring to your Map object with its fully qualified name as in the following snippet  java.util.Map myMap = new java.util.HashMap(); which compiles on my machine when inserted into some anonymous java program.
28820846,2,0,2,java.util.HashMap,"You will notice that everything is stored in an HashMap, then at each add, the return value will be true if the put call returned null, which will happen if there were no previous mapping for this key."
28822459,2,0,0,java.util.HashMap,"Instead, store them in a HashMap/Hashtable and then once the user input is finished convert it to an Array."
28823219,2,0,0,java.util.HashMap,"import java.util.Map;     import java.util.HashMap;     public class CityMap{     static Map<String, Integer> buildTable(){         Map<String, Integer> result = new HashMap<String, Integer>();         result.put(""NYC"", 100000);         result.put(""Boston"", 500);         return result;     }     public static void main(String[] args)     {         Map<String, Integer> cityTable = buildTable();     }  } Command is not defined, creating instance variables not to use them will do nothing at all, method can not be declared inside method; only inside class - you can declare class inside method (inner class) and method inside that class."
28831149,2,1,1,java.util.HashMap,"To include all cases, you could use a HashMap with a key generated from units and bars values."
28831011,2,1,3,java.util.HashMap,"So:  use one global lock and plain HashMap/ArrayList OR remove your global lock, use ConcurrentHashMap and plain ArrayList with synchronized on each particular instance of the list OR use a Queue (some BlockingQueue or ConcurrentLinkedQueue) instead of all of your current stuff OR use something like Disruptor (http://lmax-exchange.github.io/disruptor/) for inter-thread communication with many options."
28831963,2,0,0,java.util.HashMap,"Silently, HashMap uses the equals(Object o) of a value object (in this case Employee) for checking the existence of that object."
28838594,2,0,0,java.util.HashMap,"You can use a HashMap if you want, but it's not necessary."
28838373,2,0,1,java.util.HashMap,Consider using a HashMap instead of the ArrayLists.
28840048,2,0,34,java.util.HashMap,"The simplest use-site solution for this concrete problem would be to not use a ConcurrentHashMap, but just a HashMap instead: code."
28840048,2,0,34,java.util.HashMap,"Note: The HashMap.computeIfAbsent() or Map.computeIfAbsent() Javadoc don't forbid such recursive computation, which is of course ridiculous as the type of the cache is Map<Integer, Integer>, not ConcurrentHashMap<Integer, Integer>."
28840627,1,0,0,java.util.HashMap,Comparing Array Values and HashMap.
28840627,1,0,0,java.util.HashMap,I was making a rock paper scissors game and I'm supposed to save the last four throws of the user into a HashMap.
28840627,1,0,0,java.util.HashMap,"I have it so that if the pattern is already in the HashMap, then the value will be incremented by one, showing that the user have repeated that pattern one time."
28840627,1,0,0,java.util.HashMap,"However, when I compare the two patterns, the one in the HashMap and the one I just passed in, even though they are not the same, it returns that they are the same."
28840627,1,0,0,java.util.HashMap,"If I input R, it will save it in the HashMapbut when I input anything else, it will throw a NullPointerException, which I think because the new pattern is not stored inside the hashmap but I tried to get the value of it since the program thinks that it is equal to the one already inside the HashMap."
28841184,2,1,0,java.util.HashMap,The whole point of a HashMap is that you can see if it contains a certain key or not in O(1).
28841947,2,0,0,java.util.HashMap,If you need work with a String key you should use an HashMap as suggested in other answers.
28843125,1,0,0,java.util.HashMap,Reference value based HashMap.
28843125,1,0,0,java.util.HashMap,"Since HashMap already uses references to store values, may be any advantage in using explicit Reference<> object as values?"
28845594,1,0,0,java.util.HashMap,i.e. either using a HashMap to cache the ChannelHandlerContext and get it later from worker thread to response?
28883190,2,0,0,java.util.HashMap,"I think you can use a sub report, I know that you need a HashMap to build a sub report, then I propose the following: 1.- Create three classes: code."
28883190,2,0,0,java.util.HashMap,"3.- Create instances of Shift and fill your HashMap with these instances, put the number of shift as key in the HashMap."
28883190,2,0,0,java.util.HashMap,"4.- Finally, create your datasource as HashMap in iReport and use hashMapShift to fill your datasource."
28856781,1,0,6,java.util.HashMap,what is the best way to get a sub HashMap based on a list of Keys?
28856781,1,0,6,java.util.HashMap,I have a HashMap and I would like to get a new HashMap that contains only the elements from the first HashMap where K belongs to a specific List.
28856781,1,0,6,java.util.HashMap,I could look through all the keys and fillup a new HashMap but I was wondering if there is a more efficient way to do it?
28857617,2,0,0,java.util.HashMap,You asked for a new HashMap.
28857617,2,0,0,java.util.HashMap,"Since HashMap does not support structure sharing, there is no better approach than the obvious one."
28857617,2,0,0,java.util.HashMap,"If you don't absolutely require that new object created is a HashMap you could create a new class (ideally extending AbstractMap<K, V>) representing a restricted view of the original Map."
28857178,2,0,0,java.util.HashMap,"No, because HashMap doesn't maintain an order of it's entries."
28856997,2,0,1,java.util.HashMap,Instead of looking through all keys you could loop over the list and check if the HashMap contains a mapping.
28856997,2,0,1,java.util.HashMap,Then create a new HashMap with the filtered entries: code.
28857004,2,0,0,java.util.HashMap,you can use the clone() method on the K HashMap returned.
28858576,1,0,2,java.util.HashMap,"If I replace the HashMultimap<Long,Role> with a HashMap<Long, List<Role>> it also works fine."
28859092,2,1,2,java.util.HashMap,Those are the methods the HashMap is using for the lookup.
28859440,2,0,0,java.util.HashMap,HashMap does not guarantee any ordering.
28862826,1,0,0,java.util.HashMap,Hi I have the following HashMap  code.
28867552,1,0,0,java.util.HashMap,How to access data from a HashMap that is a Text type?
28867552,1,0,0,java.util.HashMap,I've encountered a minor issue: I have A Method that add values to  HashMap as follow: code.
28872749,1,0,0,java.util.HashMap,"Unchecked cast from Object to HashMap<Pattern, Integer>  Some help or pointers of what went wrong in my program would be greatly appreciated."
28873973,2,0,2,java.util.HashMap,You can utilize the HashMap as follows: code.
28873973,2,0,2,java.util.HashMap,"For populating your HashMap, I'm not an expert with Spring, so maybe someone can give you a better answer than this, but you can always just use a loop."
28873973,2,0,2,java.util.HashMap,"If you have a List of each as an example, you can construct your HashMap this way: code."
28874841,1,0,3,java.util.HashMap,"LinkedList, ArrayList, HashMap, HashSet ect."
28883146,1,0,0,java.util.HashMap,"My idea was to create a HashMap mapping all the IDs used in NotificationManager's notify( int id, Builder builder ) to the Builder objects."
28883146,1,0,0,java.util.HashMap,"When a notification is clicked, the notification disappears (due to my use of setAutoCancel(true) ), however, I don't know how to detect this so I can remove the Builder object from the HashMap as well."
28883146,1,0,0,java.util.HashMap,"The reason I would like to remove the Builder object is because when the HashMap's get(id) method returns null, I'll know to display ""New friend request from "" instead of ""New friend requests""."
28883715,1,0,2,java.util.HashMap,The reason I am asking is that I have this class where I am using a HashMap.
28883715,1,0,2,java.util.HashMap,"So I declared its member as a Map and when initializing it, based on some extra variable I initialize it as a HashMap with a certain size."
28883715,1,0,2,java.util.HashMap,So I cast it to HashMap.
28883813,2,0,3,java.util.HashMap,You don't have to cast to a HashMap.
28883849,2,0,1,java.util.HashMap,So I cast it to HashMap.
28884327,2,1,5,java.util.HashMap,You can use a HashMap that will map a Point to an Integer.
28884327,2,1,5,java.util.HashMap,The HashMap would store only the 4000-6000 points that you put into it.
28884612,2,0,2,java.util.HashMap,"Solution with HashMap is pretty good and clean, but if you need linear algebra algorithms it'd be unwise."
28888257,1,0,1,java.util.HashMap,"I have tried the following to set them :-  Using name value pairs as above Using a HashMap of (name, value) pairs Creating a ConfigurableEnvironment, retrieving the MutablePropertySources and setting my properties in it."
28889307,1,0,0,java.util.HashMap,I'm looking to populate a class with two HashMaps of types HashMap via spring injection.
28890831,2,0,1,java.util.HashMap,"From there, change all of the implementations of each of the settable pathfinding fields in Node to a HashMap with the id as the key."
28891735,1,0,1,java.util.HashMap,"The error is present in the line where I try and create my sortedMap; Eclipse states that I am not allowed to pass in myCompare as an argument since my inputted arguments must match the inputs to a HashMap<String, ArrayList<String>>."
28891783,2,0,3,java.util.HashMap,You can't have a sorted HashMap.
28891783,2,0,3,java.util.HashMap,"(The HashMap class is roughly   equivalent to Hashtable, except that it is unsynchronized and permits   nulls.)"
28892920,2,0,1,java.util.HashMap,Instead of storing your Person object in an ArrayList you can store then in a HashMap: code.
28892857,1,0,0,java.util.HashMap,I do find this post: Collision resolution in Java HashMap .
28892892,2,1,2,java.util.HashMap,HashMap contains an array of Entry class.
28893355,2,1,2,java.util.HashMap,HashMap has no function contains.
28893355,2,1,2,java.util.HashMap,The HashMap only has methods containsKey() or containsValue() Change: code.
28895892,1,0,2,java.util.HashMap,"First, I thought of using a HashMap with ids as keys  a HashMap is O(1) to get the data from the key; it can be sorted on values but it is inefficient when you want to get to a specific value (the whole collection gets iterated);  Then, I thought of using a TreeMap, with ordered values as keys  a TreeMap allows an efficient iteration over the ordered values; the ordered values aren't unique so it should be a TreeMultimap; but getting a value from its id will be O(log(n));  Using the two structures simultaneously doesn't seem like a good solution either as they would have to be synchronized."
28956479,2,0,0,java.util.HashMap,You can make wrapper-class for HashMap implementing Map and add a sorted set to store values.
28898171,2,0,1,java.util.HashMap,"HashMap is not sorted, and TreeMap is sorted by key only."
28898462,1,0,0,java.util.HashMap,Convert json to corresponding HashMap.
28898462,1,0,0,java.util.HashMap,How do we convert json to simplest HashMap with corresponding primitive wrappers?
28900813,1,0,0,java.util.HashMap,How to Retrive Different Bean class Objects from HashMap which was created in Spring Controller and added to Model Object.
28900813,1,0,0,java.util.HashMap,My Work towards the problem steps 1:Created a controller and i created 5 Bean  class objects in controller 2:Created HashMap.
28900813,1,0,0,java.util.HashMap,3:Added the bean class objects to HashMap.
28900813,1,0,0,java.util.HashMap,4:Added the HashMap to Model Object.
28902275,1,0,0,java.util.HashMap,"HashMap based on a long value, get/put o(1)?"
28902275,1,0,0,java.util.HashMap,"My thought to speed this up was create a HashMap which uses Long value as the key to guarantee o(1) look-ups, although this was just a concept and I haven't tried it yet."
28902513,2,0,0,java.util.HashMap,A short description about how HashMap does work: http://stackoverflow.com/a/18030257/357403
28902551,2,0,0,java.util.HashMap,"I agree with Necreaux In case you want the answer anyway, without any collusion you can have O(1) time complexity, but in java to detect and rectify collisions HashMap also uses the Equals method, and asymptotically you can still say that it's of O(1)  This might help you to find more details"
28902367,2,0,3,java.util.HashMap,You can just add the name as the key in a HashMap directly.
28904014,1,0,1,java.util.HashMap,"How is it possible for Java HashMap to perform constant time lookup O(1) for ""get"" operations?"
28904014,1,0,1,java.util.HashMap,"I understand the basics of how a HashMap works - hm.put(obj) finds the correct bucket to place the object into, based on the obj.hashCode value."
28904014,1,0,1,java.util.HashMap,But I am unclear on how HashMap.put and HashMap.get can be constant time O(1).
28904014,1,0,1,java.util.HashMap,"So as the number of objects added to a hashmap grows, so does the number of buckets - and since collisions are rare then doesn't that mean that the number of buckets grows almost linearly with the number of objects added, in which case HashMap.put/HashMap.get would be O(n) as it has to search over every bucket before it finds the right one."
28905223,2,1,0,java.util.HashMap,Think of a HashMap the way you think of an array.
28905223,2,1,0,java.util.HashMap,That's how a HashMap works: the trick is to make the index the same as the value -- essentially.
28904263,2,0,0,java.util.HashMap,For this case I'll recommend a HashMap because querying a Map has a time efficiency of O(1) (which probably you don't what it means but it's important in bigger applications) code.
28906093,2,1,2,java.util.HashMap,"EDIT: If you want to be able to call the arrays with a char, I'd suggest containing them in a HashMap: code."
28909841,1,0,0,java.util.HashMap,Storing HashMap Object in Google Cloud Storage (GCS).
28909841,1,0,0,java.util.HashMap,I am trying to upload a HashMap to GCS.
28909841,1,0,0,java.util.HashMap,The first thing I am doing is saving my HashMap to internal memory: code.
28909841,1,0,0,java.util.HashMap,"I am unsure as to how to input the raw data from the ObjectOutputStream back to my original HashMap ""testHash""."
28909841,1,0,0,java.util.HashMap,"Jenny UPDATE: The suggestion from Brandon Yarbrough allows me to read the internal file I created for my HashMap (""myViews"")."
28909841,1,0,0,java.util.HashMap,My new problem occurs when trying to upload the HashMap object to my GCS bucket.
28909841,1,0,0,java.util.HashMap,"From what I can tell the InputStream containing my HashMap (""ois"") is not being attached to my Storage Object."
28922418,2,0,1,java.util.HashMap,"You're using ObjectOutputStream to turn a Serializable Java Object, a HashMap in this case, into streaming data."
28911439,2,0,0,java.util.HashMap,"To make it faster, you should use something like HashMap."
28911439,2,0,0,java.util.HashMap,Create empty HashMap<Integer>.
28911439,2,0,0,java.util.HashMap,For every element check if your HashMap contains it.
28911439,2,0,0,java.util.HashMap,"If no, add element to HashMap."
28913648,2,0,0,java.util.HashMap,"your ChatApdater's getItem implementation returns an HashMap instance, and not a MatrixCursor ."
28915206,1,0,0,java.util.HashMap,I tried to look at the object content in debug mode: the groovy object contains 1 unique field (r$fields) which contains an empty HashMap.
28917340,2,0,5,java.util.HashMap,"For example: Put this in constructor responses = new HashMap<string, SomeAbstraction>(); responses.Put(CLIENT_REGISTERED, new ImplementationForRegisteredClient()); responses.Put(CLIENT_ABORTED, new ImplementationForAbortedClient()); where ImplementationForRegisteredClient and ImplementationForAbortedClient implement SomeAbstraction and call this dictionary via responses.get(responseType).MethodOfYourAbstraction(SomeParams); If you want to follow the principle of DI, you can inject this Dictionary in your client class."
28917502,1,0,0,java.util.HashMap,"where: key is a String and value is also a HashMap, lets call it valueMap."
28919081,2,1,3,java.util.HashMap,(Using a LinkedHashMap instead of a HashMap ensures O(n) on the last operation.)
28919113,2,0,0,java.util.HashMap,HashMap has insert retrieve remove in O(1)
28925521,1,0,1,java.util.HashMap,"Assigning a ""rank"" to a arrayList's items stored inside a HashMap."
28925521,1,0,1,java.util.HashMap,"I have a HashMap whose keys are numbers, representing the frequency of a word, and values are ArrayLists storing said words."
28925521,1,0,1,java.util.HashMap,"I store them inside a HashMap as such: {4 = [""Hello"", ""Bye""]} and I want to rank them based on their frequency."
28925521,1,0,1,java.util.HashMap,"I'm storing that rank and word inside a new HashMap<String, Integer>, since I need to look these up later."
28925521,1,0,1,java.util.HashMap,"I checked if the ""rank"" I'm putting in is already a value in my new HashMap, and if it is, then I added 1 to the rank in order to make it +1 bigger than the previous."
28925574,2,0,0,java.util.HashMap,"Getting the score for all words in your map will be easier if you use a TreeMap instead of a HashMap, and iterate to assign values."
28945064,2,0,0,java.util.HashMap,"How about using a List instead of a HashMap, since keys are constant and identical in each table."
28928167,2,0,0,java.util.HashMap,"When you do a lookup in a HashMap, you do it based on the key's hashCode."
28928167,2,0,0,java.util.HashMap,The IdentityHashMap gives the same behavior as a HashMap whose keys all use the default (identity-based) implementations for hashCode and equals.
28932917,2,0,6,java.util.HashMap,This keeps adding a reference to the same HashMap.
28933835,1,0,1,java.util.HashMap,"I've used and extended classes where the name looks like ArrayAdapter<String> or HashMap<String, String>, but how can implement the type inside the <> myself?"
28934795,2,0,0,java.util.HashMap,"If it is mutable, like StringBuilder or HashMap<String, String>, then the function is able to modify it and changes within the function will still be in place after the function call returns."
28936320,1,0,1,java.util.HashMap,"I have tried the following to set them :-  Using name value pairs as above List item using a HashMap of (name, value) pairs Creating a ConfigurableEnvironment, retrieving the MutablePropertySources and setting my properties in it."
28937880,1,0,2,java.util.HashMap,Synchronized on HashMap value object.
28939948,1,0,2,java.util.HashMap,Trying to iterate through HashMap and add to JComboBox.
28939948,1,0,2,java.util.HashMap,I'm trying to iterate through the HashMap and add the contents to the ComboBox.
28939948,1,0,2,java.util.HashMap,"NullPointerException, even though this HashMap is populated."
28943093,2,0,0,java.util.HashMap,"With counting each specific digit, I feel it would be easier to keep the number as a String (remove Integer.parseInt()) then count each char in a HashMap by value and count."
28944481,1,0,2,java.util.HashMap,Just one thing : my HashMap was in reality a WeakHashMap in my code.
28944481,1,0,2,java.util.HashMap,I change the class to HashMap and the problem disappeared.
28946606,1,0,1,java.util.HashMap,and generally will it be safe to use HashMap and synchronize on Entry objects?
28946606,1,0,1,java.util.HashMap,(i dont really imagine what will happen when HashMap is rehashing and some concurrent gets are executing...) UPDATE Here is the implementation i've come up with... altough ConcurrentHashMap is probably covering this case but idea was to lock only on an entry not the entire map... (well except on writes) code.
28947473,2,1,2,java.util.HashMap,"You could use another approach and lock on every entry once you get it from a common HashMap, however I don't think it's worth the effort."
28961658,2,0,0,java.util.HashMap,Error was in my printing of mapWithWeightPerPerson (HashMap): code.
28953856,1,0,0,java.util.HashMap,Accessing a HashMap value with a custom Pair Object as a key.
28953856,1,0,0,java.util.HashMap,I'm writing a 2d game and I've decided to use a HashMap to store my map data because I need to support negative indices for my map coordinates.
28953856,1,0,0,java.util.HashMap,I am using this Pair object as my key for my HashMap.
28953856,1,0,0,java.util.HashMap,"I have declared my HashMap as follows: HashMap<Pair, Cell> tiles = new HashMap<Pair, Cell>(); Next, I add entries to my map using: tiles.put(new Pair(0,0), new Cell()); 0,0 is obviously my unique x,y coordinate for this cell."
28953856,1,0,0,java.util.HashMap,"How do I access the fields and methods of Cell using the .get() method of HashMap, specific to an individual Pair?"
28953951,2,0,0,java.util.HashMap,They are needed in order to use a type in a HashMap.
28954391,1,0,0,java.util.HashMap,Java Iterate through a HashMap> and for each Key count how many Values the Key has.
28954391,1,0,0,java.util.HashMap,"I would think that you would iterate over the map's Keys and then check the value count by getting the size of the LinkedList since the Values to the Key are held in a LinkedList I can just call a size or length call for the LinkedList, but my main question is how to get inside the HashMap with an iterator first to do this?"
28958262,2,0,0,java.util.HashMap,You can use HashMap instead.
28958262,2,0,0,java.util.HashMap,HashMap maintains unique keys so when you try to add data with same key than it will overwrite the values of existing key.
28962007,2,0,1,java.util.HashMap,Now I want to make ArrayList and HashMap synchronized .Is there any way I can do the same without using Synchronized keyword ?
28965136,2,0,0,java.util.HashMap,"Use the lookup functionality of the Map, as Adam pointed out, and use HashMap as implementation of Map - HashMap lookup complexity is O(1)."
28964690,2,0,1,java.util.HashMap,(http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html) The rehash of the map is costly in performance.
28964690,2,0,1,java.util.HashMap,"Higher values decrease the   space overhead but increase the lookup cost (reflected in most of the   operations of the HashMap class, including get and put)."
28964690,2,0,1,java.util.HashMap,"If many mappings are to be stored in a HashMap instance, creating it   with a sufficiently large capacity will allow the mappings to be   stored more efficiently than letting it perform automatic rehashing as   needed to grow the table."
28967055,2,0,1,java.util.HashMap,For this you can use a HashMap code.
28970143,2,0,1,java.util.HashMap,"This is superior to using a HashMap since it is simpler, you don't need to spend memory by storing the values in a table and the cost of applying the formula to a value is about the same it would be to use hashCode()."
28971973,1,0,1,java.util.HashMap,Removal of Values from a HashMap.
28971973,1,0,1,java.util.HashMap,"In the early stages of learning about collections in java....  Is it possible to remove a value from a HashMap, but leave its corresponding key?"
28971973,1,0,1,java.util.HashMap,FYI - Reasons behind wanting to do this: I have a HashMap to store a Person (Key) and a Ticket (Value).
28971973,1,0,1,java.util.HashMap,"When a Person buys a ticket, they're added to the HashMap so I can reference which people already have a ticket."
28971973,1,0,1,java.util.HashMap,"If a person was still in my HashMap (but not associated with a Ticket) then I could just find that Key (Person) and add a new Value (Ticket) which I though would be more efficient than deleting them, and then re-adding them each time they want to purchase a ticket?"
28972117,2,0,1,java.util.HashMap,"If a person was still in my HashMap (but not associated with a Ticket) then I could just find that Key (Person) and add a new Value (Ticket) which I though would be more efficient than deleting them, and then re-adding them each time they want to purchase a ticket?"
28972139,2,0,0,java.util.HashMap,"The operations get, remove, and put in a HashMap are O(1), because they work with hashing the key."
28972139,2,0,0,java.util.HashMap,"On the contrary, removing a value from a HashMap is O(n), because it must scan through all entries looking for the value to remove."
28972139,2,0,0,java.util.HashMap,"If you must remove the ticket value directly, consider using another HashMap keyed by the ticket value."
28972780,2,1,5,java.util.HashMap,"(It talks about HashMap, but it also applies to HashSet.)"
28974907,1,0,0,java.util.HashMap,HashMap Getting Overwritten When Using put().
28974907,1,0,0,java.util.HashMap,"Every time that I call createEvent(), I am overwriting my calendar HashMap."
28974907,1,0,0,java.util.HashMap,I want to be able to add to my existing HashMap.
28974908,1,0,0,java.util.HashMap,Use of a 2D HashMap.
28974908,1,0,0,java.util.HashMap,I am thinking of using a 2D HashMap for that so that:  code.
28975415,1,0,3,java.util.HashMap,Below you can see an example taken from java.util.HashMap.getNode() code.
28976099,2,1,6,java.util.HashMap,"This is, by the way, another small advantage of the strategy of storing fields in local variables: It offers a (very limited, but sometimes handy) form of ""thread safety"": It is made sure that the length of an array (like the tab array in the getNode method of HashMap) can not change while the method is being executed."
28988144,2,0,1,java.util.HashMap,"With a HashMap, there is no hit."
28988144,2,0,1,java.util.HashMap,"In general, the HashMap's size will be related to the number of entries, the ArrayList will be sized based off the highest position."
28988144,2,0,1,java.util.HashMap,"With a HashMap, you would have a 3rd state of being unmapped which would technically be different from null."
28982533,2,0,1,java.util.HashMap,I'm sure with a little creativity you can change this implementation so it extends a HashMap rather than having one as a field.
28981797,1,0,5,java.util.HashMap,Get key from HashMap in Android by position or index.
28981829,2,0,1,java.util.HashMap,"Fetching the ""last"" key and fetch by index is not supported by HashMap."
28981829,2,0,1,java.util.HashMap,"If both key based and index based lookup is important to you, you could use a combined data structure that consists of both a List and a HashMap, but note that removal of elements will be O(n)."
28982253,2,0,0,java.util.HashMap,"HashMap does not have a concept of ordering, so getting the n-th entry does not make sense."
28982660,2,1,0,java.util.HashMap,"Your replacements should be of type Map<String, String>, specifically using the HashMap implementation."
28989312,1,0,0,java.util.HashMap,Structure to use for between values - something like a HashMap.
28993129,2,0,2,java.util.HashMap,"I would suggest to create a HashMap<String, List<List<String>>>, and group those lists there."
28994370,2,0,1,java.util.HashMap,To archieve your identifier problem you could use a HashMap: code.
29003749,2,0,2,java.util.HashMap,"for eg Map<String, Athlete> athletes = new HashMap<String, Athlete>();  This way updating later on receiveing the score s and performances becomes easier."
29010325,2,0,0,java.util.HashMap,Either do what Eran suggests or (looking at the use case at hand) change your logic to using a HashMap rather than a Set using the code String as key and the ProductModel object as value.
29013050,1,0,0,java.util.HashMap,Replacing Tokens using HashMap properties in java.
29016959,2,0,0,java.util.HashMap,is creating a HashMap that uses WeakReferences from its keys to its values code.
29019561,2,0,0,java.util.HashMap,An alternative can be to use ConcurrentHashMap instead of HashMap.
29021048,2,1,3,java.util.HashMap,You don't need a HashMap for this data at all.
29021167,1,0,0,java.util.HashMap,and a bit of searching suggests this happens when you're removing elements from a HashMap as you're iterating through it.
29021445,1,0,0,java.util.HashMap,I have a HashMap in the calendar class and I put things in it from the event class.
29021445,1,0,0,java.util.HashMap,"If I try to access/print the HashMap from either the class that it's stored in, or the tester class, I get an empty HashMap."
29024143,1,0,0,java.util.HashMap,What happened when a null converted to a HashMap value.
29024635,2,0,0,java.util.HashMap,"I would say put in all the values in a HashMap<Character,Integer> (eg A:1) and so on ... You can then get the values from the character stream inputted and add to the sum."
29029184,1,0,0,java.util.HashMap,I am building online music application in android and I am using HashMap.
29031061,2,1,1,java.util.HashMap,"If you want FIFO implementation, you implement Queue on either Arrays or LinkedList(yes, you can implement this technique on both these data structures) https://en.wikibooks.org/wiki/Data_Structures/Stacks_and_Queues  HashMap: Hashmap is used whenever you want to store key value pairs."
29034216,1,0,0,java.util.HashMap,Confusion with Map myMap = new HashMap() when Map is an interface.
29034216,1,0,0,java.util.HashMap,"openjdk version ""1.8.0_31"" I was just wondering why you would create a variable of type Map and instantiate it with a concrete type class of type HashMap?"
29037215,2,0,0,java.util.HashMap,You can save the data on  HashMap> The first String (key) is your name The second String (key) is your opt and his value (reault) is the object result.
29037716,1,0,0,java.util.HashMap,How to return HashMap object fields.
29037716,1,0,0,java.util.HashMap,I currently have the following HashMap in a Holiday class.
29037716,1,0,0,java.util.HashMap,"In my GUI class I just use the .get HashMap method, this will return the toString."
29037716,1,0,0,java.util.HashMap,"I'm wanting to also print out the HashMap elsewhere, but with returning different fields."
29037716,1,0,0,java.util.HashMap,Or how do i return the individual fields from the Location class which is an instance of in the HashMap.
29039452,1,0,0,java.util.HashMap,"It has HashMap<String, List> and for every event name called (like click, mouseover, valueChanged...) it will call all callback in coresponding List: code."
29041697,2,0,2,java.util.HashMap,The HashMap is not sorted in any way.
29041697,2,0,2,java.util.HashMap,"If you want the order of the elements during the iteration to be the same as the insertion order, you should use a LinkedHashMap instead of a HashMap."
29041697,2,0,2,java.util.HashMap,"In general, I basically always use LinkedHashMap instead of a plain HashMap."
29041697,2,0,2,java.util.HashMap,"Regarding the performance: The insertions and deletions in a LinkedHashMap may be a tad more expensive than for a HashMap, but these performance differences are negligible in most cases."
29041648,1,0,0,java.util.HashMap,Java serializable HashMap to ByteArray for creating a blob.
29041734,1,0,0,java.util.HashMap,StickyListHeaders with HashMap with String keys that hold ArrayList.
29041734,1,0,0,java.util.HashMap,"I am pulling my data from an API, and I have built it into a HashMap with keys that will be the section header strings, and those keys map to ArrayList objects that then hold my custom objects for the ListView."
29041734,1,0,0,java.util.HashMap,"I have my HashMap created, and figured I would start with: code."
29042874,1,0,0,java.util.HashMap,Accessing same HashMap from MainGUI (jDialog) into another jDialog class.
29042874,1,0,0,java.util.HashMap,Main GUI(jDialog) - creates an instance of a class which has a HashMap (Lets call this HashMapClass) within this GUI.
29042874,1,0,0,java.util.HashMap,Able to access the methods to return the HashMap inside this class.
29042874,1,0,0,java.util.HashMap,"Secondary GUI(jDialog) - Wanting to access the same instance of the class which has the HashMap, not create a new instance inside this jDialog."
29042874,1,0,0,java.util.HashMap,(want to access the same HashMap with the same data inside) This is what i've tried so far.
29044350,1,0,0,java.util.HashMap,"private HashMap<String,Car>hmCar; //Hashmap to hold Cars, the key pair value consists of (Vin, Car Object) The error happens on hmCar.put(car.getVin(), car); which I dont understand why, I tried debugging up to the point and car does hold the correct values."
29044598,2,0,1,java.util.HashMap,"the error is NullPointException, are you sure you do this  hmCar = new HashMap<String, Car>();  before you put the entry in."
29047103,1,0,0,java.util.HashMap,I am storing all the submitted tasks in a HashMap with ids.
29047171,1,0,1,java.util.HashMap,"I have 2 ArrayList<HashMap<String,String>>  hashMapFinishedList hashMapUnfinishedList  Both hashMap have same attributes with different values,  I want to make a comparison between these 2 Arraylist, and if it has the same value, than it has to be deleted from the 1st hashmap, I tried this code : code."
29047701,2,0,2,java.util.HashMap,"Another option is to use a HashMap<String,List<String>> instead of your HashSet<List<String>>, provided that you can associate some unique String key with each of your Lists."
29049895,1,0,3,java.util.HashMap,An If Else or a HashMap?
29049895,1,0,3,java.util.HashMap,I'm writing some code in Java to check in which quadrant a coordinate is and I was wondering which method is more efficient to check this: a if-else block or the use of a HashMap.
29049895,1,0,3,java.util.HashMap,A HashMap would look like this: code.
29049910,2,0,0,java.util.HashMap,"Most likely HashMap, but it depends on couple of things:  the Coordinate class have to have efficient equals() and hashCode() implementation whether the Coordinate is immutable and the hash code could be cached which kind of coordinates you will be passing"
29049917,2,0,1,java.util.HashMap,If you are only ever going to have 4 Coordinates then it is likely faster to use if/else than using a HashMap.
29052565,1,0,1,java.util.HashMap,"I have a ModelMap variable ""model"", the value object contained in the model map itself is a HashMap."
29052651,2,0,1,java.util.HashMap,You might want to take a look at this solution How to iterate HashMap using JSTL forEach loop?
29054503,2,1,2,java.util.HashMap,This is useful for instance if you intend to use your object as a key in a HashMap or as an element in a HashSet.
29054616,1,0,0,java.util.HashMap,"After sorting HashMap by Keys, how can I sort by Values if Keys Match."
29054616,1,0,0,java.util.HashMap,"So using a TreeMap, I was able to sort my HashMap by keys (dates), but the next thing that I was to accomplish is that if the date is the same, then I want to sort by values (time)."
29060579,1,0,0,java.util.HashMap,JSF ApplicationScoped HashMap - ConcurrentHashMap.
29061088,2,0,3,java.util.HashMap,"There are more robust solutions with a HashMap<Integer, Integer> where the key is the candidate id, and the value will be the vote value."
29066297,2,0,0,java.util.HashMap,"If there are more, then the solution would be to keep the position of those headers in a HashMap, where the key is the name of the header."
29067503,1,0,1,java.util.HashMap,How to sort a HashMap by Keys and then Values?
29067503,1,0,1,java.util.HashMap,I have the following HashMap code.
29067503,1,0,1,java.util.HashMap,"Now my question is, how can I sort my HashMap first by keys and then if the same key has multiple values (events scheduled with different times) sort it my values after that?"
29067964,1,0,0,java.util.HashMap,How can I map by multiple parameters as keys in HashMap?
29068153,2,1,2,java.util.HashMap,"then create a HashMap<Pair<Integer,Integer>,BufferedImage> ."
29068153,2,1,2,java.util.HashMap,"You could also implement the hashCode() and equals(Object) methods, so that the HashMap can use them."
29068889,1,0,0,java.util.HashMap,"How to sort a HashMap by Key and then Value using Comparator (pasting all code, post will be long)."
29088151,2,0,2,java.util.HashMap,"But, I'm pretty sure that you're talking about a HashMap when you say that you would like to store a list of friends for players."
29088151,2,0,2,java.util.HashMap,A HashMap is like a collection of variables based on a key.
29088151,2,0,2,java.util.HashMap,"Make sure to NEVER use the Player object as a type parameter in an ArrayList, HashMap, HashSet, or anything like that."
29088151,2,0,2,java.util.HashMap,"Then, whenever you want to get the list of a player's friends, you could use HashMap.get(): code."
29088151,2,0,2,java.util.HashMap,"Then, if you wanted to set the player's friend list to a new value, you could use HashMap.put(): code."
29069482,2,0,0,java.util.HashMap,Use HashMap for matching.
29075100,1,0,5,java.util.HashMap,Now I want to iterate multithreaded through the list and save the computation for each pixel in a HashMap.
29075100,1,0,5,java.util.HashMap,The Problem is sometimes a heap problem or simply that the size of the HashMap is less than the list size.
29076193,1,0,1,java.util.HashMap,"HashMap is not complex enough to hold that information, but I like the way it will only take unique values, and it is eash to iterate over, and pass around."
29081892,2,1,1,java.util.HashMap,"by the way, i think the problem you have with HashMap (the one that you say got overridden) is because you didn't override equal and hashcode method as these two methods is used to place the object in HashMap."
29079855,2,0,0,java.util.HashMap,Use HashMap.
29079855,2,0,0,java.util.HashMap,HashMap has O(1) operations (theoretically) and forbids duplicate keys.
29080591,2,1,0,java.util.HashMap,"Try a HashMap like HashMap<String, CarTuple>() Where the String is the reference of the object (like an id)."
29081819,1,0,0,java.util.HashMap,Then I'm using this Drawable in HashMap's put method to set it as a listView item.
29081819,1,0,0,java.util.HashMap,EDIT :  My HashMap code  :  code.
29083030,2,0,0,java.util.HashMap,"Use List rather than ArrayList, and Map rather than Hashmap, so HashMap<Integer, LinkedList<Integer>> adj; becomes Map<Integer, List<Integer>> The method name addeEgde - c'mon!"
29083313,1,0,0,java.util.HashMap,Iterating and processing HashMap for millions of data.
29083313,1,0,0,java.util.HashMap,"I have been asked for iterating and processing HashMap having custom object , say Employee as key and employee's age as value."
29085912,1,0,0,java.util.HashMap,Can't retrieve Double from HashMap.
29085912,1,0,0,java.util.HashMap,Somehow I can't retrieve a Double from a HashMap I've made using Gson.
29085912,1,0,0,java.util.HashMap,I create the HashMap in the following way: code.
29086304,2,0,0,java.util.HashMap,"You can change your HashTable to a HashMap<String, Integer> (http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html) since the put of HashMap will not add a new key:  Associates the specified value with the specified key in this map."
29096218,2,0,5,java.util.HashMap,"On the semantic level, you are trying to cast the result of map.values(), which will actually return an instance of an internal type of HashMap that derives directly from AbstractCollection, to List."
29096046,2,0,1,java.util.HashMap,"This depends on the internal implementation of the specific map (in your case, the implementation of the HashMap#values() method returns an implementation of the AbstractCollection interface, called Values and this is not a List)."
29105688,2,0,0,java.util.HashMap,Here is an Java implementation which will convert all child objects into an HashMap code.
29103556,1,0,0,java.util.HashMap,how to use mapBy when collection is an HashMap and not a simple List?
29105314,2,1,0,java.util.HashMap,You can use HashMap which has id as key and Set<Product> as values (if you want not to have duplicates or list if you want order of products).
29106693,2,1,1,java.util.HashMap,"For a Hashtable (and HashMap) to store and retrieve keys properly, the key type must override hashCode and equals properly."
29106743,2,0,1,java.util.HashMap,"You need to override the hashCode and equals method like so, so that it may be stored and retrieved from the HashTable/HashMap, etc.. code."
29107466,2,1,10,java.util.HashMap,"If you can change your data structure, then some sort of Map would be better (HashMap is typically a good choice)."
29108552,1,0,0,java.util.HashMap,Matching Keys in a HashMap.
29109152,1,0,0,java.util.HashMap,Possible to sum up object values in HashMap?
29109152,1,0,0,java.util.HashMap,"I've just started using HashMaps in Java, and I was wondering if it's possible to sum up the object values in the HashMap."
29109152,1,0,0,java.util.HashMap,"I have different objects with the value weight, and I'm trying to return the total value of the weight as totalWeight, but can't seem to do so using HashMap."
29109733,1,0,0,java.util.HashMap,"I am trying to figure out how to change over my code from writing/reading from a database, to storing items into an ArrayList HashMap of Strings."
29118935,1,0,4,java.util.HashMap,"In the first scenario applicable to ""LinkedHashMap"", ""HashMap"" and ""List""?"
29126601,1,0,1,java.util.HashMap,Sorting a HashMap by Keys using TreeMap.
29126601,1,0,1,java.util.HashMap,"I need to sort a HashMap by keys using TreeMap, then write out to a text file."
29126601,1,0,1,java.util.HashMap,I have looked online on sorting and found that TreeMap can sort a HashMap by keys but I am not sure if I am utilizing it incorrectly.
29130948,1,0,0,java.util.HashMap,Returning value of a HashMap.
29131039,2,0,1,java.util.HashMap,getting only the first item of a HashMap would be something like: code.
29132242,2,1,3,java.util.HashMap,Java LinkedHashMap is a subclass of HashMap - the analogy is the same as LinkedList where you maintain the trace of the next node.
29132242,2,1,3,java.util.HashMap,"However, it says it cannot ""Guarantee"" that the order is maintained, so don't ask your money back if you suddenly see an insertion order is maintained with HashMap"
29132966,1,0,2,java.util.HashMap,TreeMap in Intent becomes HashMap.
29132966,1,0,2,java.util.HashMap,But somehow Android converts it into a HashMap on its way.
29132966,1,0,2,java.util.HashMap,"In a newly created project with two blank activities, running MainActivity in the emulator produces a java.lang.ClassCastException: java.util.HashMap cannot be cast to java.util.TreeMap."
29137250,1,0,2,java.util.HashMap,Can we implement it just like we implement a HashMap using a LinkedList and an object(Cell) which holds a Key and Value?
29137296,2,0,2,java.util.HashMap,Note: the HashSet for example is actually just an adapter for the HashMap.
29137296,2,0,2,java.util.HashMap,"the add-method of HashSet simply uses HashMap.put(value , SomeDummyValue)."
29137748,1,0,0,java.util.HashMap,Writing HashMap to Excel.
29137748,1,0,0,java.util.HashMap,"my requirement is to write a HashMap into an excel using Apache POI, the key in the hashmap is my cell-id and the value in the hashmap is the value to be set into that cell."
29139497,1,0,1,java.util.HashMap,Copying HashMap to another HashMap.
29139497,1,0,1,java.util.HashMap,I am having a problem copying a HashMap A to HashMap B.
29139497,1,0,1,java.util.HashMap,HashMap has 2 things.
29139497,1,0,1,java.util.HashMap,What I do first is populate HashMap A with 2*2 elements.
29139497,1,0,1,java.util.HashMap,Then I copy HashMap A to HashMap B by adding A in constructor.
29139497,1,0,1,java.util.HashMap,My idea is so I can go back to default HashMap A by using HashMap B in the constructor(See later) code.
29139497,1,0,1,java.util.HashMap,I clear HashMap A and make a new HashMap with HashMap B as the constructor.
29139497,1,0,1,java.util.HashMap,"However, when I changed tile (1,1) to ON on HashMap A , it updated HashMap B as well."
29139497,1,0,1,java.util.HashMap,"I thought making a new HashMap with a constructor will make a new copy of it, but doesn't seem to work."
29139497,1,0,1,java.util.HashMap,I want to somehow get the Original contents of HashMap A without me trying to loop over the elements again.
29139497,1,0,1,java.util.HashMap,Here's what is getting printed before clearing HashMap A code.
29139497,1,0,1,java.util.HashMap,Here's what is getting printed After clearing HashMap A and then copy B to it.
29139538,2,0,0,java.util.HashMap,"However, when I changed tile (1,1) to ON on HashMap A , it updated HashMap B as well."
29139541,2,0,0,java.util.HashMap,"Map<Point,Tile> B = new HashMap<Point,Tile>(A); makes a shallow copy of your A map."
29139541,2,0,0,java.util.HashMap,"Map<Point,String> A = new HashMap<Point,String>(); works  because String is immutable, so unlike your Tile instances, you can't change a String's state."
29139895,2,1,1,java.util.HashMap,You need to deep copy your HashMap by cloning the Tile objects.
29139895,2,1,1,java.util.HashMap,"By default, the HashMap constructor is doing a shallow copy."
29147698,2,0,0,java.util.HashMap,"Your mocked method getLayoutIdsFromTemplate is receiving a typed HashMap<String, Object> as parameter, not a simple HashMap."
29147698,2,0,0,java.util.HashMap,"2) In your test class, match the parameter using Mockito.anyMapOf(String.class, Object.class)) instead of Mockito.any(HashMap.class)): code."
29144633,1,0,0,java.util.HashMap,Grab a specific HashMap entity and grab details.
29144633,1,0,0,java.util.HashMap,"However, this returns true if the numberofHouses matches any of the entities within the HashMap, instead of the specific house number that i have entered."
29144844,2,0,0,java.util.HashMap,"If you want to access the details from a specific entry in the HashMap, you use the get(Object key) method."
29151840,2,0,0,java.util.HashMap,"It sounds like what you want is a HashMap<Test, String>, and you're going to have to enforce the restriction to the specified range yourself."
29153460,2,0,0,java.util.HashMap,You'll have to extend HashMap unfortunately.
29153213,2,0,0,java.util.HashMap,Another option would be to your your own Map type (backed by a HashMap or EnumMap).
29154424,2,0,1,java.util.HashMap,"Note: the HashSet assumes there are no duplicate numbers, if there are use a HashMap."
29154341,2,0,1,java.util.HashMap,"Probably the most easy way would be use a map (HashMap for example)... Use the Date as a key, then put all your Foo objects into it."
29156368,2,1,1,java.util.HashMap,"You could storage the markers in a simple ArrayList<Marker> another alternative is storage them in a HashMap<int,Marker> Where int is the id."
29157600,2,0,3,java.util.HashMap,"* Collections like HashTable and HashMap conform to this contract, and will never drop items due to duplicate hashCodes, even when excessively duplicated like in the example above."
29157372,2,1,8,java.util.HashMap,"HashMap implementations typically deal with collisions by storing a list behind the scenes, but they include a check that ensures that you don't get everything in the list as a match, just the ones that really match."
29158516,2,1,0,java.util.HashMap,Then at the very end you can get the HashMap's internal set with myMap.entrySet().
29160001,2,0,0,java.util.HashMap,"Failure to do so will result in a violation of the general   contract for Object.hashCode, which will prevent your class from   functioning properly in conjunction with all hash-based collections,   including HashMap, HashSet, and Hashtable."
29159818,2,0,0,java.util.HashMap,"Data structures, such as HashMap, depend on the contract."
29159818,2,0,0,java.util.HashMap,A HashMap achieves magical performance properties by using the hashcode to bucketize entries.
29163233,2,0,0,java.util.HashMap,"If you take an HashMap between letter and their count, you will just of to go through the String one time, incrementing your counter while iterating on the loop."
29163261,1,0,0,java.util.HashMap,Is key stored in HashMap actaully points to the value in HashMap.
29163261,1,0,0,java.util.HashMap,"In a HashMap we know when we store the key and value , actually a Map.entry object is populated where Map.entry.key is mapped to key inserted in hashMap and Map.entry.value is mapped to value inserted in hashmap ."
29164165,2,0,1,java.util.HashMap,"A null key is also valid key in a HashMap, and its Hashvalue equals 0."
29164165,2,0,1,java.util.HashMap,To remove a Object from HashMap call the .remove(key) method instead of nullifying keys and depending on GC
29163681,1,0,1,java.util.HashMap,"I get JSON from php server, I save strings and id position (because I need two strings I use HashMap."
29164121,1,0,0,java.util.HashMap,EDIT: I want duplicate pairs so a HashMap won't work.
29164797,2,1,1,java.util.HashMap,"It looks like you need some hacked HashMap, which will sum values instead of replacing them: code."
29167962,1,0,0,java.util.HashMap,How do I return a HashMap populated with multiple rows using mybatis?
29167962,1,0,0,java.util.HashMap,"saying it can't find the type ""java.util.HashMap""."
29171869,2,0,0,java.util.HashMap,"Next read your file, parse it and save it in a HashMap with key as the roll number."
29177505,1,0,0,java.util.HashMap,"Then suddenly the map which contains StrategyPairs (a wrapper class for two strategies) is messed up as I explained before... EDIT: When I print the HashMap I still get the same result as above, but the following code: code."
29179802,2,0,0,java.util.HashMap,"By Underlying implementation means, by using Map interface, you could inject HashMap or TreeMap or any other Map as long as it implements Map using Runtime polymorphism and making your code loosely coupled and designing by contract rather than by implementation."
29179847,2,0,0,java.util.HashMap,Regarding the link you have mentioned: in the first case HashMap is casted to a HashMap while in the second case HashMap is casted to a Map.
29179847,2,0,0,java.util.HashMap,Though you will have two different access interfaces to those objects their underlying object (i.e. what they really are) is the same HashMap.
29182538,1,0,6,java.util.HashMap,Large number of Object in Java (with HashMap).
29182538,1,0,6,java.util.HashMap,"I think it's because of HashMap, but I don't how to reduce this?"
29185743,2,0,3,java.util.HashMap,"Here, I'm primarily trying to explain why you are observing such an excessive memory consumption, and what you could do about this (if you wanted to stick to the HashMap) : A HashMap that is created with the default constructor will have an initial capacity of 16."
29183755,1,0,1,java.util.HashMap,"Then I construct an instance of this class, make two HashMap and assign each document to these hasmaps."
29185430,2,0,0,java.util.HashMap,"Then you can, for example, store the parts you want to access quickly in a HashMap."
29187292,1,0,0,java.util.HashMap,A HashMap has constant access time but does not allow duplicates.
29187292,1,0,0,java.util.HashMap,"I know I could make my own HashMap which allows duplicates, but I want to use an already existing data structure."
29187862,2,0,0,java.util.HashMap,Scope should be singleton Type/class may be java.util.HashMap You can then @Autowired that bean in your components.
29191846,2,0,0,java.util.HashMap,sending HashMap by angularjs $http.get in spring mvc It works fine just a bit extra @RequestParams but on the better side you can send additional information too and not only the respective object.
29192597,1,0,1,java.util.HashMap,How to retrive values when collision occured in HashMap?
29192611,2,0,8,java.util.HashMap,HashMap knows how to handle multiple keys having the same hashCode.
29192611,2,0,8,java.util.HashMap,"As long as the two keys are not equal to each other (using equals of the class the keys belong to), HashMap can distinguish between them even if they share the same hashCode."
29192611,2,0,8,java.util.HashMap,"When you search for one of the keys (by calling get or containsKey), the HashMap would locate the map index that corresponds with the the hashCode and search the entries in the linked list sequentially, using equals to identify the requested key."
29194333,1,0,1,java.util.HashMap,How to sort HashMap entries in alphabetic order?
29194359,2,0,1,java.util.HashMap,Use TreeMap instead of HashMap.
29194416,2,1,2,java.util.HashMap,"This question describes differences between various implementations of Map: Difference between HashMap, LinkedHashMap and TreeMap"
29197899,1,0,2,java.util.HashMap,Accessing a HashMap from a different class.
29197899,1,0,2,java.util.HashMap,How can I access the data in this HashMap in a different class?
29197973,2,1,2,java.util.HashMap,Create your HashMap as an instance variable and provide a method to access it into your class API: code.
29198004,2,0,1,java.util.HashMap,"You can either make your HashMap public, or create a getter for it: code."
29198004,2,0,1,java.util.HashMap,"or, if you also make both the getter and the HashMap static: code."
29217929,2,1,1,java.util.HashMap,"Maybe you need to use a Map, you can use TreeMap or HashMap with another collection to store all values of each type of your Strings, it would be something like this: code."
29205620,2,0,1,java.util.HashMap,"Thread unsafe collection will exhibit this behavior of throwing ConcurrentModificationException - examples are Arraylist, HashSet, HashMap, TreeMap, LinkedList... Thread safe collections like vector will also exhibit this behavior if the collection is altered while it is being iterated without using the iterator in use."
29207744,1,0,2,java.util.HashMap,How to populate HashMap using Lambda Expression.
29207744,1,0,2,java.util.HashMap,Requirement to collect Id as key and Summary values to HashMap from list of SomeOrder objects.
29208595,2,0,1,java.util.HashMap,"Whenever you use a HashMap and you treat a certain type of object as a key, you need to consider whether that object's equals() method is designed properly for custom equality checks."
29208595,2,0,1,java.util.HashMap,Then it can be used successfully as a key in a HashMap.
29209151,1,0,1,java.util.HashMap,Java HashMap crazy behavior with duplicate keys.
29211358,2,1,2,java.util.HashMap,printMap() is taken from this answer: Iterate through a HashMap  code.
29212443,1,0,0,java.util.HashMap,"HashMap, I need ordering."
29212443,1,0,0,java.util.HashMap,"However, I've read on some threads that I can store as a HashMap and create a TreeSet from the HashMap; would it be worth doing this?"
29212522,2,0,0,java.util.HashMap,"However the equivalent to a HashMap is TreeMap, not a TreeSet - you need a mapping between key and value."
29214843,2,0,1,java.util.HashMap,Manage the jsonObject like an HashMap.
29215546,2,0,0,java.util.HashMap,You'll find that a HashMap (or just a Map) will do what you want with a lot less effort.
29217437,1,0,0,java.util.HashMap,Scenario: a class uses Jdk1.7 java.util.HashMap with get() and put() being the only methods called.
29217437,1,0,0,java.util.HashMap,The nature of class loading is that the objects are added to the HashMap and never removed.
29218370,2,0,2,java.util.HashMap,"No, HashMap is not thread-safe."
29221914,2,0,2,java.util.HashMap,"What is much more important and what is key are variable references -- the ability to gain access to a particular object at a particular point in your program, and you can have Strings refer to objects easily by using a Map such as a HashMap."
29237957,2,0,0,java.util.HashMap,In Java HashMap breaks when used concurrently without sufficient locking.
29237957,2,0,0,java.util.HashMap,See Is a HashMap thread-safe for different keys?
29238070,1,0,9,java.util.HashMap,How to create HashMap with streams overriding duplicates?
29238070,1,0,9,java.util.HashMap,I'm creating a HashMap using java8 stream API as follows: code.
29238798,2,0,0,java.util.HashMap,then use HashMap or some other map container like code.
29239628,1,0,0,java.util.HashMap,My current solution:  A combination of HashMap & ArrayList => I use ArrayList to store the sorted keys which provides indexed access and use HashMap for constant-time contains() method.
29241861,1,0,0,java.util.HashMap,"In the map, tiles are stored that way :     HashMap<Coordinate, Tile>."
29268401,2,0,0,java.util.HashMap,"We can now call fill for Tree 2 (replace ""edges"" with Tree 2 information, keep the HashMap as it is)."
29249714,1,0,4,java.util.HashMap,"In Java, there is thread-safe version HashMap named ConcurrentHashMap and thread-safe version TreeMap named ConcurrentSkipListMap, but there is no ConcurrentHashSet for HashSet."
29253321,1,0,0,java.util.HashMap,I want to pass a HashMap from client to a web service method.
29253474,1,0,0,java.util.HashMap,HashMap can keep always the same order?
29253474,1,0,0,java.util.HashMap,I want to know if my HashMap collection will be always on the same order code.
29253509,2,0,1,java.util.HashMap,"If the keys and values are always the same, the map size is the same, and the HashMap is initialized in the same way, then yes."
29257244,1,0,0,java.util.HashMap,"To draw a parallel example in Java, using HashMap<Integer, Foo> as the repository: code."
29263499,2,0,0,java.util.HashMap,"If the fields are limited, for example if you only need various combinations of fields, you could create an interface for each field (getter and setter) and then creaty a Proxy object for all of them, handling the data, for example, with an internal HashMap."
29260994,1,0,0,java.util.HashMap,HashMap?
29262171,2,0,0,java.util.HashMap,"You could create a class Student with three fields (UID, name and mark) and then use a HashMap with Integer (UID) as key and Student as value."
29262171,2,0,0,java.util.HashMap,"With that, read the first file and insert in the HashMap instances of Student with name set then read the second file and use the UID to find the corresponding student in the HashMap to set the mark."
29262171,2,0,0,java.util.HashMap,Finally iterate over the HashMap to write the data to your output file.
29262970,1,0,0,java.util.HashMap,Would performance increase significantly when using a HashMap?
29264207,1,0,0,java.util.HashMap,GSON not serializing HashMap instance variables.
29265183,1,0,0,java.util.HashMap,HashMap confusion.
29270490,2,0,0,java.util.HashMap,"I suggest the use of HashMap<String, Integer>."
29270490,2,0,0,java.util.HashMap,"Loop against the whole sentence, and add the integer 1 to the HashMap for each word you cannot find in the HashMap."
29270490,2,0,0,java.util.HashMap,"Otherwise, increase the integer in the HashMap according to the word."
29270490,2,0,0,java.util.HashMap,"After collecting the word count data, use Collection.sort method to sort the HashMap: code."
29270490,2,0,0,java.util.HashMap,And then the keys of the first 15 elements in the HashMap are the words you want.
29276397,1,0,1,java.util.HashMap,HashMap does not override hashCode but Abstract map does (see below) so I don't see the problem of putting a HashMap in a HashSet.
29277978,2,0,1,java.util.HashMap,However a HashMap can be described as a set of buckets with each bucket holding a single linked list of elements.
29286499,1,0,0,java.util.HashMap,Java HashMap overwriting previous values.
29286596,2,0,0,java.util.HashMap,You are placing the same int[] into the HashMap over and over again.
29286596,2,0,0,java.util.HashMap,So the last modification is visible through all keys of the HashMap.
29286596,2,0,0,java.util.HashMap,"Instead, assign a new array to square after adding the array, so that references to separate arrays are put into the HashMap."
29289650,2,0,0,java.util.HashMap,"Edit: On your public void onItemClick(...) you should probably use:  HashMap<String, String> yourHashMap = parent.getItemAtPosition(position); Intent intent = new Intent (parent.getContext(), Record.class); intent.putSerializable(""key"", yourHashMap); And on the next activity: Bundle bundle = getIntent().getExtras(); if(bundle!=null) {     HashMap<String, String> vals = (HashMap)bundle.getSerializable(""key"");     ((TextView)findViewById(R.id.txt1)).setText(vals.get(""value1""));         ((TextView)findViewById(R.id.txt2)).setText(vals.get(""value2""));        ((TextView)findViewById(R.id.txt3)).setText(vals.get(""value3"")); }"
29288884,2,0,6,java.util.HashMap,Later you could use a HashMap to associate each Card with an Image or ImageIcon if desired.
29290198,1,0,0,java.util.HashMap,How do I return an ordered list given a HashMap?
29290198,1,0,0,java.util.HashMap,I have a HashMap of objects called Cards.
29292823,2,0,2,java.util.HashMap,"For example, in Tim's Grid eample, I could change the storage layout to be implemented with a HashMap, where the row and column value were inputs into a hash function, and the same hash function was used to retrieve the same element."
29312101,2,1,1,java.util.HashMap,"If you're a stickler for efficiency, create a HashMap<Integer, RestTemplate> that caches a RestTemplate with a particular timeout each time a new timeout is requested."
29301716,1,0,1,java.util.HashMap,Adding HashMap instead of using switch-case?
29301716,1,0,1,java.util.HashMap,"So I have a Java class which has a number of switch cases which I now want to replace with HashMap, because of better performance."
29301716,1,0,1,java.util.HashMap,Now I want to replace this with the HashMap.
29305156,2,1,0,java.util.HashMap,"One simple way to do this in Java is to make a HashMap, with String keys and Integer values."
29305156,2,1,0,java.util.HashMap,"Just go through the list of words as they appear in the document, and add one to the corresponding entry in the HashMap."
29309170,2,0,1,java.util.HashMap,"The load factor is the ratio of the number of elements it holds and your HashMap capacity (i.e. how many buckets you have) So using a simple array of 10 spaces with a load factor of .75 means that the moment your elements divided by your size is greater or equal to 75% (that will mean there are 8 elements in your Array), the data structure must regrow in order to lower the ratio."
29309170,2,0,1,java.util.HashMap,The HashMap usually keeps track of the number of elements it holds on every add/remove operation and recalculates the load factor
29309208,1,0,2,java.util.HashMap,"The third constructor in class HashSet : HashSet(int capacity,  loadFactor, boolean dummy) exists only to help LinkedHashSet class use a LinkedHashMap as the backing map instead of default HashMap Questions:   Would this be considered a good design?"
29313057,1,0,0,java.util.HashMap,So I made a HashMap containing a String and an Integer.
29313223,2,0,1,java.util.HashMap,"Also, this is a very backward way to use HashMap."
29313223,2,0,1,java.util.HashMap,HashMap performs best when most of the lookups happen on the keys not the values.
29313223,2,0,1,java.util.HashMap,"You might consider just switching them, as in: HashMap<Integer, String>."
29314041,1,0,0,java.util.HashMap,"I have an ArrayList where I store the players that have less than 20 mana, and a HashMap that stores the players' current mana."
29314621,1,0,0,java.util.HashMap,A House contains a collection (HashMap) of Rooms.
29314621,1,0,0,java.util.HashMap,tl;dr: How can an Agent object obtain a reference to an object that is stored in a HashMap inside another Environment object?
29315538,2,0,0,java.util.HashMap,"To have an unique ID that is linked to your object, you could use a HashMap."
29317414,1,0,23,java.util.HashMap,"To put previous values in a HashMap and instead of re-computing them each time, to simply take them back from the HashMap if they exist."
29317414,1,0,23,java.util.HashMap,"If they don't exist, we then put them in the HashMap."
29317777,1,0,3,java.util.HashMap,Limit the key of a HashMap to a specified length of characters.
29322032,1,0,2,java.util.HashMap,Returning a HashMap collection with simple property keys in QueryDsl.
29322674,2,0,1,java.util.HashMap,"Why if I want to use an object as a key in a HashMap, I am forced to overwrite and provide an implementation for hashCode?"
29322674,2,0,1,java.util.HashMap,"If that is not the case, then HashMap will not work correctly."
29322689,2,0,1,java.util.HashMap,"Question 1: Why if I want to use an object as a key in a HashMap, I am forced to overwrite and provide an implementation for hashCode?"
29322742,2,0,1,java.util.HashMap,"If you do not overwrite equal, the HashMap still will work but may chain many objects at the same location which lowers the performance."
29322605,1,0,1,java.util.HashMap,How to return a JSON object from a HashMap with Moxy and Jersey.
29322605,1,0,1,java.util.HashMap,User.preferences is a HashMap.
29322605,1,0,1,java.util.HashMap,"It works fine for almost all Objects except for a HashMap which gets translated into:   ""preferences"":{""entry"":[{""key"":{""type"":""string"",""value"":""language""},""value"":{""type"":""string"",""value"":""en""}},{""key"":{""type"":""string"",""value"":""country""},""value"":{""type"":""string"",""value"":""US""}}]}  but what I would really like to return is just a javascript object like:  preferences:{""language"":""en"",""country"":""US""}  How can I do that?"
29324001,1,0,0,java.util.HashMap,Sorting a HashMap based on Custom Value (in my e.g.
29324026,2,0,2,java.util.HashMap,"You cannot sort HashMap<K,V>, but if you create a list of its key-value pairs code."
29326516,2,1,2,java.util.HashMap,"If you serialized the HashMap as a single object, just deserialize it the same way: code."
29326492,1,0,0,java.util.HashMap,Java HashMap Error.
29327797,2,0,4,java.util.HashMap,"To answer your follow-up questions: Regarding Java Collections API, I think there are two alternatives: either classes like ArrayList or HashMap were designed to be extended or then this is simply an API design flaw."
29329355,1,0,0,java.util.HashMap,"I have an ArrayList containing a HashMap, and I am trying to iterate through that ArrayList of HashMaps using the Struts s:iterator tag."
29330147,2,1,1,java.util.HashMap,"According to the documentation, the [0] means the list item, so in this case your HashMap."
29332332,1,0,0,java.util.HashMap,"In this program, while saving the Foo object I have set the keys to x & y, these keys are not used while saving the entities for Foo & Person, so does it mean that the HashMap keys are ignored so I can give any value to it?"
29335031,1,0,0,java.util.HashMap,Reversing a HashMap storing words and their line numbers.
29335031,1,0,0,java.util.HashMap,I have a HashMap code.
29335031,1,0,0,java.util.HashMap,I want to reverse this HashMap so that it displays the words stored at each line number.
29335964,2,0,1,java.util.HashMap,Change its type to serializeable type HashMap and I believe the issue will resolve.
29338837,2,1,1,java.util.HashMap,Use HashMap rather as it implemts serializer.
29346222,2,1,7,java.util.HashMap,HashMap does not provide any guarantees of order among its entries.
29351368,2,0,0,java.util.HashMap,HashMap is a type of Map.
29350982,2,0,1,java.util.HashMap,"Each array will contain a number of instances of HashMap<Modularity.Community, Float>  (or Integer as map value in the second variable)."
29353820,1,0,0,java.util.HashMap,"But I want my keys and values to be represented as  HashMap<Coordinate, HashSet<Coordinate> For example, Location (key) (0,0) has neighbors (values) : [(0,1),(1,1)]."
29359154,2,0,1,java.util.HashMap,"Note that if you use a regular HashMap, the items in the result would not be arranged in any particular order."
29360270,1,0,0,java.util.HashMap,"This isn't for a class I would just like to know how to do the following: I want to be able to create different users (I'm sure I'd have to use (like I have) a HashMap or ArrayList) and have EACH user have separate access to the balance variable, so when one person, lets say person X with pin 1234 withdraws funds, ONLY their funds are withdrawn."
29360270,1,0,0,java.util.HashMap,I know I can just use a HashMap and set it up like  code.
29360403,2,1,0,java.util.HashMap,I'll give you an example using a HashMap code.
29360538,1,0,0,java.util.HashMap,I need a HashMap some thing which looks like code.
29360538,1,0,0,java.util.HashMap,But HashMap accepts only one mapped value.
29360538,1,0,0,java.util.HashMap,And then my HashMap looks like code.
29360752,2,1,1,java.util.HashMap,"First of all, HashMap<K,V> implements Map<K,V>, which specifies:  An object that maps keys to values."
29360752,2,1,1,java.util.HashMap,"If this is the case, Sachin's suggestion of Map<String, HashMap<Integer,ArrayList<String>>> will do the job."
29362215,1,0,0,java.util.HashMap,"(The reason why I want it to be this way is because each object I create with this class will be unique and I want to be able to remove it from a HashMap later even though the state of the object will change, because it is my understanding if a Hash changes then you cannot remove it from a HashMap after it was added) To prevent this from being a simple yes or no answer, maybe explain to me the pros and cons of implementing a Hash this way."
29362415,2,1,2,java.util.HashMap,"It will make HashMap, HashSet and other collections that rely on hashCode very inefficient, since all elements/entries would be added to the same bin."
29364878,2,0,1,java.util.HashMap,"In particular, in your case the call is unnecessary, because HashMap and HashSet rely upon calling hashCode internally."
29364878,2,0,1,java.util.HashMap,From your example it does not appear that you need HashMap: a HashSet should be sufficient.
29365974,1,0,2,java.util.HashMap,"Using a normal pdf form, I display the form fields and implement an HashMap from which I generate myself an fdf file."
29365974,1,0,2,java.util.HashMap,Using pdftk The implementation using pdftk looks like the one above in many ways but I generate from the HashMap an fdf file and use the following command line: code.
29373026,1,0,1,java.util.HashMap,"I have a map of maps: HashMap<String, Map<DistinctCode, String>>."
29376747,1,0,0,java.util.HashMap,For example let's say that I have a huge HashMap and I want it to be accessible by every object and every class.
29376747,1,0,0,java.util.HashMap,"To be more specific, I create this HashMap in the main function and then I have some objects that require it."
29377949,1,0,2,java.util.HashMap,Deletion in LinkedHashMap vs HashMap.
29377949,1,0,2,java.util.HashMap,In regular HashMap deletion takes constant time.
29379329,2,0,0,java.util.HashMap,"LinkedHasMap uses an Entry that subclasses HashMap.Entry, so the cost is higher but still constant."
29379329,2,0,0,java.util.HashMap,Every time a entry is deleted in HashMap the method recordRemoval(HashMap m) is called.
29379329,2,0,0,java.util.HashMap,Its implementation in HashMap.Entry is empty but LinkedHasMap.
29379329,2,0,0,java.util.HashMap,The sequence is as follows:  remove implementation in HashMap calls removeEntryForKey (HashMap:line551) code.
29379329,2,0,0,java.util.HashMap,removeEntryForKey in HashMap calls entry.recordRemoval(this) (HashMap:line560) code.
29379329,2,0,0,java.util.HashMap,Source for HashMap: http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/9b8c96f96a0f/src/share/classes/java/util/HashMap.java Source for LinkedHashMap: http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/9b8c96f96a0f/src/share/classes/java/util/LinkedHashMap.java
29378000,2,0,7,java.util.HashMap,"Like HashMap, it provides constant-time performance for the basic operations (add, contains and remove), assuming the hash function disperses elements properly among the buckets."
29378000,2,0,7,java.util.HashMap,"Performance is likely to be just slightly below that of HashMap, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a LinkedHashMap requires time proportional to the size of the map, regardless of its capacity."
29378000,2,0,7,java.util.HashMap,"Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity."
29378000,2,0,7,java.util.HashMap,LinkedHashMap does not override the HashMap#remove(Object key) method.
29380295,1,0,0,java.util.HashMap,How to decrement a value in a HashMap?
29380334,2,1,1,java.util.HashMap,A HashMap can just contain objects (not primitives) so you must insert an Integer as a value mapped.
29380740,2,0,1,java.util.HashMap,"But I also would point out that you don't have to use nested if/else statements, since Java has a HashMap class, which can be used with objects as keys."
29391710,2,0,0,java.util.HashMap,So use an HashMap.
29391554,1,0,0,java.util.HashMap,"Our response object contains a HashMap<String, PropertyObject>."
29393595,2,0,1,java.util.HashMap,"I want to second EddyG's recommendation -- use an array of JButton or a HashMap<Character, JButton> to help organize your GUI code better."
29393762,1,0,2,java.util.HashMap,Difference between LinkedList of Object and a LinkedList of a HashMap?
29393826,2,1,4,java.util.HashMap,"The problem is the return type of clone(): it's Object, not HashMap<String,Object>."
29393839,2,0,1,java.util.HashMap,Object is parent of every class by default and hence HashMap is of type Object and hence you would be able to add child of Object i.e. HashMap.
29393839,2,0,1,java.util.HashMap,"Another thing is clone return type is Object and hence even if you type cast it back to HashMap, you should be able to do the same."
29393876,1,0,0,java.util.HashMap,Shared java HashMap in a clustered enviroment.
29393876,1,0,0,java.util.HashMap,"We have the server deployed in two nodes (using jboss), each one with its own HashMap, and its own values."
29393876,1,0,0,java.util.HashMap,"So depending on the node we attack, we can  get different values... ¿Is there any way to share this HashMap between the two nodes?"
29394178,2,0,1,java.util.HashMap,You need to use Distributed HashMap.
29394437,2,0,0,java.util.HashMap,"Using a HashMap means that you have to handle concurrent read and write access yourself, which could significantly add to your design, build and test effort."
29395413,2,1,3,java.util.HashMap,Use 'publisher-subscriber' concept and update each HashMap instance by events.
29398549,2,0,0,java.util.HashMap,"Closing the db connection resource Either to use HashMap or List  Well, from what you have so far, you can definitely read the data from your resultset into List or HashMap Secondly on closing the resources, Yes!"
29398549,2,0,0,java.util.HashMap,"If you know the data will have Keys and Values, then you can go for HashMap."
29397508,1,0,0,java.util.HashMap,"I heard you could do it with a HashMap, and I did research on it, but I don't think I quite understand how to implement it into my program yet."
29401212,1,0,1,java.util.HashMap,"Should i create the EntireControlElement in the View, to which i pass an HashMap and also pass this map through all the elements to MainMenuElement?"
29401458,1,0,1,java.util.HashMap,I have a HashMap.
29403810,1,0,3,java.util.HashMap,"use a self-map, HashMap<A,A> selfMapA, where key and value are the same objects in each entry."
29403991,2,0,0,java.util.HashMap,"As User235... says, HashSet is implemented using a HashMap so the memory use difference between the two is negligible."
29403847,2,1,2,java.util.HashMap,"HashSet is implemented using a HashMap with all values set to a dummy object, so option 2 should actually use slightly less memory than a HashSet."
29404851,1,0,10,java.util.HashMap,Same question for HashMap.
29516303,2,0,4,java.util.HashMap,"Of course, you can use plain HashMap in case of p.1 (when you work with the properly locked field ""map"") instead of ConcurrentHashMap."
29516303,2,0,4,java.util.HashMap,Same question for HashMap  HashMap isn't thread safe at all.
29516303,2,0,4,java.util.HashMap,"Methods HashMap.put/get work with internal state of the map in not thread-safe manner (non-atomic, no inter-thread visibility of changed state guaranteed), so, you may just corrupt state of the map."
29516303,2,0,4,java.util.HashMap,to work with HashMap.
29562655,2,0,2,java.util.HashMap,"The ConcurrentHashMap differs from the HashMap in that you can typically safely read from it and write to it at the same time from different threads, without external locking."
29421697,2,0,13,java.util.HashMap,Same question for HashMap.
29421697,2,0,13,java.util.HashMap,"If you are using a plain HashMap concurrently, don't."
29409619,1,0,0,java.util.HashMap,The data is stored in a HashMap as  key value pairs.
29410184,1,0,2,java.util.HashMap,HashMap.remove and garbage collection.
29410184,1,0,2,java.util.HashMap,"If I add objects to HashMap and then just call remove method when they are no longer needed, does it guarantee the resources they take will be released (given there are no other references to them)?"
29410879,2,0,2,java.util.HashMap,The HashMap entries are stored in an array.
29410775,2,0,1,java.util.HashMap,When you call remove method in HashMap it only removes the id and value from it not the object you created.
29411285,2,1,1,java.util.HashMap,I think you can have a simpler solution using a HashMap.
29411530,2,0,1,java.util.HashMap,This class is extending ModelMap which itself is extending HashMap.
29413189,2,0,1,java.util.HashMap,You could just create a HashMap and iterate over both arrays.
29413202,2,1,3,java.util.HashMap,"You can do it in O(n), if you use some data structure that supports O(1) get operations - for example HashMap."
29415045,2,0,1,java.util.HashMap,How about making an HashMap of escape character vs the second ?
29422253,1,0,0,java.util.HashMap,HashMap Null-Pointer Error.
29425024,1,0,1,java.util.HashMap,"The Set returned from HashMap.entryset(), how is it sorted?"
29425024,1,0,1,java.util.HashMap,I need to replicated the sorting I get on a set returned from the function entrySet() from the HashMap class.
29425126,2,1,2,java.util.HashMap,"No matter in which order I put the items in the HashMap, it always returns them in the same order."
29426166,1,0,0,java.util.HashMap,HashMap using Object as key.
29426166,1,0,0,java.util.HashMap,"I made a post a few days ago about using a HashMap in a simple banking program, but I'm having issues with using Objects as keys."
29426166,1,0,0,java.util.HashMap,"Do note, the setup of the HashMap is without error."
29426238,2,0,0,java.util.HashMap,"That argument is supposed to be the key you use in the map and has to be of the same type you declared while declaring your map, in your case HashMap <Account,Client> HM means that HM (which btw should be lowercase by convention) holds as keys objects of type Account and objects of type Client as values."
29427077,2,0,1,java.util.HashMap,"I have a HashMap<String, ArrayList<Object>> how do I add elements into it form a GUI   You write UI code that creates the keys and objects, and calls Map.put(...)."
29434982,2,0,0,java.util.HashMap,Your HashMap can be used to store the variable names and their values.
29438469,1,0,2,java.util.HashMap,What is an efficient alternative for an extremely large HashMap?
29438469,1,0,2,java.util.HashMap,"Now I'm using a HashMap, but this gets way too slow when the map gets large, even when increasing the max memory to 8GB with -Xmx8192M."
29438469,1,0,2,java.util.HashMap,What is an efficient alternative for an extremely large HashMap?
29439095,2,0,1,java.util.HashMap,Use Hazelcast distributed  HashMap.
29439173,1,0,0,java.util.HashMap,Android: Mapping View ID to Data Structure (HashMap?).
29445553,2,0,3,java.util.HashMap,"This is a really bad idea to use arrays as keys in HashMap, because hashCode() of array can return different values for array instances with the same content."
29445612,1,0,0,java.util.HashMap,This code is reading the textfile and creating HashMap.
29445759,1,0,1,java.util.HashMap,Returning all the keys from a HashMap withou looping.
29445759,1,0,1,java.util.HashMap,"The Country object contains a HashMap of objects called 'City' with a method getName, returning a String value."
29449031,1,0,0,java.util.HashMap,I'm working on a CDI extension which needs populate a HashMap with all the discovered beans that have a specific annotation and then during the AfterDeploymentValidation lifecyle event instantiate an @ApplicationScoped bean and pass the HashMap to the newly instantiated bean.
29449031,1,0,0,java.util.HashMap,Using the following code I can find any beans that have been annotated with @CQRSCommandHandler and populate a HashMap with the name of the bean and parameter set on the annotation.
29449031,1,0,0,java.util.HashMap,What I'm struggling with is how I should eagerly instantiate the bean and pass the HashMap to this bean.
29449031,1,0,0,java.util.HashMap,"I can find plenty of examples such as this one (http://ovaraksin.blogspot.co.uk/2013/02/eager-cdi-beans.html) that show how to eagerly instantiate any beans that have a specific annotation, however I cannot work out how to instantiate one specific bean and pass a HashMap to this bean."
29449031,1,0,0,java.util.HashMap,How can I instantiate one specific bean and pass a HashMap to this bean?
29452883,2,1,1,java.util.HashMap,"You have two options:  Inject the extension into the bean instead, and use the HashMap in there."
29452883,2,1,1,java.util.HashMap,Pass the HashMap into a producer method to provide injection support for the HashMap.
29453096,2,0,1,java.util.HashMap,"It uses a binary tree, and HashMap / LinkedHashMap / ConcurrentHashMap / Hashtable don't."
29453096,2,0,1,java.util.HashMap,"As the javadoc says:  ""If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
29455174,1,0,1,java.util.HashMap,Construct a HashMap with specific value.
29455174,1,0,1,java.util.HashMap,"I have a List of Module as below, and I try to construct a HashMap without a duplicate key, and the value is latest."
29455174,1,0,1,java.util.HashMap,I want to construct a HashMap.
29455829,1,0,1,java.util.HashMap,Program hangs upon removal of a object from a HashMap?
29455829,1,0,1,java.util.HashMap,"However, it now appears to be able to happen randomly upon the removal of something from any ArrayList/HashMap."
29455829,1,0,1,java.util.HashMap,"entlist is a HashMap<String, ArrayList<LivingEntity>> entlist = new HashMap<String, ArrayList<LivingEntity>>();."
29455829,1,0,1,java.util.HashMap,Why is a simple removal of a value from an ArrayList/HashMap freezing the entire server?
29456066,2,1,2,java.util.HashMap,It could also be that a HashMap update that isn't synchronized.
29458498,1,0,2,java.util.HashMap,How do HashSet and HashMap work in Java?
29458498,1,0,2,java.util.HashMap,I'm a bit confused about the internal implementation of HashSet and HashMap in java.
29458498,1,0,2,java.util.HashMap,"This is my understanding, so please correct me if I'm wrong: Neither HashSet or HashMap allow duplicate elements."
29458498,1,0,2,java.util.HashMap,"HashSet is backed by a HashMap, so in a HashSet when we call .add(element), we are calling the hashCode() method on the element and internally doing a put(k,v) to the internal HashMap, where the key is the hashCode and the value is the actual object."
29458498,1,0,2,java.util.HashMap,"But then, this seems inconsistent to me when I read how a HashMap works when storing our own objects as keys in a HashMap."
29458520,2,1,6,java.util.HashMap,"You are correct regarding the behavior of HashMap, but you are wrong about the implementation of HashSet."
29458520,2,1,6,java.util.HashMap,"HashSet is backed by a HashMap internally, but the element you are adding to the HashSet is used as the key in the backing HashMap."
29458520,2,1,6,java.util.HashMap,Therefore the HashSet's contains(element) simply calls the backing HashMap's containsKey(element).
29462315,2,0,1,java.util.HashMap,"It happens because your passengerSet is TreeSet (SortedSet), which means it will sort itself after each adding, because TreeSet is ordered set and has certain sequence unlike usual HashMap."
29462315,2,0,1,java.util.HashMap,"So, you have three ways to fix it (may be more, but three of them - are obvious):  Get rid of SortedMap, let's say replace your SortedMap to Map and replace TreeMap to HashMap in your code."
29468781,2,1,1,java.util.HashMap,If I was you I'd use a HashMap.
29468781,2,1,1,java.util.HashMap,Edit: The question in your HashMap is a key To retrieve your answer you have to find it by the key(which is your question ).So instead of saying: mymap.get(answer); you say mymap.get(question);  If you want to retrieve your question you probably have to write a method like: code.
29468312,1,0,2,java.util.HashMap,Unable to call the method or change the value in HashMap.
29469881,2,0,2,java.util.HashMap,"And then you just create some kind of private class in your Main to create a HashMap of all of the commands, keyed with the value of ""ConstantX."""
29469847,1,0,1,java.util.HashMap,Mutating/Reading a HashMap from multiple threads but one thread at a time.
29470823,1,0,0,java.util.HashMap,HashMap instead of DTO?
29470823,1,0,0,java.util.HashMap,What is wrong in using HashMap instead of DTO ?
29470978,2,1,3,java.util.HashMap,"When you pull something out of the returned HashMap, you can never get compile-time validation that what you're casting it to is valid."
29470978,2,1,3,java.util.HashMap,With the HashMap that's not necessarily the case.
29470978,2,1,3,java.util.HashMap,"If you don't have access to the source of the class that generates the HashMap (in this case the EJB), you'll never know what other data attributes are available."
29478459,2,0,2,java.util.HashMap,"Details can be found at https://wiki.eclipse.org/EclipseLink/DesignDocs/459464 Namespace prefix needs to be specified as JAXBContext property: unmarshaller.setProperty(JAXBContextProperties.MEDIA_TYPE, MediaType.APPLICATION_JSON);  Map namespaces = new HashMap<>();  namespaces.put(javax.xml.XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, ""xsi"");  unmarshaller.setProperty(JAXBContextProperties.NAMESPACE_PREFIX_MAPPER, namespaces);"
29473667,2,0,0,java.util.HashMap,i will write the section about adding to list use HashMap code.
29475782,1,0,1,java.util.HashMap,Filling a JPanel with JRadioButtons using HashMap.
29475782,1,0,1,java.util.HashMap,I create a new JPanel inside my ActionListener along with a HashMap.
29475782,1,0,1,java.util.HashMap,I loop through the HashMap adding String names and JRadioButtonand i try to populate the window but i don't really know how.
29475992,2,1,2,java.util.HashMap,"If your text shown in the JRadioButton is the same as that placed into the HashMap, I don't see the need for the HashMap."
29475889,1,0,0,java.util.HashMap,How to recycle heap memory from HashMap.
29475889,1,0,0,java.util.HashMap,"The function with this HashMap is called repeatedly, and my plan was to somehow clean up the heap memory and use the space up to 90% again."
29477402,2,0,0,java.util.HashMap,"A simple hand-rolled approach is to, for each ""indexed"" column, put all the rows into a HashMap<ColumnType, HashSet<Row>>, so that each distinct key value maps to a list of all rows having that key value in that column."
29484702,1,0,1,java.util.HashMap,Java HashMap for in-order data access.
29484702,1,0,1,java.util.HashMap,"I am writing a Java application and facing a producer consumer problem, and making use of HashMap to make sure the consumer is reading data in correct order."
29484702,1,0,1,java.util.HashMap,"In this way thread T will block until there is data availalbe in the hashmap with previous order id+1 However my question is that, is HashMap the best datastructure for this problem?"
29486972,2,0,0,java.util.HashMap,The most probable is that ShowAreas stores the information in an non ordered data structure (for example an HashMap).
29489694,1,0,1,java.util.HashMap,HashMap accessible from whole project.
29489694,1,0,1,java.util.HashMap,I have defined HashMap code.
29490108,1,0,3,java.util.HashMap,Spring MVC : Mapping Form input to complex backing object containing HashMap.
29490108,1,0,3,java.util.HashMap,I have scenario where a list of input fields from the jsp form would map to a HashMap field within the backing object Resolution.
29491281,1,0,1,java.util.HashMap,"I had a need for having Key/Value pairs in the order of my insertion, so I opted to use LinkedHashMap over HashMap."
29495198,1,0,1,java.util.HashMap,My code currently performs about 200000 iterations/sec on an Intel i7 u3517 for a tree with 100 nodes and an input HashMap with 10 variables.
29498892,1,0,0,java.util.HashMap,"The object I'm storing in the HashMap as the key overrides equals() but not hashCode();  When I put an object in the map, the equals() method is not being invoked."
29498892,1,0,0,java.util.HashMap,"I’m thinking that if I don’t override hashCode() and Object’s hashCode() is used instead, HashMap will “see” that the hashCodes are different for my two objects and come to the conclusion there is no need to invoke equals()."
29498892,1,0,0,java.util.HashMap,"If that’s true, HashMap is enforcing, at least part of, the contract."
29498892,1,0,0,java.util.HashMap,"And, this could be another manifestation of HashMap optimization."
29500117,2,0,3,java.util.HashMap,"When you put something into a HashMap, for instance, it will call the key's hashCode() method, to find a spot to store your value."
29500150,1,0,1,java.util.HashMap,"For example, HashMap.size()"
29501103,1,0,4,java.util.HashMap,Reflection - Getting different results from HashMap - LinkedHashMap.
29504945,1,0,1,java.util.HashMap,One of the best that I found was inside Tom Hawtin's answer here: http://stackoverflow.com/a/3434505/1390874 But my biggest concern is that it stores a HashMap of Anonymous classes in a memory.
29512901,2,0,0,java.util.HashMap,Common use of LOB is to annotate a HashMap field inside your Entity to store some of the object properties which are not mapped into DB columns.
29519455,2,0,0,java.util.HashMap,"In the worst case you have to use a HashMap<String, Object> and cast the values where necessary."
29513716,1,0,2,java.util.HashMap,Where PropertyMap is a subclass of HashMap: code.
29513716,1,0,2,java.util.HashMap,"Could you please let me know, why I am not able add serializer for HashMap while adding serializer for its subclass us supported?"
29516877,1,0,2,java.util.HashMap,does java HashMap.putall clone all elements?
29519412,2,0,1,java.util.HashMap,The actual hash table - HashSet is basically a HashMap where the value is not interesting.
29519412,2,0,1,java.util.HashMap,"Under the hood, it creates a HashMap, which has an array of buckets in it to represent the hash table."
29518672,2,0,4,java.util.HashMap,It is based on HashMap (Adapter pattern).
29518672,2,0,4,java.util.HashMap,So HashSet itself contains a reference to a HashMap.
29518672,2,0,4,java.util.HashMap,HashMap contains 8 fields.
29518837,2,0,1,java.util.HashMap,HashMap default size is 16 HashMapEntry entries.
29519747,1,0,0,java.util.HashMap,Getting content of LINKMAP properties in a Java HashMap.
29519747,1,0,0,java.util.HashMap,Here is my problem : I can't get this Map into a Java HashMap.
29521608,2,1,3,java.util.HashMap,"You can do something like a HashMap with an int key and String[] values to store your data in, and the key can be your id_int."
29522893,2,0,2,java.util.HashMap,I used the SortedMap interface to ensure an unordered implementation like HashMap cannot be used.
29522850,2,0,0,java.util.HashMap,"Yes, you can call methods inside HashMap put, but that method has to return whatever your HashMap stores."
29522850,2,0,0,java.util.HashMap,"In your case HashMap<String, String[]> your method must return String[] Imagine a method code."
29525597,1,0,0,java.util.HashMap,"Looking at the Heap Dump taken when the JVM heap size was at 99.9 %, I see org.apache.lucene.search.FieldCacheImpl taking up a lot of memory 7.13 GB(out of 7.5 GB heap), it has a shallow size of just 32 Bytes, but referencing a Lot of HashMap and WeakHashMap objects and looks like its a singleton, but could not find a reason why its doing that."
29526643,1,0,0,java.util.HashMap,"Then it reads that file, splits all the words apart (I don't need to worry about capitalization or punctuation), and puts every word in a HashMap along with how many times they were in the file."
29532863,2,0,1,java.util.HashMap,"As @Pratik was first to point out, this is a classic use for a HashMap."
29536903,1,0,2,java.util.HashMap,"How can I insert these inputs in a map, HashMap preferrably."
29537051,2,0,1,java.util.HashMap,"Well, that doesn't fit to HashMap idea."
29537137,2,0,0,java.util.HashMap,"For example, define a class StringParams and pass it to HashMap."
29541302,2,0,0,java.util.HashMap,"Instead of keeping an ArrayList of BankAccount, keep a HashMap with key as account number and value as BankAccount object."
29541302,2,0,0,java.util.HashMap,"Map<int, BankAccount> bankAccounts = new HashMap<int, BankAccount>(); when you add an account, simply do- bankAccounts.put(accNum, bankAccount); and when you want to subtract withdraw amount- BankAccount bankAccount = bankAccounts.get(accNum); and then you can manipulate amount by using its setters and getters."
29539403,2,0,4,java.util.HashMap,"According to your first sentence,  If I have to set values for a key (for many keys) in HashMap if not   present then which one is better  you should use putIfAbsent."
29542205,1,0,1,java.util.HashMap,HashMap with an object later refered null and GC.
29542205,1,0,1,java.util.HashMap,If I have a HashMap let say HashMap.
29542205,1,0,1,java.util.HashMap,Then I add keys and values to HashMap like this code.
29542205,1,0,1,java.util.HashMap,"Now if I do myObj1=null, the value is still available in the HashMap the reason I believe (correct me If I am wrong) myObj1 only contains a pointer (reference) to the place in memory."
29542205,1,0,1,java.util.HashMap,So in the HashMap the reference that myObj1 had was copied.
29542631,2,1,1,java.util.HashMap,The value in the HashMap implementation  always has strong reference.
29545406,1,0,0,java.util.HashMap,"I declare my map like so: Map<Integer, Map<Integer, Integer>> junctions = new HashMap<>(); and fill it with data: code."
29548219,1,0,1,java.util.HashMap,"I have a HashMap<String, HashSet>."
29548219,1,0,1,java.util.HashMap,"In the else block (if name1 is already a key in the HashMap), I was thinking to add in code to take the existing friendlist (which will only have one value) of name1 and call read again."
29549726,2,1,1,java.util.HashMap,": HashMap in Java causes your heap to increase and unnecessary garbage, so I specified just enough size to keep two elements."
29555909,1,0,1,java.util.HashMap,AsyncTask: How to return a HashMap from doInBackground?
29555909,1,0,1,java.util.HashMap,So I would like to use HashMap to help me accomplish this.
29555909,1,0,1,java.util.HashMap,"In addition, when I turn String into HashMap, onPostExecute method's override has an error as well [Method does not override method from its superclass."
29556151,2,0,1,java.util.HashMap,"Replacing the class.forName and newInstance() with a HashMap lookup of a factory object, etcetera might save some fraction of a micro-second per call1."
29558197,1,0,2,java.util.HashMap,"At the moment, I'm using simple multi-dimensional HashMap(s) in the model itself, but it's tricky and maybe not the best solution (in particular, one can't handle multi-level fields)."
29623285,2,0,0,java.util.HashMap,"Saving: String json = gson.toJson(lessonMap, type); Loading: HashMap<dayKey, ArrayList<Lesson>> lessonMap = gson.fromJson(json, type);"
29566711,1,0,2,java.util.HashMap,How to compose a key for a HashMap from 3 integers?
29571436,2,0,2,java.util.HashMap,There is already a collections class that combines a HashMap with a doubly-linked list: the LinkedHashMap.
29571200,1,0,0,java.util.HashMap,Printing a HashMap into a .txt file.
29571200,1,0,0,java.util.HashMap,"Right now, I'm trying to get this method of mine to print a .txt file of a HashMap that contains a word as a Key, and the number of times it appears in a read .txt file (done in another method) as a Value."
29571200,1,0,0,java.util.HashMap,"The method needs to put the HashMap Keys in alphabetical order, and then print the corresponding Value next to it in a separate .txt file."
29579774,1,0,3,java.util.HashMap,String IdentityHashMap vs HashMap performance.
29579774,1,0,3,java.util.HashMap,Identity HashMap is special implementation in java which compares the objects reference  instead of equals and also uses identityHashCode instead of hashCode.
29694256,2,0,1,java.util.HashMap,But this won't help you very much since intern() calls equals() to make sure the given String exists or not in the String pool so you end up with the performance of the typical HashMap.
29580012,1,0,1,java.util.HashMap,Java - implement matrix using HashMap.
29581049,2,1,0,java.util.HashMap,"HashMap, for example:  This implementation provides constant-time performance for the basic   operations (get and put), assuming the hash function disperses the   elements properly among the buckets."
29581049,2,1,0,java.util.HashMap,"Iteration over collection views   requires time proportional to the ""capacity"" of the HashMap instance   (the number of buckets) plus its size (the number of key-value   mappings)."
29581008,1,0,1,java.util.HashMap,Return false when checking same Integer value using two different HashMap.
29581008,1,0,1,java.util.HashMap,I couldn't understand why it's printing false when HashMap key is 2 code.
29581774,1,0,16,java.util.HashMap,How to see the distribution of keys in a HashMap?
29581774,1,0,16,java.util.HashMap,"Is there a way to ""audit"" a HashMap in Java in order to see how well the keys are distributed?"
29582614,2,0,2,java.util.HashMap,"Inspect m. Inside m, you will find table array of type HashMap$Node and size 16."
29582614,2,0,2,java.util.HashMap,"This hash value is then sent to indexFor() method of HashMap to find out the index of table array , where the Entry object will be inserted."
29582614,2,0,2,java.util.HashMap,Also i would recommend you to go through internal implementation of hashmap to understand HashMap by heart.
29582248,2,0,5,java.util.HashMap,"HashMap uses the keys produced by the hashCode() method of your key objects, so I guess you are really asking how evenly distributed those hash code values are."
29582248,2,0,5,java.util.HashMap,"Now, the OpenJDK and Oracle implementations of HashMap do not use the key hash codes directly,  but apply another hashing function to the provided hashes before distributing them over the buckets."
29583564,2,0,0,java.util.HashMap,"The current implementation of java.util.HashMap does something more advanced: if values with the same hashcode implement the Comparable interface (as String does), it uses that to arrange them in a binary tree."
29582926,1,0,0,java.util.HashMap,Cascade persistence with HashMap.
29584211,1,0,0,java.util.HashMap,The method I am writing reads a certain .txt file and creates a HashMap and sets every word found as a Key and the amount of time it appears is its Value.
29584211,1,0,0,java.util.HashMap,"Is there a way for me to catch all the ints from say, 1-100, and exlude them from being Keys in the HashMap?"
29584278,2,0,0,java.util.HashMap,"When you scan whitespace, then you could add the word generated by the characters just scanned in to your HashMap."
29584525,2,0,1,java.util.HashMap,A HashMap is rather heavy for this kind of usage.
29584571,1,0,0,java.util.HashMap,Fastest way to iterate over ordered pairs of HashMap entries.
29584571,1,0,0,java.util.HashMap,The below code uses O(N^2) time to process all ordered pairs of a HashMap.
29586957,2,1,2,java.util.HashMap,This does not work because HashMap does not implement your IMap interface - so you cannot assign a HashMap to a variable of type IMap.
29586957,2,1,2,java.util.HashMap,You could make a class (not an interface) that extends HashMap: code.
29587509,1,0,0,java.util.HashMap,"I have HashMap of input static HashMap<Integer, List<Integer> > map = new HashMap<Integer,  List<Integer>>(); Basic input is like this  1 :: [2, 11] , 2 :: [1, 3] , 3 :: [2, 11, 5] , 4 :: [11, 12] , 5 :: [6, 7, 3] , 6 :: [5, 7] , 7 :: [5, 6] , 8 :: [12, 10] , 9 :: [12, 10] , 10 :: [8, 9] , 11 :: [1, 3, 4] , 12 :: [4, 8, 9] which shows from 1, I can go to 2 or 11, from 2 to 1 or 3...."
29588164,1,0,3,java.util.HashMap,Casting Serilizable to derivation of HashMap.
29588164,1,0,3,java.util.HashMap,"I am trying to send some work from IntentService to BroadcastReceiver by using .putExtra() and sendBroadcast(), so I have own class called ""Message"", which extends HashMap< String,String> and implements Serializable."
29588164,1,0,3,java.util.HashMap,"But here I always get this: ""Failed handling message, reason: java.lang.ClassCastException: java.util.HashMap"" Any idea what could be wrong?"
29590160,2,1,1,java.util.HashMap,"So if you put anything that implements the Map interface into a Bundle, when you get it back out you will have a HashMap :-( See my answer to this question for a detailed explanation of the mechanics."
29590160,2,1,1,java.util.HashMap,"To solve your problem, you'll need to have your custom class use (ie: contain) a HashMap and not be (ie: inherit from) a HashMap."
29603011,2,1,3,java.util.HashMap,"For completion, here is a distinct operation for arbitrary, i.e. unsorted, IntStreams which doesn’t rely on “boxing plus HashMap” thus may have a much better memory footprint: code."
29591879,2,1,1,java.util.HashMap,You provide very little information so I only can provide very little advice… ;-) First you need to find out who is using the largest objects (the HashMap in your case).
29591879,2,1,1,java.util.HashMap,Try to look at the contents of the HashMap so you may find out what it is used for.
29591879,2,1,1,java.util.HashMap,"Often the culprit is not the one you expect: Only because an object instance (in your case the HashMap) accumulates a lot of memory does not mean the ""owner"" of this object is the root cause of the problem."
29591879,2,1,1,java.util.HashMap,"Update: You can try to inspect the contents of a HashMap by right clicking it and selecting Java Collections, Hash Entries."
29594206,1,0,0,java.util.HashMap,addAll() strangely updating HashMap.
29595910,1,0,0,java.util.HashMap,I came into a problem where one of my HashMap members turns into null after serialization.
29596658,2,1,0,java.util.HashMap,"You could definitly get your current implementation working with what @Elliott Frisch suggested, but you could also go a different route and use a HashMap."
29596658,2,1,0,java.util.HashMap,"Here is a working solution using a HashMap, it has the added benefit of not needing to iterate over a potentially large number of empty indexes, since only numbers that exist in the initial array will have a value in the HashMap."
29598838,1,0,0,java.util.HashMap,How exactly Hashing works in HashMap..?
29603539,2,0,1,java.util.HashMap,"Here, we first create an instance A which points to a HashMap which is created somewhere in memory."
29603625,2,0,1,java.util.HashMap,"I beleive the description of sparse array clearly mentions the difference: It is intended to be more memory efficient than using a HashMap to map Integers to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping."
29606347,1,0,0,java.util.HashMap,"Can someone please let me know how to clone this attributes so that it can be stored in a HashMap<String, Attributes>."
29608373,2,1,6,java.util.HashMap,"Bundle is a concrete class that implements Parcelable and represents a HashMap-like structure, but strongly typed to things that are known to be able to go into a Parcel."
29608160,2,0,1,java.util.HashMap,You can try to use JSON-simple library: https://code.google.com/p/json-simple/ JSONObjects parsed by this library are literally represented as a HashMap.
29608160,2,0,1,java.util.HashMap,(org.json.simple.JSONObject extends HashMap) :-)
29608564,1,0,0,java.util.HashMap,"I have a static attribute (actually a HashMap) in my Activity, so I needed to access its content and copy to my Service (then be independent to run on the background)."
29608564,1,0,0,java.util.HashMap,"I just didn't want to maybe send it through Parcel or Serialization, because I have custom objects in this HashMap."
29609419,1,0,0,java.util.HashMap,"I have a variable that contain all      static Map listEntityManager = new HashMap<>(); the problem when i try to request a database i get error that i haven""t when i use one entitymanager for one entitymanagerFactory, for example when i try to select all element from a table i get this error  com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'fieldworke0_.fieldWorkerId' in 'field list' How can i resolve this problem ?"
29609788,2,0,0,java.util.HashMap,"That way, a HashMap or any other data structure can more quickly find and compare whether two Objects are equal http://en.wikipedia.org/wiki/Java_hashCode%28%29"
29612189,1,0,1,java.util.HashMap,I am achieving this inheritance by storing files (keys) and their paths (values) in a HashMap.
29612189,1,0,1,java.util.HashMap,Each commit has its own HashMap with its own inherited files.
29615218,1,0,0,java.util.HashMap,"Suppose that I have two ImageButtons, a HashMap, and pictures in drawable(resources) that are placed in this HashMap as a value."
29615218,1,0,0,java.util.HashMap,I need to randomly choose a value from the HashMap by key using Randomizer and then assign this value (that is a picture) to the ImageButton as it's background.
29618317,2,0,0,java.util.HashMap,"As HashMap gurantees only one key, it automatically detects duplicates and overwrite to new one."
29617988,1,0,0,java.util.HashMap,NotSerializableException: java.util.HashMap$KeySet.
29617988,1,0,0,java.util.HashMap,"When I run my code, I get an error tracing to the line that says objectOut3.writeObject(myObj);  The error is as follows:  Exception in thread ""main"" java.io.NotSerializableException: java.util.HashMap$KeySet  However, that MyObj class I have defined isn't a HashMap or Set, and doesn't have a HashMap or Set."
29621138,1,0,1,java.util.HashMap,"where map is of type HashMap<String,String> But my tests fail at compile time: code."
29626297,1,0,0,java.util.HashMap,I am having a parent ArrayList and 2 child HashMap: code.
29632917,1,0,1,java.util.HashMap,How does HashMap in Java handle weak reference for keys and values?
29632917,1,0,1,java.util.HashMap,"I recently read a book about java memory modelling, it says : HashMap use weak reference for keys and values(since they are all objects), so that hashmap can avoid out of memory issue when hasnmap stores more and more key value pairs."
29635370,2,0,1,java.util.HashMap,The equals method isn't  the most important for HashMap.
29635370,2,0,1,java.util.HashMap,"As the name suggests, the most important method for inserting values into the HashMap is hashCode, not equals."
29635370,2,0,1,java.util.HashMap,"A value is only overwriten in HashMap, if a key k in the map fullfills the following condition: k.hashCode() is equal to the hashCode of the key for inserting an item and the key equals k."
29639214,2,1,0,java.util.HashMap,"You could use a HashMap<String, Set<String>>."
29641336,1,0,0,java.util.HashMap,My code currently is using HashMap to store each word pair but using HashMap I lose duplicate entries.
29641336,1,0,0,java.util.HashMap,I am now finally realizing HashMap may not work.
29655255,2,0,0,java.util.HashMap,You can use Java 8 streams to create a HashMap with the word pair count in it.
29641905,2,0,1,java.util.HashMap,HashSet elements (just like HashMap keys) are supposed to be immutable.
29642805,1,0,0,java.util.HashMap,"In the HashMap implementation, the use of hashFunction is to find the index of the internal array, which can be justified, following the hashfunction  contract (same key will must have same hashcode, but distinct key can have same hashcode)."
29642805,1,0,0,java.util.HashMap,Whats wrong in using the HashMap as internal implementation(just like HashSet) and maintain a separate Array/List of indexes of the Entry array in the sequence of insertion?
29643290,2,0,2,java.util.HashMap,"1) LinkedHashMap extends HashMap so the hashfunction is the same of HashMap (if you check the code the hash function is inherited from HashMap), i.e. the function computes a the hash of the object inserted and it use to store in a data structure together with the elements with the same key hash; the hasfunction is used in the get method to retrieve the object with the key specified as a param."
29643290,2,0,2,java.util.HashMap,2)Put and Get method are behave the same way as HashMap plus the track the insertion order of the elements so when you iterate over the the keyset you get the key values in the order you inserted into the map (see here for more details) 3)the LinkedHashMap uses a double linked list instead of an Array because it's more compact; a double linked list is the the most efficient data structure for list where you insert and remove items; if you mostly insert/append elements then an array based implementation may be better.
29642936,2,1,0,java.util.HashMap,"A LinkedHashMap does use a HashMap (in fact it extends from it), so the hashCode is used to identify the right hash bucket in the array of hash buckets, just as for HashMap."
29642936,2,1,0,java.util.HashMap,put and get work just as for HashMap (except that the before and after references for iterating over the entries are updated differently for the two implementations).
29642961,2,0,1,java.util.HashMap,There are several arguments against using a simple HashMap and maintaining a separate List for the insertion order.
29642950,1,0,2,java.util.HashMap,Rehashing in HashMap in Java.
29642950,1,0,2,java.util.HashMap,I have a small doubt with the concept of Rehashing in HashMap.
29642950,1,0,2,java.util.HashMap,Lets say I have a HashMap with size 8 and within that I have an Object(E1) present at index 7.
29642950,1,0,2,java.util.HashMap,"So when we put multiple elements, forcing the HashMap to increase its internal Array size, which will lead to rehashing."
29642997,2,1,3,java.util.HashMap,"The bucket your key is placed in is a function of its hashCode modulus the size of the array used to hold the HashMap (which is the number of buckets), so re-hashing can move a key to a different bucket."
29649550,1,0,2,java.util.HashMap,"(java HashMap) Map<value, MyObject> to serve Client 3."
29649550,1,0,2,java.util.HashMap,(java HashMap)  This would save processing time involved in iterating through the entire list (list<MyObject>) and finding the matching key or value.
29664581,2,0,0,java.util.HashMap,"hashcode() method will get called when you add set elements in hashmap as key eg: Set<String> set = new HashSet<String>(); set.add(""A""); set.add(""B""); Map<Set<String>,String> m = new HashMap<Set<String>,String>(); m.put(set,""B"");   put debug point in hashcode() method of AbstractSet it will get called."
29656024,2,1,1,java.util.HashMap,What you want is to define a HashMap such that the key's hash and equals method will come out the same regardless of the order and case of the string's characters.
29660792,1,0,12,java.util.HashMap,"I tried making the generic type-parameter in the subtype to be HashMap<String, List<Thing>> and then returning new HashMap<String, List<Thing>>().getClass(), but that doesn't work because the return type of Class<T>#getClass() is Class<?"
29661089,1,0,0,java.util.HashMap,HashMap Difficulties.
29664012,2,0,0,java.util.HashMap,"For example, HashMap implementation... code."
29665134,1,0,0,java.util.HashMap,Create a second HashMap object?
29665963,1,0,2,java.util.HashMap,I am familiar with How HashMap works and key-value concept.
29666023,2,0,1,java.util.HashMap,"The map is maintained in a way that keeps the average number of elements in each linked list constant, which means it takes O(1) time to locate an entry in the HashMap based on the hashCode of its key."
29667326,1,0,0,java.util.HashMap,"For this I have declared HashMap <String, List <String>> While iterating over the list of the entities I wish to add them one by one to the list of the applications."
29684284,2,0,0,java.util.HashMap,"Perhaps not what you're looking for but an easy way to count multiple instances of objects using HashMap, here is an example with your random code generator: code."
29670948,2,0,0,java.util.HashMap,You can create your own MyHashMap class which extends HashMap and overrides put.
29673295,2,0,1,java.util.HashMap,The order of the entries in a HashMap or HashSet is predictable in theory for current generation and older implementations.
29673295,2,0,1,java.util.HashMap,"However, the prediction depends on at least:  the hash values of the keys, the initial capacity of the set or map, the precise sequence in which the keys were added to and removed from the set / map, the specific implementation of HashSet or HashMap used (the behaviour is Java version dependent, and possibly depended on patch level), and for Java 8 and later, whether or not the keys are Comparable."
29673295,2,0,1,java.util.HashMap,See also: Order of values retrieved from a HashMap
29673943,2,0,1,java.util.HashMap,"It is returning Integer instead of int as you have HashMap<Character, Integer>, so it is not giving expected output for ==."
29681093,2,1,3,java.util.HashMap,"Internally Guice is little more than a HashMap<Key, Provider<?>>, where a Key represents an optional binding annotation and a single fully-qualified type."
29678995,2,0,0,java.util.HashMap,"If you need fast random access, you can use HashMap with cell keys."
29678610,2,1,1,java.util.HashMap,"The answer depends on what happens in between of the two calls to values():  If no modifications are made to the HashMap<K,V>, the order would be the same, because the algorithm that is used to traverse the buckets of the hash map does not have a random component."
29678561,2,0,2,java.util.HashMap,"This class makes no guarantees as to the order of the map; in   particular, it does not guarantee that the order will remain constant   over time  http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#values() You can't wait that values() will return the list in the same order, it could happen but is just not a good idea because it depends on the implementation"
29678580,2,0,2,java.util.HashMap,A HashMap makes no guarantee about the order its values are iterated when iterating a Collection through .values().
29680127,2,1,2,java.util.HashMap,"Other problem is performance one due to creating new HashMap in get method, to fix that use Utility method Collections.unmodifiableMap() this just wrap original map and disallowing put/remove method."
29684561,2,0,0,java.util.HashMap,"Create a Map: You can use the HashMap class to store the fit values as keys, and have an ArrayList of indexes that use that fit."
29684561,2,0,0,java.util.HashMap,"The definition would look like HashMap<Integer, ArrayList<Integer>> map;"
29685186,1,0,3,java.util.HashMap,So far the HashMap option suggested in the answer works best for me.
29685290,2,0,1,java.util.HashMap,"But, the better approach would be to use HashMap to store client information as mentioned in Danyal Sandeelo's answer."
29685700,1,0,0,java.util.HashMap,So I have a HashMap whose values I'm iterating through in a for loop.
29686176,1,0,0,java.util.HashMap,I am trying to write a method that takes an InputStream variable and returns a HashMap back to main.
29686176,1,0,0,java.util.HashMap,However I'm stuck on how to return the variable of HashMap.
29686296,2,0,0,java.util.HashMap,So try define Map pairsCount = new HashMap<>(); before the  if (in != null)
29688950,2,0,1,java.util.HashMap,"Try something like a HashMap<String, ArrayList<String>>."
29689571,2,0,0,java.util.HashMap,"Create a HashMap for each organization, e.g., HashMap<String,Boolean> memberOfNAACP = new HashMap<String,Boolean>();."
29689571,2,0,0,java.util.HashMap,"If you don't know all the organizations in advance, use an ArrayList of HashMaps, type ArrayList<HashMap<String,Boolean>>."
29689276,1,0,1,java.util.HashMap,I'm thinking it would involve using a HashMap.
29689464,1,0,1,java.util.HashMap,"Java HashMap - get value from HashMap, user input."
29689464,1,0,1,java.util.HashMap,I am learning HashMap and trying to write a mortgage program.
29689464,1,0,1,java.util.HashMap,I thought that I would use the following in my HashMap 30 Years 3.95 15 Years 3.25 Here is so far what I have written Loan Class: Getting user input code.
29689464,1,0,1,java.util.HashMap,My Question: I do no want to hard code the calculation (home value* 3.25%) is there a way to get value from the HashMap based on the user input?
29690692,1,0,1,java.util.HashMap,How to send POST request using HTTPClient with HashMap as one parameter.
29690692,1,0,1,java.util.HashMap,I want to send Post request with many string parameters along with one HashMap object.
29690692,1,0,1,java.util.HashMap,"In the above code, I also want to send HashMap object in the request."
29691147,2,0,0,java.util.HashMap,"You can put all the strings in a HashMap, and then you can create a JSON object from it."
29691183,1,0,0,java.util.HashMap,I know HashSet Internally work as HashMap and HashMap internally.
29691183,1,0,0,java.util.HashMap,I know HashSet internally work as HashMap and HashMap internally use LinkedList as FIFO etc.
29691221,2,0,1,java.util.HashMap,"It is same as HashMap, except that when you iterate over it, it presents the items in the insertion order."
29696676,2,0,0,java.util.HashMap,"Since none of the other answers actually answered ""why"": HashMap stores objects into buckets, and then only uses the lists in the bucket."
29696676,2,0,0,java.util.HashMap,HashMap and HashSet should never be relied upon to provide any particular ordering.
29764044,2,0,0,java.util.HashMap,"ITestContext :- This is really very helpful to drive your test as below  The most usefulness of ITestContext is you can iterate over test tags and run multiple tests/suites and can pass HashMap as a param to drive your tests(Data driven testing) Most of time if you have a some web app, the functionalists are same but your operations may vary based on input data."
29698704,1,0,20,java.util.HashMap,"For some reason I used to think that java.util.Random is thread-unsafe, a-la HashMap or BitSet, and Math.random() is implemented either as wrapping access to Random with synchronized block, or ThreadLocalRandom.current().nextDouble()."
29700656,1,0,0,java.util.HashMap,When userA sends a message to userB the servlet gets the corresponding AsyncContext from the HashMap and pushes the data to the client.
29700656,1,0,0,java.util.HashMap,The servlet starts an AsyncContext and adds it to the HashMap.
29709488,2,0,4,java.util.HashMap,keys() isn't a valid method for the HashMap class.
29710297,2,1,0,java.util.HashMap,"I think your approach of using the HashMap class with map.containsKey method is an efficient approach for the word count you solved so what is left is to order and print the map in a descending order, here is a clean and efficient example on how to achieve this: code."
29711201,1,0,1,java.util.HashMap,Last entered HashMap key is setting for every element in the map.
29711201,1,0,1,java.util.HashMap,"But, in the HashMap, the last key entered is the key for ALL of the items in the HashMap, not just the last element."
29712050,2,0,0,java.util.HashMap,In the HashMap you are storing Fibonacci number as a Integer.
29712050,2,0,0,java.util.HashMap,Change your HashMap value type to Long.
29714490,2,1,4,java.util.HashMap,"Because it is needed for hashing, in HashMap, HashSet, and friends."
29714933,2,0,0,java.util.HashMap,As to why it usually needs to be reimplemented when you override equals: they are both used when storing and retrieving objects from collections (for example a HashMap).
29717234,1,0,0,java.util.HashMap,Java - Adding another String value to existing HashMap Key without overwriting?
29717234,1,0,0,java.util.HashMap,I was wondering if someone would be able to help with regards to adding another String value to an existing key within a HashMap in Java?
29717320,2,0,1,java.util.HashMap,"You have 2 solutions:  Use HashMap<String, List<String>> to store the data Use Multimap which is provided by 3rd party Google Collections lib"
29717403,2,1,0,java.util.HashMap,"A Map (the HashMap) in your case is a direct ""mapping"" from one ""key"" to another value."
29717403,2,1,0,java.util.HashMap,"However, if you need multiple String objects that are mapped from a single key, you could use a different object which can store multiple objects, such as an Array or a List (or even another HashMap if you wanted."
29717403,2,1,0,java.util.HashMap,"For example, if you were to be using ArrayLists, when you are assigning a value to the HashMap, (say it is called myHashMap), you would first check if the key has been used before, if it hasn't, then you create a new ArrayList with the value you want to add, if it has, then you just add the value to the list."
29719855,1,0,0,java.util.HashMap,Not sure if I'm using Map or HashMap correctly for loop.
29723251,2,0,0,java.util.HashMap,"The difference between your working code and the loop that in the working code you are using string ""10"" but in the loop you insert the integer but your hashmap is HashMap<String, String>"
29721600,1,0,1,java.util.HashMap,HashMap output issue.
29721600,1,0,1,java.util.HashMap,I am trying to use a HashMap to do a project where I read in a list of jumbled words and a file of actual dictionary words and use a HashMap to find all the words that match in the jumbled words file and print them out.
29723472,1,0,1,java.util.HashMap,Why this raises compilation error when trying to increment the value and put it back to HashMap?
29723692,1,0,1,java.util.HashMap,But I can't seem to find a way to do that without prior having to serialize them into HashMap.
29725333,1,0,1,java.util.HashMap,HashMap get(Key) function not working in Android AsyncTask.
29725333,1,0,1,java.util.HashMap,I am trying to get a value from a HashMap that is passed in as a parameter to an AsyncTask.
29725361,2,1,4,java.util.HashMap,Actually you first need to retrieve the HashMap object from the array params as so: code.
29725361,2,1,4,java.util.HashMap,"If you passed in just one HashMap, then you need to retrieve the element at index 0."
29725361,2,1,4,java.util.HashMap,The HashMap... paramas indicates that params is an array of HashMap elements.
29729031,2,0,2,java.util.HashMap,"Otherwise it won't be used properly (since Collections such as HashMap, HashSet, ArrayList, etc... will call the default implementation of Object's equals instead of calling your implementation)."
29729538,1,0,0,java.util.HashMap,Read and write arrayList of Objects by using HashMap.
29729538,1,0,0,java.util.HashMap,I want to write and read 'HashMap' to file.
29729538,1,0,0,java.util.HashMap,My 'HashMap' is:  code.
29729668,2,0,0,java.util.HashMap,"It's simple really: java.util.Properties is a subclass of java.util.HashTable, which implements java.util.Map, just like java.util.HashMap does."
29752709,2,0,0,java.util.HashMap,"From the README file, it appears that parsing an object just gives you some classes that extend the basic java collection classes (org.json.simple.JSONObject inherits java.util.HashMap & org.json.simple.JSONArray inherits java.util.ArrayList) so you can use all the normal java methods."
29733314,2,0,0,java.util.HashMap,If you want a list of key value pairs then use HashMap.
29739225,2,1,0,java.util.HashMap,"This is your code modified to use TreeMap (sorted HashMap) instead of ArrayList where each button is mapped to a socket object, notice that the socket is no longer global."
29736418,2,0,1,java.util.HashMap,"In your example, whenever you want to retrieve something from you HashMap, you need to have key and key2, because their equals() is the same as object identity."
29736418,2,0,1,java.util.HashMap,"This makes the HashMap completely useless, because you cannot retrieve anything from it without having these two keys."
29736418,2,0,1,java.util.HashMap,"Now try to imagine some use case, where a HashMap actually makes sense."
29740800,2,0,0,java.util.HashMap,Different approach: You can insert all values into a HashMap with the Key as the Integer  and the Value as the count.
29738792,2,0,0,java.util.HashMap,You can parse your json data to a HashMap not a class object:  code.
29738792,2,0,0,java.util.HashMap,Get JSON data from a HashMap: code.
29739487,1,0,1,java.util.HashMap,Convert a JSON array to a HashMap using jackson parser.
29739487,1,0,1,java.util.HashMap,"I want to convert the above array to a HashMap< String,Node > , where the key is the blockId and Node is a POJO with id and text fields in it."
29739487,1,0,1,java.util.HashMap,Right now I am converting the JSON array to an Array of Nodes and then iterating through the array to create the HashMap I want.
29739487,1,0,1,java.util.HashMap,I want to create the HashMap when the ObjectMapper parses the JSON (so just 1 pass through the JSON array).
29740709,1,0,3,java.util.HashMap,Hashmap would refer to the same object even if we instantiate it with new HashMap(old).
29740809,2,0,3,java.util.HashMap,"you may also probably need to change the member declaration and get methods to the base Map type, rather than HashMap"
29740877,2,1,2,java.util.HashMap,"You can also use the other HashMap constructor you mentioned, which is slightly more readable: code."
29740877,2,1,2,java.util.HashMap,The full copies at construct time and to get the map are unwieldy and the standard underlying HashMap will do modification checks that are pointless if we know it isn't going to get modified anyways.
29740748,2,0,1,java.util.HashMap,"In order for your class to be immutable, getH() must return a copy of the HashMap."
29740748,2,0,1,java.util.HashMap,"Otherwise, any caller of getH() can modify the state of the HashMap member of your IamImmutable class, which means it's not immutable."
29740748,2,0,1,java.util.HashMap,An alternative would be to replace getH() with methods that access that internal HashMap without exposing it.
29740748,2,0,1,java.util.HashMap,"For example, you can have a method String[] keys() that returns all the keys of the HashMap and a method String get(String key) that returns the value for a given key."
29741843,2,0,1,java.util.HashMap,"You could use HashMap, where key is given number and value is number of occurrences."
29746306,2,0,1,java.util.HashMap,"To summarize what I've written in comments, I'd make it as following:  Create additional index HashMap with entries [2-char subsequence -> list of words]."
29746144,2,0,0,java.util.HashMap,"Essentially, you would build a HashMap or lookup table (there are not that many chars) for each ""character"" (=term in search-engine-speak), where a lookup would return all objX where it appears (=document in search-engine-speak), ideally in ascending order."
29746144,2,0,0,java.util.HashMap,"If querying for ba should not match an abc key, you can refine the lookup-table / HashMap to store character positions (eg."
29748609,2,1,1,java.util.HashMap,EDIT: Keeping addressMap as a HashMap: Make Customer class look like this: code.
29749372,2,0,2,java.util.HashMap,"casting the result of ois.readObject() from Object to HashMap casting this HashMap to a HashMap<String, Contact>  That second step is where the warning comes from."
29749372,2,0,2,java.util.HashMap,"Because types are erased at run time, there's no way for the JVM to actually confirm that the HashMap contains only String keys and Contact values -- it has to take your word for it, for which it issues the warning."
29749372,2,0,2,java.util.HashMap,"If you're not absolutely sure, then the safer thing to do would be to iterate through each entry in (HashMap) ois.readObject(), casting the key and values to String and Contact specifically to check that they're the right types."
29752352,1,0,0,java.util.HashMap,Pass HashMap with Custom Parcelable Arraylist between activities.
29752352,1,0,0,java.util.HashMap,I am trying to pass the HashMap between between my services and activity.
29752573,2,1,1,java.util.HashMap,"putParcelableArrayList() takes in an ArrayList<""Parcable Items"">, not a HashMap."
29755419,2,0,0,java.util.HashMap,"A HashMap is a standard java collection object that allows elements of arbitrary type (called the key) to be mapped to another set of elements again of an arbitrary, definable type (called the value)."
29755419,2,0,0,java.util.HashMap,"What it boils down to is that, if unspecified, the HashMap will be mapping Object keys to Object values."
29755419,2,0,0,java.util.HashMap,"Whilst this HashMap will technically be all inclusive in terms of mapping, you are losing type information as you put elements into the HashMap (where they are stored, very vaguely, as elements of type Object)."
29755419,2,0,0,java.util.HashMap,"To fix, all you need to do is specify a more specific type to the HashMap like so: code."
29755419,2,0,0,java.util.HashMap,"assuming msglist is a map with type signature Map<String, HashMap<String, Integer>> or: code."
29757730,2,1,1,java.util.HashMap,"This may not directly provide the appropriate 'command' you wish, but you can indirectly retrieve the data associated with the Component that fired the event (eg the Component returned by the getComponent method) by:  Mapping each component to its ID using a Map (eg HashMap) Setting the name of each Component to it's ID, and use the getName method If the component extends AbstractButton, you can cast to that type and use the getActionCommand method."
29757514,1,0,1,java.util.HashMap,Hibernate: HashMap annotation mapping.
29757514,1,0,1,java.util.HashMap,Why my mapped HashMap can't behave like simple java map?
29759860,1,0,1,java.util.HashMap,Resizing a HashMap with quadratic probing (backing array implementation).
29764527,2,1,2,java.util.HashMap,You should use LinkedHashMap in place of HashMap(where the order of inserts is not guaranteed to be preserved)if you want the order of your inserts.
29764527,2,1,2,java.util.HashMap,"Since you are fetching the records in an order and inserting that in a HashMap, the records are inserted in a random order, since it is passed through a hashfunction."
29764569,2,0,1,java.util.HashMap,"You are using HashMap which says following:   This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
29764569,2,0,1,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
29766745,1,0,0,java.util.HashMap,Passing HashMap to jsp.
29770398,2,0,1,java.util.HashMap,"Put everything in a Map< String, Collection<String>> (HashMap or TreeMap which will sort the cities by state....)."
29778640,1,0,0,java.util.HashMap,"resultList and resultList2 are initialized with new ArrayList <HashMap<String,String>>(); code."
29778722,1,0,0,java.util.HashMap,"How can I fill the matrix using the fillMatrix method, how to fill the ArrayList and the HashMap?"
29779301,2,0,0,java.util.HashMap,An example of how to add to your HashMap code.
29779301,2,0,0,java.util.HashMap,You will need another class that extends Number so that you can add this to your Matix HashMap.
29780014,1,0,2,java.util.HashMap,So I created a HashMap for the same: code.
29781458,1,0,2,java.util.HashMap,"The data is stored in ""simple"" collections (HashMap, HashSet)."
29783301,2,0,2,java.util.HashMap,"If you need a List for every comparison you could have something like HashMap<Comparison, ArrayList<String>>."
29786284,1,0,0,java.util.HashMap,"Iterating over a HashMap with a Pair(x,y) as the key."
29786284,1,0,0,java.util.HashMap,I have a HashMap: code.
29786348,2,0,0,java.util.HashMap,I hope your definition of uniqueness is not based on equals() because if it is the case then all the key of HashMap is unique
29786516,1,0,3,java.util.HashMap,"I have a matrix of HashMaps and I am trying to add up the contents of those HashMaps based on a given input which will match the ""outer"" HashMap's keys."
29786516,1,0,3,java.util.HashMap,"Take the SSCCE below (with 1 error that illustrates my progress), there are 4 HashMap rows of HashMaps, and I want to add up the contents of the HashMaps in rows 1 and 3."
29787012,1,0,1,java.util.HashMap,JDBC ResultSet Data to HashMap.
29787012,1,0,1,java.util.HashMap,I am not able to set the data from ResultSet to HashMap.
29787012,1,0,1,java.util.HashMap,"My Query is returning 4 records, but HashMap is holding Last 2 records only."
29792258,2,0,2,java.util.HashMap,"Your order is:  object1  object2  object2  object3  object4  object2  LinkedHashSet don't allow duplicates, so it's delete third object and sixth object and in result we have:  object1  object2  object3  object4   LinkedHashSet extends HashSet and using HashMap object to store values."
29792258,2,0,2,java.util.HashMap,"If you want to understand how duplicates not added to LinkedHashSet you need to look into method HashMap.putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict)  but this method complicated(JDK version 1.8)."
29808616,2,0,2,java.util.HashMap,Now you can iterate the HashMap to do assignments like so: code.
29809100,1,0,1,java.util.HashMap,Hadoop Serialization on HashMap and float[].
29809100,1,0,1,java.util.HashMap,"I want to modify the class Graph like below, I still have no idea of how to serialize and deserialize the HashMap and float[] type."
29809846,1,0,9,java.util.HashMap,Here I create HashMap and increment value if multiple ranks are in the set.
29810407,1,0,1,java.util.HashMap,"Error  Apr 22, 2015 11:31:54 PM org.apache.catalina.core.StandardContext   reload INFO: Reloading Context with name [/derStandardUserAnalyzer]   has started Apr 22, 2015 11:31:54 PM   org.apache.catalina.loader.WebappClassLoaderBase   checkThreadLocalMapForLeaks SEVERE: The web application   [/derStandardUserAnalyzer] created a ThreadLocal with key of type   [com.google.gson.Gson$1] (value [com.google.gson.Gson$1@e7f068c]) and   a value of type [java.util.HashMap] (value [{}]) but failed to remove   it when the web application was stopped."
29812300,1,0,0,java.util.HashMap,or if my Foo objects are used as keys or values in a HashMap like code.
29812847,2,0,0,java.util.HashMap,"You should use HashMap for key, value pairs."
29813038,2,0,1,java.util.HashMap,"You can choose from Hashtable, HashMap, TreeMap based upon your subsequent need."
29814038,1,0,2,java.util.HashMap,Create a HashMap with a fixed Key corresponding to a HashSet.
29814708,2,1,2,java.util.HashMap,"But, while your basic data structure idea (HashMap of String to Set<String>) is sound, there's a bug in the ""add"" function."
29814877,2,0,2,java.util.HashMap,An alternative solution would be to use a HashMap: code.
29815080,1,0,0,java.util.HashMap,Creating XML- input data from HashMap.
29815080,1,0,0,java.util.HashMap,I have a below data in HashMap: code.
29815080,1,0,0,java.util.HashMap,"Note: the data in the HashMap may incease horizontally and vertically, means, at run time I can have any number of node, so the requirement is to create a generic code.Prefered to use DomParser."
29818487,1,0,2,java.util.HashMap,"I see two ways (let's assume I know that n mappings will be stored):  Use a HashMap of initial size n and load factor 1 Use an ArrayList of size n, store (Key, Value) pairs."
29819061,2,0,0,java.util.HashMap,One thing to be concerned about is whether you could sometimes have significantly larger maps; it might be a good idea to add a check and use a regular HashMap in that case.
29819595,2,0,1,java.util.HashMap,The implementation of HashMap is quite interesting for efficiency.
29819431,1,0,0,java.util.HashMap,"I just added a ArrayList<HashMap<String, String>> as a field of one of my entities but it seems not to be recognized by Cloud Endpoints."
29824253,2,0,0,java.util.HashMap,Another way is to create a HashMap and put in in values when you populate the combobox.
29825046,1,0,9,java.util.HashMap,I want to write a generic code but I couldn't find a proper way to get prior item in the list with my HashMap logic.
29829037,2,1,6,java.util.HashMap,"This can be done by going through an initializer block of a different Map (e.g., a HashMap)."
29860574,2,0,2,java.util.HashMap,"Just copy the ImmutableMap into a new HashMap, add the items, and convert to a new ImmutableMap code."
29836551,1,0,0,java.util.HashMap,I'm having a problem with SimpleXML on Android inserting null elements into a HashMap using @ElementMap.
29836737,2,0,0,java.util.HashMap,Something like: private Map map = new HashMap(); code.
29839853,1,0,2,java.util.HashMap,"I think the best way is a HashMap<String, Int>."
29840024,2,0,0,java.util.HashMap,"HashMap is ok, but since your data size is too large, I suggest you go for a NoSQL solution, HBase for example."
29840799,2,0,0,java.util.HashMap,"they should be same  for any   given class, the java virtual machine will need to find exactly the same supporting   classes that the javac compiler needed to find at compilation time.In other words,   if javac needed access to java.util.HashMap then the java command will need   to find java.util.HashMap as well."
29841109,2,0,2,java.util.HashMap,"For example, HashMap<SomeClass> won't work if it can't call equals() and hashCode() of SomeClass, so they must be public."
29842325,2,0,0,java.util.HashMap,"HashSet/HashMap are the usual way people store bag-of-words vectors in Java - they are naturally sparse representations that grow not with the size of dictionary but with the size of document, and the latter is usually much smaller."
29841214,1,0,1,java.util.HashMap,Problem: I store the nodes in Cache (which is basically a HashMap) in order to access them easily.
29847998,1,0,0,java.util.HashMap,How to return last added value from the HashMap.
29847998,1,0,0,java.util.HashMap,i created the same method for the ArrayList but i do not know how to do it for the HashMap code.
29857304,2,0,0,java.util.HashMap,"As a consequence, when you put those objects in a HashMap at some point, all these objects would end up in the same slot, leading to a degenerated HashMap that would perform badly."
29857304,2,0,0,java.util.HashMap,"Even if you do not plan to put your objects in a HashMap, this seems to be a strong argument against implementing equals to compare based on a broader criteria."
29856689,2,1,2,java.util.HashMap,"HashMap, HashSet, etc."
29860296,2,1,0,java.util.HashMap,(The JSONSmart version of JSONObject is a subclass of HashMap.)
29861270,2,0,10,java.util.HashMap,"If you don't specify what kind of a map you want, you will get whatever the default is, which currently happens to be a HashMap."
29861270,2,0,10,java.util.HashMap,"Since HashMap doesn't preserver the order of elements, it will definitely not do for you."
29868867,2,1,2,java.util.HashMap,"Or even better, a HashMap, if you would ever want to expand your application to allow private messaging, you would need to access a specific ServerThread, and with a HashMap you can do so easily."
29863141,2,0,2,java.util.HashMap,Rather than declaring you HashMap as  code.
29865910,1,0,2,java.util.HashMap,Java how does HashMap identify the key object if hashCode are the same and equals is true?
29865910,1,0,2,java.util.HashMap,I always thought hat HashMap is identifying its keys by using hasCode and equals.
29868046,2,0,1,java.util.HashMap,"I would use a HashMap to store the value I encounter in the array, with the count as a value."
29868046,2,0,1,java.util.HashMap,"So if you encounter a 4, you would look it up in the HashMap, if it doesn't exist, you would add it with a value of 1, otherwise increment the value returned."
29868046,2,0,1,java.util.HashMap,You can the loop over the HashMap and get all the values and print the number of duplicates encountered in the array.
29868080,2,0,2,java.util.HashMap,Just add the number you will find duplicated to some structure like HashSet or HashMap so you can find it later when you will detect another duplication.
29870392,1,0,0,java.util.HashMap,HashMap not matching the value.
29871647,2,0,1,java.util.HashMap,"For a brute force search, the time to scan or iterate over them (all of them support iteration) is O(n) Btw even a HashMap uses an array to store it's entries which is why iterating over its elements to find a value e.g."
29871241,2,0,1,java.util.HashMap,"Now, if you don't mind considering other datastructures, you really should take a look at those who use hash functions (HashSet, HashMap...)."
29871966,2,1,1,java.util.HashMap,"For your set of unvisited cities consider either a HashMap<String, City> or a HashSet<City>."
29871790,1,0,1,java.util.HashMap,Two questions: 1) Can I declare doRequest in a way that for example HashMap and TreeMap would be fine but using ImmutableMap would be a compile time error?
29872482,2,1,1,java.util.HashMap,1) Can I declare doRequest in a way that for example HashMap and TreeMap would be fine but using ImmutableMap would be a compile time error?
29872515,1,0,0,java.util.HashMap,Null Pointer Exception with entrySet() on HashMap.
29872515,1,0,0,java.util.HashMap,I want to iterate through the HashMap and this is part of the code: code.
29872515,1,0,0,java.util.HashMap,04-25 19:13:31.070: E/AndroidRuntime(1446):   java.lang.NullPointerException: Attempt to invoke virtual method   'java.util.Set java.util.HashMap.entrySet()' on a null object   reference  I looked at the users variable and it does contain a table with keys and values.
29874244,2,0,1,java.util.HashMap,"Then you can create a HashMap<Pair<MyObject,MyObject>,Integer>, so a Pair of MyObject instances would serve as the key."
29875777,1,0,0,java.util.HashMap,I am trying to store synonyms of a given word into a HashMap.
29875989,1,0,2,java.util.HashMap,The other uses as HashMap with the Word as key and the frequency as value.
29875989,1,0,2,java.util.HashMap,In the HashMap variant: code.
29876190,2,1,3,java.util.HashMap,"One of the reason is that iterating a HashMap can be much slower than an Array, the reason is locality."
29876190,2,1,3,java.util.HashMap,"On the other hand, each element of HashMap is stored in different place in the memory, so when you traverse the HashMap, you get a lot of cache misses, you end up with swapping data in and out of cache all the time, which dramatically slows down you program."
29876190,2,1,3,java.util.HashMap,"Although the actual implementation of HashMap is in an optimized way such that the data in the memory is clustered together, but even in this case, (@Radiodef)since HashMap uses some sort of linked list, each element of HashMap contains extra pointers, so a HashMap consumes more memory than an Array, more memory means more cache misses and more page faults, so HashMap in general is slower than Array."
29876202,2,0,0,java.util.HashMap,A HashMap is a data structure which has (basically) an array of linked lists: code.
29876202,2,0,0,java.util.HashMap,"So the data structure has ""holes"" in it, and also it's more fragmented than an array because a HashMap has an object for every entry."
29876202,2,0,0,java.util.HashMap,Iterating a HashMap will generate more loads from memory than iterating an array.
29876038,1,0,0,java.util.HashMap,"I have a map which looks like  Map<Word, Set<Word>> tupleMap = new HashMap<Word, Set<Word>>(); The Word class is nothing special, it contains a few Strings like value and so on."
29878088,2,0,1,java.util.HashMap,"There are several others, such as HashMap, SortedMap, etc."
29878088,2,0,1,java.util.HashMap,"With regard to interfaces vs. implementations, you may find my answer to Java - HashMap vs Map objects here helpful."
29878133,2,0,2,java.util.HashMap,"You'd be well advised to choose another implementation, such as HashMap, depending on your requirements."
29878133,2,0,2,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
29878133,2,0,2,java.util.HashMap,This means that it is less efficient than HashMap for single-thread models and less efficient than ConcurrentHashMap for multi-threaded models.
29879326,1,0,5,java.util.HashMap,"The reason for using <ArrayList<String>> and <HashMap<String, WrData>> will escape most developers when they'll see such lines of code."
29880266,2,1,2,java.util.HashMap,"Word lookup The fastest way is a HashMap<String, double[]>, assuming it all fits into memory."
29882073,1,0,1,java.util.HashMap,"I want to write a program ask the user to enter numerator and denominator and store them in a matrix and arrange it by hashmap the following is the question I wrote the code but I still have wrongs: Develop a public class Matrix according to the following specifications [14 marks] The Matrix class represents matrix of the fraction Number to the following specifications and for example the size of the matrix as 2 rows x 3 columns  The class has a private instance variable HashMap <Integer, ArrayList<Number>>, which represents the collection of numbers from class Number."
29882073,1,0,1,java.util.HashMap,"The class has a two-argument constructor that creates and initializes HashMap <Integer, ArrayList<Number>> instance object and set the values of rows and cols by the given values as arguments."
29884371,2,1,2,java.util.HashMap,You can implement a custom comparator using a HashMap: code.
29884934,2,0,0,java.util.HashMap,"However I don't think this is a problem, as it just means that to find a street in a HashMap you would probably have to search several of the closest crosses X."
29886064,2,1,4,java.util.HashMap,"As it is, classes are generally perfectly right to assume that other classes honor the Object class contract, and can use them in a HashSet or HashMap."
29886695,2,1,0,java.util.HashMap,"If the file is small enough and you are bulk deleting, then you could always read into into a HashMap and run .remove(qStudent) (assuming the key is based on qStudent)."
29886695,2,1,0,java.util.HashMap,"Then, you can write out the HashMap to the file when finished with all deletes."
29887301,1,0,0,java.util.HashMap,how to store key value pairs in java without using HashMap or any other collection?
29887590,2,0,1,java.util.HashMap,HashMap IS basic.
29887590,2,0,1,java.util.HashMap,"I your case, a HashMap is really the ideal data structure to use to keep track of the data."
29887590,2,0,1,java.util.HashMap,"Unless it is a requirement to not use Collections, I would suggest at least trying HashMap."
29894887,2,0,2,java.util.HashMap,"As HashMap is widely used in Java, I guess the implementation aims to offer maximum performance without expecting any optimization from the execution environment; hence, the common use of this pattern."
29894457,1,0,0,java.util.HashMap,Operations are stored in a java HashMap.
29895545,1,0,0,java.util.HashMap,"This works great for the first view, but any subsequent views aren't being added to the HashMap at the superclass."
29896464,2,1,0,java.util.HashMap,"What i understood is you have an Abstract class View, this class contains a static HashMap viewMap."
30007506,2,1,2,java.util.HashMap,"Note that I've dropped the finished set, and the HashMap is now called running."
30007506,2,1,2,java.util.HashMap,"This means that the HashMap will always be the size of the number of currently running threads, which will always be less than (or equal) to the total number of threads ever run."
29903820,2,0,0,java.util.HashMap,You know there is a special ConcurrentHashMap version of HashMap to deal with concurrent (i.e. multithreaded) use?
29904977,1,0,2,java.util.HashMap,Loading from csv and storing in HashMap with key containing multiple values.
29907317,2,0,0,java.util.HashMap,It's similar how you fill the HashMap with data.
29909286,1,0,6,java.util.HashMap,"map is instantiated in #getTeamsIn with new HashMap<>(); Tried to break on exception in eclipse to see if some thread was doing some crazy shit, but everything seems pretty normal to me."
29909286,1,0,6,java.util.HashMap,"-- Update 2 -- Regarding the random info in Update 1, that's really unimportant, since, for performance reasons (at least in HashMap and ArrayList), ConcurrentModificationException is only checked in the end of iterations, by comparing the actual size of the array of elements with the expected size of it."
29910238,2,0,0,java.util.HashMap,Create an object of JSONObject Create an object of HashMap Iterate over jsonObj.keys() and for every key get value like jsonObj.getString(key).
29912310,2,0,0,java.util.HashMap,"To iterate and display the hashmap in a html page in either jsp or jsf can be done in the following ways: In case of JSP , use jstl : Map books = new HashMap(); code."
29912548,1,0,0,java.util.HashMap,Based on the above program the answer is: Answer: The time to find the value from HashMap with a Person key depends on the size of the map.
29912548,1,0,0,java.util.HashMap,The time to find the value from HashMap with a Person key depends on the size of the map.
29912548,1,0,0,java.util.HashMap,Deleting a Person key from a HashMap will delete all map entries for all keys of type Person.
29912624,2,0,1,java.util.HashMap,"To find an item in a HashMap normally, the hash code is used to find which ""bucket"" the item was placed in."
29912697,2,1,2,java.util.HashMap,HashMap uses hashcode to place the entries in the bucket and equals to locate them.
29912697,2,1,2,java.util.HashMap,That's why   The time to find the value from HashMap with a Person key depends on   the size of the map.
29912886,1,0,0,java.util.HashMap,"I have a Matrix class with fillMatrix() and printMatex() methods, it is fraction matrix and filled by using hashmap :  HashMap <Integer, ArrayList<Number>> (with rows and colomns format)  Number is a class with addition and subtraction of fraction methods."
29916887,2,1,2,java.util.HashMap,"To get the values in some sorted order use LinkedHashMap (kept in insertion order) or TreeMap, sortedMap (Custom order as designed by you) java.util.HashMap is unordered; you can't and shouldn't assume anything beyond that."
29916887,2,1,2,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
29918615,1,0,3,java.util.HashMap,"I understood that arrays of primitives are internally treated differently than ArrayList or other higher order objects, but then why is it possible (same topic more or less but a different question maybe) to instantiate a HashMap<String, int[]> without any warnings, exceptions?"
29918624,1,0,4,java.util.HashMap,What is the use of Holder class in HashMap?
29918624,1,0,4,java.util.HashMap,I have found that in HashMap we have an inner class Holder with the following description: code.
29919110,2,1,5,java.util.HashMap,It's an implementation detail of Oracle's HashMap and you can't use it directly.
29965652,2,0,0,java.util.HashMap,"It generates temp script file with data inside in weird order because of ParametersHolder inherits HashMap and there should be ""using"" keyword after '-' for example: I wrote LinkedParams extends GNUPlotParameters class with inner LinkedMap and overrided methods to use inner structure; code."
29922331,2,0,0,java.util.HashMap,"So when you are trying to do this this.rates.get(new Pair(from, to)); you are basically creating a new instance of Pair which does not exists as a key in your HashMap."
29922282,2,1,7,java.util.HashMap,Here's a bit deeper insight into the inner working on HashMap and what you have to do to make it work: http://stackoverflow.com/a/6493946/2266098
29923937,1,0,0,java.util.HashMap,"I'm using semaphore (though i've tried with ReentrantLock too, so i think it's not the problem) to assure the thread-safety access to an HashMap."
29924481,1,0,5,java.util.HashMap,Maybe I can read it in as a HashMap using gson as I did with this program.
29924481,1,0,5,java.util.HashMap,How could I fit that well into a HashMap?
29924481,1,0,5,java.util.HashMap,Is HashMap even the best choice?
29924758,2,1,2,java.util.HashMap,"This problem, actually only need one Map, and you can find this more convenience if you use a TreeMap instead of HashMap."
29927146,1,0,1,java.util.HashMap,Cleaner map reduce with Java 8 and a HashMap.
29927146,1,0,1,java.util.HashMap,Right now I have a HashMap I'm trying to reduce to a total.
29928214,1,0,1,java.util.HashMap,I am receiving a ClassCastException while trying to cast a LinkedList to a Map or HashMap.
29929456,2,0,1,java.util.HashMap,The problem is this line: if(synonymMap.containsValue(in)) Since the value of the HashMap is an object of type String array it will always return false because you are comparing a String to a String array.
29932694,1,0,0,java.util.HashMap,"I would like to have a HashMap of contacts and their numbers saved into an ArrayList but I keep having this error "" missing method body or declare abstract  "" for      private static ArrayList> getContacts(); I was able to get the contacts and their numbers out and show with toast but I need to save it and then move it into the SQLite database."
29933538,2,0,1,java.util.HashMap,"Alternatively, you could build a HashMap that points from Class objects to Consumer objects."
29933927,2,0,1,java.util.HashMap,"Use the type HashMap<List<String>,String[]> or HashMap<Set<String>,String[]> for the cases where the order does and does not matter respectively, in place of HashMap<String,String[]>."
29933927,2,0,1,java.util.HashMap,"Best practice would be to wrap all keys with Collections.unmodifiable* methods before using them as keys - if they are modified while in HashMap entires, the behavior of your program will be undefined."
29934421,1,0,0,java.util.HashMap,I have an ArrayList HashMap that holds Contacts -names and phone numbers-.
29934421,1,0,0,java.util.HashMap,I would like to check and make sure that these items are in the ArrayList HashMap before I send it to the SQL database for saving.
29936531,2,0,1,java.util.HashMap,BTW Good practice is use interface reference:  Map temp = new HashMap;    instead of:  HashMap temp = new HashMap;     More info here: Type List vs type ArrayList in Java
29936581,1,0,2,java.util.HashMap,super V>>>>)  I want to sort a Hashmap according to the size() of Lists being the values of the HashMap.
29938311,1,0,0,java.util.HashMap,I have a vector of HashMap...but I want them to be transposed...first line to be put in column vector.. theese lines are HashMaps in my vector code.
29939930,1,0,0,java.util.HashMap,"How to implement a ""set intersection"" method for HashMap?"
29939930,1,0,0,java.util.HashMap,"Supposing we have 3 hashmaps HashMap<String, Integer> h1, h2, h3, take this example: code."
29941596,1,0,0,java.util.HashMap,"EDIT I've tried this HashMap with multiple values under the same key, and my hashMap now looks like this HashMap<String, List<Place>> placeMap = new HashMap<>(); Also tried to put Object instead of Place(place is my superclass)."
29941596,1,0,0,java.util.HashMap,"But when I now create my subclasses and wants to add them to the HashMap I get:   The method put(String, List) in the type HashMap<String,List<Place>> is not applicable for the arguments (String, NamedPlace)  and   The method put(String, List) in the type HashMap<String,List<Place>> is not applicable for the arguments (String, DescPlace)  here is my adding which created the error:  code."
29941596,1,0,0,java.util.HashMap,"NamedPlace and DescPlace are both subclasses to Place, and I want them both in the same HashMap.. OP I'm working on a little project here."
29941596,1,0,0,java.util.HashMap,The thing is that I need to use a HashMap instead of a ArrayList on this part of the project because HashMap is alot faster for searching.
29941596,1,0,0,java.util.HashMap,I've created a HashMap like this: code.
29942953,1,0,0,java.util.HashMap,"I want to pass the taskItems  ArrayList<HashMap<String,String>> taskItems = new ArrayList<HashMap<String, String>>();  through intent to the second activity code."
29943025,2,1,2,java.util.HashMap,"HashMap extends Serializable interface, so you can pass an ArrayList of Serializable objects: code."
29943788,1,0,0,java.util.HashMap,"Different objects with the same key in a HashMap, move all to ArrayList."
29943788,1,0,0,java.util.HashMap,"And now I create new classes which extends Place, called NamedPlace and DescPlace, it's not much that differ them, just that DescPlace have a description and NamedPlace doesn't.. My problem I need to create a HashMap that where I can put my created objects into."
29943788,1,0,0,java.util.HashMap,"I tried a hashMap like this HashMap<String, Place> placeMap = new HashMap<>(); This one works fine, but this is gonna be problem when I create a new NamedPlace called Pizza Resturant and later on I add another place called Pizza Resturant."
29943788,1,0,0,java.util.HashMap,"Now I've two different objects with the same key in my HashMap What i want to do  I've a searchfield where I enter the name, which is the key for my HashMap, and add ALL those object with that name to an ArrayList where I can't go through those objects one by one and change stuff."
29943788,1,0,0,java.util.HashMap,"Like I've done here, but here I use just one arrayList to all, I need to have a HashMap that stores all objects and which I do the search in.. code."
29946258,1,0,1,java.util.HashMap,Nested Double Brace Initialization with HashMap and List.
29947129,2,0,7,java.util.HashMap,"), and as the default toMap collector returns an HashMap, it has no notions of ordering, but you could store the elements in a TreeMap instead."
29949040,2,1,3,java.util.HashMap,If you only ever need to compare them for equality (or put them in a HashMap or HashSet which is effectively the same) you only need to implement equals and hashcode.
29949180,2,0,1,java.util.HashMap,"If you update the equals method, you should always update hashCode or you will be setting a boobytrap for yourself or others when they try to use it in a HashMap or HasSet or similar collections (very commonly used)."
29949419,2,1,1,java.util.HashMap,"(You can also implement Comparator) If you ever want to store an object in a HashSet or use it as a key in a HashMap, make sure that you override the hashCode method or all your objects from the HashSet or all the keys in the HashMap will be stored in a single bucket."
29952028,2,1,2,java.util.HashMap,"Since you're dealing with Strings, as long as your result doesn't have to account for case sensitive, you can use a HashMap to count your occurrences."
29952028,2,1,2,java.util.HashMap,"Then when your HashMap is populated, you can iterate through it and move all occurrences whose value is 1 (Not duplicated) to an array (List of some sort)."
29952028,2,1,2,java.util.HashMap,You'll see in my code sample that each string becomes a key in my HashMap and the count of the key is the value.
29961683,1,0,3,java.util.HashMap,Later on I want to retrieve all these objects in the form of a Map/HashMap in a different class.
29963894,1,0,2,java.util.HashMap,{       playerMap = new HashMap<>(); } //edit 2 code.
29964118,2,0,0,java.util.HashMap,in case you want to use HashMap implementation.. and should call the method as code.
29965956,1,0,4,java.util.HashMap,"I am trying to induce a concurrent modification exception by accessing a HashMap instance variable reference, but this program is not throwing the error."
29967673,2,1,2,java.util.HashMap,"However, concurrent access to a HashMap can be dangerous, though."
29967673,2,1,2,java.util.HashMap,You can enforce a ConcurrentModificationException if you read from the HashMap in parallel: code.
29967320,2,0,1,java.util.HashMap,"From the Javadoc, it looks like the HashMap Iterators are fast-fail Iterators; meaning it will throw it if you are Iteratoring while adding."
29967401,1,0,10,java.util.HashMap,Strange HashMap exception (HashMap$Node cannot be cast to HashMap$TreeNode).
29967401,1,0,10,java.util.HashMap,"After another question asked on stackoverflow,  (Java- Why this program not throwing concurrent Modification exception) I started to experiment with the HashMap."
29967401,1,0,10,java.util.HashMap,"This, however, seems strange to me, because it looks like it is an internal HashMap error."
29971983,2,0,1,java.util.HashMap,Use this answer: How does a HashMap work in Java?
29971983,2,0,1,java.util.HashMap,"and the information, that HashSet<E> is just a HashMap<E, Object>."
29973011,2,0,0,java.util.HashMap,"Now for keeping track of multiple words, you want a map, word plays the key, and the WordData is the value Map<String, WordData> wordMap = new HashMap<>()."
29976643,2,0,6,java.util.HashMap,"Your error is in the constructor: public EventRunners()    {      Map <String, Set<Runner>> runnerMap = new HashMap<>();    } You are initializing a local variable, not the field."
29977069,2,0,0,java.util.HashMap,I suggest using a HashMap.
29979446,1,0,5,java.util.HashMap,If it helps I'm using a HashMap for my program.
29979577,2,1,8,java.util.HashMap,HashMap's implementations of these methods are appropriately optimized to effectively only perform a single key lookup.
29979854,2,0,0,java.util.HashMap,"In a HashMap, these operations are roughly constant time, assuming good hash code distribution (and that the distribution works well with the size of the HashMap)."
29979854,2,0,0,java.util.HashMap,"Even in the case of HashMap, a null check will be faster than containsKey, making the second option the winner."
29981167,1,0,0,java.util.HashMap,Why is HashMap.keyIterator class private?
29981980,2,0,2,java.util.HashMap,Rather than working with simple array you can work with java's Collection's HashMap.
29981980,2,0,2,java.util.HashMap,"With HashMap the main working goes around with the for loop, will check if the Character is already present in the HashMap if it is then we will get the value associated with Character and will add 1 with the existing value and if the Character is not present then we will put a Character in HashMap and will store the initial count 1 with the associated character."
29981980,2,0,2,java.util.HashMap,"You are using array which you will be needed to intialize first at time of declaration this will create a extra memory space which will be waste if all 26 letters are not being encountered and as per the code you have provided in the question you are allocating 3 arrays so it will take much more memory, So rather this solution will require only a HashMap (HashMap will allocate memory according to the key and value inserted in HashMap)and a for loop which will just compute the occurence of  Charater and to use it again further in your program will be much more easier with it."
29984082,1,0,0,java.util.HashMap,java: Store HashMap in ArrayList.
29984189,2,0,0,java.util.HashMap,"Try to put ArrayList<HashMap<String, String>> instead of ArrayList<Object> create a HashMap and add into the ArrayList."
29985982,2,1,0,java.util.HashMap,in such cases please refer to java_serialization  in your case use JSONArray instead of your ArrayList and JsonObject instead of HashMap.
29984235,2,0,0,java.util.HashMap,"But you assume in your destinationFunction that this list contains only HashMap<String, String> elements."
29986308,1,0,6,java.util.HashMap,Class HashMap implements Map interface : code.
29986308,1,0,6,java.util.HashMap,Class LinkedHashMap extends HashMap that means it should implement Map interface by default.
29986371,2,0,3,java.util.HashMap,"Although LinkedHashMap<K,V> would implement Map<K,V> simply because it extends HashMap<K,V>, the fact that linked hash map derives from a regular hash map is an implementation detail, not a hard requirement."
29986377,2,0,4,java.util.HashMap,"It might also be because LinkedHashMap extends HashMap is an implementation detail, what is really important to know is that LinkedHashMap is a Map."
29988631,2,0,0,java.util.HashMap,"You have initialized Map<String,String> resultant = new HashMap<String,String>(); outside the for loop; When the first time for loop run the maps get populated with certain values."
29988631,2,0,0,java.util.HashMap,"That's why it is taking the last value; just put the Map<String,String> resultant = new HashMap<String,String>(); inside the for loop so every time a new map object is created."
29992045,2,0,0,java.util.HashMap,Because you could use a HashMap or some other object (I am kind of confused with what you are trying to achieve)
29996805,1,0,0,java.util.HashMap,HashMap containsKey() method isn't working for certain elements.
29996805,1,0,0,java.util.HashMap,"The constructor takes in two arrays, and I want to put them in my HashMap but if the map already contains a word from one of the arrays, then I want to throw an exception."
29998898,1,0,0,java.util.HashMap,"Implement a Java Iterator for a nested HashMap in which an element can be any of 1) an Integer or, 2) another nested HashMap or, 3) an empty HashMap."
29998898,1,0,0,java.util.HashMap,"In this example, the first two ""values"" are two Integers, and the third ""value"" is a nested HashMap which contains two Integers and one ""deeper level"" nested HashMap."
29998898,1,0,0,java.util.HashMap,"Regarding key 7, I would like to express that the ""value"" can also be an empty HashMap -- because this is an interview question, I guess this possibility of having ""empty value"" may affect the next() or hasNext() implementation?"
30001069,2,1,0,java.util.HashMap,The IElementComparer class set by the setComparer method is used when the viewer is searching its internal HashMap for matching elements (such as when you call refresh(element)).
30005760,2,0,0,java.util.HashMap,"Map is an interface, so we have to use one of its implementations, in this case a HashMap."
30006037,2,0,0,java.util.HashMap,You may need to add a method toMap() in your user class to convert it into a HashMap.
30006279,1,0,2,java.util.HashMap,The HashMap is created with default load factor (0.75) and an initial capacity sufficient to contain the elements in the specified collection.
30008381,2,0,0,java.util.HashMap,"I think you could use a HashMap, which is a common Hash implementation built into the Java library: code."
30008381,2,0,0,java.util.HashMap,"Everytime you want to change the values, do: person1.put(""name"", ""Jill"") And to get the values, it's person1.get(""name"") If you want to take the class into account, you'll have to get the className and manually compare it in your code, to do different things according to the ""class"" of the object (which in reality is a HashMap, but nevermind)."
30008717,2,0,3,java.util.HashMap,A set based on ConcurrentHashMap will give better concurrent performance for point access / update to the set than on based on HashMap.
30009653,2,0,1,java.util.HashMap,I'd suggest using a HashMap ( you can iterate through them using HashMap.getEntry() ) Here are a few useful links: Read a HashMap from Config Write a HashMap to Config
30010038,2,0,0,java.util.HashMap,"In the best case, an ArrayList uses less space per element than a LinkedList, and a LinkedList uses less space per element than a HashMap."
30010038,2,0,0,java.util.HashMap,It is also difficult to quantify the worst case ... because there are certain usage patterns that can lead to an empty ArrayList or HashMap occupying a large amount of space.
30015033,2,0,0,java.util.HashMap,"In the code below I parse your input file line-by-line, using a HashMap to store the maximum and minimum Date objects for each IP address: code."
30012712,2,1,6,java.util.HashMap,As mentioned by @Alexis C. groupBy will return HashMap which means that your keys will not be ordered.
30014959,1,0,1,java.util.HashMap,I'm using HashMap to store and auto increment but after startup() my program go back to start means it started from Video V1001 code.
30018376,2,0,0,java.util.HashMap,"When you create a HashMap with the default capacity (16), you create it with 16 buckets (i.e., the capacity == the number of buckets)."
30018501,1,0,0,java.util.HashMap,"I am just confused whether to convert the query result to Json or a HashMap and send it to JSP or is there any other way to achieve this, and in the jsp file I can get the HashMap data and send it to the javascript in the same file."
30018501,1,0,0,java.util.HashMap,"(I need to use the data in javascript) My question/ doubt is:  Will it be a good practice to send a HashMap with a large amount of data (somewhere in the range of 300,000 to 700,000 records for now) from servlet to JSP."
30019209,2,1,2,java.util.HashMap,Definitely keep using the HashMap.
30019209,2,1,2,java.util.HashMap,"Serializing from HashMap to JSON and back is very expensive, and should only be used when you are transferring data ""across-the-wire"" to the browser or the database."
30019209,2,1,2,java.util.HashMap,"When passing a HashMap, you are sharing a simple pointer that references the HashMap from your servlet to the JSP page."
30019459,2,0,1,java.util.HashMap,I believe you should look into objects where you have key/value pairs like HashMap for example.
30019902,1,0,1,java.util.HashMap,"Thanks a lot for your help =P PS: I am not native english, so forgive me for my mistakes Edit: here is the piece of code that add a <key, value> to the HashMap, this is Java-cup code: code."
30020058,2,1,2,java.util.HashMap,A Hashtable or HashMap has no order.
30023629,1,0,3,java.util.HashMap,How to Store HashMap> to SQLite?
30023629,1,0,3,java.util.HashMap,I have to store the HashMap value on SQLite with Keyset  and reuse when application is restart using shared preference.
30023771,2,0,0,java.util.HashMap,Original Answer Before Question Edited: HashMap is already serialized so you can store the HashMap directly on your sqlite database as a BLOB.
30026159,2,0,1,java.util.HashMap,"For example, calling contains() on a HashMap will return false, even though the object has been added."
30026847,1,0,1,java.util.HashMap,I am building a Java class for each document and add specific attributes from the resulting classes to the index (currently implemented as HashMap).
30028623,2,0,1,java.util.HashMap,"I can give you an standard solution related with java.utils I'd use a common Map<Key,Value> and being specific a HashMap."
30028623,2,0,1,java.util.HashMap,"Now we can group or objects in a HashMap<CountryCityKey, MySuperObject> The code for that could be:  code."
30030949,1,0,0,java.util.HashMap,Spring MVC Rest webservice: using HashMap in request bean.
30030949,1,0,0,java.util.HashMap,"When I do this, I get the following error:  BindException:org.springframework.validation.BeanPropertyBindingResult:   1 errors↵Field error in object 'zoekExcelLijstParameters' on field   'sorting': rejected value [{""uploadDate"":""asc""}]; codes   [typeMismatch.zoekExcelLijstParameters.sorting,typeMismatch.sorting,typeMismatch.java.util.HashMap,typeMismatch];   arguments   [org.springframework.context.support.DefaultMessageSourceResolvable:   codes [zoekExcelLijstParameters.sorting,sorting]; arguments [];   default message [sorting]]; default message [Failed to convert   property value of type 'java.lang.String' to required type   'java.util.HashMap' for property 'sorting'; nested exception is   java.lang.IllegalStateException: Cannot convert value of type   [java.lang.String] to required type [java.util.HashMap] for property   'sorting': no matching editors or conversion strategy found]  I have no idea what I'm doing wrong."
30030949,1,0,0,java.util.HashMap,I've also tried using a List with key-value objects instead of a HashMap.
30030949,1,0,0,java.util.HashMap,"I've seen many solutions where they suggest to work with POST data and a request body, or just plain HashMap's, but here I need (want) it to work with a GET (since it's a 'get' operation and not a 'create' operation)."
30033862,1,0,1,java.util.HashMap,"With GSON, is it possible to get a list of fields in an HashMap."
30033862,1,0,1,java.util.HashMap,would it be possible to get an HashMap of those fields somehow?
30036122,1,0,0,java.util.HashMap,Breadth First Search of a graph HashMap> in a word ladder game implementation.
30036122,1,0,0,java.util.HashMap,Basically I am at the point where I have constructed my graph in a HashMap were the String key is the current word and the ArrayList contains all of the words that are 1 character off.
30036122,1,0,0,java.util.HashMap,"So pretty much my hashmap graph contains all the words in a file i pass through, I want to conduct a breadth first search on that graph where the graph is like the HashMap> i contain the graph in, I have a start word and a ending word that I want to search for and use."
30036401,2,0,0,java.util.HashMap,"you could use HashMap, create a method that translate all different types of input into the correct one."
30036401,2,0,0,java.util.HashMap,The result Best Buy will be the HashMap key.
30038777,2,0,0,java.util.HashMap,"Just to be clear, my data-set was API information of a HashMap  HashMap<Integer, Set<API>> apisPerSystem = new HashMap<Integer, Set<API>>()"
30037694,1,0,5,java.util.HashMap,Why the internal implementation of HashSet creates dummy objects to insert as values in HashMap rather than inserting nulls?
30037694,1,0,5,java.util.HashMap,"HashSet is implemented using HashMap and when we add anything say e1 to HashSet, internally it adds (e1,new Object()) in the HashMap if e1 was not present in the set."
30037834,2,1,6,java.util.HashMap,"The add method calls put(key, PRESENT) on the internal HashMap."
30037834,2,1,6,java.util.HashMap,"The remove method calls remove(key) on the internal HashMap, but it must return a boolean indicating whether the key was present."
30039059,2,0,0,java.util.HashMap,It seems that you know how to recover the map marker with you MyMarker object using HashMap.
30039059,2,0,0,java.util.HashMap,"Since your question is about creating an application with HashMap and multiple markers, it seems that you already have done that."
30039533,1,0,0,java.util.HashMap,A naive solution is to create a sorted kind of HashMap which has the document as the key and # common clusters as the value.
30041588,2,0,3,java.util.HashMap,"I may be missing something, but it looks like you could just do something simple like this, just keep the count of Dates in the HashMap, and iterate over the HashMap for the output: code."
30045748,2,0,0,java.util.HashMap,Maintain the HashMap for comparison between the image selected and its answers.
30044426,2,0,3,java.util.HashMap,See :- HashMap
30044450,2,0,2,java.util.HashMap,"Also since you are using generics it is recommended to declare map as: Map<SampleClass, Integer> counts = new HashMap<SampleClass, Integer>();"
30054656,2,1,2,java.util.HashMap,"Below, there are couple differences relevant for your case: java.util.Hashtable is synchronized, but java.util.HashMap is not."
30054656,2,1,2,java.util.HashMap,"If you have one-threaded application, HashMap will perform better than Hashtable."
30054656,2,1,2,java.util.HashMap,"java.util.Hashtable does not allow null keys nor values, while java.util.HashMap allows one null key and many null values."
30054648,2,0,2,java.util.HashMap,"Properties is for special purposes, if HashMap is OK for your program - use it."
30054648,2,0,2,java.util.HashMap,HashMap also has better performance because Properties is based on Hashtable whose methods are synchronized
30058069,2,1,2,java.util.HashMap,"Firstly, instead of using an array for unique keys, use a HashMap<String, Integer>."
30059799,2,0,1,java.util.HashMap,"Map<String, Double> = new HashMap<String,Double>  here your key is of type String and Value of type Double."
30060869,1,0,1,java.util.HashMap,Why is my method using String.replace and a HashMap not replacing the strings?
30065348,1,0,0,java.util.HashMap,How can I add a string one at a time to a HashMap>?
30065348,1,0,0,java.util.HashMap,wordListMap is a HashMap> so I need to loop through and put the key and and a List.
30065461,2,0,0,java.util.HashMap,"So I've gathered that you want to, given HashMap<Integer, List<String>>, you'd like to:  create a List object add String objects to said List add that List object as a value to be paired with a previously generated key (type Integer)  To do so, you'd want to first generate the key code."
30065461,2,0,0,java.util.HashMap,"Lastly, you'd add the List to the HashMap code."
30066806,1,0,1,java.util.HashMap,HashMap vs. ArrayList insertion performance confusion.
30066943,2,0,0,java.util.HashMap,"ArrayList is faster than the HashMap when you add item at the last of the ArrayList because there is no need to shift the elements in the ArrayList to the right side, you can see the efficiency of the HashMap if you add an item at the front of the ArrayList like this arrayList.add(0, str)."
30070549,2,0,1,java.util.HashMap,Then you can use HashMap: code.
30070688,2,0,3,java.util.HashMap,Why Arrays I also want to explain why is it better in my opinion to use 2d array than a HashMap of objects.
30075261,1,0,0,java.util.HashMap,ArrayList vs HashSet vs HashMap and questions regarding data-structure design.
30075261,1,0,0,java.util.HashMap,Isn't ArrayList faster than HashSet or HashMap when iterating through a for loop?
30075261,1,0,0,java.util.HashMap,HashMap could make sense for Persons considering uniquePersonId will be used everytime an Insurance or Claim is searched for.
30075261,1,0,0,java.util.HashMap,"Will iterating like this Iterate through a HashMap still be effective enough, and make for good programming design?"
30075261,1,0,0,java.util.HashMap,edit: Difference between HashSet and HashMap?
30075261,1,0,0,java.util.HashMap,"Was linked as possible duplicate question, however that thread only explains the difference between HashSet and HashMap, with a link to Oracles Collection tutorial."
30076996,2,0,1,java.util.HashMap,Here is the idea using a Singleton and a HashMap.
30079007,1,0,11,java.util.HashMap,Java HashMap - Is it necessary to use .put() for each set?
30079007,1,0,11,java.util.HashMap,You have to put them into a HashMap for reasons.
30081186,1,0,0,java.util.HashMap,Reading a text file to a HashMap in Java.
30081517,2,0,0,java.util.HashMap,"(With a little help from the comments) your code should be reading into the HashMap already, so i assume your problem is printing the HashMap after reading it in."
30081517,2,0,0,java.util.HashMap,"I suggest reading this: Convert HashMap.toString() back to HashMap in Java To print all elements of that HasMap you could iterate over it, like shown here: Iterate through a HashMap"
30083637,1,0,6,java.util.HashMap,"I've been thinking of constructing a set (since they only contain one of each element) then adding it to a HashMap using Collections.frequency(), but the methods to construct a Set from primitives require several other calls, so I'm guessing it's not as fast."
30083676,2,0,8,java.util.HashMap,"I would create an array instead of a HashMap, given that you know exactly how many counts you need to keep track of: code."
30084501,2,0,2,java.util.HashMap,HashMap extends AbstractMap but implements Map.
30085372,2,0,0,java.util.HashMap,"Consider creating HashMap<Character, Integer> that maps row letters to the respective number."
30090197,1,0,0,java.util.HashMap,Java using HashMap userinput loop.
30090197,1,0,0,java.util.HashMap,I saw a student registration sample and wanted to write it using HashMap in my own way to learn more about HashMap.
30090197,1,0,0,java.util.HashMap,"2)A class where I have declared 2 HashMap variables, one for student name and id and the second one for GPA and id -class AddInfo code."
30090197,1,0,0,java.util.HashMap,If they are same then put them in a different HashMap variable.
30090262,1,0,0,java.util.HashMap,"At this time, I am using a HashMap like this: code."
30090300,2,1,2,java.util.HashMap,"For your situation, I would use a plain HashMap."
30090300,2,1,2,java.util.HashMap,"If the customer doesn't want the order, then simply remove it from the HashMap - a very inexpensive operation."
30090300,2,1,2,java.util.HashMap,Something like a HashMap that auto-expires any key/value after a certain amount of time.
30090617,1,0,4,java.util.HashMap,"How can I optimize this HashMap with 42,000 keys."
30090617,1,0,4,java.util.HashMap,"I tried to store the data in a HashMap using the zipcode as a key, like code."
30090786,2,0,4,java.util.HashMap,"So the simplest trick to quickly gain performance, is to use the key and directly retrieve value using get method of HashMap (Note the keys are hashed and hence calling get method with key will enable fast lookup)."
30090786,2,0,4,java.util.HashMap,"The library makes sure that, instead of creating EntrySet for every item in the HashMap, it just stores entry using hashed keys."
30090686,2,1,5,java.util.HashMap,"Instead, you might use the HashMap and get the value by its' key."
30090750,2,0,1,java.util.HashMap,"If it is necessary to use regular expression based lookup, HashMap is not proper data structure to use."
30093811,1,0,0,java.util.HashMap,HashMap and Java Bean list as datasource in Jasper report.
30093811,1,0,0,java.util.HashMap,My Jasper report has some fields for which I am passing the value through HashMap using datasource as JRMapCollectionDataSource.
30095264,1,0,0,java.util.HashMap,"However, param1 is null, and the param HashMap in the HandlerDescription is of size 0."
30099779,1,0,0,java.util.HashMap,What exactly does initialCapacity of HashMap does?
30099779,1,0,0,java.util.HashMap,If I specify HashMap map = new HashMap(1); then will it contain HashMap with only 1 bucket and all the elements added to the HashMap will stay in that bucket no matter how good my hashing algo is?
30099978,2,0,0,java.util.HashMap,"Have a look at the documentation, especially the following paragraphs:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor."
30099978,2,0,0,java.util.HashMap,"Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put)."
30120840,2,0,0,java.util.HashMap,"This means when you are initializing a hashMap using new HashMap(), the size of array of buckets will be 16."
30120840,2,0,0,java.util.HashMap,"If the HashMap is initialized using HashMap(int var1), the load factor is set to its default value (0.75) and initial size will be set to var1."
30120840,2,0,0,java.util.HashMap,"HashMap can also be initialized using new HashMap(int var1, int var2) in which case the size and load factor will be set by the developer."
30120840,2,0,0,java.util.HashMap,"If you do not have an idea, then use new HashMap()."
30100768,2,1,7,java.util.HashMap,"Now if you look at the HashMap class' code it first compares if this reference is same as the reference passed in, using == operator."
30100768,2,1,7,java.util.HashMap,Below is the code snippet from HashMap class: code.
30101444,1,0,1,java.util.HashMap,Convert a part of Json to HashMap using Jackson ObjectMapper.
30101444,1,0,1,java.util.HashMap,I am trying to unmarshall a json file in a way such that few properties of Json are mapped into a HashMap that is present in my model class.Rest of the properties are mapped to the respective fields of the class.Please find the Json below: code.
30109104,1,0,2,java.util.HashMap,"So, whenever the EventHandler receives a UserLogin event, the User object is extracted from the event and is stored in a HashMap."
30109104,1,0,2,java.util.HashMap,"When a UserLogout event is received, that User object will be remove from the HashMap."
30121062,2,0,2,java.util.HashMap,"However if you use a different data structure such as a HashMap (which is built on to of an array) you can check/lookup a key like ""101"" in O(1) time typically."
30122720,2,0,0,java.util.HashMap,You can create a HashMap for your purpose.
30132386,1,0,1,java.util.HashMap,Two arrays or one HashMap to convert a String to Morse code?
30132386,1,0,1,java.util.HashMap,Or HashMap?
30132386,1,0,1,java.util.HashMap,"Then I tried using a HashMap with the English characters as key, and morse as value."
30132386,1,0,1,java.util.HashMap,Arrays or HashMap?
30132386,1,0,1,java.util.HashMap,HashMap: code.
30137687,2,0,1,java.util.HashMap,"A HashMap will use the Date object's equals() method to compare keys, which does a milliseconds comparison:  The result is true if and only if the argument is not null and is a Date object that represents the same point in time, to the millisecond, as this object."
30139946,2,0,0,java.util.HashMap,HashMap seem like a good option to be used here.
30141596,2,1,2,java.util.HashMap,Implementing hashCode is necessary if you wanted to use a HashMap instead.
30142843,2,0,0,java.util.HashMap,"When your program receives the path to the directory where all files reside, it can list the files in the directory, read them one by one and store the results in a HashMap<String,String> where the key is the file-name and the value is the contents of the file."
30146021,1,0,3,java.util.HashMap,Group JTree Nodes Using HashMap.
30146021,1,0,3,java.util.HashMap,"I'm trying to build a JTree using a HashMap, with the Values as the main category and Keys as the sub-category."
30148331,1,0,3,java.util.HashMap,UPDATE: Is there any java logging framework that supports passing HashMap data (or similar in its interface)
30156515,2,0,0,java.util.HashMap,MainThread has each task in a HashMap as a key and time to wait as a value.
30156515,2,0,0,java.util.HashMap,"It also runs in an infinite loop in a synchronized block with a monitor/lock for the task its currently running, checking each cycle for the shortest wait time from the HashMap and than running the task with the shortest wait time and waiting for the task to notify it to continue."
30174203,2,1,1,java.util.HashMap,Here is how Java HashMap does it internally: code.
30158162,2,0,2,java.util.HashMap,You're using a HashMap so map inserts call the hashCode method to figure out where in the map the item should go.
30158329,2,0,1,java.util.HashMap,What I did was to change  HashMap<> to TreeMap<> Implement Comparable interface for NearestFreq and override the compareTo Method to: code.
30162041,2,0,0,java.util.HashMap,When you try to get a Value from the HashMap via get(new MyKey()) a new object is created and there will be no corresponding key in the map with this adress in your RAM.
30167196,2,1,2,java.util.HashMap,You can lazily create and keep all the bucket objects in HashMap in a singleton and your application threads can pick from it.
30163231,1,0,2,java.util.HashMap,What is the reason for making a nested class static in HashMap or LinkedList?
30163231,1,0,2,java.util.HashMap,Lets take an example of Entry class in HashMap code.
30163231,1,0,2,java.util.HashMap,"My question is, what is the reason for making a nested class static in HashMap or LinkedList?"
30163278,2,1,1,java.util.HashMap,"This means that you can create a HashMap.Entry by itself, without having to create a HashMap first (which you might not need at all)."
30164087,1,0,3,java.util.HashMap,How does Java 8's HashMap degenerate to balanced trees when many keys have the same hash code?
30164087,1,0,3,java.util.HashMap,How does Java 8's HashMap degenerate to balanced trees when many keys have the same hash code?
30164087,1,0,3,java.util.HashMap,How does HashMap combine hashing and natural ordering to implement the trees?
30164299,2,0,0,java.util.HashMap,"HashMap has it's own hash method that applies a supplemental 2 bit lenght hash to the objects inside in order to avoid this problems:   Applies a supplemental hash function to a given hashCode, which defends against poor quality hash functions."
30164299,2,0,0,java.util.HashMap,"This is critical because HashMap uses power-of-two length hash tables, that otherwise encounter collisions for hashCodes that do not differ in lower bits."
30164299,2,0,0,java.util.HashMap,"If you want to see how it's done, take a look is inside the source of the HashMap class."
30180593,2,0,3,java.util.HashMap,The implementation notes comment in HashMap is a better description of HashMap's operation than I could write myself.
30165299,2,0,0,java.util.HashMap,"Also u can make a global HashMap to find your string inside it... so the ""map creation"" of the switch is avoided..."
30169932,1,0,1,java.util.HashMap,Is that correct or can I use ConcurrentHashMap instead of HashMap + Lock?
30175419,2,0,1,java.util.HashMap,"It is not clear from OP but if you do not even need classes, Jackson can deserialize JSON into HashMap of HashMaps and do the reverse as well."
30177844,2,0,0,java.util.HashMap,"In Java, a HashMap<XYPoint, HashSet<Road>> endPoints, and another HashMap<Road, HashSet<Road> next should suffice; assuming your Road objects have a ending and starting XYPoint s. The logic would go as follows: code."
30177881,2,0,0,java.util.HashMap,Override equals and hashCode of Cell and then simply store your Cell objects in a HashMap that guaranties a high speed of retrieving its elements.
30184876,2,0,0,java.util.HashMap,"The hash map you need is HashMap<XYPoint, List<Road>> For each road, store List<Road> startList and endList The algorithm is (pseudo-code): code."
30185926,2,0,0,java.util.HashMap,"Just remember that, if you need another variable type placed into the hash map, you can create it with something like HashMap<String, byte[]>."
30188667,1,0,0,java.util.HashMap,How to convert a String ( ArrayList of HashMap ) to ArrayList.
30188667,1,0,0,java.util.HashMap,Here is my code to create a HashMap and ArrayList .
30188667,1,0,0,java.util.HashMap,Now the key  NS_CHILD_ consist of ArrayList of HashMap that is listChildNew .
30188667,1,0,0,java.util.HashMap,But it get stored in the wbsMap HashMap as String Object.
30188667,1,0,0,java.util.HashMap,How to convert it back to the ArrayList of HashMap.
30189191,2,0,1,java.util.HashMap,Try this instead of HashMap.
30188773,2,0,0,java.util.HashMap,"Your HashMap is of Type , since you put a key and a value as String in it."
30196747,1,0,0,java.util.HashMap,"I don't really have any usable code just yet, so far the structure I thought of is as following:  A class Recipe that represents an individual recipe for manipulation via the app (has all the properties) A class RecipeList that has a HashMap with all the Recipe objects in it that lets you get a certain recipe by an Id RecipeList.GetRecipe(""id"") and save Recipes via RecipeList.SaveRecipe(Recipe), it also handles saving to the SD card  The thing is though that eventually I want to outsource saving to a web space (using PHP) which is part of my project assignment, that's why I decided on using a HashMap so I could utilize an Id."
30198029,1,0,1,java.util.HashMap,"2) At what point in the code does the ""static {..}"" HashMap initialization occur?"
30201817,2,0,0,java.util.HashMap,"In the javadoc for HashMap (of which LinkedHashMap is a subclass), it is clearly stated that: ""If the map previously contained a mapping for the key, the old value is replaced""."
30201817,2,0,0,java.util.HashMap,"Source: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put(K,%20V)"
30204151,1,0,0,java.util.HashMap,The HashMap class in Java 8 appears to return the keyset in a different order than Java 7.
30204151,1,0,0,java.util.HashMap,This was due to dodgy test code that relied on the ordering that the keys were returned from a HashMap.
30209217,2,0,2,java.util.HashMap,"You'd have to use a HashMap for this, then add the numbers as keys and initially 0 as value."
30210968,1,0,0,java.util.HashMap,In this sample as we can see after ResponseAsJSON there is java.util.HashMap written which indicates that  code. }
30210968,1,0,0,java.util.HashMap,"is of type HashMap, similarly after foo3 code."
30213043,1,0,9,java.util.HashMap,"Of course I can just sort and concatenate the SET values as a string, with a separator and use that in a HashMap<String, String> structure but that just doesn't feel right."
30213078,2,1,6,java.util.HashMap,"If you use HashSet<Integer> instead of your custom SET (I'm assuming it's a custom class), it would work just fine, since HashSet overrides hashCode and equals (to be exact, HashSet extends AbstractSet which overrides these methods), so it can serve as a key in a HashMap."
30213078,2,1,6,java.util.HashMap,That's the risk you run into when using mutable objects as keys in a HashMap.
30213159,1,0,3,java.util.HashMap,So for example say if I have a HashMap object that maps Strings to Person objects like so:  code.
30213159,1,0,3,java.util.HashMap,"My initial assumption here is that C is guaranteed to see the change that B made, but when I thought about, I am not sure if the actual change, to the Person object p refers to, actually changes the state of the HashMap(which is part of the state of the locked object) as it is not a structural modification like adding or deleting a mapping."
30213741,2,0,1,java.util.HashMap,"However, there is another potential issue, and that is the visibility of the m HashMap itself: code."
30213956,1,0,0,java.util.HashMap,I iterate through all the values by using java.util.HashMap.values().
30213956,1,0,0,java.util.HashMap,Will just using java.util.HashMap.remove(Object key) with one of the keys suffice?
30218036,1,0,0,java.util.HashMap,Removing position from HashMap.
30218036,1,0,0,java.util.HashMap,"I'm building playlist on HashMap, I have a problem with deleting specific setlist(case 5)."
30218186,2,0,0,java.util.HashMap,You do not seem to need a HashMap.
30218186,2,0,0,java.util.HashMap,A HashMap is just a key-value store that has no order.
30228712,2,1,1,java.util.HashMap,"I don't know what your program logic is regarding your HashMap, but you probably only want to add it to oslist the first time the image is loaded."
30220820,1,0,9,java.util.HashMap,Difference between new HashMap(int) and guava Maps.newHashMapWithExpectedSize(int).
30220820,1,0,9,java.util.HashMap,"In Java, you can create a new HashMap to hold a specific number of items like so: code."
30220820,1,0,9,java.util.HashMap,"Guava provides a Maps.newHashMapWithExpectedSize(int) method, which I would expect to simply call HashMap(int)."
30220820,1,0,9,java.util.HashMap,"Why does newHashMapWithExpectedSize do its own thing, and why would I want to use it over calling new HashMap(int) directly?"
30220944,2,1,5,java.util.HashMap,"Creates a HashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth."
30220944,2,1,5,java.util.HashMap,"Note that the new HashMap(int) constructor's ""initial size"" parameter specifies the initial size of the hash table that entries are stored in, which is basically an implementation detail that you shouldn't have to care about."
30221029,2,0,1,java.util.HashMap,"The HashMap constructor argument is the capacity of the map, i.e. the number of buckets."
30221336,2,0,1,java.util.HashMap,"Consider using a HashMap<Integer,Integer> instead of an array for count."
30221306,2,0,1,java.util.HashMap,"If scores is known to be bounded, you could calculate the max value and allocate enough size; otherwise, use Map<Integer, Integer> such as TreeMap<Integer, Integer> or HashMap<Integer, Integer> may be better."
30231425,2,1,1,java.util.HashMap,using HashMap where key is NODE_NUMBER and value is List<IMethodInstance> at the end intercept() returns map.get(NODE_NUMBER) http://testng.org/doc/documentation-main.html#methodinterceptors
30225231,2,0,2,java.util.HashMap,As taken from the Javadoc of the method hash(Object) in the OpenJDK Java 8 HashMap implementation (assuming this is the JVM you are concerned about): code.
30226063,1,0,3,java.util.HashMap,It seems that Java's implementation of the HashMap always places the keys to the same bins (at least I saw that with Integer keys).
30237159,2,0,0,java.util.HashMap,"To complete other answers, I would mention that when HashMap's keys use built-in Object.hashCode, i. e. don't override this method, that is a pretty often case, Object's hashCode is computed using random number generator, that makes whole system behaivour less deterministic."
30226413,2,0,4,java.util.HashMap,"This is not true for Java 7, which added a unique hash seed to each HashMap instance."
30227681,1,0,1,java.util.HashMap,Finding Mode of a Data Set using HashMap and ArrayList.
30228594,1,0,0,java.util.HashMap,"This particular piece of code store all the letters in a HashMap, and I need to tailor it so that it stores the character occurrence of each word separately (instead of in aggregate, as its doing at the moment)."
30228594,1,0,0,java.util.HashMap,What could I use to store the state of a HashMap with each iteration of its loop?
30230197,1,0,2,java.util.HashMap,I know i can't use HashMap to implement above data structure because if i add StateID2 to same Country StateID1 will be replace with StateID2 for eg  code.
30230257,2,0,1,java.util.HashMap,Store the StationIDs in an ArrayList object and add those object in a HashMap using key-value pair .. where key is the Country against the StationId ArrayList Object.
30232155,1,0,1,java.util.HashMap,"get() method of objectA returns a raw HashMap(I know that would be nice to use generics there and my problem would be solved, but i cannot change the code from that class)."
30234260,1,0,0,java.util.HashMap,getting HashMap objects in SoapUI.
30234260,1,0,0,java.util.HashMap,as part of the requirement I have to return HashMap objects from a function.
30234260,1,0,0,java.util.HashMap,Is there any way to display HashMap objects in SoapUI service response window?
30235678,2,0,2,java.util.HashMap,"Since BasicDBObject extends HashMap, you have just to get the keyset from it."
30237714,2,1,10,java.util.HashMap,"Note that the order is not guaranteed here, because HashMap isn't ordered."
30239797,1,0,1,java.util.HashMap,For example: In a normal Map implementation like HashMap suposing value.equals(value') and value.equals(value'') but value!=value' and value!=value' and value!=value'' if we: code.
30239975,2,1,0,java.util.HashMap,"In this case you will:  Attempt to find the value in the values map - O(1), since it's a HashMap."
30239975,2,1,0,java.util.HashMap,"Not find it, and put the value in the values map - O(1), since it's a HashMap."
30239975,2,1,0,java.util.HashMap,"Put the key-value pair in super - O(1), since it's a HashMap."
30245676,2,0,1,java.util.HashMap,"In order to quickly access 1000's of records randomly and quickly in Android use a HashMap it will allow for constant time access of the data, in addition you can use additional data structure objects to create indexes."
30245676,2,0,1,java.util.HashMap,"For example, if you're data is stored in HashMap<int, Passenger> data and you need to sort passengers by surname you can use sqlite to create a list of Passenger ID's and access the data already loaded into the data object."
30252185,1,0,0,java.util.HashMap,"with the error ""Class 'java.util.HashMap' does not support property 'q1' "", with analogous errors for the other keys."
30258121,2,1,2,java.util.HashMap,Constant 'TEN_PCT is not defined for Utilities`: https://netbeans.org/bugzilla/show_bug.cgi?id=252416 Class 'java.util.HashMap' does not support property 'q1': https://netbeans.org/bugzilla/show_bug.cgi?id=252417
30253640,2,0,2,java.util.HashMap,"What I suggest is to create a LinkedHashMap<String, Comparator<Parent>> map = new HashMap<>();(if you don't need the keys a LinkedHashSet might be sufficient), from there you insert the comparators in the order you want to chain them."
30254736,2,1,1,java.util.HashMap,"As @Dude suggested use HashMap, it will help you to organise things easier."
30255137,2,0,0,java.util.HashMap,"When i have to add/remove items from an Object, usually i use an HashMap."
30255137,2,0,0,java.util.HashMap,"In your case, something like HashMap<String,Sprite>, so you can add/remove items identifying them through the the Hash key."
30262015,2,0,0,java.util.HashMap,"Now you can use a simple HashMap<String,Entry> to store the information as you read it (I'm assuming you are reading from some sort of scanner): code."
30262015,2,0,0,java.util.HashMap,"In principle, you could use a TreeMap whose keys contained the ""order"" stuff, rather than a plain HashMap like this followed by sorting, but I prefer not having either mutable keys in a map, nor changing the keys constantly."
30259924,1,0,0,java.util.HashMap,Is it OK to use a HashMap to keep indices of list elements?
30259924,1,0,0,java.util.HashMap,So I am going to use a HashMap to map each MyObject in myList to its index in myList so that I can find the index much efficiently.
30260091,2,0,0,java.util.HashMap,"When it comes to space you are off course doubling your space while having two structures, and a HashMap will even take more space as it needs to fill a whole hash range, but it's still only in O(n)."
30260446,2,0,0,java.util.HashMap,"You could use LinkedHashMap<MyObject, Integer> in addition to your original List<MyObject> myList; so you can both get index from object and vise versa, as well as iterate through the object in the order you added them, however now the LinkedHashMap<MyObject, Integer> can be replaced by normal HashMap<MyObject, Integer> as you suggested in the first place."
30260649,1,0,6,java.util.HashMap,"Find a single object in a collection, HashMap vs List filter."
30260649,1,0,6,java.util.HashMap,"I store these customers in a HashMap where the key is a unique id : Map<String, Customer> customers = readCustomers(); //For each object created customers.put(c.getCustomerId(), c); From a second file I get data that I use to update the object in the HashMap."
30260691,2,1,11,java.util.HashMap,"Searching for a value by key in a HashMap takes O(1) expected time, which is faster than the O(n) that searching for the same value in a List would take."
30263100,2,1,1,java.util.HashMap,It is normal behavior that the sessions are not ordered as the SessionID->Sessions are stored in a HashMap and converted to a List on the getSessions() method.
30263100,2,1,1,java.util.HashMap,"(As a reminder, a HashMap doesn't guarantee order of the put() call."
30272458,2,0,0,java.util.HashMap,"Using a normal HashMap will also work, but you may get different order each time you run this code."
30266151,1,0,1,java.util.HashMap,Should I use HashMap?
30267230,2,1,0,java.util.HashMap,It utilizes a HashMap of Lists code.
30266610,2,0,1,java.util.HashMap,A HashMap is basically a set of key-value pairs.
30270009,2,0,2,java.util.HashMap,"If you are asking if the HashMap.get method internally iterates over all objects, then the answer is ""No""."
30270009,2,0,2,java.util.HashMap,"If you are asking if you can use (just) HashMap.get calls to iterate over the keys, or values, or key-value pairs in a HashMap, without writing more code, then the answer is ""No""."
30269601,2,0,1,java.util.HashMap,"just do Map<String, Student> mydata = new HashMap<String, Student>(); and to retrieve your Student class do mydata.get(""student name you entered""); and that will return the Student object hope it helps"
30269605,2,0,0,java.util.HashMap,To loop or iterate through a HashMap simply do: code.
30273231,2,0,2,java.util.HashMap,"As pointed out by others, you should switch to a HashMap rather than using a TreeMap, to reduce the complexity of the insertion and retrieval operations."
30273231,2,0,2,java.util.HashMap,"However, optimal use of HashMap depends upon setting its initial capacity."
30273231,2,0,2,java.util.HashMap,"If you do not do this, once your insertions exceed the default capacity, the HashMap will reallocate a larger table, and your items will end up getting re-hashed into the new table."
30273231,2,0,2,java.util.HashMap,"HashMap(int initialCapacity, float loadFactor)   Constructs an empty HashMap with the specified initial capacity and load factor."
30273231,2,0,2,java.util.HashMap,"Java documentation  Here, we state we want the HashMap to have the capacity of 1000000 (able to hold that many elements) with a load factor of 1.0 (insertions have to exceed 100% of capacity before rehashing takes place)."
30270677,2,0,2,java.util.HashMap,Replacing TreeMap with HashMap changes some O(log n) operations to O(1).
30271297,1,0,1,java.util.HashMap,"When is ""map = new HashMap<>()"" being called?"
30271297,1,0,1,java.util.HashMap,"In Java, when is map = new HashMap<>() being called?"
30271333,2,1,3,java.util.HashMap,when is map = new HashMap<>() being called?
30275510,2,0,1,java.util.HashMap,Storing that much data in a HashMap will consume a lot of RAM.
30275175,1,0,0,java.util.HashMap,how to print this map ( java) Map > graph = new HashMap>();[solved].
30280303,1,0,0,java.util.HashMap,Can't retrieve from double HashMap.
30280303,1,0,0,java.util.HashMap,"As far as I have read, it should be possible to make a double HashMap."
30281176,2,0,3,java.util.HashMap,You could store them in a Map - for example HashMap Then you would use value of the coin as the key and amount as the value.
30285269,1,0,2,java.util.HashMap,"What I discovered, after much hair pulling (not that I had much to begin with), is that when a HashMap is ""returned"" by a method in a class, the values are not returned to the calling class's procedure."
30285269,1,0,2,java.util.HashMap,"Rather a pointer to HashMap in the ""called"" class procedure is returned."
30285269,1,0,2,java.util.HashMap,"Subsequent modifications to a ""copy"" of HashMap in the ""calling"" class's method are reflected in the called class's HashMap even though the called class's HashMap is marked private (and the classes are in different packages!)."
30285269,1,0,2,java.util.HashMap,"Likewise, any modifications to the ""called class's HashMap"" are also reflected in the calling class's HashMap."
30285490,2,1,2,java.util.HashMap,"If your application requires that a copy is made when you return a HashMap, then you will need to do the copying explicitly."
30285490,2,1,2,java.util.HashMap,"Fortunately, HashMap has a ""copy constructor"" which produces a new HashMap that is  a shallow copy of the state of an existing Map."
30285304,2,0,1,java.util.HashMap,"To prevent such modifications, you can return a copy of the HashMap : code."
30285304,2,0,1,java.util.HashMap,"This way, changing the returned HashMap won't affect the content of the slHashUser member."
30288623,2,1,0,java.util.HashMap,"As a HashMap is orders of magnitude faster than any database, the task will become trivial and your machine gets bored."
30286068,1,0,0,java.util.HashMap,Convert String to HashMap.
30289010,2,0,0,java.util.HashMap,This is how HashMap and Hashtable works.
30290939,2,1,3,java.util.HashMap,"Though you're keeping the size of the HashMap secret, I can see you're too optimistic."
30290939,2,1,3,java.util.HashMap,"A HashMap.Entry stores the hash (int, 4 bytes) and a reference to Entry next (4 or 8 bytes)."
30290939,2,1,3,java.util.HashMap,"The HashMap maintains an array of references to its entries (4 or 8 bytes per element), which by default kept at most 75% full."
30294169,1,0,0,java.util.HashMap,"Iterating over this set requires time proportional to the sum of the HashSet instance's size (the number of elements) plus the ""capacity"" of the backing HashMap instance (the number of buckets)."
30294341,2,0,3,java.util.HashMap,"The javadoc for HashMap.get(Object) doesn't guarantee O(1) performance either, yet it is well known for being so."
30295062,2,0,1,java.util.HashMap,Sounds like a HashMap will solve your problem.
30296822,1,0,2,java.util.HashMap,I have below basic questions:  Under what scenario an entry in HashMap will be NULL?
30299027,2,0,0,java.util.HashMap,The values you add to a HashSet are actually set as keys of an underlying HashMap.
30299027,2,0,0,java.util.HashMap,A HashSet uses a HashMap under the hood.
30299027,2,0,0,java.util.HashMap,"So, a HashMap's behavior should be expected for a HashSet as well."
30300881,2,0,0,java.util.HashMap,"You should use HashMap instead of List, is faster than List and return value by the key."
30308106,1,0,0,java.util.HashMap,"Is there any possibility to do it combining Pair with List, or maybe HashMap?"
30419399,2,0,0,java.util.HashMap,"Note that my library does not provide (and will not provide in future) any user-visible data structures like maps on primitives, so grouping is performed into usual HashMap."
30380277,2,0,1,java.util.HashMap,"And even more efficient if you built a HashMap<String, TreeMap<Date, Integer> > from the file, where the strings would be people's names and the integers would be the hours on those dates."
30311977,2,0,0,java.util.HashMap,A HashMap does not guarantee the iteration order of it's elements.
30311977,2,0,0,java.util.HashMap,"To quote the API for HashMap:   This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time  Presuming you wish to maintain insertion order in a Map, use a LinkedHashMap."
30318827,2,0,1,java.util.HashMap,"Use a HashMap<String,<Set<String>>> Pseudocode: code."
30318663,1,0,0,java.util.HashMap,HashMap Object array data gets replaced.
30318663,1,0,0,java.util.HashMap,I am adding data into HashMap where node is an object with variables index and successor.
30318953,2,0,0,java.util.HashMap,I think you should use a different data-type or structure than HashMap as HashMaps do not guarantee order.
30318953,2,0,0,java.util.HashMap,"I am pointing this out as your code  peerList.put(node_position, newPeer);  seems to imply you are setting the position of your object in your HashMap but that is not the case."
30318953,2,0,0,java.util.HashMap,I only say this because you are just using the variable called node_postion to key or hash where your data object will live in your HashMap.
30318953,2,0,0,java.util.HashMap,"Difference between HashMap, LinkedHashMap and TreeMap"
30319104,1,0,0,java.util.HashMap,"I have 2 hashmaps: HashMap<String, Word> hmSmall, hmBig."
30319324,2,0,0,java.util.HashMap,"Your Problem is, that, while you iterate through your HashMap with the Iterator Class, you are changing the size of the HashMap by removing elements... You can store the objects to be removed in a separate set and then remove all after the loop."
30320716,1,0,2,java.util.HashMap,"I considered creating a registry of converters, that are assigned to a class: eg FloatConverter for float, and then accessing the relevant converter using a HashMap or equivalent, but I thought this might be quite inefficient."
30321169,1,0,2,java.util.HashMap,"If you need fast access to elements using a key, use HashMap."
30322750,2,0,0,java.util.HashMap,"In this situation I would use 2 HashMap<String, Student>'s."
30323134,2,0,1,java.util.HashMap,"With given restrictions, you should use HashMap."
30321407,2,1,3,java.util.HashMap,"I would recommend to use HashMap implementation, unless you need to be able to both search the collection and retrieve all elements sorted by key in which case TreeMap may be a better idea."
30321407,2,1,3,java.util.HashMap,"Although remember that HashMap has O(1) access time, while TreeMap has O(logn) access time."
30324114,2,0,0,java.util.HashMap,Then you could go over your valuesets and compare them with largest.equals() to the HashMap.
30323096,2,0,1,java.util.HashMap,assumption that a HashMap is ordered.
30323602,1,0,1,java.util.HashMap,"For my master thesis, I'm having some problems with my Java code and I'm not really quite sure, why I am having that error message (right now)... Basically, I have an inheritance package as shown below :   IdentifiersTable class is based on a HashMap < String, LinkedList < InfoIdentifiersTable>>."
30339584,1,0,2,java.util.HashMap,I want to split these into userId which would be the key in a HashMap and each userId is unique.
30339679,1,0,2,java.util.HashMap,How to map two arrays to one HashMap in Java?
30339679,1,0,2,java.util.HashMap,How can I map short name as KEY and long name as VALUE in HashMap?
30345007,1,0,0,java.util.HashMap,can't pass custom class through parcelable if it contains HashMap field - why?
30345007,1,0,0,java.util.HashMap,"It's all working OK if I don't write HashMap<String, String> translations field."
30345037,2,1,3,java.util.HashMap,"UPDATE: to clarify what is happening, you declare variable and do not initialize it, so JVM does, and translates into HashMap<String, String> translations = null."
30345128,1,0,0,java.util.HashMap,"Why `Hashtable` doesn't allow `null` as a key, but `HashMap` does in Java."
30345128,1,0,0,java.util.HashMap,Pardon me for asking a very basic question: HashTable and HashMap are implementations of Map interface having the common datastructure storing keys and values.
30345128,1,0,0,java.util.HashMap,"In the following question  the answer is that HashMap is newer, and has more advanced capabilities.., so why then ConcurrentHashMap doesn't allow null keys"
30376987,2,0,1,java.util.HashMap,"Also, instead of checking if storage.containsKey(null), to check if the player's name NOT is in the HashMap, you should use: code."
30347458,1,0,1,java.util.HashMap,it's my first time to deal with HashMap's and i'm trying to make a simple loop to loop over each key but the code doesn't even enter the for-loop...can anyone help me plz?
30348117,2,0,1,java.util.HashMap,This is the way to loop over the HashMap.
30349515,1,0,2,java.util.HashMap,What I'm using now is a combination of int[] and HashMap:  HashMap for retrieving index of a specific int in the int[] int[] for retrieving the neighbors of that int  What I like:  neighbor lookup is ideally O(2) int[] does not do boxing performance is theoretically very good  What I dislike:  HashMap does boxing twice (key and value) the ints are stored twice (in both the map and the array) theoretical memory use could be improved quite a bit  I'd be curious to hear of better solutions.
30350100,2,0,1,java.util.HashMap,Related:  http://java-performance.info/implementing-world-fastest-java-int-to-int-hash-map/ HashMap and int as key
30350808,2,0,0,java.util.HashMap,One example:  ArrayList and HashMap.
30351051,1,0,1,java.util.HashMap,How to get HashMap labels based on selected List.
30351051,1,0,1,java.util.HashMap,I need your assistant in getting the labels from a HashMap based on the items which are available in my ArrayList.
30351051,1,0,1,java.util.HashMap,The HashMap code is: code.
30354903,2,1,1,java.util.HashMap,"Maybe better idea will be to store the parameters as ArrayList<HashMap<String,String>>than intoArrayList<String>, since select * doesn't say anything about order of the fileds you read."
30355057,1,0,0,java.util.HashMap,Unable to serialize a HashMap.
30355057,1,0,0,java.util.HashMap,"Alright so, I was trying to Serialize a HashMap, but it always fails and throws NotSerializableException I am declaring the HashMap as: code."
30359132,2,0,0,java.util.HashMap,"If you are searching for products mainly through their name, then I would use a HashMap<String, Varer> with name as key to store the products."
30360643,1,0,1,java.util.HashMap,The Java classPreferences has a HashMap property called kidCache.
30362637,1,0,0,java.util.HashMap,"However, the strange thing is that when I deploy the UI code separately to a Tomcat server (running on port 8090), one of the GET requests (which returns a Response with a entity of type Map keyValues = new HashMap();...doesn't even access any of my entity classes) I get the following error in the Glassfish server log: Severe: Failed to generate the schema for the JAX-B elements com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 2 counts of IllegalAnnotationExceptions Property ""salesOrderUid"" has an XmlID annotation but its type is not String."
30365125,2,0,1,java.util.HashMap,"HashMap will be fast enough to get objects based on their hash value but havin 5000000 records, you probably would run into some preformance issues or out of memory issues so you would want to hold on to as little obj as possible any given time hope this helps  happy coding"
30371566,2,0,0,java.util.HashMap,"To get JSON with only the unique items, you could simply emit the resultant HashMap."
30375714,1,0,0,java.util.HashMap,Linking them with the elements of the array using a HashMap: code.
30376128,2,0,2,java.util.HashMap,since the HashMap compares for references this works.
30383051,2,0,1,java.util.HashMap,"Note that if you use a TreeMap, it'll sort the columns alphabetically and if you use a HashMap, it'll put them in random order."
30379889,1,0,0,java.util.HashMap,Why my HashMap puts an element in position 6 instead of the next empty position?
30380247,2,0,1,java.util.HashMap,"Because that's how the HashMap works - the keys are inserted into buckets according to their hash code, the order of insertion is not preserved."
30380007,2,1,2,java.util.HashMap,This is the whole point of HashMap.
30380007,2,1,2,java.util.HashMap,"This is part of why the documentation of HashMap states that ""This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."""
30381580,2,0,1,java.util.HashMap,"Best solution is to use HashMap, like this: code."
30382295,2,1,0,java.util.HashMap,"Consider using a HashMap where the key is the index (Integer), and the value is an ArrayList:  code."
30398203,2,0,3,java.util.HashMap,Java HashMap (java.util.HashMap) chains bucket collisions in a linked list (or [as of JDK8] tree depending on the size and overfilling of bins).
30398203,2,0,3,java.util.HashMap,"For example, java.util.HashMap keeps small buckets sorted in reverse order of insertion and then splits them into two sub-structures obeying that order."
30398203,2,0,3,java.util.HashMap,So an object obeying the general contract for hashCode() might still tank when actually used in a HashMap!
30398203,2,0,3,java.util.HashMap,For the record I've based this analysis on this copy of the source: http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashMap.java
30383499,2,0,0,java.util.HashMap,"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html#putIfAbsent-K-V- If you are using Java 8, you can use putIfAbsent."
30401990,2,1,1,java.util.HashMap,"EDIT: In the case you need to check for duplicates of numbers higher than 10, you need to use Integer.parseIn() to parse the String values and change your Map from HashMap<Integer,Character> to HashMap<Integer,String>, here's the code: code."
30402071,1,0,0,java.util.HashMap,"If the ID does not exist in the markersCurrentHashMap (because the object is out of range/radius), I am removing that entries Marker from the Google Map, and then I am removing the entry from the HashMap."
30402380,1,0,0,java.util.HashMap,All my objects are Serializable and my inner collections are mostly maps (HashMap).
30403502,2,0,0,java.util.HashMap,HashMap is specifically designed for that purpose.
30406707,1,0,2,java.util.HashMap,It is a HashMap where the key is a Class object and the value is a Hashmap with key and value of the type which is defined by the Class object.
30407898,2,1,2,java.util.HashMap,"Now, to answer the more global question of how to expose many private JTextFields through one method, one possibility could be to assign a string ID to each of them, and store them all in a HashMap: code."
30408202,2,0,0,java.util.HashMap,"If you simply want to ensure that the key is not already present in the HashMap when inserting it, you can use the putIfAbsent(K key, V value) method: code."
30408065,2,1,2,java.util.HashMap,Then you create a HashMap which is an actual implementation of the Map interface and using the so called diamond operator <> you tell the compiler that the key and value is the same generic as the one in the declaration of the variable.
30411029,1,0,1,java.util.HashMap,"I could probably just use an int[10] since I won't need that many layers, but then all of the unused layers would each be taking up 32 bits over nothing, compared to my current HashMap which can have keys 0, 9 and only take up 64 bits."
30411076,2,1,1,java.util.HashMap,"SparseIntArrays is more efficient than HashMap<Integer,Integer>."
30411076,2,1,1,java.util.HashMap,"It is intended to be more   memory efficient than using a HashMap to map Integers to Integers,   both because it avoids auto-boxing keys and values and its data   structure doesn't rely on an extra entry object for each mapping."
30414228,1,0,0,java.util.HashMap,Populating ListView with Custom desjgn using HashMap.
30414670,2,1,0,java.util.HashMap,"There are 2 obvious choices:  a array Node[] nodes = new Node[26]; (assuming English language) a Map<Character, Node> map = new HashMap<Character, Node>();  The array is the classic C approach, but since you're working in java I would start off with the map because it's easier to work with."
30414427,1,0,4,java.util.HashMap,As HashMap uses LinkedList when two different keys produces a same hashCode.But I was wondering what makes LinkedList a better candidate here over other implementation of List.Why not ArrayList because ArrayList uses Array internally and arrays have a faster iteration compared to a LinkedList.
30418314,2,0,0,java.util.HashMap,"The factory is a singleton with two significant method:  registerValidator to add a new pair (modelClass, validatorClass) in the HashMap."
30418995,2,1,3,java.util.HashMap,"This uses an intermediate HashMap, to avoid a O(n^2) situation with a parallel scan over the list for each member of input."
30420551,1,0,1,java.util.HashMap,For example it doesn't work with java.util.HashMap.
30421847,2,1,0,java.util.HashMap,You probably need to use ArrayList or (maybe) HashMap: code.
30422971,2,0,1,java.util.HashMap,"Operations are thread-safe: HashMap is blocked, operation is executed, HashMap is unblocked and so on 2. getter is not blocking: it retrieves the most recent update 3. you can scale your HashMap whith this function 4."
30426739,2,0,0,java.util.HashMap,"Shuffle clonedCharacters array using Fisher–Yates shuffle (or if you need to ensure that no item remains in same position, use the Sattolo's variant) To encrypt, create a HashMap<Character, Character> encryptMap by iterating to both arrays (the first for the keys of the map, and the shuffled clone for the values."
30426739,2,0,0,java.util.HashMap,"To decrypt, create a second HashMap<Character, Character> decryptMap again by iterating to both arrays (now use the shuffledclone for the keys and the initial array for the values)."
30428785,2,0,1,java.util.HashMap,"Either way, it sounds like you need to use a Map or HashMap if you need to have quick access to these objects."
30433081,1,0,0,java.util.HashMap,"It seems that HashMap is limited to only one value, and I need a table of values like:  Joe(string) 25(Integer) 2.0(Double) Steve(string) 41(Integer) 1.6(Double)  etc."
30433423,2,0,1,java.util.HashMap,"So you might end up with a HashMap<String, Person> or an ArrayList<Person> ... where Person is your custom class."
30433423,2,0,1,java.util.HashMap,"Your alternatives include HashMap, TreeMap, LinkedHashMap and ConcurrentHashMap."
30437147,2,1,0,java.util.HashMap,"As you defined- HashMap<String,String>() its keys and values must be String.While You are passing $rollNumber as a variable type on retrieving data."
30436676,1,0,3,java.util.HashMap,I am trying to display the contents of the following HashMap : code.
30445548,1,0,0,java.util.HashMap,searching keys of subclass in HashMap.
30445548,1,0,0,java.util.HashMap,That is first filling the HashMap with Sector objects keys and then assigning keys of AlienSector objects.
30445548,1,0,0,java.util.HashMap,"AlienSector is a subclass of Sector, why Java doesn't recognize the presence of a Sector in the HashMap keys if I simply instantiate a subclass of it without first instantiate the key with an istance of the superclass ""Sector"" itself?"
30445921,2,0,2,java.util.HashMap,"You are storing an AlienSector in the HashMap, and then trying to retrieve it with another Sector created using the same parameters."
30445921,2,0,2,java.util.HashMap,When you try to retrieve an object from a HashMap it is looking for an object that is 'equal' to the one you stored.
30445921,2,0,2,java.util.HashMap,"HashMap uses hashCode a filter, deciding that things with different hashCodes can never be equal."
30446501,1,0,0,java.util.HashMap,"I want to find specific class at my application, not call graph between my application class and that class (as like HashMap, AppClassLoader etc.)"
30447109,2,0,0,java.util.HashMap,"I think what you can better do is replace the 2 arrays with a simple HashMap, something like this: code."
30453466,2,1,2,java.util.HashMap,"But you are giving Activity,ArrayList<HashMap<String,String>>,String,String,String,String You should change the constructor to -  code."
30469457,2,0,1,java.util.HashMap,"However, a better design would be to make your Counter class encapsulate a HashMap, rather than extend it."
30603739,2,0,0,java.util.HashMap,"It was NOT about serialization (java or Kryo) It was NOT about some pre-treatment or post-treatment Spark would do before/after serialization It was NOT about the HashMap field which is fully serializable (this one is obvious if u read the first example I give, but not for everyone  ;)  So..."
30461058,2,1,2,java.util.HashMap,"If your list is modifiable during program execution and if your MMSI code is unique, use a HashMap (faster) or a TreeHashMap with key as MMSI and value as Vessel."
30466117,2,0,0,java.util.HashMap,"You may want to consider making that method synchronized (unless that's the reason you're using Hashtable instead of HashMap, for the synchronization)."
30466272,1,0,0,java.util.HashMap,I was trying to implement an undirected graph using a HashMap of ArrayList to represent the adjacency list.
30466301,2,1,0,java.util.HashMap,"You just need to call new on your hashmap HashMap<Integer, ArrayList<Integer>> adj = new HashMap<>();"
30467120,1,0,0,java.util.HashMap,"Since I render packets based on Unix time in miliseconds, it ends up looking like this:  I'd like to fix it so that:  New values (larger timestamp) appear to the right, not left X labels too close to each other are inteligently merged, as on this image:   To generate the dataset, I run over array of samples and end up with two HashMap<String, Double> representing average latency and failure rate."
30468174,2,1,1,java.util.HashMap,So now method will return a HashMap with Student Id as Key and Student name as Value.
30467705,2,0,0,java.util.HashMap,"Before you sort your names, loop through the two lists together and put the name as the key in a HashMap, with the id as the value."
30471137,2,1,1,java.util.HashMap,You don't need a (Linked)HashMap for this job.
30472507,2,0,1,java.util.HashMap,LinkedHashSet uses HashMap behind the scenes remove(Object) will remove the Object only if it contains the Object hence its unnecessary and will increase time complexity in case Object exists in set.
30472404,2,0,1,java.util.HashMap,"You'll find that both end up possibly iterating through the hash chains at some point (remove in HashMap's removeNode and contains in HashMap's getNode), which could be a performance hit if your set is under heavy load."
30473661,1,0,0,java.util.HashMap,Iterating HashMap strange behaviour.
30473661,1,0,0,java.util.HashMap,"I'm creating a HashMap, then adding some key-value pairs over a loop.Inside the loop i'm changing a pre-initialized array on every iteration."
30475174,1,0,1,java.util.HashMap,Serialize HashMap to a JSON string while avoiding certain fields in Java.
30475174,1,0,1,java.util.HashMap,Is there any way to avoid certain fields from the HashMap while serializing it to a String?
30475796,2,1,1,java.util.HashMap,"If you want to serialize a HashMap like this, you should implement a custom serializer."
30475262,2,0,1,java.util.HashMap,"If you are serializing a POJO, you can use the @JsonIgnore annotation, but in this case, this is not an option, so you should make a copy of the HashMap, and do whatever operations on it, what you need."
30477439,2,0,5,java.util.HashMap,"HashMap isn't sorted, actually and shouldn't be so."
30477439,2,0,5,java.util.HashMap,"You may use any Map, for example, stay with HashMap, but then, before processing, you may sort the entries: code."
31060681,2,0,0,java.util.HashMap,"Create a locator class: In this class you'll need a HashMap Use the multi context feature of spring: The idea is assign a code to every one connection that you establish and later load that connection like an application context with spring, then in the locator class, put in the map that context and use it as frequent as you need."
30479115,2,0,1,java.util.HashMap,"if ordering is not important to you , you can use HashMap for example : code."
30478931,2,1,3,java.util.HashMap,You should consider using a HashMap instead (where the key identifies the Person).
30482441,1,0,3,java.util.HashMap,"Why doesn't ThreadLocal use java.util.HashMap to store value, but customize one?"
30482441,1,0,3,java.util.HashMap,"Why doesn't ThreadLocal  use java.util.HashMap to store value, but customize one ?"
30483366,2,0,1,java.util.HashMap,"Looking at the earliest JDK 1.2 source code, the dates on the code show ThreadLocal came before HashMap."
30483366,2,0,1,java.util.HashMap,"I dont know if there was a different implementation of HashMap before this version, but if there was it looks like Josh Bloch didn't want to use it."
30484149,1,0,0,java.util.HashMap,"I have a service which returns a HashMap, and I am using org.apache.cxf.jaxrs.provider.json.JSONProvider as my json provider, but I get error ""No message body writer has been found for class java.util.Collections$EmptyMap, ContentType: application/json""."
30486325,1,0,0,java.util.HashMap,Java HashMap initial capacity.
30486325,1,0,0,java.util.HashMap,I wondered why Java's HashMap is using 16 as initial default capacity.
30490735,2,0,1,java.util.HashMap,You must first check if the key is present in the HashMap.
30490735,2,0,1,java.util.HashMap,"If not, you should create the value HashSet and put it in the HashMap : code."
30492933,2,1,1,java.util.HashMap,There're multiple ways to access keys and values of your HashMap: code.
30492933,2,1,1,java.util.HashMap,"Read the java HashMap api Java HashMap Link Edit: you dont need to loop through your outside ArrayList objects when you add all of its elements to another, just simply invoke addAll(), it will append all elements of an arraylist to another."
30495054,1,0,0,java.util.HashMap,I have created a class SparseGraph representing directed graphs weighed scattered.To do this I used a HashMap that looks like this: code.
30519577,2,1,2,java.util.HashMap,"A good example of this is the HashMap source, if you have a look into the inner workings of it, it is actually storing an array of Entry, and the entries all have keys and values stored on them."
30499051,2,0,1,java.util.HashMap,"Note you will also need to override Room#equals() and Room#hashCode() in order to use a HashSet, or similarly a HashMap<String,Room>"
30510692,2,1,4,java.util.HashMap,This is the basics of how a HashMap or Hashtable works under the hood.
30514520,1,0,0,java.util.HashMap,How to retrieve previous values from HashMap?
30514520,1,0,0,java.util.HashMap,I'm storing the the contents of the text file in a HashMap.
30514840,2,0,0,java.util.HashMap,"For what you say you want (items with prices near the desired item), a HashMap isn't an efficient datastore."
30516018,2,0,0,java.util.HashMap,You might want to try storing the vehicles in a HashMap or something: code.
30516018,2,0,0,java.util.HashMap,"A HashMap can be used to store key,value pair in your case key=carname value=Vehicle object."
30516131,2,0,5,java.util.HashMap,"Note that in Java 8, HashSet still wraps a HashMap, so using the keySet() of a HashMap, when you want a Set in the first place, doesn’t waste space given the current implementation."
30517012,1,0,0,java.util.HashMap,Storing injected Spring Beans in a HashMap.
30517012,1,0,0,java.util.HashMap,"My question is, is it ok to store the injected beans in a HashMap instead of in individual interface variables?"
30517012,1,0,0,java.util.HashMap,"The existing application uses factory classes to instantiate everything, and I have come up with a way of converting the architecture to Dependency Injection using the factory classes by storing the beans in a HashMap."
30517012,1,0,0,java.util.HashMap,Below is an example of the same business object using my HashMap method of storing the beans: code.
30517012,1,0,0,java.util.HashMap,Or will there be hanging objects in memory because of the HashMap storage idea?
30521620,1,0,28,java.util.HashMap,HashMap - contains and get methods should not be used together.
30522114,2,1,24,java.util.HashMap,"But I wonder why the architect is only concerned about that, as there are more things to improve:  Refer to objects by their interfaces (Effective Java 2nd Edition, Item 52) Since Java 1.7 you can use the diamond operator <> Accumulate the autoboxing operations of the characters If you use AtomicInteger (or any other modifiable number class) instead of Integer you can even merge the get with one of the puts  So from my point of view the best performance, when using a HashMap, would offer: code."
30523514,1,0,3,java.util.HashMap,"Overriding hashCode when using HashMap, HashSet etc?"
30523514,1,0,3,java.util.HashMap,I use HashMap as follows: code.
30523514,1,0,3,java.util.HashMap,Is that a correct way to do that and why should I use it ever when I'm going to use HashMap or something similar?
30524027,2,1,1,java.util.HashMap,"Map<String,List<FileInformation>> statistics = new HashMap<>() In the above map, the key will be the word and the value will be a List<FileInformation> object describing the statistics of individual files containing the word."
30537650,1,0,2,java.util.HashMap,"I am both adding all the periods together in a variable and summing up some periods in smaller periods stored in a HashMap<long, Period>."
30551392,2,0,0,java.util.HashMap,"As an aside, if this were my program, I'd use HashMap<String, String> to assist with my translation of English to Morse and visa-versa."
30551814,2,0,1,java.util.HashMap,"Then, iterate the ArrayList<String> and count the frequency of each word in your original file in a HashMap<String, Integer>."
30551887,2,0,0,java.util.HashMap,"Like Dmitry said, the best data structure you can use for this particular case is Hashtable or HashMap."
30554279,1,0,2,java.util.HashMap,How to fill HashMap object only once for program?
30554279,1,0,2,java.util.HashMap,Is there a way to fill the HashMap object only once for my program?
30559490,2,0,0,java.util.HashMap,You just answered your own question - use HashMap: code.
30656266,2,0,0,java.util.HashMap,"Or use some library which helps dealing with Lucene efficiently, like Hibernate Search or Infinispan which help you to index and query things over Lucene when using (respectively) Hibernate or a simpler HashMap-like structure."
30571291,1,0,0,java.util.HashMap,"But when I change Map to HashMap it, compiles and runs successfully."
30572150,1,0,0,java.util.HashMap,The main one is employed using a HashMap.
30747823,2,0,0,java.util.HashMap,"Novice coder here, so maybe this is too clunky: Why not keep the monitored computers in a HashMap, and removed computers go to a WeakHashMap?"
30572650,1,0,0,java.util.HashMap,List Of HashMap using XPRESS language in SUN IDM.
30572650,1,0,0,java.util.HashMap,"When I invoke this method from IDM, I am getting it as list of strings instead of List of HashMap."
30572650,1,0,0,java.util.HashMap,How to create a list of type HashMap using XPRESS language?
30575733,1,0,0,java.util.HashMap,"I'm aware that the way I'm executing this is inefficient as I'm creating a new AsyncTask for each value in the HashMap rather than passing them all in one AsyncTask (I don't know how to do this), however I'm assuming this problem is caused by some kind of timeout period which I can change."
30585293,2,0,1,java.util.HashMap,"For a string given by the user, string, you'd convert to uppercase to match the characters in the HashMap, and iterate through the chars."
30587822,1,0,0,java.util.HashMap,"Here is my code,i store key and values in HashMap."
30590187,1,0,0,java.util.HashMap,I have a controller which initializes HashMap(for example).
30590187,1,0,0,java.util.HashMap,How I can use the k and v in the Generic Declaration of the HashMap code.
30590336,2,1,1,java.util.HashMap,"I changed HashMap to Map in the declaration, see Effective Java - Item 52 for an explanation."
30592588,2,0,0,java.util.HashMap,Just to make it a little more optimal you may add a default capacity for HashMap if you expect that all flags are different: code.
30594117,1,0,0,java.util.HashMap,"... and   several instances of strategies to use for these types or, for example, boolean values which relate to the mentioned ObjectTypes  A MapBinder from Guice can be used for this purpose, along with a standart HashMap, as well as some complex map from google collections."
30596828,1,0,2,java.util.HashMap,I was looking into the source code for HashSet and found that the 'add' method in the HashSet is saving the values in a HashMap.
30596994,2,0,2,java.util.HashMap,The answers to this SO question go into more detail: Internal implementation of java.util.HashMap and HashSet
30600297,2,0,4,java.util.HashMap,"You can then use the Map approach explained below : Option 2 : Use a HashMap Assuming that method1 and method2 are related either through a common parent or through a parent child relationship, create a HashMap and prepopulate it with method1 and method2 objects : code."
30600297,2,0,4,java.util.HashMap,Using a HashMap instead of a basic array or a List allows you to associate meaningful names to your method calls.
30600297,2,0,4,java.util.HashMap,The HashMap is kind of a Factory for objects.
30601242,2,0,0,java.util.HashMap,"The Comparator refers to the TreeSet, not the HashMap."
30601213,2,0,0,java.util.HashMap,The HashMap should be initialized this way: code.
30601213,2,0,0,java.util.HashMap,No Comparator is required for the HashMap itself.
30601213,2,0,0,java.util.HashMap,"You'll need instances of TreeSet to populate the HashMap, and each of them would require a Comparator."
30604950,1,0,0,java.util.HashMap,"Example : url = ""http://example.com/image.php?index="" + int I put the image in a ImageView and in my ""doInBackground"", I create two HashMap for add element in two list."
30610650,2,0,0,java.util.HashMap,contains info about how to use Object as value in HashMap
30611391,1,0,0,java.util.HashMap,"I decided to test it, to see how likely it is that a generated string would repeat itself; I tested using a HashMap (string, string) for 10 million generations - looks good, and was hoping to test for the night for  billion random strings, but that has failed due to Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space The test code I have so far is this: code."
30612155,2,0,2,java.util.HashMap,You're trying to store one billion 11 character long strings in a HashMap.
30614837,2,0,5,java.util.HashMap,and map is a HashMap and HashMap.containsKey looks like: code.
30614600,2,1,11,java.util.HashMap,"You should avoid putting mutable instances in a HashSet (or using them as keys in a HashMap), and if you can't avoid it, make sure you remove the element before you mutate it and re-add it afterwards."
30615927,2,1,5,java.util.HashMap,"Since length is the initial capacity of the HashMap (16 by default), you get 4 for both keys : code."
30617844,1,0,3,java.util.HashMap,Is it possible to remove the Key and value from HashMap if its key is not accessed for some specified time.
30617844,1,0,3,java.util.HashMap,"I have got a requirement where i need to ensure that no user can do  multiple login So for this , i have made it login system centralized that is once the User successflly logs in , i am storing it in a Authenticator class as shown below and removing it from the HashMap once user clicks on log out  code."
30617844,1,0,3,java.util.HashMap,"I have got some negative scenarios to handle also that is   User can close the browser without clicking on Logout  (Ctrl + W  / browser cross Mark Button)  In that case is to possible to remove the key and Value from HashMap , if its idle for 15 minutes ??"
30623090,1,0,0,java.util.HashMap,Currently as a rough implementation I'm using a HashMap to store hashedValue as the key and time created as the value.If I encounter the value again using the bloomfilter implementation I check the map to see if its passed its time to live and if it is I return that it is not a duplicate and update the map with the new time to live value.
30626995,1,0,2,java.util.HashMap,I want to understand how hash() and indexOf() methods of HashMap assign a unique index in hash table to a hashmap.
30627237,2,1,4,java.util.HashMap,"In HashMap, the underlying bucket array size is set upon initialization and may be resized accordingly - the bucket index of an item (in indexFor) is generated by key.hashCode() % (table.length - 1)."
30627237,2,1,4,java.util.HashMap,"HashMap in particular uses a linked list - if an item maps to an already occupied bucket, that item is added to the beginning of the bucket's linked list."
30629003,2,1,0,java.util.HashMap,One should realize that the Hash in HashMap actually means something.
30630822,2,0,1,java.util.HashMap,"You might also have to save the slot number for each ItemStack/item, in which case you might want to use a HashMap."
30632393,2,0,1,java.util.HashMap,You could use a HashMap to store the contents of all of the player's inventories and armor code.
30632393,2,0,1,java.util.HashMap,You could then store the player's inventory contents in the HashMap by using code.
30631296,1,0,0,java.util.HashMap,Get all collisions in HashMap in Java.
30631296,1,0,0,java.util.HashMap,Is there any way to get a list of all the collisions which occurred after inserting a number of elements into a HashMap/HashTable/HashSet?
30631513,1,0,1,java.util.HashMap,HashMap returning null even though hashCode/equals are overriden.
30631513,1,0,1,java.util.HashMap,I have a HashMap that maps a custom object TokenDocumentPair to a Double.
30631513,1,0,1,java.util.HashMap,"The problem is, when I create TokenDocumentPair pair1 = new TokenDocumentPair(""hello"", 1) , store it into a HashMap<TokenDocumentPair, Double> map, and try to fetch it with TokenDocumentPair pair2 = new TokenDocumentPair(""hello"", 1), it returns null."
30635748,2,0,1,java.util.HashMap,Map (interface of HashMap that is behind-the-scene of HashSets) API say:  Note: great care must be exercised if mutable objects are used as map   keys.
30639511,2,0,0,java.util.HashMap,"This is just a short trick, I'll have a HashMap with keys as the column4 and the values as the column1 column2 coulumn 3(seperated by a space)."
30644521,1,0,0,java.util.HashMap,"I'm developing a java application in which I load some long lists containing images (downloaded from web), so I added a quick HashMap<String,BufferedImage> as a cache, to avoid redownloading the same image multiple times."
30647796,2,1,1,java.util.HashMap,You could do one of two things:  New up an instance of a map when you're trying to insert things... ...or use HashMap's copy constructor: code.
30651288,1,0,0,java.util.HashMap,"The Java application (running from a project within Eclipse Luna) makes a connection to the database at launch and builds a HashMap from a small table, then closes that connection."
30652493,2,0,2,java.util.HashMap,Java's HashMap uses a hash table sizes that are powers of two.
30652493,2,0,2,java.util.HashMap,Fortunately things are not this bad in Java because HashMap doesn't use just the lowest bits of the hash code: it scrambles the bits so that it's not quite as easy to produce bad scenarios accidentally.
30652493,2,0,2,java.util.HashMap,Here's an excerpt from OpenJDK's HashMap implementation: code.
30654034,1,0,0,java.util.HashMap,How can I get a key from a value in a HashMap?
30655201,2,0,1,java.util.HashMap,"You used the raw form of HashMap, so hashTable.values() returns a raw Collection, which returns Objects, which can't be assigned directly to an Employee variable."
30655201,2,0,1,java.util.HashMap,"Use the generic form of HashMap, either: code."
30655637,1,0,0,java.util.HashMap,How to set image URI in HashMap.
30655637,1,0,0,java.util.HashMap,I am building a listview and i get the URI of an image wich i want to a HashMap using map.put.
30655771,2,1,0,java.util.HashMap,"Otherwise I'd just create a HashMap<String, Parcelable>"
30661079,2,0,0,java.util.HashMap,"You can use HashMap<String, Integer>, where Stringrepresents datefield in string form & Integerrepresents smsCountfield."
30659231,1,0,0,java.util.HashMap,"In the application, I store some lookup tables in class static variables, whenever there is a change, I just reload the table into the variables (mostly HashMap), the change is then immediately reflected in all parts of the application."
30664486,2,1,3,java.util.HashMap,This behavior might be dependent on the unspecified order of a HashMap or such alike.
30663594,1,0,2,java.util.HashMap,"but my question is, is there such Map or HashMap that returns a subset of that map based on coordinates with radius."
30665040,1,0,0,java.util.HashMap,So How can I convert my HashMap to a system.Object?
30667160,1,0,0,java.util.HashMap,Object 2 NOTE: A HashMap - so keys aren't finite.
30667945,1,0,0,java.util.HashMap,Jackson Json string deserialize class with HashMap member.
30671667,1,0,0,java.util.HashMap,Actually it crashes within the HashMap code with a null pointer This leads me to believe that something is going wrong with my application id.
30673543,1,0,0,java.util.HashMap,"I understand this is probably more magic than possible, but surely there's something better than creating a HashMap for each persistent object, hard-coding each getter into a put and adding hard-coded href strings in a big galumphing loop?"
30673622,1,0,0,java.util.HashMap,HashMap returns Null no matter what.
30673622,1,0,0,java.util.HashMap,"Which each Space is bList, a HashMap that represents which Spaces border this particular Space."
30673700,2,0,1,java.util.HashMap,This method is supported for the benefit of hash tables such as those provided by HashMap.
30674384,2,0,0,java.util.HashMap,the it.remove() kept removing my keys from the HashMap.
30678891,2,0,1,java.util.HashMap,"I would recommend you the use of HashMap, it's simple and efficient."
30678891,2,0,1,java.util.HashMap,How does HashMap works in Java?
30680343,1,0,0,java.util.HashMap,Difference Map foo = new HashMap() and new HashMap<>()?
30680403,1,0,3,java.util.HashMap,Using Objects as keys in Java HashMap.
30680403,1,0,3,java.util.HashMap,How to use objects as keys in java HashMap?
30682497,2,0,4,java.util.HashMap,You can't do it with HashTable or HashMap.
30683024,1,0,0,java.util.HashMap,I thought about using a HashMap by making its key values String word and its values int wordUsage.
30683650,2,0,0,java.util.HashMap,"Some examples include ArrayList,   HashSet, and HashMap (most JDK1.4 collections are implemented to be   fail-fast)."
30685439,1,0,1,java.util.HashMap,"I want to read this file and put the data between end in an ArrayList<ArrayList<HashMap<String,String>>>  My code: code."
30685594,2,0,1,java.util.HashMap,"You know.. never in my life has to use such deep nested structure like: ArrayList<ArrayList<HashMap<String, String>>."
30685548,1,0,1,java.util.HashMap,Values are not iterated in a HashMap in Java.
30685548,1,0,1,java.util.HashMap,"After initializing a HashMap, the values are inserted."
30685548,1,0,1,java.util.HashMap,They are not iterated by the HashMap.
30686693,2,0,0,java.util.HashMap,: Have appropriate getter and setter for HashMap.
30686375,1,0,1,java.util.HashMap,How to give different array list for each key when implementing HashMap>.
30686375,1,0,1,java.util.HashMap,I want to have a different array list for each key when I use HashMap>.
30697702,2,0,0,java.util.HashMap,Then I would use a HashMap or EnumMap as the lights.
30689967,1,0,2,java.util.HashMap,I want to divide the text file into smaller chunks and store it into HashMap.
30689967,1,0,2,java.util.HashMap,Each value of HashMap will be a Job defination i.e. from DEFINE JOB ID to next DEFINE JOB ID.
30689967,1,0,2,java.util.HashMap,and at the end of the loop it prints nothing in the second while loop i.e. it deletes all the entries in the HashMap.
30690093,2,1,1,java.util.HashMap,"I think it's because you put the StringBuffer object itself into the HashMap as a value, and since it's an Object, the code points to the same area in memory whenever and wherever you access it."
30690093,2,1,1,java.util.HashMap,"This means that when you put stringBuffer into the HashMap and change its content afterwards, the content inside the HashMap is changed as well."
30690815,2,1,4,java.util.HashMap,See also:  Improving performance for large HashMaps: Java HashMap performance optimization / alternative Possible duplicate(s):  Explanation of HashMap#hash(int) method Java HashMap Hashing function Hash method in HashMap (Java 8) Change to HashMap hash function in Java 8 Why hash method in HashMap   Disclaimer: I've worked heavily with HashMaps for over a year which is where all the research comes from
30692361,2,0,4,java.util.HashMap,"A better way would be to use a HashMap<Integer,DetailsClass> instead of an ArrayList."
30692361,2,0,4,java.util.HashMap,"This makes the code simpler and more efficient, since searching for a key in a HashMap takes expected constant time, while searching the List takes linear time."
30695226,2,0,1,java.util.HashMap,"Similar reasoning can be followed for implementations of HashMap and TreeSet, if they keep a count of the number of elements with their data structure  then functions such as isEmpty() and size() can be done O(1) also."
30702642,2,0,0,java.util.HashMap,This is typically how a normal Set is done (HashSet is really a modified wrapper over HashMap).
30700500,1,0,3,java.util.HashMap,"I'm thinking this could probably be done in a for-loop with a HashMap or ArrayList, but is there a more efficient way to do it?"
30701974,2,0,0,java.util.HashMap,1)  create a HashMap with projectID as KEY and Ordered LinkedList of UserID as values.
30701974,2,0,0,java.util.HashMap,"2)  once your HashMap is built as above, then you can iterate through all the entries in HashMap one by one and can print the required output."
30701511,1,0,1,java.util.HashMap,"I am creating an economy system with a HashMap, so obviously to not reset the economy system everytime the server restarts, I need to store it in a file."
30701511,1,0,1,java.util.HashMap,Here is the code I am using to save/load the economy system HashMap: code.
30702450,2,0,0,java.util.HashMap,"where the values are being populated when creating new EntrySet()  The EntrySet you are looking at in HashMap.java is not a new collection, rather it is a functional wrapper backed by the HashMap itself (read the javadoc)."
30702450,2,0,0,java.util.HashMap,The operation upon the EntrySet are delegated to the HashMap itself.
30702287,2,0,0,java.util.HashMap,Source Inside HashMap there is an inner class code.
30702287,2,0,0,java.util.HashMap,This is what is returned by the entrySet() method in HashMap.
30702287,2,0,0,java.util.HashMap,"When you call a method in the EntrySet class to examine its contents, it looks up the information in the HashMap."
30702287,2,0,0,java.util.HashMap,"If you add or remove items in the EntrySet, it will affect the HashMap (and vice versa)."
30702269,1,0,0,java.util.HashMap,"Java HashMap, hashCode() equals() - how to be consistent with multiple keys?"
30702269,1,0,0,java.util.HashMap,How do I make the ID class an acceptable key for my HashMap?
30702269,1,0,0,java.util.HashMap,Update Best solution thus far: Make a separate HashMap for each immutable unique identifier and then wrap all the HashMaps in a wrapper object.
30702420,2,1,0,java.util.HashMap,"It's entirely possible that you'll want to keep a HashMap<String, Entity> for ""entities by name"" and a HashMap<Integer, Entity> for ""entities by number""."
30702409,2,0,0,java.util.HashMap,In java we can convert String to json by lot of methods.You can use collection for this purpose HashMap which gives you value in {key:value} pair which could be useful for you and if you are using Spring this can be helpful for you.
30705217,2,1,3,java.util.HashMap,The ordering is off because HashMap doesn't return entries in their insertion order.
30705217,2,1,3,java.util.HashMap,This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries.
30705476,1,0,0,java.util.HashMap,HashMap to count unique frequencies of words occurred in separate files.
30708380,1,0,11,java.util.HashMap,How do HashMap.values() and HashMap.keySet() return values and keys?
30708380,1,0,11,java.util.HashMap,The source code of HashMap.values() is shown as follows code.
30708949,2,1,18,java.util.HashMap,"The Values class is an ""inner class"" (a non-static nested class) of HashMap, which means that it has an implicit reference to the HashMap object that created it."
30708949,2,1,18,java.util.HashMap,"It can therefore access all elements of the HashMap, either explicitly by using the HashMap.this reference or by just accessing the members directly."
30708949,2,1,18,java.util.HashMap,"Since it is an inner class, it is even allowed to access the HashMap's private members."
30708949,2,1,18,java.util.HashMap,"The Values class doesn't have a size member, so that size refers to the HashMap's size."
30708949,2,1,18,java.util.HashMap,"EDIT: Note that this also means that the collection you receive is not a copy, but still refers to the original HashMap contents and therefore changes when you update the HashMap: code."
30709722,2,0,1,java.util.HashMap,Lets go a little deep:   values()  actually return an object of class Values which is an Inner class of HashMap and extends AbstractCollection code.
30709722,2,0,1,java.util.HashMap,"If you go more deeper you will find  newValueIterator() returns object of ValueIterator which is a subclass of HashIterator HashIterator implements basic functionality for iteration, which actually itterate over the table maintained by the HashMap."
30708475,2,0,12,java.util.HashMap,The Values class implements a Collection that is backed by the HashMap.
30708475,2,0,12,java.util.HashMap,"As mastov commented, Values is an inner class of HashMap, which gives it access to the members of the enclosing HashMap instance it is associated with."
30708475,2,0,12,java.util.HashMap,"Its size is the size of the HashMap, and when you iterate over it, you are iterating over the Entries of the HashMap."
30708475,2,0,12,java.util.HashMap,The Iterator actually iterates over the Entries of the HashMap and returns their values.
30709959,2,0,0,java.util.HashMap,Maintaining a HashMap of Key(the value getting replaced) with a value(the value to be replaced) and just changing the string using a simple function will do.
30717789,2,0,0,java.util.HashMap,"How about using a HashMap<String userId, Integer>?"
30716020,2,0,0,java.util.HashMap,Consider using a HashMap: code.
30716869,2,0,0,java.util.HashMap,"If you want to get all the 1st comma values then use HashMap<String, String> indexedHashMap = getValueBashedOnIndex(hashMap, 1);, and if 3rd comma values then use HashMap<String, String> indexedHashMap = getValueBashedOnIndex(hashMap, 3); Basically second parameter of getValueBashedOnIndex is for which index value you want."
30718458,2,0,0,java.util.HashMap,Whith randomGenerator.nextInt(12) you get a random number from 0 (inclusive) to 12 (exlusive) so if you get 0 FandVMap.get(rand) will be null because you don't have an entry whith 0 as key in the HashMap.
30719227,2,0,1,java.util.HashMap,"Hashing is the way to go here, but I would avoid using HashMap, as it only works with objects, i.e. must build a Long each time you insert a long, which can slow it down."
30719227,2,0,1,java.util.HashMap,"Maybe this performance issue is not significant due to JIT, but I would recommend at least to try the following and measure performance against the HashMap-variant: Save your longs in a long-array of some length n > 3000 and do the hashing by hand via a very simple hash-function (and thus efficient) like index = key % n. Since you know your 3000 possible values before hand you can empirically find an array-length n such that this trivial hash-function won't cause collisions."
30720411,1,0,0,java.util.HashMap,"My exact error is:  Exception in thread ""pool-1-thread-1"" java.lang.ClassCastException: datastructures.instances.JClass cannot be cast to java.util.ArrayList at if ((results = mCallsDownstreamCache.get(origin)) == null) { As you will see in the code, what I'm doing is asking for an ArrayList from a cache (HashMap) and then making a decision on that."
30720948,1,0,2,java.util.HashMap,Is a HashMap of any use in this case?
30721296,2,1,2,java.util.HashMap,"So you basically will just have a HashMap< SlideDirection, IYourInterface> yourMap... And so you will basically call  yourMap.get(n_direction).action(); and this will replace your switch statement."
30729650,2,1,2,java.util.HashMap,Light solution: HashMap More appropriate if you're going to do this one time.
30734053,1,0,0,java.util.HashMap,pass a HashMap by reference.
30734053,1,0,0,java.util.HashMap,"I have a multiple-multi-dimensional HashMap() instances, I am using them to store hierarchical data from a database; code."
30734053,1,0,0,java.util.HashMap,"The methods all accept parameters that match their data group and a string, each method returns the next dimension of the HashMap(); code."
30734053,1,0,0,java.util.HashMap,Essentially all these methods do is add val to data then return an empty HashMap(); code.
30734053,1,0,0,java.util.HashMap,"I thought Java worked by reference when dealing with complex objects, such as HashMap()."
30734053,1,0,0,java.util.HashMap,What can I do to ensure that addMid() and addLow() update the master HashMap()?
30735614,2,0,0,java.util.HashMap,"And for the dictionary of hundreds of thousands of words.... Maybe you use a Map or HashMap with the key will be the string enter by the user and in the object you maybe save automatically the value in lowerCase, it depends of what you need."
30737475,1,0,1,java.util.HashMap,Java - Choose a random value from a HashMap but one with the highest integer assigned.
30737475,1,0,1,java.util.HashMap,I want to choose a random value from a HashMap but it has to have the highest value assigned to it.
30737475,1,0,1,java.util.HashMap,"So far I have this: HashMap<UUID, Integer> tickets = new HashMap<UUID, Integer>(); Where the UUID would be the names of people in the above example and Integer would be their ticket amount."
30739237,2,1,2,java.util.HashMap,"You could easily write such a collention by yourself, where you have a (plain) HashMap of just primary keys to values, and then another one of a PriorityQueue of pairs of secondary keys to primary keys (seeing as secondary keys are not always unique, so you can't use a Map type for that)."
30743017,2,0,1,java.util.HashMap,"However, you can enforce an upper bound on the value of the HashMap."
30743017,2,0,1,java.util.HashMap,"extends APIAsyncLoaderTask> out of the HashMap, and newInstance() will return the erasure of the upper bound -- an APIAsyncLoaderTask."
30744224,1,0,1,java.util.HashMap,"I have no trouble storing it, but as soon as I try to cast dataSnapshot.getValue() to ArrayList my app crashes, giving an exception:  HashMap cannot be casted to ArrayList  But when I tried to cast it to a HashMap, it also crashes, giving exception:  ArrayList can't be casted to hashmap  Need help please!"
30745615,2,1,1,java.util.HashMap,The loop terminates when there is no value found in the end HashMap for the current origin.
30745934,2,0,1,java.util.HashMap,it is still possible to do it with Map (HashMap if you want) only.
30749186,2,1,3,java.util.HashMap,"Map<Object,Object> map2 = new HashMap<String,String>(); As per my understanding Map map1  is same as Map<Object,Object> map1  No."
30749186,2,1,3,java.util.HashMap,"A reference of type HashMap<T,T> is a subtype of a reference of type Map."
30749186,2,1,3,java.util.HashMap,"In other words, a reference of type Map can refer to an object of type HashMap<String,String>."
30749186,2,1,3,java.util.HashMap,"On the other hand, a reference of type HashMap<T,T> is not a subtype of a reference of type Map<E,E> (Even if T is-a E and HashMap is-a Map)."
30749186,2,1,3,java.util.HashMap,"In other words, a reference of type Map<Object,Object> can't refer to an object of type HashMap<String,String> even if String is-a Object and HashMap is-a Map."
30749186,2,1,3,java.util.HashMap,"That is, a HashMap<String,String> when compiled becomes a HashMap."
30749186,2,1,3,java.util.HashMap,"If the compiler allowed the statement Map<Object,Object> map = new HashMap<String,String>, it would mislead programmers to believe that the Map can only hold String key and values at runtime."
30749186,2,1,3,java.util.HashMap,"The statement Map map = new HashMap<String,String> is allowed on the other hand mostly for backward compatibility with legacy code."
30749145,2,0,0,java.util.HashMap,"That is because when you use new HashMap<String,String>(); the object can contain only String values."
30757767,2,1,0,java.util.HashMap,first make sure you had set alias map for java.util.HashMap in mybatis-config file typeAliases tag code.
30757478,1,0,2,java.util.HashMap,How to display the value of a HashMap key when user clicks autocom.
30759133,2,0,0,java.util.HashMap,I'd recommend using a normal HashMap or a LinkedHashMap and then just sorting the output when you need to sort it with Collections.sort.
30757794,2,0,1,java.util.HashMap,HashMap doesn't fallow the iteration order by defenition.
30757851,2,0,3,java.util.HashMap,"Instead of HashMap  This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time."
30759211,1,0,0,java.util.HashMap,"The ArrayList is part of a HashMap<Class, ArrayList> where all instances of every class are stored."
30762273,1,0,2,java.util.HashMap,HashMap as a Broadcast Variable in Spark Streaming?
30762273,1,0,2,java.util.HashMap,The classification key-values are loaded at the beginning of the program in a HashMap.
30762273,1,0,2,java.util.HashMap,How can I share my HashMap on all spark workers using a HashMap.
30765945,1,0,0,java.util.HashMap,"From what I've read, using a type of HashMap would be the best idea?"
30769899,1,0,3,java.util.HashMap,"And it seems like in Java 8, HashMap implementation uses a Tree or LinkedList depending on the number of elements for each bucket containing more than 8 or less than 6 elements, respectively!"
30825078,2,0,0,java.util.HashMap,"To complement @patricia-shanahan's answer: To add a visualization to LinkedHashMap (this is for Java 7 and older as Java 8 is different), assuming the elements were added in order of A, B, ..., E (and assuming A has a hashcode that makes it fall in bucket 0 or D has a hashcode that places in bucket 3), a HashMap with 4 bins would have the following layout (""|"" represents next property variable in HashMap.Entry<K, V> in the bucket linked list): code."
30784709,2,1,0,java.util.HashMap,The nested class Entry extends HashMap.Node to add before and after references.
30770120,2,0,0,java.util.HashMap,"Have you tried to use map, like HashMap."
30771385,2,1,1,java.util.HashMap,This has the same runtime depending on whether you use a HashMap or TreeMap.
30789015,2,0,0,java.util.HashMap,Sorting is tricky since error messages are kept in a HashMap.
30771489,2,0,2,java.util.HashMap,I don't believe you can with a plain HashMap.
30774156,1,0,0,java.util.HashMap,How to import the text file and put it in HashMap?
30774156,1,0,0,java.util.HashMap,I could not add each file string to HashMap.
30774411,2,1,3,java.util.HashMap,You have to initialize your HashMap Change  code.
30774501,2,0,1,java.util.HashMap,"You have not initialized a HashMap , You can initialize it in   onPreExecute or onPostExecute before for loop as below:  code."
30778360,1,0,1,java.util.HashMap,HashMap in JSF not showing the value if the key is a non standard Object.
30778360,1,0,1,java.util.HashMap,I have a HashMap which looks like this: code.
30778360,1,0,1,java.util.HashMap,"but if i use a HashMap like this HashMap<String,List<Date>> everything works: code."
30778758,2,0,1,java.util.HashMap,"If you want to use custom object as key in HashMap, you have to override hashCode() and equals() method in your custom object."
30779634,2,0,0,java.util.HashMap,"If you want to associate an additional value with each JRadioButton, you can create a HashMap."
30800526,2,0,0,java.util.HashMap,You can use below code for iterating through HashMap code.
30783794,2,0,1,java.util.HashMap,"You don't need HashMap, a simple item holder class with a status property would help you."
30783578,1,0,1,java.util.HashMap,"I think this is quite ugly to modify a String because of the integers, booleans, arrays that shouldn't be between quotes, so I'd rather use an Object like a HashMap."
30783578,1,0,1,java.util.HashMap,and finally get the informations into a HashMap :  code.
30783578,1,0,1,java.util.HashMap,So my main question his : what is the equivalent to this route in Java DSL which could return a HashMap or something like that ?
30788905,2,0,0,java.util.HashMap,"As an example, see HashMap<K,V>."
30788905,2,0,0,java.util.HashMap,See Map and HashMap
30788948,2,0,2,java.util.HashMap,In java in particular as already mentioned this is easily done with a HashMap.
30788856,2,0,1,java.util.HashMap,"Sounds like HashMap<Integer,Integer> is what you're looking for."
30789508,1,0,2,java.util.HashMap,"My first idea was to keep a HashMap, but that quckly ended up looking like too much manual (and fragile-looking) code with concurrency and lifetime concerns - and I prefer not reinventing the wheel."
30790502,1,0,2,java.util.HashMap,"I am trying to write a recursive program that can print all permutations of a list of integers taken from a file, I am using HashMap to store list, where the keys are the numbers and the values are the number of times the key occurs in the list."
30790502,1,0,2,java.util.HashMap,"I then went back to the initial approach and stored a temporary copy of the HashMap I was trying to iterate over and modified only the temporary copy and not the original one, the same error persists."
30790704,2,0,2,java.util.HashMap,In your case you are both iterating over and modifying the HashMap in your permute method.
30793454,1,0,1,java.util.HashMap,I'm just wondering if there's another way to compare the array to key of HashMap?
30795568,2,0,1,java.util.HashMap,"convert to map, LinkedHashMap or HashMap as per your need, then get the entry value."
30795429,1,0,0,java.util.HashMap,"I am considering using HashMap in which the key would be 'RUB', 'WET', 'UYT' and the corresponding set of values mapped to it would be the list of string values."
30795510,2,0,0,java.util.HashMap,"A HashMap would be sufficiently quick, and sounds like what you're describing."
30795510,2,0,0,java.util.HashMap,HashMap will be faster then HashTable because HashMap is unsynchronized.
30799635,1,0,0,java.util.HashMap,I have a file that contains a HashMap customer list in json format.
30799635,1,0,0,java.util.HashMap,Everytime the controller is called I want to take datas from the file and convert them into HashMap list.
30800470,2,0,1,java.util.HashMap,If you really need a HashMap then loop through the list and fill this hash map: code.
30799976,2,0,1,java.util.HashMap,"** Your mapping just with HashMap.class will not give you desired results as Jackson will map your JSON into Map<String, Map>."
30805063,2,0,1,java.util.HashMap,You could take a look at a HashMap.
30810235,2,1,1,java.util.HashMap,That key is suitable for use as a HashMap key.
30812072,1,0,0,java.util.HashMap,How to loop through ALL content of HashMap.
30812072,1,0,0,java.util.HashMap,How to loop through ALL content of HashMap?
30821927,2,0,2,java.util.HashMap,The Card.java class would have an equals and hashCode method so that I could use it in a HashMap and thereby associate an ImageIcon with each card.
30821927,2,0,2,java.util.HashMap,Then I'd create a method that would allow me to get my Card images (I have used a publicly available sprite sheet for this) and assign the appropriate icon to the appropriate card in the HashMap: code.
30825967,2,0,0,java.util.HashMap,Key-value pairs can be accessed in O(1) using a HashMap.
30825967,2,0,0,java.util.HashMap,"However if you use HashMap<String, String> then updating the value will be painful because Strings are immutable."
30828638,1,0,0,java.util.HashMap,"Here, assume ""good"" means that it (i) is at least 8 characters long, (ii) is not a word in the dictionary, (iii) is not a word in the dictionary followed by a digit 0-9 (e.g., hello5), (iv) is not two words separated by a digit (e.g., hello2world) I think I am confused about how to use a Hash Table (HashMap)."
30828726,2,1,1,java.util.HashMap,"If you look at java HashSet implementation, you will see that internally it uses a HashMap, items are added to map as keys, and value is a dummy object, shared by all entries."
30828726,2,1,1,java.util.HashMap,"Your dictionary keys structure is more a HashSet than a HashMap, if you have no specific value (like popularity for example)  to associate with a key."
30828726,2,1,1,java.util.HashMap,"Java HashMap implementation uses separate chaining, all items with same hash code are put in a linked list structure."
30828726,2,1,1,java.util.HashMap,"You do not have to worry about collision resolving, when you use HashMap (unless your goal is to prevent hash attacks)."
30829812,1,0,0,java.util.HashMap,"Cell objects are saved in a HashMap<Hex,Cell>, where the key is the position on the hex map."
30830668,2,0,0,java.util.HashMap,"As the comments suggest you can simply use a HashMap or HashTable, if you insist on implementing a structure on your own i would suggest a search trie.In a search trie the number of maximum comparisons required to retrieve data is equal to the length of the key used, so to retrieve data for the given keys(abc,def,rty,ytr,dft) exactly 3 comparisons would be required Consider the following wikipedia link: https://en.wikipedia.org/wiki/Trie Also below is my quick and dirty implementation of a search trie (provided the keys are standard ASCII letters) :)- code."
30830683,1,0,1,java.util.HashMap,EDIT:  I am using ArrayList and HashMap.
30836245,2,0,1,java.util.HashMap,"In most implementations (including the out-of-box TreeMap and HashMap) - searches against values will have to scan the entire Map structure anyway (or at least, until it can bail out after finding the first match)."
30836387,1,0,0,java.util.HashMap,Java HashMap - String to bukkit Vector?
30836387,1,0,0,java.util.HashMap,"The gist of it is that I'm storing a Vector inside a HashMap as a string, like so: notes.put(notes.size()+1), player.getLocation().getDirection().toString()); notes is my HashMap name."
30854644,2,0,3,java.util.HashMap,"So, instead of worrying about converting a String to a Vector, you could simply store vectors in your HashMap code."
30843554,2,0,0,java.util.HashMap,Two ways to accomplish this:  Using HashMap code.
30927796,2,1,2,java.util.HashMap,So I've made this one that writes to a HashMap: code.
30848696,2,0,1,java.util.HashMap,"If you want to do so, you need to iterate over the HashMap and get the matching value and return the key of it."
30849025,1,0,1,java.util.HashMap,"In this example it's Map<String, String> so I would only expect it to return the value bit (String), I have tried .collect(Collectors.toSet(HashMap::getValue)) but that didn't work."
30853391,2,0,1,java.util.HashMap,"HashMap or TreeMap) where name maps to frequency, that will allow for fast adding and removing."
30853117,1,0,3,java.util.HashMap,How to sort HashMap in java depending on the size of value List.
30853812,1,0,0,java.util.HashMap,convert JSON file to a hashmap in java with error Can not deserialize instance of java.util.HashMap out of START_ARRAY token.
30865299,1,0,4,java.util.HashMap,HashMap or TreeMap for Map specifically sized 1.
30865299,1,0,4,java.util.HashMap,"I need a Map sized 1 and began to wonder what would be best, a TreeMap or a HashMap?"
30865299,1,0,4,java.util.HashMap,"My thought is that TreeMap would be better, as initialising and adding a value to a HashMap will cause it to create a table of 15 entries, whereas I believe TreeMapis a red-black tree implementation, which at size one will simply have a root node."
30865299,1,0,4,java.util.HashMap,"With that said, I suppose it depends on the hashCode / compareTo for the key of the HashMap / TreeMap respectively."
30865369,2,1,6,java.util.HashMap,"As a complete aside, you can create a HashMap with a single bucket if in the constructor you specify a capacity of 1 and a loadFactor that is greater than the number of elements you want to put in."
30865369,2,1,6,java.util.HashMap,"But memory-wise that would still be a bit of a waste as you'd have the overhead of the Entry array, the Entry object and all the other fields HashMap has (like load factor, size, resize treshold)."
30868454,2,1,4,java.util.HashMap,You could use a HashMap for your elements using the id as the key.
30868454,2,1,4,java.util.HashMap,HashMap has a constant lookup complexity.
30871810,2,1,3,java.util.HashMap,"When using HashMap, ordering is undefined, but you can use other Map implementations to control the ordering (LinkedHashMap, TreeMap, ...)"
30876616,1,0,0,java.util.HashMap,"I had the idea for a HashMap, using this code: code."
30876616,1,0,0,java.util.HashMap,But this will only allow one note per user since a HashMap contains no duplicates.
30877235,1,0,1,java.util.HashMap,How can I put then in the same HashMap?
30877371,2,1,1,java.util.HashMap,"If you absolutely must mix Strings and String[]s, you can only use Object as the value type (i.e., HashMap<String, Object>, and will have to use runtime type identification in your code."
30878479,2,0,1,java.util.HashMap,"As an aside: I would recommend, as you're iterating a HashMap that perhaps you try the for-in approach, as such: code."
30884794,2,1,2,java.util.HashMap,"From what you've described here you can use HashMap<Integer, Node> or HashMap<Long, Node> depending on the range of ids you have."
30884870,1,0,1,java.util.HashMap,"Passing HashMap using intent returns null, why?"
30885643,1,0,0,java.util.HashMap,Springfox/Swagger : Documenting HashMap object.
30888602,1,0,1,java.util.HashMap,"And would like some ideas how to read and change a HashMap simultaniously, if possible."
30888602,1,0,1,java.util.HashMap,Example of the HashMap: code.
30888602,1,0,1,java.util.HashMap,"While the thread is running this I process the ""Data Items"" and remove them from the HashMap when done, one by one."
30888602,1,0,1,java.util.HashMap,Sometimes I get this Exception which I guess is when removing an item from the HashMap while it is trying to serialize it with Gson.
30888602,1,0,1,java.util.HashMap,I tried to solve this by using ConcurrenthashMap and cloning the HashMap inside the thread so that it shouldn't lock the Hashmap as shown below.
31544852,2,0,0,java.util.HashMap,You can get an infinite loop in HashMap.
30891995,1,0,0,java.util.HashMap,And in HashMap : code.
30892027,2,0,4,java.util.HashMap,Keys should be unique in HashMap.
30899755,1,0,0,java.util.HashMap,"The thing is, I have an ExpandableListView with 2 groups, inside of each group I have some users and when I click on these users I get their ids and add to a HashMap of strings, now I'm trying to remove these ids when I click on them for the second time, but the ids of the second group are not being deleted."
30900033,2,1,1,java.util.HashMap,... which is the only place where you are trying to remove from a HashMap.
30900033,2,1,1,java.util.HashMap,"That method expects you to pass a key value, such as whatever IdEscola is, which is the key value you used to do a put in the HashMap."
30900033,2,1,1,java.util.HashMap,"EDIT 2: And if the above is not what you want, then you probably don't want to remove anything from that HashMap."
30900834,2,0,1,java.util.HashMap,"then set up a HashMap<String, TeamMember> that matches ID Strings TeamMember objects."
30901179,2,1,1,java.util.HashMap,"Notice the HashMap, so this means Pattern stores fragments of the regex and their corresponding micro-DFA, this behavior is known as a Flyweight."
30901170,1,0,1,java.util.HashMap,HashMap iteration in XSLT 2.0.
30901170,1,0,1,java.util.HashMap,"I have an HashMap object as part of my java model and when I convert it into XML, this is the result... code."
30904244,1,0,1,java.util.HashMap,"I need a global HashMap X, which I would like to be updated using values with timestamp ""t1"", and then subsequently ""t1+1""."
30904244,1,0,1,java.util.HashMap,"Hence operation at ""t1+1"" depends on HashMap X, which depends on data at and before ""t1""."
30907778,1,0,2,java.util.HashMap,"I have a problem where when I want to change a value in a nested HashMap, the other HashMaps are being overwritten."
30907778,1,0,2,java.util.HashMap,"for example I have a key name Alligator, which stores a HashMap that contains the keys Weight and Size."
30907863,2,0,2,java.util.HashMap,"BTW, I wouldn't use an anonymous sub-class of HashMap instance for the inner Map."
30908158,2,0,1,java.util.HashMap,"First handle what you want to happen if there is no ""Alligator"" in your data HashMap, possibly put in a new HashMap for ""Alligator"": code."
30908158,2,0,1,java.util.HashMap,Then use get to grab the nested HashMap and use put to change the values: code.
30923398,1,0,0,java.util.HashMap,Calling HashMap data from a separate class/method.
30923398,1,0,0,java.util.HashMap,My question revolves around how to call HashMap data that I have stored in another method from the main Junit testing class.
30923398,1,0,0,java.util.HashMap,"I want to take the data from pciTestData() and place it in the HashMap examples in pciTest(), as seen by the examples.put(pciTestData()) portion."
30925292,1,0,1,java.util.HashMap,Problems Merging JSON Data -- ObjectMapper (HashMap).
30927397,1,0,3,java.util.HashMap,Here is what I have so far (map is a HashMap).
30931376,1,0,0,java.util.HashMap,"Good day, I have 2 HashMap as follow: code."
30931526,2,0,0,java.util.HashMap,"This is covered in: copying a java hashmap In essence private Map< Integer, List< ObjectA >> keyMap2 = new HashMap< Integer, List< ObjectA >>(keyMap); Or alternatively keyMap2.addAll(keyMap);"
30932593,2,0,0,java.util.HashMap,"As you correctly mentioned, keyMap2 is pointing to same HashMap as keyMap But if you do : code."
30933328,1,0,1,java.util.HashMap,"Using Firebase Library to send data to the server in the form Message(String,String) added to the HashMap  Example: code."
30933752,1,0,6,java.util.HashMap,Now I want to pass a generic HashMap of type S code.
30945451,2,0,0,java.util.HashMap,A common implementation of that interface is a HashMap.
30944368,2,1,4,java.util.HashMap,"look at set (Hashset, enumset) and hash (HashMap,linkedhash...,idnetityhash..) based implementations, they have a speed complexity of O(1) for the contains() method."
30944413,2,0,1,java.util.HashMap,"If you can have repeated elements, then you can use a HashMap that maps a String to an Integer that has how many of that elements you have."
30944546,1,0,1,java.util.HashMap,How do I use a HashMap from another class or function?
30947516,1,0,0,java.util.HashMap,Without the HashMap it would be a simple matter of: code.
30947516,1,0,0,java.util.HashMap,But the HashMap pretty much seems to kill that.
30949117,2,0,1,java.util.HashMap,"If you'd like to use more than two colors try HashMap<String, Color> tokens."
30970008,2,0,0,java.util.HashMap,If your mapped data will be accessed by only one thread (or you'll enforce synchronous access with custom locking) use a HashMap.
30950532,1,0,6,java.util.HashMap,"I have Map<Integer,Doctor> docLib=new HashMap<>(); to save class of Doctor."
30952210,1,0,1,java.util.HashMap,I was thinking I could load all ranks in a HashMap when the game starts but that would be very ineffective since there are thousands of players.
30955953,1,0,0,java.util.HashMap,Why are these values retrieved with keys in HashMap?
30955953,1,0,0,java.util.HashMap,"I am struggling with the reason why I am getting the second line of outputs as ""Line2: null"" when running the following piece of code on HashMap: code."
30955953,1,0,0,java.util.HashMap,"It seems like once a  pair is pushed into a HashMap, the key is hardcoded with the value forever!"
30955953,1,0,0,java.util.HashMap,"Is this how it is supposed to work, meaning that, once a hashcode has been determined for a value before placing the pair in HashMap, the hashcode can never be modified again?"
30955978,2,1,0,java.util.HashMap,Think of a HashMap as an array of key-value pairs.
30955978,2,1,0,java.util.HashMap,"Is this how it is supposed to work, meaning that, once a hashcode has been determined for a value before placing the pair in HashMap, the hashcode can never be modified again?"
30955978,2,1,0,java.util.HashMap,"When you understand how you'd implement a HashMap using an array (as described above), it should become obvious that this is in fact the expected behavior, and that mutating the key is a very bad idea."
30959957,2,0,3,java.util.HashMap,"However, in the case of the private singly linked list formed by chaining together HashMap entry nodes, the space overhead is one reference (same as ArrayList), the cost of inserting a node is O(1) (same as LinkedList), and the cost of removing a selected node is also O(1) (same as LinkedList)."
30959957,2,0,3,java.util.HashMap,"Relying solely on ""big O"" for this analysis is dubious, but when you look at the actual code, it is clear that what HashMap does beat ArrayList on performance for deletion and insertion, and is comparable for lookup."
30959957,2,0,3,java.util.HashMap,"In Java 8, they overhauled the HashMap internal data structures."
30958525,2,0,0,java.util.HashMap,"When using a HashMap we will expect O(1) operations for add, remove and contains."
30960766,1,0,0,java.util.HashMap,Traverse a Map collection as HashMap as clients are added and others removed is impossible.
30962871,1,0,0,java.util.HashMap,Now I want to retrieve the value of above HashMap named newdatamap  as I want to store it like this format in another map named finalmap.Please advise how to achieve this?
30963194,2,0,1,java.util.HashMap,"From that line we can infer that either Classname1 is an interface that Classname2 implements (like HashMap implements Map), or that Classname2 is a subclass (directly or indirectly) of Classname1, like HashMap extends AbstractMap."
30968797,1,0,1,java.util.HashMap,"Of course I could go through each Entry of the HashMap and do the replacement, but I would like to solve it with a Matcher, because I fear that for a very long Hashmap and many strings this could influence the performance."
30975205,1,0,0,java.util.HashMap,Message payload is of type: HashMap.
30975937,2,0,1,java.util.HashMap,"Or use a HashMap<String, List<mystatistik>> where eneyId is the key, and a list of mystatistik (having the same enemyId) as value."
31009873,2,1,0,java.util.HashMap,I am assuming that you have written the code for fetching the data from Excel in the @DataProvider You can create an HashMap containing the  pair and pass it on to the test.
30986328,2,0,1,java.util.HashMap,"I removed the HashMap, instead using the methods of the DataSnapshot to accomplish the same."
30980586,1,0,2,java.util.HashMap,"I have a List of Pin objects, List and the Pin object has the fields: String pinNumber, String pinType, Date insertDate I would like to get a HashMap with <String pinNumber, int count> that have the distinct pinNumber telling me how many distinct pinNumber are in the  List and a count of each."
30980586,1,0,2,java.util.HashMap,So the way I know of to do this is to:  Iterate throught the List Check if the HashMap contains already the key value of the pinNumber and: increase it or add it if it does not exist.
30983616,2,0,0,java.util.HashMap,I would also use a HashMap instead of a List that will map the names and values of the String variables to each other.
30982136,2,0,1,java.util.HashMap,This thread has the info on browsing its source code This is the direct link to the class you were asking: http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashMap.java The internal documentation is quite extensive.
30983099,1,0,0,java.util.HashMap,Key = Node/Relationship Index Value = Node or Relationship I have to serialize and later deserialize this HashMap to and from a Byte[].
30983099,1,0,0,java.util.HashMap,"Since Node and Relationship doesn't seem to be serializable, is it possible to convert this HashMap to a ByteArray?"
30985589,2,0,5,java.util.HashMap,"Use a Map (probably a HashMap) internal to your object to associate ""option2"" with {""2-option1"", ""2-option2"", ""2-option3"", ""2-option4""}."
30985909,1,0,0,java.util.HashMap,As in HashMap there are buckets internally to hold key value pairs.
30987444,2,0,0,java.util.HashMap,"Create a HashMap<String, Animal> that maps an animal's name to the object."
30990596,1,0,2,java.util.HashMap,Return object from HashMap using Iterator.
30990596,1,0,2,java.util.HashMap,roomCharacters is a HashMap of keys and values (String keys and Character objects).
30994190,2,0,0,java.util.HashMap,"Count the occurrences of the next to last word with a HashMap, then use streams to sort the HashMap in descending order and grab the top three values."
30992488,1,0,3,java.util.HashMap,"Prime map: Map<String, Map<Integer, Integer>> prime = new HashMap<String, Map<Integer, Integer>>(); Obvious map: Map<String, Map<Integer, Integer>> obvious = new HashMap<String, Map<Integer, Integer>>(); Mapping map: Map<String, Map<Integer, String>> mapping = new HashMap<String, Map<Integer, String>>();  Below is the description:  In Prime map, key will be dc2 and the value will be {0=1, 1=2, 2=3, 3=4, 4=1, 5=2}."
30997956,2,1,1,java.util.HashMap,"a HashMap will do the job 2) if you want tempList to have uniqe values, use Set here is the complete solution  code."
30999953,1,0,0,java.util.HashMap,Java- HashMap.get returns null when it shouldn't.
30999953,1,0,0,java.util.HashMap,"I am using a HashMap to link some strings to integers, which are then used to index a list."
30999953,1,0,0,java.util.HashMap,"The strings I am using in .get() are passed to a method, from an android spinner, and are definitely correct as I outputted them to the log, and they match those in the HashMap."
30999953,1,0,0,java.util.HashMap,"I don't understand why this is happening, as the string ""Arc minute"" is in the valuesOfAngleUnits HashMap."
31000110,2,1,2,java.util.HashMap,"You are initializing the local HashMap passed to the method, which may not be the same as the instance variable having the same name."
31001817,1,0,0,java.util.HashMap,"I am using HashMap and list to Produce output like Json What i pasted but its not working,Please help how to achieve this, have to write code in spring controller side code."
31002838,1,0,3,java.util.HashMap,"When the app starts, it reads the file (which is a serialized instance of the class 'WordList' which is basically a HashMap) and displays data from it to the user."
31008765,2,0,0,java.util.HashMap,"If they aren't consistent, then you'll end up with the HashMap removing different set of keys than your TreeMap."
31010086,1,0,0,java.util.HashMap,How to get players list from HashMap.
31010086,1,0,0,java.util.HashMap,"I decided to use HashMap for Players, but now i noticed that i have to return an array of Player, right?"
31014075,1,0,3,java.util.HashMap,"I've added data[i][1] to HashMap to determine number of unique values, so I could know the number of loop cycles."
31014075,1,0,3,java.util.HashMap,And there comes the order of name values which puzzles me because HashMap doesn't maintain order.
31027024,2,0,2,java.util.HashMap,"As you can see, to establish the number of unique elements I add them to HashMap and check its size."
31014139,2,0,0,java.util.HashMap,Convert this 2d array into a HashMap.
31023066,2,1,2,java.util.HashMap,You are inserting elements in the map (probably a HashMap or a TreeMap) concurrently and both HashMap and TreeMap are not synchronized.
31015257,1,0,0,java.util.HashMap,Java HashMap check if existing in file.
31015257,1,0,0,java.util.HashMap,How to compare the Keys of HashMap to String?
31015257,1,0,0,java.util.HashMap,I have text file that has 100k number of lines and putting it into HashMap.
31015257,1,0,0,java.util.HashMap,For Example my HashMap looks like this : code.
31015257,1,0,0,java.util.HashMap,"So what I want to do is, I want to check if the keys of my HashMap is existing in text file."
31015257,1,0,0,java.util.HashMap,"My problem is, my other text file is bigger than to lines of my HashMap so it might be throw a NullPointerException or NoSuchElement."
31015598,2,0,0,java.util.HashMap,It seems better to use HashMap's boolean containsKey(Object key) method instead of the direct invocation of equalsIgnore..() in main().
31015598,2,0,0,java.util.HashMap,"If necessary, you may create your own class implement interface Map, and make it a delegator of its HashMap-typed field for customized management of key comparisons."
31026506,2,0,1,java.util.HashMap,"My suggestion is also to use two HashMap, but one of them is filled gradually instead of adding it's sorting complexity to update time."
31024014,1,0,3,java.util.HashMap,We have a HashMap with the size of one million.
31024014,1,0,3,java.util.HashMap,We have to store one million and 100 objects but we don’t want the HashMap to be increased to the size (2 millions) which doubles its current size (1 million) for just 100 objects.
31024093,2,0,2,java.util.HashMap,"HashMap capacity is implemented to be a power of two, so if 2^20 (1048576) is not enough for you, you'll have to go with 2^21 (2097152)."
31024093,2,0,2,java.util.HashMap,"If the exact max number of entries is 1000100, the capacity of the HashMap will be doubled if the number of entries reaches capacity * load factor."
31024363,2,0,1,java.util.HashMap,"If the second Maps are TreeMaps they are filled optimally, and if the major Map is a HashMap, maybe with a high loadFactor (second constructor parameter), then that should be fine."
31025303,2,0,0,java.util.HashMap,"You should call toString() or better if your sure that this is a String declare it when you declare your hashmap HashMap<String, String> user = new HashMap<String, String>();"
31030294,1,0,0,java.util.HashMap,HashMap not updating its values by reference.
31031733,2,1,1,java.util.HashMap,"Looking at the contents of a HashMap in debug is error-prone and confusing, and easy to miss what you are looking for."
31034737,1,0,3,java.util.HashMap,How to convert a HashMap of Objects into an ArrayList of Strings.
31034737,1,0,3,java.util.HashMap,I have a HashMap like so: code.
31037515,1,0,1,java.util.HashMap,"hashmap is a HashMap<LocalDateTime, String> Full stack error: code."
31037885,1,0,0,java.util.HashMap,I'm creating a HashMap like this.
31039145,1,0,2,java.util.HashMap,"However, when scanning the HashMap it tells me that only the last line has been inserted using this code: code."
31039178,2,1,3,java.util.HashMap,The problem is that your code snippet puts all lines under the same key into the HashMap.
31039178,2,1,3,java.util.HashMap,"Since HashMap cannot contain multiple identical keys, the last item is the only one remaining in the map after forEach finishes."
31040407,2,0,1,java.util.HashMap,"Or you could create a HashMap of LeaderBoard objects, with the key being the gamerTag, and the value being the current LeaderBoard object."
31047973,2,0,0,java.util.HashMap,It can be used as HashMap key: code.
31050307,1,0,0,java.util.HashMap,HashSet internally calling HashMap to avoid duplicates in the implementation code.
31050355,2,1,0,java.util.HashMap,"This means, the HashMap is already taking care of avoiding duplicate keys, which are the elements of the HashSet"
31052455,1,0,1,java.util.HashMap,ConcurrentModificationException in HashMap.
31052694,2,0,3,java.util.HashMap,First of all you can change HashMap to ConcurrentHashMap Secondary you may have try to synchronize iter on class or of object.
31052506,1,0,0,java.util.HashMap,I have a HashMap like below code.
31057138,2,1,7,java.util.HashMap,"If you wish to preserve the order, you can use a LinkedHashMap instead of a HashMap."
31058826,1,0,0,java.util.HashMap,Does setting an object to null while iterating over a HashMap have any effect on the object's state.
31062167,2,1,2,java.util.HashMap,"This should do the trick: 1) Use Scanner to read next int while file not processed 2) Convert int to character array 3) for each element in char array, use HashMap to get value where key is Character and value is word code."
31064469,1,0,0,java.util.HashMap,Java HashMap null values or keys.
31064469,1,0,0,java.util.HashMap,Is it possible that I can put values directly to the key has null values of HashMap?
31064469,1,0,0,java.util.HashMap,What I want is to check if the value of one key in HashMap is null then i'm going to fill it.
31076705,1,0,0,java.util.HashMap,I suppose I can make use of a HashMap.
31077020,2,0,2,java.util.HashMap,It is essential that objects cannot be modified when being used as a key in a HashMap.
31077020,2,0,2,java.util.HashMap,"With that class in place, you can use it in a HashMap: code."
31077085,2,0,1,java.util.HashMap,A HashMap only has one key type.
31077085,2,0,1,java.util.HashMap,Generate a key string that acts as Key for the HashMap.
31077085,2,0,1,java.util.HashMap,The important thing for this second idea is that you overwrite the hashCode and the equals function of your carrier object to get it to work properly with the HashMap.
31080605,1,0,2,java.util.HashMap,"I have a somewhat niche need to key off two objects of generic types X and Y, and use that to return type T. I want to put these items in tightly managed HashMap and use that to look up on the X,Y key."
31083074,1,0,9,java.util.HashMap,"Looking at the code for HashMap which backs HashSet, there is no resizing or shuffling of contents going on other than that localized to a specific bin."
31083589,2,0,1,java.util.HashMap,"HashSet is based on HashMap, and its iterator has to step through all buckets until it finds a non-empty one; as far as I can tell from a skim of the source code of HashMap, it does not resize itself after a delete, i.e. once you bring it to a certain capacity, you will have to resize manually if you don't insert into it."
31086134,1,0,0,java.util.HashMap,How to add a multiple value in a single list HashMap> map1 = new HashMap>();.
31086285,2,0,1,java.util.HashMap,"Check out the put function: Oracle Documentation - HashMap - Put So for example, let's say you have an code."
31089624,1,0,0,java.util.HashMap,Error when import HashMap.
31093771,2,0,0,java.util.HashMap,You can use a HashMap to store the type of Icon for each Marker that is added to the map.
31093771,2,0,0,java.util.HashMap,"I just got a simple example working to give the general idea, using a HashMap that maps the Marker ID to the color of the Icon currently set for the Marker."
31093771,2,0,0,java.util.HashMap,"If you are using custom Drawables, you could use HashMap<String, Integer> instead of HashMap<String, Float> as I have in this simple example."
31093771,2,0,0,java.util.HashMap,"If you change the Marker Icon color or Drawable resource, you should also update the HashMap as well."
31094194,2,0,0,java.util.HashMap,"Inside the Map<String,List<Item>> itemsSold = new HashMap<>(); You could use the Array.size() to see how many ""Apples"" you have, and then add / get / remove them as you see fit per sales, etc."
31096756,2,0,1,java.util.HashMap,"If not, then using a HashMap."
31096756,2,0,1,java.util.HashMap,If it is required to persist then you need to find a way to save the state of a HashMap without using a database.
31098548,1,0,1,java.util.HashMap,I was implementing a simple HashMap program which stores name and age of persons.
31099682,1,0,5,java.util.HashMap,I have a AutoSaver thread which loops through the HashMap and saves all the player 1 by 1.
31100961,2,0,0,java.util.HashMap,"The just-in-time compiler might recognize the duplication, but only if the methods being invoked are simple enough to be inlined, which is probably not the case for HashMap.get."
31104584,1,0,2,java.util.HashMap,How to save enum class in a HashMap?
31104584,1,0,2,java.util.HashMap,Now I want to save these enum classes in a HashMap: code.
31106316,1,0,0,java.util.HashMap,Java read text file store to HashMap.
31106316,1,0,0,java.util.HashMap,"I'm just wondering if this logic is possible, what I want to do is to read text file line by line and store it to HashMap."
31106316,1,0,0,java.util.HashMap,"I want to store the first 4 line into key of hashMap and when the lines read the checkpoint, the next line will be stored to value of HashMap."
31106558,2,0,0,java.util.HashMap,"Your code first puts (test1,null), (test2,null), etc into the HashMap."
31106558,2,0,0,java.util.HashMap,"When you reach the checkpoint, you need to know what was the first entry that was added to the HashMap in order to set its value to the first line after checkpoint.Now, your problem is to retrieve the key values in the HashMap exactly in the same order as they were put in the Map and update their values."
31106558,2,0,0,java.util.HashMap,This is not possible in HashMap.
31109463,2,0,5,java.util.HashMap,Other implementations (such as HashMap) don't support concurrency and shouldn't be used by multiple threads at the same time.
31109580,2,0,1,java.util.HashMap,"Generally speaking, the simpler implementations of this interface, such as HashMap and TreeMap are not thread safe."
31111943,2,0,1,java.util.HashMap,"If you rectify the name of the method, it will be called an undefined number of times that depends on the details of the HashMap implementation."
31113139,2,1,5,java.util.HashMap,"The toMap collector does not make any guarantee about the map implementation returned (although it's currently a HashMap), but you can always use the overloaded variant if you need more control, providing a throwing merger as parameter."
31119831,1,0,3,java.util.HashMap,How can I convert a HashMap> to a HashMap?
31119831,1,0,3,java.util.HashMap,"I have a HashMap<String, ArrayList<String>>."
31119831,1,0,3,java.util.HashMap,"I am trying to convert it to a HashMap<String, String[]>."
31122606,1,0,6,java.util.HashMap,I have not imported standard util library which contains HashMap.
31122606,1,0,6,java.util.HashMap,"Now, when I try to compile the above program, the java compiler gives the error that it cannot find symbol HashMap."
31122606,1,0,6,java.util.HashMap,Note that the declaration involving HashMap comes after BufferedReader.
31140603,2,1,3,java.util.HashMap,"Cache uses hashCode (much like HashMap class does), so when it sees two keys with different hashcodes, it assumes they are not equal."
31132071,2,0,6,java.util.HashMap,"Normally you don't want to do that, but suppose that each instance of the C class should be a unique key in some HashMap."
31136988,1,0,1,java.util.HashMap,Java HashMap ArrayList manipulation.
31138570,2,0,2,java.util.HashMap,addToMap creates a HashMap instance and assigns it to a local variable.
31147508,2,0,0,java.util.HashMap,Use a HashMap.
31150148,1,0,1,java.util.HashMap,Java HashMap performance and self-time in profiler (netbeans).
31150148,1,0,1,java.util.HashMap,"But using profiler I found that most of this time is actually spend in self-time not in  HashMap.get(Object), neither in Random.nextInt()."
31155294,2,0,0,java.util.HashMap,"As an alternate you can create an ArrayList for storing these Maps, which you can get while converting each JSONObject to Map  One more thing you can do here is using a parser like Jackson Parser HashMap<String,String> result =         new ObjectMapper().readValue(JSON_SOURCE, HashMap.class); (where JSON_SOURCE is a File, input stream, reader, or json content String)."
31159837,1,0,0,java.util.HashMap,"I'm having a hard time interating a HashMap<String, Future<DPSImporterServiceImpl>>: code."
31161511,2,0,4,java.util.HashMap,"This question sounds a lot like homework, so I'll try to simply point you in the right direction:  Take a look at the HashMap."
31161511,2,0,4,java.util.HashMap,"The HashMap is a key value structure, thus you could store the request-expected response as so."
31161511,2,0,4,java.util.HashMap,The keys of HashMap structures must be unique.
31161800,1,0,1,java.util.HashMap,"HashMap... here getting null, i've to overload hashcode() inorder to my respective object."
31161800,1,0,1,java.util.HashMap,"HashMap... here getting null, i've to overload hashcode() inorder to my respective object."
31163873,2,0,1,java.util.HashMap,You must override hashcode() and equals() method in Student2 class when used as key in HashMap.
31168327,2,1,5,java.util.HashMap,This is apparent in the source code for HashMap: code.
31169067,1,0,2,java.util.HashMap,HashMap way of doing containsKey not behaving as expected.
31169373,2,0,0,java.util.HashMap,"For more info on how HashMap works in Java, you can see this blog here."
31170661,1,0,0,java.util.HashMap,I am passing a HashMap with key-value pairs Long[] and String from one activity to another and then putting the HashMap data into a TreeMap so it'll be sorted.
31170661,1,0,0,java.util.HashMap,To pass the data I made a for loop of the HashMap data.
31172233,2,0,0,java.util.HashMap,My Java is a little limited but couldn't you just loop over the HashMap and add each entry to a string?
31196047,2,0,0,java.util.HashMap,"I initially thought you could just iterate over the map's entry set using CsvBeanWriter and a name mapping array of ""key"", ""value"", but this doesn't work because HashMap's internal implementation doesn't allow reflection to get the key/value."
31172235,2,0,2,java.util.HashMap,Maybe you could clear the HashMap instead of re-creating it after you don't need it anymore.
31174325,1,0,1,java.util.HashMap,I have a call to a HashMap's containsKey method that I expect to return true.
31174325,1,0,1,java.util.HashMap,I've debugged both the .class and the JAR versions (the JAR using a remote connection as described in http://www.eclipsezone.com/eclipse/forums/t53459.html ) and in both cases the HashMap appears to contain the Key I'm trying to check.
31174325,1,0,1,java.util.HashMap,The HashMap uses URI objects as keys.
31174325,1,0,1,java.util.HashMap,Here are the contents of the variables as shown in each debug session: When run as a .class file HashMap Key: java.net.URI = file:/E:/SSD%20App%20Libraries/Google%20Drive/Programming/Bet%20Matching/Java%20Sim/target/classes/simfiles/paytables/ URIToCheck: java.net.URI = file:///E:/SSD%20App%20Libraries/Google%20Drive/Programming/Bet%20Matching/Java%20Sim/target/classes/simfiles/paytables/ Result: GameTreeItemsMap.containsKey(URIToCheck) is true When run as a JAR HashMap Key: java.net.URI = jar:file:/E:/SSD%20App%20Libraries/Google%20Drive/Programming/Bet%20Matching/Java%20Sim/out/artifacts/JavaSim_jar/Java%20Sim.jar!/simfiles/paytables/ URIToCheck: java.net.URI = jar:file:///E:/SSD%2520App%2520Libraries/Google%2520Drive/Programming/Bet%2520Matching/Java%2520Sim/out/artifacts/JavaSim_jar/Java%2520Sim.jar!/simfiles/paytables/ Result: GameTreeItemsMap.containsKey(URIToCheck) is false I would expect the method to return true in both cases.
31196795,2,1,0,java.util.HashMap,This has nothing to do with HashMap.
31183810,1,0,4,java.util.HashMap,Now my issue is how can I display the table stored in my HashMap in jsp as a table using struts?
31184598,2,0,1,java.util.HashMap,"First of all, a HashMap never keeps the orders of the Object which are put in it."
31185559,2,0,0,java.util.HashMap,"Almost always, when you're using a type of object in a HashMap or HashSet or what-have-you, you'll override hashCode with your own implementation, which could have nothing at all to do with the memory address of the object."
31185564,2,0,1,java.util.HashMap,"in the case of a HashMap, amortized O(1) becomes O(N))."
31193257,1,0,0,java.util.HashMap,How do I get this HashMap to work the way I want it to?
31193257,1,0,0,java.util.HashMap,"In my program, I wanted to use a HashMap of Integer[]s, but I was having trouble retrieving the data."
31193257,1,0,0,java.util.HashMap,I don't want to have to iterate through the HashMap with a.keySet() if I don't have to.
31199099,1,0,0,java.util.HashMap,I am currently using a HashMap to correspond the duplicate values and the number of times they are repeated.
31207778,2,0,0,java.util.HashMap,Put a check before fetching values from HashMap.
31205585,1,0,3,java.util.HashMap,"I have a HashMap with key1 to keyn, and the value for each key is a list of objects with varying number of objects on each."
31207961,1,0,0,java.util.HashMap,"I tried applying the same logic to store a HashMap<String,String> using the following two methods however it doesn't seem to work as when I call getfinalteams I get an empty hashmap, even though i set it before properly."
31213275,2,0,1,java.util.HashMap,"You can maintain HashMap<Integer, String> for  denominator and numerator  , Integer being value of denominator and numerator and String being their Alpha counterparts and can get() the values from it accordingly."
31215656,1,0,0,java.util.HashMap,"Is it a workable strategy to use a HashMap where I do h.put(Arrays.deepHashCode(a), w)?"
31217534,1,0,2,java.util.HashMap,java HashMap - how to retrieve both elements.
31217738,2,1,2,java.util.HashMap,"If your Person class overrides both hashCode and equals, so that p1.equals(p2) is true and p1.hashCode()==p2.hashCode(), you can't retrieve both ""11"" and ""22"" from the Map, since HashMap doesn't allow duplicate keys."
31218031,1,0,2,java.util.HashMap,Does Java HashMap require values to be immutable?
31218031,1,0,2,java.util.HashMap,"I am learning Java HashMap Class(Key,Value) and found why Key needs to be Immutable as if it is changed later after being added to hash it maybe in wrong bucket."
31218096,2,0,4,java.util.HashMap,To better show why a key can be modifiable I add a little explanation on how HashMap works and how a ModifiableKey can be coded.
31218096,2,0,4,java.util.HashMap,"How works an HashMap: Internally an HashMap uses an array of Entry where Entry is a tern (Key, Value, Entry)."
31219167,2,1,3,java.util.HashMap,One common way to write FilterFactory is using a HashMap inside it.
31221596,1,0,0,java.util.HashMap,"I decided a HashMap with ClassName as a key and the class instance as value, but how can I create it ?!"
31224694,1,0,0,java.util.HashMap,"Android Studio flags the categories.add calls because Branch() in Branch cannot be applied to: (java.lang.String, java.util.HashMap) I don't understand because I defined the Branch constructor to accept those types."
31225067,2,0,0,java.util.HashMap,"If all you want to do is serialize a HashMap<String, HashMap> I'd suggest you look at tools that are designed to make this really easy like Jackson, or ProtocolBuffers."
31224864,1,0,1,java.util.HashMap,Order HashMap by value in Java doesn't work.
31227002,2,0,3,java.util.HashMap,"map.get() looks for that Employee in a different bin of the HashMap than the one it is located at (due to the hashCode change), and doesn't find it."
31227139,1,0,0,java.util.HashMap,"I change code to like this..I use session and connection to access database.. public Container IReport(String file,HashMap para){ code."
31228952,1,0,1,java.util.HashMap,How to print an HashMap by value and not by key with Jquery.
31228952,1,0,1,java.util.HashMap,"This is how the HashMap JSON comes to jsp:  Like you can see, the map is ordered by name."
31228952,1,0,1,java.util.HashMap,But this is how the HashMap is listed:  The map is listed from smaller key to biggest!
31229588,2,0,0,java.util.HashMap,"Well I don't know it's a good/bad way, but was just curious so tried this out , you can use a HashMap to write your ""keys"" and display its value when needed."
31230548,1,0,0,java.util.HashMap,"In another method, it then connects to all those URLs (that are just comments on the post) and gets the HTML from the comments and saves them to a HashMap."
31231829,1,0,3,java.util.HashMap,"I look at Minecraft directory and found their resources (image, sound, binary-data) store in a way that look like HashMap or like git repository."
31231829,1,0,3,java.util.HashMap,Here is the HashMap alike JSON files  Here is the actual file system.
31232198,1,0,1,java.util.HashMap,"Why does HashMap.ValueIterator#next() uses nextEntry().getKey(), instead of nextEntry().key."
31232198,1,0,1,java.util.HashMap,"In HashMap.java line 827, jdk 1.6 code."
31235462,1,0,2,java.util.HashMap,What I' trying to accomplish is to have a HashMap in Car such that whenever I'm having a Car entity-object I am able to access all descriptions from the language id.
31236263,2,1,1,java.util.HashMap,If speed is an issue you could put the names in a HashMap instead of an array.
31238789,1,0,1,java.util.HashMap,ConcurrentModificationException in HashMap.
31239225,1,0,2,java.util.HashMap,Getting a key from a HashMap using another object with its hashcode.
31240062,2,0,1,java.util.HashMap,And what JavaDoc for HashMap.keySet() said:  Returns a Set view of the keys contained in this map.
31240062,2,0,1,java.util.HashMap,Java's HashMap from collections will return you java.util.HashMap.KeySet and java.util.HashMap.KeySet.clear(); just calls map.clear() (KeySet is an inner class of java.util.HashMap)
31240304,1,0,2,java.util.HashMap,"Another thing is that here I am modifying main HashMap(patientId,HashMap(insuranceId,InsuranceInfo)), and the changes are reflecting in local reference that is the id is adding to insuranceMap variable in the current method()."
31241169,1,0,0,java.util.HashMap,"However, each of these objects is essentially just a HashMap, so I have been wondering if there is a more efficient way to distribute a ""map of maps"" using Hazelcast."
31241169,1,0,0,java.util.HashMap,"In the absence of this as a core Hazelcast feature, is there any more efficient way of managing this kind of data structure other than my current ""IMap<String, HashMap<String, String>>"" approach?"
31344064,2,0,0,java.util.HashMap,"However, each of these objects is essentially just a HashMap  Instead of using IMap to store HashMap you could probably just store in the main IMap just identifier for the HashMap corresponding to certain key and store all the child maps in Hazelcast as well."
31344064,2,0,0,java.util.HashMap,"Instead of IMap<String, HashMap> use IMap<String, SomeStringId> and get corresponding HashMap with HazlecastInstance.getMap(SomeStringId) - that way you'll still need to put values back into Hazelcast after mutating, but you'll put just one value - not the whole map."
31242039,1,0,1,java.util.HashMap,Java: Iterate through a HashMap which is inside another HashMap.
31242039,1,0,1,java.util.HashMap,I want to iterate through a HashMap which is inside another HashMap code.
31242039,1,0,1,java.util.HashMap,"I was able to iterate through the parent HashMap as following, code."
31247835,1,0,0,java.util.HashMap,How to get key depending on the value from HashMap.
31247835,1,0,0,java.util.HashMap,I have a HashMap in Java (named queue) which with Integer as the key and List of messages as a value related to each key.
31247835,1,0,0,java.util.HashMap,"If the entered value equal the value of HashMap, then get the key of this value and store it in a list."
31249993,2,0,4,java.util.HashMap,"As an example, lookup the source for java.util.HashMap, there's a static inner class called Entry that implements java.util.Map.Entry: code."
31260878,1,0,1,java.util.HashMap,I also have a number of default operators which are stored in a static DEFAULT_OPERATORS HashMap.
31260878,1,0,1,java.util.HashMap,I intend to store the value of the variables in a HashMap mapping the name to the value.
31260878,1,0,1,java.util.HashMap,But where does this HashMap get stored and how is it associated with the tree.
31260878,1,0,1,java.util.HashMap,"Variable nodes are leafs and all variable nodes need access to the HashMap, but the values must be set from the client who only has access to the root of the tree."
31260878,1,0,1,java.util.HashMap,I need some way of making the variables HashMap globally accessible by every node in the tree and I'd rather avoid giving each node a reference to the map with the ability to set the values.
31294511,2,0,0,java.util.HashMap,"As I find out, there is the problem with HashMap serialization in JAVA, so I saved HashMap as object to cache and when needed - opening it from cache."
31272741,2,1,0,java.util.HashMap,You can create an HashMap for managing the mapping between Markers and related information.
31272558,1,0,2,java.util.HashMap,"I already have a function to convert List<CsSectionDetail> list to map , with the structure Map<Integer, List<CsSectionDetail>> map = new HashMap<Integer, List<CsSectionDetail>>(); Below is the code code."
31279096,2,0,0,java.util.HashMap,"You can just use a HashMap<Integer,Event> to get the correct Event for the eventID."
31282962,1,0,1,java.util.HashMap,Trying to add Array of Strings via Another Class using HashMap.
31286042,1,0,6,java.util.HashMap,Java Singleton Synchronization for multi-thread using HashMap.
31286273,2,0,1,java.util.HashMap,"I think the problem is with HashMap, use Concurrent HashMap But the point I want to make is your getInstnace() function is not well written."
31290864,2,1,4,java.util.HashMap,"a HashMap (or TreeMap if you suspect your .hashCode() implementation is too slow or too poor, but I'd benchmark first) and a List or Set implementation as the value types."
31298352,2,0,3,java.util.HashMap,You might also consider using a HashMap rather than an array to track the counts for various lengths.
31299196,2,0,0,java.util.HashMap,Collecting your words into a HashMap where the key is the length of the word and the value is the frequency of which the length occurs is a good way to count.
31299196,2,0,0,java.util.HashMap,"Once you have your HashMap built, using Java 8, you can sort the keys from least to greatest and build your output in a StringBuilder."
31299411,1,0,2,java.util.HashMap,MyList is HashMap.
31299411,1,0,2,java.util.HashMap,MyList contains ArrayList of custom object MyListElement (it's HashMap too).
31300475,2,0,0,java.util.HashMap,"You try to overcome this with the while loop, but tPoolExecutor.getActiveCount() is potentially coming out as 0 before the workerThread is executed, and then the countThreadMap.size() is happening after the threads were added to your HashMap."
31308675,2,0,4,java.util.HashMap,"When you don't have any logic to execute in switch-case, you can use a static HashMap<String,String> code."
31303191,1,0,1,java.util.HashMap,Get specific Data from inside a HashMap.
31303191,1,0,1,java.util.HashMap,"These are inside the HashMap and I printed that out, what I need to do though is make this output more presentable and I guess that leads to needing to manipulate/get certain Data from inside the Map and then make it presentable."
31303300,2,1,2,java.util.HashMap,"Well instead of relying on the default toString() implementation of HashMap, just loop over the entries: code."
31303273,1,0,3,java.util.HashMap,How to convert a HashMap to a K/V-String in Java 8 with Streams.
31303273,1,0,3,java.util.HashMap,"I want to create a string of the key value pairs of my HashMap<String, String> m as fast as possible."
31317188,2,1,1,java.util.HashMap,Here's an example of that (it's converting a Java map to a Scala one but it should work similarly the other way around): Convert java.util.HashMap to scala.collection.immutable.Map in java.
31307047,1,0,0,java.util.HashMap,Is it okay to use ArrayList<> inside a HashMap when creating an ExpandableListView?
31307047,1,0,0,java.util.HashMap,Then created a HashMap where my HashMap looks like this  code.
31307047,1,0,0,java.util.HashMap,My HashMap is used for displaying the Header and Child of the ExpandableListView  the first parameter of my HashMap was for my header and the second one is for the child items for each header.
31311177,1,0,2,java.util.HashMap,"(30,000,000) I want to load these images into a memory like this HashMap< id, HashMap<Integer,byte[]>>  The time taken to load 30 million records sequentially is very high."
31312685,2,0,2,java.util.HashMap,"In this solution you must note:  I use Java long type to read the id Oracle number (if your actual numbers exceed Java long max value then you must use BigInteger) HashMap is not thread-safe, so you must use ConcurrentHashMap to wrap the unsafe HashMap while populating it."
31311266,2,0,4,java.util.HashMap,"If the names are unique, a HashMap woulrd be apropriate."
31311310,2,0,1,java.util.HashMap,"EDIT: If the order is not important, as noted in later edits to the OP, a HashMap would do just fine."
31311582,2,0,0,java.util.HashMap,I would suggest go for HashMap  The HashMap class uses a hashtable to implement the Map interface.
31311582,2,0,0,java.util.HashMap,"This allows the execution time of basic operations, such as get( ) and put( ), to remain constant even for large sets HashMap are efficient for locating a value based on a key and inserting and deleting values based on a key."
31311582,2,0,0,java.util.HashMap,The entries of a HashMap are not ordered.
31312370,1,0,2,java.util.HashMap,Iteration Order of HashMap key same or not.
31312370,1,0,2,java.util.HashMap,I want to know that HashMap is give same sequence of key when iterated each time after adding records.
31312406,2,1,2,java.util.HashMap,"If you don't make any changes to the HashMap between the two iterations, you'll likely see the same iteration order (even though it's not guaranteed), since this is a deterministic data structure."
31312443,2,0,1,java.util.HashMap,"HashMap uses hashing to store the entries in hashmap, so there is no gurantee those will appear in specific order."
31312443,2,0,1,java.util.HashMap,"If you want your entries from your HashMap ordered, then you will have to sort it or you can use Treemap"
31312491,2,0,0,java.util.HashMap,HashMap doesn't maintain the order.
31312609,2,0,0,java.util.HashMap,"Some map implementations, like the TreeMap class, make   specific guarantees as to their order; others, like the  HashMap   class, do not."
31312609,2,0,0,java.util.HashMap,"You can use LinkedHashMap as its entrySetmaintain insertion ordering, as per Java Doc:  This implementation differs from HashMap in that it maintains a   doubly-linked list running through all of its entries."
31313632,2,1,3,java.util.HashMap,HashMap is not ordered.
31314565,2,0,1,java.util.HashMap,"You could use a HashMap<String, Counts> to keep track of counts with only one for loop instead of two nested loops."
31329817,2,0,0,java.util.HashMap,"In this case, I would recommend using a HashMap."
31321861,2,1,1,java.util.HashMap,It's generally considered bad practice to extend HashMap.
31321415,1,0,1,java.util.HashMap,How to view the common Values between multiple keys in Same HashMap in java?
31321642,2,0,2,java.util.HashMap,You have to manually loop inside your HashMap code.
31321935,2,0,0,java.util.HashMap,"you can make the list longer, but you can also make the list in the list longer), and given that a HashMap basically has fixed dimensions (one key goes to one value, not multiple), the only way to do this is by creating a new object containing the list data and have the key point to this object."
31324206,1,0,0,java.util.HashMap,HashMap Input  code.
31325463,2,0,2,java.util.HashMap,"The documentation tells you, what's going on if the load factor get's too high:  An instance of HashMap has two parameters that affect its performance: initial capacity and load factor."
31325478,2,0,2,java.util.HashMap,I don't understand how access time can be constant if these linked lists could get very long  HashMap does not offer guaranteed constant access time.
31325478,2,0,2,java.util.HashMap,"However, since HashMap chooses prime numbers for its bucket count, the most common case for a linked list to become very long is that many hash codes are actually the same, without taking the modulo into consideration."
31326799,1,0,0,java.util.HashMap,"This is a new key for a second HashMap<String,ArrayList<String>> where the value (ArrayList<String>) contains the data of all Columns (foo,bar,foobar,barfoo)."
31331034,1,0,0,java.util.HashMap,String[] or ArrayList better as Key in HashMap?
31331034,1,0,0,java.util.HashMap,"So I need to choose between   HashMap<String[], Object>  HashMap<ArrayList<String>,Object>  My input Parameter is: ArrayList<String> in."
31331034,1,0,0,java.util.HashMap,"I'm wondering, which hash (since it is a HashMap) would be faster."
31331725,1,0,5,java.util.HashMap,"Input is - 2 integers separated by space of size >=1 and <= 1000000 I tried using HashMap , TreeMap (put() and containsValue() method)- but it seems they are taking too much time."
31331979,1,0,0,java.util.HashMap,"HashMap problems, printing neighbors."
31331979,1,0,0,java.util.HashMap,I am working on a HashMap.
31332142,2,0,2,java.util.HashMap,"The problem is with your addNeighbor method, you are creating a new HashMap object each time it is called instead of adding elements to the map."
31332142,2,0,2,java.util.HashMap,Try using the HashMap put method.
31335388,2,0,0,java.util.HashMap,In case HashMap doesnt exists: code.
31341886,2,0,2,java.util.HashMap,You have to instantiate a new List for every Entry in your HashMap.
31341906,1,0,1,java.util.HashMap,How to display HashMap as DataTable.
31341906,1,0,1,java.util.HashMap,I have a HashMap in mybean: code.
31341906,1,0,1,java.util.HashMap,"Problem is that I don't know how many keys HashMap will have (DATE1, DATE2, ... DATEN)."
31342841,1,0,2,java.util.HashMap,"But if I am using a LinkedMultiValueMap it's because I looked on the web ;) And if I replace it by a HashMap, it works as well, so can anyone tell me the advantage of using a LinkedMultiValueMap ?"
31342841,1,0,2,java.util.HashMap,Code with HashMap: code.
31342841,1,0,2,java.util.HashMap,"I can see we can preserve the order of the parameters in the LinkedMultiValueMap, but it does not matter in my project... And so if orders matters I still could use a LinkedHashMap EDIT: It looks like I need the MultiValueMap if I use APPLICATION_FORM_URLENCODED and HashMap, this code throw an exception : code."
31342841,1,0,2,java.util.HashMap,"So, it looks like that setting some parameters with a HashMap is not a good idea at all..."
31342841,1,0,2,java.util.HashMap,"So I removed the accepted answer for now, waiting more explanation on this point... And I have the suitable converter (converters.add(new FormHttpMessageConverter());), I mean if I use a MultiValueMap I don't have the exception, so the HashMap is the problem!"
31343106,2,0,0,java.util.HashMap,In your case HashMap is enough because LinkedMultiValueMap performance will slower then HashMap and you are not required for your scenario.
31343119,2,0,2,java.util.HashMap,"In your case, since you only have one value per key, you should be able to safely use a HashMap."
31343573,2,0,1,java.util.HashMap,"Now to get the top 1000 you have to sort based on the values,refer Sorting HashMap by values To improve the performance you can use concurrency, check this link Data inconsistency using ConcurrentHashMap  which you can modify to access the list with each thread starting from particular index and end at some."
31345491,1,0,0,java.util.HashMap,Get values of HashMap in ComboItem.
31345491,1,0,0,java.util.HashMap,I am trying to build a combobox taken values from a HashMap.
31345491,1,0,0,java.util.HashMap,"Here my code, dateOptions is a HashMap<String,String> code."
31352574,2,0,2,java.util.HashMap,That's because you are actually only adding one HashMap to the ArrayList.
31357213,2,0,0,java.util.HashMap,"What you probably want is to keep cache of the generated urls in say a HashMap, and if there is no value for a certain key, then generate the url with getAmazonTempUrl() and store it in the cache."
31355834,2,1,1,java.util.HashMap,"Not that I know of, but it's fairly easy to reproduce with a HashMap: code."
31358485,1,0,0,java.util.HashMap,What i want is to concatenate these names and use them as a Map object like this  Map (playa1Name+playa2Name) =new HashMap(); and then store this Map on a file since i do not know what the players name will be.
31358687,1,0,1,java.util.HashMap,"among a few others, it contains a transient field  transient HashMap<Class, HashSet<GameObject>> gameObjects I use onSaveInstanceState(Bundle outState) to store my GamePanel mainGamePanel simply by  outState.putSerializable(""mainGamePanel"", mainGamePanel); After restoring via onRestoreInstanceState(Bundle savedInstanceState), this code  code."
31358687,1,0,1,java.util.HashMap,produces the same number in the logcat as the size of the transient HashMap before restoring.
31360495,1,0,1,java.util.HashMap,How to deserealize JSON array into HashMap using jackson?
31362351,2,0,2,java.util.HashMap,You will have to use HashMap for this task.
31362351,2,0,2,java.util.HashMap,"Lets say your HashMap will contain count of occurences of given string, so it will be of type HasMap<String,Integer> And now, lets iterate over your collection:  Get another string from your collection Check if give string exists in HashMap (#contains) If not exist, put new element with String key (hashMap.put(stringKey,1); If it exists, put element with the same key, but increment the internal counter (hashMap.put(stringKey,hashMap.get(stringKey)+1) Continue  Now you have hashmap contains exact number of occurences of given strings from your collections."
31362351,2,0,2,java.util.HashMap,"Fast lookup would be to create reverse HashMap<Integer,String> but there is a possibility that counts will duplicate and this wont work."
31362385,2,0,1,java.util.HashMap,You could do it with only a HashMap.
31362399,2,1,2,java.util.HashMap,"Depending on the length of the strings, the HashMap will be a little more efficient than using collections although the difference is mostly negligible."
31362426,2,0,1,java.util.HashMap,If the data doesn't change that often though and you don't need sorted data it would probably be better to use a HashMap.
31363119,1,0,2,java.util.HashMap,"This remains consistent across JTextArea/JTextField, various ways of referencing the text field (direct variable vs pulling from the HashMap), and regardless of what kind of thread does the accessing."
31364096,2,1,3,java.util.HashMap,"This question is no different from the more general question of ""how do I get a reference to one object out of several"", and one good solution is to put your objects, here your JPanel ""views"" into a collection, such as an ArrayList, if you want your items retrievable by index, or perhaps a HashMap if you want your items retrievable by a non-numeric object key such as a String."
31364899,2,0,1,java.util.HashMap,When you use a HashMap it replaces the original value with the new duplicate.
31367285,2,0,1,java.util.HashMap,"Iteration over collection views   requires time proportional to the ""capacity"" of the HashMap instance   (the number of buckets) plus its size (the number of key-value   mappings)."
31367285,2,0,1,java.util.HashMap,An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
31368806,1,0,0,java.util.HashMap,How sort HashMap DESC.
31368806,1,0,0,java.util.HashMap,i get data from json and put in the HashMap and show in ListView Now i want sort desc data in this HashMap and show in ListVeiw this is part of my code code.
31368851,1,0,0,java.util.HashMap,Why is the added content in the HashMap only request life.
31368851,1,0,0,java.util.HashMap,"Is there any explanation for this behaviour in the adding part (else block) when I add a new route to my bus table with the same selected one, the new added route id is being recognized and the else block is being entered afterward the marker is being added to the HashMap but is not being displayed on the map."
31368851,1,0,0,java.util.HashMap,Additionally when the new Response reaches the method again I noticed that the last added marker with the new id is not in the HashMap and it just contains the elements of the first request also when the request is over and the new added element stays in the HashMap for the request Life!
31369339,1,0,1,java.util.HashMap,Would HashMap provide efficient access to object arrays by a string type?
31369339,1,0,1,java.util.HashMap,"I thought about having a HashMap of String|Array, and every entry would have the object type name (String) and the array itself."
31369339,1,0,1,java.util.HashMap,"By efficient I mean if HashMap's ""get"" method can slow down things."
31369830,2,1,3,java.util.HashMap,HashMap's get method is very efficient because it uses a hash table.
31369830,2,1,3,java.util.HashMap,So calling get(key) on the HashMap will instantly give you the reference to the key's value.
31369830,2,1,3,java.util.HashMap,"What this means: If you have a unique String value, you will get instant access to the value using HashMap's get method."
31369926,2,0,0,java.util.HashMap,"HashMap should function around O(1), it is a great solution."
31371109,2,1,0,java.util.HashMap,Use a HashMap to keep track of the unique fields.
31371131,2,0,1,java.util.HashMap,"If you don't want to use the stream API, you can also create a HashMap und do your summing manually in the loop."
31374124,1,0,0,java.util.HashMap,The adapter returns fragments using .newInstance to pass in array objects as arguments and records them to a HashMap so I can point back to them later.
31374124,1,0,0,java.util.HashMap,So as the user pages through the onPageSelected tries to get the fragment from the adapters HashMap and call the start/stop methods as appropriate.
31379591,2,0,2,java.util.HashMap,"HashMap<String,Object> getDjname = new HashMap<String,Object>(); and put unique value as key and the whole model as a value."
31385615,2,1,2,java.util.HashMap,Just use a HashMap with original string as value and lower case one for key code.
31388383,1,0,2,java.util.HashMap,"I then execute the following against a passed HashMap<String, Double>."
31389954,1,0,1,java.util.HashMap,Performance of Sorting a HashMap by Value vs Using TreeMap or LinkedHashMap.
31389954,1,0,1,java.util.HashMap,I'm currently sorting a HashMap by value and was wondering whether performance would be better if  it was better to sort using something like a TreeMap instead.
31389954,1,0,1,java.util.HashMap,"I know that HashMap's have an insertion and sorting complexity of o(1) time and a tree sort in java will take log(n) (I believe), but I'm wondering what the cost of sorting a HashMap actually is."
31402090,2,0,3,java.util.HashMap,"hMap is an array of HashMaps, not a HashMap, so it has no values() method."
31402090,2,0,3,java.util.HashMap,You need hMap[i].values() to access the values() of the i'th HashMap in the array.
31404642,1,0,0,java.util.HashMap,"where collection bookTargetTypes is a set of key-value (int, String) pairs implemented in Java as a HashMap and read by a server."
31411873,1,0,0,java.util.HashMap,The state that is to be shared is maintained in a HashMap.
31411873,1,0,0,java.util.HashMap,"Once this job executes, the other beans that use @Inject (for the Singleton) no longer get information maintained in the HashMap."
31412762,1,0,0,java.util.HashMap,HashMap key that is made up of multiple tokens and has non-null value mapping returns null.
31412762,1,0,0,java.util.HashMap,"Code and csv snippet included for reference, but as I said, the HashMap appears to be populating correctly."
31414665,1,0,0,java.util.HashMap,I am using HashMap with the table id as a  key and the marker as value also in my case the key is unique.
31414665,1,0,0,java.util.HashMap,"So after the user selectes the desired routes, they are being added to the map  as marker and to the HashMap as elements but the problem occures when I insert a new one with the same route and different key (id is being incremented by one in the table) into the table then the adding part is being entered and the id of the new added one is being recognized but the new marker is not being added on the map but to the  HashMap markerMap."
31414665,1,0,0,java.util.HashMap,Additionally when the new Response reaches the method again I noticed that the last added marker with the new id is not in the HashMap and it just contains the elements of the first request also when the request is over and the new added element stays in the HashMap for the request Life!
31418742,1,0,0,java.util.HashMap,I am trying to simulate that by using a HashMap> for the same purpose.Is that correct or do I have to use JDBC or SQLite?
31419476,2,0,1,java.util.HashMap,I am trying to simulate that by using a HashMap> for the same purpose.Is that correct or do I have to use JDBC or SQLite?
31419029,1,0,44,java.util.HashMap,Why is creating a HashMap faster than creating an Object[]?
31419029,1,0,44,java.util.HashMap,I've got no clue why creating a HashMap is 10 times faster than creating a Object[].
31419047,2,0,21,java.util.HashMap,An empty HashMap object is much smaller than an array of 2000 Object references.
31419047,2,0,21,java.util.HashMap,"Even though you pass 2000 to the initialCapacity parameter of the HashMap constructor, it's not actually creating 2000 spaces for objects yet."
31419077,2,1,49,java.util.HashMap,"If you look at the implementation of HashMap, the constructor looks like:  code."
31420278,2,0,0,java.util.HashMap,"I like the MultiMap/HashMap approach, but here is another that I came up with for this use case."
31419596,2,1,0,java.util.HashMap,You can use a HashMap to keep track of how many times each Month appears in your dates list.
31422443,1,0,0,java.util.HashMap,Best Practices for Using Multi Level HashMap in Java.
31422593,2,0,0,java.util.HashMap,Other option is to use composite keys in a HashMap.
31422616,2,0,1,java.util.HashMap,"I think doing HashMap within HashMap is bad practice, because in order to extend your HashMap to go deeper, will cost you both time and money."
31422616,2,0,1,java.util.HashMap,"This way, you can easily extend more levels to your HashMap by simply dumping more Objects into the InternalKvp."
31425588,1,0,0,java.util.HashMap,Unable to pass HashMap to RESTful API.
31425588,1,0,0,java.util.HashMap,I want to pass HashMap to Restful API web service.
31439182,2,0,3,java.util.HashMap,"A Perl hash is most like a Java HashMap, but you're using a TreeMap which is slower."
31432370,1,0,0,java.util.HashMap,"I am trying to get a HashMap<String,String> from a CSV String value using Java 8 Streams API."
31432370,1,0,0,java.util.HashMap,"I am able to get the values etc, but how do I add the index of the List as the key in my HashMap."
31474622,2,0,0,java.util.HashMap,"Instead of using pure Ruby hash objects (o=Hash.new or o={}), please use instead java.util.HashMap like in this snippet: code."
31433385,1,0,1,java.util.HashMap,I was going through source code of HashMap .
31433642,2,0,4,java.util.HashMap,"However, it looks like a HashMap's capacity is always a power of 2 (even specifying the capacity in the constructor results in a call to Collections.roundUpToPowerOfTwo(capacity)), so notating it in the form 1 << x ensures this restriction trivially, even if you were to change x. the other forms would be easier to mess up when changing if you weren't aware of the restriction"
31433646,2,0,4,java.util.HashMap,This is what I have in sources for HashMap: code.
31438016,1,0,2,java.util.HashMap,"If I need to use InfoName as the key of a HashMap, do I need to define my own hashCode() and equals() method?"
31438837,2,1,1,java.util.HashMap,You can also go with a Map specifically LinkedHashMap if you want to maintain the insertion order or else HashMap
31460061,2,0,1,java.util.HashMap,"Here I change the enum so that it returns a display String, but a HashMap works as well."
31460061,2,0,1,java.util.HashMap,I do use the HashMap to store the desired colors: code.
31446255,2,1,1,java.util.HashMap,"A HashMap<Integer,Integer will do what you need."
31448876,1,0,0,java.util.HashMap,How to convert HashMap.getKey() to Int.
31448876,1,0,0,java.util.HashMap,I have a HashMap which stores Attendance information.
31449673,1,0,1,java.util.HashMap,Putting element into HashMap with Map interface.
31450891,2,1,5,java.util.HashMap,"In the first example map gets the type of HashMap, in the second example you cast it to the Interface Map."
31517420,2,0,0,java.util.HashMap,"Doing just ""private HashMap<> x;"" resulted in ""x"" being reinstantiated every time a new connection was opened."
31517420,2,0,0,java.util.HashMap,"""private static final HashMap<> x;"" looks like it stopped it from doing this."
31460235,1,0,0,java.util.HashMap,"I tried it before with HashMap<Integer, Marker> as <id, marker> but I had problem to add a new marker of the new request to the map so I tried it with ArrayList<Integer, String> and it works but I am getting now the error below when I try to remove a marker from the map."
31460379,1,0,1,java.util.HashMap,JSON HashMap deserialization.
31460379,1,0,1,java.util.HashMap,"After the serialization, I use ObjectMapper to get deserialize JSON in to a PersonaContainer Object, but when I try to obtain ""Test"" from HashMap ""m"" and cast it to Person Object i get this error: code."
31460486,2,1,2,java.util.HashMap,"Note that Spring will deserialize the corresponding JSON (m) into a LinkedHashMap, not a HashMap."
31460486,2,1,2,java.util.HashMap,"If you want a HashMap, declare the field with the type HashMap."
31461552,1,0,0,java.util.HashMap,"javaFX select mutlipe rows form tableview, put in HashMap."
31471218,2,0,1,java.util.HashMap,"Walk the JSON tree, and fill a HashMap<String,File>, with each leaf of the tree: code."
31471218,2,0,1,java.util.HashMap,"Then you can apply solution 1 except you replace HashMap<String,File> by HashMap<Integer,File>."
31465876,1,0,5,java.util.HashMap,"I have a HashMap<Integer, Float> with entries: code."
31467246,1,0,3,java.util.HashMap,"For now my solution is a HashMap with a view key and integer value that keeps track of the checkboxes' and their positions, but if anyone has a less ugly solution or any idea as to why I couldn't change the color of the checkboxes, it would be very much appreciated."
31467745,1,0,0,java.util.HashMap,"All the timers that were started will be stored in a HashMap using the groupAddress as the key for the object, timer."
31467745,1,0,0,java.util.HashMap,"When user taps pause, timer will be fetch from the HashMap and then terminate it, but the last position counted will be remembered."
31467745,1,0,0,java.util.HashMap,"But when the user taps pause, one timer will be fetch from the HashMap and then terminate it."
31470532,2,0,5,java.util.HashMap,"On the server side, Arrays are stored as simple Lists: ArrayList<Content>, while Objects are either stored as maps: HashMap<String, Content> or, mostly, as Java Objects."
31509502,2,0,1,java.util.HashMap,Maybe the framework will you use can deserialze it as a HashMap instead.
31470737,2,0,1,java.util.HashMap,"Failure to do so will result in a violation of the general contract for Object.hashCode(), which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
31470581,2,0,2,java.util.HashMap,"In order for a HashSet (or HashMap, for that matter) to properly locate your object, you need to override the hashCode() method so that two object which are equal have the same hashCode."
31566412,2,0,2,java.util.HashMap,"In the x10 program, add import declarations (eg import java.util.HashMap) Make sure the .class files for the Java classes you want to use are in the sourcepath when you invoke the x10c compiler."
31472454,2,0,1,java.util.HashMap,"Thus if you upgrade to Java 8, you may see that HashMap order is changed."
31472228,2,1,2,java.util.HashMap,"The reason for this behaviour is that a HashSet is backed by a HashMap, which in turn is backed by an array of Entry-objects."
31472601,2,1,1,java.util.HashMap,"Map<String, Item> map = new HashMap <String, Item>(); map.put(ID, new Item()); String idToSearch = ID_SEARCHED; Item searchedItem = map.get(ID_SEARCHED); if(searchedItem  != null) searchedItem .setId(NEW_ID); else System.out.println(""Item not found);"" If id is not unique, then you need to use only List and need to iterate over whole list in order to first get the object, then second set the new value."
31473613,1,0,4,java.util.HashMap,Java Enum or HashMap for static values.
31473613,1,0,4,java.util.HashMap,HashMap code.
31473613,1,0,4,java.util.HashMap,The HashMap reduces the scope of the columns and will mean that they can only be used inside CSVExportFile.
31474204,2,0,1,java.util.HashMap,"The main thing that you gain when using a Map (you should also program to the Map interface, not HashMap) is the ability to store this configuration easily outside your application."
31474204,2,0,1,java.util.HashMap,"In summary: Positives Of Map:  Easy to change configuration Configuration can be stored outside of the system Easier to extend Can write a general code / framework for this task  Negatives of Map:  Slightly easier to make a mistake  Positives of Enum:  Easier not to make msitakes, static checking  Negatives of Enum:  You fix your configuration at complie time Harder to extend  For the Map solution, I actually recommend SortedMap interface rather than HashMap with TreeMap being the actual implementation."
31475009,2,1,3,java.util.HashMap,"You might want to try using a HashMap<Integer, Integer> instead if you want the code to scale and stay performant."
31476447,2,0,0,java.util.HashMap,"I don't understand why you would like to use a HashMap effectively as an array, but if you really want to do that, make sure you initialize it with approximately the right initialCapacity and loadFactor."
31475248,2,1,1,java.util.HashMap,You're always putting map2 into map where you should create a new HashMap for the first time and then reuse the Hashmap second and subsequent times.
31479265,2,0,0,java.util.HashMap,"Loop through the new array, create a HashMap where key,value =  words, arraylist of word position (say with length X)."
31480605,2,0,0,java.util.HashMap,I think you can use HashMap in Java to do this thing.
31481168,1,0,2,java.util.HashMap,"I have a LinkedList HashMap List<HashMap<String, String>>that I have created, I'm trying to send it to a custom adapter that I found but it is for a Map."
31491830,1,0,0,java.util.HashMap,Add data into HashMap with loop.
31492725,2,0,1,java.util.HashMap,"What the book probably means is this:  among the possible keys of a HashMap<X, Y>, there can be a null key; whatever the key (even null!"
31492762,2,0,1,java.util.HashMap,"""HashMap allows one null key and multiple null values in a   collection."""
31492762,2,0,1,java.util.HashMap,"Actually, this is true for any key in HashMap."
31492762,2,0,1,java.util.HashMap,The bottom line is - HashMap allows only one key e.g.
31493318,1,0,2,java.util.HashMap,HashMap putting duplicate values unnecessarily.
31493318,1,0,2,java.util.HashMap,"The HashMap is set with keys prior to this code, which works fine."
31493349,2,0,6,java.util.HashMap,There cannot be duplicate keys in a HashMap.
31494672,2,0,0,java.util.HashMap,"In the case of HashMap, it replaces the old value with the new one."
31495699,2,0,0,java.util.HashMap,"You don't typically need the source code for, say, java.util.HashMap in order to use one in your own code."
31497525,2,1,1,java.util.HashMap,(join all values with some character for example) With this however you can easily parallelize it by using parallelStream() instead of stream() If you wanted the values in some sort of order so its not so random (as it will be with HashMap) you can do a sort before map: code.
31497514,1,0,1,java.util.HashMap,The way the mechanism works: I store every instance of a class on a HashMap.
31497514,1,0,1,java.util.HashMap,"The trouble I'm having is the HashMap is forcing me to store the type of the abstract class (VCorePanel), but I want to store sub-classes of the abstract class (?"
31497514,1,0,1,java.util.HashMap,"The reason @durron597's solution didn't work was my HashMap is static, so changing it to accept type T as a value was a no-go."
31497569,2,0,2,java.util.HashMap,Why are you generating a new HashMap every time the store_object method is called?
31497857,1,0,1,java.util.HashMap,"I wanted to know how to save and load a HashMap(String, List(Object)) to a file.The Object class is shown below: code."
31498370,2,0,1,java.util.HashMap,You could use an HashMap instead of a list.
31504016,1,0,0,java.util.HashMap,"My HashMap is generic type <String,Integer> However, whenever I call the get method on msgContent, it comes out that instead of the hashcode of ""1"", it was a hashcode which until that moment was set to 0, and which then changed after the get method call."
31508838,1,0,3,java.util.HashMap,"would  then return a new HashMap with Integer keys and String values for its entries, am I right?"
31510691,1,0,1,java.util.HashMap,What is an efficient way to obtain a subset of elements in a HashMap?
31510691,1,0,1,java.util.HashMap,I need to return a subset of HashMap from a function.
31510691,1,0,1,java.util.HashMap,"So what is a better approach or the most efficient one: a. Iterate over the HashMap keys and whichever falls under my conditions, add them to a locally created HashMap and return it or b. Clone the HashMap and use retainAll method."
31511598,1,0,1,java.util.HashMap,How to write HashMap to CSV?
31511598,1,0,1,java.util.HashMap,I know about opencsv but I don't really know how to use it with HashMap.
31520657,2,0,0,java.util.HashMap,"I'd use a Map<String,Enum> = new HashMap<>(); for maximum efficiently."
31514298,2,0,3,java.util.HashMap,"It is worth noting that an enum's valueOf(String) method is implemented using the Enum.valueOf(Class,String) method, which in turn is implemented using a HashMap."
31517379,2,0,0,java.util.HashMap,<-- each time this code is run creating new HashMap?
31519162,1,0,0,java.util.HashMap,"Also this class CollectionResource which extends Resource that haves complex fields like for example Cursor, HashMap, DBHelper... etc: code."
31519162,1,0,0,java.util.HashMap,"Why complex objects like DBHelper, HashMap, Cursor are getting clonned without deep cloning?"
31520245,2,0,0,java.util.HashMap,Building a HashMap(..) from your word list before processing the corpus would even things out.
31521080,1,0,0,java.util.HashMap,I would like to query this table and put the results into a HashMap!
31522239,2,0,1,java.util.HashMap,You could implement your own doubly linked list and store its nodes in a HashMap as well.
31522608,1,0,0,java.util.HashMap,HashMap> from list of objects containing same property.
31522608,1,0,0,java.util.HashMap,"My Inital thought was to create a HashMap<Integer,List<Object>> but i am unsure about indefinite values of groupIds coming in , which in turn makes me unsure about  how to group objects with same groupIds together with groupId as the hashmap's key."
31522967,2,0,1,java.util.HashMap,Where the key in the HashMap is Integer represents your groupId (ie.
31522967,2,0,1,java.util.HashMap,"- 1, 2, 3 etc) and value (ie - name1, name2 etc) of the HashMap stored at the List of String."
31522866,1,0,2,java.util.HashMap,I need to convert the above map to json object What I tried:- used jsonObject instead of HashMap and JsonArray instead of list code.
31522866,1,0,2,java.util.HashMap,"Also Is there a better way where i can convert the hashmap of custom object i.e Map<String, List<Employee>> to json object without using jsonObject instead of HashMap and JsonArray instead of list?"
31525640,2,0,0,java.util.HashMap,"If you're able to use a 3rd party library, json-simple provides a way: https://code.google.com/p/json-simple/ Instead of creating JSON objects backed by a HashMap, you create a JSON object backed by a LinkedHashMap (From https://code.google.com/p/json-simple/wiki/DecodingExamples#Example_4_-_Container_factory): code."
31526018,2,0,7,java.util.HashMap,"You could store the args in a HashMap<String, String> argMap, mapping the argument names to their values."
31527404,1,0,0,java.util.HashMap,"I'm creating a plugin and I'm struggling to figure out how to pick a winner based on their percentage, using a HashMap."
31529603,2,0,3,java.util.HashMap,"You can access it using the (unofficial) sun.misc.Hashing.stringHash32 method unlike the original hash code, hash32 for two strings containing the same characters but running in different JVMs (on the same machine or on different machines) isn’t guaranteed to be the same (in fact most likely it won’t be, since a “HASHING_SEED” value is included in the calculation which is initialized on JVM startup using the current time) the purpose of alternative hash code is to give better performance for HashMap and related classes with String keys and to thwart hash-collision denial of service attacks Its usage isn’t enabled by default."
31529603,2,0,3,java.util.HashMap,"If you set this to a value X, then HashMap and related classes with a capacity at least X will use the alternative hashing algorithm."
31529603,2,0,3,java.util.HashMap,all versions between Java 7u6 and Java 7u39) had a performance issue which meant that HashMap creation while alternative hashing was enabled was slower than needed to be.
31529603,2,0,3,java.util.HashMap,This was added in Java 7u6 but has been removed in Java 8. here's the internal implementation of Java 7's murmur hash function  on grep code Here's the link to Java 7's HashMap implementation that uses the new hash code calculation if the key in the map is a String http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/java/util/HashMap.java#HashMap.hash%28java.lang.Object%29
31529739,1,0,2,java.util.HashMap,Ps: I think problem at EntryMap with HashMap This is full code: code.
31534261,1,0,4,java.util.HashMap,HashMap contains 4 elements but only 3 are shown in debug.
31534261,1,0,4,java.util.HashMap,I have defined an HashMap with the following code: code.
31534261,1,0,4,java.util.HashMap,I put 4 items into the HashMap.
31534339,2,1,13,java.util.HashMap,"Since your HashMap is composed by only 16 buckets, the hash of the element must be reduced to a number that spans between 0 and 15 (e.g."
31536150,2,0,1,java.util.HashMap,In there we override hashCode and hard code return 1 that all objects of TT will return same hashCode 1. and we can dig into HashMap.java: code.
31536150,2,0,1,java.util.HashMap,"we can found when we put key/value pair into HashMap, it will calculate hash number by object's hashcode to locate the element's location in hash table."
31536730,1,0,0,java.util.HashMap,"So Meal has to have a IngredientListAndAmount(also a table in the database), which would be perfect to put in a HashMap(Ingredient - as a key, Integer(amount) as a value)."
31536730,1,0,0,java.util.HashMap,shortly: Meal and its IngredientListAndAmount HashMap.
31538903,1,0,0,java.util.HashMap,Sum of each row value in HashMap> in java.
31538903,1,0,0,java.util.HashMap,"I have a hashmap in format of this: HashMap<String, List<RrdData>> myData code."
31540978,2,0,1,java.util.HashMap,They don't overflow ... assuming that you are referring to java.util.HashMap or java.util.Hashtable.
31542757,2,0,1,java.util.HashMap,"Looking at the non-concurrent implementations (HashMap, HashTable, IdentityHashMap, LinkedHashMap, TreeMap and WeakHashMap), the all state that  if multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally."
31551343,2,1,1,java.util.HashMap,"Also, consider using a HashMap instead of an ArrayList to store the dictionary and trim the words when you store them to avoid doing it in each pass."
31551187,1,0,1,java.util.HashMap,"I figured that I could create a HashMap which you could fetch the appropriate render data for a Polygon, but this would slow down rendering."
31551187,1,0,1,java.util.HashMap,"This is because I'd first need to iterate through each Polygon I need to render, and then fetch the corresponding value in the HashMap."
31597718,2,0,0,java.util.HashMap,Root Cause: I've used row as the key for the HashMap.
31557029,2,0,0,java.util.HashMap,But there is no logic for updating the count if the name is present already in the HashMap.
31557029,2,0,0,java.util.HashMap,"If the name is already present, it just increases the nameCount by 1 and puts it in the HashMap."
31556324,1,0,1,java.util.HashMap,HashMap ClassCastException String to MyClass.
31556324,1,0,1,java.util.HashMap,I want to iterate over a HashMap.
31556324,1,0,1,java.util.HashMap,I pass the HashMap several times and the SettingsClass casts the stored object to the HashMap without problems.
31562546,2,0,0,java.util.HashMap,Seems like a lot of work and for practical purposes the HashMap or HashSet are probably better.
31564611,2,0,1,java.util.HashMap,"For data structure you can use for example a HashMap<String,LibrarySong>."
31567313,2,0,2,java.util.HashMap,"This comes in handy to make the efficient Map implementation HashMap, because you can use the hashCode to only check objects in the right hashCode-determined bucket."
31567313,2,0,2,java.util.HashMap,"If you used a different or modified hashCode algorithm, you'd be breaking spec in theory, and in practice your annotation implementation wouldn't match others consistently in HashSet or HashMap (rendering it worthless to Guice)."
31566845,1,0,0,java.util.HashMap,"Just to keep it simple, lets say I've a Loader that loads data from a HashMap<String> (which is already populated) and I've intialized/configured LoaderManager and CursorLoader appropriately."
31566845,1,0,0,java.util.HashMap,"Now I'd like to display the content of HashMap using a Toast upon clicking on the button, (which is bound to onClickRetrieveData(){} in Activity) Any hint on how to do that?"
31567753,2,0,0,java.util.HashMap,"iii) You will have a class ConstructBuilding (Main class) which would hold a HashMap<Floor,List<Apartment>> (To give O(1) operation as it uses hashing."
31567753,2,0,0,java.util.HashMap,"v) User needs to create an apartment , create an Apartment Object and look it up in the HashMap to get the list of Apartments and add this newly create apartment to the list."
31567825,2,0,1,java.util.HashMap,You can remove the object using the HashMap.remove(key) method.
31569291,1,0,0,java.util.HashMap,"HashMap<Thing, SomeOtherPOJO>) which, when serializing to json, uses the toString() representation of Thing for the key, and when deserializing, uses the String constructor."
31569732,1,0,2,java.util.HashMap,How to instantiate a HashMap?
31569732,1,0,2,java.util.HashMap,"The problem is how can I pass a Class object that allows the instantiation of a HashMap<K, V>, e.g."
31569732,1,0,2,java.util.HashMap,"HashMap<String, Integer>, if there is one?"
31570095,2,1,2,java.util.HashMap,"Assuming that you need the Class object to instantiate a HashMap at runtime, the type information isn't available to create a HashMap<String, Integer> -- only a HashMap."
31570095,2,1,2,java.util.HashMap,"Casting to Class<?> from a class literal is allowed without a warning, but you'll get a compilation warning about casting that to a Class<HashMap<String, Integer>>."
31576614,2,1,0,java.util.HashMap,"You can use a HashMap<String, Integer> to add the numbering to the last name, like this: code."
31579040,1,0,1,java.util.HashMap,Updating HashMap in java.
31579040,1,0,1,java.util.HashMap,Do I need to remove value and then add or can I directly add it in HashMap and it will efficiently updated ?
31579040,1,0,1,java.util.HashMap,"Considering a large HashMap containing other HashMaps, which would be better option and is there any even more efficient way to do so ?"
31579650,2,0,0,java.util.HashMap,java.util.HashMap provides put method to add key and object pair in the map.
31579650,2,0,0,java.util.HashMap,You do not have to remove the object if you want to update the HashMap object.
31580723,2,0,7,java.util.HashMap,One common way to write FilterFactory is using a HashMap inside it.
31589911,2,0,1,java.util.HashMap,How about a HashMap in Equipment Class?
31589854,1,0,1,java.util.HashMap,I have a list of HashMap and I want to sort it in ascending order in Java.
31589929,1,0,0,java.util.HashMap,I have the following method that returns a HashMap based on a Users Department and Building.
31590160,2,1,1,java.util.HashMap,"You are loosing the order because you are using a HashMap, which does not guaratee the order of iteration."
31590168,2,0,1,java.util.HashMap,"The order by definately works, what doesn't is the HashMap."
31591340,2,0,0,java.util.HashMap,If you want lower it's time complexity from polynomial to linear you can use this implementation utilizing HashMap: code.
31591972,2,1,1,java.util.HashMap,"will not compile because getValue() returns List<HashMap> so your loop would iterate over HashMaps, not List of HashMaps so it should be  code."
31591972,2,1,1,java.util.HashMap,"This will allow you later easily changing actual type, for instance from HashMap to LinkedHashMap."
31596577,1,0,5,java.util.HashMap,(Using HashMap as reference).
31596577,1,0,5,java.util.HashMap,Problem:   I need to compare 2 hash table implementations (well basically HashMap with another one) and make a reasonable conclusion.
31597747,2,0,1,java.util.HashMap,"Also, Java's built-in HashMap implementation will ""rehash"" if the number of entries gets larger than a certain amount - I imagine this is an expensive operation that is worth avoiding."
31597545,2,1,4,java.util.HashMap,"For an example that uses a HashMap<String, String> to help swap text (but this is certainly not necessary)."
31599286,1,0,0,java.util.HashMap,Passing custom HashMap between activities in Android.
31599286,1,0,0,java.util.HashMap,I have a HashMap which takes in a String ID(ID of a chatroom) as a key and stores all the chats from that specific room in an arraylist as follow: code.
31599286,1,0,0,java.util.HashMap,I also need this HashMap to be passed back to RoomActivity when the back button is pressed in ChatActivity.
31605096,1,0,0,java.util.HashMap,"and would serializing the object/s affect the performance rather than writing states to a plain text file, if I use the HashMap?"
31605292,2,0,0,java.util.HashMap,Serialize the object and store in the File is much better than your HashMap approach as it can be wasteful.
31605420,2,0,2,java.util.HashMap,To store the state in an HashMap is not a good option because: 1.
31605420,2,0,2,java.util.HashMap,If you are storing 1000 of object in HashMap which will increare the memory and there are chances to get Out of Memory issue.
31605420,2,0,2,java.util.HashMap,HashMap will consume lot of memory for each entry object in it.
31607691,2,1,0,java.util.HashMap,"Instead of using a HashMap, you'll need to use a LinkedHashMap to preserve the insertion order of the elements."
31612615,1,0,1,java.util.HashMap,"Programming is a hobby… I had the idea that the way to do it was to use a HashMap, and store a Word Object within it."
31612615,1,0,1,java.util.HashMap,"I could easily do this with a String, but within each unique Word it needs to have another HashMap that will store more yet more Word Objects for the Words that follow it, and so on until we have made a model with a sufficient level of complexity."
31613129,2,0,0,java.util.HashMap,"To use an Object as a key in a HashMap, you need to override two methods: equals() and hashCode()."
31613129,2,0,0,java.util.HashMap,"Furthermore, while HashMap does not use the compareTo function, the way you've implemented it seems off."
31618555,1,0,1,java.util.HashMap,HashMap data to listView using custom adapter.
31618555,1,0,1,java.util.HashMap,I came to realize all data is being stored in caridList which is a HashMap.
31620675,1,0,0,java.util.HashMap,"I have a HashMap<String, String>, where the value strings can be either a long or double."
31623519,1,0,0,java.util.HashMap,Im new to java and I'm working on a question where I need to output the elements from a HashMap in the order of the input.
31623519,1,0,0,java.util.HashMap,I understood that HashMap cannot do it and LinkedHashMap was specifically designed to maintain this order.
31628605,1,0,0,java.util.HashMap,"How to convert a HashMap to a JavaPairRDD, in Spark?"
31628605,1,0,0,java.util.HashMap,I am trying to create a JavaPairRdd from HashMap.
31628605,1,0,0,java.util.HashMap,"I have a HashMap of type <String,<Integer,Integer>> How can I convert it into a JavaPairRdd?"
31630142,2,1,1,java.util.HashMap,"If you convert the HashMap into a List<scala.Tuple2<Integer, String>>, then you can use JavaSparkContext.parallelizePairs."
31628638,1,0,0,java.util.HashMap,Understaing Logic of HashMap in Java.
31628668,2,0,1,java.util.HashMap,The for loop iterates over all the entries in the HashMap.
31629419,1,0,0,java.util.HashMap,"how to I pass HashMap<String, String>.class in Gson builder for supperss ""unchecked warning""?"
31633839,1,0,1,java.util.HashMap,"However, if i will change signature of hashmap to HashMap, it will compile, but give me a warning ""unchecked assignment""."
31637268,2,0,1,java.util.HashMap,"For example, for a HashMap you can override equals and hashCode of your Vertex class so that two vertices will be considered equal if their v properties are equal."
31637575,1,0,0,java.util.HashMap,HashMap to Array: throws java.lang.ArrayStoreException.
31655013,2,0,0,java.util.HashMap,"Here is an approach from the answer here Use a HashMap<Integer, Integer> For multiple occurrences, increment the corresponding value of the integer key; public int[] static getFrequencies(int[][] Actions){ code."
31658059,2,0,6,java.util.HashMap,"Since Java 8 the HashMap implementation (which is used by HashSet) is changed to protect against collisions: if the same bucket has too many elements and keys are Comparable, then this bucket is converted to the R-B tree (similar to TreeMap) to make search in that bucket logarithmic instead of linear."
31658071,2,0,3,java.util.HashMap,Under certain circumstances newer versions of HashMap (from Java 8 onwards) try to use a tree as the bin for objects with the same hash code instead of a linked list.
31659863,2,0,3,java.util.HashMap,"Use HashMap - it's obviously the abstraction you need, thus it's the best choice."
31659863,2,0,3,java.util.HashMap,"Iteration on HashMap is in order of O(1) for each element, O(n) for total iteration over the entire mapping (note that n is the capacity of the HashMap, not it's size!)."
31659863,2,0,3,java.util.HashMap,"You can also use LinkedHashMap (as suggested by Peter Lawrey), but note:  Performance is likely to be just slightly below that of HashMap, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a LinkedHashMap requires time proportional to the size of the map, regardless of its capacity."
31659863,2,0,3,java.util.HashMap,"Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity."
31659863,2,0,3,java.util.HashMap,"Still, if you need that every little bit of speed, the data is rather static (i.e. collection is created [elements added] only once, and used [iterated, checked for containing] many times), and you don't mind using about 2x the memory - you may use both, adding to both, and using array/ArrayList for iteration and HashMap for lookup."
31662437,1,0,0,java.util.HashMap,"I then made a HashMap<String,FormulaEvaluator> and did  code."
31663571,1,0,0,java.util.HashMap,JAX-RS converting HashMap to XML or JSON.
31663571,1,0,0,java.util.HashMap,I have a DB interface which returns me HashMap.
31663897,2,1,3,java.util.HashMap,"I've also added a HashMap<Shape, Color> to allow easy association of a Shape with a Color."
31665173,2,0,1,java.util.HashMap,"You can imagine how if the object is a non-trivial object, like HashMap, the problem is even worse; there are a lot more operations, and so more possibilities for weird ordering."
31664546,2,0,1,java.util.HashMap,"At this point, Thread B can go ahead and attempt to use the HashMap, despite the fact that Thread A's work on creating it has not yet been written to main memory."
31664318,2,0,0,java.util.HashMap,"Having a HashMap under concurrent read and write is VERY dangerous, don't do it."
31664318,2,0,0,java.util.HashMap,Google HashMap infinite loop.
31671438,2,0,6,java.util.HashMap,"It does not add new possibilities as you may do the same with if-else for a small number of classes or a HashMap<Class,SomeHandlerType> for bigger numbers."
31664378,1,0,0,java.util.HashMap,"I am building a GUI for my project and I need to show information that is coming from various types of data structures: ArrayList,HashMap,TreeSet in a table."
31668067,2,0,0,java.util.HashMap,One common way to write FilterFactory is using a HashMap inside it.
31669060,1,0,3,java.util.HashMap,I tried to create a HashMap with the following details:- code.
31669262,2,0,0,java.util.HashMap,The javadoc explanation:  An instance of HashMap has two parameters that affect its performance:   initial capacity and load factor.
31669262,2,0,0,java.util.HashMap,"Higher values decrease the   space overhead but increase the lookup cost (reflected in most of the   operations of the HashMap class, including get and put)."
31669336,2,0,1,java.util.HashMap,"Lets check it with examples -  i) In first case, load factor is 0.75f and initialCapacity is 16 which means array resize will occur when number of buckets in HashMap reaches 16*0.75 = 12."
31669144,2,0,3,java.util.HashMap,"This means the HashMap will use an array of 16 elements to store the entries (i.e. there are 16 buckets), and this array will be resized only when the number of entries in the Map reaches 32 (16 * 2)."
31669241,2,1,5,java.util.HashMap,"So, if you initialize a HashMap without specifying an initial size and a load factor it will get initialized with a size of 16 and a load factor of 0.75."
31669241,2,1,5,java.util.HashMap,"This means, once the HashMap is at least (initial size * load factor) big, so 12 elements big, it will be rehashed, which means, it will grow to about twice the size and all elements will be added anew."
31673723,1,0,1,java.util.HashMap,"When the method returns SUCCESS,there's a HashMap associated which is used to return the data as JSON."
31673723,1,0,1,java.util.HashMap,I am putting the name of column as key and the value of that column as value for that key in the HashMap.
31673723,1,0,1,java.util.HashMap,Below is the code snippet where in the HashMap is getting populated.
31674497,1,0,1,java.util.HashMap,HashMap bucket is unused when we have Link list of Entry object which same HashCode and Difference Equals.
31674497,1,0,1,java.util.HashMap,"Now, I have put 100 Person object in a HashMap i.e. code."
31674497,1,0,1,java.util.HashMap,"HashMap put method will create the Entry object everytime, since the hashCode is same for all the Person object and equals return false, Entry will maintain the Linked List of similar HashCode, but with that we have a increase in HashMap size with the bucket size."
31674497,1,0,1,java.util.HashMap,Now I am wondering why we are increasing the HashMap size and bucket when Entry itself is maintaining the Linked List?
31674497,1,0,1,java.util.HashMap,Seeking for example and explaination which justify why HashMap need to do so.
31674683,2,0,0,java.util.HashMap,HashMap simply not designed for this use case.
31674554,2,0,1,java.util.HashMap,"We are increasing the HashMap capacity to maintain a low average number of Entries per bucket, which allows us to put and get entries to/from the HashMap in expected constant time (i.e O(1))."
31674554,2,0,1,java.util.HashMap,"Your example is a bad usage of HashMap, since you force all the entries into the same bucket, but in normal use cases, most buckets will have 0 or 1 entries, and few buckets will have more than 1 (assuming a low load factor is used)."
31674554,2,0,1,java.util.HashMap,"The number of buckets in the HashMap is increased when the total number of Entries in the HashMap reaches capacity * loadFactor, where capacity is the current number of buckets."
31674613,2,0,0,java.util.HashMap,Remember that the HashMap does NOT know your implementation of the hashcode function and Load Factor works on the effective size of the Map.
31675234,1,0,0,java.util.HashMap,"And I want to transfer the entity object to HashMap<String, Object>, I do that with Introspector and currently just ignore the child-entities ,only parse the non-entity member to the map: code."
31680338,2,1,5,java.util.HashMap,The hashCode doesn't change when the HashMap's capacity grows.
31680338,2,1,5,java.util.HashMap,"However, when you have to map a hashCode whose value is (for example) 503 into a HashMap of (for example) 64 buckets, you use the modulus operator (i.e. hashCode() % 64), which will map you to bucket #55."
31680338,2,1,5,java.util.HashMap,"When the capacity of the HashMap is doubled to 128 buckets, applying the modulus operator on the same hashCode (this time hashCode() % 128) will map that same hashCode to a different bucket (bucket #119)."
31721777,2,1,2,java.util.HashMap,"In HashMap, keys insertion order is not preserved, therefore LinkedHashMap should be used if insertion order of keys matter."
31684712,2,0,0,java.util.HashMap,"Really it should be Map<Long, String> map = new HashMap<>(); The 2 fields in the <> represent the key and value type of the map."
31684588,2,0,0,java.util.HashMap,"The specification HashMap<Long, String>() is simply for the parameter types."
31686667,2,0,0,java.util.HashMap,"I also took the liberty to fix a couple of typos in your code: a map takes two generic arguments, it's always better to define a reference as the most abstract type possible (use Map and Set instead of HashMap/HashSet when declaring your reference types)."
31692684,1,0,1,java.util.HashMap,Initially I started to solve this problem by using a HashMap data structure: code.
31743264,2,1,1,java.util.HashMap,"Please Find the below solution : You can maintain a HashMap with ""key"" as String and ""value"" as PriorityQueue."
31697897,1,0,1,java.util.HashMap,I am working on project where i need to find the minimum 3 three values from a HashMap.
31697897,1,0,1,java.util.HashMap,"UPDATE:Sorry for my mistake, I was looking to find minimum values from a HashMap"
31699066,2,0,0,java.util.HashMap,Store one of the list in a HashMap and then iterate through the other list and check if the Map already contains that KEY.
31698572,1,0,5,java.util.HashMap,As I understand LinkedHashMap extends HashMap and LinkedHashMap.Entry extends HashMap.Entry as well.
31698572,1,0,5,java.util.HashMap,and 2) inherited  table which is HashMap.Entry[] array.
31698572,1,0,5,java.util.HashMap,First three lines of the method actually converts HashMap.Entry  to LinkedHashMap.Entry and also maintains the references of after and before of the Entry in a way such that before of header is pointing to last element in order and last element's after is pointing to header forming circle.
31700750,2,1,0,java.util.HashMap,It is actually a very simple extension of HashMap with the solely purpose of preserving the order of which the elements were added†.
31700750,2,1,0,java.util.HashMap,"First three lines of the method actually converts HashMap.Entry to LinkedHashMap.Entry and also maintains the references of after and before of the Entry  This is correct, LinkedHashMap.Entry extends HashMap.Entry but adds the linked bit by storing pointers to before and after entries."
31700750,2,1,0,java.util.HashMap,"HashMap  LinkedHashMap  Even though the LinkedHashMap diagram looks a lot more complex, it is simply adding the before and after pointers represented by the Blue/Red arrows."
31699839,2,0,0,java.util.HashMap,"final Map<String, String> params = new HashMap<String, String>(); With code."
31702844,1,0,1,java.util.HashMap,HashMap and issue with Serializable.
31702844,1,0,1,java.util.HashMap,"when i try to call function which return :  List<Map.Entry<Integer, List<Object>>> I get this error :  java.io.NotSerializableException: java.util.HashMap$Node  Note : All class implements Serializable"
31703420,1,0,1,java.util.HashMap,Trying to sort a HashMap> by list item.
31703420,1,0,1,java.util.HashMap,"I have a HashMap<String, List<String>> and I cannot figure out how to sort it by the 3rd list item."
31703420,1,0,1,java.util.HashMap,The HashMap That I'm using: code.
31718900,2,0,0,java.util.HashMap,Then when I call HashMap items later I just use the keys from the list in order.
31704898,1,0,1,java.util.HashMap,Is creating a HashMap alongside an ArrayList just for constant-time contains() a valid strategy?
31704898,1,0,1,java.util.HashMap,"Is creating a HashMap alongside this ArrayList, to achieve constant-time lookup, a valid strategy here, in order to reduce the complexity to O(n)?"
31707040,2,0,3,java.util.HashMap,"The easiest solution I can think of is to turn the array you get into a HashMap<Integer, Person> and pass that into jackson."
31709484,1,0,0,java.util.HashMap,I want to view content of List<HashMap> in DataTable.
31709484,1,0,0,java.util.HashMap,ClassService : here is method which return HashMap.
31710729,2,0,2,java.util.HashMap,use a HashMap:  code.
31711244,2,0,2,java.util.HashMap,"I prefer to create HashMap containing index of prime value and prime value, try this small application: code."
31711160,1,0,0,java.util.HashMap,HashMap has duplicates and result in image duplicates in gridview.
31715695,2,0,2,java.util.HashMap,"If you want to keep the order, you should not use org.json library as it stores the data in HashMap, so any order you want to preserve will be ignored."
31726867,2,1,1,java.util.HashMap,They were put into a HashMap for fast retrieval.
31726867,2,1,1,java.util.HashMap,"3)  When a request came in, if there was already an instance of IpRequestRate in the HashMap, then I would add the new request to that instance and get the new rate."
31726867,2,1,1,java.util.HashMap,You can use EhCache as your HashMap so it could do this for you automatically.
31726867,2,1,1,java.util.HashMap,I would instead load the table into a HashMap.
31726867,2,1,1,java.util.HashMap,"1)  At start of application, say in the init() method, I would load the table into a HashMap that maps IP to maxTransmissionRate."
31726867,2,1,1,java.util.HashMap,"2)  When request comes in, try to get the maxTransmissionRate from the HashMap."
31726867,2,1,1,java.util.HashMap,"3)  During the init(), kickoff a ScheduleExecutorService to update the HashMap at some desired interval, to keep the HashMap fresh."
31726867,2,1,1,java.util.HashMap,http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ScheduledExecutorService.html 4)  Which HashMap implementation should we use?
31726867,2,1,1,java.util.HashMap,If we use a regular HashMap then we will have problems when it gets updated by the ScheduledExecutorService.
31726867,2,1,1,java.util.HashMap,"We can use a synchronized HashMap, but this locks the HashMap and hurts performance during concurrent requests."
31718515,2,0,0,java.util.HashMap,"A HashMap<String, Integer> would be a convenient vehicle for your counters."
31723010,2,0,0,java.util.HashMap,Using AbstractSet and HashMap: code.
31723010,2,0,0,java.util.HashMap,A HashMap could also be used without wrapping it in a Set.
31722393,1,0,5,java.util.HashMap,"The long version: I have several dictionaries of various sizes stored as HashMap< String, String >."
31763535,2,0,0,java.util.HashMap,"Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity."
31725239,2,0,0,java.util.HashMap,"That being said, you can use a poor man's version: Create an array of your maps and a SortedMap, iterate over the array, take the keys of the current HashMap and store them in the SortedMap with the index of their HashMap."
31725239,2,0,0,java.util.HashMap,"To retrieve a key, you first search in the SortedMap for said key, get the respective HashMap from the array using the index position and lookup the key in only one HashMap."
31724480,1,0,2,java.util.HashMap,Does HashMap.clear() or ArrayList.clear() releases memory to shrink the size or the size remains the same?
31725676,1,0,2,java.util.HashMap,"* This should certainly include the String, HashMap, primitive datatypes, etc."
31726672,2,0,3,java.util.HashMap,"From a performance standpoint, there's no way of achieving this without going through all the maps, with O(n) complexity (note that containsKey has a O(1) complexity in a HashMap)."
31730559,1,0,0,java.util.HashMap,We found that it uses java.util.ArrayList or java.util.HashMap to store conversations data on session.
31737369,2,0,3,java.util.HashMap,"Assuming your class is implemented in the standard .h(pp) / .cpp divide, you'd want: .h(pp): static Map<String, AComplexClass> STATIC_MAP; .cpp: Map<String, AComplexClass> MyClass::STATIC_MAP = new HashMap<String, AComplexClass> (); That will create the memory you want to use for the static object."
31740117,1,0,0,java.util.HashMap,"However, I am thinking that it may be possible using Jasper Collections and a HashMap?"
31740117,1,0,0,java.util.HashMap,But I am not sure how to increment a counter in the variable expression against a key in the HashMap for each record as it is processed?
31740493,1,0,0,java.util.HashMap,Not able to set Object (HashMap) at application level.
31740609,2,0,1,java.util.HashMap,"You need Singleton Pattern for your HashMap and for the concurrency problem you need use ConcurrentHashMap to make sure thread safe,  You can use TestBean.getHashMap() to get, put or remove when you need: code."
31740954,2,1,0,java.util.HashMap,"Again, it's just as HashMap interface: code."
31742335,1,0,3,java.util.HashMap,Question Three Using a concurrent HashMap and BlockingQueue does this mean these operations are thread safe?
31747409,1,0,2,java.util.HashMap,I'm mainly confused on how to build the list up for the HashMap.put() call.
31762241,2,1,1,java.util.HashMap,"Instead of using a different for loop, you can do it in the same for loop using a HashMap code."
31763511,1,0,0,java.util.HashMap,Why is the system automatically converting my LinkedHashMap to HashMap while passing it in an Intent as a Serializable?
31763511,1,0,0,java.util.HashMap,which prints HashMap.
31763511,1,0,0,java.util.HashMap,Why is the system converting my LinkedHashMap to HashMap.
31763849,2,0,1,java.util.HashMap,"If ordering isn't important, recreate the LinkedHashMap using the returned HashMap: code."
31764457,1,0,0,java.util.HashMap,Create a RequestBody from a HashMap of paramaters directly?
31764457,1,0,0,java.util.HashMap,"I also looked at okhttp's wiki where it clearly shows how to make a POST request with paramaters, albeit it is constructed using the class FormEncodingBuilder which does not allow the use of HashMap's in it's creation as it is created as a chain of paramaters, like so (taken from okhhtp's wiki): code."
31764457,1,0,0,java.util.HashMap,"But it does not answer how I add a HashMap full of paramaters directly, not one by one."
31764457,1,0,0,java.util.HashMap,The solutions I have so far are simply looping through each EntrySet in the HashMap and adding it to the RequestBody like so (taken from here): code.
31764457,1,0,0,java.util.HashMap,"Though this does solve my problem, I was wondering if there is a way to directly make a RequestBody via a HashMap in okhttp or do I have to use another framework?"
31766284,1,0,0,java.util.HashMap,Java - How to put in a multi dimensional HashMap.
31766284,1,0,0,java.util.HashMap,I have this three dimensional HashMap.
31766373,2,1,1,java.util.HashMap,Note that you should work with the interface 'Map' instead of the implementation 'HashMap' where possible.
31767386,2,0,0,java.util.HashMap,"To associate each Marker with the appropriate Stall, you could use a HashMap which you declare outside your while loop: code."
31767159,1,0,0,java.util.HashMap,Retrieve all relevant values from a nested HashMap with the same outermap key.
31776659,2,1,2,java.util.HashMap,"The String-based Jedis client transcodes the strings using a temporary HashMap, so it kills your order."
31770997,2,0,1,java.util.HashMap,"Just keep latitude,longitude and proximity in a collection such as HashMap or ArrayList or in some other thing as Collection of Objects Just iterate this using for loop while doing iteration just perform basic string concatenation that's enough."
31771852,1,0,0,java.util.HashMap,HashMap with key as generic interface.
31771852,1,0,0,java.util.HashMap,"I then have a HashMap<dest,double> destHash."
31771857,2,1,4,java.util.HashMap,"This says ""A HashMap where K is an unknown type that has the upper bound dest""."
31771857,2,1,4,java.util.HashMap,"Comment: However, if you do this you may not be able to actually use the HashMap as you won't be able to put keys and values into it."
31772657,1,0,0,java.util.HashMap,I have a nested HashMap: code.
31777270,2,0,0,java.util.HashMap,"Compound keys and a HashMap<List<String>,Texture>: code."
31777457,1,0,1,java.util.HashMap,"The basic functionality that I have to acchieve:  Load a webpage (some.url.com/path/to/schedule) containing the login form Fill in a username and password, and submit the form Get the webpage presented to me, and retrieve data from it Put the information in a HashMap, and use it in a table of my own  The code I used to achieve the wanted result in Java: code."
31783520,2,0,3,java.util.HashMap,"If you use the HashMap implementation of Map, you'll be able to locate a Person by its identifier key in expected constant time."
31783794,2,0,0,java.util.HashMap,then store it in a HashMap: code.
31784750,2,1,2,java.util.HashMap,Well HashMap.values() directly returns a Collection.
31784750,2,1,2,java.util.HashMap,So caching in form of HashMap is the thing to do in your case.
31785450,1,0,1,java.util.HashMap,"Now my HTML document has 2 input boxes 1 for a name and 1 for a value if I fill both example (name: DAGO, value:2.2) and then I click on my GET button it saves this data into an HashMap that works so far."
31790957,2,0,1,java.util.HashMap,"However, the important thing is to use a HashMap instead of a TreeMap."
31790957,2,0,1,java.util.HashMap,"If you need the sorted collection for something else, you could put the data in both a TreeMap and a HashMap."
31790741,1,0,0,java.util.HashMap,"NullPointerException: Can't obtain HashMap/HashTable, Not able to fetch the prior bean instance."
31790741,1,0,0,java.util.HashMap,"I am having trouble fetching the errors from the HashMap, because I BELIEVE lose a reference to the class that contains that HashMap."
31790741,1,0,0,java.util.HashMap,"The HashMap works fine, and maps properly as I did some debugging."
31798781,2,0,0,java.util.HashMap,Create your own HashMap obj inside the method and you can get the record you want from the list.
31798781,2,0,0,java.util.HashMap,"HashMap<int itemId, List<item>> yourOwnItem = new HashMap<>();  At the end of the for loop  pass the item to yourOwItem as follows: yourOwnItem.put(i , List<item>);"
31799295,1,0,1,java.util.HashMap,how does HashMap.keySet() work.
31799295,1,0,1,java.util.HashMap,i've seen the answer of How do HashMap.values() and HashMap.keySet() return values and keys?
31799295,1,0,1,java.util.HashMap,"and  Java: private inner class synthesized constructors i think this question is not duplicate... i still don't know how keySet() of HashMap works the point confused me is: it's null before call the method keySet(),but once invoked,the value ""keySet"" will be associated with the map."
31799295,1,0,1,java.util.HashMap,"so i'm strange about how it works.... the inner class KeySet can access the Outter class ""HashMap"" variables,but in class AbstractMap,there is only a Set keySet = null;,the keys and values are stored in the Entry[] table; together, i still cant find a method like code."
31799822,2,0,0,java.util.HashMap,"Look at the source code for HashMap: it creates and stores a hash for each added (key, value) pair, then the containsKey() method calculates a hash for the given key, and uses a very fast operation to check if it is already in the map."
31799986,2,0,1,java.util.HashMap,HashMap relies on a very efficient algorithm called 'hashing' which has been in use for many years and is reliable and effective.
31799986,2,0,1,java.util.HashMap,As long as hashCode is well defined for your class you should expect HashMap to be very efficient which is exactly what you've found.
31799986,2,0,1,java.util.HashMap,"There's a very good discussion on the various types of Map and which to use at Difference between HashMap, LinkedHashMap and TreeMap  My shorthand rule-of-thumb is to always use HashMap unless you can't define an appropriate hashCode for your keys or the items need to be ordered (either natural or insertion)."
31800920,2,1,10,java.util.HashMap,"If you have 48 gigabytes of dedicated memory for your 2 million to 15 million records, your best bet is probably to use a HashMap<Key, Record>, where your key is an Integer or a String depending on your requirements."
31800920,2,1,10,java.util.HashMap,I recommend using the following constructor: new HashMap<>(13_000_000); (30% more than your expected number of records - which will be automatically expanded by HashMap's implementation to 2^24 cells).
31800920,2,1,10,java.util.HashMap,"HashMap uses an O(1) access time for it's members, whereas TreeMap uses O(log n) lookup time, but can be more efficient with memory and doesn't need a clever hashing function."
31800920,2,1,10,java.util.HashMap,"Also, another advantage of TreeMap / TreeSet is the sorted ordering, which you stated you don't care about; use HashMap."
31800920,2,1,10,java.util.HashMap,"If the only purpose of the list is to check for unique account numbers, then everything I've said above is still true, but as you stated in your question, you should use a HashSet<String>, not a HashMap."
31803236,2,0,3,java.util.HashMap,"You can create a new HashMap, then iterate through the list and put all elements from the map from the list to the main map."
31803272,2,0,6,java.util.HashMap,Take a look at Map and List rather than typing your collections to implementations (ArrayList and HashMap).
31803995,2,0,0,java.util.HashMap,You can browse the source code of java.util.HashMap to understand how this works.
31803995,2,0,0,java.util.HashMap,The keySet() function actually returns a member variable of the HashMap instance as the following JDK source code got: code.
31803995,2,0,0,java.util.HashMap,Then the keySet is a member variable of an HashMap where its a locally defined class: code.
31803995,2,0,0,java.util.HashMap,"So as you can see, it simply defines another ""view"" to the same data held in the HashMap."
31803895,2,0,1,java.util.HashMap,keySet() returns an internal Set implementation backed by the HashMap.
31803895,2,0,1,java.util.HashMap,"So, for example, calling contains(key) on that Set calls containsKey(key) on the backing HashMap."
31803895,2,0,1,java.util.HashMap,"It doesn't create an independent Set holding the keys of the original HashMap (as you suggested in your code snippet), since such a Set wouldn't be backed by the original HashMap, so changes in the HashMap won't be reflected in the Set and vice versa."
31807084,2,1,2,java.util.HashMap,Your solution may work incorrectly as you modify the HashMap (which is not thread-safe) from this forEach operation.
31825578,2,1,0,java.util.HashMap,"Behind the Scenes, when a ThreadLocal Object is created, it actually creates a HashMap internally, something like below  : code."
31825578,2,1,0,java.util.HashMap,"so when a particular Thread add a value to Thread Local object it will insert the current thread's ThreadId as ""key"" and the Value as ""value"" in the HashMap."
31807197,1,0,3,java.util.HashMap,"In that case I would use a HashMap<Class,Object> as base."
31807269,2,1,4,java.util.HashMap,"If the Collection is large and performance is an issue, you should probably store your objects in some data structure that allows faster retrieval (perhaps HashMap)."
31809081,2,1,0,java.util.HashMap,"blockIdCountMap is the HashMap object is returned by a getter method means you have to give it to property attribute not to id, because id means you are referring the variable."
31808937,2,0,1,java.util.HashMap,To get lists of items for all item numbers: You can use a HashMap for this case: code.
31809591,1,0,0,java.util.HashMap,Displaying key-values in HashMap.
31809615,2,0,3,java.util.HashMap,The second time you put a key-value pair in the map will override the first when you are using the same key for Maps (which include HashMap).
31809615,2,0,3,java.util.HashMap,"If you want a one-to-many mapping, you can use a Multimap or a HashMap that maps an object to a collection of objects (although Multimap will most likely make this easier for you) To display a value for a given key, use: code."
31809685,2,0,2,java.util.HashMap,Hashtable and HashMap are one-to-one key value store.
31813510,1,0,0,java.util.HashMap,show multiple listview stored in HashMap in FXML Listview.
31813510,1,0,0,java.util.HashMap,I have two list view one stored in FXML and other stored in HashMap what I wanna to do is show one listview out of HashMap in that FXMl listview I get the data store in FXMl one but not shown in UI(using Platform.runLater()) code.
31813839,2,0,0,java.util.HashMap,"Make use of HashMap<K,V> class, This document will provide you with the required API."
31813839,2,0,0,java.util.HashMap,"Update:  I suggested this because you asked for HashMap, if duplication is the only issue you have then you can make use of .contains(Object o) method on the List you already have in-place."
31821619,1,0,0,java.util.HashMap,SDN4: ClassCastException: java.util.HashMap cannot be cast to [EntityNode].
31823980,2,0,2,java.util.HashMap,And HashMap implementation kept that in mind.
31824089,2,0,1,java.util.HashMap,You are using a HashMap.
31824089,2,0,1,java.util.HashMap,"Internally, HashMap's have a number of buckets, each of which has a list of the items you are storing."
31824089,2,0,1,java.util.HashMap,"Whenever you call HashMap.get(), the HashMap will call DemoHashSet.hashCode() and use the key argument, possibly with the modulus (%) operator, to figure out which bucket to look in."
31823849,2,0,0,java.util.HashMap,"To understand the purpose of this method, you need to know how HashTable or HashMap works internally."
31825205,2,0,0,java.util.HashMap,"If your numbers can't have duplicates, using a HashMap instead of classes can be a bit faster."
31828069,1,0,0,java.util.HashMap,How to make sure the key's order can not be changed when traversing a HashMap in Java?
31828069,1,0,0,java.util.HashMap,"For example,I input 3 Strings:Hagzou Hugzou Jigxng as the keys of a HashMap, but when I traversing the HashMap by key,the order has been changed:Hugzou Hagzou Jigxng."
31828100,2,0,1,java.util.HashMap,This implementation differs from HashMap   in that it maintains a doubly-linked list running through all of its   entries.
31828100,2,0,1,java.util.HashMap,"In other words - while LinkedHashMap has a way to access entries by their hash code, like the regular HashMap it also maintains a doubly-linked list and maintain the order of the items insertion."
31828491,1,0,1,java.util.HashMap,Aren't HashMap keys and values unique?
31828491,1,0,1,java.util.HashMap,I have got a HashMap in my code which contains unique values.
31828491,1,0,1,java.util.HashMap,Here is the method which adds data to the HashMap:  code.
31832337,1,0,1,java.util.HashMap,java.lang.ClassCastException: java.util.HashMap$EntrySet cannot be cast to java.util.Map$Entry.
31834045,2,0,1,java.util.HashMap,UPDATE: An alternative can be HashSet or HashMap string -> something if you want occurrences of strings for example.
31838144,2,1,3,java.util.HashMap,"To answer the title of your question, there is no method for this because the SparseArray is not an array, it is in fact an optimization of a HashMap, binding arbitrary integers to arbitrary values."
31838144,2,1,3,java.util.HashMap,The optimization lies in the fact that it uses no boxing/unboxing where a HashMap would.
31839859,1,0,0,java.util.HashMap,EDIT: I didn't construct the HashMap.
31839911,2,0,5,java.util.HashMap,"You are attempting to use x, the private HashMap, before it has been constructed."
31842080,1,0,0,java.util.HashMap,Is it best to use a custom XMLAdapter with a HashMap to convert multiple xml rows of <customer>?
31842276,1,0,0,java.util.HashMap,I am currently trying to make a JFrame which should contain one String followed by a text entry field for each entry in a HashMap (longToShortNamesMap).
31843743,2,1,0,java.util.HashMap,"The from clause should contains the name of your columns, in this case the key in HashMap."
31845777,2,1,1,java.util.HashMap,"Constructing queries is really just creating BSON document representation, which is basically just the same interface as standard HashMap or List interfaces as appropriate: code."
31845094,2,1,2,java.util.HashMap,"So in this case, if you want the authenticateUser method of your mocked AuthHelper instance return true regardless of the value of the HashMap parameter, your code would look something like this: code."
31850380,2,0,0,java.util.HashMap,"JDK HashSet is built on top of a HashMap<T, Object>, where value is a singleton ‘present’ object."
31850380,2,0,0,java.util.HashMap,"It means that the memory consumption of a HashSet is identical to HashMap: in order to store SIZE values, you need 32 * SIZE + 4 * CAPACITY bytes (plus size of your values)."
31850380,2,0,0,java.util.HashMap,Attributes of an ArrayList Default capacity -    10 Empty size      -    88 bytes Overhead  -    48 bytes plus 4 bytes per entry Overhead for 10K collection   - ~40K Search/insert/delete performance- O(n) — Time taken is linearly dependent to the number of elements A HashSet has fewer capabilities than a HashMap in that it cannot contain more than one null entry and cannot have duplicate entries.
31850380,2,0,0,java.util.HashMap,"The implementation is a wrapper around a HashMap, with the HashSet object managing what is allowed to be put into the HashMap object."
31850380,2,0,0,java.util.HashMap,The additional function of restricting the capabilities of a HashMap means that HashSets have a slightly higher memory overhead.
31850380,2,0,0,java.util.HashMap,This is an extra 16 bytes over the memory usage of a HashMap.
31850380,2,0,0,java.util.HashMap,"Table below shows the attributes of a HashSet: Attributes of a HashSet Default capacity  -16 entries Empty size    -144 bytes Overhead  -16 bytes plus HashMap overhead Overhead for a 10K collection -16 bytes plus HashMap overhead Search/insert/delete performance  - O(1) —  Time taken is constant time, regardless of the number of elements  (assuming no hash collisions)"
31853423,1,0,1,java.util.HashMap,I'm trying to initialize a HashMap in the foolowing way: code.
31853771,2,0,0,java.util.HashMap,You can use below code to initialize a HashMap using BigDecimal.
31854616,2,0,1,java.util.HashMap,Note: HashMap will not maintain order of keys.
31855621,1,0,0,java.util.HashMap,Populating a HashMap with entries from a properties file for @Value.
31858732,2,0,0,java.util.HashMap,Since the first and the third student are both called 'Rob' and equals only compares by Name and both have the same hashcode they are the same keys from the point of view of the HashMap.
31858839,2,0,1,java.util.HashMap,"HashMap use this equality in its operations, so code."
31859112,1,0,0,java.util.HashMap,"I use a HashMap which holds a BasicDataSource per Database, a method to initialise the BasicDataSource for each DB, and another to get a connection from the corresponding DB datasource."
31860486,1,0,0,java.util.HashMap,"It seems that HashMap doesn't use the equals method (I may be wrong, if so my tests are wrong)."
31860545,2,0,0,java.util.HashMap,Here: Understanding the workings of equals and hashCode in a HashMap Edit after seeing the code : Hashcode is returning wrong value because you are using end field to calculate the hash... different end lead to different hash.
31860647,2,0,6,java.util.HashMap,"It seems that HashMap doesn't use the equals method (I may be wrong, if so my tests are wrong)."
31864903,2,1,1,java.util.HashMap,"If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable."
31884098,2,0,0,java.util.HashMap,"I suggest to use any implementation Map<2DPoint,Ship>, given the coordinates you can easily locate the ship, you could a HashMap (Somehow overkill.. but it would works), or you could implement your own matrix like Ship[][]."
31865831,1,0,0,java.util.HashMap,"I am trying to pass an input string into an ArrayList of HashMap, and have written a method for it."
31867009,2,0,0,java.util.HashMap,You add your HashMap to an ArrayList and then clear the HashMap.
31867009,2,0,0,java.util.HashMap,"Either construct a new HashMap for each line in the input or create a copy of the HashMap you have by using the following constructor: HashMap<String,String> copy = new HashMap(newTags);."
31868599,2,0,2,java.util.HashMap,Use HashMap.
31868599,2,0,2,java.util.HashMap,HashMap is more performant and Hashtable has been basically deprecated since Java 2.
31868600,2,1,3,java.util.HashMap,"Several things: 1) Please don't use Hashtable, instead use HashMap."
31868600,2,1,3,java.util.HashMap,"3) Please read the official Java tutorial it explains how to use the map interface and basically it should be more or less like this: Map<Integer, int[]> entry = new HashMap<>(); Or if you are using Java older than 7 Map<Integer, int[]> entry = new HashMap<Integer, int[]>(); since the diamond operator was introduced in Java7."
31870896,2,0,0,java.util.HashMap,"Again, a HashMap can only store a single value per key, so you will need another data structure to hold what it seems like you might need."
31875537,1,0,2,java.util.HashMap,Here headers is HashMap which has cookies added.
31876891,2,1,6,java.util.HashMap,"The replace will be done by put(): From the documentation of HashMap  public V put(K key,       V value)  Associates the specified value with the specified key in this map."
31876898,2,0,2,java.util.HashMap,By the way AbstractMap (the superclass of HashMap) implements #replace() this way: code.
31878432,1,0,0,java.util.HashMap,HashMap android isn't getting called in android.
31878432,1,0,0,java.util.HashMap,I'm using HashMap to put values in my database.
31878432,1,0,0,java.util.HashMap,Do you have any idea why the HashMap doesn't work this way?
31882420,2,0,0,java.util.HashMap,"PS: In case you aren't aware, the reason I used = new HashMap instead of = new Map is because Map is an interface not a class."
31882420,2,0,0,java.util.HashMap,A HashMap is a class that implements the Map interface.
31890849,2,0,0,java.util.HashMap,You should use HashMap insted Of ArrayList Like Use code.
31893337,2,0,2,java.util.HashMap,"You can, on the other hand, use a Map (HashMap for example), containing an [index,Object] (or [Object,index], depending on the exact use case) pairs in it."
31893337,2,0,2,java.util.HashMap,"It'd give you the same order of complexity for most operations as LinkedHashSet, but you'd get O(1) for getting index essentially for free (Java's HashSet uses HashMap internally anyway, so you're not losing any memory by replacing HashSet with HashMap)."
31893337,2,0,2,java.util.HashMap,"Even better way would be to use a class explicitly handling integer maps - see HashMap and int as key for more information; tl;dr - http://trove.starlight-systems.com/ has TIntObjectHashMap & TObjectIntHashMap , giving you possibly the best speed for such operations possible."
31893323,1,0,0,java.util.HashMap,I also tried to make a value-HashMap and bind the filled Form from that: code.
31896969,1,0,0,java.util.HashMap,Transfer HashMap Data From Mobile to Android Wear.
31896969,1,0,0,java.util.HashMap,"I looked at the Android developer guide, and it seems that I have to use a DataMap, but I am still lost as to how to store the HashMap data in a DataMap and properly retrieve the info on the wear device."
31897636,2,0,1,java.util.HashMap,"You should think about DataMap as a trimmed down Bundle in which the primitive types (and a bit more than that) are supported; a HashMap can contain any type of objects and that is not something that DatMap supports, hence there is no api to map one to the other."
31897636,2,0,1,java.util.HashMap,"Outside of that, there is nothing magical; build a DataMap based on what I described and then sync that across devices and get a DataMap on the other ends and reverse the process to populate a HashMap from the DataMap."
31897649,2,1,1,java.util.HashMap,"It depends on what types do you have in your HashMap, but assuming you have HashMap<String, String> you just need to go through all values and add copy them to DataMap."
31897649,2,1,1,java.util.HashMap,and later to create HashMap from DataMap code.
31898019,2,0,0,java.util.HashMap,"the reason that you are getting ArrayIndexOutOfBound exception is that first you are inserting 1 in index 1. but then directly trying to insert 12. but at that time the size of the list is only 1.  my suggestion, use HashMap.. where you store ids as key and username as value i.e. code."
31897725,1,0,2,java.util.HashMap,"In Java8, having a HashMap<Integer, City> capitals I want to get a stream of capital pairs Stream<Map.Entry<Integer, City>, Map.Entry<Integer, City>> capitalPairs filtered by the Integer."
31903049,2,0,0,java.util.HashMap,"Querying the HashMap should be O(1), so it's likely to be the merging and sorting which are slowing things down."
31904475,2,0,0,java.util.HashMap,"there is just a conceptual difference between them, Map is a interface or you can also consider it as parent class for all type of maps**(HashMap,TreeMap)** etc."
31904475,2,0,0,java.util.HashMap,and we can consider HashMap as concrete class which can be initiated.
31904475,2,0,0,java.util.HashMap,"If you declare it as HashMap, you have to change your contract if you want to change the underlying implementation."
31904505,2,0,1,java.util.HashMap,"HashMap is one such implementation of Map, whereas ArrayList is an implementation of List interface."
31904505,2,0,1,java.util.HashMap,"To find out what are the different implementations of Map and List, you can look at All Known Implementation Classes of Map and All Known Implementation Classes of List respectively in the Java Docs  When you decide to use a Map, you must pick a concrete implementation of Map interface that you will use to create Map objects - HashMap is commonly used implementation of Map interface (unless one has special needs in which case they can pick more apt implementation)."
31904505,2,0,1,java.util.HashMap,"The reason for doing so is that if the person who developed the code for function later feels that the Map returned by function should have its keys ordered (as seen in real world Dictionary), then she may decide to use TreeMap (an implementation of Map in which keys are ordered) instead of HashMap."
31904505,2,0,1,java.util.HashMap,"However, when function is defined like public HashMap function(), then, it will have to change to public TreeMap function(), and will force all users of function to change their code."
31905326,2,0,0,java.util.HashMap,"If you know that the key is unique among items in this array, you can try and build a HashMap out of it if you need, but the structure you have is definitely an array."
31911937,2,0,0,java.util.HashMap,"a HashMap, where String key would be the identifier."
31912119,1,0,3,java.util.HashMap,Pass data between two activities in android using HashMap.
31912119,1,0,3,java.util.HashMap,I'm trying to pass data between two activities in my android application and I want to use HashMap (I don't want to use Intent).
31913949,2,0,1,java.util.HashMap,"Consider if you want to add new value in one of the HashMap, will you expect it in another map?"
31914589,2,1,1,java.util.HashMap,I think you can develop Your own class by extending a HashMap
31914789,1,0,0,java.util.HashMap,"If found data ""Group Faktur Pajak"" are not the same then, I add Data List <Row> into a HashMap <String, List<Row>> which take from the data ""Group Faktur Pajak""."
31914789,1,0,0,java.util.HashMap,"I'm expecting to have HashMap<String, List<Row>> in each Row of the   Excel's data group by ""Group Faktur Pajak"" column."
31916041,1,0,0,java.util.HashMap,"I am currently developing an application that, internally, has an HashMap that stores created Tasks associated to a string, declared like this: code."
31918539,2,0,0,java.util.HashMap,"That all works as expected, when you keep two things in mind:  use invokeAll only with a Collection that has a guaranteed order (ArrayList for example and no HashMap) when you iterate over the FutureList you have to check your Future for cancellation (!Future.isCancelled()), otherwise a CancellationException is thrown"
31921115,1,0,0,java.util.HashMap,I am using the enum for some other purposes as well so I would like to keep it (otherwise I would just use HashMap for this purpose).
31921231,2,0,2,java.util.HashMap,"Other option would be to add a private static Map<String, Integer> sizes = new HashMap<>(); inside Types and put mappings inside the constructor."
31921125,1,0,0,java.util.HashMap,"The only feasible way I can think of doing this right now, is sending the session ID of the user requesting the action as part of the websocket message and then storing that using ID corresponding to the action requested in something like a HashMap."
31923149,1,0,0,java.util.HashMap,Need help to understand behaviour of HashMap.
31923149,1,0,0,java.util.HashMap,I am using Person class as as key of a HashMap.
31923149,1,0,0,java.util.HashMap,"Notice, though we have added two different person object as key to the HashMap, later we have changed the id of person1 object to 2 to make both the person object equal."
31923149,1,0,0,java.util.HashMap,"I can see there are two key-value pairs in the HashMap with data: ""person1/Person 1"" and ""person2/Person 2"", still I will always get ""Person 2"" as output and I can never access value ""Person 1""."
31923149,1,0,0,java.util.HashMap,"Also notice, we have duplicate key in HashMap."
31923908,2,1,1,java.util.HashMap,It all depends on how hashCode() value is used by HashMap.
31923908,2,1,1,java.util.HashMap,"Everytime you put an object in HashMap, it stores the object in a bucket identified by key's hashCode()."
31923908,2,1,1,java.util.HashMap,"Now, when you try to retrieve a value, the HashMap will identify the bucket in which given key falls, and then will iterate through all keys in that bucket to pick the entry for given key - in this stage it will use equals() method to identify the entry."
31923908,2,1,1,java.util.HashMap,"However, when you changed the hashCode() value of person1 by updating its id, the HashMap is unaware of this change."
31923908,2,1,1,java.util.HashMap,"Later, when you look up an entry using person1 as key, the HashMap thinks that it should be present in bucket 2 (as person1.hashCode() is 2 now), and after that when it iterates bucket 2 using equals method, it finds an entry of person2 and thinks that it is the object that you are interested in as equals in your case too is based on id attribute."
31923908,2,1,1,java.util.HashMap,Above explanation is evident when one looks at implementation of HashMap#get method as shown below: code.
31946753,2,1,3,java.util.HashMap,There are some options but the easiest one to use is HashMap.
31946753,2,1,3,java.util.HashMap,In order to use HashMap you need to create something that represents your state and you can use as a key.
31938180,1,0,4,java.util.HashMap,HashMap with byte array key and String value - containsKey() function doesn't work.
31938180,1,0,4,java.util.HashMap,I'm using a HashMap: byte[] key and String value.
31938180,1,0,4,java.util.HashMap,"into HashMap, the table still inserts a new object with different HashMapEntry."
31938207,2,1,5,java.util.HashMap,"A byte[] (or any array) can't work properly as a key in a HashMap, since arrays don't override equals, so two arrays will be considered equal only if they refer to the same object."
31938207,2,1,5,java.util.HashMap,"You'll have to wrap your byte[] in some custom class that overrides hashCode and equals, and use that custom class as the key to your HashMap."
31939907,2,1,1,java.util.HashMap,"That's so simple, just edit your HashMap to code."
31941501,1,0,0,java.util.HashMap,I have json type columns in the table in DB.When I am retrieving using select query which gives me object of list containing the json data.Now when I am storing it into hashmap it's giving me exception --java.lang.ClassCastException: org.postgresql.util.PGobject cannot be cast to HashMap  Here is the code code.
31943368,2,0,0,java.util.HashMap,It is simply not possible to cast a JSON value to a HashMap because there is no way to derive the actual types of the values.
31941793,1,0,2,java.util.HashMap,"Problem I wanted to find the most performant map implementation and as suggested here, I compared these implementations:  Map of Maps (Nested Maps) based on java.util.HashMap specifically for 3 keys : code."
31941793,1,0,2,java.util.HashMap,Wrapper Key (Tuples as keys) in a java.util.HashMap code.
31941793,1,0,2,java.util.HashMap,Koloboke hash map will be faster than jdk HashMap.
31941793,1,0,2,java.util.HashMap,"And as concluded also here (in this (Obj-Obj) case), java.util.HashMap is ""extremly"" fast."
31994785,2,1,3,java.util.HashMap,"So, we have some VM change, something in between, that made HashMap substantially faster, and Koloboke maps - slightly slower."
31944539,1,0,0,java.util.HashMap,"I'm documenting some code, and I have a private HashMap."
31946844,1,0,0,java.util.HashMap,"I have the following class GroupStudentsBySurname and it contains the following data structure HashMap<String, ArrayList<Student>>."
31957038,1,0,0,java.util.HashMap,Why Concurrent HashMap is Serializable.
31957038,1,0,0,java.util.HashMap,Also HashMap is serializable.
31959159,2,0,0,java.util.HashMap,"As other already said, HashMap is Serializable, but the Map or Collection interface doesn't force the implementation of every collection to be ""serializable""."
31957148,2,0,2,java.util.HashMap,"The HashMap is serializable, the class implements Serializable interface code."
31962279,2,0,0,java.util.HashMap,HashSets are implemented using a HashMap.
31962279,2,0,0,java.util.HashMap,"Let us follow this to the put implementation in HashMap, according to GrepCode: code."
31963377,2,0,2,java.util.HashMap,The examples you need are directly in Java source code:  SOURCES List ArrayList HashMap and so on....
31967899,1,0,0,java.util.HashMap,Spring MVC HashMap Form Integration.
31969924,2,0,0,java.util.HashMap,Override the hashcode and equals method of different classes which extends ISwarmEntity in order to use them as a key in a HashMap.
31969924,2,0,0,java.util.HashMap,"But it's a really bad idea, always use immutable objects as a key for HashMap."
31969924,2,0,0,java.util.HashMap,"Immutabiility is required, in order to prevent changes on fields used to calculate hashCode() because if key object return different hashCode during insertion and retrieval than it won't be possible to get object from HashMap."
31979639,2,0,0,java.util.HashMap,HashMap=new HashMap;
31980570,1,0,0,java.util.HashMap,How can infinite loop occur in HashMap when two threads resize the HashMap simultaneously?
31980570,1,0,0,java.util.HashMap,I know infinite loop occurs in HashMap race condition but I want to know in details how infinite loop occurs in HashMap race condition .
31987312,2,0,0,java.util.HashMap,"There is no defined ordering in a HashMap, and consequently there is no concept of ""first""."
31988526,2,1,3,java.util.HashMap,You may replace Hashtable with HashMap.
31988187,1,0,2,java.util.HashMap,"I have tried parsing this into HashMap and HashMap but this is returning malformed JSON exception, and that is making sense, because of too many double quotes objects are ending abruptly."
31988187,1,0,2,java.util.HashMap,code update-  package org.syncoms.backofficesuite.controller; import java.util.HashMap; import com.google.gson.Gson; public class Test { code. }
31988482,1,0,2,java.util.HashMap,", in my graphic interface i will have cold=[frozen,hard].If I want to erase hard I want cold = [frozen] to stay My hashMap is private HashMap<String,ArrayList<String>> hashMap ; Here is what I tried but it's not good enough because if I have at 2 different key the value i want to remove, it only removes the value for the first and if I have for ex cold=[frozen,hard] and I erase hard it doesn;t keep cold=[frozen]; code."
31989954,2,0,0,java.util.HashMap,"NOTES:  I would recommend to return a boolean to check if employee has been updated, deleted, etc...  public boolean deleteEmployee(int id,Map<Employee,Hobby> m1) I would keep the employees in another way, HashMap does not allow duplicates, so you cannot save more than one Hobby in each employee if you don't declare it like HashMap<Employee, List<Hobby>>."
31990103,1,0,4,java.util.HashMap,"solution 2 - Most effective in terms of memory, reduced use of arrays and variables  I created my method using HashMap - is that more Suitable for solution 2?"
32000583,2,0,3,java.util.HashMap,"If your Strings are mostly ASCII, a branch in the count loop to choose between an array for the low 128 char values, or a HashMap for the rest, should be worth it."
32000583,2,0,3,java.util.HashMap,"If there's a lot of alternating between ascii and non-ascii, the branch might hurt a bit, compared to using HashMap for everything."
32000583,2,0,3,java.util.HashMap,"I didn't flesh out the code, since I don't do a lot of Java, so IDK if there's a container than can do the insert-1-or-increment operation more efficiently than a HashMap get and put pair."
31993501,2,1,3,java.util.HashMap,"And yes a HashMap probably is the most ""sensible"" solution."
31991207,1,0,2,java.util.HashMap,Concurrent HashMap Null key and concurrency level.
31991711,2,0,1,java.util.HashMap,HashMap takes its internal keys from Object.hash() which cannot be computed for null values.
31991803,1,0,0,java.util.HashMap,Remove items from HashMap by key in java.
31991803,1,0,0,java.util.HashMap,I have one HashMap like this code.
31991971,2,0,3,java.util.HashMap,You can't put multiple values for a single key in HashMap.
31992021,2,0,0,java.util.HashMap,A HashMap in Java just holds one value per key.
31992021,2,0,0,java.util.HashMap,"So if you ask the HashMap to remove the integer behind the key ""Another Incomse"", there only is one value which is removed."
31992021,2,0,0,java.util.HashMap,The following is not possible with a HashMap!!
31993361,2,1,2,java.util.HashMap,"For example, consider the following variable declaration: Map<String, List<String>> myMap = new HashMap<String, List<String>>(); In Java SE 7, you can substitute the parameterized type of the constructor with an empty set of type parameters (<>): Map<String, List<String>> myMap = new HashMap<>(); Note that to take advantage of automatic type inference during generic class instantiation, you must specify the diamond."
31993361,2,1,2,java.util.HashMap,"In the following example, the compiler generates an unchecked conversion warning because the HashMap()constructor refers to the HashMap raw type, not the Map<String, List<String>> type: Map<String, List<String>> myMap = new HashMap(); // unchecked conversion warning"
31998275,1,0,1,java.util.HashMap,"Currently, i read in the XML in my Java code, parse it and store in a HashMap and then the HashMap is used as a lookup."
31998275,1,0,1,java.util.HashMap,"I was wondering as a one time activity, if i serialized the HashMap and then stored the output."
31998275,1,0,1,java.util.HashMap,And then in the java program just deserialize the HashMap and avoid parsing the XML files 1000 times.
31998981,1,0,0,java.util.HashMap,Check if a position is clicked using HashMap.
32000189,2,0,0,java.util.HashMap,"However, I understand you have to use HashMap."
32000189,2,0,0,java.util.HashMap,Create a HashMap that maps the square that are near at least one of your objects to the list of nearby objects.
32003278,2,0,0,java.util.HashMap,You can also refer source code of HashMap.
32005738,2,0,2,java.util.HashMap,You have to import both the Map interface and the HashMap class: code.
32008833,2,0,2,java.util.HashMap,HashMap).
32009101,2,0,0,java.util.HashMap,use set or HashMap and put the elements in the collections.
32010307,2,1,1,java.util.HashMap,You can't cast a HashMap to a Set of entries.
32013602,1,0,0,java.util.HashMap,"I tried searching web, cant get much information of multiple dimension arrays in HashMap Appreciate if someone can guide me on this."
32016726,1,0,0,java.util.HashMap,How to set value of HashMap in Model class.
32016951,2,0,0,java.util.HashMap,"If the output is required to be printed in order, then printing on each iteration of the loop would be better than putting into the HashMap, as HashMaps are not ordered."
32017390,1,0,0,java.util.HashMap,"FacePamphlet ---- the ""profile"" is not stored into the DataBase which is a HashMap."
32017390,1,0,0,java.util.HashMap,"No ideas of why the profile is not stored into the HashMap, could anyone find the problem from these two main related codes?"
32017390,1,0,0,java.util.HashMap,"No ideas of why the profile is not stored into the HashMap, could anyone find the problem from these two main related codes?"
32017390,1,0,0,java.util.HashMap,"No ideas of why the profile is not stored into the HashMap, could anyone find the problem from these two main related codes?"
32018016,1,0,0,java.util.HashMap,protected Map aggregations = new HashMap(); code.
32020549,1,0,0,java.util.HashMap,HashMap Concurrent Modification.
32020671,2,0,0,java.util.HashMap,"If you have multiple BukkitRunnable threads running, and they all have access to same HashMap, then it's advisable to use ConcurrentHashMap implementation for CheckAliveEntities."
32020987,2,1,1,java.util.HashMap,"To iterate through your ArrayList with HashMap and show the data on an AlertDialog, try something like: code."
32025287,1,0,1,java.util.HashMap,HashMap filled with String and other HashMap doesn't get populated.
32025287,1,0,1,java.util.HashMap,"So I'm trying to fill a HashMap> but when I debug I see that my HashMap ""gegevens"" fills without a problem but my main HashMap ""events"" doesn't."
32025287,1,0,1,java.util.HashMap,I'm filling my HashMap with JSON data but this works according to the debugger.
32025287,1,0,1,java.util.HashMap,It's only my events HashMap that stays empty.
32025287,1,0,1,java.util.HashMap,I don't see what I'm doing wrong but I'm pretty new and it's the first time that I use a HashMap inside a HashMap so I think there's a big chance my mistake lies over there.
32025287,1,0,1,java.util.HashMap,I have to be able to use the events HashMap in another class.
32025287,1,0,1,java.util.HashMap,I'm trying to pass my events HashMap to another frame.
32025287,1,0,1,java.util.HashMap,I did this by making a getter where I first let it execute the ReadJSONFeedTask() and than return the events HashMap like this: code.
32025287,1,0,1,java.util.HashMap,In my HomeFragment.java I'm trying to access the HashMap in the OnCreateView like this: code.
32026267,2,1,0,java.util.HashMap,There is nothing wrong with your HashMap.
32026267,2,1,0,java.util.HashMap,It's been a while since i used AsyncTask but if I remember correctly the reason you get an empty HashMap is because by the time the line return events; in your getEvents method is called your asynctask is not yet finished (the onPostExcecuteis not yet called).
32026267,2,1,0,java.util.HashMap,So the getEvents method will return the new HashMap events and not the filled HashMap.
32026267,2,1,0,java.util.HashMap,You have to tell your MainActivity when the asynctask is finished before you try to access the events HashMap.
32026267,2,1,0,java.util.HashMap,And create a doSomethingWithEvents() method in MainActivty where you use the (now filled) events HashMap.
32025782,2,0,0,java.util.HashMap,According to HashMap.put  there are no problems with HashMap.
32025782,2,0,0,java.util.HashMap,"Of course, you can add another HashMap to Map as you wrote in question."
32025564,2,0,0,java.util.HashMap,"But You said you want to use events HashMap in another class,How are you passing events HashMap to the other Class."
32029517,1,0,0,java.util.HashMap,How to make my ExpandableListView wait to load until my HashMap is populated?
32029517,1,0,0,java.util.HashMap,I use an ExpandableListView in android but the problem is that my code loads this before I get my HashMap populated and because of this it shows an empty ListView.
32029517,1,0,0,java.util.HashMap,The problem is that the data I use for my ExpandableListView comes from a JSON file which I put in HashMap in my MaintActivity.Java.
